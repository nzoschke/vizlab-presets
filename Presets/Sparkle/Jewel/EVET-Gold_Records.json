{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":5.552,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"x":0.8,"rad":0.24243,"tex_ang":1.88496,"tex_zoom":1.72851,"r":0.8,"g":1,"b":0.5,"a":0.6,"r2":0.9,"g2":0.9,"b2":1,"a2":0.3,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"x":0.13,"y":0.19,"rad":0.11045,"tex_ang":3.14159,"tex_zoom":1.71105,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"x":0.9,"rad":0.22613,"g":0.2,"b":0.2,"g2":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":36,"additive":1,"rad":0.18717,"r":0,"g":0.02,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":0.5033,"g":0.6,"b":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"\nx0 = .5 + .4 * sin(time/2);\n\nangle = rand(1000)/1000*6.28;\nrad =  rand(1000)/1000;\nrad = rad * rad;\n\nx = x0 + .1*rad*sin(angle);\ny = .5 + .1*rad*cos(angle);\n a = 1-rad;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\nx0 = .5 + .4 * sin(time/2);\n\nangle = rand(1000)/1000*6.28;\nrad =  rand(1000)/1000;\nrad = rad * rad;\n\nx = x0 + .1*rad*sin(angle);\ny = .5 + .1*rad*cos(angle);\n a = 1-rad;"},{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"trel = q11-.0;\nt1 = int(trel);\nt2 = trel - int(trel);","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"trel = q11-.0;\nt1 = int(trel);\nt2 = trel - int(trel);","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"trel = q11-.33;\nt1 = int(trel);\nt2 = trel - int(trel);","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"trel = q11-.33;\nt1 = int(trel);\nt2 = trel - int(trel);","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"trel = q11-.66;\nt1 = int(trel);\nt2 = trel - int(trel);","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"trel = q11-.66;\nt1 = int(trel);\nt2 = trel - int(trel);","point_eqs_eel":""}],"init_eqs_str":"a.index=0;a.q22=0;a.q21=0;a.q29=0;a.fade=0;a.dec_med=0;a.movz=0;a.movx=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q10=0;a.q26=0;a.p2=0;a.avg=0;a.beat=0;a.p1=0;a.peak=0;a.q27=0;a.p3=0;a.t0=0;a.q32=0;a.q28=0;a.q30=0;a.q20=0;a.q28=0;a.q29=0;a.p1=0;a.fade=.9;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;a.k1=a.is_beat*equal(a.index,0);a.p1=\na.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.rott=div(3.1416*a.p3,2);a.q27=a.index+1;a.movz+=div(.03,a.fps)*(1.5+Math.sin(a.rott));a.q29=a.movz;a.movx+=div(.03,a.fps)*(1+Math.sin(div(a.time,7)));a.q28=a.movx;a.q30=.5*(Math.sin(div(a.time,19))+1);a.q31=3*(Math.sin(div(a.time,23))+2);a.q32=Math.sin(div(a.time,17))+1;a.fade=a.fade*a.dec_med+.98*(1-a.dec_med);a.q10=a.fade;","pixel_eqs_str":"a.warp=.02;","init_eqs_eel":"q28 = 0; q29 = 0; p1= 0;\nfade = .9;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\n\np2 = dec_med * p2+ (1-dec_med)*p1;\np3 = dec_med * p3+ (1-dec_med)*p2;\nrott = p3 * 3.1416/2;\nq27 = index + 1;\n\nmovz = movz + .001*30/fps*(1.5+sin(rott));\nq29 = movz ;\n\n\nmovx = movx + .001*30/fps*(1+sin(time/7));\nq28 = movx;\n\n\nq30 = .5 * (sin(time/19)+1); \nq31 = 3*(sin(time/23)+2); \nq32 = sin(time/17)+1; \n\n\nfade = fade * dec_med + .98 * (1-dec_med);\nq10 = fade;","pixel_eqs_eel":"//rot = q1/10* (rad\nwarp = .02;","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv_orig - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = (((4.0 * \n    sqrt(dot (tmpvar_3, tmpvar_3))\n  ) + (time / 2.0)) + q22);\n  uv_1 = (uv_orig + (clamp (\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\n  , vec2(-8.0, -8.0), vec2(8.0, 8.0)) / 64.0));\n  uv6_2 = (tmpvar_3 * 2.0);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur1, \n      fract(uv_1)\n    ).xyz * scale1) + bias1) * 0.04))\n   + \n    (abs(vec3((0.2 / sqrt(\n      (uv6_2.y - ((q22 * 0.04) * sin((q22 * \n        ((8.0 * uv6_2.x) + time)\n      ))))\n    )))) * vec3(0.06, 0.0504, 0.036))\n  ) * 0.99) - 0.01);\n  ret = tmpvar_5.xyz;\n }","comp":"vec3 xlat_mutablenoise;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers;\n shader_body { \n  float z_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  float tmpvar_3;\n  tmpvar_3 = (0.4 / abs(tmpvar_2.y));\n  xlat_mutablers.x = (tmpvar_2.x * tmpvar_3);\n  float tmpvar_4;\n  tmpvar_4 = (time * 4.0);\n  xlat_mutablers.y = (tmpvar_3 + tmpvar_4);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_noise_lq, (xlat_mutablers / 28.0));\n  xlat_mutablenoise = (tmpvar_5.xyz * vec3(greaterThanEqual (tmpvar_5.xyz, vec3(0.84, 0.84, 0.84))));\n  xlat_mutableret1 = xlat_mutablenoise;\n  z_1 = (0.4 / abs(tmpvar_2.x));\n  xlat_mutablers.y = (tmpvar_2.y * z_1);\n  xlat_mutablers.x = (z_1 + tmpvar_4);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_pw_noise_lq, (xlat_mutablers / 28.0));\n  xlat_mutablenoise = (tmpvar_6.xyz * vec3(greaterThanEqual (tmpvar_6.xyz, vec3(0.84, 0.84, 0.84))));\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((texture (sampler_main, (uv + \n    (xlat_mutableret1 * 0.1)\n  .xy)).xyz * 1.5) - (0.1 * xlat_mutableret1));\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nuv = uv_orig;\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = 4*length(uv1)+time/2+q22;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += rs/64;\n\nuv6 = uv1*2;\nmus = .2/(sqrt(uv6.y-q22*.04*sin(q22*(8*uv6.x+time))));\nmus = abs(mus);\nmus *= float3 (1,.84,.6);\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.04 + .06*mus;\nret = ret1 * .99 -  .01 ;\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\n\nfloat2 rs;\nfloat3 noise, ret1;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = (uv-.5-.0*float2(q1,q2) );//*aspect.xy;\n//uv = mul(uv-.5,float2x2(_qa))+.5;\nfloat h1 = .4;\n\n\nfloat z = +h1/abs(uv1.y);\nrs.x = uv1.x * z;\nrs.y = z + time*4;\nnoise = tex2D(sampler_pw_noise_lq,rs/28);\nnoise *= (noise >= .84);\nret1 = noise;\n\n\nz = h1/abs(uv1.x);\nrs.y = uv1.y * z;\nrs.x = z + time*4;\nnoise = tex2D(sampler_pw_noise_lq,rs/28);\nnoise *= (noise >= .84);\nret1 += noise;\n\nret = GetPixel(uv+ret1*.1)*1.5 - .1*ret1;    \n}"}