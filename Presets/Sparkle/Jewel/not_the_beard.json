{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":4.1,"wave_scale":1.074,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"zoom":0.9901,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":6.4,"mv_y":43.2,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"scaling":1.0741,"smoothing":0},"init_eqs_str":"a.aa=0;a.vl=0;a.it=0;a.my=0;a.mod=0;a.mx=0;a.sp=0;a.bb=0;a.cc=0;","frame_eqs_str":"","point_eqs_str":"a.it=2*a.time;a.sp=a.sample+.1*a.it;a.vl=1+.5*(a.treb_att-.7);a.my=.5+.2*Math.sin(.932*a.time)*a.vl;a.mx=.5+.2*Math.cos(.932*a.time)*a.vl;a.mod=div(a.value1+a.value2,2);a.y=.5+a.sample*(a.my-.5)+a.mod;a.x=.5+a.sample*(a.mx-.5)+a.mod;a.aa=.6+.4*Math.sin(6.28*a.sp);a.bb=a.aa*(.6+.4*Math.sin(6.28*a.sp));a.cc=a.bb*(.6+.4*Math.sin(6.28*a.sp));a.r=a.aa;a.b=a.cc;a.g=a.bb;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = time*2;\nsp = sample + it*0.1;\n\nvl = 1 + 0.5*(treb_att-0.7);\n\nmy = 0.5 + 0.2*sin(time*0.932)*vl;\nmx = 0.5 + 0.2*cos(time*0.932)*vl;\n\nmod = (value1+value2)/2;\n\ny = 0.5 + sample*(my-0.5) + mod;\nx = 0.5 + sample*(mx-0.5) + mod;\n\naa = 0.6 + 0.4*sin(sp*6.28);\nbb = aa*(0.6 + 0.4*sin(sp*6.28));\ncc = bb*(0.6 + 0.4*sin(sp*6.28));\nr=aa;b=cc;g=bb;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"scaling":1.0741,"smoothing":0},"init_eqs_str":"a.aa=0;a.vl=0;a.it=0;a.my=0;a.mod=0;a.mx=0;a.sp=0;a.bb=0;a.cc=0;","frame_eqs_str":"","point_eqs_str":"a.it=2*a.time;a.sp=a.sample+.1*a.it;a.vl=1+.5*(a.mid_att-.7);a.my=.5+.2*Math.sin(.654*a.time)*a.vl;a.mx=.5+.2*Math.cos(.654*a.time)*a.vl;a.mod=div(a.value1+a.value2,2);a.y=.5+a.sample*(a.my-.5)+a.mod;a.x=.5+a.sample*(a.mx-.5)+a.mod;a.aa=.6+.4*Math.sin(6.28*a.sp);a.bb=a.aa*(.6+.4*Math.sin(6.28*a.sp));a.cc=a.bb*(.6+.4*Math.sin(6.28*a.sp));a.b=a.aa;a.g=a.bb;a.r=a.cc;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = time*2;\nsp = sample + it*0.1;\n\nvl = 1 + 0.5*(mid_att-0.7);\n\nmy = 0.5 + 0.2*sin(time*0.654)*vl;\nmx = 0.5 + 0.2*cos(time*0.654)*vl;\n\nmod = (value1+value2)/2;\n\ny = 0.5 + sample*(my-0.5) + mod;\nx = 0.5 + sample*(mx-0.5) + mod;\n\naa = 0.6 + 0.4*sin(sp*6.28);\nbb = aa*(0.6 + 0.4*sin(sp*6.28));\ncc = bb*(0.6 + 0.4*sin(sp*6.28));\nb=aa;g=bb;r=cc;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"scaling":1.0741,"smoothing":0},"init_eqs_str":"a.aa=0;a.vl=0;a.it=0;a.my=0;a.mod=0;a.mx=0;a.sp=0;a.bb=0;a.cc=0;","frame_eqs_str":"","point_eqs_str":"a.it=2*a.time;a.sp=a.sample+.1*a.it;a.vl=1+.5*(a.bass_att-.7);a.my=.5+.2*Math.sin(.378*a.time)*a.vl;a.mx=.5+.2*Math.cos(.378*a.time)*a.vl;a.mod=div(a.value1+a.value2,2);a.y=.5+a.sample*(a.my-.5)+a.mod;a.x=.5+a.sample*(a.mx-.5)+a.mod;a.aa=.6+.4*Math.sin(6.28*a.sp);a.bb=a.aa*(.6+.4*Math.sin(6.28*a.sp));a.cc=a.bb*(.6+.4*Math.sin(6.28*a.sp));a.r=a.aa;a.b=a.bb;a.g=a.cc;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = time*2;\nsp = sample + it*0.1;\n\nvl = 1 + 0.5*(bass_att-0.7);\n\nmy = 0.5 + 0.2*sin(time*0.378)*vl;\nmx = 0.5 + 0.2*cos(time*0.378)*vl;\n\nmod = (value1+value2)/2;\n\ny = 0.5 + sample*(my-0.5) + mod;\nx = 0.5 + sample*(mx-0.5) + mod;\n\naa = 0.6 + 0.4*sin(sp*6.28);\nbb = aa*(0.6 + 0.4*sin(sp*6.28));\ncc = bb*(0.6 + 0.4*sin(sp*6.28));\nr=aa;b=bb;g=cc;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.d=0;a.y3=0;a.y1=0;a.xx=0;a.q12=0;a.t1=0;a.x1=0;a.vx3=0;a.q13=0;a.q6=0;a.dt=0;a.q1=0;a.q5=0;a.q9=0;a.v=0;a.vx4=0;a.mm=0;a.tt=0;a.t3=0;a.bm=0;a.x3=0;a.q11=0;a.q10=0;a.xx2=0;a.q4=0;a.yy1=0;a.vy4=0;a.q26=0;a.x4=0;a.t=0;a.mt=0;a.r=0;a.x2=0;a.mx=0;a.mn=0;a.t2=0;a.vy2=0;a.y2=0;a.bb=0;a.q2=0;a.q27=0;a.vx2=0;a.q3=0;a.yy=0;a.y4=0;a.q7=0;a.vy3=0;a.xx1=0;a.q8=0;a.x1=.9;a.y1=.5;a.x2=.5;a.y2=.5;a.x3=.5;a.y3=.5;a.x4=.5;a.y4=.5;","frame_eqs_str":"a.zoom=1;a.warp=0;a.wave_a=0;a.xx1=.9*a.xx1+.01*a.bass;a.xx2=.9*a.xx2+.01*a.treb;a.yy1=.94*a.yy1+.0075*(a.treb+a.bass);a.x1=.5+2*(a.xx1-a.xx2);a.y1=.4+1.5*a.yy1;a.dt=div(.03,a.fps);a.vx2=a.vx2*(1-2*a.dt)+10*a.dt*(a.x1+a.x3-2*a.x2);a.vy2=a.vy2*(1-2*a.dt)+a.dt*(10*(a.y1+a.y3-2*a.y2)-.5);a.vx3=a.vx3*(1-2*a.dt)+10*a.dt*(a.x2+a.x4-2*a.x3);a.vy3=a.vy3*(1-2*a.dt)+a.dt*(10*(a.y2+a.y4-2*a.y3)-.5);a.vx4=a.vx4*(1-2*a.dt)+10*a.dt*(a.x3-a.x4);a.vy4=a.vy4*(1-2*a.dt)+a.dt*(10*(a.y3-a.y4)-\n.5);a.x2+=a.vx2;a.y2+=a.vy2;a.x3+=a.vx3;a.y3+=a.vy3;a.x4+=a.vx4;a.y4+=a.vy4;a.vx2=.00001<Math.abs(above(a.x2,0))?a.vx2:.5*Math.abs(a.vx2);a.vx2=.00001<Math.abs(below(a.x2,1))?a.vx2:.5*-Math.abs(a.vx2);a.vx3=.00001<Math.abs(above(a.x3,0))?a.vx3:.5*Math.abs(a.vx3);a.vx3=.00001<Math.abs(below(a.x3,1))?a.vx3:.5*-Math.abs(a.vx3);a.vx4=.00001<Math.abs(above(a.x4,0))?a.vx4:.5*Math.abs(a.vx4);a.vx4=.00001<Math.abs(below(a.x4,1))?a.vx4:.5*-Math.abs(a.vx4);a.vy2=.00001<Math.abs(above(a.y2,0))?a.vy2:.5*Math.abs(a.vy2);\na.vy2=.00001<Math.abs(below(a.y2,1))?a.vy2:.5*-Math.abs(a.vy2);a.vy3=.00001<Math.abs(above(a.y3,0))?a.vy3:.5*Math.abs(a.vy3);a.vy3=.00001<Math.abs(below(a.y3,1))?a.vy3:.5*-Math.abs(a.vy3);a.vy4=.00001<Math.abs(above(a.y4,0))?a.vy4:.5*Math.abs(a.vy4);a.vy4=.00001<Math.abs(below(a.y4,1))?a.vy4:.5*-Math.abs(a.vy4);a.q1=a.x1;a.q2=a.x2;a.q3=a.x3;a.q4=a.x4;a.q5=a.y1;a.q6=a.y2;a.q7=a.y3;a.q8=a.y4;a.q9=div(1,a.aspectx);a.q10=div(1,a.aspecty);a.q11=a.aspectx;a.q12=a.aspecty;a.t+=div(.4*(a.bass-1.5*a.treb_att+\n2),a.fps);a.q13=a.t;a.bb=.99*a.bb+.02*a.bass;a.mm=.99*a.mm+.02*a.mid;a.tt=.99*a.tt+.02*a.treb;a.mx=Math.max(Math.max(a.bb,a.mm),a.tt);a.mn=Math.min(Math.min(a.bb,a.mm),a.tt);a.t1=div(a.bb-a.mn,a.mx-a.mn);a.t2=div(a.mm-a.mn,a.mx-a.mn);a.t3=div(a.tt-a.mn,a.mx-a.mn);a.v=div(1,a.fps);a.bm+=(a.t1-a.t2)*a.v;a.mt+=(a.t2-a.t3)*a.v;a.q26=-a.bm;a.q27=a.mt;","pixel_eqs_str":"a.x=.5+(a.x-.5)*a.q11;a.y=.5+(a.y-.5)*a.q12;a.xx=a.q4;a.yy=1-a.q8;a.dx=0;a.dy=0;a.d=sqrt((a.x-a.xx)*(a.x-a.xx)+(a.y-a.yy)*(a.y-a.yy));a.r=.11;a.v=20;a.dx=a.v*(Math.sin(a.y-a.yy)*(a.d-a.r)-(a.x-a.xx)*(a.d-div(a.r,2)))*(1-sigmoid(a.d-a.r,100));a.dy=-a.v*(Math.sin(a.x-a.xx)*(a.d-a.r)+(a.y-a.yy)*(a.d-div(a.r,2)))*(1-sigmoid(a.d-a.r,100));","init_eqs_eel":"x1 = 0.9;\ny1 = 0.5;\n\nx2 = 0.5; y2 = 0.5;\nx3 = 0.5; y3 = 0.5;\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"zoom = 1;\nwarp = 0;\nwave_a = 0;\n\n// elastic thread code\n\nxx1 = xx1*0.9 + (bass)*0.01;\nxx2 = xx2*0.9 + (treb)*0.01;\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\nx1 = 0.5 + (xx1-xx2)*2;\ny1 = 0.4 + yy1*1.5;\ndt = 0.03/fps;\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\nx2 = x2 + vx2; y2 = y2 + vy2;\nx3 = x3 + vx3; y3 = y3 + vy3;\nx4 = x4 + vx4; y4 = y4 + vy4;\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\nq9 = 1/aspectx;\nq10 = 1/aspecty;\nq11 = aspectx;\nq12 = aspecty;\n\nt = t + (bass-treb_att*1.5+2)*0.4/fps;\nq13 =t;\n\n\nbb = bb*0.99 + bass*0.02;\nmm = mm*0.99 + mid*0.02;\ntt = tt*0.99 + treb*0.02;\n\nmx = max(max(bb,mm),tt);\nmn = min(min(bb,mm),tt);\n\nt1 = (bb-mn)/(mx-mn);\nt2 = (mm-mn)/(mx-mn);\nt3 = (tt-mn)/(mx-mn);\n\nv = 1/fps;\nbm = bm + (t1-t2)*v;\nmt = mt + (t2-t3)*v;\n\nq26 = -bm;\nq27 = mt;","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q11;\ny = 0.5 + (y-0.5)*q12;\nxx = q4;\nyy = 1-q8;\n\ndx = 0; dy = 0;\n\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\n\nr = 0.11;\nv = 20;\ndx = (v*(sin(y-yy)*(d-r)-(x-xx)*(d-r/2)))*(1.00-sigmoid(d-r,100));\ndy = (-v*(sin(x-xx)*(d-r)+(y-yy)*(d-r/2)))*(1.00-sigmoid(d-r,100));","warp":"vec2 xlat_mutableball;\nvec2 xlat_mutablers;\nvec2 xlat_mutableuv1;\n shader_body { \n  vec2 uv_1;\n  xlat_mutableuv1 = ((uv_orig - 0.5) * aspect.xy);\n  float tmpvar_2;\n  tmpvar_2 = ((18.0 * sqrt(\n    dot (xlat_mutableuv1, xlat_mutableuv1)\n  )) + time);\n  xlat_mutablers = (clamp ((\n    (sin(tmpvar_2) / cos(tmpvar_2))\n   * \n    normalize(xlat_mutableuv1)\n  ), vec2(-5.0, -5.0), vec2(5.0, 5.0)) / 2.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = q9;\n  tmpvar_3.y = q10;\n  xlat_mutableball = (xlat_mutableuv1 - tmpvar_3);\n  float tmpvar_4;\n  tmpvar_4 = clamp ((1.0 - (\n    sqrt(dot (xlat_mutableball, xlat_mutableball))\n   / 0.035)), 0.0, 1.0);\n  float tmpvar_5;\n  tmpvar_5 = float((tmpvar_4 >= 0.001));\n  xlat_mutablers = ((q28 * xlat_mutablers) + ((1.0 - q28) * xlat_mutablers.yx));\n  uv_1 = (uv_orig + ((\n    ((1.0 - tmpvar_5) * 0.03)\n   * xlat_mutablers.yx) + (\n    ((0.6 * tmpvar_5) * tmpvar_4)\n   * \n    normalize(xlat_mutableball)\n  )));\n  mat2 tmpvar_6;\n  tmpvar_6[uint(0)] = _qb.xy;\n  tmpvar_6[1u] = _qb.zw;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur1, \n      fract(uv_1)\n    ).xyz * scale1) + bias1) * 0.03))\n   + \n    (vec3(1.0, 0.84, 0.6) * ((0.08 * abs(vec3(\n      (0.12 / sqrt((xlat_mutableuv1 * tmpvar_6).x))\n    ))) - (tmpvar_4 * (0.2 + \n      (0.3 * slow_roam_cos.xyz)\n    ))))\n  ) * 0.9) - 0.018);\n  ret = tmpvar_7.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  vec2 uv2_2;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  float tmpvar_3;\n  tmpvar_3 = (0.02 * q27);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv_1 + 0.4)\n   + tmpvar_3)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, (\n    (uv_1 + 0.4)\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\n  uv2_2.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\n  uv2_2.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\n  uv2_2.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\n  uv2_2.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\n  uv2_2.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\n  uv2_2.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\n  uv2_2.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  uv2_2.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ((xlat_mutableret1 - 0.0125) * 0.85);\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"float3 mus;\nfloat2 rs,ball, uv1, uv6, uv7;\nfloat dx,dy;\nshader_body {\nuv = uv_orig;\nuv1 = (uv-.5) * aspect.xy;\n\n//GOLD\nfloat z = 18*length(uv1)+time;\nfloat2 uvn =normalize(uv1);\nrs = clamp(tan(z)*uvn,-5,5)/2;\n\n// KUGEL\nfloat2 p0 = float2(q9,q10);\nball = uv1 - p0;\nfloat size = .035;\nfloat dist = length(ball)  / size;\nz = saturate(1-dist);\n\n//ADD\nfloat mask = (z >= .001); \nrs = q28*rs + (1-q28)*rs.yx;\nuv += (1-mask)*.03*(rs.yx) + .6*mask*z*normalize(ball);\n\n\nuv6 = mul (uv1,float2x2(_qb));\nmus = (.12/(sqrt(uv6.x)));\nmus = .08*abs(mus) - z* (.2 + .3*slow_roam_cos.xyz);\n\nfloat3 gold = float3 (1,.84,.6); \n\n//float2 uv2 = .7*uv1+.3*float2 (sin(uv1.y*16), sin(uv1.x*16));\n//uv2 *= .2;\n//float3 dots = q26*saturate(.0015/(length(uv2)));\n\nfloat3 col = gold;\n\nfloat3 blur = GetBlur1(frac(uv));\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + col*(mus);\nret = ret1*.9-.018;\n}","comp_hlsl":"float3 ret1, neu, blur;\n\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nret1 = 0;\nint anz = 4;\nint n = 0;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    neu = GetPixel (uv2 + 0.4 + .02*q27 );\n    blur= GetBlur1 (uv2 + 0.4 + .02*q27 );\n    ret1 = max(ret1, neu+blur*2);\nn++;\n}\n\n\nret = (ret1-0.0125)*0.85;\n\n}"}