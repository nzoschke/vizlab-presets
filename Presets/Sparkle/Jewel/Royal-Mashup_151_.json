{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":1.97883,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.tex_zoom=div(1,a.rad);a.a=.7;a.a2=a.a;","init_eqs_eel":"","frame_eqs_eel":"tex_zoom = 1/rad;\n\na = .7;\na2 = a;"},{"baseVals":{"sides":54,"x":0.15,"y":0.39,"rad":0.04084,"r":0,"b":1,"r2":1,"g2":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"additive":1,"r":0,"g":0,"a":0.05},"init_eqs_str":"a.sw=0;a.t5=0;a.t1=0;a.it=0;a.q1=0;a.q5=0;a.ya=0;a.xd=0;a.t8=0;a.xc=0;a.t3=0;a.t6=0;a.ti=0;a.sa=0;a.yb=0;a.yd=0;a.q4=0;a.t7=0;a.xb=0;a.t2=0;a.xa=0;a.t4=0;a.yc=0;a.t1=.2+.0006*rand(1001);a.t2=.2+.0006*rand(1001);a.t3=.2+.0006*rand(1001);a.t4=.2+.0006*rand(1001);a.t5=.2+.0006*rand(1001);a.t6=.2+.0006*rand(1001);a.t7=.2+.0006*rand(1001);a.t8=.2+.0006*rand(1001);","frame_eqs_str":"","point_eqs_str":"a.ti=a.q1;a.xa=.25+.25*Math.sin(a.ti*a.t1);a.xb=.25+.25*Math.sin(a.ti*a.t2);a.xc=.25+.25*Math.sin(a.ti*a.t3);a.xd=.25+.25*Math.sin(a.ti*a.t4);a.ya=.25+.25*Math.sin(a.ti*a.t5);a.yb=.25+.25*Math.sin(a.ti*a.t6);a.yc=.25+.25*Math.sin(a.ti*a.t7);a.yd=.25+.25*Math.sin(a.ti*a.t8);a.it=(a.it+1)*above(a.sample,0);a.sw=(1-a.sw)*above(a.sample,0);a.sa=1-a.sample;a.x=.00001<Math.abs(a.sw)?a.xa*a.sample+a.sa*a.xb:a.xc*a.sample+a.xd*a.sa;a.y=.00001<Math.abs(a.sw)?a.ya*a.sample+a.sa*a.yb:\na.yc*a.sample+a.yd*a.sa;a.y=.5-a.y*(.5-a.x)*2;a.ti=a.q4;a.r=.5+.5*Math.sin(a.ti);a.g=.5+.5*Math.sin(a.ti+2.0944);a.b=.5+.5*Math.sin(a.ti+4.1888);a.a=a.q5;","init_eqs_eel":"t1 = .2 + .6*rand(1001)*.001;\nt2 = .2 + .6*rand(1001)*.001;\nt3 = .2 + .6*rand(1001)*.001;\nt4 = .2 + .6*rand(1001)*.001;\nt5 = .2 + .6*rand(1001)*.001;\nt6 = .2 + .6*rand(1001)*.001;\nt7 = .2 + .6*rand(1001)*.001;\nt8 = .2 + .6*rand(1001)*.001;","frame_eqs_eel":"","point_eqs_eel":"ti = q1;\n\nxa = .25 + .25*sin(ti*t1);\nxb = .25 + .25*sin(ti*t2);\nxc = .25 + .25*sin(ti*t3);\nxd = .25 + .25*sin(ti*t4);\n\nya = .25 + .25*sin(ti*t5);\nyb = .25 + .25*sin(ti*t6);\nyc = .25 + .25*sin(ti*t7);\nyd = .25 + .25*sin(ti*t8);\n\n\nit = (it + 1)*above(sample,0);\nsw = (1-sw)*above(sample,0);\n\nsa = 1-sample;\nx = if(sw,xa*sample + sa*xb,xc*sample + xd*sa);\ny = if(sw,ya*sample + sa*yb,yc*sample + yd*sa);\n\ny = .5 - y*(.5-x)*2;\n\n\nti = q4;\nr = .5 + .5*sin(ti);\ng = .5 + .5*sin(ti + 2.0944);\nb = .5 + .5*sin(ti + 4.1888);\n\na = q5;"},{"baseVals":{"enabled":1,"additive":1,"r":0,"b":0,"a":0.05},"init_eqs_str":"a.sw=0;a.t5=0;a.t1=0;a.q6=0;a.it=0;a.ya=0;a.xd=0;a.t8=0;a.xc=0;a.t3=0;a.t6=0;a.ti=0;a.sa=0;a.yb=0;a.yd=0;a.q4=0;a.t7=0;a.xb=0;a.t2=0;a.q2=0;a.xa=0;a.t4=0;a.yc=0;a.t1=.2+.0006*rand(1001);a.t2=.2+.0006*rand(1001);a.t3=.2+.0006*rand(1001);a.t4=.2+.0006*rand(1001);a.t5=.2+.0006*rand(1001);a.t6=.2+.0006*rand(1001);a.t7=.2+.0006*rand(1001);a.t8=.2+.0006*rand(1001);","frame_eqs_str":"","point_eqs_str":"a.ti=a.q2;a.xa=.25+.25*Math.sin(a.ti*a.t1);a.xb=.25+.25*Math.sin(a.ti*a.t2);a.xc=.25+.25*Math.sin(a.ti*a.t3);a.xd=.25+.25*Math.sin(a.ti*a.t4);a.ya=.25+.25*Math.sin(a.ti*a.t5);a.yb=.25+.25*Math.sin(a.ti*a.t6);a.yc=.25+.25*Math.sin(a.ti*a.t7);a.yd=.25+.25*Math.sin(a.ti*a.t8);a.it=(a.it+1)*above(a.sample,0);a.sw=(1-a.sw)*above(a.sample,0);a.sa=1-a.sample;a.x=.00001<Math.abs(a.sw)?a.xa*a.sample+a.sa*a.xb:a.xc*a.sample+a.xd*a.sa;a.y=.00001<Math.abs(a.sw)?a.ya*a.sample+a.sa*a.yb:\na.yc*a.sample+a.yd*a.sa;a.y=.5-a.y*(.5-a.x)*2;a.ti=a.q4+2.0944;a.r=.5+.5*Math.sin(a.ti);a.g=.5+.5*Math.sin(a.ti+2.0944);a.b=.5+.5*Math.sin(a.ti+4.1888);a.a=a.q6;","init_eqs_eel":"t1 = .2 + .6*rand(1001)*.001;\nt2 = .2 + .6*rand(1001)*.001;\nt3 = .2 + .6*rand(1001)*.001;\nt4 = .2 + .6*rand(1001)*.001;\nt5 = .2 + .6*rand(1001)*.001;\nt6 = .2 + .6*rand(1001)*.001;\nt7 = .2 + .6*rand(1001)*.001;\nt8 = .2 + .6*rand(1001)*.001;","frame_eqs_eel":"","point_eqs_eel":"ti = q2;\n\nxa = .25 + .25*sin(ti*t1);\nxb = .25 + .25*sin(ti*t2);\nxc = .25 + .25*sin(ti*t3);\nxd = .25 + .25*sin(ti*t4);\n\nya = .25 + .25*sin(ti*t5);\nyb = .25 + .25*sin(ti*t6);\nyc = .25 + .25*sin(ti*t7);\nyd = .25 + .25*sin(ti*t8);\n\n\nit = (it + 1)*above(sample,0);\nsw = (1-sw)*above(sample,0);\n\nsa = 1-sample;\nx = if(sw,xa*sample + sa*xb,xc*sample + xd*sa);\ny = if(sw,ya*sample + sa*yb,yc*sample + yd*sa);\n\ny = .5 - y*(.5-x)*2;\n\nti = q4 + 2.0944;\nr = .5 + .5*sin(ti);\ng = .5 + .5*sin(ti + 2.0944);\nb = .5 + .5*sin(ti + 4.1888);\n\na = q6;"},{"baseVals":{"enabled":1,"additive":1,"g":0,"b":0,"a":0.05},"init_eqs_str":"a.sw=0;a.t5=0;a.t1=0;a.it=0;a.ya=0;a.xd=0;a.t8=0;a.xc=0;a.t3=0;a.t6=0;a.ti=0;a.sa=0;a.yb=0;a.yd=0;a.q4=0;a.t7=0;a.xb=0;a.t2=0;a.q3=0;a.xa=0;a.t4=0;a.q7=0;a.yc=0;a.t1=.2+.0006*rand(1001);a.t2=.2+.0006*rand(1001);a.t3=.2+.0006*rand(1001);a.t4=.2+.0006*rand(1001);a.t5=.2+.0006*rand(1001);a.t6=.2+.0006*rand(1001);a.t7=.2+.0006*rand(1001);a.t8=.2+.0006*rand(1001);","frame_eqs_str":"","point_eqs_str":"a.ti=a.q3;a.xa=.25+.25*Math.sin(a.ti*a.t1);a.xb=.25+.25*Math.sin(a.ti*a.t2);a.xc=.25+.25*Math.sin(a.ti*a.t3);a.xd=.25+.25*Math.sin(a.ti*a.t4);a.ya=.25+.25*Math.sin(a.ti*a.t5);a.yb=.25+.25*Math.sin(a.ti*a.t6);a.yc=.25+.25*Math.sin(a.ti*a.t7);a.yd=.25+.25*Math.sin(a.ti*a.t8);a.it=(a.it+1)*above(a.sample,0);a.sw=(1-a.sw)*above(a.sample,0);a.sa=1-a.sample;a.x=.00001<Math.abs(a.sw)?a.xa*a.sample+a.sa*a.xb:a.xc*a.sample+a.xd*a.sa;a.y=.00001<Math.abs(a.sw)?a.ya*a.sample+a.sa*a.yb:\na.yc*a.sample+a.yd*a.sa;a.y=.5-a.y*(.5-a.x)*2;a.ti=a.q4+4.1888;a.r=.5+.5*Math.sin(a.ti);a.g=.5+.5*Math.sin(a.ti+2.0944);a.b=.5+.5*Math.sin(a.ti+4.1888);a.a=a.q7;","init_eqs_eel":"t1 = .2 + .6*rand(1001)*.001;\nt2 = .2 + .6*rand(1001)*.001;\nt3 = .2 + .6*rand(1001)*.001;\nt4 = .2 + .6*rand(1001)*.001;\nt5 = .2 + .6*rand(1001)*.001;\nt6 = .2 + .6*rand(1001)*.001;\nt7 = .2 + .6*rand(1001)*.001;\nt8 = .2 + .6*rand(1001)*.001;","frame_eqs_eel":"","point_eqs_eel":"ti = q3;\n\nxa = .25 + .25*sin(ti*t1);\nxb = .25 + .25*sin(ti*t2);\nxc = .25 + .25*sin(ti*t3);\nxd = .25 + .25*sin(ti*t4);\n\nya = .25 + .25*sin(ti*t5);\nyb = .25 + .25*sin(ti*t6);\nyc = .25 + .25*sin(ti*t7);\nyd = .25 + .25*sin(ti*t8);\n\n\nit = (it + 1)*above(sample,0);\nsw = (1-sw)*above(sample,0);\n\nsa = 1-sample;\nx = if(sw,xa*sample + sa*xb,xc*sample + xd*sa);\ny = if(sw,ya*sample + sa*yb,yc*sample + yd*sa);\n\ny = .5 - y*(.5-x)*2;\n\nti = q4 + 4.1888;\nr = .5 + .5*sin(ti);\ng = .5 + .5*sin(ti + 2.0944);\nb = .5 + .5*sin(ti + 4.1888);\na = q7;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.index2=0;a.sw=0;a.q25=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.q6=0;a.q1=0;a.mq31=0;a.dec_med=0;a.q5=0;a.index3=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.rott=0;a.mq23=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.atime=0;a.q4=0;a.k2=0;a.q26=0;a.p2=0;a.avg=0;a.rota=0;a.movez=0;a.mq27=0;a.mq25=0;a.mq22=0;a.beat=0;a.vol=0;a.p1=0;a.peak=0;a.mq26=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q32=0;a.q7=0;a.q28=0;a.q30=0;a.v2=0;a.q20=0;a.q8=0;a.vol=0;a.p1=\n0;a.vx=.2;a.vy=-.1;a.kx=0;a.ky=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q1=.4+.4*Math.sin(.006*a.atime);a.q2=.4+.4*Math.cos(.00613828348*a.atime);a.q3=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q3;a.dec_med=pow(.96,\ndiv(30,a.fps));a.dec_slow=pow(.98,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),2);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),2);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=\na.is_beat;a.vol=a.bass_att+a.treb_att;a.v2=a.v2*a.dec_slow+a.vol*(1-a.dec_slow);a.q26=Math.max(Math.atan(a.vol-.8*a.v2),.3);a.q27=a.index+1;a.sw=a.sw*a.dec_med+(1-a.dec_med)*mod(a.index2,2);a.q28=a.sw;a.k1=a.is_beat*bnot(20*a.index);a.k2=a.is_beat*bnot(a.index);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_slow*a.p2+(1-a.dec_slow)*a.p1;a.rott=div(3.1416*a.p2,2);a.monitor=a.k1;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q5=Math.cos(div(a.time,6));a.q6=-Math.sin(div(a.time,6));\na.q7=-a.q6;a.q8=a.q5;a.zoom=1;a.rot=-0;a.movez+=div(.18*(a.q1+1.1),a.fps);a.q29=a.movez;a.rota+=div(.09*(2-a.q1),a.fps);a.q30=a.rota;a.q31=2+16*Math.abs(Math.cos(div(a.time,18)));a.q32=div(Math.cos(div(a.time,23)),4);a.q32=a.aspecty;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q8=.01*a.atime;a.q1=1.5*a.vol;a.q23=.1*a.atime;","pixel_eqs_str":"","init_eqs_eel":"vol = 0; p1 = 0;\nvx = .2; vy = -0.1;\nkx = 0; ky = 0;","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq1=.4+sin(atime*.006        )*.4;\nq2=.4+cos(atime*.00613828348)*.4;\nq3=.4+sin(atime*.00598593455)*.4;\nmonitor=q3;\n\ndec_med = pow (0.96, 30/fps);\ndec_slow = pow (0.98, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%2;\nindex3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\n\nvol = bass_att + treb_att;\nv2 = v2 * dec_slow + vol * (1-dec_slow) ;\nq26 = max(atan (vol - v2*.8),.3);\n\nq27 = index + 1;\n\nsw = sw*dec_med + (1-dec_med)*(index2%2);\nq28 = sw;\n\nk1 =  is_beat*bnot(index*20);\nk2 =  is_beat*bnot(index);\n\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_slow * p2+ (1-dec_slow)*p1;\nrott = p2 * 3.1416/2;\nmonitor = k1;\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n\nq5 = cos(time/6);\nq6 = -sin(time/6);\nq7 = -q6;\nq8 = q5;\n\nzoom = 1;\nrot = -0;\n\nmovez = movez + .006*(q1+1.1)*30/fps;\nq29 = movez;\nrota = rota + .003*(2-q1)*30/fps;\nq30 = rota;\nq31 = 2 + 16*abs(cos(time/18));\nq32 = cos(time/23)/4;\n\n\n\nq32=aspecty;\nvol=bass+treb+mid;\natime=atime+vol;\nq8=atime*.01;\nq1=vol*1.5;\nq23=atime*.1;","pixel_eqs_eel":"","warp":"vec2 xlat_mutablers;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv6;\n shader_body { \n  vec2 uv_1;\n  vec3 xlat_varmod_2;\n  vec2 uv2_3;\n  float ang2_4;\n  float dist_5;\n  float z_6;\n  vec3 ret_7;\n  uv_1 = uv_orig;\n  xlat_mutableuv1 = ((uv_orig - 0.5) * aspect.xy);\n  float tmpvar_8;\n  tmpvar_8 = ((16.0 * sqrt(\n    dot (xlat_mutableuv1, xlat_mutableuv1)\n  )) + time);\n  z_6 = tmpvar_8;\n  xlat_mutablers = (clamp ((\n    (sin(tmpvar_8) / cos(tmpvar_8))\n   * \n    normalize(xlat_mutableuv1)\n  ), vec2(-5.0, -5.0), vec2(5.0, 5.0)) / 2.0);\n  vec2 tmpvar_9;\n  tmpvar_9 = sin((xlat_mutableuv1 * q31));\n  dist_5 = (sqrt(dot (tmpvar_9, tmpvar_9)) * ((\n    abs(xlat_mutableuv1.x)\n   + \n    abs(xlat_mutableuv1.y)\n  ) + q32));\n  float tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = (min (abs(\n    (tmpvar_9.y / tmpvar_9.x)\n  ), 1.0) / max (abs(\n    (tmpvar_9.y / tmpvar_9.x)\n  ), 1.0));\n  float tmpvar_12;\n  tmpvar_12 = (tmpvar_11 * tmpvar_11);\n  tmpvar_12 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_12) + 0.05368138) * tmpvar_12) - 0.1173503)\n     * tmpvar_12) + 0.1938925) * tmpvar_12) - 0.3326756)\n   * tmpvar_12) + 0.9999793) * tmpvar_11);\n  tmpvar_12 = (tmpvar_12 + (float(\n    (abs((tmpvar_9.y / tmpvar_9.x)) > 1.0)\n  ) * (\n    (tmpvar_12 * -2.0)\n   + 1.570796)));\n  tmpvar_10 = (tmpvar_12 * sign((tmpvar_9.y / tmpvar_9.x)));\n  if ((abs(tmpvar_9.x) > (1e-08 * abs(tmpvar_9.y)))) {\n    if ((tmpvar_9.x < 0.0)) {\n      if ((tmpvar_9.y >= 0.0)) {\n        tmpvar_10 += 3.141593;\n      } else {\n        tmpvar_10 = (tmpvar_10 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_10 = (sign(tmpvar_9.y) * 1.570796);\n  };\n  ang2_4 = (0.1 * floor((16.0 * tmpvar_10)));\n  vec2 tmpvar_13;\n  tmpvar_13.x = cos(ang2_4);\n  tmpvar_13.y = sin(ang2_4);\n  z_6 = (1.0 - cos((8.0 * dist_5)));\n  float tmpvar_14;\n  tmpvar_14 = clamp (z_6, 0.0, 1.0);\n  z_6 = tmpvar_14;\n  float tmpvar_15;\n  tmpvar_15 = float((tmpvar_14 >= 0.5));\n  xlat_mutablers = ((q28 * xlat_mutablers) + ((1.0 - q28) * xlat_mutablers.yx));\n  uv_1 = (uv_orig + ((\n    ((1.0 - tmpvar_15) * 0.03)\n   * xlat_mutablers.yx) + (\n    ((0.5 * tmpvar_15) * tmpvar_14)\n   * \n    normalize(((0.5 * tmpvar_9) + tmpvar_13))\n  )));\n  mat2 tmpvar_16;\n  tmpvar_16[uint(0)] = _qb.xy;\n  tmpvar_16[1u] = _qb.zw;\n  xlat_mutableuv6 = (xlat_mutableuv1 * tmpvar_16);\n  vec2 tmpvar_17;\n  tmpvar_17.x = q5;\n  tmpvar_17.y = q6;\n  uv2_3 = (((0.7 * xlat_mutableuv1) + (0.3 * \n    sin(((xlat_mutableuv1 * 16.0) + (4.0 * tmpvar_17)))\n  )) * 0.2);\n  vec4 tmpvar_18;\n  tmpvar_18 = texture (sampler_main, uv_1);\n  vec3 tmpvar_19;\n  tmpvar_19 = ((tmpvar_18.xyz + vec3((\n    abs((0.01 / (sqrt(xlat_mutableuv6.x) + 0.001)))\n   * \n    (rad + 0.2)\n  ))) + vec3((q26 * clamp (\n    (0.001 / sqrt(dot (uv2_3, uv2_3)))\n  , 0.0, 1.0))));\n  xlat_varmod_2 = (1.0 - ((texture (sampler_noise_lq, \n    ((0.5 * uv_1) + (time * 0.01))\n  ) - 0.2).xyz * (tmpvar_18.xyz - \n    (0.5 * ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1))\n  )));\n  ret_7 = (((\n    (1.0 - tmpvar_15)\n   * tmpvar_19) * xlat_varmod_2) + ((tmpvar_15 * tmpvar_19) * xlat_varmod_2));\n  ret_7 = ((ret_7 * 0.98) - 0.03);\n  vec4 tmpvar_20;\n  tmpvar_20.w = 1.0;\n  tmpvar_20.xyz = ret_7;\n  ret = tmpvar_20.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  float ang2_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = cos(q30);\n  float tmpvar_6;\n  tmpvar_6 = sin(q30);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_5) - (uv_1.y * tmpvar_6));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_6) + (uv_1.y * tmpvar_5));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  dist_3 = (1.0 - fract(q29));\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\n  xlat_mutableblur = (((texture (sampler_blur1, \n    fract(xlat_mutableuv3)\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\n  ang2_4 = (2.093333 + q30);\n  float tmpvar_7;\n  tmpvar_7 = cos(ang2_4);\n  float tmpvar_8;\n  tmpvar_8 = sin(ang2_4);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_7) - (uv_1.y * tmpvar_8));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_8) + (uv_1.y * tmpvar_7));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  dist_3 = (1.0 - fract((0.3333333 + q29)));\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\n  xlat_mutableblur = (((texture (sampler_blur1, \n    fract(xlat_mutableuv3)\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\n  ang2_4 = (4.186667 + q30);\n  float tmpvar_9;\n  tmpvar_9 = cos(ang2_4);\n  float tmpvar_10;\n  tmpvar_10 = sin(ang2_4);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  dist_3 = (1.0 - fract((0.6666667 + q29)));\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\n  xlat_mutableblur = (((texture (sampler_blur1, \n    fract(xlat_mutableuv3)\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\n  ang2_4 = (6.28 + q30);\n  float tmpvar_11;\n  tmpvar_11 = cos(ang2_4);\n  float tmpvar_12;\n  tmpvar_12 = sin(ang2_4);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_11) - (uv_1.y * tmpvar_12));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_12) + (uv_1.y * tmpvar_11));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  dist_3 = (1.0 - fract((1.0 + q29)));\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\n  xlat_mutableblur = (((texture (sampler_blur1, \n    fract(xlat_mutableuv3)\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = (xlat_mutableret1 - 0.1);\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"float3 mus;\nfloat2 rs, uv1, uv6, uv7, uv8;\nfloat dx,dy;\nshader_body {\nuv = uv_orig;\nuv1 = (uv-.5) * aspect.xy;\n\n//BACKGROUND\nfloat z = 16*length(uv1)+time;\nfloat2 uvn =normalize(uv1);\nrs = clamp(tan(z)*uvn,-5,5)/2;\n\n//CRYSTAL\nfloat mult = q31;\nuv7 = sin(uv1*mult);\nuv8 = uv7;\nfloat dist = length(uv8);\ndist *= (abs(uv1.x) + abs(uv1.y))+ q32;\n\nfloat ang2 = atan2 (uv8.y,uv8.x);\nang2 =  .1*floor (16* ang2);\nfloat2 dir = .5*uv8+float2 (cos(ang2), sin(ang2));\n\n\nz = (1-cos(8*dist));\nz = saturate (z);\n\n//ADD\nfloat mask = (z >= .5); //momentan beliebig\nrs = q28*rs + (1-q28)*rs.yx;\nuv += (1-mask)*.03*(rs.yx) + .5*mask*z*normalize(dir);\n\n//ZENTRALSTRAHL\nuv6 = mul (uv1,float2x2(_qb));\nmus = abs(0.01/(sqrt(uv6.x)+.001))*(rad+.2);\n\n//DOTS\nfloat2 uv2 = .7*uv1+.3*sin(uv1*16+4*float2 (q5,q6));\nuv2 *= .2;\nfloat3 dots = q26*saturate(.001/(length(uv2)));\nfloat3 blur = GetBlur1(frac(uv));\nfloat3 crisp= GetPixel(uv);\nfloat3 diff = (crisp) - .5*blur;\nfloat3 ret1 = crisp + mus + dots;\n\nfloat3 mod = tex2D (sampler_noise_lq,.5*uv+time*.01)-.2;\nmod = 1 - mod*diff;\n\nret = (1-mask)*ret1*mod + mask*ret1*mod;\nret = ret *.98- .03;\n\n}","comp_hlsl":"float3 ret1, neu, crisp, blur;\nfloat2 uv2, uv3;\n\nshader_body\n{\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nfloat dist = 1;\nfloat inten = 1;\nfloat mask = 0;\nret1 = 0;\nint anz = 3;\nfloat n = 0;\nfloat t_rel = q29;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz+q30;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    uv2*= aspect.yx;\n\n    dist = 1-frac(n/anz+t_rel); //evtl sqrt !\n\n    inten =  4*dist*(1-dist*dist);\n    uv3 = 3*uv2*dist + 0.5+.0*float2(q5,q6);\n    crisp = GetPixel(uv3);\n    blur = GetBlur1(frac(uv3)) * float3 (.8,.9,1);\n    ret1 = max(ret1,(crisp+blur)*inten);\nn++;\n}\n\n\nfloat3 ret1 = ret1 ;\n//ret1 = GetPixel(.5+uv_orig*aspect.yx*1.2);\n\n\nret = ret1-.1;\n\n}"}