{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.008,"echo_alpha":0.5,"echo_orient":3,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":4.1,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_x":0.1,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.33004,"tex_zoom":1.22019,"border_a":0},"init_eqs_str":"a.s=0;a.f=0;a.q=0;a.gg=0;a.p=0;a.vola=0;a.volb=0;a.t=0;a.l=0;a.bb=0;a.h=0;a.m=0;a.monitor=0;a.rr=0;a.cc=0;","frame_eqs_str":"a.vola=.1*(a.bass+a.mid+a.treb);a.volb=.3*a.treb;a.h=.45*Math.sin(.1*(a.time+20))+.45;a.s=Math.min(a.volb,.9);a.l=Math.min(a.vola,.9);a.monitor=a.h;a.cc=mod(6*a.h,6);a.f=6*a.h-a.cc;a.m=a.l;a.p=a.l*(1-a.s);a.q=a.l*(1-a.s*a.f);a.t=a.l*(1-a.s*(1-a.f));a.rr=.00001<Math.abs(equal(a.cc,0))?a.m:.00001<Math.abs(equal(a.cc,1))?a.q:.00001<Math.abs(equal(a.cc,2))?a.p:.00001<Math.abs(equal(a.cc,3))?a.p:.00001<Math.abs(equal(a.cc,4))?a.t:a.m;a.gg=.00001<Math.abs(equal(a.cc,0))?a.t:.00001<\nMath.abs(equal(a.cc,1))?a.m:.00001<Math.abs(equal(a.cc,2))?a.m:.00001<Math.abs(equal(a.cc,3))?a.q:(equal(a.cc,4),a.p);a.bb=.00001<Math.abs(equal(a.cc,0))?a.p:.00001<Math.abs(equal(a.cc,1))?a.p:.00001<Math.abs(equal(a.cc,2))?a.t:.00001<Math.abs(equal(a.cc,3))?a.m:.00001<Math.abs(equal(a.cc,4))?a.m:a.q;a.r=a.rr;a.g=a.gg;a.b=a.bb;a.r2=a.rr;a.g2=a.gg;a.b2=a.bb;a.x=.4*(.4*Math.cos(a.time)+.4+.2*Math.sin(.3*a.time))+.4;a.y=.4*(.4*Math.sin(a.time)+.4+.2*Math.sin(.5*a.time))+.4;","init_eqs_eel":"","frame_eqs_eel":"\nvolA=(bass+mid+treb)*.1;\nvolB=treb*.3;\n\nh=sin((time+20)*.1)*.45+.45;\ns=min(volB,.9);\nl=min(volA,.9);\nmonitor=h;\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//\n//                            HSL to RGB  by PieturP\n//\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\n//\ncc=6*h%6;f=6*h-cc;m=l;p=l*(1-s);q=l*(1-s*f);t=l*(1-s*(1-f));\nrr=if(equal(cc,0),m,if(equal(cc,1),q,if(equal(cc,2),p,if(equal(cc,3),p,if(equal(cc,4),t,m)))));\ngg=if(equal(cc,0),t,if(equal(cc,1),m,if(equal(cc,2),m,if(equal(cc,3),q,if(equal(cc,4),p,p)))));\nbb=if(equal(cc,0),p,if(equal(cc,1),p,if(equal(cc,2),t,if(equal(cc,3),m,if(equal(cc,4),m,q)))));\n///////////////////////////////////////////////////////////////////////////////////////////////\nr=rr;\ng=gg;\nb=bb;\nr2=rr;\ng2=gg;\nb2=bb;\nx=((cos(time)*.4+.4)+sin(time*.3)*.2)*.4+.4;\ny=((sin(time)*.4+.4)+sin(time*.5)*.2)*.4+.4;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.36457,"border_a":0.02},"init_eqs_str":"a.s=0;a.f=0;a.q=0;a.gg=0;a.p=0;a.vola=0;a.volb=0;a.t=0;a.l=0;a.bb=0;a.h=0;a.m=0;a.monitor=0;a.rr=0;a.cc=0;","frame_eqs_str":"a.vola=.1*(a.bass+a.mid+a.treb);a.volb=.3*a.treb;a.h=.45*Math.sin(.1*(a.time+10))+.45;a.s=Math.min(a.volb,.9);a.l=Math.min(a.vola,.9);a.monitor=a.h;a.cc=mod(6*a.h,6);a.f=6*a.h-a.cc;a.m=a.l;a.p=a.l*(1-a.s);a.q=a.l*(1-a.s*a.f);a.t=a.l*(1-a.s*(1-a.f));a.rr=.00001<Math.abs(equal(a.cc,0))?a.m:.00001<Math.abs(equal(a.cc,1))?a.q:.00001<Math.abs(equal(a.cc,2))?a.p:.00001<Math.abs(equal(a.cc,3))?a.p:.00001<Math.abs(equal(a.cc,4))?a.t:a.m;a.gg=.00001<Math.abs(equal(a.cc,0))?a.t:.00001<\nMath.abs(equal(a.cc,1))?a.m:.00001<Math.abs(equal(a.cc,2))?a.m:.00001<Math.abs(equal(a.cc,3))?a.q:(equal(a.cc,4),a.p);a.bb=.00001<Math.abs(equal(a.cc,0))?a.p:.00001<Math.abs(equal(a.cc,1))?a.p:.00001<Math.abs(equal(a.cc,2))?a.t:.00001<Math.abs(equal(a.cc,3))?a.m:.00001<Math.abs(equal(a.cc,4))?a.m:a.q;a.r=a.rr;a.g=a.gg;a.b=a.bb;a.r2=a.rr;a.g2=a.gg;a.b2=a.bb;a.y=.4*(.4*Math.cos(a.time)+.4+.2*Math.sin(.3*a.time))+.4;a.x=.4*(.4*Math.sin(a.time)+.4+.2*Math.sin(.5*a.time))+.4;a.border_r=a.rr;a.border_g=\na.gg;a.border_b=a.bb;a.ang=a.time;a.rad=.5*Math.sin(a.time)+.5;","init_eqs_eel":"","frame_eqs_eel":"volA=(bass+mid+treb)*.1;\nvolB=treb*.3;\n\nh=sin((time+10)*.1)*.45+.45;\ns=min(volB,.9);\nl=min(volA,.9);\nmonitor=h;\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//\n//                            HSL to RGB  by PieturP\n//\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\n//\ncc=6*h%6;f=6*h-cc;m=l;p=l*(1-s);q=l*(1-s*f);t=l*(1-s*(1-f));\nrr=if(equal(cc,0),m,if(equal(cc,1),q,if(equal(cc,2),p,if(equal(cc,3),p,if(equal(cc,4),t,m)))));\ngg=if(equal(cc,0),t,if(equal(cc,1),m,if(equal(cc,2),m,if(equal(cc,3),q,if(equal(cc,4),p,p)))));\nbb=if(equal(cc,0),p,if(equal(cc,1),p,if(equal(cc,2),t,if(equal(cc,3),m,if(equal(cc,4),m,q)))));\n///////////////////////////////////////////////////////////////////////////////////////////////\nr=rr;\ng=gg;\nb=bb;\nr2=rr;\ng2=gg;\nb2=bb;\ny=((cos(time)*.4+.4)+sin(time*.3)*.2)*.4+.4;\nx=((sin(time)*.4+.4)+sin(time*.5)*.2)*.4+.4;\nborder_r=rr;\nborder_g=gg;\nborder_b=bb;\nang=time;\nrad=sin(time)*.5+.5;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.36457,"border_a":0.02},"init_eqs_str":"a.s=0;a.f=0;a.q=0;a.gg=0;a.p=0;a.vola=0;a.volb=0;a.t=0;a.l=0;a.bb=0;a.h=0;a.m=0;a.monitor=0;a.rr=0;a.cc=0;","frame_eqs_str":"a.vola=.1*(a.bass+a.mid+a.treb);a.volb=.3*a.treb;a.h=.45*Math.sin(.1*(a.time+30))+.45;a.s=Math.min(a.volb,.9);a.l=Math.min(a.vola,.9);a.monitor=a.h;a.cc=mod(6*a.h,6);a.f=6*a.h-a.cc;a.m=a.l;a.p=a.l*(1-a.s);a.q=a.l*(1-a.s*a.f);a.t=a.l*(1-a.s*(1-a.f));a.rr=.00001<Math.abs(equal(a.cc,0))?a.m:.00001<Math.abs(equal(a.cc,1))?a.q:.00001<Math.abs(equal(a.cc,2))?a.p:.00001<Math.abs(equal(a.cc,3))?a.p:.00001<Math.abs(equal(a.cc,4))?a.t:a.m;a.gg=.00001<Math.abs(equal(a.cc,0))?a.t:.00001<\nMath.abs(equal(a.cc,1))?a.m:.00001<Math.abs(equal(a.cc,2))?a.m:.00001<Math.abs(equal(a.cc,3))?a.q:(equal(a.cc,4),a.p);a.bb=.00001<Math.abs(equal(a.cc,0))?a.p:.00001<Math.abs(equal(a.cc,1))?a.p:.00001<Math.abs(equal(a.cc,2))?a.t:.00001<Math.abs(equal(a.cc,3))?a.m:.00001<Math.abs(equal(a.cc,4))?a.m:a.q;a.r=a.rr;a.g=a.gg;a.b=a.bb;a.r2=a.rr;a.g2=a.gg;a.b2=a.bb;a.y=.4*(.53*Math.cos(a.time)+.4+.2*Math.sin(.32*a.time))+.4;a.x=.4*(.5*Math.sin(a.time)+.4+.2*Math.sin(.45*a.time))+.4;a.border_r=a.rr;a.border_g=\na.gg;a.border_b=a.bb;a.ang=a.time;","init_eqs_eel":"","frame_eqs_eel":"volA=(bass+mid+treb)*.1;\nvolB=treb*.3;\n\nh=sin((time+30)*.1)*.45+.45;\ns=min(volB,.9);\nl=min(volA,.9);\nmonitor=h;\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//\n//                            HSL to RGB  by PieturP\n//\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\n//\ncc=6*h%6;f=6*h-cc;m=l;p=l*(1-s);q=l*(1-s*f);t=l*(1-s*(1-f));\nrr=if(equal(cc,0),m,if(equal(cc,1),q,if(equal(cc,2),p,if(equal(cc,3),p,if(equal(cc,4),t,m)))));\ngg=if(equal(cc,0),t,if(equal(cc,1),m,if(equal(cc,2),m,if(equal(cc,3),q,if(equal(cc,4),p,p)))));\nbb=if(equal(cc,0),p,if(equal(cc,1),p,if(equal(cc,2),t,if(equal(cc,3),m,if(equal(cc,4),m,q)))));\n///////////////////////////////////////////////////////////////////////////////////////////////\nr=rr;\ng=gg;\nb=bb;\nr2=rr;\ng2=gg;\nb2=bb;\ny=((cos(time)*.53+.4)+sin(time*.32)*.2)*.4+.4;\nx=((sin(time)*.5+.4)+sin(time*.45)*.2)*.4+.4;\nborder_r=rr;\nborder_g=gg;\nborder_b=bb;\nang=time;\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\nvolA=(bass_att+mid_att+treb_att)*.1;\nvolB=treb_att*.3;\n\nh=sin(time*.1)*.45+.45;\ns=min(volB,.9);\nl=min(volA,.9);\nmonitor=h;\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//\n//                            HSL to RGB  by PieturP\n//\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\n//\ncc=6*h%6;f=6*h-cc;m=l;p=l*(1-s);q=l*(1-s*f);t=l*(1-s*(1-f));\nrr=if(equal(cc,0),m,if(equal(cc,1),q,if(equal(cc,2),p,if(equal(cc,3),p,if(equal(cc,4),t,m)))));\ngg=if(equal(cc,0),t,if(equal(cc,1),m,if(equal(cc,2),m,if(equal(cc,3),q,if(equal(cc,4),p,p)))));\nbb=if(equal(cc,0),p,if(equal(cc,1),p,if(equal(cc,2),t,if(equal(cc,3),m,if(equal(cc,4),m,q)))));\n///////////////////////////////////////////////////////////////////////////////////////////////\nr=rr;\ng=gg;\nb=bb;","point_eqs_str":"x=sample;\ny=value1;","init_eqs_eel":"","frame_eqs_eel":"\nvolA=(bass_att+mid_att+treb_att)*.1;\nvolB=treb_att*.3;\n\nh=sin(time*.1)*.45+.45;\ns=min(volB,.9);\nl=min(volA,.9);\nmonitor=h;\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//\n//                            HSL to RGB  by PieturP\n//\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\n//\ncc=6*h%6;f=6*h-cc;m=l;p=l*(1-s);q=l*(1-s*f);t=l*(1-s*(1-f));\nrr=if(equal(cc,0),m,if(equal(cc,1),q,if(equal(cc,2),p,if(equal(cc,3),p,if(equal(cc,4),t,m)))));\ngg=if(equal(cc,0),t,if(equal(cc,1),m,if(equal(cc,2),m,if(equal(cc,3),q,if(equal(cc,4),p,p)))));\nbb=if(equal(cc,0),p,if(equal(cc,1),p,if(equal(cc,2),t,if(equal(cc,3),m,if(equal(cc,4),m,q)))));\n///////////////////////////////////////////////////////////////////////////////////////////////\nr=rr;\ng=gg;\nb=bb;","point_eqs_eel":"x=sample;\ny=value1;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.d=0;a.zz=0;a.zd=0;","frame_eqs_str":"a.d=mod(a.frame,3E3);a.decay=.95*above(a.d,0);a.wave_a=0;a.monitor=a.d;a.zoom=.982;a.rot=.1*Math.sin(.33*a.time)+.1;a.zz=above(a.bass_att,1.3)+.975*a.zz;a.zd=.05*a.zz;a.zd=Math.min(a.zd,.5);a.echo_alpha=a.zd;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"d=frame%3000;\ndecay=above(d,0)*.95;\nwave_a=0;\nmonitor=d;\n\n\nzoom=.982;\nrot=sin(time*.33)*.1+.1;\n\nzz=above(bass_att,1.3)+zz*.975;\nzd=zz*.05;\nzd=min(zd,.5);\necho_alpha=zd;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + ((0.004 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ).xy * vec2(0.0, 1.0)));\n  uv6_2 = (0.4 * sin((\n    (((uv - 0.5) * aspect.xy) * 18.0)\n   * rand_frame.xy)));\n  vec3 tmpvar_3;\n  tmpvar_3.x = (treb * 0.5);\n  tmpvar_3.y = (bass * 0.5);\n  tmpvar_3.z = (mid * 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.15 * (vec3((0.051 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * tmpvar_3))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_4.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  vec2 uv2_2;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  float tmpvar_3;\n  tmpvar_3 = (0.02 * q27);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv_1 + 0.4)\n   + tmpvar_3)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, (\n    (uv_1 + 0.4)\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\n  uv2_2.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\n  uv2_2.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\n  uv2_2.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\n  uv2_2.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\n  uv2_2.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\n  uv2_2.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\n  uv2_2.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  uv2_2.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    (uv2_2 + 0.4)\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ((xlat_mutableret1 - 0.0125) * 0.85);\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;\n\n\nuv6 = .4*sin(uv1*18*rand_frame);\nmus = .051/(length(uv6));\nmus *= float3 (treb*.5,bass*.5,mid*.5);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .15*mus;\nfloat2 uv2 = (uv_orig-.5)-float3(bass*.1,treb*.1+0.1*q25,mid*.1);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"float3 ret1, neu, blur;\n\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nret1 = 0;\nint anz = 4;\nint n = 0;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    neu = GetPixel (uv2 + 0.4 + .02*q27 );\n    blur= GetBlur1 (uv2 + 0.4 + .02*q27 );\n    ret1 = max(ret1, neu+blur*2);\nn++;\n}\n\n\nret = (ret1-0.0125)*0.85;\n\n}"}