{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wrap":0,"wave_a":0.001,"zoomexp":0.99817,"zoom":0.98001,"cx":0.44,"warp":0.01,"ob_size":0,"ib_size":0,"ib_r":0.5,"ib_g":0.5,"ib_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+\ndiv(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_b=\n.1*Math.floor(rand(a.q3))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+div(Math.floor(rand(Math.floor(a.q30))),\n15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_b=.1*Math.floor(rand(a.q3))+a.instance-\na.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"num_inst":33,"r":0.5,"r2":0.5,"g2":0,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.treb_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.treb_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+\ndiv(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_b=\n.1*Math.floor(rand(a.q3))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.funk=0;a.effect_5=0;a.old_treb_flop=0;a.bass_flop=0;a.g3=0;a.q1=0;a.q5=0;a.treb_flop=0;a.effect_3=0;a.bass_thresh=0;a.g2=0;a.old_bass_flop=0;a.treb_thresh=0;a.pulse_cap=0;a.pulse=0;a.bass_changed=0;a.y_shift=0;a.mid_thresh=0;a.q4=0;a.mid_changed=0;a.entropy=0;a.x_shift=0;a.old_mid_flop=0;a.effect_6=0;a.vol=0;a.chaos=0;a.mid_flop=0;a.r_shift=0;a.q2=0;a.treb_changed=0;a.q3=0;a.g1=0;a.effect_1=0;a.effect_4=0;a.q30=0;a.effect_2=0;","frame_eqs_str":"a.warp=0;a.old_bass_flop=a.bass_flop;a.old_treb_flop=a.treb_flop;a.old_mid_flop=a.mid_flop;a.chaos=.9+.1*Math.sin(a.pulse);a.entropy=.00001<Math.abs(bnot(a.entropy))?2:.00001<Math.abs(above(a.pulse,a.pulse_cap-10*a.entropy))?1+Math.floor(rand(6)):a.entropy;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*((a.bass_thresh-1.3)*a.chaos+1.3);a.bass_flop=Math.abs(a.bass_flop-equal(a.bass_thresh,2));a.treb_thresh=2*above(a.treb_att,a.treb_thresh)+\n(1-above(a.treb_att,a.treb_thresh))*((a.treb_thresh-1.3)*a.chaos+1.3);a.treb_flop=Math.abs(a.treb_flop-equal(a.treb_thresh,2));a.mid_thresh=2*above(a.mid_att,a.mid_thresh)+(1-above(a.mid_att,a.mid_thresh))*((a.mid_thresh-1.3)*a.chaos+1.3);a.mid_flop=Math.abs(a.mid_flop-equal(a.mid_thresh,2));a.bass_changed=bnot(equal(a.old_bass_flop,a.bass_flop));a.mid_changed=bnot(equal(a.old_mid_flop,a.mid_flop));a.treb_changed=bnot(equal(a.old_treb_flop,a.treb_flop));a.pulse_cap=5E3*a.entropy;a.pulse=.00001<Math.abs(above(Math.abs(a.pulse),\na.pulse_cap))?0-a.pulse_cap:a.pulse+a.entropy*bor(bor(a.bass_changed*bnot(a.treb_changed),a.treb_changed*bnot(a.bass_changed))*bnot(a.mid_changed),a.mid_changed)+div(a.mid+a.bass+a.treb,3);a.q3=Math.sin(a.pulse);a.effect_1=1+1*a.bass_flop*above(a.q3,0);a.effect_2=1+2*a.treb_flop*below(a.q3,0);a.effect_3=1+4*a.mid_flop*above(a.q3,0);a.effect_4=1+6*a.mid_flop*below(a.q3,0);a.effect_5=1+10*a.treb_flop*above(a.q3,0);a.effect_6=1+12*a.bass_flop*below(a.q3,0);a.q1=a.effect_1*a.effect_2*a.effect_3*a.effect_4*\na.effect_5*a.effect_6;a.q2=a.time*a.q1*a.entropy*a.chaos*.002;a.q4=Math.sin(.02*a.q2);a.q5=.00001<Math.abs(above(a.q4,0))?a.entropy:2+mod(a.q1,7);a.wave_r=.00001<Math.abs(a.treb_flop)?Math.abs(.5*a.q4):.00001<Math.abs(a.bass_flop)?.5+.5*a.q4:1;a.wave_g=.00001<Math.abs(a.treb_changed)?0:.00001<Math.abs(a.mid_changed)?0:.49;a.wave_b=.00001<Math.abs(a.treb_flop)?.8+.2*a.q4:a.bass_changed*a.mid_changed;a.zoom=.00001<Math.abs(above(a.q3,0))?.00001<Math.abs(above(a.q4,0))?a.zoom:a.zoom+.1*a.q4:a.zoom+.2*\nMath.sin(div(a.time,3));a.cx=.5+.2*a.q3;a.cy=.5+.2*a.q4;a.wave_x=a.cy;a.wave_y=a.cx;a.ob_r=.00001<Math.abs(a.bass_flop)?a.treb_flop:a.wave_g;a.ob_b=.00001<Math.abs(a.treb_flop)?a.wave_r:a.wave_b;a.ob_g=.00001<Math.abs(a.mid_flop)?a.wave_g:a.wave_b;a.ob_a=.07+.05*a.q2;a.ob_size=.01+.009*a.q4;a.ib_r+=.5*Math.sin(.04*a.time*a.entropy);a.ib_b+=.5*Math.sin(.03*a.time*a.entropy);a.ib_g+=.5*Math.sin(.02*a.time*a.entropy);a.ib_a=.07+.05*a.q3*a.q4;a.ib_size=.01+.009*a.q3;a.vol=a.bass+a.treb+a.mid;a.q30=2*\na.vol;a.q3=4*a.vol;","pixel_eqs_str":"a.g1=Math.sin(a.q2+a.time*a.q5*.01);a.g2=Math.sin(a.q2+a.time*a.q5*.02);a.g3=Math.sin(a.q2+a.time*a.q5*.03);a.x_shift=.00001<Math.abs(bnot(mod(a.q1,22)))?pow(a.x,a.q5)+a.x*a.g1*a.q5+sqr(a.g1):a.g1;a.y_shift=.00001<Math.abs(bnot(mod(a.q1,55)))?pow(a.y,a.q5)+a.y*a.g2*a.q5+sqr(a.g2):a.g2;a.r_shift=.00001<Math.abs(bnot(mod(a.q1,39)))?pow(a.rad,a.q5)+a.rad*a.g3*a.q5+sqr(a.g3):a.g3;a.funk=a.x_shift*a.y_shift*a.r_shift;a.zoom+=Math.cos(10*a.rad*Math.sin(a.time))*Math.abs(1-a.zoom);\na.dy=Math.sin(a.funk)*a.g1*.1+.07*Math.cos(pow(a.funk,a.q5));a.dx=(.00001<Math.abs(bnot(mod(a.q1,2)))?Math.sin(a.funk):Math.sin(pow(a.funk,a.q5)))*a.g2*.1;a.rot=.00001<Math.abs(above(Math.sin(a.q2+a.time*a.q5*.025),0))?a.g2*a.rad:div(Math.min(a.q3,a.dy)*a.g3*-a.dx*a.q5,2);","init_eqs_eel":"","frame_eqs_eel":"warp=0;\nold_bass_flop=bass_flop;\nold_treb_flop=treb_flop;\nold_mid_flop=mid_flop;\nchaos=.9+.1*sin(pulse);\nentropy=if(bnot(entropy),2,if(above(pulse,pulse_cap-entropy*10),1+int(rand(6)),entropy));\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);\nbass_flop=abs(bass_flop-equal(bass_thresh,2));\ntreb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);\ntreb_flop=abs(treb_flop-equal(treb_thresh,2));\nmid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);\nmid_flop=abs(mid_flop-equal(mid_thresh,2));\nbass_changed=bnot(equal(old_bass_flop,bass_flop));\nmid_changed=bnot(equal(old_mid_flop,mid_flop));\ntreb_changed=bnot(equal(old_treb_flop,treb_flop));\npulse_cap=entropy*5000;\npulse=if(above(abs(pulse),pulse_cap),0-pulse_cap,pulse+entropy*bor(bor(bass_changed*bnot(treb_changed),treb_changed*bnot(bass_changed))*bnot(mid_changed),mid_changed)+(mid+bass+treb)/3);\nq3=sin(pulse);\neffect_1=1+1*bass_flop*above(q3,0);\neffect_2=1+2*treb_flop*below(q3,0);\neffect_3=1+4*mid_flop*above(q3,0);\neffect_4=1+6*mid_flop*below(q3,0);\neffect_5=1+10*treb_flop*above(q3,0);\neffect_6=1+12*bass_flop*below(q3,0);\nq1=effect_1*effect_2*effect_3*effect_4*effect_5*effect_6;\nq2=time*q1*entropy*chaos*.002;\nq4=sin(q2*.02);\nq5=if(above(q4,0),entropy,2+q1%7);\nwave_r=if(treb_flop,abs(.5*q4),if(bass_flop,.5+.5*q4,1));\nwave_g=if(treb_changed,0,if(mid_changed,0,.49));\nwave_b=if(treb_flop,.8+.2*q4,bass_changed*mid_changed);\nzoom=if(above(q3,0),if(above(q4,0),zoom,zoom+.1*q4),zoom+.2*sin(time/3));\ncx=.5+.2*q3;\ncy=.5+.2*q4;\nwave_x=cy;\nwave_y=cx;\nob_r=if(bass_flop,treb_flop,wave_g);\nob_b=if(treb_flop,wave_r,wave_b);\nob_g=if(mid_flop,wave_g,wave_b);\nob_a=.07+.05*q2;\nob_size=.01+.009*q4;\nib_r=ib_r+.5*sin(time*.04*entropy);\nib_b=ib_b+.5*sin(time*.03*entropy);\nib_g=ib_g+.5*sin(time*.02*entropy);\nib_a=.07+.05*q3*q4;\nib_size=.01+.009*q3;\nvol=bass+treb+mid;\nq30=vol*2;\nq3=vol*4;","pixel_eqs_eel":"g1=sin(q2+time*q5*.01);\ng2=sin(q2+time*q5*.02);\ng3=sin(q2+time*q5*.03);\nx_shift=if(bnot(q1%22),(pow(x,q5)+x*g1*q5+sqr(g1)),g1);\ny_shift=if(bnot(q1%55),(pow(y,q5)+y*g2*q5+sqr(g2)),g2);\nr_shift=if(bnot(q1%39),(pow(rad,q5)+rad*g3*q5+sqr(g3)),g3);\nfunk=x_shift*y_shift*r_shift;\nzoom=zoom+cos(rad*10*sin(time))*abs(1-zoom);\ndy=sin(funk)*g1*.1+cos(pow(funk,q5))*.07;\ndx=if(bnot(q1%2),sin(funk),sin(pow(funk,q5)))*g2*.1;\nrot=if(above(sin(q2+time*q5*.025),0),g2*rad,min(q3,dy)*g3*-dx*q5/2);","warp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\n  uv_1 = (mix (uv_orig, uv, vec2((\n    (dot (texture (sampler_main, mix (uv_orig, uv, vec2(4.0, 4.0))).xyz, vec3(0.32, 0.49, 0.29)) - dot (((texture (sampler_blur2, \n      mix (uv_orig, uv, vec2(-12.0, -12.0))\n    ).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29)))\n   * 12.0))) + ((\n    (texture (sampler_noise_lq, tmpvar_3) - 0.5)\n  .xy * texsize.zw) * 0.5));\n  ret_2 = ((texture (sampler_main, uv_1).xyz + (\n    (texture (sampler_noise_lq, tmpvar_3) - 0.5)\n   * 0.006).xyz) + -0.0006);\n  ret_2 = (ret_2 + (texture (sampler_noisevol_hq, (\n    ((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (texsize.xyy * texsize_noisevol_hq.zww))\n   + \n    (vec3(0.0, 0.0, 0.4) * time)\n  )) * 0.05).xyz);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_2;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (((texture (sampler_main, \n    (uv - ((0.5 - tmpvar_2.xy) * 0.2))\n  ).xyz * texture (sampler_main, \n    (uv - ((0.5 - tmpvar_2.yz) * 0.2))\n  ).xyz) * texture (sampler_main, (uv - \n    ((0.5 - tmpvar_2.xz) * 0.2)\n  )).xyz) * 1.1);\n  ret_1 = (ret_1 * ((texture (sampler_blur2, uv).xyz * scale2) + bias2));\n  ret_1 = (ret_1 - (texture (sampler_noisevol_hq, (\n    ((vec3(0.05, 0.05, 0.0) * uv.xyy) * (texsize.xyy * texsize_noisevol_hq.zww))\n   + \n    (vec3(0.0, 0.0, 0.4) * time)\n  )) * 0.2).xyz);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n\n\nfloat error     = 0.5;        // maximum random pixel offset\nfloat diffusion = 0.006;      // dither strength\nfloat fadeout   = -0.0006;    // may be minor 1/256 due to the error diffusion dither;\n\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;\nfloat magic = lum(GetPixel(lerp(uv_orig,uv, 4))) - lum(GetBlur2(lerp(uv_orig,uv,-12)));\nuv = lerp(uv_orig,uv, magic*12 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;\nret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;\n\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nret += (noise2)*.05; \n}","comp_hlsl":"shader_body\n{float str=0.2;\n//ret=tex2D(sampler_main,uv).zyx;\nret=GetPixel(uv);\nfloat2 newuv;\nfloat3 m[3];\nm[0]=GetPixel(uv-(0.5-ret.xy)*str);\nm[1]=GetPixel(uv-(0.5-ret.yz)*str);\nm[2]=GetPixel(uv-(0.5-ret.xz)*str);\n//ret=float3(lum(m[0]),lum(m[1]),lum(m[2]));\nret=(m[0]*m[1]*m[2])*1.1;\nret=ret*GetBlur2(uv);\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nret -= (noise2)*.2; \n}"}