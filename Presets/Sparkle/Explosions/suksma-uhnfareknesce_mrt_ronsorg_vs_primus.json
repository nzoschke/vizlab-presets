{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":0.01,"rot":-0.02,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"g2":0,"border_r":0.4,"border_g":0.5},"init_eqs_str":"a.frametest=0;a.monitor=0;","frame_eqs_str":"a.r=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.234*a.time):.1*Math.sin(1.234*a.time);a.g=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.345*a.time):.1*Math.sin(1.345*a.time);a.b=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.456*a.time):.1*Math.sin(1.456*a.time);a.border_a=.25*Math.sin(a.time);a.ang+=.67*Math.sin(a.time);a.rad+=.1*a.bass;a.frametest=equal(mod(a.frame,2),0);a.x-=.1*Math.tan(3.14*a.time);a.y-=.1*Math.sin(3.14*a.time);a.x=.00001<Math.abs(a.frametest)?\na.x:1-a.x;a.y=.00001<Math.abs(a.frametest)?a.y:1-a.y;a.r=.00001<Math.abs(a.frametest)?a.r:a.b;a.b=.00001<Math.abs(a.frametest)?a.b:a.g;a.monitor=a.frametest;","init_eqs_eel":"","frame_eqs_eel":"r = if(above(bass, 1.2), .5*sin(time*1.234), .1*sin(time*1.234));\ng = if(above(bass, 1.2), .5*sin(time*1.345), .1*sin(time*1.345));\nb = if(above(bass, 1.2), .5*sin(time*1.456), .1*sin(time*1.456));\nborder_a = .25*sin(time);\n\nang = ang + .67*sin(time);\nrad = rad + bass*.1;\n\nframetest = equal(frame%2, 0);\n\n//x = if(frametest, x - .25*sin(time), x + .25*sin(time);\nx = x - .1*tan(time*3.14);\ny = y - .1*sin(time*3.14);\nx = if(frametest, x, 1-x);\ny = if(frametest, y, 1-y);\nr = if(frametest, r, b);\nb = if(frametest, b, g);\n\nmonitor = frametest;"},{"baseVals":{"enabled":1,"additive":1,"rad":2.41456,"g2":0,"border_r":0.4,"border_g":0.5},"init_eqs_str":"a.frametest=0;a.monitor=0;","frame_eqs_str":"a.r=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(2.234*a.time):0;a.g=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(2.345*a.time):0;a.b=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(2.456*a.time):0;a.border_a=.25*Math.sin(a.time);a.ang+=.67*Math.sin(a.time);a.rad+=.1*a.bass;a.frametest=equal(mod(a.frame,2),0);a.x-=.2*Math.sin(2*a.time);a.y-=.2*Math.tan(2*a.time);a.x=.00001<Math.abs(a.frametest)?a.x:1-a.x;a.y=.00001<Math.abs(a.frametest)?a.y:1-a.y;a.r=.00001<Math.abs(a.frametest)?\na.r:a.b;a.b=.00001<Math.abs(a.frametest)?a.b:a.g;a.monitor=a.frametest;","init_eqs_eel":"","frame_eqs_eel":"r = if(above(bass, 1.2), .5*sin(time*2.234), 0);\ng = if(above(bass, 1.2), .5*sin(time*2.345), 0);\nb = if(above(bass, 1.2), .5*sin(time*2.456), 0);\nborder_a = .25*sin(time);\n\nang = ang + .67*sin(time);\nrad = rad + bass*.1;\n\nframetest = equal(frame%2, 0);\n\n//x = if(frametest, x - .25*sin(time), x + .25*sin(time);\nx = x - .2*sin(time*2);\ny = y - .2*tan(time*2);\nx = if(frametest, x, 1-x);\ny = if(frametest, y, 1-y);\nr = if(frametest, r, b);\nb = if(frametest, b, g);\n\nmonitor = frametest;"},{"baseVals":{"enabled":1,"sides":30,"additive":1,"textured":1,"rad":0.44484,"r":0,"a2":1},"init_eqs_str":"","frame_eqs_str":"a.r2=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.523*a.time):1;a.g2=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.983*a.time):1;a.b2=.00001<Math.abs(above(a.bass,1.2))?.75+.5*Math.sin(1.194*a.time):1;a.rad-=.4*a.bass_att;a.x+=.5*Math.sin(a.time);a.y-=.2*Math.cos(a.time);","init_eqs_eel":"","frame_eqs_eel":"r2 = if(above(bass, 1.2), 0.5*sin(time*1.523), 1);\ng2 = if(above(bass, 1.2), 0.5*sin(time*1.983), 1);\nb2 = if(above(bass, 1.2), 0.75+.5*sin(time*1.194), 1);\nrad = rad - .4*bass_att;\n\nx = x +.5*sin(time);\ny = y -.2*cos(time);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.rot1=0;a.rot1=.1;","frame_eqs_str":"a.rot1=.00001<Math.abs(above(a.bass,1.3))?-a.rot1:a.rot1;a.rot=a.rot1;a.wave_x=.5+.3*Math.cos(2.8*a.time);a.wave_r=div(Math.floor(rand(101)),100);a.wave_g=div(Math.floor(rand(101)),100);a.wave_b=div(Math.floor(rand(101)),100);a.cx=.5+.9*Math.sin(3*a.time)*a.rot1;a.cy=.5+.9*Math.cos(3*a.time)*a.rot1;","pixel_eqs_str":"a.rot=.00001<Math.abs(above(a.rad,.5))?-a.rot:a.rot;","init_eqs_eel":"rot1=0.1","frame_eqs_eel":"rot1=if(above(bass,1.3),-rot1,rot1);\nrot=rot1;\nwave_x=0.5+(cos(time*2.8)*0.3);\nwave_r=int(rand(101))/100;\nwave_g=int(rand(101))/100;\nwave_b=int(rand(101))/100;\ncx=0.5+((sin(time*3)*0.9)*rot1);\ncy=0.5+((cos(time*3)*0.9)*rot1);","pixel_eqs_eel":"rot=if(above(rad,0.5),-rot,rot);","warp":" shader_body { \n  float k1_1;\n  float ky_2;\n  vec2 uv3_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - vec2(0.5, 0.5)) * aspect.xy);\n  uv3_3 = (60.0 * tmpvar_4);\n  float tmpvar_5;\n  tmpvar_5 = dot (texture (sampler_noise_lq, uv), vec4(0.32, 0.49, 0.29, 0.0));\n  ky_2 = clamp (((\n    (-(uv3_3.y) / 50.0)\n   + \n    ((tmpvar_5 / 8.0) * cos((16.0 * tmpvar_5)))\n  ) + 0.2), 0.0, 1.0);\n  float tmpvar_6;\n  tmpvar_6 = (uv3_3.x * (2.0 - (0.3 * uv.y)));\n  k1_1 = (tmpvar_6 - (sign(tmpvar_6) * 24.0));\n  k1_1 = (k1_1 - (sign(k1_1) * 9.0));\n  k1_1 = (k1_1 + ((2.0 * \n    (k1_1 - (6.0 * sign(k1_1)))\n  ) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  k1_1 = (k1_1 + ((2.0 * \n    (k1_1 - (12.0 * sign(k1_1)))\n  ) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  k1_1 = (k1_1 + ((2.0 * \n    (k1_1 - (18.0 * sign(k1_1)))\n  ) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  k1_1 = (k1_1 + ((2.0 * \n    (k1_1 - (24.0 * sign(k1_1)))\n  ) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  k1_1 = (k1_1 + ((2.0 * \n    (k1_1 - (30.0 * sign(k1_1)))\n  ) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  float tmpvar_7;\n  tmpvar_7 = clamp (k1_1, -1.6, 1.6);\n  k1_1 = tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8.x = (sin(tmpvar_7) / cos(tmpvar_7));\n  tmpvar_8.y = uv3_3.y;\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ((texture (sampler_main, fract(uv)).xyz * 0.5) + ((\n    cos(tmpvar_7)\n   * \n    (vec3((dot (texture (sampler_noise_hq, (tmpvar_8 * \n      ((texsize.xy * texsize_noise_hq.zw) * 0.05)\n    .x)), vec4(0.32, 0.49, 0.29, 0.0)) + 0.2)) * vec3(0.125, 0.02, 0.01))\n  ) * clamp (\n    (1.0 - pow ((2.4 * tmpvar_4.y), 6.0))\n  , 0.0, 1.0)));\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, (((texture (sampler_blur2, uv).xyz * scale2) + bias2).x * texture (sampler_main, uv).xyz).xy).xyz;\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"float3 ret1, tree;\nfloat mask1;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_hq.zw * 0.05;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat2 uv3 = uv1;\nfloat dist = 60;\n\nuv3 = dist * uv1;\n\nfloat zu = lum(tex2D (sampler_noise_lq,uv));\nfloat shape = 40* (q29+2);\nfloat ky = saturate(-uv3.y/50+zu/8*cos(16*zu)+.2);\n//Faktor an uv.y drehen\n\nfloat k1 = uv3.x*(2-.3*uv.y);;\n\nk1 = k1 - sign (k1)*24; //Verdoppelung\nk1 = k1 - sign (k1)*9; //Verdoppelung\n\nint n = 1 ;\nfloat delta = .1;\nwhile (n <= 5) \n{\n  k1 += 2*(k1-6*n*sign(k1))*ky;\n  //Mult. mit n steuert \"Breitenwuchs\"\n  ky = saturate (ky - delta);\n  delta *= 1;\n  //delta ist vertikaler Verzweig. abstand\n  n++; \n}\n\nk1 = clamp(k1,-1.6,1.6);\n\nfloat2 rs1 = float2 (tan(k1),uv3.y);\n\ntree = lum(tex2D(sampler_noise_hq,rs1*corr))+.2;\n//tree = abs(cos(k1));\ntree *= float3 (2.5,.4,.2) * cos(k1);\n\nmask1 = 1;\n\nret1 = .05*mask1*tree*saturate(1-pow(2.4*uv1.y,6));\n\nret = GetPixel(frac(uv))*.5 + ret1;\n\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n\n    float bl = GetBlur2(uv);\n    float2 texc = bl*ret.xyz;\n\n    ret = tex2D(sampler_main, texc);\n//ret=1-ret;\n}"}