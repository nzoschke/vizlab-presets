{"version":2,"baseVals":{"rating":5,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"warpscale":1.331,"zoom":1.0003,"warp":0.01,"sy":1.1046,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"ob_size":0,"ob_r":0.05,"ob_g":0.05,"ob_b":0.1,"ob_a":1,"ib_size":0,"mv_a":0,"b1n":0.4},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=\n.09+div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;\na.border_b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/15+instance-instance;\ntrans2 = int(rand(int(q30)))/15+instance-instance;\ntrans3 = int(rand(int(q30)))/15+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q30))*.1+instance-instance;\ng=int(rand(q30))*.1+instance-instance;\nb=int(rand(q30))*.1+instance-instance;\nr2=int(rand(q30))*.1+instance-instance;\ng2=int(rand(q30))*.1+instance-instance;\nb2=int(rand(q30))*.1+instance-instance;\nborder_r=int(rand(q30))*.1+instance-instance;\nborder_g=int(rand(q30))*.1+instance-instance;\nborder_b=int(rand(q30))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+\ndiv(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;\na.border_b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/15+instance-instance;\ntrans2 = int(rand(int(q30)))/15+instance-instance;\ntrans3 = int(rand(int(q30)))/15+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = .5 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q30))*.1+instance-instance;\ng=int(rand(q30))*.1+instance-instance;\nb=int(rand(q30))*.1+instance-instance;\nr2=int(rand(q30))*.1+instance-instance;\ng2=int(rand(q30))*.1+instance-instance;\nb2=int(rand(q30))*.1+instance-instance;\nborder_r=int(rand(q30))*.1+instance-instance;\nborder_g=int(rand(q30))*.1+instance-instance;\nborder_b=int(rand(q30))*.1+instance-instance;\n"},{"baseVals":{"sides":32,"thickoutline":1,"num_inst":33,"r":0.5,"r2":0.5,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\na2 = trans2;\nborder_a = trans3;\n\nx = q1 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\na2 = trans2;\nborder_a = trans3;\n\nx = q1 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xx=0;a.tic=0;a.q12=0;a.vt=0;a.wzoom=0;a.bt=0;a.q1=0;a.q5=0;a.q9=0;a.bass_thresh=0;a.tt=0;a.tin=0;a.ti=0;a.q11=0;a.q10=0;a.ry=0;a.q4=0;a.rx=0;a.q26=0;a.mt=0;a.t2=0;a.q17=0;a.vol=0;a.q2=0;a.q27=0;a.q3=0;a.yy=0;a.q30=0;a.q20=0;a.mtime=0;a.q8=0;","frame_eqs_str":"a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.91*(a.bass_thresh-1.3)+1.3);a.xx=5*equal(a.bass_thresh,2)*Math.sin(4*a.time)+(1-equal(a.bass_thresh,2))*a.xx;a.yy=5*equal(a.bass_thresh,2)*Math.sin(2.4*-a.time)+(1-equal(a.bass_thresh,2))*a.yy;a.q10=a.xx;a.q11=a.yy;a.wzoom=.18*Math.sin(a.time);a.q3=a.wzoom;a.q1=.8-.3*Math.sin(1.3*-a.time);a.q2=.8-.3*Math.cos(-a.time);a.vol=.1*(9*a.vol+.333333*(a.bass_att+a.mid_att+a.treb_att));a.mtime+=.05*\na.vol;a.rx=.5+.7*Math.sin(a.mtime);a.ry=.5+.7*Math.sin(1.4*a.mtime);a.q4=a.rx;a.q5=a.ry;a.q30=10*a.vol;a.q27=Math.sin(.628334*a.time);a.q26=Math.cos(100*a.time);a.q17=Math.cos(.141596*a.time);a.q8=.05*a.bass+Math.tan(.0304003*a.time);a.q9=.05*a.mid+Math.cos(.049323*a.time);a.q10=.05*a.treb+Math.sin(.05*a.time);a.wave_a=0;a.zoom=1;a.decay=1;a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.ti+=24*a.tic;a.q1=above(a.ti,1);a.ti*=below(a.ti,1);a.t2+=a.tic*a.bass*a.bass;a.t2*=below(a.t2,.01);a.q5=\nequal(a.t2,0);a.q5=1-a.tic*(.5+.1*a.bass*a.bass);a.vt+=a.bass*a.mid*a.treb*a.tic*.2;a.bt+=a.bass*a.tic*.4;a.mt+=a.mid*a.tic*.4;a.tt+=a.treb*a.tic*.4;a.q2=a.bt;a.q3=a.mt;a.q4=a.tt;a.q10=a.vt;a.q11=.5+.25*Math.sin(1.12*a.bt);a.q12=.5+.25*Math.sin(.98*a.bt);a.monitor=above(a.bass*a.mid*a.treb,.002*Math.floor(rand(1001)));a.q20=a.aspecty;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.91+1.3);\n\nxx = equal(bass_thresh,2)*5*sin(time*4) + (1-equal(bass_thresh,2))*xx;\nyy = equal(bass_thresh,2)*5*sin(-time*2.4) + (1-equal(bass_thresh,2))*yy;\n\nq10=xx;\nq11=yy;\nwzoom = 0.18*sin(time);\nq3=wzoom;\nq1 = 0.8 - 0.3*sin(-time*1.3);\nq2 = 0.8 - 0.3*cos(-time);\n\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\nmtime = mtime+vol*0.05;\n\nrx = 0.5+0.7*sin(mtime);\nry = 0.5+0.7*sin(mtime*1.4);\nq4=rx;\nq5=ry;\nq30=vol*10;\nq27=sin(time*.628334);\nq26=cos(time*100);\nq17=cos(time*.141596);\nq8=bass*.05+tan(time*.0304003);\nq9=mid*.05+cos(time*.049323);\nq10=treb*.05+sin(time*.05);\nwave_a = 0;\nzoom = 1;\ndecay = 1;\nwarp = 0;\n\n//decay = 0.1;\n\n\ntic = min(time-tin,.1);\ntin = time;\n\nti = ti + tic*24;\nq1 = above(ti,1);\nti = ti*below(ti,1);\n\n\n\nt2 = t2 + tic*bass*bass;\nt2 = t2*below(t2,.01);\nq5 = equal(t2,0);\nq5 = 1-tic*(.5 + .1*bass*bass);\n\n//t2 = 1-t2;\n//q5 = t2;\n\n\nvt = vt + bass*mid*treb*tic*.2;\n\nbt = bt + bass*tic*.4;\nmt = mt + mid*tic*.4;\ntt = tt + treb*tic*.4;\nq2=bt;\nq3=mt;\nq4=tt;\n\nq10 = vt;\n\nq11 = .5 + .25*sin(bt*1.12);\nq12 = .5 + .25*sin(bt*0.98);\n\nmonitor = above(bass*mid*treb,int(rand(1001))*.001*2);\n\nq20=aspecty;","pixel_eqs_eel":"","warp":" shader_body { \n  vec4 len_1;\n  vec3 rsamp_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5.x = q11;\n  tmpvar_5.y = q12;\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  ret_4.xy = texture (sampler_pw_main, (((uv_orig - tmpvar_5) * q5) + tmpvar_5)).xy;\n  ret_4.xy = (((ret_4.xy - tmpvar_5) / q5) + tmpvar_5);\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv_orig + ((\n    (tmpvar_6.xy - 0.5)\n   * 12.0) * texsize.zw));\n  uv2_3 = tmpvar_7;\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_pw_main, fract(tmpvar_7));\n  rsamp_2.z = tmpvar_8.z;\n  rsamp_2.xy = (((tmpvar_8.xy - tmpvar_5) / q5) + tmpvar_5);\n  vec4 tmpvar_9;\n  tmpvar_9.xy = ret_4.xy;\n  tmpvar_9.zw = rsamp_2.xy;\n  vec4 tmpvar_10;\n  tmpvar_10 = (tmpvar_9 - uv_orig.xyxy);\n  len_1 = tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = sqrt(dot (tmpvar_10.xy, tmpvar_10.xy));\n  float tmpvar_12;\n  tmpvar_12 = sqrt(dot (tmpvar_10.zw, tmpvar_10.zw));\n  if ((tmpvar_11 > tmpvar_12)) {\n    ret_4.xy = rsamp_2.xy;\n  };\n  uv2_3 = (uv_orig + ((\n    (tmpvar_6.zw - 0.5)\n   * 48.0) * texsize.zw));\n  rsamp_2 = (texture (sampler_pw_main, fract(uv2_3)).xyz - (roam_sin.wzy * roam_cos.zxy));\n  rsamp_2.xy = (((rsamp_2.xy - tmpvar_5) / q5) + tmpvar_5);\n  len_1.zw = (rsamp_2.xy - uv_orig);\n  float tmpvar_13;\n  tmpvar_13 = sqrt(dot (len_1.zw, len_1.zw));\n  if ((tmpvar_11 > tmpvar_13)) {\n    ret_4.xy = rsamp_2.xy;\n  };\n  ret_4.z = 0.0;\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_4;\n  ret = tmpvar_14.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_3;\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 4.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_6;\n  tmpvar_6 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.0;\n  tmpvar_7.x = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  tmpvar_7.y = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\n    ((uv_1.xyy + (tmpvar_7 * 0.5)) * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\n  vec2 tmpvar_9;\n  tmpvar_9.x = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  tmpvar_9.y = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  uv_1 = (uv_1 - (tmpvar_9 * 0.04));\n  ret_3 = (abs((\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n  )) - (roam_sin.zyx * roam_cos.ywx));\n  ret_3 = (ret_3 * (dot (tmpvar_8, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  vec3 tmpvar_10;\n  tmpvar_10 = pow (ret_3, vec3(0.5, 0.5, 0.5));\n  ret_3 = tmpvar_10;\n  for (int i_2 = 0; i_2 < 16; i_2++) {\n  };\n  vec3 tmpvar_11;\n  tmpvar_11.z = 0.04;\n  vec2 tmpvar_12;\n  tmpvar_12 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_11.x = (texture (sampler_main, (uv_1 + tmpvar_12)).xyz - texture (sampler_main, (uv_1 - tmpvar_12)).xyz).x;\n  vec2 tmpvar_13;\n  tmpvar_13 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_11.y = (texture (sampler_main, (uv_1 + tmpvar_13)).xyz - texture (sampler_main, (uv_1 - tmpvar_13)).xyz).x;\n  vec3 tmpvar_14;\n  tmpvar_14 = normalize(tmpvar_11);\n  vec3 tmpvar_15;\n  tmpvar_15.z = 0.6;\n  tmpvar_15.xy = (fract(uv_1) - 0.5);\n  vec3 tmpvar_16;\n  tmpvar_16.z = 0.6;\n  tmpvar_16.xy = (fract(uv_1) - 0.5);\n  vec3 tmpvar_17;\n  tmpvar_17 = mix (tmpvar_10, mix (tmpvar_10, vec3(1.1, 0.8, 0.5), vec3((\n    ((dot (tmpvar_14, tmpvar_15) * 0.5) + 0.5)\n   * texture (sampler_main, \n    fract(uv_1)\n  ).x))), vec3(q20));\n  ret_3 = (1.0 - mix (tmpvar_17, mix (tmpvar_17, \n    mix (tmpvar_10, vec3(1.1, 0.8, 0.5), vec3((((\n      dot (tmpvar_14, tmpvar_16)\n     * 0.5) + 0.5) * texture (sampler_main, fract(uv_1)).x)))\n  , vec3(\n    (sin(time) * 100.0)\n  )), vec3(q20)));\n  ret_3 = (ret_3 * (treb_att * 0.5));\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = ret_3;\n  ret = tmpvar_18.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\n\nfloat zm = q5;\nfloat2 cen = float2(q11,q12);\nfloat2 uvo = (uv_orig-cen)*zm + cen;\n\nfloat2 uvm = uv_orig;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xy = tex2D( sampler_pw_main,uvo).xy;\nret.xy = (ret.xy-cen)/zm+cen;\n\nfloat2 uv2 = uv_orig  + (noiseVal.xy-.5)*12*pixelsize;\nfloat3 rsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;\n\nrsamp.xy = (rsamp.xy-cen)/zm+cen;\n\nfloat4 len = (float4(ret.xy,rsamp.xy) - uvm.xyxy);\nfloat l1 = length(len.xy);\nif (l1 > length(len.zw)) ret.xy = rsamp.xy;\n\nuv2 = uv_orig  + (noiseVal.zw-.5)*48*pixelsize;\nrsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;\nrsamp-=roam_sin.wzy*roam_cos.zxy;\nrsamp.xy = (rsamp.xy-cen)/zm+cen;\nlen.zw = rsamp.xy - uvm.xy;\nif (l1 > length(len.zw)) ret.xy = rsamp.xy;\n\n//uv2 = uv_orig  + (noiseVal.zw-.5)*6*pixelsize;\n//rsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;\n//len = abs(float4(ret.xy,rsamp.xy) - uvm.xyxy);\n//if (length(len.xy) > length(len.zw)) ret.xy = rsamp.xy;\n\n//float2 uvo = (uv_orig-cen)*zm + cen;\n//if (q5) {\n//ret.xy = tex2D( sampler_pw_main,uvo).xy;\n//}\n\nret.z = 0;\n\n}","comp_hlsl":"float3 reta;\nfloat3 retb;\nfloat3 retc;\n\nshader_body\n{\n\n\n\nuv = 0.5 + (uv-0.5)*0.98;\n    float2 d = texsize.zw*4;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nuv -= float2(lum(dx),lum(dy))*0.04;\nret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));\nret-=roam_sin.zyx*roam_cos.ywx;\nret *= lum(noise)*3; \nret = pow(ret,0.5);\n\n\n\nfloat2 uv2 = uv*0.25;\nfloat3 col = 0;\nfloat2 uv3 = uv2;\nfor(int i = 0; i<16; i++){\n    uv3 += i*float2(0.25,0) - (0==(i)%4)*float2(0,0.25);\n    col = lerp(col,i/16.0,saturate(-GetPixel(uv3).y+tex2d(sampler_pw_main,frac(uv3)).y));\n\n\n}\n\n\nreta = lerp(GetPixel(uv).z*float3(0.6,0.2,1),float3(1,1,1),col*saturate(1-GetBlur1(uv).x*2));\nretb = lerp(GetPixel(uv).z*float3(0.6,0.2,1),float3(1,1,1),col*saturate(1-GetBlur1(uv).x*2));\n    float gx = GetPixel(uv+float2(1,0)*texsize.zw) - GetPixel(uv-float2(1,0)*texsize.zw);\n    float gy = GetPixel(uv+float2(0,1)*texsize.zw) - GetPixel(uv-float2(0,1)*texsize.zw);\n    float3 g = normalize(float3(gx, gy, .04));\n\n    reta = lerp(ret,float3(1.1,0.8,0.5),(dot(g.xyz,float3(frac(uv)-0.5,0.6))*0.5+0.5)*GetPixel(frac(uv)).x);\n    retb = lerp(ret,float3(1.1,0.8,0.5),(dot(g.xyz,float3(frac(uv)-0.5,0.6))*0.5+0.5)*GetPixel(frac(uv)).x);\n\n//retc = lerp(ret,retb,(sin(time)*100));\nret = lerp(ret,reta,q20);\nretc = lerp(ret,retb,(sin(time)*100));\nret = lerp(ret,retc,q20);\n\nret = 1 - ret;\nret *= treb_att * .5;\n}"}