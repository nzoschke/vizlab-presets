{"version":2,"baseVals":{"rating":5,"wrap":0,"wave_a":0.001,"warpanimspeed":5.278,"warpscale":0.01,"zoomexp":1.47412,"fshader":10,"zoom":1.0303,"warp":0.01,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.x=a.q1+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=a.q2+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=\n.09+div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;\na.border_b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = q1 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.x=a.q1+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=a.q2+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+\ndiv(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_b=\n.1*Math.floor(rand(a.q3))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = q1 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"num_inst":33,"r":0.5,"r2":0.5,"g2":0,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.x=a.q1+.01*Math.floor(rand(15))*a.treb_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=a.q2+.01*Math.floor(rand(15))*a.treb_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=\n.09+div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;\na.border_b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\n// = trans2;\n//border_a = trans3;\n\nx = q1 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q22=0;a.q21=0;a.q29=0;a.q1=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.count=0;a.mq23=0;a.q23=0;a.q24=0;a.mq30=0;a.q26=0;a.mq27=0;a.mq25=0;a.mq22=0;a.mq26=0;a.q2=0;a.q27=0;a.q3=0;a.q28=0;a.q30=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq30=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq30;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q30=a.mq30;a.monitor=a.mq1;a.count=.00001<Math.abs(below(a.count,9))?a.count+1:0;a.q1=.5;a.q2=.5;a.q3=a.count;a.zoom=1+.065*a.bass_att+.05*a.bass;a.monitor=a.q3;a.q30=a.bass+a.mid+a.treb;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq30=if(above(chng,cthr),rand(1)*.3,mq30);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\n\nmonitor=mq1;\ncount = if(below(count,9),count+1,0);\n\nq1 = 0.5;\nq2 = 0.5;\nq3 = count;\n\nzoom = 1 + 0.065*bass_att+0.05*bass;\nmonitor=q3;\nq30=bass+mid+treb;","pixel_eqs_eel":"","warp":" shader_body { \n  float conwab_1;\n  float conwag_2;\n  float conwar_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = -(texsize.zw);\n  vec2 tmpvar_6;\n  tmpvar_6 = (vec2(0.0, -1.0) * texsize.zw);\n  conwar_3 = (texture (sampler_pw_main, (uv + tmpvar_5)).x + texture (sampler_pw_main, (uv + tmpvar_6)).x);\n  vec2 tmpvar_7;\n  tmpvar_7 = (vec2(1.0, -1.0) * texsize.zw);\n  conwar_3 = (conwar_3 + texture (sampler_pw_main, (uv + tmpvar_7)).x);\n  vec2 tmpvar_8;\n  tmpvar_8 = (vec2(-1.0, 0.0) * texsize.zw);\n  conwar_3 = (conwar_3 + texture (sampler_pw_main, (uv + tmpvar_8)).x);\n  vec2 tmpvar_9;\n  tmpvar_9 = (vec2(1.0, 0.0) * texsize.zw);\n  conwar_3 = (conwar_3 + texture (sampler_pw_main, (uv + tmpvar_9)).x);\n  vec2 tmpvar_10;\n  tmpvar_10 = (vec2(-1.0, 1.0) * texsize.zw);\n  conwar_3 = (conwar_3 + texture (sampler_pw_main, (uv + tmpvar_10)).x);\n  conwar_3 = (conwar_3 + texture (sampler_pw_main, (uv + (vec2(0.0, 1.0) * texsize.zw))).x);\n  vec2 tmpvar_11;\n  tmpvar_11 = (uv + texsize.zw);\n  conwar_3 = (conwar_3 + texture (sampler_pw_main, tmpvar_11).x);\n  conwag_2 = (texture (sampler_pw_main, (uv + tmpvar_10)).z + texture (sampler_pw_main, (uv + tmpvar_7)).z);\n  conwag_2 = (conwag_2 + texture (sampler_pw_main, (uv + tmpvar_7)).z);\n  conwag_2 = (conwag_2 + texture (sampler_pw_main, (uv + tmpvar_8)).z);\n  conwag_2 = (conwag_2 + texture (sampler_pw_main, (uv + tmpvar_9)).z);\n  conwag_2 = (conwag_2 + texture (sampler_pw_main, (uv + tmpvar_10)).z);\n  conwag_2 = (conwag_2 + texture (sampler_pw_main, (uv + tmpvar_10)).z);\n  conwag_2 = (conwag_2 + texture (sampler_pw_main, (uv + tmpvar_6)).z);\n  conwab_1 = (texture (sampler_pw_main, (uv + tmpvar_7)).y + texture (sampler_pw_main, tmpvar_11).y);\n  conwab_1 = (conwab_1 + texture (sampler_pw_main, (uv + tmpvar_6)).y);\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_pw_main, uv);\n  conwab_1 = (conwab_1 + tmpvar_12.y);\n  conwab_1 = (conwab_1 + texture (sampler_pw_main, (uv + tmpvar_5)).y);\n  conwab_1 = (conwab_1 + texture (sampler_pw_main, (uv + tmpvar_10)).y);\n  conwab_1 = (conwab_1 + texture (sampler_pw_main, (uv + tmpvar_10)).y);\n  conwab_1 = (conwab_1 + texture (sampler_pw_main, (uv + tmpvar_7)).y);\n  float tmpvar_13;\n  tmpvar_13 = clamp (tmpvar_12.x, 0.0, 1.0);\n  ret_4.x = (clamp ((1.0 - \n    abs((conwar_3 - 3.0))\n  ), 0.0, 1.0) * ((\n    (1.0 + roam_sin.z)\n   * 0.75) - tmpvar_13));\n  ret_4.y = (clamp ((1.0 - \n    abs((conwag_2 - 3.0))\n  ), 0.0, 1.0) * ((\n    (1.0 + roam_cos.y)\n   * 0.8) - tmpvar_13));\n  ret_4.z = (clamp ((1.0 - \n    abs((conwab_1 - 3.0))\n  ), 0.0, 1.0) * ((\n    (1.0 + roam_sin.x)\n   * 0.86) - tmpvar_13));\n  ret_4.x = (ret_4.x + (clamp (\n    max ((1.0 - abs((conwar_3 - 2.0))), (((1.0 + roam_cos.z) * 0.93) - abs((conwag_2 - 3.0))))\n  , 0.0, 1.0) * tmpvar_13));\n  ret_4.y = (ret_4.y + (clamp (\n    max ((1.0 - abs((conwag_2 - 2.0))), (((1.0 + roam_sin.y) * 1.01) - abs((conwab_1 - 3.0))))\n  , 0.0, 1.0) * tmpvar_13));\n  ret_4.z = (ret_4.z + (clamp (\n    max ((1.0 - abs((conwab_1 - 2.0))), (((1.0 + roam_cos.x) * 1.1) - abs((conwar_3 - 3.0))))\n  , 0.0, 1.0) * tmpvar_13));\n  vec4 tmpvar_14;\n  tmpvar_14 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_4.x > (q21 * roam_cos.y)) && (ret_4.x <= (q24 * roam_sin.x)))) {\n    ret_4.y = (ret_4.y - (tmpvar_14.x * 0.5));\n  };\n  if (((ret_4.y > (q22 * roam_sin.x)) && (ret_4.y <= (q25 * roam_cos.x)))) {\n    ret_4.z = (ret_4.z - (tmpvar_14.y * 0.5));\n  };\n  if (((ret_4.z > (q23 * roam_cos.x)) && (ret_4.z <= (q26 * roam_sin.y)))) {\n    ret_4.x = (ret_4.x - (tmpvar_14.z * 0.5));\n  };\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = ret_4;\n  ret = tmpvar_15.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv_1);\n  vec2 theta_4;\n  theta_4 = (3.0 * (tmpvar_3.zz + tmpvar_3.yx));\n  uv_1 = (uv_1 + (-0.05 * (\n    sin(theta_4)\n   / \n    cos(theta_4)\n  )));\n  ret_2 = (texture (sampler_main, uv_1).xyz * 4.0);\n  ret_2 = (ret_2 - ((\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1) * 3.0));\n  ret_2 = (ret_2 * (1.0 + (0.12 * \n    ((texture (sampler_noise_lq, (rand_frame.xy + (\n      (uv_1 * texsize.xy)\n     * texsize_noise_lq.zw))).xxx * 2.0) - 1.0)\n  )));\n  ret_2 = ((pow (ret_2, vec3(0.5, 0.5, 0.7)) - 0.1) * 1.1);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((ret_2.x > (q26 * roam_cos.y)) && (ret_2.x <= (q23 * roam_sin.x)))) {\n    ret_2.z = (ret_2.z + (tmpvar_5.x * 0.5));\n  };\n  if (((ret_2.y > (q25 * roam_sin.x)) && (ret_2.y <= (q22 * roam_cos.x)))) {\n    ret_2.x = (ret_2.x + (tmpvar_5.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * roam_cos.x)) && (ret_2.z <= (q21 * roam_sin.y)))) {\n    ret_2.y = (ret_2.y + (tmpvar_5.z * 0.5));\n  };\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat1 conwar = tex2D( sampler_pw_main, uv + float2(-1,-1)*pixelsize).x;\n       conwar += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).x;\n       conwar += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).x;\n\n       conwar += tex2D( sampler_pw_main, uv + float2(-1,0)*pixelsize).x;\n       conwar += tex2D( sampler_pw_main, uv + float2(1,0)*pixelsize).x;\n\n       conwar += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).x;\n       conwar += tex2D( sampler_pw_main, uv + float2(0,1)*pixelsize).x;\n       conwar += tex2D( sampler_pw_main, uv + float2(1,1)*pixelsize).x;\n\nfloat1 conwag = tex2D( sampler_pw_main, uv + float2(-1, 1)*pixelsize).z;\n       conwag += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).z;\n       conwag += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).z;\n\n       conwag += tex2D( sampler_pw_main, uv + float2(-1,0)*pixelsize).z;\n       conwag += tex2D( sampler_pw_main, uv + float2(1,0)*pixelsize).z;\n\n       conwag += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).z;\n       conwag += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).z;\n       conwag += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).z;\n\nfloat1 conwab = tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).y;\n       conwab += tex2D( sampler_pw_main, uv + float2(1,1)*pixelsize).y;\n       conwab += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).y;\n\n       conwab += tex2D( sampler_pw_main, uv + float2(0,0)*pixelsize).y;\n       conwab += tex2D( sampler_pw_main, uv + float2(-1,-1)*pixelsize).y;\n\n       conwab += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).y;\n       conwab += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).y;\n       conwab += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).y;\n\nfloat1 p = saturate (tex2D( sampler_pw_main, uv).x);\n\n\nret.x = saturate((1-abs(conwar-3)))*((1+roam_sin.z)*.75-p);\nret.y = saturate((1-abs(conwag-3)))*((1+roam_cos.y)*.8-p);\nret.z = saturate((1-abs(conwab-3)))*((1+roam_sin.x)*.86-p);\nret.x += saturate(max(1-abs(conwar-2),(1+roam_cos.z)*.93-abs(conwag-3)))*p;\nret.y += saturate(max(1-abs(conwag-2),(1+roam_sin.y)*1.01-abs(conwab-3)))*p;\nret.z += saturate(max(1-abs(conwab-2),(1+roam_cos.x)*1.10-abs(conwar-3)))*p;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; \nif(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z -= (noise9).y*.5; \nif(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; \n\n\n}","comp_hlsl":"shader_body\n{\n    uv = 0.05 + 0.9*uv;\n\nret = GetPixel(uv);\n    uv += -.05*tan(3*(ret.zz+ret.yx));\n    \n\n    // equivalent of a laplacian: [center*4 - each of the 4 neighbors*1]\n    ret = 0;\n    ret += tex2D(sampler_main, uv ).xyz*4;\n    ret -= GetBlur1(uv)*3;\n\n    // little bit of noise:\n    ret *= 1 + 0.12*(tex2D(sampler_noise_lq, rand_frame.xy \n           + uv*texsize.xy*texsize_noise_lq.zw).xxx*2-1);\n \n    // palettize:\n    ret = pow(ret, float3(0.5, 0.5, 0.7));\n\n    ret = (ret-0.1)*1.1;\n   \nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q30 \n                     );\nif(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z += (noise9).x*.5; \nif(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x += (noise9).y*.5; \nif(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y += (noise9).z*.5; \n}\n\n"}