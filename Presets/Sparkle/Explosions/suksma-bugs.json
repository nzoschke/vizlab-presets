{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0,"echo_zoom":1,"echo_orient":3,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":2.63,"wave_smoothing":0.63,"modwavealphastart":1,"modwavealphaend":1.1,"warpscale":1.331,"zoom":0.99951,"warp":0.0101,"ob_size":0.005,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"mv_dx":1,"mv_dy":1,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":20,"thickoutline":1,"rad":0.04983,"r":0,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_a":1},"init_eqs_str":"a.myband=0;a.yscale=0;a.xscale=0;a.yvol=0;a.xvol=0;","frame_eqs_str":"a.myband=a.mid;a.yscale=.00001<Math.abs(Math.floor(rand(2)))?.003:-.003;a.xscale=.00001<Math.abs(Math.floor(rand(2)))?.003:-.003;a.yvol=a.myband*a.yscale;a.xvol=a.myband*a.xscale;a.y=.5+a.yvol;a.x=.5+a.xvol;a.rad=.05+.1*a.myband;a.r=above(a.myband,1.2);a.r2=a.r;a.g=below(a.myband,1.5);a.g2=a.g;","init_eqs_eel":"","frame_eqs_eel":"myband = mid;\nyscale=if(int(rand(2)),.003,-.003);\nxscale=if(int(rand(2)),.003,-.003);\nyvol=myband*yscale;\nxvol=myband*xscale;\ny=.5+yvol;\nx=.5+xvol;\n\nrad=0.05+(myband*0.1);\nr=above(myband,1.2);\nr2=r;\ng=below(myband,1.5);\ng2=g;\n"},{"baseVals":{"enabled":1,"sides":20,"thickoutline":1,"y":0.7,"rad":0.04983,"r":0,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_a":1},"init_eqs_str":"a.myband=0;a.yscale=0;a.xscale=0;a.yvol=0;a.xvol=0;","frame_eqs_str":"a.myband=a.treb;a.yscale=.00001<Math.abs(Math.floor(rand(2)))?.003:-.003;a.xscale=.00001<Math.abs(Math.floor(rand(2)))?.003:-.003;a.yvol=a.myband*a.yscale;a.xvol=a.myband*a.xscale;a.y=.75+a.yvol;a.x=.5+a.xvol;a.rad=.05+.1*a.myband;a.r=above(a.myband,1.2);a.r2=a.r;a.g=below(a.myband,1.5);a.g2=a.g;","init_eqs_eel":"","frame_eqs_eel":"myband = treb;\nyscale=if(int(rand(2)),.003,-.003);\nxscale=if(int(rand(2)),.003,-.003);\nyvol=myband*yscale;\nxvol=myband*xscale;\ny=.75+yvol;\nx=.5+xvol;\n\nrad=0.05+(myband*0.1);\nr=above(myband,1.2);\nr2=r;\ng=below(myband,1.5);\ng2=g;\n\n"},{"baseVals":{"enabled":1,"sides":20,"thickoutline":1,"y":0.3,"rad":0.04983,"r":0,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_a":1},"init_eqs_str":"a.myband=0;a.yscale=0;a.xscale=0;a.yvol=0;a.xvol=0;","frame_eqs_str":"a.myband=a.bass;a.yscale=.00001<Math.abs(Math.floor(rand(2)))?.003:-.003;a.xscale=.00001<Math.abs(Math.floor(rand(2)))?.003:-.003;a.yvol=a.myband*a.yscale;a.xvol=a.myband*a.xscale;a.y=.25+a.yvol;a.x=.5+a.xvol;a.rad=.05+.1*a.myband;a.r=above(a.myband,1.2);a.r2=a.r;a.g=below(a.myband,1.5);a.g2=a.g;","init_eqs_eel":"","frame_eqs_eel":"myband = bass;\nyscale=if(int(rand(2)),.003,-.003);\nxscale=if(int(rand(2)),.003,-.003);\nyvol=myband*yscale;\nxvol=myband*xscale;\ny=.25+yvol;\nx=.5+xvol;\n\nrad=0.05+(myband*0.1);\nr=above(myband,1.2);\nr2=r;\ng=below(myband,1.5);\ng2=g;\n"},{"baseVals":{"enabled":1,"sides":12,"num_inst":92,"x":0.8,"rad":0.03469,"ang":1.5707,"tex_ang":1.25664,"tex_zoom":3.0726,"g":1,"b":1,"g2":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.xang=0;a.ampl=0;a.fov=0;a.t1=0;a.yang=0;a.my=0;a.oz=0;a.k1=0;a.t_rel=0;a.k2=0;a.mz=0;a.oy=0;a.mx=0;a.vol=0;a.zang=0;a.sample=0;a.t_abs=0;a.ox=0;","frame_eqs_str":"a.t1=a.time-Math.floor(a.time);a.sample=div(a.instance,a.num_inst);a.t_abs=3*a.sample;a.t_rel=a.sample-div(a.time,5);a.vol=a.bass+a.mid+a.treb;a.ampl=div(2*a.t_abs,2)*a.vol*.5;a.k1=Math.sin(div(a.time,13));a.k2=Math.sin(div(a.time,12));a.ox=a.ampl*Math.sin(a.t_abs*(31+5*a.k1))+Math.sin(div(a.time,25))*(1-a.t_abs)*.4;a.oy=a.ampl*Math.cos(a.t_abs*(31+5*a.k2));a.oz=-1;a.r=sqr(Math.sin(3.4*a.t_rel));a.g=sqr(Math.sin(a.t_rel));a.b=sqr(Math.cos(1.8*a.t_rel));a.xang=div(a.time,9.5);\na.yang=div(0*a.time,7);a.zang=div(-a.time,22);a.fov=.5;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz-=6;a.x=div(a.ox*a.fov,a.oz)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;","init_eqs_eel":"","frame_eqs_eel":"t1 = time - int (time);\nsample = instance/num_inst;\nt_abs = sample*3;\nt_rel = sample-time/5;\nvol=bass+mid+treb;\nampl = 2*t_abs/2*vol*.5;\n\nk1=sin(time/13);\nk2=sin(time/12);\nox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;\noy = ampl*cos (t_abs*(31+5*k2));\noz = -1  ;\n\n\nr = sqr(sin(t_rel*3.4));\ng = sqr(sin(t_rel));\nb = sqr (cos(t_rel*1.8));\n\n//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;\n\nxang = time/9.5;\nyang = 0*time/7;\nzang = -time/22;\nfov = 0.5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"waves":[{"baseVals":{"enabled":1,"samples":128,"thick":1,"scaling":0.5,"r":0,"g":0,"b":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.48*a.sample;a.y=.5+.5*a.value1;a.g=above(.2,Math.abs(a.y-.5));a.r=below(.1,Math.abs(a.y-.5));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=sample*0.48;\ny=0.5+(value1*0.5);\ng=above(0.20,abs(y-0.5));\nr=below(0.10,abs(y-0.5));"},{"baseVals":{"enabled":1,"samples":128,"thick":1,"scaling":0.5,"r":0,"g":0,"b":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.52+.48*a.sample;a.y=.5+.5*a.value2;a.g=above(.2,Math.abs(a.y-.5));a.r=below(.1,Math.abs(a.y-.5));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=0.52+(sample*0.48);\ny=0.5+(value2*0.5);\ng=above(0.20,abs(y-0.5));\nr=below(0.10,abs(y-0.5));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.thresh=0;a.dx_r=0;a.dy_r=0;","frame_eqs_str":"a.wave_r+=.5*Math.sin(1.13*a.time);a.wave_g+=.5*Math.sin(1.23*a.time);a.wave_b+=.5*Math.sin(1.33*a.time);a.wave_x+=.05*Math.sin(a.time);a.wave_y+=.05*Math.cos(a.time);a.ib_r+=.25*Math.sin(a.time);a.ib_g+=.25*Math.cos(a.time);a.ib_b+=.25*Math.sin(.5*a.time);","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.zoom+=.135*Math.sin(6*a.ang)*Math.sin(Math.sin(2*a.time*Math.sin(6*a.ang)))*Math.cos(150*a.time*a.bass_att)*above(Math.sin(a.bass),.75);a.rot+=.025*Math.sin(.2+.5*Math.sin(a.time)*a.rad);a.cx+=.099*(.5-a.rad)*Math.sin(.733*a.time)*\nbelow(Math.sin(a.time),Math.cos(a.time));a.cy+=.099*(.5-a.rad)*Math.cos(.953*a.time)*above(Math.sin(a.time),Math.cos(.5*a.time));","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\nwave_g = wave_g + 0.5*sin(time*1.23);\nwave_b = wave_b + 0.5*sin(time*1.33);\n\nwave_x = wave_x + 0.05*sin(time);\nwave_y = wave_y + 0.05*cos(time);\n\nib_r = ib_r + 0.25*sin(time);\nib_g = ib_g + 0.25*cos(time);\nib_b = ib_b + 0.25*sin(0.5*time);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\nzoom = zoom + 0.135*(sin(6*ang) * sin(sin(time*2*sin(6*ang)))* cos(time*150*bass_att))*above(sin(bass),0.75);\nrot = rot + 0.025*sin(0.2+ 0.5*sin(time)*rad);\ncx = cx + 0.1*(0.99*(0.5-rad))*sin(0.733*time)*below(sin(time),cos(time));\ncy = cy + 0.1*(0.99*(0.5-rad))*cos(0.953*time)*above(sin(time),cos(0.5*time));","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\n   / 2.0) + q23)) + 1.0).xyz;\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\n  tmpvar_4.y = tmpvar_3.y;\n  ret_1 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\n   - \n    (tmpvar_2 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_3 * 0.01)\n  .xy)).xyz + (tmpvar_2 * 0.1)));\n  float tmpvar_5;\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\n  ret_1 = (ret_1 - 0.04);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":"vec2 xlat_mutablers;\n shader_body { \n  vec2 uv1_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\n  xlat_mutablers.x = ((ang / 3.14) + q28);\n  xlat_mutablers.y = ((0.1 / (0.05 + \n    sqrt(dot (tmpvar_2, tmpvar_2))\n  )) + (time * 0.5));\n  vec2 tmpvar_3;\n  tmpvar_3 = fract(xlat_mutablers);\n  vec2 tmpvar_4;\n  tmpvar_4.y = 0.0;\n  tmpvar_4.x = texsize.z;\n  vec2 tmpvar_5;\n  tmpvar_5.x = 0.0;\n  tmpvar_5.y = texsize.w;\n  vec2 tmpvar_6;\n  tmpvar_6.x = (texture (sampler_main, (tmpvar_3 - tmpvar_4)).xyz - texture (sampler_main, (tmpvar_3 + tmpvar_4)).xyz).x;\n  tmpvar_6.y = (texture (sampler_main, (tmpvar_3 - tmpvar_5)).xyz - texture (sampler_main, (tmpvar_3 + tmpvar_5)).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    (fract(xlat_mutablers) * 16.0)\n  )) - (4.0 * tmpvar_6));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((1.0 + bass_att) * ((3.2 * vec3(\n    clamp ((0.04 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\n  )) * (0.6 - \n    (texture (sampler_main, tmpvar_3).xyz + ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1))\n  )));\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body {\n\n//uv = uv_orig;\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat2 tmp = uv1;\ntmp.x = ang*3; tmp.y = rad;\nuv1 = tmp;\n\nfloat3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);\n\nfloat3 ret1 = GetBlur1 (uv)-.3;\nfloat3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;\nfloat3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;\n\nret = -.4*blur + crisp;\n    \n ret *= 0.98 * pow(1-.01*q28*q28*rad,2); \n  ret -= 0.04;\n}","comp_hlsl":"float2 rs;\nshader_body\n{\n\n\nfloat2 uv1 = (uv-.5)*aspect.xy;\n\nrs.x = ang/3.14 + q28;\nrs.y = .1/(.05+length (uv1))+time*.5;\n\nuv = frac(rs);\nuv1 = frac(rs);\nfloat3 ret1 = tex2D(sampler_main, uv) + GetBlur1(uv);\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nfloat dx = GetPixel (uv-hor) - GetPixel (uv+hor);\nfloat dy = GetPixel (uv-ver) - GetPixel (uv+ver);\nfloat2 dz = float2 (dx,dy);\n\nuv1 = .3*cos(uv1*16) - 4*dz;;\nfloat3 dots = saturate(.04/length(uv1));\n\nret1 = 4*(1+bass_att)*dots*(.6-ret1);\n\nret = .8*ret1;\n}"}