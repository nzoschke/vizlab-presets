{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":2.107,"wave_smoothing":0,"wave_mystery":-0.22,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.6,"wave_g":0.5,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"textured":1,"num_inst":5,"x":0.73,"rad":0.29466,"tex_zoom":2.79176,"r":0.7,"g":0.7,"b":1,"g2":0,"border_b":0,"border_a":0},"init_eqs_str":"a.ampl=0;a.q25=0;a.q22=0;a.q15=0;a.y0=0;a.x0=0;a.k1=0;a.q16=0;a.trig=0;a.q17=0;","frame_eqs_str":"a.trig=a.q25;a.a=a.trig*Math.min(a.bass+a.treb,1);a.a2=0*a.trig;a.x0=a.x0*bnot(a.trig)+div(a.trig*Math.floor(rand(100)),100);a.y0=a.y0*bnot(a.trig)+div(a.trig*Math.floor(rand(100)),100);a.k1=6.28*div(a.instance,a.num_inst);a.ampl=.1*a.q22+.1;a.x0=.5+a.q15*a.ampl*Math.cos(a.k1+a.q17);a.y0=.5+a.q16*a.ampl*Math.sin(a.k1+a.q17);a.tex_ang=div(Math.floor(rand(20)),3);a.rad=.1+div(Math.floor(rand(8)),12);a.x=a.x0;a.y=a.y0;a.r=.7+.3*Math.sin(div(a.time,12));a.b=.7+.3*Math.sin(div(a.time,\n15));a.g=.7+.3*Math.sin(div(a.time,8));a.r2=a.r;a.b2=a.b;a.g2=a.g;","init_eqs_eel":"","frame_eqs_eel":"trig = q25;\na = trig*min(bass+treb,1); a2 = trig*0;\n//a = min(bass+treb-1,1);\nx0 = x0 *bnot(trig) + trig*int(rand(100))/100;\ny0 = y0 *bnot(trig) + trig*int(rand(100))/100;\n\n\nk1 = instance/num_inst*6.28;\nampl = .1*q22+.1;\n\n\nx0 = .5 +q15*ampl *cos(k1+q17); y0 = .5+ q16*ampl*sin(k1+q17);\n\n\ntex_ang = int(rand(20))/3;\n//tex_ang = time;\nrad = .1 + int(rand(8))/12;\n\nx = x0; y = y0;\nr = .7+.3*sin(time/12);\nb = .7+.3*sin(time/15);\ng = .7+.3*sin(time/8);\nr2 = r; b2 = b; g2 = g;"},{"baseVals":{"enabled":1,"sides":32,"num_inst":37,"rad":0.0364,"ang":0.81681,"tex_ang":0.37699,"tex_zoom":1.02841,"g":1,"b":1,"a":0.05,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.ampl=0;a.g0=0;a.q15=0;a.trel=0;a.yes=0;a.k1=0;a.bright=0;a.q16=0;a.r0=0;a.q17=0;a.q2=0;a.tmp=0;a.b0=0;a.q8=0;","frame_eqs_str":"a.k1=6.28*div(a.instance,a.num_inst);a.tmp=div(a.q17,32)+.1*a.time;a.trel=a.tmp-Math.floor(a.tmp);a.yes=above(Math.sin(div(a.time,9.5)),0);a.bright=6*a.q2*a.q2*a.yes+.1*Math.min(a.q8,1);a.border_a=a.bright;a.tmp=2*Math.sin(div(a.time,12))-1;a.a=.5*a.yes*pow(2,-18*Math.abs(a.k1-6.28*a.trel))*above(a.tmp,0)*a.tmp*a.tmp;a.ampl=.1;a.rad=.02+0*Math.sin(4*a.k1+a.time);a.x=.5+a.q15*a.ampl*Math.cos(a.k1+a.q17);a.y=.5+a.q16*a.ampl*Math.sin(a.k1+a.q17);a.r0=Math.sin(div(a.time,7));a.g0=\nMath.sin(div(a.time,5));a.b0=Math.sin(div(a.time,9));a.border_r=.8+.2*a.r0;a.border_g=.8+.2*a.g0;a.border_b=.8+.2*a.b0;a.a2=0;","init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst*6.28;\ntmp = q17/32+time*.1;\ntrel = tmp-int(tmp);\n\nyes = above(sin(time/9.5),0);\n\nbright = 6*q2*q2*yes+.1*min(q8,1);\nborder_a = bright;\n\ntmp = 2*sin(time/12)-1;\na = .5*yes*pow(2,-18*abs(k1-6.28*trel)) * above(tmp,0)*tmp*tmp;\nampl = .1;\nrad = .02+.0*sin(k1*4+time);\nx = .5 +q15*ampl *cos(k1+q17); y = .5+ q16*ampl*sin(k1+q17);\n\nr0 = sin(time/7);\ng0 = sin(time/5);\nb0 = sin(time/9);\n\nborder_r = .8 + .2*r0;\nborder_g = .8 + .2*g0;\nborder_b = .8 + .2*b0;\n\n\n//r = .5*r0; g = .5*g0; b = 0.5*b0; ;\n\n//r2 = 0; g2 = 0; b2 = 0;\n\na2 = 0;\n"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q1=0;a.trans2=0;a.trans3=0;a.q23=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q1))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q1))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q1))),5)+a.instance-a.instance;a.a=a.trans;a.x=.3*(Math.sin(a.q23)+1.57)+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.3*(Math.cos(a.q23)+1.57)+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),\n1))?1:-1)+a.instance-a.instance;a.rad=.09+div(Math.floor(rand(Math.floor(a.q1))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q1))+\na.instance-a.instance;a.border_b=.1*Math.floor(rand(a.q1))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q1)))/5+instance-instance;\ntrans2 = int(rand(int(q1)))/5+instance-instance;\ntrans3 = int(rand(int(q1)))/5+instance-instance;\na = trans;\n\nx = (sin(q23)+1.57)*.3 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = (cos(q23)+1.57)*.3 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q1)))/15+instance-instance;\nr=int(rand(q1))*.1+instance-instance;\ng=int(rand(q1))*.1+instance-instance;\nb=int(rand(q1))*.1+instance-instance;\nr2=int(rand(q1))*.1+instance-instance;\ng2=int(rand(q1))*.1+instance-instance;\nb2=int(rand(q1))*.1+instance-instance;\nborder_r=int(rand(q1))*.1+instance-instance;\nborder_g=int(rand(q1))*.1+instance-instance;\nborder_b=int(rand(q1))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q1=0;a.trans2=0;a.trans3=0;a.q23=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q1))),15)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q1))),15)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q1))),15)+a.instance-a.instance;a.a=a.trans;a.x=.3*(Math.sin(a.q23)+1.57)+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.3*(Math.cos(a.q23)+1.57)+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),\n1))?1:-1)+a.instance-a.instance;a.rad=.09+div(Math.floor(rand(Math.floor(a.q1))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q1))+\na.instance-a.instance;a.border_b=.1*Math.floor(rand(a.q1))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q1)))/15+instance-instance;\ntrans2 = int(rand(int(q1)))/15+instance-instance;\ntrans3 = int(rand(int(q1)))/15+instance-instance;\na = trans;\n\nx = (sin(q23)+1.57)*.3 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = (cos(q23)+1.57)*.3 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q1)))/15+instance-instance;\nr=int(rand(q1))*.1+instance-instance;\ng=int(rand(q1))*.1+instance-instance;\nb=int(rand(q1))*.1+instance-instance;\nr2=int(rand(q1))*.1+instance-instance;\ng2=int(rand(q1))*.1+instance-instance;\nb2=int(rand(q1))*.1+instance-instance;\nborder_r=int(rand(q1))*.1+instance-instance;\nborder_g=int(rand(q1))*.1+instance-instance;\nborder_b=int(rand(q1))*.1+instance-instance;\n"}],"waves":[{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"smoothing":0.8,"a":0.04},"init_eqs_str":"a.sw=0;a.osa=0;a.mod=0;a.q32=0;a.mo=0;a.q1=0;a.q23=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*above(a.sample,0);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value1,2)*sign(a.value1)*.5;a.mod=a.value1;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:.5*a.sample+.25;a.y=.5*a.sample+.25;a.y=div(a.y-.5,a.q32)+.5;a.x=1-.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q1;a.r=.5+.5*Math.sin(.9*a.q23+a.mo);a.g=.5+.5*Math.sin(.89*a.q23+a.mo+1.5472);a.b=.5+.5*Math.sin(.88*a.q23+a.mo+2.8944);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*above(sample,0);\n\nosa = sample*above(sample,0);\n\nmod = pow(value1*2,2)*sign(value1)*.5;\n\nmod = value1;\nmod = mod*sw;\n\ny = if(sw,osa,sample*.5+.25);\ny = sample*.5+.25;\ny = (y-0.5)/(q32) + 0.5;\nx = 1 - mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\nr = .5 + sin(q23*.9 +mo)*.5;\ng = .5 + sin(q23*.89+mo + 1.5472)*.5;\nb = .5 + sin(q23*.88+mo + 2.8944)*.5;\n\n//a = 3 - abs(mod)*12;\n//a = 3-sw;\n//a = max(0,min(a,1));"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"smoothing":0.8,"a":0.04},"init_eqs_str":"a.sw=0;a.osa=0;a.mod=0;a.q32=0;a.mo=0;a.q1=0;a.q23=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*below(a.sample,1);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value2,2)*sign(a.value2)*.5;a.mod=a.value2;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:.5*a.sample+.25;a.y=.5*a.sample+.25;a.y=div(a.y-.5,a.q32)+.5;a.x=.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q1;a.r=.5+.5*Math.sin(.95*a.q23+a.mo);a.g=.5+.5*Math.sin(.96*a.q23+a.mo+1.5472);a.b=.5+.5*Math.sin(.97*a.q23+a.mo+2.8944);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*below(sample,1);\n\nosa = sample*above(sample,0);\n\nmod = pow(value2*2,2)*sign(value2)*.5;\n\nmod = value2;\nmod = mod*sw;\n\ny = if(sw,osa,sample*.5+.25);\ny = sample*.5+.25;\ny = (y-0.5)/(q32) + 0.5;\nx = 0+ mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\nr = .5 + sin(q23*.95+mo)*.5;\ng = .5 + sin(q23*.96+mo + 1.5472)*.5;\nb = .5 + sin(q23*.97+mo + 2.8944)*.5;\n\n//a = 3 - abs(mod)*12;\n//a = 3-sw;\n//a = max(0,min(a,1));"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.sw=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.index3=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.atime=0;a.q4=0;a.k2=0;a.q26=0;a.p2=0;a.avg=0;a.rota=0;a.movez=0;a.beat=0;a.vol=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q32=0;a.q7=0;a.q28=0;a.q30=0;a.v2=0;a.q20=0;a.q8=0;a.vol=0;a.p1=0;a.vx=.2;a.vy=-.1;a.kx=0;a.ky=0;","frame_eqs_str":"a.dec_med=pow(.96,div(30,a.fps));a.dec_slow=pow(.98,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),2);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),2);a.q20=a.avg;a.q21=\na.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.vol=a.bass_att+a.treb_att;a.v2=a.v2*a.dec_slow+a.vol*(1-a.dec_slow);a.q26=Math.max(Math.atan(a.vol-.8*a.v2),.3);a.q27=a.index+1;a.sw=a.sw*a.dec_med+(1-a.dec_med)*mod(a.index2,2);a.q28=a.sw;a.k1=a.is_beat*bnot(20*a.index);a.k2=a.is_beat*bnot(a.index);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_slow*a.p2+(1-a.dec_slow)*a.p1;a.rott=div(3.1416*a.p2,2);a.monitor=a.k1;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q5=Math.cos(div(a.time,\n6));a.q6=-Math.sin(div(a.time,6));a.q7=-a.q6;a.q8=a.q5;a.zoom=1;a.rot=-0;a.movez+=div(.18*(a.q1+1.1),a.fps);a.q29=a.movez;a.rota+=div(.09*(2-a.q1),a.fps);a.q30=a.rota;a.q31=2+16*Math.abs(Math.cos(div(a.time,18)));a.q32=div(Math.cos(div(a.time,23)),4);a.q32=a.aspecty;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q8=.01*a.atime;a.q1=1.5*a.vol;a.q23=.1*a.atime;","pixel_eqs_str":"","init_eqs_eel":"vol = 0; p1 = 0;\nvx = .2; vy = -0.1;\nkx = 0; ky = 0;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\ndec_slow = pow (0.98, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%2;\nindex3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\n\nvol = bass_att + treb_att;\nv2 = v2 * dec_slow + vol * (1-dec_slow) ;\nq26 = max(atan (vol - v2*.8),.3);\n\nq27 = index + 1;\n\nsw = sw*dec_med + (1-dec_med)*(index2%2);\nq28 = sw;\n\nk1 =  is_beat*bnot(index*20);\nk2 =  is_beat*bnot(index);\n\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_slow * p2+ (1-dec_slow)*p1;\nrott = p2 * 3.1416/2;\nmonitor = k1;\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n\nq5 = cos(time/6);\nq6 = -sin(time/6);\nq7 = -q6;\nq8 = q5;\n\nzoom = 1;\nrot = -0;\n\nmovez = movez + .006*(q1+1.1)*30/fps;\nq29 = movez;\nrota = rota + .003*(2-q1)*30/fps;\nq30 = rota;\nq31 = 2 + 16*abs(cos(time/18));\nq32 = cos(time/23)/4;\n\n\n\nq32=aspecty;\nvol=bass+treb+mid;\natime=atime+vol;\nq8=atime*.01;\nq1=vol*1.5;\nq23=atime*.1;","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_4);\n  tmpvar_5[uint(0)].y = sin(tmpvar_4);\n  tmpvar_5[1u].x = -(sin(tmpvar_4));\n  tmpvar_5[1u].y = cos(tmpvar_4);\n  uv6_2 = (tmpvar_3 * tmpvar_5);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_3)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_6;\n  tmpvar_6 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_7.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_7 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_7, tmpvar_7))\n   * tmpvar_6)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((crisp_1 - \n    (dot (tmpvar_6, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_8.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv_1;\n  float t_rel_2;\n  float inten_4;\n  float dist_5;\n  float ang2_6;\n  vec3 ret_7;\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_fc_main, uv);\n  ret_7 = tmpvar_8.xyz;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_5 = 0.0;\n  inten_4 = 0.0;\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\n  t_rel_2 = q29;\n  for (float n_3 = 0.0; n_3 < 7.0; n_3 += 1.0) {\n    ang2_6 = (((6.28 * n_3) / 7.0) + q30);\n    float tmpvar_9;\n    tmpvar_9 = cos(ang2_6);\n    float tmpvar_10;\n    tmpvar_10 = sin(ang2_6);\n    xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\n    xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\n    dist_5 = (1.0 - fract((\n      (n_3 * 7.0)\n     - t_rel_2)));\n    inten_4 = (dist_5 * (1.0 - (dist_5 * dist_5)));\n    xlat_mutableuv3 = ((-0.85 * xlat_mutableuv2) * dist_5);\n    xlat_mutableblur = (((texture (sampler_blur1, \n      fract(xlat_mutableuv3)\n    ).xyz * scale1) + bias1) * vec3(0.5, 0.9, 1.0));\n    xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, \n      (xlat_mutableuv3 * 2.0)\n    ).xyz - xlat_mutableblur) * inten_4));\n  };\n  uv_1 = (uv_1 * (tmpvar_8.xy * uv_orig));\n  ret_7 = (uv_1.x - (tmpvar_8.xyz * uv_1.x));\n  ret_7 = (ret_7 + (xlat_mutableret1 * 16.0));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_7;\n  ret = tmpvar_11.xyz;\n }","warp_hlsl":"float3 color, mus;\nfloat dx,dy;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\n\nfloat2 uv1 = (uv-.5);\nfloat2 uv6 = uv1;\n\nfloat rota = lum(tex2D (sampler_noise_hq,uv/4))*q31;\n\nuv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));\nuv6 += sin(q32*uv1);\nmus = .2/(sqrt(uv6.x)+.2);\n\nmus *= float3 (1.1,1,.95);\nmus *= .9+.1*tex2D (sampler_noise_hq,uv);\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (0.005,0);\nfloat2 ver = float2 (0,.005);\n\nfloat dx = lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\n\nfloat2 zz = float2 (dx,dy);\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\nfloat3 crisp2 = tex2D(sampler_main,uv);\ncrisp += crisp2/2;\ncrisp *= .67;\ncrisp +=.08 * mus - length(zz)*blur;\n\nfloat3 ret1 = crisp - lum(blur)*.04;\nret = ret1 * .99 -  .04 ;\n}","comp_hlsl":"float3 ret1, neu, crisp, blur;\nfloat2 uv2, uv3;\n\nshader_body\n{\nret=tex2D(sampler_fc_main, uv);\n\nfloat ang2, c, s;\nuv -= .5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv_orig.xyy;\nfloat dist = 0;\nfloat inten = 0;\nfloat mask = 0;\nret1 = 0;\nint anz = 7;\nfloat n = 0;\nfloat t_rel = q29;\nwhile (n < anz) {\n    ang2 = 6.28*n/anz+q30;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    //uv2*= aspect.yx;\n\n    dist = 1-frac(n*anz-t_rel); //evtl sqrt !\n\n    inten =  dist*(1-dist*dist);\n    uv3 = -.85*uv2*dist*1;\n    crisp = GetPixel(uv3*2);\n    blur = GetBlur1(frac(uv3)) * float3 (.5,.9,1);\n    ret1 = max(ret1,(crisp-blur)*inten);\nn++;\n}\n\nuv*=ret.xy*uv_orig;\nfloat3 ret1 = ret1 ;\n\nret=uv.x-(ret*uv.x);\nret += ret1*16;\n\n}"}