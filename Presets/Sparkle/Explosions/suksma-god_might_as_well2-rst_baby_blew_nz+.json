{"version":2,"baseVals":{"rating":5,"gammaadj":2.001,"decay":0.9,"echo_alpha":0.29,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":0.01,"fshader":1,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"g2":0,"border_r":0.4,"border_g":0.5},"init_eqs_str":"a.frametest=0;a.monitor=0;","frame_eqs_str":"a.r=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.234*a.time):.1*Math.sin(1.234*a.time);a.g=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.345*a.time):.1*Math.sin(1.345*a.time);a.b=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.456*a.time):.1*Math.sin(1.456*a.time);a.border_a=.25*Math.sin(a.time);a.ang+=.67*Math.sin(a.time);a.rad+=.1*a.bass;a.frametest=equal(mod(a.frame,2),0);a.x-=.1*Math.tan(3.14*a.time);a.y-=.1*Math.sin(3.14*a.time);a.x=.00001<Math.abs(a.frametest)?\na.x:1-a.x;a.y=.00001<Math.abs(a.frametest)?a.y:1-a.y;a.r=.00001<Math.abs(a.frametest)?a.r:a.b;a.b=.00001<Math.abs(a.frametest)?a.b:a.g;a.monitor=a.frametest;","init_eqs_eel":"","frame_eqs_eel":"r = if(above(bass, 1.2), .5*sin(time*1.234), .1*sin(time*1.234));\ng = if(above(bass, 1.2), .5*sin(time*1.345), .1*sin(time*1.345));\nb = if(above(bass, 1.2), .5*sin(time*1.456), .1*sin(time*1.456));\nborder_a = .25*sin(time);\n\nang = ang + .67*sin(time);\nrad = rad + bass*.1;\n\nframetest = equal(frame%2, 0);\n\n//x = if(frametest, x - .25*sin(time), x + .25*sin(time);\nx = x - .1*tan(time*3.14);\ny = y - .1*sin(time*3.14);\nx = if(frametest, x, 1-x);\ny = if(frametest, y, 1-y);\nr = if(frametest, r, b);\nb = if(frametest, b, g);\n\nmonitor = frametest;"},{"baseVals":{"enabled":1,"additive":1,"rad":2.41456,"g2":0,"border_r":0.4,"border_g":0.5},"init_eqs_str":"a.frametest=0;a.monitor=0;","frame_eqs_str":"a.r=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(2.234*a.time):0;a.g=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(2.345*a.time):0;a.b=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(2.456*a.time):0;a.border_a=.25*Math.sin(a.time);a.ang+=.67*Math.sin(a.time);a.rad+=.1*a.bass;a.frametest=equal(mod(a.frame,2),0);a.x-=.2*Math.sin(2*a.time);a.y-=.2*Math.tan(2*a.time);a.x=.00001<Math.abs(a.frametest)?a.x:1-a.x;a.y=.00001<Math.abs(a.frametest)?a.y:1-a.y;a.r=.00001<Math.abs(a.frametest)?\na.r:a.b;a.b=.00001<Math.abs(a.frametest)?a.b:a.g;a.monitor=a.frametest;","init_eqs_eel":"","frame_eqs_eel":"r = if(above(bass, 1.2), .5*sin(time*2.234), 0);\ng = if(above(bass, 1.2), .5*sin(time*2.345), 0);\nb = if(above(bass, 1.2), .5*sin(time*2.456), 0);\nborder_a = .25*sin(time);\n\nang = ang + .67*sin(time);\nrad = rad + bass*.1;\n\nframetest = equal(frame%2, 0);\n\n//x = if(frametest, x - .25*sin(time), x + .25*sin(time);\nx = x - .2*sin(time*2);\ny = y - .2*tan(time*2);\nx = if(frametest, x, 1-x);\ny = if(frametest, y, 1-y);\nr = if(frametest, r, b);\nb = if(frametest, b, g);\n\nmonitor = frametest;"},{"baseVals":{"enabled":1,"sides":30,"additive":1,"textured":1,"rad":0.44484,"r":0,"a2":1},"init_eqs_str":"","frame_eqs_str":"a.r2=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.523*a.time):1;a.g2=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.983*a.time):1;a.b2=.00001<Math.abs(above(a.bass,1.2))?.75+.5*Math.sin(1.194*a.time):1;a.rad-=.4*a.bass_att;a.x+=.5*Math.sin(a.time);a.y-=.2*Math.cos(a.time);","init_eqs_eel":"","frame_eqs_eel":"r2 = if(above(bass, 1.2), 0.5*sin(time*1.523), 1);\ng2 = if(above(bass, 1.2), 0.5*sin(time*1.983), 1);\nb2 = if(above(bass, 1.2), 0.75+.5*sin(time*1.194), 1);\nrad = rad - .4*bass_att;\n\nx = x +.5*sin(time);\ny = y -.2*cos(time);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.m2time=0;a.gamma=0;a.q25=0;a.q22=0;a.q21=0;a.meanbass_att=0;a.q29=0;a.q6=0;a.q1=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.flip=0;a.lastbeat=0;a.mq23=0;a.beatrate=0;a.mode=0;a.q23=0;a.q24=0;a.peakbass_att=0;a.beatcounter=0;a.mq30=0;a.q4=0;a.q26=0;a.beatdrop=0;a.att=0;a.mq27=0;a.mq25=0;a.volume=0;a.mq22=0;a.beat=0;a.vol=0;a.mq26=0;a.q2=0;a.q27=0;a.vol2=0;a.q3=0;a.q7=0;a.q28=0;a.q30=0;a.mtime=0;a.q8=0;a.mv_x=64;a.mv_y=48;a.dcsp=0;a.zoom=1;a.warp=0;a.rot=\n0;a.dx=0;a.dy=0;a.sx=1;a.sy=-1;a.cx=.5;a.cy=.5;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq30=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq30;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q30=a.mq30;a.monitor=a.mq1;a.decay=1;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.mtime+=.01*a.vol*div(75,a.fps);a.q1=a.vol;a.q2=a.mtime;a.vol2=.33*(a.mid+a.treb);a.vol2*=a.vol2;a.m2time+=.01*a.vol2*div(75,a.fps);\na.q3=a.vol2;a.q4=a.m2time;a.volume=.3*(a.bass+a.mid+a.att);a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,a.peakbass_att);a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+\n(1-a.beat)*a.peakbass_att*(.95*above(a.time-a.lastbeat,2*a.beatrate)+.995*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatcounter+=a.beat;a.mode=.00001<Math.abs(a.beat*equal(mod(a.beatcounter,2),0))?1-a.mode:a.mode;a.flip=2*a.mode-1;a.beatdrop=.00001<Math.abs(equal(a.beatdrop,\n0))?a.beat:Math.max(a.beatdrop-.02*div(75,a.fps),0);a.q7=a.beatdrop;a.q8=a.flip;a.q6=1.005;a.zoom=1;a.sx=-a.q6;a.sy=a.q6;a.warp=0;a.cx=.5+a.dx;a.gamma=1+a.beatdrop*a.beatdrop;a.q29=8*a.vol;","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\ndcsp=0;\n\nzoom = 1.0;\nwarp = 0;\nrot = 0;\ndx = 0;\ndy = 0;\nsx = 1;\nsy = -1;\ncx = 0.5;\ncy = 0.5;","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq30=if(above(chng,cthr),rand(1)*.3,mq30);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\n\nmonitor=mq1;\ndecay = 1;\n\n//uncommenting this block will make decay start at 0 when preset begins, and rise to the \"max_decay\" value\n//max_decay = 0.97;\n//dcsp = dcsp + 0.007*(75/fps);\n//dcsp = min(dcsp , max_decay);\n//decay = dcsp;\n\n//volume, and volume based time. framerate adjusted\nvol = (bass+mid+treb)*0.25;\nvol = vol*vol;\n\nmtime = mtime + vol * 0.01 * (75/fps);\n\nq1 = vol;\nq2 = mtime;\n\n//non bass volume\nvol2 = (mid+treb)*0.33;\nvol2 = vol2*vol2;\n\nm2time = m2time + vol2 * 0.01 * (75/fps);\n\nq3 = vol2;\nq4 = m2time;\n\n\n//krash's beat detection code\nvolume = 0.3*(bass+mid+att);\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatcounter = beatcounter + beat;\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\nflip = 2*mode-1;\n\nbeatdrop = if( equal(beatdrop,0) , beat , max(beatdrop - 0.02*(75/fps) , 0) );\n\nq7 = beatdrop;\nq8 = flip;\n\n\n\n\nq6 = 1.0 + 0.005;//beatdrop*0.03;\n\nzoom = 1;\nsx = -q6;\nsy = q6;\n\nwarp=0;\n\n//dx = sin(time/4)*0.15;\ncx = 0.5 + dx ;\n\ngamma = 1 + beatdrop*beatdrop;\nq29=vol*8;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 rsamp_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_pw_main, uv);\n  ret_2 = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.xy - 0.5)\n   * 12.0) * texsize.zw)));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  rsamp_1 = tmpvar_6;\n  float tmpvar_7;\n  vec2 x_8;\n  x_8 = (tmpvar_4.xy - uv);\n  tmpvar_7 = sqrt(dot (x_8, x_8));\n  float tmpvar_9;\n  vec2 x_10;\n  x_10 = (tmpvar_5.xy - uv);\n  tmpvar_9 = sqrt(dot (x_10, x_10));\n  if ((tmpvar_7 > tmpvar_9)) {\n    ret_2.xy = tmpvar_6.xy;\n  };\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.zw - 0.5)\n   * 48.0) * texsize.zw)));\n  rsamp_1 = tmpvar_11.xyz;\n  float tmpvar_12;\n  vec2 x_13;\n  x_13 = (ret_2.xy - uv);\n  tmpvar_12 = sqrt(dot (x_13, x_13));\n  float tmpvar_14;\n  vec2 x_15;\n  x_15 = (tmpvar_11.xy - uv);\n  tmpvar_14 = sqrt(dot (x_15, x_15));\n  if ((tmpvar_12 > tmpvar_14)) {\n    ret_2.xy = rsamp_1.xy;\n  };\n  ret_2.z = texture (sampler_fw_main, ret_2.xy).z;\n  ret_2.z = (ret_2.z + (q29 * 0.05));\n  if ((((ret_2.z - ret_2.x) - ret_2.y) < 0.09)) {\n    ret_2 = (ret_2 * 0.1);\n  };\n  vec4 tmpvar_16;\n  tmpvar_16 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * roam_cos.y)) && (ret_2.x <= (q24 * roam_sin.x)))) {\n    ret_2.y = (ret_2.y - (tmpvar_16.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * roam_sin.x)) && (ret_2.y <= (q25 * roam_cos.x)))) {\n    ret_2.z = (ret_2.z - (tmpvar_16.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * roam_cos.x)) && (ret_2.z <= (q26 * roam_sin.y)))) {\n    ret_2.x = (ret_2.x - (tmpvar_16.z * 0.5));\n  };\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_2;\n  ret = tmpvar_17.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.5 + ((uv - 0.5) * vec2(1.0, -1.0)));\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_4.y = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1)).y;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv_1 - (tmpvar_4 * 0.1));\n  ret_2 = (((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2).x * vec3(0.0, 0.0, 2.0));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (ret_2, vec3(1.2, 1.2, 1.2), ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1).xxx);\n  ret_2 = tmpvar_6;\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((tmpvar_6.x > (q26 * roam_cos.y)) && (tmpvar_6.x <= (q23 * roam_sin.x)))) {\n    ret_2.z = (tmpvar_6.z - (tmpvar_7.x * 0.5));\n  };\n  if (((tmpvar_6.y > (q25 * roam_sin.x)) && (tmpvar_6.y <= (q22 * roam_cos.x)))) {\n    ret_2.x = (tmpvar_6.x - (tmpvar_7.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * roam_cos.x)) && (ret_2.z <= (q21 * roam_sin.y)))) {\n    ret_2.y = (tmpvar_6.y - (tmpvar_7.z * 0.5));\n  };\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv;\n\nfloat2 noise_uv = uv*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));\nret.xyz = tex2D( sampler_pw_main,uvm).xyz;\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nrsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nret.z = tex2D(sampler_fw_main,ret.xy).z;\n\nret.z += q29*.05;\n\nif (ret.z-ret.x-ret.y < .09) {\nret*=.10;\n}\n\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; \nif(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z -= (noise9).y*.5; \nif(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; \n\n}","comp_hlsl":"shader_body\n{\nuv = 0.5 + (uv-0.5)*float2(1,-1);\n\n    float2 d = texsize.zw*4;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\n\nfloat2 uv_x = uv - float2(dx.y,dy.y)*0.1;\nret = GetBlur2(uv_x).x*float3(0,0,2);\nret = lerp(ret,1.2,GetBlur1(uv_x).x);\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q30 \n                     );\nif(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z -= (noise9).x*.5; \nif(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x -= (noise9).y*.5; \nif(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y -= (noise9).z*.5; \n}"}