{"version":2,"baseVals":{"rating":5,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"warpscale":1.331,"zoom":1.0003,"warp":0.01,"sy":1.1046,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"ob_size":0.003,"ob_r":0.05,"ob_g":0.05,"ob_b":0.1,"ob_a":1,"ib_size":0.26,"mv_a":0,"b1n":0.4},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=\n.09+div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;\na.border_b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/15+instance-instance;\ntrans2 = int(rand(int(q30)))/15+instance-instance;\ntrans3 = int(rand(int(q30)))/15+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q30))*.1+instance-instance;\ng=int(rand(q30))*.1+instance-instance;\nb=int(rand(q30))*.1+instance-instance;\nr2=int(rand(q30))*.1+instance-instance;\ng2=int(rand(q30))*.1+instance-instance;\nb2=int(rand(q30))*.1+instance-instance;\nborder_r=int(rand(q30))*.1+instance-instance;\nborder_g=int(rand(q30))*.1+instance-instance;\nborder_b=int(rand(q30))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+\ndiv(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;\na.border_b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/15+instance-instance;\ntrans2 = int(rand(int(q30)))/15+instance-instance;\ntrans3 = int(rand(int(q30)))/15+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = .5 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q30))*.1+instance-instance;\ng=int(rand(q30))*.1+instance-instance;\nb=int(rand(q30))*.1+instance-instance;\nr2=int(rand(q30))*.1+instance-instance;\ng2=int(rand(q30))*.1+instance-instance;\nb2=int(rand(q30))*.1+instance-instance;\nborder_r=int(rand(q30))*.1+instance-instance;\nborder_g=int(rand(q30))*.1+instance-instance;\nborder_b=int(rand(q30))*.1+instance-instance;\n"},{"baseVals":{"sides":32,"thickoutline":1,"num_inst":33,"r":0.5,"r2":0.5,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\na2 = trans2;\nborder_a = trans3;\n\nx = q1 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\na2 = trans2;\nborder_a = trans3;\n\nx = q1 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.xx=0;a.mq1=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.wzoom=0;a.q13=0;a.q29=0;a.q1=0;a.mq31=0;a.q5=0;a.mq21=0;a.mq24=0;a.bass_thresh=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.atime=0;a.ry=0;a.q4=0;a.rx=0;a.q26=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.q2=0;a.q27=0;a.q3=0;a.yy=0;a.q28=0;a.q30=0;a.mtime=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.bass_thresh=\n2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.91*(a.bass_thresh-1.3)+1.3);a.xx=5*equal(a.bass_thresh,2)*Math.sin(4*a.time)+(1-equal(a.bass_thresh,2))*a.xx;a.yy=5*equal(a.bass_thresh,2)*Math.sin(2.4*-a.time)+(1-equal(a.bass_thresh,2))*a.yy;a.q10=a.xx;a.q11=a.yy;a.wzoom=.18*Math.sin(a.time);a.q3=a.wzoom;a.q1=.8-.3*Math.sin(1.3*-a.time);a.q2=.8-.3*Math.cos(-a.time);a.vol=.1*(9*a.vol+.333333*(a.bass_att+a.mid_att+a.treb_att));a.mtime+=.05*a.vol;a.rx=.5+.7*Math.sin(a.mtime);a.ry=\n.5+.7*Math.sin(1.4*a.mtime);a.q4=a.rx;a.q5=a.ry;a.q30=10*a.vol;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.91+1.3);\n\nxx = equal(bass_thresh,2)*5*sin(time*4) + (1-equal(bass_thresh,2))*xx;\nyy = equal(bass_thresh,2)*5*sin(-time*2.4) + (1-equal(bass_thresh,2))*yy;\n\nq10=xx;\nq11=yy;\nwzoom = 0.18*sin(time);\nq3=wzoom;\nq1 = 0.8 - 0.3*sin(-time*1.3);\nq2 = 0.8 - 0.3*cos(-time);\n\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\nmtime = mtime+vol*0.05;\n\nrx = 0.5+0.7*sin(mtime);\nry = 0.5+0.7*sin(mtime*1.4);\nq4=rx;\nq5=ry;\nq30=vol*10;","pixel_eqs_eel":"","warp":"uniform sampler2D sampler_fc_colors;\n shader_body { \n  vec2 modi_1;\n  vec2 uxy_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4.x = q4;\n  tmpvar_4.y = q5;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((uv - vec2(0.5, 0.5)) * vec2(5.0, 5.0));\n  uxy_2 = tmpvar_5;\n  float tmpvar_6;\n  tmpvar_6 = floor((q10 + 0.5));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_6;\n  tmpvar_7.y = floor((q11 + 0.5));\n  modi_1 = tmpvar_7;\n  bvec2 tmpvar_8;\n  tmpvar_8 = bvec2(tmpvar_7);\n  bool tmpvar_9;\n  tmpvar_9 = (tmpvar_8.x && tmpvar_8.y);\n  if (!(tmpvar_9)) {\n    vec2 tmpvar_10;\n    tmpvar_10.x = abs((tmpvar_6 + 1.0));\n    tmpvar_10.y = (abs(tmpvar_7.y) + 1.0);\n    modi_1 = tmpvar_10;\n  };\n  float tmpvar_11;\n  tmpvar_11 = sqrt(((tmpvar_5.x * tmpvar_5.x) + (tmpvar_5.y * tmpvar_5.y)));\n  float tmpvar_12;\n  float tmpvar_13;\n  tmpvar_13 = (min (abs(\n    (tmpvar_5.y / tmpvar_5.x)\n  ), 1.0) / max (abs(\n    (tmpvar_5.y / tmpvar_5.x)\n  ), 1.0));\n  float tmpvar_14;\n  tmpvar_14 = (tmpvar_13 * tmpvar_13);\n  tmpvar_14 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_14) + 0.05368138) * tmpvar_14) - 0.1173503)\n     * tmpvar_14) + 0.1938925) * tmpvar_14) - 0.3326756)\n   * tmpvar_14) + 0.9999793) * tmpvar_13);\n  tmpvar_14 = (tmpvar_14 + (float(\n    (abs((tmpvar_5.y / tmpvar_5.x)) > 1.0)\n  ) * (\n    (tmpvar_14 * -2.0)\n   + 1.570796)));\n  tmpvar_12 = (tmpvar_14 * sign((tmpvar_5.y / tmpvar_5.x)));\n  if ((abs(tmpvar_5.x) > (1e-08 * abs(tmpvar_5.y)))) {\n    if ((tmpvar_5.x < 0.0)) {\n      if ((tmpvar_5.y >= 0.0)) {\n        tmpvar_12 += 3.141593;\n      } else {\n        tmpvar_12 = (tmpvar_12 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_12 = (sign(tmpvar_5.y) * 1.570796);\n  };\n  vec2 tmpvar_15;\n  tmpvar_15.x = (pow (tmpvar_11, -2.0) * cos((tmpvar_12 * modi_1.y)));\n  tmpvar_15.y = (pow (tmpvar_11, -2.0) * sin((tmpvar_12 * modi_1.y)));\n  uxy_2 = (tmpvar_15 + tmpvar_4);\n  float tmpvar_16;\n  float tmpvar_17;\n  tmpvar_17 = (min (abs(\n    (uxy_2.y / uxy_2.x)\n  ), 1.0) / max (abs(\n    (uxy_2.y / uxy_2.x)\n  ), 1.0));\n  float tmpvar_18;\n  tmpvar_18 = (tmpvar_17 * tmpvar_17);\n  tmpvar_18 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_18) + 0.05368138) * tmpvar_18) - 0.1173503)\n     * tmpvar_18) + 0.1938925) * tmpvar_18) - 0.3326756)\n   * tmpvar_18) + 0.9999793) * tmpvar_17);\n  tmpvar_18 = (tmpvar_18 + (float(\n    (abs((uxy_2.y / uxy_2.x)) > 1.0)\n  ) * (\n    (tmpvar_18 * -2.0)\n   + 1.570796)));\n  tmpvar_16 = (tmpvar_18 * sign((uxy_2.y / uxy_2.x)));\n  if ((abs(uxy_2.x) > (1e-08 * abs(uxy_2.y)))) {\n    if ((uxy_2.x < 0.0)) {\n      if ((uxy_2.y >= 0.0)) {\n        tmpvar_16 += 3.141593;\n      } else {\n        tmpvar_16 = (tmpvar_16 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_16 = (sign(uxy_2.y) * 1.570796);\n  };\n  float tmpvar_19;\n  tmpvar_19 = sqrt(((uxy_2.x * uxy_2.x) + (uxy_2.y * uxy_2.y)));\n  vec2 tmpvar_20;\n  tmpvar_20.x = (pow (tmpvar_19, -2.0) * cos((tmpvar_16 * modi_1.y)));\n  tmpvar_20.y = (pow (tmpvar_19, -2.0) * sin((tmpvar_16 * modi_1.y)));\n  uxy_2 = (tmpvar_20 + tmpvar_4);\n  vec4 tmpvar_21;\n  tmpvar_21 = texture (sampler_fc_colors, uxy_2);\n  vec4 tmpvar_22;\n  tmpvar_22 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uxy_2.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_3.x > (q21 * q13)) && (ret_3.x <= (q24 * q11)))) {\n    ret_3.y = (ret_3.y - (tmpvar_22.x * 0.5));\n  };\n  if (((ret_3.y > (q22 * q11)) && (ret_3.y <= (q25 * q12)))) {\n    ret_3.z = (ret_3.z - (tmpvar_22.y * 0.5));\n  };\n  if (((ret_3.z > (q23 * q12)) && (ret_3.z <= (q26 * q13)))) {\n    ret_3.x = (ret_3.x - (tmpvar_22.z * 0.5));\n  };\n  ret_3 = (tmpvar_21.xyz * (dot (tmpvar_21.xyz, vec3(0.32, 0.49, 0.29)) * 1.4));\n  vec4 tmpvar_23;\n  tmpvar_23.w = 1.0;\n  tmpvar_23.xyz = ret_3;\n  ret = tmpvar_23.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec3 xlat_mutableret2;\nvec3 xlat_mutablereta;\nvec2 xlat_mutablesam;\n shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv);\n  xlat_mutableret1 = tmpvar_3.xyz;\n  xlat_mutablesam = (texture (sampler_main, (uv * 0.5)).xy * ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, (xlat_mutablesam + uv));\n  xlat_mutablereta = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * xlat_mutablesam.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_4.x > (q26 * q13)) && (tmpvar_4.x <= (q23 * q11)))) {\n    xlat_mutablereta.z = (tmpvar_4.z - (tmpvar_5.x * 0.5));\n  };\n  if (((tmpvar_4.y > (q25 * q11)) && (tmpvar_4.y <= (q22 * q12)))) {\n    xlat_mutablereta.x = (tmpvar_4.x - (tmpvar_5.y * 0.5));\n  };\n  if (((xlat_mutablereta.z > (q24 * q12)) && (xlat_mutablereta.z <= (q21 * q13)))) {\n    xlat_mutablereta.y = (tmpvar_4.y - (tmpvar_5.z * 0.5));\n  };\n  float tmpvar_6;\n  tmpvar_6 = (0.5 * bass_att);\n  xlat_mutableret1 = ((xlat_mutablereta.x * (\n    (tmpvar_6 * uv_orig.y)\n   + xlat_mutablereta)) + (xlat_mutablereta.x * tmpvar_3.xyz));\n  xlat_mutableret1 = (xlat_mutableret1 * ((xlat_mutableret1 + 1.0) / 2.0));\n  uv_1 = (((uv - 0.5) * 0.3) + 0.5);\n  xlat_mutablesam = (texture (sampler_main, (uv_1 * 0.5)).xy * ((\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv_1).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_main, (xlat_mutablesam + uv_1));\n  xlat_mutablereta = tmpvar_7.xyz;\n  xlat_mutableret2 = ((tmpvar_7.x * (\n    (tmpvar_6 * uv_orig.y)\n   + tmpvar_7.xyz)) + (tmpvar_7.x * texture (sampler_main, uv_1).xyz));\n  xlat_mutableret2 = (xlat_mutableret2 * (xlat_mutableret1 + 1.0));\n  vec3 tmpvar_8;\n  tmpvar_8 = max (xlat_mutableret1, xlat_mutableret2);\n  ret_2 = (tmpvar_8 * (0.5 + (0.5 * \n    dot (tmpvar_8, vec3(0.32, 0.49, 0.29))\n  )));\n  ret_2 = (1.0 - ret_2);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"sampler sampler_fc_colors;\nshader_body \n{ \n\n    float2 zoom = 5;\n    float2 c = float2(q4, q5);\n    float2 uxy = (float2(uv.x-0.5, uv.y-0.5))*zoom;\n    float2 modi = float2(round(q10), round(q11));\n\n    //if a value is 0 add 1 to both, 0's break the effect\n    if(all(modi)) {} else {modi = float2(abs(modi.x+1), abs(modi.y)+1);}\n\n    float moduz = sqrt(uxy.x*uxy.x + uxy.y*uxy.y);\n\n    float thetaz = atan2(uxy.y, uxy.x);\n\n    uxy = (float2((pow(moduz, -2)*cos(thetaz*modi.y)), (pow(moduz, -2)*sin(thetaz*modi.y))))+c;\n    thetaz = atan2(uxy.y, uxy.x);\n    moduz = sqrt(uxy.x*uxy.x + uxy.y*uxy.y);\n    uxy = (float2((pow(moduz, -2)*cos(thetaz*modi.y)), (pow(moduz, -2)*sin(thetaz*modi.y))))+c;\n        \n    float3 reta = tex2D(sampler_fc_colors, uxy).xyz;    \nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uxy.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; \n\n    ret = reta;\n\n    ret *= lum(ret)*1.4;\n}","comp_hlsl":"float3 ret1, ret2, reta;\nfloat2 sam;\nshader_body\n{\n    sam = tex2D(sampler_main,uv*.5);\n    ret1 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((sam.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(reta.x> q26*q13         && reta.x<= q23*q11        )reta.z -= (noise9).x*.5; \nif(reta.y> q25*q11         && reta.y<= q22*q12        )reta.x -= (noise9).y*.5; \nif(reta.z> q24*q12         && reta.z<= q21*q13        )reta.y -= (noise9).z*.5; \n    ret1 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret1;\n    ret1 *= (ret1+1)/2; //gamma\n\nuv = (uv-.5)*.3+.5;\n    sam = tex2D(sampler_main,uv*.5);\n    ret2 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret2 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret2;\n    ret2 *= (ret1+1); //gamma\n\n\n\nret = max(ret1, ret2);\nret *= .5+.5*lum(ret);\n//ret = (1+ret1)*ret2;\nret=1-ret;\n}\n\n"}