{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0,"echo_zoom":1,"echo_orient":3,"wave_mode":4,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"wave_a":0.001,"wave_scale":2.107,"wave_smoothing":0,"wave_mystery":-0.22,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.6,"wave_g":0.5,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"textured":1,"num_inst":5,"x":0.73,"rad":0.29466,"tex_zoom":2.79176,"r":0.7,"g":0.7,"b":1,"g2":0,"border_b":0,"border_a":0},"init_eqs_str":"a.ampl=0;a.q25=0;a.q22=0;a.q15=0;a.y0=0;a.x0=0;a.k1=0;a.q16=0;a.trig=0;a.q17=0;","frame_eqs_str":"a.trig=a.q25;a.a=a.trig*Math.min(a.bass+a.treb,1);a.a2=0*a.trig;a.x0=a.x0*bnot(a.trig)+div(a.trig*Math.floor(rand(100)),100);a.y0=a.y0*bnot(a.trig)+div(a.trig*Math.floor(rand(100)),100);a.k1=6.28*div(a.instance,a.num_inst);a.ampl=.1*a.q22+.1;a.x0=.5+a.q15*a.ampl*Math.cos(a.k1+a.q17);a.y0=.5+a.q16*a.ampl*Math.sin(a.k1+a.q17);a.tex_ang=div(Math.floor(rand(20)),3);a.rad=.1+div(Math.floor(rand(8)),12);a.x=a.x0;a.y=a.y0;a.r=.7+.3*Math.sin(div(a.time,12));a.b=.7+.3*Math.sin(div(a.time,\n15));a.g=.7+.3*Math.sin(div(a.time,8));a.r2=a.r;a.b2=a.b;a.g2=a.g;","init_eqs_eel":"","frame_eqs_eel":"trig = q25;\na = trig*min(bass+treb,1); a2 = trig*0;\n//a = min(bass+treb-1,1);\nx0 = x0 *bnot(trig) + trig*int(rand(100))/100;\ny0 = y0 *bnot(trig) + trig*int(rand(100))/100;\n\n\nk1 = instance/num_inst*6.28;\nampl = .1*q22+.1;\n\n\nx0 = .5 +q15*ampl *cos(k1+q17); y0 = .5+ q16*ampl*sin(k1+q17);\n\n\ntex_ang = int(rand(20))/3;\n//tex_ang = time;\nrad = .1 + int(rand(8))/12;\n\nx = x0; y = y0;\nr = .7+.3*sin(time/12);\nb = .7+.3*sin(time/15);\ng = .7+.3*sin(time/8);\nr2 = r; b2 = b; g2 = g;"},{"baseVals":{"enabled":1,"sides":32,"num_inst":37,"rad":0.0364,"ang":0.81681,"tex_ang":0.37699,"tex_zoom":1.02841,"g":1,"b":1,"a":0.05,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.ampl=0;a.g0=0;a.q15=0;a.trel=0;a.yes=0;a.k1=0;a.bright=0;a.q16=0;a.r0=0;a.q17=0;a.q2=0;a.tmp=0;a.b0=0;a.q8=0;","frame_eqs_str":"a.k1=6.28*div(a.instance,a.num_inst);a.tmp=div(a.q17,32)+.1*a.time;a.trel=a.tmp-Math.floor(a.tmp);a.yes=above(Math.sin(div(a.time,9.5)),0);a.bright=6*a.q2*a.q2*a.yes+.1*Math.min(a.q8,1);a.border_a=a.bright;a.tmp=2*Math.sin(div(a.time,12))-1;a.a=.5*a.yes*pow(2,-18*Math.abs(a.k1-6.28*a.trel))*above(a.tmp,0)*a.tmp*a.tmp;a.ampl=.1;a.rad=.02+0*Math.sin(4*a.k1+a.time);a.x=.5+a.q15*a.ampl*Math.cos(a.k1+a.q17);a.y=.5+a.q16*a.ampl*Math.sin(a.k1+a.q17);a.r0=Math.sin(div(a.time,7));a.g0=\nMath.sin(div(a.time,5));a.b0=Math.sin(div(a.time,9));a.border_r=.8+.2*a.r0;a.border_g=.8+.2*a.g0;a.border_b=.8+.2*a.b0;a.a2=0;","init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst*6.28;\ntmp = q17/32+time*.1;\ntrel = tmp-int(tmp);\n\nyes = above(sin(time/9.5),0);\n\nbright = 6*q2*q2*yes+.1*min(q8,1);\nborder_a = bright;\n\ntmp = 2*sin(time/12)-1;\na = .5*yes*pow(2,-18*abs(k1-6.28*trel)) * above(tmp,0)*tmp*tmp;\nampl = .1;\nrad = .02+.0*sin(k1*4+time);\nx = .5 +q15*ampl *cos(k1+q17); y = .5+ q16*ampl*sin(k1+q17);\n\nr0 = sin(time/7);\ng0 = sin(time/5);\nb0 = sin(time/9);\n\nborder_r = .8 + .2*r0;\nborder_g = .8 + .2*g0;\nborder_b = .8 + .2*b0;\n\n\n//r = .5*r0; g = .5*g0; b = 0.5*b0; ;\n\n//r2 = 0; g2 = 0; b2 = 0;\n\na2 = 0;\n"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q1=0;a.trans2=0;a.trans3=0;a.q23=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q1))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q1))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q1))),5)+a.instance-a.instance;a.a=a.trans;a.x=.3*(Math.sin(a.q23)+1.57)+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.3*(Math.cos(a.q23)+1.57)+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),\n1))?1:-1)+a.instance-a.instance;a.rad=.09+div(Math.floor(rand(Math.floor(a.q1))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q1))+\na.instance-a.instance;a.border_b=.1*Math.floor(rand(a.q1))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q1)))/5+instance-instance;\ntrans2 = int(rand(int(q1)))/5+instance-instance;\ntrans3 = int(rand(int(q1)))/5+instance-instance;\na = trans;\n\nx = (sin(q23)+1.57)*.3 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = (cos(q23)+1.57)*.3 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q1)))/15+instance-instance;\nr=int(rand(q1))*.1+instance-instance;\ng=int(rand(q1))*.1+instance-instance;\nb=int(rand(q1))*.1+instance-instance;\nr2=int(rand(q1))*.1+instance-instance;\ng2=int(rand(q1))*.1+instance-instance;\nb2=int(rand(q1))*.1+instance-instance;\nborder_r=int(rand(q1))*.1+instance-instance;\nborder_g=int(rand(q1))*.1+instance-instance;\nborder_b=int(rand(q1))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q1=0;a.trans2=0;a.trans3=0;a.q23=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q1))),15)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q1))),15)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q1))),15)+a.instance-a.instance;a.a=a.trans;a.x=.3*(Math.sin(a.q23)+1.57)+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.3*(Math.cos(a.q23)+1.57)+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),\n1))?1:-1)+a.instance-a.instance;a.rad=.09+div(Math.floor(rand(Math.floor(a.q1))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q1))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q1))+\na.instance-a.instance;a.border_b=.1*Math.floor(rand(a.q1))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q1)))/15+instance-instance;\ntrans2 = int(rand(int(q1)))/15+instance-instance;\ntrans3 = int(rand(int(q1)))/15+instance-instance;\na = trans;\n\nx = (sin(q23)+1.57)*.3 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = (cos(q23)+1.57)*.3 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q1)))/15+instance-instance;\nr=int(rand(q1))*.1+instance-instance;\ng=int(rand(q1))*.1+instance-instance;\nb=int(rand(q1))*.1+instance-instance;\nr2=int(rand(q1))*.1+instance-instance;\ng2=int(rand(q1))*.1+instance-instance;\nb2=int(rand(q1))*.1+instance-instance;\nborder_r=int(rand(q1))*.1+instance-instance;\nborder_g=int(rand(q1))*.1+instance-instance;\nborder_b=int(rand(q1))*.1+instance-instance;\n"}],"waves":[{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"smoothing":0.8,"a":0.14},"init_eqs_str":"a.sw=0;a.osa=0;a.mod=0;a.q32=0;a.mo=0;a.q1=0;a.q23=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*above(a.sample,0);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value1,2)*sign(a.value1)*.5;a.mod=a.value1;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:.5*a.sample+.25;a.y=.5*a.sample+.25;a.y=div(a.y-.5,a.q32)+.5;a.x=1-.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q1;a.r=.5+.5*Math.sin(.9*a.q23+a.mo);a.g=.5+.5*Math.sin(.89*a.q23+a.mo+1.5472);a.b=.5+.5*Math.sin(.88*a.q23+a.mo+2.8944);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*above(sample,0);\n\nosa = sample*above(sample,0);\n\nmod = pow(value1*2,2)*sign(value1)*.5;\n\nmod = value1;\nmod = mod*sw;\n\ny = if(sw,osa,sample*.5+.25);\ny = sample*.5+.25;\ny = (y-0.5)/(q32) + 0.5;\nx = 1 - mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\nr = .5 + sin(q23*.9 +mo)*.5;\ng = .5 + sin(q23*.89+mo + 1.5472)*.5;\nb = .5 + sin(q23*.88+mo + 2.8944)*.5;\n\n//a = 3 - abs(mod)*12;\n//a = 3-sw;\n//a = max(0,min(a,1));"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"smoothing":0.8,"a":0.14},"init_eqs_str":"a.sw=0;a.osa=0;a.mod=0;a.q32=0;a.mo=0;a.q1=0;a.q23=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*below(a.sample,1);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value2,2)*sign(a.value2)*.5;a.mod=a.value2;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:.5*a.sample+.25;a.y=.5*a.sample+.25;a.y=div(a.y-.5,a.q32)+.5;a.x=.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q1;a.r=.5+.5*Math.sin(.95*a.q23+a.mo);a.g=.5+.5*Math.sin(.96*a.q23+a.mo+1.5472);a.b=.5+.5*Math.sin(.97*a.q23+a.mo+2.8944);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*below(sample,1);\n\nosa = sample*above(sample,0);\n\nmod = pow(value2*2,2)*sign(value2)*.5;\n\nmod = value2;\nmod = mod*sw;\n\ny = if(sw,osa,sample*.5+.25);\ny = sample*.5+.25;\ny = (y-0.5)/(q32) + 0.5;\nx = 0+ mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\nr = .5 + sin(q23*.95+mo)*.5;\ng = .5 + sin(q23*.96+mo + 1.5472)*.5;\nb = .5 + sin(q23*.97+mo + 2.8944)*.5;\n\n//a = 3 - abs(mod)*12;\n//a = 3-sw;\n//a = max(0,min(a,1));"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.sw2=0;a.index2=0;a.q25=0;a.index=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.q13=0;a.sw3=0;a.q15=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.mindev=0;a.trel=0;a.q9=0;a.t0a=0;a.itrel=0;a.my=0;a.is_beat=0;a.q31=0;a.q23=0;a.q24=0;a.dec_slow=0;a.q11=0;a.q10=0;a.sdev=0;a.ma=0;a.atime=0;a.q4=0;a.spb=0;a.spb_=0;a.q16=0;a.q26=0;a.avg=0;a.mx=0;a.q19=0;a.beat=0;a.q17=0;a.vol=0;a.trel2=0;a.peak=0;a.jmp=0;a.itrel_=0;a.q2=0;a.q27=0;a.q14=0;a.sw1=0;a.tmp=0;a.q3=0;a.t0=0;a.q32=0;a.q7=0;a.q28=0;a.q30=0;\na.q20=0;a.q8=0;a.avg=1;a.index=Math.floor(rand(8));a.index2=Math.floor(rand(8));a.ran=1;a.spb_=.3;a.sdev=.1;a.trel2=div(rand(100),100);","frame_eqs_str":"a.vol=a.bass+a.treb+a.mid;a.q1=Math.max(1,Math.min(5.5,1.15*a.vol));a.atime+=a.vol;a.q23=.02*a.atime;a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.98,div(30,a.fps));a.beat=a.bass+a.mid+a.treb;a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.2+a.avg+a.peak)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),12);\na.spb=Math.min(a.t0-a.t0a+.01,2);a.t0a=a.t0;a.spb_=.00001<Math.abs(a.is_beat)?.9*a.spb_+.1*a.spb:a.spb_;a.mindev=Math.min(Math.min(Math.abs(a.spb-a.spb_),Math.abs(2*a.spb-a.spb_)),Math.abs(a.spb-2*a.spb_));a.sdev=.00001<Math.abs(a.is_beat)?.9*a.sdev+.1*pow(a.mindev+.02,2):a.sdev;a.q20=a.avg;a.q21=a.beat;a.q22=a.peak+.1;a.q24=a.is_beat;a.q27=a.index;a.q28=a.index2;a.trel+=4*div(div(1,a.fps),a.spb_);a.itrel=Math.floor(a.trel);a.q25=above(a.itrel,a.itrel_);a.q30=mod(a.itrel,2);a.itrel_=a.itrel;a.q31=\na.itrel;a.ma+=div(a.peak,a.fps);a.mx=a.mx*a.dec_med+(1-a.dec_med)*Math.cos(a.ma);a.my=a.my*a.dec_med+(1-a.dec_med)*Math.sin(a.ma+div(a.trel,16));a.q15=a.mx;a.q16=a.my;a.q17=a.ma;a.sw1=.00001<Math.abs(a.sw1)?bnot(a.q24*bnot(Math.floor(rand(20)))):a.q24*bnot(Math.floor(rand(20)));a.sw2=.00001<Math.abs(a.sw2)?bnot(a.q24*bnot(Math.floor(rand(10)))):a.q24*bnot(Math.floor(rand(80)));a.sw3=.00001<Math.abs(a.sw3)?bnot(a.q24*bnot(Math.floor(rand(10)))):a.q24*bnot(Math.floor(rand(100+1E4*a.sdev)));a.q6=Math.sin(div(a.time,\n15))*Math.sin(div(a.time,27))*.2;a.q10=Math.sin(div(a.time,8));a.q10=a.q10*a.q10*.1;a.q11=1.5+Math.sin(div(a.time,7.8));a.q12=.00001<Math.abs(below(a.sdev,.015)*bnot(a.q8))?a.q25:1;a.q13=.5+Math.sin(div(a.time,17));a.q19=.2*Math.sin(div(a.time,5.3));a.q3=a.sw1;a.q4=div(.02,a.sdev);a.q5=.4*Math.max(Math.min(4*Math.sin(div(a.trel,64))-3,1),0);a.q7=below(a.sdev,.004)*mod(a.index2,2);a.q2=Math.abs(a.q19)*sqrt(a.q15*a.q15+a.q16*a.q16);a.trel2+=div(.003*a.q22*a.q22,a.fps);a.tmp=Math.sin(a.trel2);a.tmp=\n20*a.tmp-19;a.q8=a.tmp*above(a.tmp,0)*(div(4,Math.max(a.q22-4,.2))+4);a.q26=above(a.q22,12)*(a.q22-12)*2;a.tmp=div(a.index2,6);a.q14=6*Math.abs(a.tmp-Math.floor(a.tmp)-.5)+1;a.tmp=Math.sin(3.14*div(a.trel,4));a.jmp+=8*div(above(a.tmp,.5)*a.tmp,a.fps)*a.sw2;a.q9=a.jmp*equal(a.q14,1)*below(a.sdev,.04)+a.time*above(Math.sin(div(a.q17,23)),.9);a.q18=a.tmp*bnot(a.q8)*a.sw3;a.monitor=a.sw1;a.rot=.003;a.warp=0;a.zoom=1+div(a.avg-Math.log(a.sdev),200);a.q32=a.aspecty;a.monitor=a.vol;a.warp=0;","pixel_eqs_str":"a.zoom=.995+.4*pow(Math.abs(a.y-.5),1.4)*a.bass;","init_eqs_eel":"avg = 1;\nindex = int(rand(8));\nindex2 = int(rand(8));\nran = 1;\nspb_=.3;\nsdev = .1;\ntrel2 = rand (100)/100;","frame_eqs_eel":"vol=bass+treb+mid;\nq1=max(1,min(5.5,vol*1.15));\natime=atime+vol;\nq23=atime*.02;\ndec_med = pow (0.9, 30/fps); dec_slow = pow (0.98, 30/fps);\nbeat = bass+mid+treb;\navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.1);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%12;\n\nspb = min(t0-t0a + .01,2); t0a = t0;\nspb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);\nmindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));\nsdev = if(is_beat,sdev * .9 + .1*pow(mindev+.02,2),sdev);\n\nq20 = avg; q21 = beat;\nq22 = peak+.1; \nq24 = is_beat;\nq27 = index; q28 = index2;\n\ntrel = trel + 1/fps/spb_*4; itrel = int(trel);\nq25 =  above(itrel, itrel_);\nq30 = itrel%2;\nitrel_ = itrel;\nq31 = itrel;\n\nma = ma + peak/fps ;\nmx=mx*dec_med+(1-dec_med)*cos(ma);\nmy=my*dec_med+(1-dec_med)*sin(ma+trel/16);\nq15 = mx ; q16 = my ; q17 = ma;\n\n//first par: off; second: on\nsw1 = if(sw1,bnot(q24*bnot(int(rand(20)))),q24*bnot(int(rand(20))));\nsw2 = if(sw2,bnot(q24*bnot(int(rand(10)))),q24*bnot(int(rand(80))));\nsw3 = if(sw3,bnot(q24*bnot(int(rand(10)))),q24*bnot(int(rand(100+10000*sdev))));\n\n//********* variation parameters warp shader\nq6 = sin(time/15)*sin(time/27)*.2; //zz weighting\nq10 = sin(time/8); //ring\nq10 = q10*q10*.1; \nq11 = 1.5+sin(time/7.8); //zoom uv2\nq12 = if(below(sdev,.015)*bnot(q8),q25,1); //go\nq13 = .5+sin(time/17); //pow noise warp s\nq19 = sin(time/5.3)*.2; //sunpos\n\n//********* variation parameters comp shader\nq3 = sw1;//mirror \nq4 = .02/sdev; //unused ###\nq5 = max(min(4*sin(trel/64)-3,1),0)*.4; //water\nq7 = below(sdev,.004)*(index2%2); //flash\nq2 = abs(q19)*sqrt(q15*q15+q16*q16); //avoid black - frame eq2\n\ntrel2 = trel2+.003*q22*q22/fps;\ntmp = sin(trel2);\ntmp = 20*tmp-19;\nq8 =  tmp*above(tmp,0)*(4/max(q22-4,0.2)+4); // dyn zoom\nq26 = above(q22,12)*(q22-12)*2; //# ok???\n\ntmp = index2/6;\nq14 = abs((tmp-int(tmp))-.5)*6+1; //ang multi\n\ntmp =sin(trel/4*3.14); //sym rot\njmp = jmp + above(tmp,.5)*tmp/fps*8*sw2;\nq9 = jmp*equal(q14,1)*below(sdev,0.04)+time*above(sin(q17/23),.9);\nq18 = tmp * bnot(q8) * sw3; //waber\n\nmonitor = sw1;\nrot = .003;\nwarp = .0;\nzoom = 1+(avg-log(sdev))/200;\n//dx = tmp*.01*above(abs(tmp),.95);\nq32=aspecty;monitor=vol;\nwarp = 0;","pixel_eqs_eel":"zoom = .995+pow(abs(y-.5),1.4)*(bass*.4);","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\n   * 0.03))).xyz - 0.004);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec3 plastic_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = q11;\n  tmpvar_5.y = q12;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.x;\n  tmpvar_6.y = tmpvar_4.x;\n  vec2 x_7;\n  x_7 = ((uv - (tmpvar_6 * 4.0)) - tmpvar_5);\n  plastic_1.x = (24.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_7, x_7)), 0.5)\n  )));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_3.y;\n  tmpvar_8.y = tmpvar_4.y;\n  vec2 x_9;\n  x_9 = ((uv - (tmpvar_8 * 4.0)) - tmpvar_5);\n  plastic_1.y = (24.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_9, x_9)), 0.5)\n  )));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_3.z;\n  tmpvar_10.y = tmpvar_4.z;\n  vec2 x_11;\n  x_11 = ((uv - (tmpvar_10 * 4.0)) - tmpvar_5);\n  plastic_1.z = (24.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_11, x_11)), 0.5)\n  )));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = (plastic_1 * texture (sampler_main, uv).xyz);\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\n    // PAINTERLY EFFECT:\n    float2 uv2 = uv;\n    const float mipbias = 0;\n    float2 delta2 = texsize.zw*float2(1,1);\n    float3 blurry_color = tex2D( sampler_main, uv2 + delta2 ).xyz;\n    uv2.xy += (blurry_color.xy-0.37) * 0.03;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv2 ).xyz;\n\n    // darken over time\n    ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*8;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n    float2 light_pos = float2(q11,q12);\n    float3 col = float3(24,24,24);\n    float c = 4;\n    float dd = 16;\n    float3 plastic;\n    plastic.x = col.x/(1+dd*pow(length( uv - float2(dx.x,dy.x)*c - light_pos),0.5));\n    plastic.y = col.y/(1+dd*pow(length( uv - float2(dx.y,dy.y)*c - light_pos),0.5));\n    plastic.z = col.z/(1+dd*pow(length( uv - float2(dx.z,dy.z)*c - light_pos),0.5));\n\n    ret = plastic*GetPixel(uv);\n\n}"}