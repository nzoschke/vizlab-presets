{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":100,"wave_scale":28.599,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.40031,"r":0.5,"g":0.5,"r2":0.5,"g2":0,"border_b":0.5,"border_a":0},"init_eqs_str":"a.sounds=0;","frame_eqs_str":"a.sounds=div(a.bass+a.treb+a.mid,3);a.rad=a.rad*a.sounds*.6;a.r+=Math.sin(a.bass)*a.g;a.g+=Math.sin(a.mid)*a.g;a.x+=.207*Math.cos(a.time*a.bass*.1);a.y+=.207*Math.sin(a.time*a.bass*.1);","init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\n\nrad=rad*sounds*0.6;\n\nr=r+sin(bass)*g;\ng=g+sin(mid)*g;\n\n\nx=x+0.207*cos(time*bass*0.1);\ny=y+0.207*sin(time*bass*0.1);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13465,"r2":1,"a2":0.3,"border_a":0},"init_eqs_str":"a.sounds=0;","frame_eqs_str":"a.g2+=.09*Math.sin(1.23*(a.treb+a.mid));a.g+=.09*Math.cos(1.37*(a.bass+a.mid));a.sounds=div(a.bass+a.mid+a.treb,3);a.rad=div(a.rad*(a.treb+a.mid),3);a.x+=.3*Math.sin(a.time*a.bass);a.y+=.317*Math.cos(a.time*a.bass);","init_eqs_eel":"","frame_eqs_eel":"\ng2=g2+0.09*sin((treb+mid)*1.23);\ng=g+0.09*cos((bass+mid)*1.37);\n\nsounds=(bass+mid+treb)/3;\n\nrad=rad*(treb+mid)/3;\n\nx=x+0.300*sin(time*bass);\ny=y+0.317*cos(time*bass);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.20047,"g":1,"b":1,"r2":0.5,"g2":0.5,"b2":1,"border_b":0.5,"border_a":0},"init_eqs_str":"a.sounds=0;a.att=0;","frame_eqs_str":"a.sounds=div(a.bass+a.treb+a.mid,3);a.att=div(a.bass_att+a.treb_att+a.mid_att,3);a.att=div(a.bass_att+a.treb_att+a.mid_att,3);a.r2=a.r2+.25*Math.sin(6.28*a.time)-a.bass;a.g2=a.g2+.25*Math.sin(6.28*a.time)-a.bass;a.rad=a.rad;a.x=a.x+.217*Math.cos(2.3*a.time)+.1*a.sounds;a.y+=.217*Math.sin(3.5*a.time+.3*a.sounds);","init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\natt=(bass_att+treb_att+mid_att)/3;\natt=(bass_att+treb_att+mid_att)/3;\nr2=r2+(0.25*sin(time*6.28))-bass;\ng2=g2+(0.25*sin(time*6.28))-bass;\n\nrad=rad;\nx=x+0.217*cos(time*2.3)+sounds*0.1;\ny=y+0.217*sin((time*3.5)+(sounds*0.3));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"scaling":20.35074,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r=r+0.5*sin(treb*1.13);\ng=g+0.5*sin(bass*1.33);\nb=b+0.5*sin(mid*1.23);","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"r=r+0.5*sin(treb*1.13);\ng=g+0.5*sin(bass*1.33);\nb=b+0.5*sin(mid*1.23);","point_eqs_eel":""},{"baseVals":{"sep":256,"usedots":1,"scaling":100,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xang=0;a.avg_=0;a.index=0;a.q12=0;a.q18=0;a.q22=0;a.yang=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q5=0;a.movz=0;a.trely=0;a.dec_s=0;a.ax=0;a.push=0;a.my=0;a.oz=0;a.is_beat=0;a.lrot=0;a.q31=0;a.q24=0;a.vx=0;a.q11=0;a.dec_m=0;a.mz=0;a.q16=0;a.oy=0;a.avg=0;a.mx=0;a.vleaf=0;a.q19=0;a.beat=0;a.q17=0;a.peak=0;a.q27=0;a.zang=0;a.q14=0;a.pos_z=0;a.proxy=0;a.t0=0;a.q32=0;a.trelx=0;a.q20=0;a.ox=0;a.proxy=3;a.pos_z=100*a.proxy;a.movz=0;a.avg=0;a.avg_=2;","frame_eqs_str":"a.dec_m=pow(.95,div(30,a.fps));a.dec_s=pow(.99,div(30,a.fps));a.beat=a.bass+a.mid+a.treb;a.avg=a.avg*a.dec_s+a.beat*(1-a.dec_s);a.avg_=a.avg_*a.dec_s+a.avg*(1-a.dec_s);a.is_beat=above(a.beat,4+a.avg+a.peak)*above(a.time,a.t0+1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_m;a.index=mod(a.index+a.is_beat,16);a.q20=div(a.avg_,3);a.q22=Math.max(0,a.peak-0)+.01;a.q24=a.is_beat;a.q27=a.index+1;a.push=div(a.avg-2.5,3);a.ax=div(-(a.xang+\nMath.min(Math.max(a.push,-.7),.7)),3);a.ax=.00001<Math.abs(below(a.ax,0))?2*a.ax:a.ax;a.vx=a.vx*(1-div(1,a.fps))+div(a.ax,a.fps);a.xang+=div(a.vx,a.fps);a.zang=0;a.yang=-.5*Math.sin(div(a.time,16));a.movz=.00001<Math.abs(above(div(a.avg_,3),1.2))?1:a.movz;a.movz=.00001<Math.abs(below(div(a.avg_,3),.9))?-1:a.movz;a.proxy+=div(div(a.movz,a.fps),4);a.proxy=Math.min(Math.max(a.proxy,1.1),4);a.proxy=4-3*Math.abs(Math.sin(div(a.time,24)));a.pos_z=a.dec_s*a.pos_z+(1-a.dec_s)*a.proxy*100;a.trelx+=div(.1*\nMath.sin(div(a.time,11)),a.fps)*a.yang;a.q5=a.trelx;a.trely+=div(.2*a.xang,a.fps);a.q6=a.trely;a.vleaf+=div(div(a.avg,64),a.fps);a.q29=a.vleaf;a.lrot+=.2*div(a.bass_att,a.fps);a.q32=a.lrot;a.ox=0;a.oy=0;a.oz=a.pos_z;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);\na.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.q11=a.ox;a.q12=a.oy;a.q13=a.oz;a.ox=1;a.oy=0;a.oz=0;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.q14=a.ox;a.q15=a.oy;a.q16=\na.oz;a.ox=0;a.oy=0;a.oz=1;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.q17=a.ox;a.q18=a.oy;a.q19=a.oz;a.q31=div(20,a.pos_z);a.q32=a.pos_z;","pixel_eqs_str":"a.zoom=.995;","init_eqs_eel":"proxy = 3; pos_z = proxy*100;\nmovz = 0;\navg = 0;\navg_= 2;","frame_eqs_eel":"dec_m = pow (0.95, 30/fps); dec_s = pow (0.99, 30/fps);\n\nbeat = bass+mid+treb; \navg = avg*dec_s + beat*(1-dec_s);\navg_ = avg_*dec_s + avg*(1-dec_s);\nis_beat = above(beat, 4+avg+peak) * above (time, t0+1);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_m;\nindex = (index + is_beat) %16;\n//index2 = (index2 + is_beat*bnot(index))%8;\nq20 = avg_/3;\nq22 = max(0,peak-.0)+.01;\nq24 = is_beat;\nq27 = index +1;\n\npush = (avg-2.5)/3;\nax = -(xang + min(max(push,-.7),.7))/3; //Divisor: 1/Frequenz\n\nax = if (below(ax,0),ax*2,ax);\nvx = vx *(1-1/fps)+ ax/fps; //1/fps: Daempfung\nxang = xang + vx/fps; \n// WINKEL\nzang = 0; \nyang = - .5*sin(time/16); \n//yang = .7;\n\n//BEWEGUNG\nmovz= if(above(avg_/3,1.2),1,movz);\nmovz = if(below(avg_/3,.9),-1,movz);\nproxy = proxy + movz/fps/4;\nproxy = min(max(proxy,1.1),4);\nproxy = 4-3*abs(sin(time/24));\npos_z = dec_s * pos_z + (1-dec_s)*proxy*100;\n\ntrelx = trelx + .1*sin(time/11)/fps*yang;\nq5 = trelx;\ntrely = trely + xang*.2/fps; q6 = trely;\n//q6 = time*.03;\nvleaf = vleaf + (avg/64)/fps;\nq29 = vleaf;\nlrot = lrot + bass_att/fps*.2;\nq32 = lrot;\n\nox = 0; oy = 0; oz = pos_z;\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;oy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;oz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;oz = mz;\nq11=ox; q12 = oy; q13 = oz; //Position\n\n//Vektor x nach rechts\nox = 1; oy = 0; oz = 0;\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;oy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;oz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;oz = mz;\nq14=ox; q15 = oy; q16 = oz;\n\n\n//Vektor z nach hinten\nox = 0; oy = 0; oz = 1;;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;oy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;oz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\nq17=ox; q18 = oy; q19 = oz;\n\nq31 = 20/pos_z;\nq32 = pos_z;","pixel_eqs_eel":"zoom = .995;","warp":" shader_body { \n  vec2 tmpvar_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv_orig - 0.5);\n  tmpvar_1 = (tmpvar_2 * aspect.xy);\n  float theta_3;\n  theta_3 = ((q1 * (\n    (16.0 * q2)\n   * \n    sqrt(dot (tmpvar_1, tmpvar_1))\n  )) + (q27 / 8.0));\n  vec2 tmpvar_4;\n  tmpvar_4.x = rad;\n  tmpvar_4.y = sqrt(dot (tmpvar_1, tmpvar_1));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ((q24 * (\n    (((texture (sampler_main, (uv + \n      ((clamp ((\n        (sin(theta_3) / cos(theta_3))\n       * \n        -(normalize((1.0/(tmpvar_1))))\n      ), vec2(-8.0, -8.0), vec2(8.0, 8.0)) * cos((\n        (tmpvar_1.yx * q27)\n       * 3.0))) / 32.0)\n    )) - (0.03 * rad)).xyz + ((0.02 * \n      (vec3(inversesqrt(((2.0 * tmpvar_4).y - (q27 / 18.0)))) * roam_cos.xyz)\n    ) * roam_cos.xyz)) * 0.99)\n   - 0.02)) + ((1.0 - q24) * texture (sampler_main, (tmpvar_2 + 0.5)).xyz));\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec2 uv3_1;\n  vec2 uv2_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = (0.1 / (sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  ) + 0.1));\n  vec2 tmpvar_5;\n  float tmpvar_6;\n  tmpvar_6 = (ang / 3.14);\n  tmpvar_5.x = tmpvar_6;\n  tmpvar_5.y = (q27 * tmpvar_4);\n  uv2_2.y = (tmpvar_5.y + (0.1 * q30));\n  uv2_2.x = (tmpvar_6 + (0.2 * time));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_6;\n  tmpvar_7.y = (4.0 * tmpvar_4);\n  uv3_1.y = (tmpvar_7.y - (0.2 * q30));\n  uv3_1.x = tmpvar_7.x;\n  vec2 tmpvar_8;\n  tmpvar_8 = fract(uv3_1);\n  uv3_1 = tmpvar_8;\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = (((\n    (3.0 * max (((2.0 * texture (sampler_main, uv2_2).xyz) + texture (sampler_main, tmpvar_8).xyz), ((2.0 * \n      ((texture (sampler_blur2, fract(uv2_2)).xyz * scale2) + bias2)\n    ) + (\n      (texture (sampler_blur2, fract(tmpvar_8)).xyz * scale2)\n     + bias2))))\n   * rad) + (\n    ((uv.y * pow ((1.0 - rad), 8.0)) * roam_cos)\n  .xyz * tmpvar_9)) + ((tmpvar_9 * 2.0) * (\n    (texture (sampler_blur1, fract(uv)).xyz * scale1)\n   + bias1)));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv_orig-.5) * aspect.xy;\n\nfloat2 uv6 = uv1;\n\nfloat z = 16*q2*length(uv1) ;\nfloat2 d = -normalize(1/uv1);\n\nfloat2 rs = clamp(tan(q1*z+q27/8)*d,-8,8);\n\nrs *= cos(uv1.yx*q27*3) ;\n\nuv += rs/32;\n\nuv6 = 2*(float2(rad, length(uv1)));\n\n//uv6 = mul(uv6,float2x2(_qa));\n\nmus = (1/(sqrt(uv6.y-q27/18)));\n//mus = 1/(length(.1*sin(22*uv+rand_frame*6)));\n//mus *= float3 (1,.84,.5);\nmus *= roam_cos;\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv) - .03*rad;\n\nfloat3 ret1 = crisp - blur*.0 + .02*mus* roam_cos;\n//q24 *=1.1;\nret = q24*(ret1 * .99 -  .02) + (1-q24)*GetPixel((uv_orig-.5)+.5);\n\n\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, q27*rad1);\nuv2.y = uv2.y  +.1*q30;\nuv2.x = uv2.x  +.2*time;\n\nfloat2 uv3 = float2 (ang/3.14, 4*rad1);\nuv3.y = uv3.y  -.2*q30;\nuv3.x = uv3.x  +.0*time;\nuv3 = frac(uv3);\n\nfloat3 crisp = 2*GetPixel(uv2) + GetPixel(uv3);\ncrisp = max(crisp,2*GetBlur2(frac(uv2)) + GetBlur2(frac(uv3)));\n\nfloat3 lay1 = uv.y*pow(1-rad,8)*roam_cos;\n\ncrisp = 3*crisp * pow(rad,1);\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * 2*GetBlur1(frac(uv));\n\n}"}