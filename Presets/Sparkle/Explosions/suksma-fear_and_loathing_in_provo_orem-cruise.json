{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0,"echo_zoom":1,"echo_orient":3,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":100,"wave_scale":28.599,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"warpscale":1.772,"zoomexp":4.401,"zoom":1.031,"rot":0.003,"warp":0,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.40031,"r":0.5,"g":0.5,"r2":0.5,"g2":0,"border_b":0.5,"border_a":0},"init_eqs_str":"a.sounds=0;","frame_eqs_str":"a.sounds=div(a.bass+a.treb+a.mid,3);a.rad=a.rad*a.sounds*.6;a.r+=Math.sin(a.bass)*a.g;a.g+=Math.sin(a.mid)*a.g;a.x+=.207*Math.cos(a.time*a.bass*.1);a.y+=.207*Math.sin(a.time*a.bass*.1);","init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\n\nrad=rad*sounds*0.6;\n\nr=r+sin(bass)*g;\ng=g+sin(mid)*g;\n\n\nx=x+0.207*cos(time*bass*0.1);\ny=y+0.207*sin(time*bass*0.1);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13465,"r2":1,"a2":0.3,"border_a":0},"init_eqs_str":"a.sounds=0;","frame_eqs_str":"a.g2+=.09*Math.sin(1.23*(a.treb+a.mid));a.g+=.09*Math.cos(1.37*(a.bass+a.mid));a.sounds=div(a.bass+a.mid+a.treb,3);a.rad=div(a.rad*(a.treb+a.mid),3);a.x+=.3*Math.sin(a.time*a.bass);a.y+=.317*Math.cos(a.time*a.bass);","init_eqs_eel":"","frame_eqs_eel":"\ng2=g2+0.09*sin((treb+mid)*1.23);\ng=g+0.09*cos((bass+mid)*1.37);\n\nsounds=(bass+mid+treb)/3;\n\nrad=rad*(treb+mid)/3;\n\nx=x+0.300*sin(time*bass);\ny=y+0.317*cos(time*bass);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.20047,"g":1,"b":1,"r2":0.5,"g2":0.5,"b2":1,"border_b":0.5,"border_a":0},"init_eqs_str":"a.sounds=0;a.att=0;","frame_eqs_str":"a.sounds=div(a.bass+a.treb+a.mid,3);a.att=div(a.bass_att+a.treb_att+a.mid_att,3);a.att=div(a.bass_att+a.treb_att+a.mid_att,3);a.r2=a.r2+.25*Math.sin(6.28*a.time)-a.bass;a.g2=a.g2+.25*Math.sin(6.28*a.time)-a.bass;a.rad=a.rad;a.x=a.x+.217*Math.cos(2.3*a.time)+.1*a.sounds;a.y+=.217*Math.sin(3.5*a.time+.3*a.sounds);","init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\natt=(bass_att+treb_att+mid_att)/3;\natt=(bass_att+treb_att+mid_att)/3;\nr2=r2+(0.25*sin(time*6.28))-bass;\ng2=g2+(0.25*sin(time*6.28))-bass;\n\nrad=rad;\nx=x+0.217*cos(time*2.3)+sounds*0.1;\ny=y+0.217*sin((time*3.5)+(sounds*0.3));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"scaling":20.35074,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r=r+0.5*sin(treb*1.13);\ng=g+0.5*sin(bass*1.33);\nb=b+0.5*sin(mid*1.23);","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"r=r+0.5*sin(treb*1.13);\ng=g+0.5*sin(bass*1.33);\nb=b+0.5*sin(mid*1.23);","point_eqs_eel":""},{"baseVals":{"sep":256,"usedots":1,"scaling":100,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.t=0;","frame_eqs_str":"a.t=2.3*a.time;a.wave_x+=.35*(.7*Math.sin(2.221*a.time)+.3*Math.sin(1.821*a.time));a.wave_y+=.35*(.3*Math.sin(1.942*a.time)+.7*Math.sin(2.522*a.time));a.wave_r+=.79*(.6*Math.sin(.823*a.t)+.4*Math.sin(.916*a.t));a.wave_g+=.79*(.6*Math.sin(.9*a.t)+.4*Math.sin(1.023*a.t));a.wave_b+=.79*(.6*Math.sin(.808*a.t)+.4*Math.sin(.949*a.t));a.rot+=.01*(.6*Math.sin(.038*a.time)+.4*Math.sin(.054*a.time));a.dx+=.002*(.6*Math.sin(.434*a.time)+.4*Math.sin(.277*a.time));a.dy+=.002*(.6*Math.sin(.384*\na.time)+.4*Math.sin(.477*a.time));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"t = time*2.3;\nwave_x = wave_x + 0.350*( 0.70*sin(2.221*time) + 0.30*sin(1.821*time) );\nwave_y = wave_y + 0.350*( 0.30*sin(1.942*time) + 0.70*sin(2.522*time) );\nwave_r = wave_r + 0.790*( 0.60*sin(0.823*t) + 0.40*sin(0.916*t) );\nwave_g = wave_g + 0.790*( 0.60*sin(0.900*t) + 0.40*sin(1.023*t) );\nwave_b = wave_b + 0.790*( 0.60*sin(0.808*t) + 0.40*sin(0.949*t) );\nrot = rot + 0.010*( 0.60*sin(0.038*time) + 0.40*sin(0.054*time) );\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 rsamp_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_pw_main, uv);\n  ret_2 = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.xy - 0.5)\n   * 12.0) * texsize.zw)));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  rsamp_1 = tmpvar_6;\n  float tmpvar_7;\n  vec2 x_8;\n  x_8 = (tmpvar_4.xy - uv);\n  tmpvar_7 = sqrt(dot (x_8, x_8));\n  float tmpvar_9;\n  vec2 x_10;\n  x_10 = (tmpvar_5.xy - uv);\n  tmpvar_9 = sqrt(dot (x_10, x_10));\n  if ((tmpvar_7 > tmpvar_9)) {\n    ret_2.xy = tmpvar_6.xy;\n  };\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.zw - 0.5)\n   * 48.0) * texsize.zw)));\n  rsamp_1 = tmpvar_11.xyz;\n  float tmpvar_12;\n  vec2 x_13;\n  x_13 = (ret_2.xy - uv);\n  tmpvar_12 = sqrt(dot (x_13, x_13));\n  float tmpvar_14;\n  vec2 x_15;\n  x_15 = (tmpvar_11.xy - uv);\n  tmpvar_14 = sqrt(dot (x_15, x_15));\n  if ((tmpvar_12 > tmpvar_14)) {\n    ret_2.xy = rsamp_1.xy;\n  };\n  ret_2.z = texture (sampler_fw_main, ret_2.xy).z;\n  ret_2.z = (ret_2.z - (q1 * 0.005));\n  if ((ret_2.z < 0.09)) {\n    ret_2 = vec3(0.0, 0.0, 0.0);\n  };\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_2;\n  ret = tmpvar_16.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec3 xlat_mutableret2;\nvec2 xlat_mutablesam;\n shader_body { \n  vec2 uv_1;\n  xlat_mutablesam = (texture (sampler_main, (uv * 0.5)).xy * ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, (xlat_mutablesam + uv));\n  float tmpvar_3;\n  tmpvar_3 = (0.5 * bass_att);\n  xlat_mutableret1 = ((tmpvar_2.x * (\n    (tmpvar_3 * uv_orig.y)\n   + tmpvar_2.xyz)) + (tmpvar_2.x * texture (sampler_main, uv).xyz));\n  xlat_mutableret1 = (xlat_mutableret1 * ((xlat_mutableret1 + 1.0) / 2.0));\n  uv_1 = (((uv - 0.5) * 0.3) + 0.5);\n  xlat_mutablesam = (texture (sampler_main, (uv_1 * 0.5)).xy * ((\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv_1).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, (xlat_mutablesam + uv_1));\n  xlat_mutableret2 = ((tmpvar_4.x * (\n    (tmpvar_3 * uv_orig.y)\n   + tmpvar_4.xyz)) + (tmpvar_4.x * texture (sampler_main, uv_1).xyz));\n  xlat_mutableret2 = (xlat_mutableret2 * (xlat_mutableret1 + 1.0));\n  vec3 tmpvar_5;\n  tmpvar_5 = max (xlat_mutableret1, xlat_mutableret2);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (tmpvar_5 * (0.5 + (0.5 * \n    dot (tmpvar_5, vec3(0.32, 0.49, 0.29))\n  )));\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv;//_orig;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));\nret.xyz = tex2D( sampler_pw_main,uvm).xyz;\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nrsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nret.z = tex2D(sampler_fw_main,ret.xy).z;\n\nret.z -= q1*.005;\n\nif (ret.z < .09) {\nret*=0;\n}\n\n\n}","comp_hlsl":"float3 ret1, ret2, reta;\nfloat2 sam;\nshader_body\n{\n    sam = tex2D(sampler_main,uv*.5);\n    ret1 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret1 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret1;\n    ret1 *= (ret1+1)/2; //gamma\n\nuv = (uv-.5)*.3+.5;\n    sam = tex2D(sampler_main,uv*.5);\n    ret2 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret2 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret2;\n    ret2 *= (ret1+1); //gamma\n\n\n\nret = max(ret1, ret2);\nret *= .5+.5*lum(ret);\n//ret = (1+ret1)*ret2;\n\n}\n\n"}