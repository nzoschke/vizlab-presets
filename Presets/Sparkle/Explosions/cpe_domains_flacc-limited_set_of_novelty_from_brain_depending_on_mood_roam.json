{"version":2,"baseVals":{"rating":5,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"warpscale":1.331,"zoom":1.0003,"warp":0.01,"sy":1.1046,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"ob_size":0,"ob_r":0.05,"ob_g":0.05,"ob_b":0.1,"ob_a":1,"ib_size":0,"mv_a":0,"b1n":0.4},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=\n.09+div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;\na.border_b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/15+instance-instance;\ntrans2 = int(rand(int(q30)))/15+instance-instance;\ntrans3 = int(rand(int(q30)))/15+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q30))*.1+instance-instance;\ng=int(rand(q30))*.1+instance-instance;\nb=int(rand(q30))*.1+instance-instance;\nr2=int(rand(q30))*.1+instance-instance;\ng2=int(rand(q30))*.1+instance-instance;\nb2=int(rand(q30))*.1+instance-instance;\nborder_r=int(rand(q30))*.1+instance-instance;\nborder_g=int(rand(q30))*.1+instance-instance;\nborder_b=int(rand(q30))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+\ndiv(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;\na.border_b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/15+instance-instance;\ntrans2 = int(rand(int(q30)))/15+instance-instance;\ntrans3 = int(rand(int(q30)))/15+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = .5 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q30))*.1+instance-instance;\ng=int(rand(q30))*.1+instance-instance;\nb=int(rand(q30))*.1+instance-instance;\nr2=int(rand(q30))*.1+instance-instance;\ng2=int(rand(q30))*.1+instance-instance;\nb2=int(rand(q30))*.1+instance-instance;\nborder_r=int(rand(q30))*.1+instance-instance;\nborder_g=int(rand(q30))*.1+instance-instance;\nborder_b=int(rand(q30))*.1+instance-instance;\n"},{"baseVals":{"sides":32,"thickoutline":1,"num_inst":33,"r":0.5,"r2":0.5,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\na2 = trans2;\nborder_a = trans3;\n\nx = q1 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\na2 = trans2;\nborder_a = trans3;\n\nx = q1 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xx=0;a.wzoom=0;a.q1=0;a.q5=0;a.bass_thresh=0;a.q11=0;a.q10=0;a.ry=0;a.q4=0;a.rx=0;a.q26=0;a.q17=0;a.vol=0;a.q2=0;a.q27=0;a.q3=0;a.yy=0;a.q30=0;a.mtime=0;","frame_eqs_str":"a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.91*(a.bass_thresh-1.3)+1.3);a.xx=5*equal(a.bass_thresh,2)*Math.sin(4*a.time)+(1-equal(a.bass_thresh,2))*a.xx;a.yy=5*equal(a.bass_thresh,2)*Math.sin(2.4*-a.time)+(1-equal(a.bass_thresh,2))*a.yy;a.q10=a.xx;a.q11=a.yy;a.wzoom=.18*Math.sin(a.time);a.q3=a.wzoom;a.q1=.8-.3*Math.sin(1.3*-a.time);a.q2=.8-.3*Math.cos(-a.time);a.vol=.1*(9*a.vol+.333333*(a.bass_att+a.mid_att+a.treb_att));a.mtime+=.05*\na.vol;a.rx=.5+.7*Math.sin(a.mtime);a.ry=.5+.7*Math.sin(1.4*a.mtime);a.q4=a.rx;a.q5=a.ry;a.q30=10*a.vol;a.q27=Math.sin(.628334*a.time);a.q26=Math.cos(100*a.time);a.q17=Math.cos(.141596*a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.91+1.3);\n\nxx = equal(bass_thresh,2)*5*sin(time*4) + (1-equal(bass_thresh,2))*xx;\nyy = equal(bass_thresh,2)*5*sin(-time*2.4) + (1-equal(bass_thresh,2))*yy;\n\nq10=xx;\nq11=yy;\nwzoom = 0.18*sin(time);\nq3=wzoom;\nq1 = 0.8 - 0.3*sin(-time*1.3);\nq2 = 0.8 - 0.3*cos(-time);\n\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\nmtime = mtime+vol*0.05;\n\nrx = 0.5+0.7*sin(mtime);\nry = 0.5+0.7*sin(mtime*1.4);\nq4=rx;\nq5=ry;\nq30=vol*10;\nq27=sin(time*.628334);\nq26=cos(time*100);\nq17=cos(time*.141596);","pixel_eqs_eel":"","warp":"uniform sampler2D sampler_fc_colors;\n shader_body { \n  vec2 modi_1;\n  vec2 uxy_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = q4;\n  tmpvar_3.y = q5;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - vec2(0.5, 0.5)) * vec2(5.0, 5.0));\n  uxy_2 = tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = floor((q10 + 0.5));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_5;\n  tmpvar_6.y = floor((q11 + 0.5));\n  modi_1 = tmpvar_6;\n  bvec2 tmpvar_7;\n  tmpvar_7 = bvec2(tmpvar_6);\n  bool tmpvar_8;\n  tmpvar_8 = (tmpvar_7.x && tmpvar_7.y);\n  if (!(tmpvar_8)) {\n    vec2 tmpvar_9;\n    tmpvar_9.x = abs((tmpvar_5 + 1.0));\n    tmpvar_9.y = (abs(tmpvar_6.y) + 1.0);\n    modi_1 = tmpvar_9;\n  };\n  float tmpvar_10;\n  tmpvar_10 = sqrt(((tmpvar_4.x * tmpvar_4.x) + (tmpvar_4.y * tmpvar_4.y)));\n  float tmpvar_11;\n  float tmpvar_12;\n  tmpvar_12 = (min (abs(\n    (tmpvar_4.y / tmpvar_4.x)\n  ), 1.0) / max (abs(\n    (tmpvar_4.y / tmpvar_4.x)\n  ), 1.0));\n  float tmpvar_13;\n  tmpvar_13 = (tmpvar_12 * tmpvar_12);\n  tmpvar_13 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_13) + 0.05368138) * tmpvar_13) - 0.1173503)\n     * tmpvar_13) + 0.1938925) * tmpvar_13) - 0.3326756)\n   * tmpvar_13) + 0.9999793) * tmpvar_12);\n  tmpvar_13 = (tmpvar_13 + (float(\n    (abs((tmpvar_4.y / tmpvar_4.x)) > 1.0)\n  ) * (\n    (tmpvar_13 * -2.0)\n   + 1.570796)));\n  tmpvar_11 = (tmpvar_13 * sign((tmpvar_4.y / tmpvar_4.x)));\n  if ((abs(tmpvar_4.x) > (1e-08 * abs(tmpvar_4.y)))) {\n    if ((tmpvar_4.x < 0.0)) {\n      if ((tmpvar_4.y >= 0.0)) {\n        tmpvar_11 += 3.141593;\n      } else {\n        tmpvar_11 = (tmpvar_11 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_11 = (sign(tmpvar_4.y) * 1.570796);\n  };\n  vec2 tmpvar_14;\n  tmpvar_14.x = (pow (tmpvar_10, -2.0) * cos((tmpvar_11 * modi_1.y)));\n  tmpvar_14.y = (pow (tmpvar_10, -2.0) * sin((tmpvar_11 * modi_1.y)));\n  uxy_2 = (tmpvar_14 + tmpvar_3);\n  float tmpvar_15;\n  float tmpvar_16;\n  tmpvar_16 = (min (abs(\n    (uxy_2.y / uxy_2.x)\n  ), 1.0) / max (abs(\n    (uxy_2.y / uxy_2.x)\n  ), 1.0));\n  float tmpvar_17;\n  tmpvar_17 = (tmpvar_16 * tmpvar_16);\n  tmpvar_17 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_17) + 0.05368138) * tmpvar_17) - 0.1173503)\n     * tmpvar_17) + 0.1938925) * tmpvar_17) - 0.3326756)\n   * tmpvar_17) + 0.9999793) * tmpvar_16);\n  tmpvar_17 = (tmpvar_17 + (float(\n    (abs((uxy_2.y / uxy_2.x)) > 1.0)\n  ) * (\n    (tmpvar_17 * -2.0)\n   + 1.570796)));\n  tmpvar_15 = (tmpvar_17 * sign((uxy_2.y / uxy_2.x)));\n  if ((abs(uxy_2.x) > (1e-08 * abs(uxy_2.y)))) {\n    if ((uxy_2.x < 0.0)) {\n      if ((uxy_2.y >= 0.0)) {\n        tmpvar_15 += 3.141593;\n      } else {\n        tmpvar_15 = (tmpvar_15 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_15 = (sign(uxy_2.y) * 1.570796);\n  };\n  float tmpvar_18;\n  tmpvar_18 = sqrt(((uxy_2.x * uxy_2.x) + (uxy_2.y * uxy_2.y)));\n  vec2 tmpvar_19;\n  tmpvar_19.x = (pow (tmpvar_18, -2.0) * cos((tmpvar_15 * modi_1.y)));\n  tmpvar_19.y = (pow (tmpvar_18, -2.0) * sin((tmpvar_15 * modi_1.y)));\n  uxy_2 = (tmpvar_19 + tmpvar_3);\n  vec4 tmpvar_20;\n  tmpvar_20 = texture (sampler_fc_colors, uxy_2);\n  vec4 tmpvar_21;\n  tmpvar_21.w = 1.0;\n  tmpvar_21.xyz = (tmpvar_20.xyz * (dot (tmpvar_20.xyz, vec3(0.32, 0.49, 0.29)) * 1.4));\n  ret = tmpvar_21.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec2 uv2_2;\n  vec3 ret_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = sin(q1);\n  float tmpvar_5;\n  tmpvar_5 = cos(q1);\n  uv2_2.x = ((uv_1.x * tmpvar_5) - (uv_1.y * tmpvar_4));\n  uv2_2.y = ((uv_1.x * tmpvar_4) + (uv_1.y * tmpvar_5));\n  uv2_2 = (uv2_2 * aspect.zw);\n  uv2_2 = (uv2_2 + 0.5);\n  ret_3 = (abs((\n    (texture (sampler_main, uv2_2).xyz * 2.65)\n   + \n    (((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1) * -2.0)\n  )) * 1.5);\n  ret_3 = (ret_3 - (roam_sin.xyz * roam_cos.zxy));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_3;\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"sampler sampler_fc_colors;\nshader_body \n{ \n\n    float2 zoom = 5;\n    float2 c = float2(q4, q5);\n    float2 uxy = (float2(uv.x-0.5, uv.y-0.5))*zoom;\n    float2 modi = float2(round(q10), round(q11));\n\n    //if a value is 0 add 1 to both, 0's break the effect\n    if(all(modi)) {} else {modi = float2(abs(modi.x+1), abs(modi.y)+1);}\n\n    float moduz = sqrt(uxy.x*uxy.x + uxy.y*uxy.y);\n\n    float thetaz = atan2(uxy.y, uxy.x);\n\n    uxy = (float2((pow(moduz, -2)*cos(thetaz*modi.y)), (pow(moduz, -2)*sin(thetaz*modi.y))))+c;\n    thetaz = atan2(uxy.y, uxy.x);\n    moduz = sqrt(uxy.x*uxy.x + uxy.y*uxy.y);\n    uxy = (float2((pow(moduz, -2)*cos(thetaz*modi.y)), (pow(moduz, -2)*sin(thetaz*modi.y))))+c;\n        \n    float3 reta = tex2D(sampler_fc_colors, uxy).xyz;    \n\n    ret = reta;\n\n    ret *= lum(ret)*1.4;\n}","comp_hlsl":"shader_body\n{\n    float2 orig = uv;\n\n    float inv_zoom = 1;//min(aspect.x,aspect.y)*1.0;\n    //float t = saturate(time*0.33);\n    //t = t*t*(3 - 2*t);\n    //inv_zoom = lerp(1, inv_zoom, t);\n\n    uv -= 0.5;\n    uv *= inv_zoom;\n    uv *= aspect.xy;\n\n    float2 uv2;  \n    uv2.x = uv.x*cos(q1) - uv.y*sin(q1);\n    uv2.y = uv.x*sin(q1) + uv.y*cos(q1);\n    uv2 *= aspect.zw;\n    uv2 += 0.5;\n\n    ret = abs( tex2D(sampler_main, uv2).xyz*2.65\n                            + GetBlur1(uv2)*-2 );\n\n    ret.xyz *= 1.5;\nret-=roam_sin*roam_cos.zxy;\n}\n\n"}