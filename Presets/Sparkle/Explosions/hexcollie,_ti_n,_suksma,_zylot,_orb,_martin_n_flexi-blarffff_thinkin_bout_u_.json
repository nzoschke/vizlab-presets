{"version":2,"baseVals":{"rating":5,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":100,"wave_scale":28.599,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"mv_x":31.2,"mv_y":23.4,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.40031,"r":0.5,"g":0.5,"r2":0.5,"g2":0,"border_b":0.5,"border_a":0},"init_eqs_str":"a.sounds=0;","frame_eqs_str":"a.sounds=div(a.bass+a.treb+a.mid,3);a.rad=a.rad*a.sounds*.6;a.r+=Math.sin(a.bass)*a.g;a.g+=Math.sin(a.mid)*a.g;a.x+=.207*Math.cos(a.time*a.bass*.1);a.y+=.207*Math.sin(a.time*a.bass*.1);","init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\n\nrad=rad*sounds*0.6;\n\nr=r+sin(bass)*g;\ng=g+sin(mid)*g;\n\n\nx=x+0.207*cos(time*bass*0.1);\ny=y+0.207*sin(time*bass*0.1);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13465,"r2":1,"a2":0.3,"border_a":0},"init_eqs_str":"a.sounds=0;","frame_eqs_str":"a.g2+=.09*Math.sin(1.23*(a.treb+a.mid));a.g+=.09*Math.cos(1.37*(a.bass+a.mid));a.sounds=div(a.bass+a.mid+a.treb,3);a.rad=div(a.rad*(a.treb+a.mid),3);a.x+=.3*Math.sin(a.time*a.bass);a.y+=.317*Math.cos(a.time*a.bass);","init_eqs_eel":"","frame_eqs_eel":"\ng2=g2+0.09*sin((treb+mid)*1.23);\ng=g+0.09*cos((bass+mid)*1.37);\n\nsounds=(bass+mid+treb)/3;\n\nrad=rad*(treb+mid)/3;\n\nx=x+0.300*sin(time*bass);\ny=y+0.317*cos(time*bass);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.20047,"g":1,"b":1,"r2":0.5,"g2":0.5,"b2":1,"border_b":0.5,"border_a":0},"init_eqs_str":"a.sounds=0;a.att=0;","frame_eqs_str":"a.sounds=div(a.bass+a.treb+a.mid,3);a.att=div(a.bass_att+a.treb_att+a.mid_att,3);a.att=div(a.bass_att+a.treb_att+a.mid_att,3);a.r2=a.r2+.25*Math.sin(6.28*a.time)-a.bass;a.g2=a.g2+.25*Math.sin(6.28*a.time)-a.bass;a.rad=a.rad;a.x=a.x+.217*Math.cos(2.3*a.time)+.1*a.sounds;a.y+=.217*Math.sin(3.5*a.time+.3*a.sounds);","init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\natt=(bass_att+treb_att+mid_att)/3;\natt=(bass_att+treb_att+mid_att)/3;\nr2=r2+(0.25*sin(time*6.28))-bass;\ng2=g2+(0.25*sin(time*6.28))-bass;\n\nrad=rad;\nx=x+0.217*cos(time*2.3)+sounds*0.1;\ny=y+0.217*sin((time*3.5)+(sounds*0.3));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"scaling":20.35074,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r=r+0.5*sin(treb*1.13);\ng=g+0.5*sin(bass*1.33);\nb=b+0.5*sin(mid*1.23);","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"r=r+0.5*sin(treb*1.13);\ng=g+0.5*sin(bass*1.33);\nb=b+0.5*sin(mid*1.23);","point_eqs_eel":""},{"baseVals":{"sep":256,"usedots":1,"scaling":100,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.frbassc=0;a.frtrebc=0;a.q1=0;a.q2=0;a.frbassc=0;a.frtrebc=0;","frame_eqs_str":"a.warp=0;a.wave_r=a.wave_r+.4*Math.sin(.333*a.time)+.2*a.bass_att;a.wave_g=a.wave_g+.4*Math.sin(.555*a.time)+.2*a.treb_att;a.wave_b=a.wave_b+.4*Math.sin(.444*a.time)+.2*a.mid_att;a.frbassc+=.5*a.bass;a.frtrebc+=.5*a.treb;a.q1=Math.sin(.01*a.frbassc);a.q2=Math.sin(.01*a.frtrebc);","pixel_eqs_str":"a.zoom=1+.1*Math.abs(a.rad-(.8-.2*a.bass));","init_eqs_eel":"frbassc = 0;\nfrtrebc = 0;","frame_eqs_eel":"warp = 0;\nwave_r = wave_r + .4*sin(time*.333)+bass_att*.2;\nwave_g = wave_g + .4*sin(time*.555)+treb_att*.2;\nwave_b = wave_b + .4*sin(time*.444)+mid_att*.2;\nfrbassc = frbassc+bass*.5;\nfrtrebc = frtrebc+treb*.5;\nq1 = sin(frbassc*.01);\nq2 = sin(frtrebc*.01);","pixel_eqs_eel":"zoom = 1+(abs(rad-(.8-(bass*.2)))*.1);","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  float tmpvar_2;\n  tmpvar_2 = dot (texsize.zw, texsize.zw);\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \n    ((tmpvar_3 * (1.0 - (8.0 * \n      sqrt(tmpvar_2)\n    ))) + 0.5)\n  ).xyz), texture (sampler_main, (\n    (tmpvar_3 * (1.0 + (8.0 * sqrt(tmpvar_2))))\n   + 0.5)).xyz) - 0.034);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec2 uv1_1;\n  vec3 tmpvar_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = -(uv);\n  tmpvar_2 = (texture (sampler_main, uv).xyz + texture (sampler_main, fract(tmpvar_3)).xyz);\n  vec2 tmpvar_4;\n  tmpvar_4.y = 0.0;\n  tmpvar_4.x = texsize.z;\n  vec2 tmpvar_5;\n  tmpvar_5.x = 0.0;\n  tmpvar_5.y = texsize.w;\n  vec2 tmpvar_6;\n  tmpvar_6.x = ((texture (sampler_main, fract(\n    (uv - tmpvar_4)\n  )).xyz - texture (sampler_main, fract(\n    (uv + tmpvar_4)\n  )).xyz).x + (texture (sampler_main, fract(\n    (tmpvar_3 - tmpvar_4)\n  )).xyz - texture (sampler_main, fract(\n    (tmpvar_3 + tmpvar_4)\n  )).xyz).x);\n  tmpvar_6.y = ((texture (sampler_main, fract(\n    (uv - tmpvar_5)\n  )).xyz - texture (sampler_main, fract(\n    (uv + tmpvar_5)\n  )).xyz).x + (texture (sampler_main, fract(\n    (tmpvar_3 - tmpvar_5)\n  )).xyz - texture (sampler_main, fract(\n    (tmpvar_3 + tmpvar_5)\n  )).xyz).x);\n  uv1_1 = ((uv - 0.5) * aspect.xy);\n  uv1_1 = ((0.4 * cos(\n    (uv1_1 * q27)\n  )) - (16.0 * tmpvar_6));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((\n    (0.5 * q1)\n   * tmpvar_2) + (q26 * \n    clamp ((0.04 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\n  )) + ((22.0 * vec3(\n    clamp ((0.04 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\n  )) * (-0.1 + tmpvar_2)));\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // feather pen\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1-8*length(texsize.zw)) + 0.5 ).xyz);\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1+8*length(texsize.zw)) + 0.5 ).xyz);\n\n    // darken over time\n    ret -= 0.034;\n}","comp_hlsl":"shader_body\n{\n\nfloat2 uv1 = uv-.5;\n\n//uv = (uv1+q27/3);\nfloat3 ret1 = GetPixel(uv) + GetPixel(frac(-uv));\n\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nfloat dx = GetPixel (frac(uv-hor)) - GetPixel (frac(uv+hor));\nfloat dy = GetPixel (frac(uv-ver)) - GetPixel (frac(uv+ver));\ndx += GetPixel (frac(-uv-hor)) - GetPixel (frac(-uv+hor));\ndy += GetPixel (frac(-uv-ver)) - GetPixel (frac(-uv+ver));\nfloat2 dz = float2 (dx,dy);\n\nuv1 *= aspect.xy;\nuv1 = .4*cos(uv1*1*q27) - 16*dz;;\nfloat dots = saturate(.04/length(uv1));\nfloat3 dots2 = saturate(.04/length(uv1));\n\n\nret = 0.5*q1*ret1 + q26*dots  + 22*dots2*(-.1+ret1);\n\n}"}