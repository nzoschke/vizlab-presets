{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":0.952,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"brighten":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warp":0,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":1.38615,"tex_zoom":1.14605,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.05,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.25*a.time;","init_eqs_eel":"","frame_eqs_eel":"ang = .25*time;"},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.0677,"ang":0.7539,"tex_zoom":0.7797,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.01,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.ang=Math.sin(.15*a.q1);a.x=.05*Math.sin(.5*a.q1+3.14)+.6;a.y=.05*Math.cos(.63*a.q1+3.14)+.6;","init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\nx=sin(q1*0.5+3.14) * 0.05 + 0.6;\ny=cos(q1*0.63+3.14)* 0.05 + 0.6"},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.0677,"ang":0.7539,"tex_zoom":0.7797,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.01,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.ang=Math.sin(.15*a.q1);a.x=.05*Math.sin(.5*a.q1)+.4;a.y=.05*Math.cos(.63*a.q1)+.4;","init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.4;\ny=cos(q1*0.63)* 0.05 + 0.4;"},{"baseVals":{"sides":5,"textured":1,"rad":1.0677,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.5;\ny=cos(q1*0.63)* 0.05 + 0.5","init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.5;\ny=cos(q1*0.63)* 0.05 + 0.5"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0.5,"b":0.1},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.q1=0;a.cosang=0;a.dz=0;a.dx=0;a.xq=0;a.t3=0;a.flip=0;a.t6=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.sinang=0;a.tm=0;a.dy=0;a.t2=0;a.zp=0;a.t4=0;","frame_eqs_str":"a.t1=a.bass_att*(.5*Math.sin(a.time)+.5);a.t2=a.bass_att*(.5*Math.sin(a.time+2.1)+.5);a.t3=a.treb_att*(.5*Math.sin(a.time+4.2)+.5);a.t4=a.treb_att*(.5*Math.sin(-a.time+1.1)+.5);a.t5=a.mid_att*(.5*Math.sin(-a.time+3.1)+.5);a.t6=a.mid_att*(.5*Math.sin(-a.time+5.2)+.5);","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip=(a.flip+1)*below(a.flip,1);a.xp=0;a.yp=.1*a.flip+.2*(.5*Math.sin(a.tm)+.5);a.zp=0;a.ang=.5*Math.sin(2*a.tm)+.5;a.xq=a.xp;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.yq=a.yp;a.zq=a.zp;a.ang=8*a.tm;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*\nMath.sin(2*a.tm-.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.ang=-1+Math.cos(3.1*a.tm+.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(2.3*a.tm)-1.05;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp*a.sinang+a.zp*a.cosang;a.yq=a.yp;a.zq=a.xp*a.cosang-a.zp*a.sinang;a.ang=.5*Math.cos(a.tm)-.5;\na.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq;a.yp=a.yq*a.cosang-a.zq*a.sinang;a.zp=a.yq*a.sinang+a.zq*a.cosang;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.dx=.00001<Math.abs(a.flip)?a.x:a.dx-a.x;a.dy=.00001<Math.abs(a.flip)?a.y:a.dy-a.y;a.dz=pow(a.dx*a.dx+a.dy*a.dy,.5);a.ang=Math.abs(Math.asin(div(a.dx,a.dz)));a.cang=.00001<Math.abs(a.flip)?a.cang:.00001<Math.abs(below(a.dx,0))?.00001<Math.abs(below(a.dy,0))?-a.ang:3.141592654+a.ang:.00001<Math.abs(below(a.dy,\n0))?a.ang:3.141592654-a.ang;a.g=.5+.5*Math.sin(a.cang);a.b=.5+.5*Math.sin(a.cang+1.047197);a.r=.5+.5*Math.sin(a.cang+2.094395);a.a=(1-a.sample)*above(a.sample,0);","init_eqs_eel":"","frame_eqs_eel":"t1=bass_att*(sin(time)*0.5+0.5);\nt2=bass_att*(sin(time+2.1)*0.5+0.5);\nt3=treb_att*(sin(time+4.2)*0.5+0.5);\n\nt4=treb_att*(sin(-time+1.1)*0.5+0.5);\nt5=mid_att*(sin(-time+3.1)*0.5+0.5);\nt6=mid_att*(sin(-time+5.2)*0.5+0.5);","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=(flip+1)*below(flip,1);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nsinang=sin(ang);cosang=cos(ang);\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\ndx = if(flip,x,dx-x);\ndy = if(flip,y,dy-y);\ndz = pow(dx*dx+dy*dy,.5);\nang = abs(asin(dx/dz));\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\ng = .5 + .5*sin(cang);\nb = .5 + .5*sin(cang + 1.047197);\nr = .5 + .5*sin(cang + 2.094395);\n\na=(1-sample)*above(sample,0);\n"},{"baseVals":{"enabled":1,"thick":1,"r":0.2,"b":0.6},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.q1=0;a.cosang=0;a.dz=0;a.dx=0;a.xq=0;a.t3=0;a.flip=0;a.t6=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.sinang=0;a.tm=0;a.dy=0;a.t2=0;a.zp=0;a.t4=0;","frame_eqs_str":"a.t1=a.mid_att*(.5*Math.sin(1.57+a.time)+.5);a.t2=a.treb_att*(.5*Math.sin(1.57+a.time+2.1)+.5);a.t3=a.mid_att*(.5*Math.sin(1.57+a.time+4.2)+.5);a.t4=a.bass_att*(.5*Math.sin(-a.time+1.1)+.5);a.t5=a.bass_att*(.5*Math.sin(-a.time+3.1)+.5);a.t6=a.treb_att*(.5*Math.sin(-a.time+5.2)+.5);","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=.1*a.flip+.2*(.5*Math.sin(a.tm)+.5)+.1;a.yp=-a.yp;a.zp=0;a.ang=.5*Math.sin(2*a.tm)+.5;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.yq=a.yp;a.zq=a.zp;a.ang=8*a.tm;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.3;\na.ang=3.14+1.5*Math.sin(2*a.tm-.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.ang=-1+Math.cos(3.1*a.tm+.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(2.3*a.tm)-1.05;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp*a.sinang+a.zp*a.cosang;a.yq=a.yp;a.zq=a.xp*a.cosang-a.zp*a.sinang;a.ang=.5*Math.cos(a.tm)-\n.5;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq;a.yp=a.yq*a.cosang-a.zq*a.sinang;a.zp=a.yq*a.sinang+a.zq*a.cosang;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.dx=.00001<Math.abs(a.flip)?a.x:a.dx-a.x;a.dy=.00001<Math.abs(a.flip)?a.y:a.dy-a.y;a.dz=pow(a.dx*a.dx+a.dy*a.dy,.5);a.ang=Math.abs(Math.asin(div(a.dx,a.dz)));a.cang=.00001<Math.abs(a.flip)?a.cang:.00001<Math.abs(below(a.dx,0))?.00001<Math.abs(below(a.dy,0))?-a.ang:3.141592654+a.ang:.00001<Math.abs(below(a.dy,\n0))?a.ang:3.141592654-a.ang;a.b=.5+.5*Math.sin(a.cang);a.g=.5+.5*Math.sin(a.cang+1.047197);a.r=.5+.5*Math.sin(a.cang+2.094395);a.a=(1-a.sample)*above(a.sample,0);","init_eqs_eel":"","frame_eqs_eel":"t1=mid_att*(sin(1.57+time)*0.5+0.5);\nt2=treb_att*(sin(1.57+time+2.1)*0.5+0.5);\nt3=mid_att*(sin(1.57+time+4.2)*0.5+0.5);\n\nt4=bass_att*(sin(-time+1.1)*0.5+0.5);\nt5=bass_att*(sin(-time+3.1)*0.5+0.5);\nt6=treb_att*(sin(-time+5.2)*0.5+0.5);","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\nyp=-yp;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\ndx = if(flip,x,dx-x);\ndy = if(flip,y,dy-y);\ndz = pow(dx*dx+dy*dy,.5);\nang = abs(asin(dx/dz));\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\nb = .5 + .5*sin(cang);\ng = .5 + .5*sin(cang + 1.047197);\nr = .5 + .5*sin(cang + 2.094395);\n\na=(1-sample)*above(sample,0);"},{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0.5,"b":0.1},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.q1=0;a.cosang=0;a.dz=0;a.dx=0;a.xq=0;a.t3=0;a.flip=0;a.t6=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.sinang=0;a.tm=0;a.dy=0;a.t2=0;a.zp=0;a.t4=0;","frame_eqs_str":"a.t1=a.treb_att*(.5*Math.sin(a.time+3.14)+.5);a.t2=a.mid_att*(.5*Math.sin(a.time+2.1+3.14)+.5);a.t3=a.bass_att*(.5*Math.sin(a.time+4.2+3.14)+.5);a.t4=a.bass_att*(.5*Math.sin(-a.time+4.24)+.5);a.t5=a.treb_att*(.5*Math.sin(-a.time+6.24)+.5);a.t6=a.mid_att*(.5*Math.sin(-a.time+8.34)+.5);","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip=(a.flip+1)*below(a.flip,1);a.xp=0;a.yp=.1*a.flip+.2*(.5*Math.sin(a.tm)+.5);a.zp=0;a.ang=.5*Math.sin(2*a.tm)+.5;a.xq=a.xp;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.yq=a.yp;a.zq=a.zp;a.ang=8*a.tm;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*\nMath.sin(2*a.tm-.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.ang=-1+Math.cos(3.1*a.tm+.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(2.3*a.tm)-1.05;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp*a.sinang+a.zp*a.cosang;a.yq=a.yp;a.zq=a.xp*a.cosang-a.zp*a.sinang;a.ang=.5*Math.cos(a.tm)-.5;\na.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq;a.yp=a.yq*a.cosang-a.zq*a.sinang;a.zp=a.yq*a.sinang+a.zq*a.cosang;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.dx=.00001<Math.abs(a.flip)?a.x:a.dx-a.x;a.dy=.00001<Math.abs(a.flip)?a.y:a.dy-a.y;a.dz=pow(a.dx*a.dx+a.dy*a.dy,.5);a.ang=Math.abs(Math.asin(div(a.dx,a.dz)));a.cang=.00001<Math.abs(a.flip)?a.cang:.00001<Math.abs(below(a.dx,0))?.00001<Math.abs(below(a.dy,0))?-a.ang:3.141592654+a.ang:.00001<Math.abs(below(a.dy,\n0))?a.ang:3.141592654-a.ang;a.g=.5+.5*Math.sin(a.cang);a.b=.5+.5*Math.sin(a.cang+1.047197);a.r=.5+.5*Math.sin(a.cang+2.094395);a.a=(1-a.sample)*above(a.sample,0);","init_eqs_eel":"","frame_eqs_eel":"t1=treb_att*(sin(time+3.14)*0.5+0.5);\nt2=mid_att*(sin(time+2.1+3.14)*0.5+0.5);\nt3=bass_att*(sin(time+4.2+3.14)*0.5+0.5);\n\nt4=bass_att*(sin(-time+1.1+3.14)*0.5+0.5);\nt5=treb_att*(sin(-time+3.1+3.14)*0.5+0.5);\nt6=mid_att*(sin(-time+5.2+3.14)*0.5+0.5);","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=(flip+1)*below(flip,1);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nsinang=sin(ang);cosang=cos(ang);\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\ndx = if(flip,x,dx-x);\ndy = if(flip,y,dy-y);\ndz = pow(dx*dx+dy*dy,.5);\nang = abs(asin(dx/dz));\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\ng = .5 + .5*sin(cang);\nb = .5 + .5*sin(cang + 1.047197);\nr = .5 + .5*sin(cang + 2.094395);\n\na=(1-sample)*above(sample,0);\n"},{"baseVals":{"thick":1,"additive":1,"g":0.3,"b":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\ntm=q1 ;\nphs=-sample*0.5;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\nang=cos(tm*2+phs-2)*1.5;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5 +phs);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2+phs)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm+phs)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=-xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample)*0.05;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\ntm=q1 ;\nphs=-sample*0.5;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\nang=cos(tm*2+phs-2)*1.5;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5 +phs);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2+phs)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm+phs)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=-xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample)*0.05;\n"}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.y1=0;a.mq1=0;a.q25=0;a.q12=0;a.t1=0;a.x1=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q6=0;a.q1=0;a.mq31=0;a.q5=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.atime=0;a.q4=0;a.q26=0;a.t=0;a.p2=0;a.i=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.p1=0;a.mq26=0;a.q27=0;a.s1=0;a.s2=0;a.q28=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.q4=Math.sin(.03*\na.atime);a.q5=Math.cos(.030383824*a.atime);a.q6=Math.tan(.029384834*a.atime);a.q6=a.aspecty;a.t1+=1;a.q1=bnot(mod(a.t1,400));a.decay=1<a.t1?1:0;a.t+=div(.001,a.fps);a.s1=500*Math.sin(a.t);a.s2=20+10*Math.sin(.5*a.t);for(var b=a.i=0;1024>b;b++)a.p1=.5*a.p1+a.s2*Math.sin(a.s1*a.i),a.p2=a.p1-a.p2,a.x1+=Math.cos(a.p2-a.p1),a.y1+=Math.sin(a.p2-a.p1),a.gmegabuf[Math.floor(2*a.i)]=a.x1,a.gmegabuf[Math.floor(2*a.i+1)]=a.y1,a.i+=1;a.zoom=1-(1-pow(2,.0031*(a.bass+a.treb+a.mid)));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\nq4=sin(atime*.03);\nq5=cos(atime*.030383824);\nq6=tan(atime*.029384834);\n\nq6=aspecty;        t1=t1+1;\nq1=bnot(t1%400);   decay=(t1>1);\n\nt=t+.001/fps;  \ns1=500*sin(t);     s2=20+10*sin(.5*t);   \ni=0;\n\nloop(1024,\n\np1=.5*p1+s2*sin(s1*i);     p2= p1-p2;\n\nx1=x1+cos(p2-p1);          y1=y1+sin(p2-p1);\n\ngmegabuf(2*i)=x1;   gmegabuf(2*i+1)=y1;\n\ni=i+1;);\n\n\nzoom=1-(1-pow(2,(bass+treb+mid)*.0031));","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 7.0));\n  vec3 tmpvar_2;\n  tmpvar_2 = fract((ret_1 - (\n    (clamp (((vol / vol_att) - 1.1), 0.0, 1.0) * 0.5)\n   + 0.004)));\n  ret_1 = tmpvar_2;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = tmpvar_2;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_6;\n  tmpvar_6 = (0.1 / (sqrt(\n    dot (tmpvar_5, tmpvar_5)\n  ) + 0.05));\n  vec2 tmpvar_7;\n  float tmpvar_8;\n  tmpvar_8 = (ang / 3.14);\n  tmpvar_7.x = tmpvar_8;\n  tmpvar_7.y = (tmpvar_6 * 1.5);\n  uv2_3.y = (tmpvar_7.y + (0.1 * time));\n  uv2_3.x = (tmpvar_8 + (0.02 * time));\n  uv3_2.y = (tmpvar_6 + q30);\n  uv3_2.x = (tmpvar_8 + (time / 32.0));\n  crisp_1 = ((texture (sampler_main, fract(uv2_3)).xyz + (2.0 * texture (sampler_main, \n    fract(uv3_2)\n  ).xyz)) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  ret_4 = ((crisp_1 + (\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, fract(uv)).xyz));\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv3_2.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_4.x > (q26 * q13)) && (ret_4.x <= (q23 * q11)))) {\n    ret_4.z = (ret_4.z - (tmpvar_10.x * 0.5));\n  };\n  if (((ret_4.y > (q25 * q11)) && (ret_4.y <= (q22 * q12)))) {\n    ret_4.x = (ret_4.x - (tmpvar_10.y * 0.5));\n  };\n  if (((ret_4.z > (q24 * q12)) && (ret_4.z <= (q21 * q13)))) {\n    ret_4.y = (ret_4.y - (tmpvar_10.z * 0.5));\n  };\n  ret_4 = (ret_4 * 0.8);\n  ret_4 = (1.0 - ret_4);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_4;\n  ret = tmpvar_11.xyz;\n }","warp_hlsl":"shader_body\n{\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*7;\n\n    // darken over time\n    //ret -= 0.004;\n    //ret *= 0.99;\n    //ret *= 0.97 + 0.03*saturate( length(uv - uv_orig)*200 );  // center only\n    float dec = saturate(vol/vol_att - 1.1)*0.5 + 0.004;\n    ret = frac(ret - dec);\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\nfloat rad2 = length(uv1) + .05;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1*1.5);\nuv2.y = uv2.y  +0.1*time;\nuv2.x = uv2.x  +.02*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1);\nuv3.y = uv3.y  + q30 ;\nuv3.x = uv3.x  + time/32;\n\n\nfloat3 crisp = GetPixel(frac(uv2)) + 2*GetPixel(frac(uv3));\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (1,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\n\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(frac(uv));\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv3.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret *= .8;\nret=1-ret;\n}"}