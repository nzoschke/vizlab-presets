{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_brighten":0,"wrap":0,"brighten":1,"wave_a":0.001,"wave_scale":0.01,"warpanimspeed":1.681,"warpscale":2.953,"zoomexp":0.01,"zoom":0.9901,"warp":1.24699,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=\n.09+div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;\na.border_b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/15+instance-instance;\ntrans2 = int(rand(int(q30)))/15+instance-instance;\ntrans3 = int(rand(int(q30)))/15+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q30))*.1+instance-instance;\ng=int(rand(q30))*.1+instance-instance;\nb=int(rand(q30))*.1+instance-instance;\nr2=int(rand(q30))*.1+instance-instance;\ng2=int(rand(q30))*.1+instance-instance;\nb2=int(rand(q30))*.1+instance-instance;\nborder_r=int(rand(q30))*.1+instance-instance;\nborder_g=int(rand(q30))*.1+instance-instance;\nborder_b=int(rand(q30))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+\ndiv(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q30))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q30))+a.instance-a.instance;\na.border_b=.1*Math.floor(rand(a.q30))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/15+instance-instance;\ntrans2 = int(rand(int(q30)))/15+instance-instance;\ntrans3 = int(rand(int(q30)))/15+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = .5 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q30))*.1+instance-instance;\ng=int(rand(q30))*.1+instance-instance;\nb=int(rand(q30))*.1+instance-instance;\nr2=int(rand(q30))*.1+instance-instance;\ng2=int(rand(q30))*.1+instance-instance;\nb2=int(rand(q30))*.1+instance-instance;\nborder_r=int(rand(q30))*.1+instance-instance;\nborder_g=int(rand(q30))*.1+instance-instance;\nborder_b=int(rand(q30))*.1+instance-instance;\n"},{"baseVals":{"sides":32,"thickoutline":1,"num_inst":33,"r":0.5,"r2":0.5,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = q1 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = q1 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q12=0;a.w2=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.mq31=0;a.q5=0;a.mq21=0;a.vb=0;a.mq24=0;a.q9=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.q4=0;a.q16=0;a.q26=0;a.w1=0;a.mq27=0;a.mq25=0;a.q19=0;a.mq22=0;a.q17=0;a.mq26=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.vvm=0;a.q32=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.vvt=0;a.q8=0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(a.bass_att,2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(a.mid_att,2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(a.treb_att,2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=2*a.vvb;a.q2=2*a.vvm;a.q3=10*a.vvt;a.q4=5*(a.q1+a.q2+a.q3);a.q5=5*(a.q1+a.q2+a.q3);a.q6=5*(a.q1+a.q2+a.q3);a.q7=5*(a.q1+a.q2+a.q3);\na.q8=5*(a.q1+a.q2+a.q3);a.q9=5*(a.q1+a.q2+a.q3);a.q10=5*(a.q1+a.q2+a.q3);a.q11=5*(a.q1+a.q2+a.q3);a.q12=5*(a.q1+a.q2+a.q3);a.q13=5*(a.q1+a.q2+a.q3);a.q14=5*(a.q1+a.q2+a.q3);a.q15=5*(a.q1+a.q2+a.q3);a.q16=5*(a.q1+a.q2+a.q3);a.q17=5*(a.q1+a.q2+a.q3);a.q18=5*(a.q1+a.q2+a.q3);a.q19=5*(a.q1+a.q2+a.q3);a.q20=5*(a.q1+a.q2+a.q3);a.q21=5*(a.q1+a.q2+a.q3);a.q22=5*(a.q1+a.q2+a.q3);a.q23=5*(a.q1+a.q2+a.q3);a.q24=5*(a.q1+a.q2+a.q3);a.q25=5*(a.q1+a.q2+a.q3);a.q26=5*(a.q1+a.q2+a.q3);a.q27=5*(a.q1+a.q2+a.q3);a.q28=\n5*(a.q1+a.q2+a.q3);a.q29=5*(a.q1+a.q2+a.q3);a.q30=3*(a.q1+a.q2+a.q3);a.q31=5*(a.q1+a.q2+a.q3);a.q32=5*(a.q1+a.q2+a.q3);a.w1=.7*Math.asin(1);a.w2=1.3*Math.asin(1);a.q5=Math.sin(a.w1);a.q6=Math.cos(a.w1);a.q7=Math.sin(a.w2);a.q8=Math.cos(a.w2);a.w1=.7*Math.asin(1);a.w2=1.3*Math.asin(1);a.q9=Math.sin(a.w1);a.q10=Math.cos(a.w1);a.q11=Math.sin(a.w2);a.q12=Math.cos(a.w2);a.zoom=.999;a.q30=3*(a.bass+a.treb+a.mid);a.q3=5*a.q30;a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?\nrand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=\n.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\nvb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = vvb*2;//0.5 + vb - vvb;\nq2 = vvm*2;//0.5 + vm - vvm;\nq3 = vvt*10;//0.5 + vt - vvt;\nq4=(q1+q2+q3)*5;\nq5=(q1+q2+q3)*5;\nq6=(q1+q2+q3)*5;\nq7=(q1+q2+q3)*5;\nq8=(q1+q2+q3)*5;\nq9=(q1+q2+q3)*5;\nq10=(q1+q2+q3)*5;\nq11=(q1+q2+q3)*5;\nq12=(q1+q2+q3)*5;\nq13=(q1+q2+q3)*5;\nq14=(q1+q2+q3)*5;\nq15=(q1+q2+q3)*5;\nq16=(q1+q2+q3)*5;\nq17=(q1+q2+q3)*5;\nq18=(q1+q2+q3)*5;\nq19=(q1+q2+q3)*5;\nq20=(q1+q2+q3)*5;\nq21=(q1+q2+q3)*5;\nq22=(q1+q2+q3)*5;\nq23=(q1+q2+q3)*5;\nq24=(q1+q2+q3)*5;\nq25=(q1+q2+q3)*5;\nq26=(q1+q2+q3)*5;\nq27=(q1+q2+q3)*5;\nq28=(q1+q2+q3)*5;\nq29=(q1+q2+q3)*5;\nq30=(q1+q2+q3)*3;\nq31=(q1+q2+q3)*5;\nq32=(q1+q2+q3)*5;\n\n//q1 = aspectX;\n//q2 = aspectY;\nw1 = asin(1)*0.7;\nw2 = asin(1)*1.3;\nq5 = sin(w1);\nq6 = cos(w1);\nq7 = sin(w2);\nq8 = cos(w2);\nw1 = asin(1)*0.7;\nw2 = asin(1)*1.3;\nq9 = sin(w1);\nq10 = cos(w1);\nq11 = sin(w2);\nq12 = cos(w2);\nzoom = 0.999;\n//wave_a = 0;\nq30=(bass+treb+mid)*3;\nq3=q30*5;\nchng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\n  uv_1 = (mix (uv_orig, uv, vec2((\n    (dot (texture (sampler_main, mix (uv_orig, uv, vec2(4.0, 4.0))).xyz, vec3(0.32, 0.49, 0.29)) - dot (((texture (sampler_blur2, \n      mix (uv_orig, uv, vec2(-12.0, -12.0))\n    ).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29)))\n   * 12.0))) + ((\n    (texture (sampler_noise_lq, tmpvar_3) - 0.5)\n  .xy * texsize.zw) * 0.5));\n  ret_2 = ((texture (sampler_main, uv_1).xyz + (\n    (texture (sampler_noise_lq, tmpvar_3) - 0.5)\n   * 0.006).xyz) + -0.0006);\n  ret_2.z = (1.0 - ret_2.z);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * roam_cos.y)) && (ret_2.x <= (q24 * roam_sin.x)))) {\n    ret_2.y = (ret_2.y - (tmpvar_4.x * 0.5));\n  };\n  ret_2.x = (1.0 - ret_2.x);\n  if (((ret_2.y > (q22 * roam_sin.x)) && (ret_2.y <= (q25 * roam_cos.x)))) {\n    ret_2.z = (ret_2.z - (tmpvar_4.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * roam_cos.x)) && (ret_2.z <= (q26 * roam_sin.y)))) {\n    ret_2.x = (ret_2.x - (tmpvar_4.z * 0.5));\n  };\n  ret_2 = (ret_2 - ((slow_roam_sin.xyz * roam_cos.zxy) * 0.7));\n  ret_2.y = (1.0 - ret_2.y);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = fract(uv);\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, tmpvar_2);\n  ret_1.z = tmpvar_3.z;\n  vec2 x_4;\n  x_4 = (tmpvar_3.xy - ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1).xy);\n  vec2 x_5;\n  x_5 = (tmpvar_3.xy - ((texture (sampler_blur2, tmpvar_2).xyz * scale2) + bias2).xy);\n  ret_1.xy = (tmpvar_3.xy * ((1.0 - \n    (sqrt(dot (x_4, x_4)) * 3.5)\n  ) * (1.0 - \n    sqrt(dot (x_5, x_5))\n  )));\n  ret_1.z = ((roam_cos.w / ret_1.x) * ret_1.y);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((ret_1.x > (q26 * roam_cos.y)) && (ret_1.x <= (q23 * roam_sin.x)))) {\n    ret_1.z = (ret_1.z - (tmpvar_6.x * 0.5));\n  };\n  if (((ret_1.y > (q25 * roam_sin.x)) && (ret_1.y <= (q22 * roam_cos.x)))) {\n    ret_1.x = (ret_1.x - (tmpvar_6.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * roam_cos.x)) && (ret_1.z <= (q21 * roam_sin.y)))) {\n    ret_1.y = (ret_1.y - (tmpvar_6.z * 0.5));\n  };\n  ret_1 = (ret_1 - ((roam_sin.xyz * roam_cos.zxy) * 0.2));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body\n{\n\n\nfloat error     = 0.5;        // maximum random pixel offset\nfloat diffusion = 0.006;      // dither strength\nfloat fadeout   = -0.0006;    // may be minor 1/256 due to the error diffusion dither;\n\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;\nfloat magic = lum(GetPixel(lerp(uv_orig,uv, 4))) - lum(GetBlur2(lerp(uv_orig,uv,-12)));\nuv = lerp(uv_orig,uv, magic*12 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;\nret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;\n\nret.z=1-ret.z;\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; \nret.x=1-ret.x;\n\nif(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z -= (noise9).y*.5; \nif(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; \n\nret-=slow_roam_sin*roam_cos.zxy*.7;\nret.y=1-ret.y;\n\n\n}","comp_hlsl":"sampler sampler_fw_sky;\nshader_body\n{\nfloat2 uvm = frac(uv + time*.0);\n\nret = tex2D(sampler_main,uvm);\nfloat diff = 1-length(ret.xy-GetBlur1(uvm).xy)*3.5;\ndiff *=1-length(ret.xy-GetBlur2(uvm).xy)*1;\nret.xy *= diff;\nret.z = roam_cos.w/ret.x*ret.y;\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q30 \n                     );\nif(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z -= (noise9).x*.5; \nif(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x -= (noise9).y*.5; \nif(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y -= (noise9).z*.5; \nret-=roam_sin*roam_cos.zxy*.2;\n}"}