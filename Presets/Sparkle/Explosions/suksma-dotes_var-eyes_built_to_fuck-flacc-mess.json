{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_a":0.001,"warpscale":1.331,"zoom":0.99951,"warp":0.00909,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.x=a.q1+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=a.q2+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=\n.09+div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;\na.border_b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = q1 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.x=a.q1+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=a.q2+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+\ndiv(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_b=\n.1*Math.floor(rand(a.q3))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = q1 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"num_inst":33,"r":0.5,"r2":0.5,"g2":0,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.x=a.q1+.01*Math.floor(rand(15))*a.treb_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=a.q2+.01*Math.floor(rand(15))*a.treb_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=\n.09+div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;\na.border_b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\n//a2 = trans2;\n//border_a = trans3;\n\nx = q1 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.d=0;a.res=0;a.q12=0;a.counter=0;a.q29=0;a.q1=0;a.x=0;a.v=0;a.diff=0;a.q11=0;a.r=0;a.y=0;a.beat=0;a.vol=0;a.q2=0;a.q3=0;a.m=0;a.q30=0;","frame_eqs_str":"a.vol=8*a.bass+5*a.mid+3*a.treb;a.m=.97*a.m+.08*a.vol;a.monitor=a.vol;a.beat=above(a.vol,a.res)*above(a.vol,a.m)*above(a.vol,16);a.diff=(1-a.beat)*a.diff+a.beat*(a.vol-a.res);a.res=a.beat*(a.vol+.1*a.m)+(1-a.beat)*(a.res-div(60*(.1+.02*a.diff),a.fps));a.res=Math.max(0,a.res);a.x=.00001<Math.abs(a.beat)?.01*Math.floor(rand(60))+.2:a.x;a.y=.00001<Math.abs(a.beat)?.01*Math.floor(rand(60))+.2:a.y;a.q1=a.x;a.q2=a.y;a.counter=.00001<Math.abs(below(a.counter,9))?a.counter+1:1;a.q3=\na.counter;a.wave_x=a.q1;a.wave_y=1-a.q2;a.q30=a.bass+a.treb+a.mid;a.q3=2*a.q30;a.vol=a.bass+a.treb+a.mid;a.q11=-2+.5*Math.sin(a.time)+a.vol;a.q12=-2+.5*Math.sin(a.time)+a.vol;a.q29=1*a.vol;a.q30=1.5*a.vol;","pixel_eqs_str":"a.cx=a.q1;a.cy=a.q2;a.d=pow(sqrt(sqr(a.x-a.cx)+sqr(a.y-a.cy)),.8);a.r=.2;a.v=.2;a.dx=(a.x-a.cx)*a.v*(a.d-a.r);a.dy=(a.y-a.cy)*a.v*(a.d-a.r);","init_eqs_eel":"","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\nm = m*0.97 + vol*0.08;\nmonitor = vol;\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\ndiff = (1-beat)*diff + beat*(vol-res);\nres = beat*(vol + m*0.1) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\nres = max(0,res);\n\n\nx = if(beat,int(rand(60))*0.01 + 0.2,x);\ny = if(beat,int(rand(60))*0.01 + 0.2,y);\nq1 = x;\nq2 = y;\n\ncounter = if(below(counter,9),counter+1,1);\nq3 = counter;\n\nwave_x = q1;\nwave_y = 1-q2;\nq30=bass+treb+mid;\nq3=q30*2;\nvol=bass+treb+mid;\nq11=-2+sin(time)*.5+vol;\nq12=-2+sin(time)*.5+vol;\nq29=(vol)*1;\nq30=vol*1.5;","pixel_eqs_eel":"cx = q1;\ncy = q2;\n\nd = pow(sqrt(sqr(x-cx)+sqr(y-cy)),0.8);\nr = 0.2;\nv = 0.2;\n\ndx = (x - cx)*v*(d-r);\ndy = (y - cy)*v*(d-r);","warp":" shader_body { \n  vec3 rsamp_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_pw_main, uv);\n  ret_2 = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.xy - 0.5)\n   * 12.0) * texsize.zw)));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  rsamp_1 = tmpvar_6;\n  float tmpvar_7;\n  vec2 x_8;\n  x_8 = (tmpvar_4.xy - uv);\n  tmpvar_7 = sqrt(dot (x_8, x_8));\n  float tmpvar_9;\n  vec2 x_10;\n  x_10 = (tmpvar_5.xy - uv);\n  tmpvar_9 = sqrt(dot (x_10, x_10));\n  if ((tmpvar_7 > tmpvar_9)) {\n    ret_2.xy = tmpvar_6.xy;\n  };\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.zw - 0.5)\n   * 48.0) * texsize.zw)));\n  rsamp_1 = tmpvar_11.xyz;\n  float tmpvar_12;\n  vec2 x_13;\n  x_13 = (ret_2.xy - uv);\n  tmpvar_12 = sqrt(dot (x_13, x_13));\n  float tmpvar_14;\n  vec2 x_15;\n  x_15 = (tmpvar_11.xy - uv);\n  tmpvar_14 = sqrt(dot (x_15, x_15));\n  if ((tmpvar_12 > tmpvar_14)) {\n    ret_2.xy = rsamp_1.xy;\n  };\n  ret_2.z = texture (sampler_fw_main, ret_2.xy).z;\n  ret_2.z = (ret_2.z + (q29 * 0.005));\n  if ((((ret_2.z + ret_2.y) + ret_2.x) < 0.9)) {\n    ret_2 = (ret_2 * 0.1);\n  };\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_2;\n  ret = tmpvar_16.xyz;\n }","comp":" shader_body { \n  vec3 plastic_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = q11;\n  tmpvar_5.y = q12;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.x;\n  tmpvar_6.y = tmpvar_4.x;\n  vec2 x_7;\n  x_7 = ((uv - (tmpvar_6 * 4.0)) - tmpvar_5);\n  plastic_1.x = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_7, x_7)), 0.5)\n  )));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_3.y;\n  tmpvar_8.y = tmpvar_4.y;\n  vec2 x_9;\n  x_9 = ((uv - (tmpvar_8 * 4.0)) - tmpvar_5);\n  plastic_1.y = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_9, x_9)), 0.5)\n  )));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_3.z;\n  tmpvar_10.y = tmpvar_4.z;\n  vec2 x_11;\n  x_11 = ((uv - (tmpvar_10 * 4.0)) - tmpvar_5);\n  plastic_1.z = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_11, x_11)), 0.5)\n  )));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ((plastic_1 * texture (sampler_main, uv).xyz) * 1.5);\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv;\n\nfloat2 noise_uv = uv*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));\nret.xyz = tex2D( sampler_pw_main,uvm).xyz;\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nrsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nret.z = tex2D(sampler_fw_main,ret.xy).z;\n\nret.z += q29*.005;\nif(ret.z+ret.y+ret.x<.9)ret*=.1;\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*8;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n    float2 light_pos = float2(q11,q12);\n    float3 col = float3(4,4,4);\n    float c = 4;\n    float dd = 16;\n    float3 plastic;\n    plastic.x = col.x/(1+dd*pow(length( uv - float2(dx.x,dy.x)*c - light_pos),0.5));\n    plastic.y = col.y/(1+dd*pow(length( uv - float2(dx.y,dy.y)*c - light_pos),0.5));\n    plastic.z = col.z/(1+dd*pow(length( uv - float2(dx.z,dy.z)*c - light_pos),0.5));\n\n    ret = plastic*GetPixel(uv)*1.5;\n\n}"}