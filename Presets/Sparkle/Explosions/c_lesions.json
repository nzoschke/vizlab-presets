{"version":2,"baseVals":{"rating":5,"gammaadj":0.8,"decay":1,"echo_zoom":1,"wave_mode":5,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_a":1.136,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.38022,"rot":0.02,"warp":0.19805,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.5,"ob_g":1,"ib_b":0.55,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"num_inst":92,"x":0.8,"rad":0.02705,"ang":1.5708,"tex_ang":1.25664,"tex_zoom":3.07268,"g":1,"b":1,"g2":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.xang=0;a.ampl=0;a.fov=0;a.t1=0;a.yang=0;a.my=0;a.oz=0;a.k1=0;a.t_rel=0;a.k2=0;a.mz=0;a.oy=0;a.mx=0;a.zang=0;a.sample=0;a.t_abs=0;a.ox=0;","frame_eqs_str":"a.t1=a.time-Math.floor(a.time);a.sample=div(a.instance,a.num_inst);a.t_abs=3*a.sample;a.t_rel=a.sample-div(a.time,5);a.ampl=div(2*a.t_abs,2);a.k1=Math.sin(div(a.time,13));a.k2=Math.sin(div(a.time,12));a.ox=a.ampl*Math.sin(a.t_abs*(31+5*a.k1))+Math.sin(div(a.time,25))*(1-a.t_abs)*.4;a.oy=a.ampl*Math.cos(a.t_abs*(31+5*a.k2));a.oz=-1;a.r=sqr(Math.sin(3.4*a.t_rel));a.g=sqr(Math.sin(a.t_rel));a.b=sqr(Math.cos(1.8*a.t_rel));a.xang=div(a.time,9.5);a.yang=div(0*a.time,7);a.zang=div(-a.time,\n22);a.fov=.5;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz-=6;a.x=div(a.ox*a.fov,a.oz)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;a.a=.5*div(1,a.mz);a.a2=.5*div(1,a.mz);a.border_a=.5*div(1,a.mz);a.rad=\n.005*div(1,a.mz);","init_eqs_eel":"","frame_eqs_eel":"t1 = time - int (time);\nsample = instance/num_inst;\nt_abs = sample*3;\nt_rel = sample-time/5;\n\nampl = 2*t_abs/2 ;\n\nk1=sin(time/13);\nk2=sin(time/12);\nox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;\noy = ampl*cos (t_abs*(31+5*k2));\noz = -1  ;\n\n\nr = sqr(sin(t_rel*3.4));\ng = sqr(sin(t_rel));\nb = sqr (cos(t_rel*1.8));\n\n//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;\n\nxang = time/9.5;\nyang = 0*time/7;\nzang = -time/22;\nfov = 0.5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\na=1/mz*.5;\na2=1/mz*.5;\nborder_a=1/mz*.5;\nrad=1/mz*.005;"},{"baseVals":{"sides":63,"textured":1,"rad":1.99863,"tex_zoom":0.49981,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"t1 = time - int (time);","point_eqs_str":"\nt_abs = sample*3;\nt_rel = sample-time/5;\n\nampl = 2*t_abs/2 ;\n\nk1=sin(time/13);\nk2=sin(time/12);\nox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;\noy = ampl*cos (t_abs*(31+5*k2));\noz = -1  ;\n\n\nr = sqr(sin(t_rel*3.4));\ng = sqr(sin(t_rel));\nb = sqr (cos(t_rel*1.8));\n\na=0.1*(sin(t_abs*3)) \n  + 0.6*q3*below (abs(1-t_abs-t1 ),0.3);\n\nxang = time/9.5;\nyang = 0*time/7;\nzang = -time/22;\nfov = 0.5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"t1 = time - int (time);","point_eqs_eel":"\nt_abs = sample*3;\nt_rel = sample-time/5;\n\nampl = 2*t_abs/2 ;\n\nk1=sin(time/13);\nk2=sin(time/12);\nox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;\noy = ampl*cos (t_abs*(31+5*k2));\noz = -1  ;\n\n\nr = sqr(sin(t_rel*3.4));\ng = sqr(sin(t_rel));\nb = sqr (cos(t_rel*1.8));\n\na=0.1*(sin(t_abs*3)) \n  + 0.6*q3*below (abs(1-t_abs-t1 ),0.3);\n\nxang = time/9.5;\nyang = 0*time/7;\nzang = -time/22;\nfov = 0.5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_str":"ang = 0;\nlen = t4;\nmad = .6;\n\nit = if(above(sample,0),(it+equal(lev,7)),1);\nita = (ita + 1)*above(sample,0);\n\nmod = if(equal(it%2,0),1,  if(equal((it+1)%4,0),2,  if(equal((it+3)%8,0),3,  if(equal((it+7)%16,0),4,  if(equal((it+15)%32,0),5,  if(equal((it+31)%64,0),6,  if(equal((it+63)%128,0),7,7)  ))))));\n\nsw = sw - 1;\nsw = if(equal(lev,7),mod,sw)*above(sample,0);\n\nlev = if(above(sample,0),if(above(sw,0),lev-1,lev+1),7);\na = lev*.1*1.46;\n\nar = if(above(sample,0),ar,1);\nar = if(equal(lev,0),ar*-1,ar);\nbr = if(above(sample,0),br,1);\nbr = if(equal(lev,1),br*-1,br);\ncr = if(above(sample,0),cr,1);\ncr = if(equal(lev,2),cr*-1,cr);\ndr = if(above(sample,0),dr,1);\ndr = if(equal(lev,3),dr*-1,dr);\ner = if(above(sample,0),er,1);\ner = if(equal(lev,4),er*-1,er);\nfr = if(above(sample,0),fr,1);\nfr = if(equal(lev,5),fr*-1,fr);\ngr = if(above(sample,0),gr,1);\ngr = if(equal(lev,6),gr*-1,gr);\n\nmlev = lev*above(sample,0);\n\nswi = equal(q4,0)*equal(sample,0);\n\nha = if(swi,1-2*int(rand(2)),ha);\nhb = if(swi,1-2*int(rand(2)),hb);\nhc = if(swi,1-2*int(rand(2)),hc);\nhd = if(swi,1-2*int(rand(2)),hd);\nhe = if(swi,1-2*int(rand(2)),he);\nhf = if(swi,1-2*int(rand(2)),hf);\nhg = if(swi,1-2*int(rand(2)),hg);\n\naang = if(above(sample,0),aang,aang + (q1*.8 + q2*.1 + q3*.1)*ha*1);\nbang = if(above(sample,0),bang,bang + (q1*.57 + q2*.33 + q3*.1)*hb*1.33);\ncang = if(above(sample,0),cang,cang + (q1*.33 + q2*.57 + q3*.1)*hc*1.67);\ndang = if(above(sample,0),dang,dang + (q1*.1 + q2*.8 + q3*.1)*hd*2);\neang = if(above(sample,0),eang,eang + (q1*.1 + q2*.57 + q3*.33)*he*2.33);\nfang = if(above(sample,0),fang,fang + (q1*.1 + q2*.33 + q3*.57)*hf*2.67);\ngang = if(above(sample,0),gang,gang + (q1*.1 + q2*.1 + q3*.8)*hg*3);\n\naang = 1.57;\nbang = 1.57;\ncang = 1.57;\ndang = 1.57;\neang = 1.57;\nfang = 1.57;\ngang = 1.57;\n\noz = 0;\n\nlen = len*mad;\nox = above(lev,0)*sin(aang)*len*ar;\noy = above(lev,0)*cos(aang)*len;\n\nan = (ar*aang + br*bang)*br;\nlen = len*mad;\noy = oy + above(lev,1)*sin(an)*len*br;\noz = oz + above(lev,1)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang)*cr;\nlen = len*mad;\nox = ox + above(lev,2)*sin(an)*len*cr;\noz = oz + above(lev,2)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang)*dr;\nlen = len*mad;\nox = ox + above(lev,3)*sin(an)*len*dr;\noy = oy + above(lev,3)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang)*er;\nlen = len*mad;\nox = ox + above(lev,4)*sin(an)*len*er;\noz = oz + above(lev,4)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang + fr*fang)*fr;\nlen = len*mad;\nox = ox + above(lev,5)*sin(an)*len*fr;\noz = oz + above(lev,5)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang + fr*fang + gr*gang)*gr;\nlen = len*mad;\noy = oy + above(lev,6)*sin(an)*len*gr;\nox = ox + above(lev,6)*cos(an)*len;\n\n\nxang = time*1.132;\nxang = q5;\nyang = time*1.153;\nyang = q6;\nzang = time*1.110;\nzang = q7 + 1.57;\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_eel":"ang = 0;\nlen = t4;\nmad = .6;\n\nit = if(above(sample,0),(it+equal(lev,7)),1);\nita = (ita + 1)*above(sample,0);\n\nmod = if(equal(it%2,0),1,  if(equal((it+1)%4,0),2,  if(equal((it+3)%8,0),3,  if(equal((it+7)%16,0),4,  if(equal((it+15)%32,0),5,  if(equal((it+31)%64,0),6,  if(equal((it+63)%128,0),7,7)  ))))));\n\nsw = sw - 1;\nsw = if(equal(lev,7),mod,sw)*above(sample,0);\n\nlev = if(above(sample,0),if(above(sw,0),lev-1,lev+1),7);\na = lev*.1*1.46;\n\nar = if(above(sample,0),ar,1);\nar = if(equal(lev,0),ar*-1,ar);\nbr = if(above(sample,0),br,1);\nbr = if(equal(lev,1),br*-1,br);\ncr = if(above(sample,0),cr,1);\ncr = if(equal(lev,2),cr*-1,cr);\ndr = if(above(sample,0),dr,1);\ndr = if(equal(lev,3),dr*-1,dr);\ner = if(above(sample,0),er,1);\ner = if(equal(lev,4),er*-1,er);\nfr = if(above(sample,0),fr,1);\nfr = if(equal(lev,5),fr*-1,fr);\ngr = if(above(sample,0),gr,1);\ngr = if(equal(lev,6),gr*-1,gr);\n\nmlev = lev*above(sample,0);\n\nswi = equal(q4,0)*equal(sample,0);\n\nha = if(swi,1-2*int(rand(2)),ha);\nhb = if(swi,1-2*int(rand(2)),hb);\nhc = if(swi,1-2*int(rand(2)),hc);\nhd = if(swi,1-2*int(rand(2)),hd);\nhe = if(swi,1-2*int(rand(2)),he);\nhf = if(swi,1-2*int(rand(2)),hf);\nhg = if(swi,1-2*int(rand(2)),hg);\n\naang = if(above(sample,0),aang,aang + (q1*.8 + q2*.1 + q3*.1)*ha*1);\nbang = if(above(sample,0),bang,bang + (q1*.57 + q2*.33 + q3*.1)*hb*1.33);\ncang = if(above(sample,0),cang,cang + (q1*.33 + q2*.57 + q3*.1)*hc*1.67);\ndang = if(above(sample,0),dang,dang + (q1*.1 + q2*.8 + q3*.1)*hd*2);\neang = if(above(sample,0),eang,eang + (q1*.1 + q2*.57 + q3*.33)*he*2.33);\nfang = if(above(sample,0),fang,fang + (q1*.1 + q2*.33 + q3*.57)*hf*2.67);\ngang = if(above(sample,0),gang,gang + (q1*.1 + q2*.1 + q3*.8)*hg*3);\n\naang = 1.57;\nbang = 1.57;\ncang = 1.57;\ndang = 1.57;\neang = 1.57;\nfang = 1.57;\ngang = 1.57;\n\noz = 0;\n\nlen = len*mad;\nox = above(lev,0)*sin(aang)*len*ar;\noy = above(lev,0)*cos(aang)*len;\n\nan = (ar*aang + br*bang)*br;\nlen = len*mad;\noy = oy + above(lev,1)*sin(an)*len*br;\noz = oz + above(lev,1)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang)*cr;\nlen = len*mad;\nox = ox + above(lev,2)*sin(an)*len*cr;\noz = oz + above(lev,2)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang)*dr;\nlen = len*mad;\nox = ox + above(lev,3)*sin(an)*len*dr;\noy = oy + above(lev,3)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang)*er;\nlen = len*mad;\nox = ox + above(lev,4)*sin(an)*len*er;\noz = oz + above(lev,4)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang + fr*fang)*fr;\nlen = len*mad;\nox = ox + above(lev,5)*sin(an)*len*fr;\noz = oz + above(lev,5)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang + fr*fang + gr*gang)*gr;\nlen = len*mad;\noy = oy + above(lev,6)*sin(an)*len*gr;\nox = ox + above(lev,6)*cos(an)*len;\n\n\nxang = time*1.132;\nxang = q5;\nyang = time*1.153;\nyang = q6;\nzang = time*1.110;\nzang = q7 + 1.57;\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;a.volume=0;a.beatrate=0;a.lastbeat=0;a.meanbass_att=0;a.peakbass_att=0;a.beat=0;","frame_eqs_str":"a.wave_r=a.bass-1;a.wave_g=a.mid-1.2;a.wave_b=a.treb-.5;a.warp=0;a.mv_r=.5+.5*Math.sin(.562*a.time);a.mv_g=.5+.5*Math.sin(1.1941*a.time);a.mv_b=.5+.5*Math.sin(1.287*a.time);a.volume=.15*(a.bass_att+a.bass+a.mid+a.mid_att);a.beatrate=.00001<Math.abs(equal(a.beatrate,0))?1:.00001<Math.abs(below(a.volume,.01))?1:a.beatrate;a.lastbeat=.00001<Math.abs(equal(a.lastbeat,0))?a.time:a.lastbeat;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.peakbass_att=.00001<Math.abs(above(a.bass_att,\na.peakbass_att))?a.bass_att:a.peakbass_att;a.beat=.00001<Math.abs(above(a.volume,.8))?.00001<Math.abs(below(a.peakbass_att-a.bass_att,.05*a.peakbass_att))?.00001<Math.abs(above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1)))?1:0:0:0;a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=.00001<Math.abs(equal(a.beat,0))?.00001<Math.abs(above(a.time-a.lastbeat,2*a.beatrate))?.95*a.peakbass_att:\n.995*a.peakbass_att:a.bass_att;a.lastbeat=.00001<Math.abs(a.beat)?a.time:a.lastbeat;a.q1=Math.floor(a.beat*a.bass);","pixel_eqs_str":"a.rot=.2*pow(a.ang,3+a.q1);a.zoom=Math.sin(pow(a.rad,3))+1;","init_eqs_eel":"","frame_eqs_eel":"wave_r = bass-1;\nwave_g = mid-1.2;\nwave_b = treb-.5;\nwarp =0;\nmv_r = 0.5 + 0.5*sin(time*0.562);\nmv_g = 0.5 + 0.5*sin(time*1.1941);\nmv_b = 0.5+0.5*sin(time*1.287);\nvolume = 0.15*(bass_att+bass+mid+mid_att);\nbeatrate = if(equal(beatrate,0),1,if(below(volume,0.01),1,beatrate));\nlastbeat = if(equal(lastbeat,0),time,lastbeat);\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\npeakbass_att = if(above(bass_att,peakbass_att),bass_att,peakbass_att);\nbeat = if(above(volume,0.8),if(below(peakbass_att - bass_att, 0.05*peakbass_att),if(above(time - lastbeat,0.1+0.5*(beatrate-0.1)),1,0),0),0);\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = if(equal(beat,0),if(above(time - lastbeat,2*beatrate),peakbass_att*0.95,peakbass_att*0.995),bass_att);\nlastbeat = if(beat,time,lastbeat);\nq1 =int( beat*bass);","pixel_eqs_eel":"rot=0.2*pow(ang,3+q1);\nzoom=sin(pow(rad,3))+1;","warp":" shader_body { \n  vec2 my_uv_1;\n  vec2 d_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 4.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    fract((uv + (vec2(1.0, 0.0) * tmpvar_4)))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    fract((uv - (vec2(1.0, 0.0) * tmpvar_4)))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_6;\n  tmpvar_6 = (((texture (sampler_blur1, \n    fract((uv + (vec2(0.0, 1.0) * tmpvar_4)))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    fract((uv - (vec2(0.0, 1.0) * tmpvar_4)))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_7;\n  tmpvar_7 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  d_2 = -(tmpvar_4);\n  float tmpvar_8;\n  tmpvar_8 = (d_2 * 4.0).x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_5.y;\n  tmpvar_9.y = tmpvar_6.y;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_5.x;\n  tmpvar_10.y = tmpvar_6.x;\n  vec2 tmpvar_11;\n  tmpvar_11 = ((uv - (tmpvar_9 * d_2)) - (tmpvar_10 * tmpvar_8));\n  ret_3.y = texture (sampler_fc_main, (tmpvar_11 - floor(tmpvar_11))).y;\n  ret_3.y = (ret_3.y + ((\n    (ret_3.y - tmpvar_7.y)\n   * 0.042) + -0.0075));\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_5.x;\n  tmpvar_12.y = tmpvar_6.x;\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_5.z;\n  tmpvar_13.y = tmpvar_6.z;\n  my_uv_1 = ((uv - (tmpvar_12 * d_2)) - (tmpvar_13 * tmpvar_8));\n  ret_3.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\n  ret_3.x = (ret_3.x + ((\n    (ret_3.x - tmpvar_7.x)\n   * 0.042) + -0.0075));\n  vec2 tmpvar_14;\n  tmpvar_14.x = tmpvar_5.z;\n  tmpvar_14.y = tmpvar_6.z;\n  vec2 tmpvar_15;\n  tmpvar_15.x = tmpvar_5.y;\n  tmpvar_15.y = tmpvar_6.y;\n  my_uv_1 = ((uv - (tmpvar_14 * d_2)) - (tmpvar_15 * tmpvar_8));\n  ret_3.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\n  ret_3.z = (ret_3.z + ((\n    (ret_3.z - tmpvar_7.z)\n   * 0.042) + -0.0075));\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_3;\n  ret = tmpvar_16.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_6;\n  tmpvar_6 = (0.1 / (sqrt(\n    dot (tmpvar_5, tmpvar_5)\n  ) + 0.05));\n  vec2 tmpvar_7;\n  float tmpvar_8;\n  tmpvar_8 = (ang / 3.14);\n  tmpvar_7.x = tmpvar_8;\n  tmpvar_7.y = (tmpvar_6 * 1.5);\n  uv2_3.y = (tmpvar_7.y + (0.1 * time));\n  uv2_3.x = (tmpvar_8 + (0.02 * time));\n  uv3_2.y = (tmpvar_6 + q30);\n  uv3_2.x = (tmpvar_8 + (time / 32.0));\n  crisp_1 = ((texture (sampler_main, fract(uv2_3)).xyz + (2.0 * texture (sampler_main, \n    fract(uv3_2)\n  ).xyz)) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  ret_4 = ((crisp_1 + (\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, fract(uv)).xyz));\n  ret_4 = (1.0 - clamp (pow (\n    (1.0 - ret_4)\n  , ret_4), 0.0, 1.0));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_4;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    float2 d = texsize.zw*4;\n    float3 dx = GetBlur1(frac(uv+float2(1,0)*d))-GetBlur1(frac(uv-float2(1,0)*d));\n    float3 dy = GetBlur1(frac(uv+float2(0,1)*d))-GetBlur1(frac(uv-float2(0,1)*d));\n    float3 b1 = GetBlur1(uv) - 0;\n    d *= -1;\n    float d2 = d*4;\n    float1 c1 = 0.042;\n    float1 c2 = -0.0075;\n\n\n    float2 my_uv = uv - float2(dx.y,dy.y)*d - float2(dx.x,dy.x)*d2;\n    ret.y = tex2D( sampler_fc_main, my_uv-floor(my_uv)).y;\n    ret.y += (ret.y - b1.y)*c1 + c2;\n\n\n    my_uv = uv - float2(dx.x,dy.x)*d - float2(dx.z,dy.z)*d2;\n    ret.x = tex2D( sampler_fc_main, my_uv-floor(my_uv)).x;\n    ret.x += (ret.x - b1.x)*c1 + c2;\n\n\n    my_uv = uv - float2(dx.z,dy.z)*d - float2(dx.y,dy.y)*d2;\n    ret.z = tex2D( sampler_fc_main, my_uv-floor(my_uv)).z;\n    ret.z += (ret.z - b1.z)*c1 + c2;\n//ret = 0;\n\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\nfloat rad2 = length(uv1) + .05;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1*1.5);\nuv2.y = uv2.y  +0.1*time;\nuv2.x = uv2.x  +.02*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1);\nuv3.y = uv3.y  + q30 ;\nuv3.x = uv3.x  + time/32;\n\n\nfloat3 crisp = GetPixel(frac(uv2)) + 2*GetPixel(frac(uv3));\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (1,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\n\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(frac(uv));\n\n//ret *= ret;\nret = pow(1-ret,ret);\nret = 1-saturate(ret);\n\n}"}