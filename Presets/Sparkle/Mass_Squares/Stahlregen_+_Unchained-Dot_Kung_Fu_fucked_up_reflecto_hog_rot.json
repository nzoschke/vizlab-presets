{"version":2,"baseVals":{"rating":5,"decay":0.965,"wrap":0,"invert":1,"wave_a":0.001,"warpanimspeed":5.278,"warpscale":0.01,"zoom":0.90529,"rot":0.02,"warp":0.01,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"num_inst":23,"r":0,"b":1,"g2":0,"b2":0.5,"a2":1,"border_a":1},"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.x=a.q1+.02*Math.floor(rand(15));a.y=a.q2+.02*Math.floor(rand(15));a.rad=.076+.004*Math.floor(rand(11));a.r=.15+.1*Math.sin(1.3*a.time)+.001*Math.floor(rand(10));a.r2=.15+.1*Math.sin(1.3*a.time)+.001*Math.floor(rand(10));a.g=.4+.2*Math.sin(1.2*a.time)+.001*Math.floor(rand(10));a.g2=.4+.2*Math.sin(1.2*a.time)+.001*Math.floor(rand(10));","init_eqs_eel":"","frame_eqs_eel":"x = q1 + int(rand(15))*0.02;\ny = q2 + int(rand(15))*0.02;\nrad = 0.076 + 0.004*int(rand(11));\nr = 0.15+0.1*sin(time*1.3)+int(rand(10))*0.001;\nr2 = 0.15+0.1*sin(time*1.3)+int(rand(10))*0.001;\ng = 0.4+0.2*sin(time*1.2)+int(rand(10))*0.001;\ng2 = 0.4+0.2*sin(time*1.2)+int(rand(10))*0.001;"},{"baseVals":{"enabled":1,"thickoutline":1,"num_inst":23,"rad":0.0999,"r":0,"g2":0,"a2":1,"border_a":1},"init_eqs_str":"a.q2=0;a.q1=0;","frame_eqs_str":"a.x=a.q2+.02*Math.floor(rand(15));a.y=1-a.q1+.02*Math.floor(rand(15));a.rad=.076+.004*Math.floor(rand(11));a.r=.5+.2*Math.sin(1.33*a.time)+.001*Math.floor(rand(10));a.r2=.5+.2*Math.sin(1.33*a.time)+.001*Math.floor(rand(10));a.b=.3+.1*Math.sin(1.43*a.time)+.001*Math.floor(rand(10));a.b2=.3+.1*Math.sin(1.43*a.time)+.001*Math.floor(rand(10));","init_eqs_eel":"","frame_eqs_eel":"x = q2 + int(rand(15))*0.02;\ny = 1-q1 + int(rand(15))*0.02;\nrad = 0.076 + 0.004*int(rand(11));\n\nr = 0.5+0.2 * sin(time*1.33)+int(rand(10))*0.001;\nr2 = 0.5+0.2 * sin(time*1.33)+int(rand(10))*0.001;\nb  = 0.3+0.1*sin(time*1.43)+int(rand(10))*0.001;\nb2  = 0.3+0.1*sin(time*1.43)+int(rand(10))*0.001;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.timer_a=0;a.timer_b=0;a.ripple_x=0;a.ripple_y=0;a.ripple_r=0;a.ripple=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.q1=.01*Math.floor(rand(100));a.q2=.01*Math.floor(rand(100));a.zoom=1+.25*a.bass_att+.05*a.bass;","pixel_eqs_str":"a.timer_a=10*Math.sin(a.time);a.timer_b=10*Math.sin(.5*a.time);a.ripple_x=Math.cos(a.x*a.timer_a-a.timer_b)*a.bass_att;a.ripple_y=Math.cos(a.y*a.timer_a-a.timer_b)*a.treb_att;a.ripple_r=Math.cos(a.rad*a.timer_b-a.timer_a)*a.mid_att;a.ripple=a.ripple_x+a.ripple_y+a.ripple_r;a.zoom+=.1*a.ripple;","init_eqs_eel":"","frame_eqs_eel":"q1 = int(rand(100))*0.01;\nq2 = int(rand(100))*0.01;\n\nzoom = 1 + 0.25*bass_att+0.05*bass;","pixel_eqs_eel":"timer_a=10*sin(time);\ntimer_b=10*sin(time*.5);\nripple_x=cos(x*timer_a-timer_b)*bass_att;\nripple_y=cos(y*timer_a-timer_b)*treb_att;\nripple_r=cos(rad*timer_b-timer_a)*mid_att;\nripple=ripple_x+ripple_y+ripple_r;\nzoom=zoom+ripple*.1;","warp":" shader_body { \n  vec4 len_1;\n  vec3 rsamp_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5.x = q11;\n  tmpvar_5.y = q12;\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  ret_4.xy = texture (sampler_pw_main, (((uv_orig - tmpvar_5) * q5) + tmpvar_5)).xy;\n  ret_4.xy = (((ret_4.xy - tmpvar_5) / q5) + tmpvar_5);\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv_orig + ((\n    (tmpvar_6.xy - 0.5)\n   * 12.0) * texsize.zw));\n  uv2_3 = tmpvar_7;\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_pw_main, fract(tmpvar_7));\n  rsamp_2.z = tmpvar_8.z;\n  rsamp_2.xy = (((tmpvar_8.xy - tmpvar_5) / q5) + tmpvar_5);\n  vec4 tmpvar_9;\n  tmpvar_9.xy = ret_4.xy;\n  tmpvar_9.zw = rsamp_2.xy;\n  vec4 tmpvar_10;\n  tmpvar_10 = (tmpvar_9 - uv_orig.xyxy);\n  len_1 = tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = sqrt(dot (tmpvar_10.xy, tmpvar_10.xy));\n  float tmpvar_12;\n  tmpvar_12 = sqrt(dot (tmpvar_10.zw, tmpvar_10.zw));\n  if ((tmpvar_11 > tmpvar_12)) {\n    ret_4.xy = rsamp_2.xy;\n  };\n  uv2_3 = (uv_orig + ((\n    (tmpvar_6.zw - 0.5)\n   * 48.0) * texsize.zw));\n  rsamp_2 = (texture (sampler_pw_main, fract(uv2_3)).xyz - (roam_sin.wzy * roam_cos.zxy));\n  rsamp_2.xy = (((rsamp_2.xy - tmpvar_5) / q5) + tmpvar_5);\n  len_1.zw = (rsamp_2.xy - uv_orig);\n  float tmpvar_13;\n  tmpvar_13 = sqrt(dot (len_1.zw, len_1.zw));\n  if ((tmpvar_11 > tmpvar_13)) {\n    ret_4.xy = rsamp_2.xy;\n  };\n  ret_4.z = 0.0;\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_4;\n  ret = tmpvar_14.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_3;\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 4.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_6;\n  tmpvar_6 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.0;\n  tmpvar_7.x = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  tmpvar_7.y = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\n    ((uv_1.xyy + (tmpvar_7 * 0.5)) * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\n  vec2 tmpvar_9;\n  tmpvar_9.x = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  tmpvar_9.y = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  uv_1 = (uv_1 - (tmpvar_9 * 0.04));\n  ret_3 = (abs((\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n  )) - (roam_sin.zyx * roam_cos.ywx));\n  ret_3 = (ret_3 * (dot (tmpvar_8, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  vec3 tmpvar_10;\n  tmpvar_10 = pow (ret_3, vec3(0.5, 0.5, 0.5));\n  ret_3 = tmpvar_10;\n  for (int i_2 = 0; i_2 < 16; i_2++) {\n  };\n  vec3 tmpvar_11;\n  tmpvar_11.z = 0.04;\n  vec2 tmpvar_12;\n  tmpvar_12 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_11.x = (texture (sampler_main, (uv_1 + tmpvar_12)).xyz - texture (sampler_main, (uv_1 - tmpvar_12)).xyz).x;\n  vec2 tmpvar_13;\n  tmpvar_13 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_11.y = (texture (sampler_main, (uv_1 + tmpvar_13)).xyz - texture (sampler_main, (uv_1 - tmpvar_13)).xyz).x;\n  vec3 tmpvar_14;\n  tmpvar_14 = normalize(tmpvar_11);\n  vec3 tmpvar_15;\n  tmpvar_15.z = 0.6;\n  tmpvar_15.xy = (fract(uv_1) - 0.5);\n  vec3 tmpvar_16;\n  tmpvar_16.z = 0.6;\n  tmpvar_16.xy = (fract(uv_1) - 0.5);\n  vec3 tmpvar_17;\n  tmpvar_17 = mix (tmpvar_10, mix (tmpvar_10, vec3(1.1, 0.8, 0.5), vec3((\n    ((dot (tmpvar_14, tmpvar_15) * 0.5) + 0.5)\n   * texture (sampler_main, \n    fract(uv_1)\n  ).x))), vec3(q20));\n  ret_3 = (1.0 - mix (tmpvar_17, mix (tmpvar_17, \n    mix (tmpvar_10, vec3(1.1, 0.8, 0.5), vec3((((\n      dot (tmpvar_14, tmpvar_16)\n     * 0.5) + 0.5) * texture (sampler_main, fract(uv_1)).x)))\n  , vec3(\n    (sin(time) * 100.0)\n  )), vec3(q20)));\n  ret_3 = (ret_3 * (treb_att * 0.5));\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = ret_3;\n  ret = tmpvar_18.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\n\nfloat zm = q5;\nfloat2 cen = float2(q11,q12);\nfloat2 uvo = (uv_orig-cen)*zm + cen;\n\nfloat2 uvm = uv_orig;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xy = tex2D( sampler_pw_main,uvo).xy;\nret.xy = (ret.xy-cen)/zm+cen;\n\nfloat2 uv2 = uv_orig  + (noiseVal.xy-.5)*12*pixelsize;\nfloat3 rsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;\n\nrsamp.xy = (rsamp.xy-cen)/zm+cen;\n\nfloat4 len = (float4(ret.xy,rsamp.xy) - uvm.xyxy);\nfloat l1 = length(len.xy);\nif (l1 > length(len.zw)) ret.xy = rsamp.xy;\n\nuv2 = uv_orig  + (noiseVal.zw-.5)*48*pixelsize;\nrsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;\nrsamp-=roam_sin.wzy*roam_cos.zxy;\nrsamp.xy = (rsamp.xy-cen)/zm+cen;\nlen.zw = rsamp.xy - uvm.xy;\nif (l1 > length(len.zw)) ret.xy = rsamp.xy;\n\n//uv2 = uv_orig  + (noiseVal.zw-.5)*6*pixelsize;\n//rsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;\n//len = abs(float4(ret.xy,rsamp.xy) - uvm.xyxy);\n//if (length(len.xy) > length(len.zw)) ret.xy = rsamp.xy;\n\n//float2 uvo = (uv_orig-cen)*zm + cen;\n//if (q5) {\n//ret.xy = tex2D( sampler_pw_main,uvo).xy;\n//}\n\nret.z = 0;\n\n}","comp_hlsl":"float3 reta;\nfloat3 retb;\nfloat3 retc;\n\nshader_body\n{\n\n\n\nuv = 0.5 + (uv-0.5)*0.98;\n    float2 d = texsize.zw*4;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nuv -= float2(lum(dx),lum(dy))*0.04;\nret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));\nret-=roam_sin.zyx*roam_cos.ywx;\nret *= lum(noise)*3; \nret = pow(ret,0.5);\n\n\n\nfloat2 uv2 = uv*0.25;\nfloat3 col = 0;\nfloat2 uv3 = uv2;\nfor(int i = 0; i<16; i++){\n    uv3 += i*float2(0.25,0) - (0==(i)%4)*float2(0,0.25);\n    col = lerp(col,i/16.0,saturate(-GetPixel(uv3).y+tex2d(sampler_pw_main,frac(uv3)).y));\n\n\n}\n\n\nreta = lerp(GetPixel(uv).z*float3(0.6,0.2,1),float3(1,1,1),col*saturate(1-GetBlur1(uv).x*2));\nretb = lerp(GetPixel(uv).z*float3(0.6,0.2,1),float3(1,1,1),col*saturate(1-GetBlur1(uv).x*2));\n    float gx = GetPixel(uv+float2(1,0)*texsize.zw) - GetPixel(uv-float2(1,0)*texsize.zw);\n    float gy = GetPixel(uv+float2(0,1)*texsize.zw) - GetPixel(uv-float2(0,1)*texsize.zw);\n    float3 g = normalize(float3(gx, gy, .04));\n\n    reta = lerp(ret,float3(1.1,0.8,0.5),(dot(g.xyz,float3(frac(uv)-0.5,0.6))*0.5+0.5)*GetPixel(frac(uv)).x);\n    retb = lerp(ret,float3(1.1,0.8,0.5),(dot(g.xyz,float3(frac(uv)-0.5,0.6))*0.5+0.5)*GetPixel(frac(uv)).x);\n\n//retc = lerp(ret,retb,(sin(time)*100));\nret = lerp(ret,reta,q20);\nretc = lerp(ret,retb,(sin(time)*100));\nret = lerp(ret,retc,q20);\n\nret = 1 - ret;\nret *= treb_att * .5;\n}"}