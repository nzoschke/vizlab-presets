{"version":2,"baseVals":{"rating":5,"gammaadj":1.84,"decay":0.5,"echo_zoom":1.105,"echo_alpha":1,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":2.599,"warpscale":0.01,"zoomexp":0.9999,"fshader":1,"zoom":1.01959,"warp":0.01,"sy":1.0017,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.51,"rad":1.52766,"tex_zoom":0.6519,"g":1,"b":0.31,"r2":1,"b2":0.31,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"spectrum":1,"thick":1,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"y=0.89;\nx=sample*0.99;\nvar=(value1+value2)*90;\nr=var/2;\ng=var/2;\nb=var/2+var;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"y=0.89;\nx=sample*0.99;\nvar=(value1+value2)*90;\nr=var/2;\ng=var/2;\nb=var/2+var;"},{"baseVals":{"sep":256,"spectrum":1,"thick":1,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x=0.99;\ny=sample*0.99;\nvar=(value1+value2)*90;\nr=var/2;\ng=var/2;\nb=var/2+var;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=0.99;\ny=sample*0.99;\nvar=(value1+value2)*90;\nr=var/2;\ng=var/2;\nb=var/2+var;"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"smoothing":0,"r":0,"g":0,"b":0},"init_eqs_str":"a[\"var\"]=0;","frame_eqs_str":"","point_eqs_str":"a.x=.01;a.y=.99*a.sample;a[\"var\"]=90*(a.value1+a.value2);a.r=div(a[\"var\"],1.3);a.g=div(a[\"var\"],1.3);a.b=div(a[\"var\"],2)+a[\"var\"];","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=0.01;\ny=sample*0.99;\nvar=(value1+value2)*90;\nr=var/1.3;\ng=var/1.3;\nb=var/2+var;"},{"baseVals":{"sep":256,"spectrum":1,"usedots":1,"thick":1,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"y=0.11;\nx=sample*0.99;\nvar=(value1+value2)*90;\nr=var/2;\ng=var/2;\nb=var/2+var;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"y=0.11;\nx=sample*0.99;\nvar=(value1+value2)*90;\nr=var/2;\ng=var/2;\nb=var/2+var;"}],"init_eqs_str":"a.q4=0;a.q5=0;a.decay=.1;","frame_eqs_str":"a.sx=1;a.sy=1;a.q4=.5+.05*Math.cos(.52*a.time)*Math.cos(.39*a.time);a.q5=.5+.05*Math.sin(.44*a.time)*Math.cos(.71*a.time);","pixel_eqs_str":"a.zoom=a.zoom+.01+.75*a.rad*a.treb_att;","init_eqs_eel":"decay=0.1;","frame_eqs_eel":"sx=1.000;\nsy=1.000;\n\n//dy=0.0058;\n\nq4=.5+.05*cos(time*.52)*cos(time*.39);\nq5=.5+.05*sin(time*.44)*cos(time*.71);","pixel_eqs_eel":"zoom=zoom+.01+.75*rad*treb_att;","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float x_4;\n  x_4 = (tmpvar_3.x * tmpvar_3.y);\n  float tmpvar_5;\n  tmpvar_5 = ((q10 * 24.0) * sqrt((x_4 * x_4)));\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  , vec3(0.32, 0.49, 0.29))));\n  uv_1 = (uv_1 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * normalize(tmpvar_3))\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 200.0));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 6.0)\n   + \n    (rand_frame * 16.0)\n  .xy)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.02))\n   + \n    (0.1 * (vec3((0.1 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * (0.5 * (1.0 + roam_cos)).xyz))\n  ) * 0.99) - 0.025);\n  ret = tmpvar_6.xyz;\n }","comp":"","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\nfloat2 uv6 = uv1;\nfloat z = q10*24*length(((uv1.x)*(uv1.y)));\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-2,2);\nuv += .01*lum(GetBlur1(uv))*float2 (0,1);\nuv -= rs/200;\n\nuv6 = .4*sin(uv*6+rand_frame*16);\nmus = .1/(length(uv6));\nmus *= .5*(1+roam_cos);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.02 + .1*mus;\n\nq25 = 1;\nret = q25*(ret1*.99-.025) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":""}