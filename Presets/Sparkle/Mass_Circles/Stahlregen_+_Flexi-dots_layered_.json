{"version":2,"baseVals":{"rating":5,"wrap":0,"wave_a":0.001,"warpanimspeed":5.278,"warpscale":0.01,"zoomexp":1.47412,"zoom":1.0303,"warp":0.01,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"num_inst":13,"r":0,"g":0.5,"g2":0.5,"a2":1,"border_a":0},"init_eqs_str":"a.trans=0;a.q3=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.trans=.00001<Math.abs(equal(a.q3,3))?1:0;a.a=a.trans;a.a2=a.trans;a.border_a=a.trans;a.x=a.q1+.01*rand(15)*a.bass_att*(.00001<Math.abs(equal(rand(2),1))?1:-1);a.y=a.q2+.01*rand(15)*a.bass_att*(.00001<Math.abs(equal(rand(2),1))?1:-1);a.rad=.09+.002*rand(10);","init_eqs_eel":"","frame_eqs_eel":"trans = if(equal(q3,3),1,0);\na = trans;\na2 = trans;\nborder_a = trans;\n\nx = q1 + rand(15)*0.01*bass_att*if(equal(rand(2),1),1,-1);\ny = q2 + rand(15)*0.01*bass_att*if(equal(rand(2),1),1,-1);\nrad = .09 + .002*rand(10);"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"num_inst":13,"r":0,"b":0.5,"g2":0,"b2":0.5,"a2":1,"border_a":0},"init_eqs_str":"a.trans=0;a.q3=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.trans=.00001<Math.abs(equal(a.q3,6))?1:0;a.a=a.trans;a.a2=a.trans;a.border_a=a.trans;a.x=a.q1+.01*rand(15)*a.mid_att*(.00001<Math.abs(equal(rand(2),1))?1:-1);a.y=a.q2+.01*rand(15)*a.mid_att*(.00001<Math.abs(equal(rand(2),1))?1:-1);a.rad=.09+.002*rand(10);","init_eqs_eel":"","frame_eqs_eel":"trans = if(equal(q3,6),1,0);\na = trans;\na2 = trans;\nborder_a = trans;\n\nx = q1 + rand(15)*0.01*mid_att*if(equal(rand(2),1),1,-1);\ny = q2 + rand(15)*0.01*mid_att*if(equal(rand(2),1),1,-1);\nrad = .09 + .002*rand(10);"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"num_inst":13,"r":0.5,"r2":0.5,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"a.trans=0;a.q3=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.trans=.00001<Math.abs(equal(a.q3,9))?1:0;a.a=a.trans;a.a2=a.trans;a.border_a=a.trans;a.x=a.q1+.01*rand(15)*a.treb_att*(.00001<Math.abs(equal(rand(2),1))?1:-1);a.y=a.q2+.01*rand(15)*a.treb_att*(.00001<Math.abs(equal(rand(2),1))?1:-1);a.rad=.09+.002*rand(10);","init_eqs_eel":"","frame_eqs_eel":"trans = if(equal(q3,9),1,0);\na = trans;\na2 = trans;\nborder_a = trans;\n\nx = q1 + rand(15)*0.01*treb_att*if(equal(rand(2),1),1,-1);\ny = q2 + rand(15)*0.01*treb_att*if(equal(rand(2),1),1,-1);\nrad = .09 + .002*rand(10);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.count=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.count=.00001<Math.abs(below(a.count,9))?a.count+1:0;a.q1=.5;a.q2=.5;a.q3=a.count;a.zoom=1+.065*a.bass_att+.05*a.bass;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"count = if(below(count,9),count+1,0);\n\nq1 = 0.5;\nq2 = 0.5;\nq3 = count;\n\nzoom = 1 + 0.065*bass_att+0.05*bass;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1.x = texture (sampler_main, uv).x;\n  ret_1.y = texture (sampler_main, mix (uv_orig, uv, vec2(0.1, 0.1))).y;\n  ret_1.z = texture (sampler_main, mix (uv_orig, uv, vec2(0.2, 0.2))).z;\n  ret_1 = (ret_1 * 0.9);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":"uniform sampler2D sampler_rand00_smalltiled;\n shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = ((texture (sampler_rand00_smalltiled, fract(\n    ((1.0 - ((\n      (texture (sampler_blur2, uv).xyz * scale2)\n     + bias2).yx * 0.6)) + (time * vec2(0.057, 0.036)))\n  )) * (\n    (1.0 + texture (sampler_main, uv).x)\n   + \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  .y)) * 0.4).xyz;\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 uv1 = lerp(uv_orig,uv,1); //equals uv\nfloat2 uv2 = lerp(uv_orig,uv,0.1); // 20% of uv\nfloat2 uv3 = lerp(uv_orig,uv,0.2); //20% of uv but in the opposite direction\n\nret.x = GetPixel(uv1).x;\nret.y = GetPixel(uv2).y;\nret.z = GetPixel(uv3).z;\n    \n    // darken (decay) over time\n    ret *= 0.9; //or try: ret -= 0.004;\n}","comp_hlsl":"sampler sampler_rand00_smalltiled;\nshader_body\n{\nret = tex2D(sampler_rand00_smalltiled, frac(1-GetBlur2(uv).yx*0.6 + time*float2(0.057,.036)))\n*(1+GetPixel(uv).x + GetBlur1(uv).y)*0.4;\n\n}"}