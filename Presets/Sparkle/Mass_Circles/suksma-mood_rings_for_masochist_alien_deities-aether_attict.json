{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.998,"echo_zoom":1,"wave_mode":6,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.827,"wave_scale":3.878,"wave_smoothing":0.09,"wave_mystery":0.98,"modwavealphastart":1.03,"modwavealphaend":1.27,"zoomexp":1.00815,"zoom":0.9998,"cx":0.47,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.72,"ob_size":0,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":5},"shapes":[{"baseVals":{"enabled":1,"sides":12,"num_inst":92,"x":0.8,"rad":0.03469,"ang":1.5707,"tex_ang":1.25664,"tex_zoom":3.0726,"g":1,"b":1,"g2":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.xang=0;a.ampl=0;a.fov=0;a.t1=0;a.yang=0;a.my=0;a.oz=0;a.k1=0;a.t_rel=0;a.k2=0;a.mz=0;a.oy=0;a.mx=0;a.vol=0;a.zang=0;a.sample=0;a.t_abs=0;a.ox=0;","frame_eqs_str":"a.t1=a.time-Math.floor(a.time);a.sample=div(a.instance,a.num_inst);a.t_abs=3*a.sample;a.t_rel=a.sample-div(a.time,5);a.vol=a.bass+a.mid+a.treb;a.ampl=div(2*a.t_abs,2)*a.vol*.5;a.k1=Math.sin(div(a.time,13));a.k2=Math.sin(div(a.time,12));a.ox=a.ampl*Math.sin(a.t_abs*(31+5*a.k1))+Math.sin(div(a.time,25))*(1-a.t_abs)*.4;a.oy=a.ampl*Math.cos(a.t_abs*(31+5*a.k2));a.oz=-1;a.r=sqr(Math.sin(3.4*a.t_rel));a.g=sqr(Math.sin(a.t_rel));a.b=sqr(Math.cos(1.8*a.t_rel));a.xang=div(a.time,9.5);\na.yang=div(0*a.time,7);a.zang=div(-a.time,22);a.fov=.5;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz-=6;a.x=div(a.ox*a.fov,a.oz)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;","init_eqs_eel":"","frame_eqs_eel":"t1 = time - int (time);\nsample = instance/num_inst;\nt_abs = sample*3;\nt_rel = sample-time/5;\nvol=bass+mid+treb;\nampl = 2*t_abs/2*vol*.5;\n\nk1=sin(time/13);\nk2=sin(time/12);\nox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;\noy = ampl*cos (t_abs*(31+5*k2));\noz = -1  ;\n\n\nr = sqr(sin(t_rel*3.4));\ng = sqr(sin(t_rel));\nb = sqr (cos(t_rel*1.8));\n\n//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;\n\nxang = time/9.5;\nyang = 0*time/7;\nzang = -time/22;\nfov = 0.5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":11,"rad":0.03333,"r":0,"g2":0,"border_a":1},"init_eqs_str":"a.vol=0;","frame_eqs_str":"a.x=.01*Math.floor(rand(100));a.y=.01*Math.floor(rand(100));a.a=.00001<Math.abs(above(mod(a.frame,7),0))?0:1;a.a2=.00001<Math.abs(above(mod(a.frame,7),0))?0:1;a.border_a=0;a.vol=a.bass+a.mid+a.treb;a.rad=.1*a.vol;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01;\ny = int(rand(100))*.01;\n\na = if(above(frame%7,0),0,1);\na2 = if(above(frame%7,0),0,1);\nborder_a = 0;\nvol=bass+mid+treb;\nrad = vol*.1;"},{"baseVals":{"sides":100,"textured":1,"rad":0.03333,"r":0,"g2":0,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = int(rand(100))*.01;\ny = int(rand(100))*.01;\n\na = if(above(frame%7,0),0,1);\na2 = if(above(frame%7,0),0,1);\nborder_a = 0;\nvol=bass+mid+treb;\nrad = vol*.1;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01;\ny = int(rand(100))*.01;\n\na = if(above(frame%7,0),0,1);\na2 = if(above(frame%7,0),0,1);\nborder_a = 0;\nvol=bass+mid+treb;\nrad = vol*.1;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"smoothing":0},"init_eqs_str":"a.sw=0;a.q12=0;a.mo=0;a.q13=0;a.osa=0;a.q31=0;a.q11=0;a.q10=0;a.mod=0;a.q32=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*above(a.sample,0);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value1,2)*sign(a.value1)*.5;a.mod=a.value1;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:a.sample;a.y=a.sample;a.x=.5-.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q10;a.r=a.q12;a.g=a.q13;a.b=a.q11;a.a=1-12*Math.abs(a.mod);a.a=1-a.sw;a.a=Math.max(0,Math.min(a.a,1));a.x=(a.x-.5)*div(a.q31,a.q32)+.5;a.y=(a.y-.5)*div(a.q32,a.q31)+.5;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*above(sample,0);\n\nosa = sample*above(sample,0);\n\nmod = pow(value1*2,2)*sign(value1)*.5;\n\nmod = value1;\nmod = mod*sw;\n\ny = if(sw,osa,sample);\ny = sample;\nx = .5 - mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q10;\n\nr = q12;//.5 + sin(mo)*.5;\ng = q13;//.5 + sin(mo + 1.0472)*.5;\nb = q11;//.5 + sin(mo + 2.0944)*.5;\n\na = 1 - abs(mod)*12;\na = 1-sw;\na = max(0,min(a,1));\n\nx = (x-0.5)*(q31/q32) + 0.5;\ny = (y-0.5)*(q32/q31) + 0.5;"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"smoothing":0},"init_eqs_str":"a.sw=0;a.q12=0;a.mo=0;a.q13=0;a.osa=0;a.q31=0;a.q11=0;a.q10=0;a.mod=0;a.q32=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*below(a.sample,1);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value2,2)*sign(a.value2)*.5;a.mod=a.value2;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:a.sample;a.y=a.sample;a.x=.5+.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q10;a.r=a.q13;a.g=a.q11;a.b=a.q12;a.a=1-12*Math.abs(a.mod);a.a=1-a.sw;a.a=Math.max(0,Math.min(a.a,1));a.x=(a.x-.5)*div(a.q31,a.q32)+.5;a.y=(a.y-.5)*div(a.q32,a.q31)+.5;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*below(sample,1);\n\nosa = sample*above(sample,0);\n\nmod = pow(value2*2,2)*sign(value2)*.5;\n\nmod = value2;\nmod = mod*sw;\n\ny = if(sw,osa,sample);\ny = sample;\nx = .5 + mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q10;\n\nr = q13;//.5 + sin(mo)*.5;\ng = q11;//.5 + sin(mo + 1.0472)*.5;\nb = q12;//.5 + sin(mo + 2.0944)*.5;\n\na = 1 - abs(mod)*12;\na = 1-sw;\na = max(0,min(a,1));\n\nx = (x-0.5)*(q31/q32) + 0.5;\ny = (y-0.5)*(q32/q31) + 0.5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.zoom_fade=0;a.effect_5=0;a.old_treb_flop=0;a.bass_flop=0;a.pulse_timer=0;a.g3=0;a.q1=0;a.treb_flop=0;a.effect_3=0;a.bass_thresh=0;a.g2=0;a.old_bass_flop=0;a.treb_thresh=0;a.pulse=0;a.bass_changed=0;a.y_shift=0;a.mid_thresh=0;a.q4=0;a.mid_changed=0;a.entropy=0;a.x_shift=0;a.old_mid_flop=0;a.effect_6=0;a.chaos=0;a.mid_flop=0;a.r_shift=0;a.q2=0;a.treb_changed=0;a.q3=0;a.g1=0;a.effect_1=0;a.effect_4=0;a.q20=0;a.effect_2=0;","frame_eqs_str":"a.warp=0;a.old_bass_flop=a.bass_flop;a.old_treb_flop=a.treb_flop;a.old_mid_flop=a.mid_flop;a.chaos=bnot(a.pulse)*(.8+.2*Math.sin(a.pulse));a.entropy=.00001<Math.abs(a.chaos)?Math.floor(rand(10)):a.entropy;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*((a.bass_thresh-1.3)*a.chaos+1.3);a.bass_flop=Math.abs(a.bass_flop-equal(a.bass_thresh,2));a.treb_thresh=2*above(a.treb_att,a.treb_thresh)+(1-above(a.treb_att,a.treb_thresh))*((a.treb_thresh-\n1.3)*a.chaos+1.3);a.treb_flop=Math.abs(a.treb_flop-equal(a.treb_thresh,2));a.mid_thresh=2*above(a.mid_att,a.mid_thresh)+(1-above(a.mid_att,a.mid_thresh))*((a.mid_thresh-1.3)*a.chaos+1.3);a.mid_flop=Math.abs(a.mid_flop-equal(a.mid_thresh,2));a.bass_changed=bnot(equal(a.old_bass_flop,a.bass_flop));a.mid_changed=bnot(equal(a.old_mid_flop,a.mid_flop));a.treb_changed=bnot(equal(a.old_treb_flop,a.treb_flop));a.pulse=.00001<Math.abs(above(Math.abs(a.pulse),5E3))?-5E3:a.pulse+a.mid_att*bor(bor(a.bass_changed*\nbnot(a.treb_changed),a.treb_changed*bnot(a.bass_changed))*bnot(a.mid_changed),a.mid_changed);a.pulse_timer=Math.sin(a.pulse);a.effect_1=1+1*a.bass_flop*above(a.pulse_timer,0);a.effect_2=1+2*a.treb_flop*above(a.pulse_timer,0);a.effect_3=1+4*a.bass_flop*below(a.pulse_timer,0);a.effect_4=1+6*a.treb_flop*below(a.pulse_timer,0);a.effect_5=1+10*a.bass_flop*a.mid_flop*above(a.pulse_timer,.5);a.effect_6=1+12*a.treb_flop*a.mid*below(a.pulse_timer,-.5);a.q1=a.effect_1*a.effect_2*a.effect_3*a.effect_4*a.effect_5*\na.effect_6;a.q2=a.time*a.q1*.3*a.entropy;a.q3=a.pulse_timer;a.q4=Math.sin(.002*a.q2);a.wave_r=.00001<Math.abs(a.mid_flop)?a.bass_flop:.5*a.q3*a.q4;a.wave_b=.00001<Math.abs(a.treb_flop)?a.mid_flop:.5*a.q3;a.wave_g=.00001<Math.abs(a.bass_flop)?a.treb_flop:.5*a.q4;a.zoom_fade=.00001<Math.abs(above(a.q3,0))?.00001<Math.abs(above(a.q4,0))?a.zoom_fade-.005*a.mid_att:a.zoom_fade+.005*a.mid_att:1;a.zoom=a.zoom_fade;a.ob_r=.00001<Math.abs(a.mid_flop)?a.wave_g:a.wave_b;a.ob_b=.00001<Math.abs(a.treb_flop)?a.wave_r:\na.wave_g;a.ob_g=.00001<Math.abs(a.bass_flop)?a.wave_b:a.wave_r;a.ob_a=.09+.05*a.q3;a.ob_size=.01+.009*a.q4;a.decay=.982+.01*a.q3*a.q4;a.q20=.3*(a.bass+a.mid+a.treb);","pixel_eqs_str":"a.g1=Math.sin(a.q2+.007*a.time);a.g2=Math.sin(a.q2+.005*a.time);a.g3=Math.sin(a.q2+.003*a.time);a.x_shift=pow(a.x,4*Math.abs(a.g2))+a.x*a.g1+sqr(a.g1);a.y_shift=pow(a.y,4*Math.abs(a.g3))+a.y*a.g2+sqr(a.g2);a.r_shift=pow(a.rad,4*Math.abs(a.g1))+a.rad*a.g3+sqr(a.g3);a.dx=Math.sin(a.x_shift*a.y_shift*a.r_shift)*a.g1*.1;a.dy=.00001<Math.abs(above(a.q4,0))?Math.sin(a.x_shift*a.y_shift*a.r_shift)*a.g3*.1:Math.sin(a.x_shift*a.y_shift*a.r_shift)*a.g2*.1;a.rot=.00001<Math.abs(above(Math.sin(.003*\na.q2),0))?0:a.rot+Math.min(a.q3,a.dx)*a.g3;","init_eqs_eel":"","frame_eqs_eel":"warp=0;\nold_bass_flop=bass_flop;\nold_treb_flop=treb_flop;\nold_mid_flop=mid_flop;\nchaos=bnot(pulse)*(.8+.2*sin(pulse));\nentropy=if(chaos,int(rand(10)),entropy);\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);\nbass_flop=abs(bass_flop-equal(bass_thresh,2));\ntreb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);\ntreb_flop=abs(treb_flop-equal(treb_thresh,2));\nmid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);\nmid_flop=abs(mid_flop-equal(mid_thresh,2));\nbass_changed=bnot(equal(old_bass_flop,bass_flop));\nmid_changed=bnot(equal(old_mid_flop,mid_flop));\ntreb_changed=bnot(equal(old_treb_flop,treb_flop));\npulse=if(above(abs(pulse),5000),-5000,pulse+mid_att*bor(bor(bass_changed*bnot(treb_changed),treb_changed*bnot(bass_changed))*bnot(mid_changed),mid_changed));\npulse_timer=sin(pulse);\neffect_1=1+1*bass_flop*above(pulse_timer,0);\neffect_2=1+2*treb_flop*above(pulse_timer,0);\neffect_3=1+4*bass_flop*below(pulse_timer,0);\neffect_4=1+6*treb_flop*below(pulse_timer,0);\neffect_5=1+10*bass_flop*mid_flop*above(pulse_timer,.5);\neffect_6=1+12*treb_flop*mid*below(pulse_timer,-.5);\nq1=effect_1*effect_2*effect_3*effect_4*effect_5*effect_6;\nq2=time*q1*.3*entropy;\nq3=pulse_timer;\nq4=sin(q2*.002);\nwave_r=if(mid_flop,bass_flop,.5*q3*q4);\nwave_b=if(treb_flop,mid_flop,.5*q3);\nwave_g=if(bass_flop,treb_flop,+.5*q4);\nzoom_fade=if(above(q3,0),if(above(q4,0),zoom_fade-.005*mid_att,zoom_fade+.005*mid_att),1);\nzoom=zoom_fade;\nob_r=if(mid_flop,wave_g,wave_b);\nob_b=if(treb_flop,wave_r,wave_g);\nob_g=if(bass_flop,wave_b,wave_r);\nob_a=.09+.05*q3;\nob_size=.01+.009*q4;\ndecay=.982+.01*q3*q4;\nq20=(bass+mid+treb)*.3;","pixel_eqs_eel":"g1=sin(q2+time*.007);\ng2=sin(q2+time*.005);\ng3=sin(q2+time*.003);\nx_shift=pow(x,4*abs(g2))+x*g1+sqr(g1);\ny_shift=pow(y,4*abs(g3))+y*g2+sqr(g2);\nr_shift=pow(rad,4*abs(g1))+rad*g3+sqr(g3);\ndx=sin(x_shift*y_shift*r_shift)*g1*.1;\ndy=if(above(q4,0),sin(x_shift*y_shift*r_shift)*g3*.1,sin(x_shift*y_shift*r_shift)*g2*.1);\nrot=if(above(sin(q2*.003),0),0,rot+min(q3,dx)*g3);","warp":" shader_body { \n  vec3 rsamp_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_pw_main, uv);\n  ret_2 = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.xy - 0.5)\n   * 12.0) * texsize.zw)));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  rsamp_1 = tmpvar_6;\n  float tmpvar_7;\n  vec2 x_8;\n  x_8 = (tmpvar_4.xy - uv);\n  tmpvar_7 = sqrt(dot (x_8, x_8));\n  float tmpvar_9;\n  vec2 x_10;\n  x_10 = (tmpvar_5.xy - uv);\n  tmpvar_9 = sqrt(dot (x_10, x_10));\n  if ((tmpvar_7 > tmpvar_9)) {\n    ret_2.xy = tmpvar_6.xy;\n  };\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.zw - 0.5)\n   * 48.0) * texsize.zw)));\n  rsamp_1 = tmpvar_11.xyz;\n  float tmpvar_12;\n  vec2 x_13;\n  x_13 = (ret_2.xy - uv);\n  tmpvar_12 = sqrt(dot (x_13, x_13));\n  float tmpvar_14;\n  vec2 x_15;\n  x_15 = (tmpvar_11.xy - uv);\n  tmpvar_14 = sqrt(dot (x_15, x_15));\n  if ((tmpvar_12 > tmpvar_14)) {\n    ret_2.xy = rsamp_1.xy;\n  };\n  ret_2.z = texture (sampler_fw_main, ret_2.xy).z;\n  ret_2.z = (ret_2.z - (q1 * 0.005));\n  if ((ret_2.z < 0.09)) {\n    ret_2 = vec3(0.0, 0.0, 0.0);\n  };\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_2;\n  ret = tmpvar_16.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\n  ret_1 = ((0.8 * (\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\n  ret_1 = (ret_1 + (0.6 * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 - ((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\n  )));\n  ret_1 = (ret_1 + 0.9);\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) - (0.15 * dot (texture (sampler_noise_hq, \n    (uv + (0.01 * time))\n  ), vec4(0.32, 0.49, 0.29, 0.0))));\n  ret_1 = (mix (ret_1, (\n    (0.75 * ret_1)\n   * \n    dot ((((0.6 * \n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\n     + bias1))), vec3(0.32, 0.49, 0.29))\n  ), pow (hue_shader, \n    (q20 * ret_1)\n  )) * 0.8);\n  ret_1 = (ret_1 * ret_1);\n  vec3 tmpvar_9;\n  tmpvar_9 = sqrt(ret_1);\n  ret_1 = tmpvar_9;\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = tmpvar_9;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv;//_orig;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));\nret.xyz = tex2D( sampler_pw_main,uvm).xyz;\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nrsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nret.z = tex2D(sampler_fw_main,ret.xy).z;\n\nret.z -= q1*.005;\n\nif (ret.z < .09) {\nret*=0;\n}\n\n\n}","comp_hlsl":"shader_body\n{\n\n//Code bits by Flexi and Geiss\n\n    float2 d = texsize.zw*8;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\nfloat2 uv_y = uv-.25*(float2(lum(dx),lum(dy)));\nfloat2 uv_y2 = uv+.25*(float2(lum(dx),lum(dy)));\n\n\nret = .8*GetBlur3(uv_y)-GetBlur1(uv_y);\nret += .6*GetBlur1(uv);\nret -= (GetBlur2(uv_y2)-GetBlur1(uv_y2));\nret += 1.2*GetPixel(uv_y2)+.15*GetBlur1(uv_y2);\nret += .9;\nret = lum(ret);\nret -= .15*lum(tex2d(sampler_noise_hq,(uv+.01*time)));\nret = lerp(ret,.75*ret*lum(.6*GetBlur3(uv_y)-.7*GetPixel(uv)-.3*GetBlur1(uv_y2)),pow(hue_shader,q20*ret));\nret *= .8;\nret *= ret;\nret = sqrt(ret);\n\n}"}