{"version":2,"baseVals":{"rating":5,"wrap":0,"wave_a":0.001,"warpanimspeed":5.278,"warpscale":0.01,"zoomexp":1.47412,"fshader":10,"zoom":1.0303,"warp":0.01,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"a2":1,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.a2=a.trans2;a.border_a=a.trans3;a.x=a.q1+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=a.q2+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?\n1:-1)+a.instance-a.instance;a.rad=.09+div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+\na.instance-a.instance;a.border_b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\na2 = trans2;\nborder_a = trans3;\n\nx = q1 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"a2":1,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.a2=a.trans2;a.border_a=a.trans3;a.x=a.q1+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=a.q2+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:\n-1)+a.instance-a.instance;a.rad=.09+div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+\na.instance-a.instance;a.border_b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\na2 = trans2;\nborder_a = trans3;\n\nx = q1 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"num_inst":33,"r":0.5,"r2":0.5,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.a2=a.trans2;a.border_a=a.trans3;a.x=a.q1+.01*Math.floor(rand(15))*a.treb_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=a.q2+.01*Math.floor(rand(15))*a.treb_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?\n1:-1)+a.instance-a.instance;a.rad=.09+div(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+\na.instance-a.instance;a.border_b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\na2 = trans2;\nborder_a = trans3;\n\nx = q1 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = q2 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.count=0;a.q1=0;a.q2=0;a.q3=0;a.q30=0;","frame_eqs_str":"a.count=.00001<Math.abs(below(a.count,9))?a.count+1:0;a.q1=.5;a.q2=.5;a.zoom=1+.065*a.bass_att+.05*a.bass;a.monitor=a.q3;a.q30=a.bass+a.mid+a.treb;a.q3=a.q30;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"count = if(below(count,9),count+1,0);\n\nq1 = 0.5;\nq2 = 0.5;\n\n\nzoom = 1 + 0.065*bass_att+0.05*bass;\nmonitor=q3;\nq30=bass+mid+treb;\nq3 = q30;","pixel_eqs_eel":"","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\n   * 0.03))).xyz - 0.004);\n  ret = tmpvar_1.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec3 xlat_mutableret2;\nvec2 xlat_mutablesam;\n shader_body { \n  vec2 uv_1;\n  xlat_mutablesam = (texture (sampler_main, (uv * 0.5)).xy * ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, (xlat_mutablesam + uv));\n  float tmpvar_3;\n  tmpvar_3 = (0.5 * bass_att);\n  xlat_mutableret1 = ((tmpvar_2.x * (\n    (tmpvar_3 * uv_orig.y)\n   + tmpvar_2.xyz)) + (tmpvar_2.x * texture (sampler_main, uv).xyz));\n  xlat_mutableret1 = (xlat_mutableret1 * ((xlat_mutableret1 + 1.0) / 2.0));\n  uv_1 = (((uv - 0.5) * 0.3) + 0.5);\n  xlat_mutablesam = (texture (sampler_main, (uv_1 * 0.5)).xy * ((\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv_1).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, (xlat_mutablesam + uv_1));\n  xlat_mutableret2 = ((tmpvar_4.x * (\n    (tmpvar_3 * uv_orig.y)\n   + tmpvar_4.xyz)) + (tmpvar_4.x * texture (sampler_main, uv_1).xyz));\n  xlat_mutableret2 = (xlat_mutableret2 * (xlat_mutableret1 + 1.0));\n  vec3 tmpvar_5;\n  tmpvar_5 = max (xlat_mutableret1, xlat_mutableret2);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (tmpvar_5 * (0.5 + (0.5 * \n    dot (tmpvar_5, vec3(0.32, 0.49, 0.29))\n  )));\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\n    // PAINTERLY EFFECT:\n    float2 uv2 = uv;\n    const float mipbias = 0;\n    float2 delta2 = texsize.zw*float2(1,1);\n    float3 blurry_color = tex2D( sampler_main, uv2 + delta2 ).xyz;\n    uv2.xy += (blurry_color.xy-0.37) * 0.03;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv2 ).xyz;\n\n    // darken over time\n    ret -= 0.004;\n}","comp_hlsl":"float3 ret1, ret2, reta;\nfloat2 sam;\nshader_body\n{\n    sam = tex2D(sampler_main,uv*.5);\n    ret1 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret1 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret1;\n    ret1 *= (ret1+1)/2; //gamma\n\nuv = (uv-.5)*.3+.5;\n    sam = tex2D(sampler_main,uv*.5);\n    ret2 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret2 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret2;\n    ret2 *= (ret1+1); //gamma\n\n\n\nret = max(ret1, ret2);\nret *= .5+.5*lum(ret);\n//ret = (1+ret1)*ret2;\n\n}\n\n"}