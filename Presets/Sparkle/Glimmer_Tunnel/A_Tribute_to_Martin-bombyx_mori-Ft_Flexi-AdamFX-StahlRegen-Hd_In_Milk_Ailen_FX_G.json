{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":0.236,"wave_smoothing":0,"wave_mystery":-0.64,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_b":0.6,"ob_size":0.005,"ob_a":0.8,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":18,"num_inst":4,"x":0.83,"rad":0.14349,"tex_ang":3.76991,"tex_zoom":5.27784,"r":0,"g":1,"b":1,"a":0.5,"r2":1,"g2":0.2,"b2":1,"border_b":0,"border_a":0},"init_eqs_str":"a.d=0;a.k1=0;a.q22=0;a.q27=0;a.r0=0;a.q24=0;a.g0=0;a.b0=0;","frame_eqs_str":"a.d=.3+.2*div(mod(a.frame,8),8);a.k1=6.28*div(a.instance,a.num_inst);a.d=.3+div(a.q22,8);a.x=.5+a.d*Math.cos(a.k1);a.y=.5+a.d*Math.sin(a.k1);a.a=Math.min(1,.2+div(.8*a.q22,2)*mod(a.q27,2));a.a2=0;a.r=.6+.4*Math.sin(div(a.time,4)+1.56);a.b=.6+.4*Math.sin(div(a.time,4)+3.14);a.g=.6+.4*Math.sin(div(a.time,4));a.r0=a.r0*bnot(a.q24)+(.5+.5*Math.sin(a.time))*a.q24;a.g0=a.g0*bnot(a.q24)+(.5+.5*Math.sin(1.7*a.time))*a.q24;a.b0=div(2-a.r0-a.g0,2);a.r=a.r0;a.b=a.b0;a.g=a.g0;a.r2=1-a.g;\na.g2=1-a.b;a.b2=1-a.r;","init_eqs_eel":"","frame_eqs_eel":"d = .3+(frame%8)/8*.2;\n//d = .3;\nk1 = instance/num_inst*6.28;\nd = .3 + q22/8 ;\n\nx = .5 + d*cos(k1);\ny = .5 + d*sin(k1);\n\na = min(1, .2+ .8*q22/2*((q27)%2));\na2 = 0;\nr = .6 + .4*sin(time/4+1.56);\nb = .6 + .4*sin(time/4+3.14);\ng = .6 + .4*sin(time/4);\n\nr0 = r0 * bnot(q24) + (.5+.5*sin(time))*q24;\ng0 = g0 * bnot(q24) + (.5+.5*sin(time*1.7))*q24;\nb0 = (2-r0-g0)/2;\n\nr = r0;\nb = b0;\ng = g0;\n\nr2 = 1-g;\ng2 = 1-b;\nb2 = 1-r;"},{"baseVals":{"sides":32,"num_inst":4,"rad":0.16218,"tex_zoom":1.8315,"g":1,"b":1,"a":0.9,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a = q24/2; a2 = 0;\na = min(1, .2+ .8*q22/2*((q27)%2));\n\nr = int(rand(10))/10;\ng = int(rand(10))/10;\nb = int(rand(10))/10;\n\nrad = .06*q22;\n\n\n\n\nd = .3+(frame%8)/8*.2;\nd = .3 + q22/12;\n\nx = .5 + d*cos(6.28*instance/num_inst);\ny = .5 + d*sin(6.28*instance/num_inst);\na = min(1, .2+ .8*q22/2*((q27)%2));\nb = 1; g = 1; ","init_eqs_eel":"","frame_eqs_eel":"a = q24/2; a2 = 0;\na = min(1, .2+ .8*q22/2*((q27)%2));\n\nr = int(rand(10))/10;\ng = int(rand(10))/10;\nb = int(rand(10))/10;\n\nrad = .06*q22;\n\n\n\n\nd = .3+(frame%8)/8*.2;\nd = .3 + q22/12;\n\nx = .5 + d*cos(6.28*instance/num_inst);\ny = .5 + d*sin(6.28*instance/num_inst);\na = min(1, .2+ .8*q22/2*((q27)%2));\nb = 1; g = 1; "},{"baseVals":{"sides":63,"textured":1,"rad":8.85459,"tex_zoom":0.03204,"g":1,"b":1,"a":0.4,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"x":0.4,"rad":0.14741,"tex_zoom":1.59918,"g":0.4,"r2":1,"g2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a = q24*.3;","init_eqs_eel":"","frame_eqs_eel":"a = q24*.3;"}],"waves":[{"baseVals":{"enabled":1,"samples":128,"scaling":0.89152,"smoothing":0},"init_eqs_str":"a.q22=0;a.q27=0;a.q24=0;a.t1=0;a.t2=0;a.r0=0;a.g0=0;","frame_eqs_str":"a.t1=a.t1*bnot(a.q24)+(.5+.5*Math.sin(a.time))*a.q24;a.t2=a.t2*bnot(a.q24)+(.5+.5*Math.sin(1.7*a.time))*a.q24;","point_eqs_str":"a.x=a.sample;a.y=.5;a.a=a.q22*mod(a.q27+1,2);a.a=div(a.q24*mod(a.q27+1,2),2)+0;a.r=a.t1;a.b=a.t2;a.g=div(2-a.r0-a.g0,2);","init_eqs_eel":"","frame_eqs_eel":"t1 = t1 * bnot(q24) + (.5+.5*sin(time))*q24;\nt2 = t2 * bnot(q24) + (.5+.5*sin(time*1.7))*q24;","point_eqs_eel":"x = sample ;\ny = .5;\n\na = q22*((q27+1)%2);\n//a = 1;\na = q24*((q27+1)%2)/2+.0;\n\nr = t1; b = t2; g = (2-r0-g0)/2;\n;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.index2=0;a.speed_=0;a.index=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.movz=0;a.trel=0;a.q9=0;a.rott=0;a.spg=0;a.vol__=0;a.is_beat=0;a.q31=0;a.k1=0;a.q24=0;a.vx=0;a.dec_slow=0;a.vy=0;a.vz=0;a.q4=0;a.dir=0;a.p2=0;a.avg=0;a.trig=0;a.beat=0;a.q17=0;a.vol=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.speed=0;a.q3=0;a.t0=0;a.vol_=0;a.q7=0;a.q28=0;a.q30=0;a.q20=0;a.q8=0;a.ang0=0;a.speed_=1;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.96,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.2+a.avg+a.peak)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,12);a.index2=mod(a.index2+a.is_beat*bnot(a.index),8);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q24=a.is_beat;a.vol=div(a.bass_att+a.mid_att+\na.treb_att,2);a.vol_=a.dec_med*a.vol_+(1-a.dec_med)*a.vol;a.vol__=a.dec_med*a.vol__+(1-a.dec_med)*a.vol_;a.q27=a.index+1;a.q28=a.index2+2;a.k1=a.is_beat*equal(mod(a.index,4),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.trig=a.q24*bnot(mod(a.index,8));a.vx=a.vx*bnot(a.trig)+a.trig*(div(Math.floor(rand(100)),100)-.5);a.vy=a.vy*bnot(a.trig)+a.trig*(div(Math.floor(rand(100)),100)-\n.5);a.vz=a.vz*bnot(a.trig)+a.trig*(div(Math.floor(rand(100)),100)-.5);a.speed=Math.min(a.vol_-a.vol__+.5,1);a.speed=Math.max(a.speed,-.5);a.speed_=bnot(a.trig)*a.speed_+a.trig*a.speed;a.spg=a.dec_med*a.spg+(1-a.dec_med)*a.speed_;a.movz+=div(1,a.fps)*(a.speed_+div(0*a.vol_,6));a.q9=a.movz;a.q12=2*Math.min(a.q22,6);a.q13=2*Math.sin(div(a.movz,3)-div(a.time,11));a.trig=bnot(mod(a.index,4))*a.q24;a.dir=bnot(a.trig)*a.dir+a.trig*(Math.floor(rand(10))-5);a.trel+=div(.1,a.fps)*a.dir;a.q5=Math.cos(a.trel-\na.movz);a.q6=Math.sin(div(a.trel,2)-a.movz);a.q7=-a.q6;a.q8=a.q5;a.ang0=a.ang0*a.dec_med+a.vz*(1-a.dec_med);a.q17=2*a.ang0;a.q30=.2*Math.sin(div(a.time,8));a.q31=.5+.5*Math.sin(div(a.time,3.3));a.zoom=1;a.rot=0;a.dx=0;a.monitor=a.q28;","pixel_eqs_str":"","init_eqs_eel":"speed_=1;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.96, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, 0.2+avg+peak) * above (time, t0+.1);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %12;\nindex2 = (index2 + is_beat*bnot(index))%8;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq24 = is_beat;\nvol = (bass_att + mid_att + treb_att)/2;\nvol_ = dec_med * vol_ + (1-dec_med)* vol;\nvol__ = dec_med * vol__ + (1-dec_med)* vol_;\nq27 = index + 1;\nq28 = index2 + 2;\n\nk1 =  is_beat*equal(index%4,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\ntrig = q24 * bnot(index%8);\nvx = vx*bnot(trig) + trig* (int(rand(100))/100-.5);\nvy = vy*bnot(trig) + trig* (int(rand(100))/100-.5);\nvz = vz*bnot(trig) + trig* (int(rand(100))/100-.5);\n\nspeed = min(vol_-vol__+.5,1);\nspeed = max(speed,-.5);\nspeed_ = bnot(trig)*speed_ + trig*speed;\nspg = dec_med*spg + (1-dec_med)*speed_;\nmovz = movz + 1/fps*(speed_+0*vol_/6);\nq9 = movz;\nq12 = min(q22,6)*2;\n\n//puls = puls*dec_med + (1-dec_med)*q22;\n\nq13 = 2* sin(movz/3-time/11);\n\ntrig = bnot(index%4) * q24;\ndir = bnot(trig)*dir + trig*(int(rand(10))-5);\ntrel = trel + .1/fps*dir;\nq5 = cos(trel-movz);\nq6 = sin(trel/2-movz);\nq7 = -q6;\nq8 = q5;\n\nang0 = ang0*dec_med + vz*(1-dec_med);\nq17 = ang0*2; \nq30 = .2*sin(time/8);\n\nq31 = .5 + .5*sin(time/3.3);\n\nzoom = 1;\nrot = .0;\ndx = .00;\nmonitor = q28;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float x_4;\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\n  float tmpvar_5;\n  tmpvar_5 = (q31 * sqrt((x_4 * x_4)));\n  vec2 tmpvar_6;\n  tmpvar_6 = normalize(tmpvar_3);\n  uv_1 = (uv + ((0.1 * \n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_6));\n  uv_1 = (uv_1 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 14.0)\n   + rand_frame.xy)));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((texture (sampler_main, \n    (((uv_1 - 0.5) * (0.95 + (\n      (0.1 * q28)\n     * tmpvar_5))) + 0.5)\n  ).xyz + \n    (vec3((0.01 / sqrt(dot (uv6_2, uv6_2)))) * (0.3 * (1.0 + roam_cos)).xyz)\n  ) * 0.99) - 0.025);\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = tmpvar_5;\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\n  uv2_3.x = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (tmpvar_5 * 1.5);\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\nfloat2 uv6 = uv1;\nfloat z = q31*length((abs(uv1.x)-abs(uv1.y)));\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-2,2);\nuv += .1*lum(GetBlur1(uv))*d;\nuv -= rs/(20+0*q27);\n\nuv6 = .4*sin(uv*14+rand_frame);\nmus = .01/(length(uv6));\nmus *= .3*(1+roam_cos);\n//mus = .2;\n\nfloat3 crisp= tex2D(sampler_main,(uv-.5)*(.95+.1*q28*z)+.5);\n\nfloat3 ret1 = crisp + mus;\n\nq25 = 1;\nret = q25*(ret1*.99-.025) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\n//float ang1 = atan2(uv1.y, uv1.x);\n//float rad1 = log(length(uv1)-0.1);\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1);\nuv2.y = uv2.y  +0.1*time;\nuv2.x = uv2.x  +.0*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1*1.5);\nuv3.y = uv3.y  +0.08*time ;\nuv3.x = uv3.x  + time/32;\n\nfloat3 crisp = 2*GetPixel(uv2) + GetPixel(uv3);\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\n\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(uv);\n\n}"}