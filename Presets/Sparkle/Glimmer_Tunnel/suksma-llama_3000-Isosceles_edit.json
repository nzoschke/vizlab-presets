{"version":2,"baseVals":{"rating":5,"echo_zoom":1.01,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":13.29089,"dx":-0.28,"dy":-0.32,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0.015,"ib_r":0.01,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":196,"spectrum":1,"usedots":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"v=below(v,196)*v;\nxp=if(equal(v,0),0,xp);\nyp=if(equal(v,0),0,yp);\n\nv=v+1;\nxp=xp+1;\nyp=if(equal(xp,13),yp+1,yp);\n\nxp=below(xp,13)*xp;\nyp=below(yp,15)*yp;\nw=0;w=equal(v,0)+w;w=equal(v,2)+w;w=equal(v,3)+w;w=equal(v,4)+w;w=equal(v,5)+w;w=equal(v,6)+w;w=equal(v,7)+w;w=equal(v,8)+w;w=equal(v,9)+w;w=equal(v,10)+w;w=equal(v,11)+w;w=equal(v,12)+w;w=equal(v,13)+w;w=equal(v,17)+w;w=equal(v,18)+w;w=equal(v,19)+w;w=equal(v,20)+w;w=equal(v,21)+w;w=equal(v,22)+w;w=equal(v,23)+w;w=equal(v,24)+w;w=equal(v,25)+w;w=equal(v,30)+w;w=equal(v,31)+w;w=equal(v,32)+w;w=equal(v,33)+w;w=equal(v,34)+w;w=equal(v,35)+w;w=equal(v,36)+w;w=equal(v,37)+w;w=equal(v,38)+w;w=equal(v,43)+w;w=equal(v,44)+w;w=equal(v,45)+w;w=equal(v,46)+w;w=equal(v,47)+w;w=equal(v,48)+w;w=equal(v,49)+w;w=equal(v,50)+w;w=equal(v,51)+w;w=equal(v,52)+w;w=equal(v,56)+w;w=equal(v,57)+w;w=equal(v,58)+w;w=equal(v,59)+w;w=equal(v,60)+w;w=equal(v,61)+w;w=equal(v,62)+w;w=equal(v,63)+w;w=equal(v,64)+w;w=equal(v,65)+w;w=equal(v,78)+w;w=equal(v,91)+w;w=equal(v,104)+w;w=equal(v,116)+w;w=equal(v,117)+w;w=equal(v,129)+w;w=equal(v,130)+w;w=equal(v,131)+w;w=equal(v,132)+w;w=equal(v,142)+w;w=equal(v,143)+w;w=equal(v,144)+w;w=equal(v,145)+w;w=equal(v,151)+w;w=equal(v,155)+w;w=equal(v,156)+w;w=equal(v,157)+w;w=equal(v,158)+w;w=equal(v,159)+w;w=equal(v,162)+w;w=equal(v,163)+w;w=equal(v,164)+w;w=equal(v,168)+w;w=equal(v,169)+w;w=equal(v,170)+w;w=equal(v,171)+w;w=equal(v,172)+w;w=equal(v,175)+w;w=equal(v,176)+w;w=equal(v,177)+w;w=equal(v,180)+w;w=equal(v,181)+w;w=equal(v,182)+w;w=equal(v,183)+w;w=equal(v,184)+w;w=equal(v,185)+w;w=equal(v,188)+w;w=equal(v,189)+w;w=equal(v,192)+w;w=equal(v,193)+w;w=equal(v,194)+w;\n\n//sz=sin(time*.2)*.03+.031;\nsz=.01;\nxx=.45;\nyy=.45;\n\nx=xp*sz+xx;\ny=1-(yp*sz)-yy;\n\nr=1-w;\ng=1-w;\nb=1-w;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"v=below(v,196)*v;\nxp=if(equal(v,0),0,xp);\nyp=if(equal(v,0),0,yp);\n\nv=v+1;\nxp=xp+1;\nyp=if(equal(xp,13),yp+1,yp);\n\nxp=below(xp,13)*xp;\nyp=below(yp,15)*yp;\nw=0;w=equal(v,0)+w;w=equal(v,2)+w;w=equal(v,3)+w;w=equal(v,4)+w;w=equal(v,5)+w;w=equal(v,6)+w;w=equal(v,7)+w;w=equal(v,8)+w;w=equal(v,9)+w;w=equal(v,10)+w;w=equal(v,11)+w;w=equal(v,12)+w;w=equal(v,13)+w;w=equal(v,17)+w;w=equal(v,18)+w;w=equal(v,19)+w;w=equal(v,20)+w;w=equal(v,21)+w;w=equal(v,22)+w;w=equal(v,23)+w;w=equal(v,24)+w;w=equal(v,25)+w;w=equal(v,30)+w;w=equal(v,31)+w;w=equal(v,32)+w;w=equal(v,33)+w;w=equal(v,34)+w;w=equal(v,35)+w;w=equal(v,36)+w;w=equal(v,37)+w;w=equal(v,38)+w;w=equal(v,43)+w;w=equal(v,44)+w;w=equal(v,45)+w;w=equal(v,46)+w;w=equal(v,47)+w;w=equal(v,48)+w;w=equal(v,49)+w;w=equal(v,50)+w;w=equal(v,51)+w;w=equal(v,52)+w;w=equal(v,56)+w;w=equal(v,57)+w;w=equal(v,58)+w;w=equal(v,59)+w;w=equal(v,60)+w;w=equal(v,61)+w;w=equal(v,62)+w;w=equal(v,63)+w;w=equal(v,64)+w;w=equal(v,65)+w;w=equal(v,78)+w;w=equal(v,91)+w;w=equal(v,104)+w;w=equal(v,116)+w;w=equal(v,117)+w;w=equal(v,129)+w;w=equal(v,130)+w;w=equal(v,131)+w;w=equal(v,132)+w;w=equal(v,142)+w;w=equal(v,143)+w;w=equal(v,144)+w;w=equal(v,145)+w;w=equal(v,151)+w;w=equal(v,155)+w;w=equal(v,156)+w;w=equal(v,157)+w;w=equal(v,158)+w;w=equal(v,159)+w;w=equal(v,162)+w;w=equal(v,163)+w;w=equal(v,164)+w;w=equal(v,168)+w;w=equal(v,169)+w;w=equal(v,170)+w;w=equal(v,171)+w;w=equal(v,172)+w;w=equal(v,175)+w;w=equal(v,176)+w;w=equal(v,177)+w;w=equal(v,180)+w;w=equal(v,181)+w;w=equal(v,182)+w;w=equal(v,183)+w;w=equal(v,184)+w;w=equal(v,185)+w;w=equal(v,188)+w;w=equal(v,189)+w;w=equal(v,192)+w;w=equal(v,193)+w;w=equal(v,194)+w;\n\n//sz=sin(time*.2)*.03+.031;\nsz=.01;\nxx=.45;\nyy=.45;\n\nx=xp*sz+xx;\ny=1-(yp*sz)-yy;\n\nr=1-w;\ng=1-w;\nb=1-w;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.rd=0;a.q4=0;a.q5=0;a.vol=0;a.musictime=0;a.zoom=1;a.xpos=0;a.ypos=0;","frame_eqs_str":"a.decay=1;a.vol=.55*(a.bass+a.mid+a.treb);a.vol=a.vol;a.mv_r=.5+.4*Math.sin(1.324*a.time);a.mv_g=.5+.4*Math.cos(1.371*a.time);a.zoom=.9;a.musictime+=a.vol;a.q4=.5;a.q5=.5;a.monitor=a.rot;","pixel_eqs_str":"a.rd=sqrt(sqr(1.7*(a.x-.5-a.q4))+sqr(1.2*(a.y-.5+a.q5)));a.cx=.5+a.q4;a.cy=.5-a.q5;a.zoom=div(a.rd,a.rd);a.rot=div(a.rd,a.rd)+Math.sin(div(a.time,5));","init_eqs_eel":"zoom=1;\nxpos=0;\nypos=0;","frame_eqs_eel":"decay=1;\n\nvol= (bass+mid+treb)*0.55;\nvol=vol;\n\n\nmv_r = 0.5 + 0.4*sin(time*1.324);\nmv_g = 0.5 + 0.4*cos(time*1.371);\n\n\n\n\nzoom=.9;\n\nmusictime=musictime+vol;\nq4=0.5;\nq5=0.5;\n\n//dx=sin(musictime*0.1)*0.07;\n//dy=cos(musictime*0.069)*0.07;\n\n\n\n\nmonitor=rot;","pixel_eqs_eel":"rd=sqrt( sqr( (x-0.5-q4)*1.7) + sqr( (y-0.5+q5)*1.2 ) );\ncx=0.5+q4;\ncy=0.5-q5;\n\nzoom=(rd/rd);\nrot=(rd/rd)+sin(time/5);","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + ((0.004 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ).xy * vec2(0.0, 1.0)));\n  uv6_2 = (0.4 * sin((\n    (((uv - 0.5) * aspect.xy) * 18.0)\n   * rand_frame.xy)));\n  vec3 tmpvar_3;\n  tmpvar_3.x = (treb * 0.5);\n  tmpvar_3.y = (bass * 0.5);\n  tmpvar_3.z = (mid * 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.15 * (vec3((0.051 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * tmpvar_3))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = tmpvar_5;\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\n  uv2_3.x = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (tmpvar_5 * 1.5);\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;\n\n\nuv6 = .4*sin(uv1*18*rand_frame);\nmus = .051/(length(uv6));\nmus *= float3 (treb*.5,bass*.5,mid*.5);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .15*mus;\nfloat2 uv2 = (uv_orig-.5)-float3(bass*.1,treb*.1+0.1*q25,mid*.1);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\n//float ang1 = atan2(uv1.y, uv1.x);\n//float rad1 = log(length(uv1)-0.1);\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1);\nuv2.y = uv2.y  +0.1*time;\nuv2.x = uv2.x  +.0*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1*1.5);\nuv3.y = uv3.y  +0.08*time ;\nuv3.x = uv3.x  + time/32;\n\nfloat3 crisp = 2*GetPixel(uv2) + GetPixel(uv3);\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\n\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(uv);\n\n}"}