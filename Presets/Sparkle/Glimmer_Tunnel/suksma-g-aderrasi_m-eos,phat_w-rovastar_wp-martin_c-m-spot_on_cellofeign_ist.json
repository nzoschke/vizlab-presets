{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.989,"echo_zoom":1,"echo_alpha":0.5,"wrap":0,"wave_a":28.249,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":0.05,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":1.024,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xpos=0;a.q1=0;a[\"var\"]=0;a.q5=0;a.musictime=0;a.q4=0;a.ypos=0;a.zm=0;a.rd=0;a.b=0;a.r=0;a.g=0;a.q2=0;a.q3=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;a[\"var\"]=0;","frame_eqs_str":"a[\"var\"]+=.01;a.decay=Math.min(a[\"var\"],.9999);a.zoom=-1;a.cx=.5;a.r=.2*Math.tan(.3*a.time);a.r=Math.min(a.r,1);a.r=Math.max(a.r,0);a.g=.2*Math.tan(.3*a.time+2.1);a.g=Math.min(a.g,1);a.g=Math.max(a.g,0);a.b=.2*Math.tan(.3*a.time+4.2);a.b=Math.min(a.b,1);a.b=Math.max(a.b,0);a.q1=a.r;a.q2=a.g;a.q3=a.b;a.musictime+=a.mid*a.mid*a.mid*.01;a.xpos=.01*Math.sin(.6*a.musictime);a.ypos=.01*Math.sin(.4*a.musictime);a.q4=a.xpos;a.q5=a.ypos;","pixel_eqs_str":"a.dx=Math.sin(6.28*a.y+.1*a.time)+Math.sin(6.28*a.y*5+.14*a.time)+Math.sin(81.64*a.y+.2*a.time);a.dx*=.01;a.dy=Math.sin(4.28*a.x+.1*a.time)+Math.sin(25.12*a.x+.14*a.time)+Math.sin(56.52*a.x+.2*a.time);a.dy*=.01;a.cx=.5+a.q4;a.cy=.5-a.q5;a.rd=sqrt(sqr(2*(a.x-.5-a.q4))+sqr(1.5*(a.y-.5+a.q5)));a.zm=1.1-div(a.rd,4);a.sx=a.zm;a.sy=a.zm;a.rot=above(a.rd,.7)*(a.rd-.7)*Math.sin(.3*a.time);a.zoom=.9;","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0;\n\nvar=0;","frame_eqs_eel":"var=var+.01;\n\ndecay=min(var,.9999);\nzoom=-1.000;\ncx=0.5;\n\nr=tan(time*0.3 + 0.0)*0.2;\nr=min(r,1);\nr=max(r,0);\ng=tan(time*0.3 + 2.1)*0.2;\ng=min(g,1);\ng=max(g,0);\nb=tan(time*0.3 + 4.2)*0.2;\nb=min(b,1);\nb=max(b,0);\nq1=r;q2=g;q3=b;\n\n\n\nmusictime=musictime+(mid*mid*mid)*0.01;\n\nxpos=sin(musictime*0.6)*0.01;\nypos=sin(musictime*0.4)*0.01;\nq4=xpos;\nq5=ypos","pixel_eqs_eel":"dx=sin(y*6.28+time*0.1)+sin(y*6.28*5+time*0.14)+sin(y*6.28*13+time*0.2);\ndx=dx*0.01;\n\ndy=sin(x*4.28+time*0.1)+sin(x*6.28*4+time*0.14)+sin(x*6.28*09+time*0.2);\ndy=dy*0.01;\n\ncx=0.5+q4;\ncy=0.5-q5;\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\nzm=(1.1-(rd/4));\nsx=zm;\nsy=zm;\nrot=above(rd,0.7)*(rd-0.7)*sin(time*0.3);\nzoom=.9","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + ((0.004 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ).xy * vec2(0.0, 1.0)));\n  uv6_2 = (0.4 * sin((\n    (((uv - 0.5) * aspect.xy) * 18.0)\n   * rand_frame.xy)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (vec3((0.051 / sqrt(dot (uv6_2, uv6_2)))) * vec3(0.15, 0.12, 0.075))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = tmpvar_5;\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\n  uv2_3.x = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (tmpvar_5 * 1.5);\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;\n\n\nuv6 = .4*sin(uv1*18*rand_frame);\nmus = .051/(length(uv6));\nmus *= float3 (1,.8,.5);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .15*mus;\nfloat2 uv2 = (uv_orig-.5)-float2(.5,.5+0.1*q25);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\n//float ang1 = atan2(uv1.y, uv1.x);\n//float rad1 = log(length(uv1)-0.1);\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1);\nuv2.y = uv2.y  +0.1*time;\nuv2.x = uv2.x  +.0*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1*1.5);\nuv3.y = uv3.y  +0.08*time ;\nuv3.x = uv3.x  + time/32;\n\nfloat3 crisp = 2*GetPixel(uv2) + GetPixel(uv3);\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\n\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(uv);\n\n}"}