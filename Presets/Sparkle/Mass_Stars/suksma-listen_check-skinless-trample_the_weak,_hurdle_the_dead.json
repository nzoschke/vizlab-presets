{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.96,"echo_zoom":1.645,"echo_alpha":1,"echo_orient":3,"wave_mode":3,"additivewave":1,"wave_thick":1,"wave_a":0.001,"wave_scale":0.625,"wave_smoothing":0.9,"modwavealphastart":0.88,"modwavealphaend":1.98,"warpanimspeed":1.22,"warpscale":7.98,"fshader":1,"zoom":0.06855,"cx":0.53,"dx":1,"warp":6.16591,"sx":100,"sy":79.68974,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":0.2,"ob_g":0.8,"ob_b":0.8,"ib_size":0,"ib_r":0,"ib_g":1,"ib_b":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_r":0.39,"mv_g":0.44,"mv_b":0.9,"mv_a":0},"shapes":[{"baseVals":{"sides":16,"thickoutline":1,"textured":1,"rad":0.97235,"ang":0.1884,"tex_ang":0.62832,"tex_zoom":0.77829,"g":1,"b":1,"a":0.9,"r2":1,"b2":1,"a2":0.5,"border_r":0.59,"border_g":0.81,"border_b":0.69,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//DMT=1-below((bass_att+mid_att+treb_att)/3,0.7);\n//a=DMT;\n//a2=.5*DMT;\n//border_a=0.4*DMT;\n//atime=atime+(above( sin(time),0 )*0.02 );\n//ang=0.188+((sin(atime/5)*0.5+0.5)*2.39);\n//x=(sin(atime*0.3)*0.07)+0.5;\n//y=(cos(atime*0.1)*0.07)+0.5;\n//rad=((bass+mid+treb)/6)*1.4+0.2;\n//sides=bass*16","init_eqs_eel":"","frame_eqs_eel":"//DMT=1-below((bass_att+mid_att+treb_att)/3,0.7);\n//a=DMT;\n//a2=.5*DMT;\n//border_a=0.4*DMT;\n//atime=atime+(above( sin(time),0 )*0.02 );\n//ang=0.188+((sin(atime/5)*0.5+0.5)*2.39);\n//x=(sin(atime*0.3)*0.07)+0.5;\n//y=(cos(atime*0.1)*0.07)+0.5;\n//rad=((bass+mid+treb)/6)*1.4+0.2;\n//sides=bass*16"},{"baseVals":{"enabled":1,"sides":5,"thickoutline":1,"rad":0.4149,"tex_ang":0.25133,"tex_zoom":1.136,"r":0.36,"g2":0,"b2":0.2,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.adv=0;","frame_eqs_str":"a.adv+=div(a.bass*a.bass,15);a.r=.05*Math.floor(rand(10))+.5;a.g=a.r;a.b=a.r;a.x=.005*Math.floor(rand(100))+.25;a.y=.005*Math.floor(rand(100))+.25;a.rad=.004*Math.floor(rand(100))+.1;a.ang=a.rad;","init_eqs_eel":"","frame_eqs_eel":"\nadv=adv+(bass*bass)/15;\n\nr=int(rand(10))*0.1*0.5+0.5;\ng=r;\nb=r;\n\nx=int(rand(100))*0.01*0.5 + 0.25;\ny=int(rand(100))*0.01*0.5 + 0.25;\nrad=int(rand(100))*0.01*0.4+0.1;\nang=rad"},{"baseVals":{"sides":24,"textured":1,"x":0.2,"y":0.8,"rad":0.59958,"tex_ang":1.25664,"tex_zoom":0.49831,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"x":0.86,"y":0.2,"rad":0.80814,"tex_zoom":0.45112,"g":1,"b":1,"r2":1,"b2":0.9,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":256,"usedots":1,"additive":1,"scaling":100,"smoothing":0.9,"r":0,"g":0.7},"init_eqs_str":"a.s=0;a.xp=0;a.yp=0;a.zp=0;a.t1=0;a.x_screen=0;a.y_screen=0;a.advance=0;","frame_eqs_str":"a.advance+=.012;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(24.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(47.4*a.s)+Math.cos(27.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.r=1;a.g=.9;a.b=1;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.012;\nadvance=if( above(advance,2) , 0, advance);\n\nt1=advance\n","point_eqs_eel":"\ns=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;g=0.9;b=1.0"},{"baseVals":{"enabled":1,"samples":42,"usedots":1,"additive":1,"scaling":81.95444,"smoothing":1},"init_eqs_str":"a.s=0;a.xp=0;a.yp=0;a.zp=0;a.t1=0;a.x_screen=0;a.y_screen=0;a.advance=0;","frame_eqs_str":"a.advance+=.012;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.cos(24.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(1.24*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(3.24*a.s)+Math.cos(47.4*a.s)+Math.cos(27.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.r=1;a.g=.9;a.b=1;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.012;\nadvance=if( above(advance,2) , 0, advance);\n\nt1=advance","point_eqs_eel":"\ns=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+cos(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*1.24)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*3.24)+cos(s*47.4)+cos(s*27.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;g=0.9;b=1.0"},{"baseVals":{"enabled":1,"samples":42,"usedots":1,"thick":1,"additive":1,"a":0.36},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.001*Math.floor(rand(1E3));a.y=.001*Math.floor(rand(1E3));a.r=.9;a.g=1;a.b=1;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=int(rand(1000))*0.001;\ny=int(rand(1000))*0.001;\nr=0.9;g=1;b=1"},{"baseVals":{"enabled":1,"samples":192,"usedots":1,"additive":1,"a":0.32},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.001*Math.floor(rand(1E3));a.y=.001*Math.floor(rand(1E3));a.r=1;a.g=1;a.b=.9;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=int(rand(1000))*0.001;\ny=int(rand(1000))*0.001;\nr=1.0;g=1;b=0.9"}],"init_eqs_str":"a.aaa=0;","frame_eqs_str":"a.aaa=a.bass_att-.72;a.zoom+=.05*Math.sin(.3*a.time);a.mv_a+=.012*Math.sin(1.33*a.time);a.wave_r=a.mv_r;a.wave_g=a.mv_g;a.wave_b=a.mv_b;a.rot=.5+.33*Math.sin(a.time)+Math.cos(.22*(a.time+655));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"aaa=bass_att-0.72;\n\n\nzoom=zoom+0.05*sin(0.3*time);\n\n\nmv_a=mv_a+0.012*sin(time*1.33);\nwave_r=mv_r;\nwave_g=mv_g;\nwave_b=mv_b;\n\nrot=0.5+sin(time)*0.33+cos((time+655)*0.22);\n//This preset was originally made for my skin - \"Kieslowski - Blue\". Do a search for it at www.1001winampskins.com","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_4);\n  tmpvar_5[uint(0)].y = sin(tmpvar_4);\n  tmpvar_5[1u].x = -(sin(tmpvar_4));\n  tmpvar_5[1u].y = cos(tmpvar_4);\n  uv6_2 = (tmpvar_3 * tmpvar_5);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_3)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_6;\n  tmpvar_6 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_7.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_7 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_7, tmpvar_7))\n   * tmpvar_6)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((crisp_1 - \n    (dot (tmpvar_6, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, ((texture (sampler_blur1, uv).xyz * scale1) + bias1).xy).xyz * 2.0);\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"float3 color, mus;\nfloat dx,dy;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\n\nfloat2 uv1 = (uv-.5);\nfloat2 uv6 = uv1;\n\nfloat rota = lum(tex2D (sampler_noise_hq,uv/4))*q31;\n\nuv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));\nuv6 += sin(q32*uv1);\nmus = .2/(sqrt(uv6.x)+.2);\n\nmus *= float3 (1.1,1,.95);\nmus *= .9+.1*tex2D (sampler_noise_hq,uv);\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (0.005,0);\nfloat2 ver = float2 (0,.005);\n\nfloat dx = lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\n\nfloat2 zz = float2 (dx,dy);\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\nfloat3 crisp2 = tex2D(sampler_main,uv);\ncrisp += crisp2/2;\ncrisp *= .67;\ncrisp +=.08 * mus - length(zz)*blur;\n\nfloat3 ret1 = crisp - lum(blur)*.04;\nret = ret1 * .99 -  .04 ;\n}","comp_hlsl":"shader_body\n{\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    float3 output =  tex2D(sampler_main, uv).xyz;\n    float3 blur =  tex2D(sampler_main, GetBlur1(uv)).xyz;\n    \n   ret = blur;\n\n    ret *= 2.00; //gamma\n    ret = ret;\n}"}