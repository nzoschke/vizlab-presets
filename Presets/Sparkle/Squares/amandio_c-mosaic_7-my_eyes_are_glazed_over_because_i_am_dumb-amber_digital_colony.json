{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"brighten":1,"wave_a":0.001,"wave_scale":0.037,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.803,"warpscale":1.22,"zoomexp":0.99999,"zoom":0.99999,"warp":0.01,"sx":0.99999,"wave_y":0.04,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0.75,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"x":0.49,"y":0.49,"rad":2.57823,"tex_zoom":6.23873,"r":0,"g":0.04,"g2":0.04,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"num_inst":4,"y":0.49,"rad":1.0893,"tex_zoom":0.81948,"r":0,"g2":0,"a2":1,"border_a":0.26,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"x":0.49,"y":0.49,"rad":1.15622,"tex_zoom":0.81143,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_a":0.2},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"additive":1,"num_inst":1024,"rad":0.02625,"tex_zoom":0.73458,"r":0,"g2":0,"a2":1},"init_eqs_str":"a.i=0;a.sqni=0;a.t=0;a.mx=0;a.my=0;a.i2=0;a.zoom=0;a.q1=0;a.it=100;a.zoomy=1;a.ni=1024;for(var b=a.i=0;b<a.ni;b++){a.x=-1.5+div(2*mod(a.i,a.ni),a.ni);a.y=-1+div(2*mod(a.i,sqrt(a.ni)),sqrt(a.ni));a.zr=a.x;a.zi=a.y;a.g=0;for(var c=a.r=0;c<a.it;c++)a.zrt=a.zr,a.zr=a.zr*a.zr-a.zi*a.zi+a.x,a.zi=2*a.zrt*a.zi+a.y,a.r-=.1*above(a.zr*a.zr+a.zi*a.zi,4),a.g+=.2*above(a.zr*a.zr+a.zi*a.zi,4);a.gmegabuf[Math.floor(2*a.i)]=a.r;a.gmegabuf[Math.floor(2*a.i+1)]=a.g;a.i+=1}","frame_eqs_str":"a.i=a.instance;a.sqni=sqrt(a.num_inst);a.x=Math.floor(div(a.i,a.sqni));a.y=a.i-a.x*a.sqni;a.x=-.5+div(a.x,a.sqni);a.y=-.5+div(a.y,a.sqni);a.t=10*Math.sin(.022*a.time);a.mx=div(Math.tan(a.t*a.x-a.y),a.t);a.my=Math.cos(div(a.y,a.x)-a.t)+a.t;a.mx=a.sqni*Math.floor(a.sqni*a.mx);a.my=Math.floor(a.sqni*a.my);a.i2=a.mx+a.my;a.r=a.gmegabuf[Math.floor(2*a.i2)];a.g=a.gmegabuf[Math.floor(2*a.i2+1)];a.b=a.gmegabuf[Math.floor(2*a.i2-1)];a.r2=a.gmegabuf[Math.floor(.75*a.i2)];a.g2=a.gmegabuf[Math.floor(.75*\na.i2+1)];a.b2=a.gmegabuf[Math.floor(.75*a.i2-1)];a.a=a.gmegabuf[Math.floor(.33*a.i2)];a.a2=a.gmegabuf[Math.floor(.33*a.i2+1)];a.zoom=.8;a.y=.5+a.zoom*a.y;a.x=.5+div(a.zoom*a.x,a.q1);a.rad=a.rad*a.zoom*Math.sin(a.time*a.fps);","init_eqs_eel":"\nit=  100;          //////// impacts framerate !\n\n/////// Mandelbrot's fractal\n\nzoomy=1; \n\nni=1*1024;      i=0;       loop(ni,\n\nx = -1.5+2* (i%ni)/ni;     y =  -1+2* (i%sqrt(ni))/sqrt(ni);\n\nzr=x;    zi=y;\n\ng=0;   r=0;     loop(it,\n\nzrt=zr;     zr=zr*zr-zi*zi+x;    zi=2*zrt*zi+y;   \nr=r-.1*above(zr*zr+zi*zi,4);     g=g+.2*above(zr*zr+zi*zi,4);   );\n\ngmegabuf(2*i) = r; \ngmegabuf(2*i+1) = g;               i=i+1;);","frame_eqs_eel":"i=instance;        sqni=sqrt(num_inst);\n\nx= int(i/sqni);        //// grid\ny= i-x*sqni;\n\nx=-.5+x/sqni;\ny=-.5+y/sqni;\n\n\nt=10*sin(.022*time);\nmx= tan(t*x-y)/t;//x*sin(t)+y*cos(t)+.5;\nmy= cos(y/x-t)+t;//y*sin(t)-x*cos(t)+.5;\n\nmx= sqni*int(sqni*mx);       ///// rotation of a square matrix using the index\nmy= int(sqni*my);\n\ni2=mx+my;\n\nr =gmegabuf(2*i2    );    \ng =gmegabuf(2*i2  +1); \nb =gmegabuf(2*i2  -1);\nr2=gmegabuf(.75*i2  );\ng2=gmegabuf(.75*i2+1);\nb2=gmegabuf(.75*i2-1);\na =gmegabuf(.33*i2  );\na2=gmegabuf(.33*i2+1);\n//r2=r; g2=g;\n\n\nzoom=.8;\ny=.5+zoom*y;\nx=.5+zoom*x/q1;\nrad=rad*zoom*sin(time*fps);"}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":7.7518,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"scaling":5.92556,"smoothing":0,"r":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"scaling":5.92556,"smoothing":0,"g":0,"b":0,"a":0.34,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q6=0;a.q1=0;a.q5=0;a.atime=0;a.q4=0;a.vol=0;a.q2=0;a.q3=0;a.q7=0;for(var b=a.q8=0;1E4>b;b++)a.gmegabuf[Math.floor(a.i)]=0,a.i+=1;a.t0=a.frame;","frame_eqs_str":"a.vol=.01*(a.bass+a.treb+a.mid);a.atime+=a.vol;a.q1=a.aspecty;a.q2=.1*Math.sin(a.atime);a.q3=.3*Math.cos(.58438289*a.atime);a.q4=.3*Math.sin(.43994939*a.atime);a.q5=.3*Math.cos(.38488594*a.atime);a.q6=.3*Math.sin(.24888549*a.atime);a.q7=.3*Math.cos(.13288438*a.atime);a.q8=.3*Math.sin(.84833484*a.atime);","pixel_eqs_str":"","init_eqs_eel":"loop(10000, gmegabuf(i)=0;  i=i+1;);\n\n\nt0=frame;","frame_eqs_eel":"vol=(bass+treb+mid)*.01;\natime=atime+vol;\nq1=aspecty;\nq2=sin(atime)*.1;\nq3=cos(atime*.58438289)*.3;\nq4=sin(atime*.43994939)*.3;\nq5=cos(atime*.38488594)*.3;\nq6=sin(atime*.24888549)*.3;\nq7=cos(atime*.13288438)*.3;\nq8=sin(atime*.84833484)*.3;","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_4);\n  tmpvar_5[uint(0)].y = sin(tmpvar_4);\n  tmpvar_5[1u].x = -(sin(tmpvar_4));\n  tmpvar_5[1u].y = cos(tmpvar_4);\n  uv6_2 = (tmpvar_3 * tmpvar_5);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_3)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_6;\n  tmpvar_6 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_7.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_7 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_7, tmpvar_7))\n   * tmpvar_6)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((crisp_1 - \n    (dot (tmpvar_6, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv).zzz;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_blur1, uv);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur3, uv);\n  ret_1 = ((pow (\n    mix (vec3((((tmpvar_3.xyz * scale1) + bias1).z + ((tmpvar_4.xyz * scale3) + bias3).z)), tmpvar_2, tmpvar_2)\n  , vec3(0.8, 2.0, 8.0)) * 1.25) - 0.25);\n  ret_1 = (ret_1 * ((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2).z * 1.2));\n  ret_1 = (ret_1 * (0.2 + (0.8 * \n    abs((((tmpvar_3.xyz * scale1) + bias1).z - ((tmpvar_4.xyz * scale3) + bias3).z))\n  )));\n  ret_1 = (ret_1 * 4.0);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"float3 color, mus;\nfloat dx,dy;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\n\nfloat2 uv1 = (uv-.5);\nfloat2 uv6 = uv1;\n\nfloat rota = lum(tex2D (sampler_noise_hq,uv/4))*q31;\n\nuv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));\nuv6 += sin(q32*uv1);\nmus = .2/(sqrt(uv6.x)+.2);\n\nmus *= float3 (1.1,1,.95);\nmus *= .9+.1*tex2D (sampler_noise_hq,uv);\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (0.005,0);\nfloat2 ver = float2 (0,.005);\n\nfloat dx = lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\n\nfloat2 zz = float2 (dx,dy);\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\nfloat3 crisp2 = tex2D(sampler_main,uv);\ncrisp += crisp2/2;\ncrisp *= .67;\ncrisp +=.08 * mus - length(zz)*blur;\n\nfloat3 ret1 = crisp - lum(blur)*.04;\nret = ret1 * .99 -  .04 ;\n}","comp_hlsl":"sampler sampler_rose;\nshader_body\n{\n\nret = tex2D(sampler_main, uv).z,\n\nret = lerp (\nGetBlur1(uv).z + GetBlur3(uv).z,\nret,\npow(ret,1));\n  \nret = pow(ret,float3(.8,2,8))*1.25 - .25;\n\n//ret *= GetBlur2(uv+float2(0,.01)).y*1.2;\n//ret *= abs(GetBlur1(uv).y-GetBlur3(uv).y);\n\nret *= GetBlur2(uv+float2(0,.01)).z*1.2;\n\nret *= .2+.8*abs(GetBlur1(uv).z-GetBlur3(uv).z);\n\nret *= 4; //gamma\n\n//ret *= 1-tex2D(sampler_main, uv).x;\n\n//ret = tex2D(sampler_main, uv),\n\n}"}