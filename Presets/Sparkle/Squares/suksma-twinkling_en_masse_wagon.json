{"version":2,"baseVals":{"rating":5,"gammaadj":1.35,"decay":0.99,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.573,"wave_smoothing":0,"modwavealphastart":0.24,"modwavealphaend":1.3,"zoom":1.05,"warp":0.02001,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":28,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":2.27969,"smoothing":0.7,"b":0},"init_eqs_str":"a.d4=0;a.dx=0;a.d1=0;a.tt=0;a.d3=0;a.d2=0;a.ddy=0;a.t=0;a.dy=0;a.t8=a.time;","frame_eqs_str":"","point_eqs_str":"a.d1=95.13*a.sample;a.d2=111.52*a.sample*a.value1;a.d3=84.45*a.sample;a.d4=143.23*a.sample;a.x=a.sample;a.y=.5+a.value1;a.dx=1.2*Math.cos(27.43*a.sample+1+6.28*(a.d1-Math.floor(a.d1)));a.dy=.4+Math.cos(73.92*a.sample+4+6.28*(a.d2-Math.floor(a.d2)));a.ddy=.85;a.t=.3*a.time+.25*Math.sin(64.21*a.sample+5)+.25*Math.sin(123.56*a.sample+3)+a.d4-Math.floor(a.d4);a.t-=Math.floor(a.t);a.t=.4;a.tt=a.t;a.x=.5+a.dx*a.t;a.y=.2+a.dy*a.t+a.ddy*a.t*a.t;a.a=1;a.g=.5*Math.sin(513.32*a.sample)+\n.4*Math.sin(3*a.time);a.b=.5*Math.sin(53.32*a.sample)+.3*Math.sin(5*a.time);a.r=.5*Math.sin(23.32*a.sample)+.2*Math.sin(2*a.time);","init_eqs_eel":"t8 = time;","frame_eqs_eel":"","point_eqs_eel":"d1 = sample*95.13;\nd2 = sample*111.52*value1;\nd3 = sample*84.45;\nd4 = sample*143.23;\nx = sample;\ny = 0.5 + value1;\ndx = 1.2*cos(sample*27.43 + 1 + 6.28*(d1-int(d1)));\ndy = .4 + 1*cos(sample*73.92 + 4 + 6.28*(d2-int(d2)));\nddy = .85;     // acceleration downward\nt = time*0.3 + 0.25*sin(sample*64.21+5) + 0.25*sin(sample*123.56+3) + d4-int(d4);\nt = t - int(t);\nt=.3+1*.1;\ntt=t;\n// simple particle physics: x = x0 + dx*t and y = y0 + dy*t + ddy*t*t\nx = 0.5 + dx*t;\ny = .2 + dy*t + ddy*t*t;\na = 1;//1-t*t;\n// for some easy audio sync:\n//a = min(1,a * bass);\ng = 0 + 0.5*sin(sample*513.32)+.4*sin(time*3);\nb = 0 + 0.5*sin(sample*53.32)+.3*sin(time*5);\nr = 0 + 0.5*sin(sample*23.32)+.2*sin(time*2);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.rg2=0;a.decay_rate=0;a.q12=0;a.q13=0;a.q15=0;a.q1=0;a.rg=0;a.q9=0;a.prev_beat=0;a.is_beat=0;a.q11=0;a.q16=0;a.min_att=0;a.beat=0;a.decay_to=0;a.q2=0;a.q14=0;a.beat_level=0;","frame_eqs_str":"a.wave_r+=.2*(.6*Math.sin(1.517*a.time)+.4*Math.sin(1.58*a.time));a.wave_g+=.2*(.6*Math.sin(1.088*a.time)+.4*Math.sin(1.076*a.time));a.wave_b+=.2*(.6*Math.sin(1.037*a.time)+.4*Math.sin(.922*a.time));a.rot+=.01*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.cx+=.11*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.11*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.q1=Math.cos(1.41*a.time);a.q2=a.time+.3*Math.sin(1.47*a.time);a.rg=Math.max(.77*a.rg,.02+.5*\nMath.min(2,1.3*Math.max(0,a.mid_att-1)));a.q9=a.rg*above(a.rg,2*a.rg2);a.rg2=Math.max(a.rg,.8*a.rg2);a.monitor=a.q9;a.q11=a.aspectx;a.q12=a.aspecty;a.q13=a.wave_r;a.q14=a.wave_g;a.q15=a.wave_b;a.q16=.01*Math.floor(rand(100));a.decay_rate=pow(.993,a.fps);a.min_att=2.5;a.decay_to=1;a.beat=div(a.bass,Math.max(a.min_att,a.bass_att));a.beat=Math.max(a.beat,div(a.mid,Math.max(a.min_att,a.mid_att)));a.beat=Math.max(a.beat,div(a.treb,Math.max(a.min_att,a.treb_att)));a.beat=Math.max(a.beat,(a.prev_beat-a.decay_to)*\na.decay_rate+a.decay_to);a.beat_level=24*(a.beat-a.prev_beat);a.is_beat=above(a.beat_level,.5);a.prev_beat=a.beat;a.q1=a.is_beat;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.200*( 0.60*sin(1.517*time) + 0.40*sin(1.580*time) );\nwave_g = wave_g + 0.200*( 0.60*sin(1.088*time) + 0.40*sin(1.076*time) );\nwave_b = wave_b + 0.200*( 0.60*sin(1.037*time) + 0.40*sin(0.922*time) );\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\nq1=cos(1.41*time);\nq2=time + 0.3*sin(time*1.47);\n\n// this is a great way to respond to beats:\n// once you get one, let it decay at a constant rate!!\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\nq9 = rg * above(rg,rg2*2);\nrg2 = max(rg, rg2*0.8);\n\n//zoom = zoom + q9*0.1;\nmonitor = q9;\n\n// for custom shape 1:\nq11 = aspectx;\nq12 = aspecty;\nq13 = wave_r;\nq14 = wave_g;\nq15 = wave_b;\nq16 = int(rand(100))*0.01;\n\n// custom beat detection code: (fps-independent; quiet songs don't freak out)\ndecay_rate = pow(0.993, fps);  // lower # = more hasty to declare a beat\nmin_att    = 2.5;               // lower # = quieter songs can declare beats\ndecay_to   = 1.0;               // lower # = more hasty to declare a beat\nbeat =           bass/max(min_att,bass_att);\nbeat = max(beat, mid /max(min_att,mid_att ));\nbeat = max(beat, treb/max(min_att,treb_att));\nbeat = max( beat, (prev_beat-decay_to)*decay_rate + decay_to );\nbeat_level     = (beat - prev_beat - 0.0)*24;\nis_beat = above(beat_level, 0.5);\nprev_beat = beat;\n  // put your beat responses HERE:\n  //wave_a = beat_level + 1.95;\n  q1 = is_beat;   //drives shape #1","pixel_eqs_eel":"//rot=rot+0.05*sin(rad*13.5 + q2*1.3 + q*1.31);\n//zoom=zoom+0.05*sin(ang*10.0 + rad*7.5 + q2*1.63 + q);","warp":" shader_body { \n  vec2 tmpvar_1;\n  float tmpvar_2;\n  tmpvar_2 = (time * 10.0);\n  tmpvar_1.x = (uv.x + ((\n    (2.0 * sin(((uv.x * \n      (bass * 500.0)\n    ) + tmpvar_2)))\n   - 0.5) * 0.002));\n  tmpvar_1.y = (uv.y + ((\n    (2.0 * sin(((uv.y * \n      (treb * 500.0)\n    ) + tmpvar_2)))\n   - 0.5) * 0.002));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((texture (sampler_fc_main, tmpvar_1).xyz - 0.005) * 0.97);\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (abs((\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\n  ret_2 = (ret_2 * 1.333);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    // darken (decay) over time\n    float2 uv2 = float2(uv.x+(2*sin(uv.x*((bass*500))+(time*10))-.5)*.002,uv.y+(2*sin(uv.y*((treb*500))+(time*10))-.5)*.002);\n    ret = tex2D( sampler_fc_main, uv2 ).xyz;\n    \n\n    ret = (ret - .005)*0.97; //or try: ret -= 0.004;\n}","comp_hlsl":"\n\n\n\nshader_body\n{\n    uv = 0.05 + 0.9*uv;\n    ret = tex2D(sampler_main, uv).xyz;\n      // SUPER GLOW EDGES - looks awesome w/octopus\n      float3 avg_col = GetBlur1(uv);\n      ret = abs(avg_col - ret)*6;\n    ret *= 1.333; // a little bit of overbright\n}"}