{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.968,"echo_zoom":1,"echo_orient":3,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"rad":0.15803,"ang":1.59814,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=1.571;a.x=.1*Math.floor(rand(11));a.y=.13*Math.floor(rand(11));a.r=.01*Math.floor(rand(100));a.g=.01*Math.floor(rand(100));a.b=.01*Math.floor(rand(100));a.r2=a.r;a.g2=a.g;a.b2=a.b;","init_eqs_eel":"","frame_eqs_eel":"ang = 1.571;\nx = int(rand(11))*.1;\ny = int(rand(11))*.13;\n\nr = int(rand(100))*.01;\ng = int(rand(100))*.01;\nb = int(rand(100))*.01;\nr2 = r;\ng2 = g;\nb2 = b;"},{"baseVals":{"enabled":1,"rad":0.15774,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=1.571;a.x=.1*Math.floor(rand(11));a.y=.13*Math.floor(rand(11));a.r=.01*Math.floor(rand(100));a.g=.01*Math.floor(rand(100));a.b=.01*Math.floor(rand(100));a.r2=.01*Math.floor(rand(100));a.g2=.01*Math.floor(rand(100));a.b2=.01*Math.floor(rand(100));","init_eqs_eel":"","frame_eqs_eel":"ang = 1.571;\nx = int(rand(11))*.1;\ny = int(rand(11))*.13;\n\nr = int(rand(100))*.01;\ng = int(rand(100))*.01;\nb = int(rand(100))*.01;\nr2 = int(rand(100))*.01;\ng2 = int(rand(100))*.01;\nb2 = int(rand(100))*.01;"},{"baseVals":{"enabled":1,"rad":0.15736,"r":0.84,"r2":1,"g2":0.58,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.rad=.158;a.ang=1.571;a.x=.1*Math.floor(rand(11));a.y=.13*Math.floor(rand(11));a.r=.01*Math.floor(rand(100));a.g=.01*Math.floor(rand(100));a.b=.01*Math.floor(rand(100));a.r2=a.b;a.g2=a.r;a.b2=a.g;","init_eqs_eel":"","frame_eqs_eel":"rad = .158;\nang = 1.571;\nx = int(rand(11))*.1;\ny = int(rand(11))*.13;\n\nr = int(rand(100))*.01;\ng = int(rand(100))*.01;\nb = int(rand(100))*.01;\nr2 = b;\ng2 = r;\nb2 = g;"},{"baseVals":{"enabled":1,"a2":1},"init_eqs_str":"","frame_eqs_str":"a.rad=.158;a.ang=1.571;a.x=.1*Math.floor(rand(11));a.y=.13*Math.floor(rand(11));a.r=.01*Math.floor(rand(100));a.g=.01*Math.floor(rand(100));a.b=.01*Math.floor(rand(100));a.r2=a.g;a.g2=a.b;a.b2=a.r;","init_eqs_eel":"","frame_eqs_eel":"rad = .158;\nang = 1.571;\nx = int(rand(11))*.1;\ny = int(rand(11))*.13;\n\nr = int(rand(100))*.01;\ng = int(rand(100))*.01;\nb = int(rand(100))*.01;\nr2 = g;\ng2 = b;\nb2 = r;"}],"waves":[{"baseVals":{"scaling":33.46945,"enabled":0},"init_eqs_str":"t1 = 1;\nt2 = 1;","frame_eqs_str":"t2 = if(above(t1,200),if(equal(t2,1),2,t2),if(below(t1,10),if(equal(t2,2),1,t2),t2));\nt1 = if(equal(t2,1),t1 + .1,t1 - .1);","point_eqs_str":"fvar = sample*512;\nsvar = fvar/16;\ntvar = 0&svar;\nnewsample = tvar/3.2;\n\n\nx = newsample*.1;\ny = .5+value1;\nr = abs(y-.5)*10;\ng = -.6 + sin(sample*5+time*5);\nb = bass*.3;","init_eqs_eel":"t1 = 1;\nt2 = 1;","frame_eqs_eel":"t2 = if(above(t1,200),if(equal(t2,1),2,t2),if(below(t1,10),if(equal(t2,2),1,t2),t2));\nt1 = if(equal(t2,1),t1 + .1,t1 - .1);","point_eqs_eel":"fvar = sample*512;\nsvar = fvar/16;\ntvar = 0&svar;\nnewsample = tvar/3.2;\n\n\nx = newsample*.1;\ny = .5+value1;\nr = abs(y-.5)*10;\ng = -.6 + sin(sample*5+time*5);\nb = bass*.3;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.warp=0;a.zoom=1.001;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\nzoom = 1.001;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = ((texture (sampler_noise_lq, (rand_frame.xy + \n    ((uv * texsize_noise_lq.zw) * texsize.xy)\n  )) * 2.0) - 1.0);\n  ret_1 = (texture (sampler_pw_main, (uv + (\n    (tmpvar_2.zw * texsize.zw)\n   * 0.5))).xyz + ((0.59 - \n    (0.2 * rad)\n  ) * tmpvar_2.xyz));\n  vec3 tmpvar_3;\n  tmpvar_3 = clamp (((\n    (ret_1 - 0.5)\n   * 3.0) + 0.25), 0.0, 1.0);\n  ret_1.x = tmpvar_3.x;\n  ret_1.yz = tmpvar_3.xx;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv3_2;\n  vec3 col_3;\n  col_3 = vec3(0.0, 0.0, 0.0);\n  uv3_2 = (uv * 0.25);\n  for (int i_1 = 0; i_1 < 16; i_1++) {\n    uv3_2 = (uv3_2 + ((\n      float(i_1)\n     * vec2(0.25, 0.0)) - (\n      float((0.0 == (float(mod (float(i_1), 4.0)))))\n     * vec2(0.0, 0.25))));\n    col_3 = mix (col_3, vec3((float(i_1) / 16.0)), vec3(clamp ((\n      -(texture (sampler_main, uv3_2).y)\n     + texture (sampler_pw_main, \n      fract(uv3_2)\n    ).y), 0.0, 1.0)));\n  };\n  vec3 tmpvar_4;\n  tmpvar_4.z = 0.04;\n  vec2 tmpvar_5;\n  tmpvar_5 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_4.x = (texture (sampler_main, (uv + tmpvar_5)).xyz - texture (sampler_main, (uv - tmpvar_5)).xyz).x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_4.y = (texture (sampler_main, (uv + tmpvar_6)).xyz - texture (sampler_main, (uv - tmpvar_6)).xyz).x;\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.6;\n  tmpvar_7.xy = (uv - 0.5);\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_main, uv);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = mix (mix ((tmpvar_8.z * vec3(0.6, 0.2, 1.0)), vec3(1.0, 1.0, 1.0), (col_3 * \n    clamp ((1.0 - ((\n      (texture (sampler_blur1, uv).xyz * scale1)\n     + bias1).x * 2.0)), 0.0, 1.0)\n  )), vec3(1.1, 0.8, 0.5), vec3(((\n    (dot (normalize(tmpvar_4), tmpvar_7) * 0.5)\n   + 0.5) * tmpvar_8.x)));\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{\n    float4 N = tex2D(sampler_noise_lq, rand_frame.xy + uv*\n                             texsize_noise_lq.zw*texsize.xy )*2-1;\n    // sample previous frame\n    ret = tex2D( sampler_pw_main, uv + N.zw*texsize.zw*0.5 ).xyz;\n    ret += (0.59-0.2*rad)*N.xyz;\n\n\n    ret = saturate((ret-0.5)*3 + 0.25);\n    ret.yz = ret.x;\n}","comp_hlsl":"\nshader_body\n{\n\nfloat2 uv2 = uv*0.25;\nfloat3 col = 0;\nfloat2 uv3 = uv2;\nfor(int i = 0; i<16; i++){\n    uv3 += i*float2(0.25,0) - (0==(i)%4)*float2(0,0.25);\n    col = lerp(col,i/16.0,saturate(-GetPixel(uv3).y+tex2d(sampler_pw_main,frac(uv3)).y));\n\n}\nret = lerp(GetPixel(uv).z*float3(0.6,0.2,1),float3(1,1,1),col*saturate(1-GetBlur1(uv).x*2));\n    float gx = GetPixel(uv+float2(1,0)*texsize.zw) - GetPixel(uv-float2(1,0)*texsize.zw);\n    float gy = GetPixel(uv+float2(0,1)*texsize.zw) - GetPixel(uv-float2(0,1)*texsize.zw);\n    float3 g = normalize(float3(gx, gy, .04));\n\n    ret = lerp(ret,float3(1.1,0.8,0.5),(dot(g.xyz,float3(uv-0.5,0.6))*0.5+0.5)*GetPixel(uv).x);\n\n//ret = GetPixel(uv);\n}\n"}