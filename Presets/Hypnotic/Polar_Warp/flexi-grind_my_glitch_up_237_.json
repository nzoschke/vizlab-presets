{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_orient":1,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.713,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpanimspeed":0.204,"warpscale":8.471,"zoom":0.99951,"warp":0.15038,"wave_r":0.44,"wave_g":0.4,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0.26,"mv_x":44.16,"mv_y":33.6,"mv_l":0.5,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":3,"additive":1,"x":0.67,"y":0.53,"rad":0.17457,"ang":0.25133,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_g":0.5,"border_b":0.15,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":23,"additive":1,"num_inst":817,"rad":0.02798,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"a":0.41,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = sin(time) * .4 + .5;\n\n\npow( (bass*.15),2);","init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\n\n\npow( (bass*.15),2);"},{"baseVals":{"sides":36,"additive":1,"rad":0.81623,"r":0,"g":0.04,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = 1-q1;\ny = q2;\nx = 0.5 + (x - 0.5)*0.25;\ny = 0.5 + (y - 0.5)*0.25;","init_eqs_eel":"","frame_eqs_eel":"x = 1-q1;\ny = q2;\nx = 0.5 + (x - 0.5)*0.25;\ny = 0.5 + (y - 0.5)*0.25;"}],"waves":[{"baseVals":{"enabled":1,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":0,"r":0.05,"g":0.15},"init_eqs_str":"a.y1=0;a.xx=0;a.w=0;a.t5=0;a.t1=0;a.x1=0;a.q29=0;a.q6=0;a.q1=0;a.q5=0;a.dx=0;a.t3=0;a.q31=0;a.t6=0;a.q4=0;a.t7=0;a.q26=0;a.dy=0;a.t2=0;a.q2=0;a.q27=0;a.q3=0;a.t4=0;a.q32=0;a.yy=0;a.q7=0;a.q28=0;a.q30=0;a.t2=0;a.t3=0;a.t4=0;a.ab=1;","frame_eqs_str":"a.w=.5*a.time;a.t1=.5;a.t2=.5;a.t3=1;a.t4=0;a.t5=0;a.t6=Math.sin(a.w);a.t7=Math.cos(a.w);","point_eqs_str":"a.xx=.00001<Math.abs(equal(a.sample,0))?a.q3:a.xx;a.yy=.00001<Math.abs(equal(a.sample,0))?a.q4:a.yy;a.dx=a.xx*(1-a.xx)-div(a.q5*a.xx*a.yy,a.xx+a.q6);a.dy=a.q7*a.yy*(1-div(a.yy,a.xx));a.x1=a.xx;a.y1=a.yy;a.xx+=.2*a.dx;a.yy+=.2*a.dy;a.x1=.5+div(a.x1-.5,a.q1)+a.dy*a.value1*.01;a.y1=.5+div(a.y1-.5,a.q2)-a.dx*a.value1*.01;a.x=a.q26+((a.x1-a.q26)*a.q32+(a.y1-a.q27)*a.q31)*a.q28+a.q29;a.y=a.q27+(-(a.x1-a.q26)*a.q31+(a.y1-a.q27)*a.q32)*a.q28+a.q30;","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\nab = 1;","frame_eqs_eel":"// parameters\nw = time*0.5; // rotation (0..2Pi)\nt1 = 0.5; // center for rotation (x)\nt2 = 0.5; // center for rotation (y)\nt3 = 1; // scale\nt4 = 0; // translation (x)\nt5 = 0; // translation (y)\nt6 = sin(w);\nt7 = cos(w);","point_eqs_eel":"xx = if(equal(sample,0),q3,xx);\nyy = if(equal(sample,0),q4,yy);\n\n\ndx = xx*(1-xx)-q5*xx*yy/(xx+q6);\ndy = q7*yy*(1-yy/xx);\n\nx1 = xx;\ny1 = yy;\n\nxx = xx+dx*0.2;\nyy = yy+dy*0.2;\n\nx1 = 0.5+(x1-0.5)/q1 + dy*value1*0.01;\ny1 = 0.5+(y1-0.5)/q2 - dx*value1*0.01;\n\n\n// synchronized affine transformation\nx = q26 + ((x1-q26)*q32 + (y1-q27)*q31)*q28 + q29;\ny = q27 + (-(x1-q26)*q31 + (y1-q27)*q32)*q28 + q30;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"xx1 = if(equal(sample,0),q11,xx1);\nyy1 = if(equal(sample,0),q12,yy1);\nzz1 = if(equal(sample,0),q13,zz1);\n\ndx1 = q14*(yy1-xx1);\ndy1 = xx1*(q15-zz1)-yy1;\ndz1 = xx1*yy1-q16*zz1;\nxx1 = xx1 + q17*dx1;\nyy1 = yy1 + q17*dy1;\nzz1 = zz1 + q17*dz1;\n\nmy_x = xx1*0.02;\nmy_y = yy1*0.02;\nmy_z = zz1*0.02;\n\nx = 0.5 + my_x;\ny = 0.5 + my_y;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xx1 = if(equal(sample,0),q11,xx1);\nyy1 = if(equal(sample,0),q12,yy1);\nzz1 = if(equal(sample,0),q13,zz1);\n\ndx1 = q14*(yy1-xx1);\ndy1 = xx1*(q15-zz1)-yy1;\ndz1 = xx1*yy1-q16*zz1;\nxx1 = xx1 + q17*dx1;\nyy1 = yy1 + q17*dy1;\nzz1 = zz1 + q17*dz1;\n\nmy_x = xx1*0.02;\nmy_y = yy1*0.02;\nmy_z = zz1*0.02;\n\nx = 0.5 + my_x;\ny = 0.5 + my_y;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.d=0;a.y1=0;a.w=0;a.res=0;a.q25=0;a.h3=0;a.q12=0;a.x1=0;a.q13=0;a.q29=0;a.q6=0;a.dy1=0;a.bt=0;a.q1=0;a.q5=0;a.x=0;a.startx=0;a.v=0;a.mm=0;a.diff=0;a.h2=0;a.tt=0;a.bm=0;a.q31=0;a.angle=0;a.q11=0;a.q10=0;a.q4=0;a.a=0;a.q26=0;a.mt=0;a.b=0;a.y=0;a.mx=0;a.mn=0;a.beat=0;a.vol=0;a.dx1=0;a.bb=0;a.q2=0;a.q27=0;a.q14=0;a.starty=0;a.h1=0;a.q3=0;a.m=0;a.q32=0;a.q7=0;a.q28=0;a.q30=0;a.x1=0;a.y1=.001;a.z1=0;","frame_eqs_str":"a.zoom=1;a.warp=0;a.wave_a=0;a.startx=.7;a.starty=.7;a.a=1;a.b=.14;a.d=.2;a.q1=a.aspectx;a.q2=a.aspecty;a.q3=a.startx;a.q4=a.starty;a.q5=a.a;a.q6=a.b;a.q7=a.d;a.vol=8*a.bass+5*a.mid+3*a.treb;a.m=.97*a.m+.08*a.vol;a.monitor=a.vol;a.beat=above(a.vol,a.res)*above(a.vol,a.m)*above(a.vol,16);a.diff=(1-a.beat)*a.diff+a.beat*(a.vol-a.res);a.res=a.beat*(a.vol+.04*a.m)+(1-a.beat)*(a.res-div(60*(.1+.02*a.diff),a.fps));a.res=Math.max(0,a.res);a.w=.00001<Math.abs(a.beat)?rand(6.28):a.w;\na.x=.00001<Math.abs(a.beat)?rand(1):a.x;a.y=.00001<Math.abs(a.beat)?rand(1):a.y;a.q26=.5*a.x;a.q27=.5*a.y;a.q28=1;a.q29=.4;a.q30=.1;a.q31=Math.sin(a.w);a.q32=Math.cos(a.w);a.q25=a.w;a.bb=.98*a.bb+.5*a.bass;a.mm=.98*a.mm+.5*a.mid;a.tt=.98*a.tt+.5*a.treb;a.mx=Math.max(Math.max(a.bb,a.mm),a.tt);a.mn=Math.min(Math.min(a.bb,a.mm),a.tt);a.h1=div(a.bb-a.mn,a.mx-a.mn);a.h2=div(a.mm-a.mn,a.mx-a.mn);a.h3=div(a.tt-a.mn,a.mx-a.mn);a.v=div(.1,a.fps);a.bm+=(a.h1-a.h2)*a.v;a.mt+=(a.h2-a.h3)*a.v;a.bt+=(a.h1-a.h3)*\na.v;a.q10=a.bm;a.q11=a.mt;a.q12=a.bt;a.v=a.bm;a.q13=Math.sin(a.v);a.q14=Math.cos(a.v);","pixel_eqs_str":"a.x=.5+(a.x-.5)*a.q1;a.y=.5-(a.y-.5)*a.q2;a.x=a.q26+div(a.x-a.q26,a.q28)-a.q29;a.y=a.q27+div(a.y-a.q27,a.q28)-a.q30;a.angle=-a.q25;a.x1=a.x-a.q26;a.y1=a.y-a.q27;a.x=a.q26+Math.cos(-a.angle)*a.x1-Math.sin(-a.angle)*a.y1;a.y=a.q27+Math.sin(-a.angle)*a.x1+Math.cos(-a.angle)*a.y1;a.dx=a.x*(1-a.x)-div(a.q5*a.x*a.y,a.x+a.q6);a.dy=-a.q7*a.y*(1-div(a.y,a.x));a.dx=div(-.01*a.dx,a.q1);a.dy=div(-.01*a.dy,a.q2);a.dx1=Math.cos(a.angle)*a.dx-Math.sin(a.angle)*a.dy;a.dy1=Math.sin(a.angle)*\na.dx+Math.cos(a.angle)*a.dy;a.dx=a.dx1*a.aspectx;a.dy=a.dy1*a.aspecty;","init_eqs_eel":"x1 = 0;\ny1= .001;\nz1 = 0;","frame_eqs_eel":"zoom = 1;\nwarp = 0;\nwave_a = 0;\n\n\n// below parameters belong to an extended \"Lotka-Volterra\" model (simple predator-prey differential equation system - see wikipedia)\n\nstartx = 0.7; // initial predator population (used only for the phase plot)\nstarty = 0.7; // initial prey population\n\na = 1.0; // LV-model parameters - some pairs reach a so-called limit-cycle\nb = 0.14;\nd = 0.2;\n\nq1 = aspectx;\nq2 = aspecty;\n\nq3 = startx;\nq4 = starty;\n\nq5 = a; // the model parameters are synchronized for the phase plot wave and the per-vertex warp\nq6 = b;\nq7 = d;\n\n\nvol = bass*8 + mid*5 + treb*3;\nm = m*0.97 + vol*0.08;\nmonitor = vol;\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\ndiff = (1-beat)*diff + beat*(vol-res);\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\nres = max(0,res);\n\nw = if(beat,rand(3.14*2),w);\nx = if(beat,rand(1),x);\ny = if(beat,rand(1),y);\n\n// below parameters belong to a synchronized affine transformation for waves and the per-vertex code (rotate, scale, translate)\n\nq26 = 0.5*x; // center for rotation and scaling (x)\nq27 = 0.5*y; // center for rotation and scaling (y)\nq28 = 1; // scale\nq29 = 0.4; // translate x\nq30 = 0.1; // translate y\nq31 = sin(w);\nq32 = cos(w);\nq25 = w;\n// TODO: compensate parameter changes for an invariant canvas pane via difference quotients ;)\n\n// integration\nbb = bb*0.98 + bass*0.5;\nmm = mm*0.98 + mid*0.5;\ntt = tt*0.98 + treb*0.5;\n\n// normalization\nmx = max(max(bb,mm),tt);\nmn = min(min(bb,mm),tt);\n\nh1 = (bb-mn)/(mx-mn);\nh2 = (mm-mn)/(mx-mn);\nh3 = (tt-mn)/(mx-mn);\n\n// integration again (for constant change in one variable)\nv = 0.1/fps;\nbm = bm + (h1-h2)*v;\nmt = mt + (h2-h3)*v;\nbt = bt + (h1-h3)*v;\n\n// emit\nq10 = bm;\nq11 = mt;\nq12 = bt;\nv = bm;\nq13 = sin(v);\nq14 = cos(v);","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\ny = 0.5 - (y-0.5)*q2;\n\nx = q26 + (x-q26)/q28 - q29;\ny = q27 + (y-q27)/q28 - q30;\n\n// have a nice warp effect? - rotate it like a shape!\n\n  angle = -q25;\n\n/////////////////////////////////////////////////////////\nX1 = x - q26;\nY1 = y - q27;\nx = q26 + cos(-angle)*X1 -sin(-angle)*Y1; // rotate the x/y pane\ny = q27 + sin(-angle)*X1 +cos(-angle)*Y1;\n/////////////////////////////////////////////////////////\n\n\ndx = x*(1-x)-q5*x*y/(x+q6);\ndy = -q7*y*(1-y/x);\n\ndx = -0.01*dx/q1;\ndy = -0.01*dy/q2;\n\n\n//dx = 0;\n//dy = 0;\n\n/////////////////////////////////////////////////////////\ndx1 = cos(angle)*dx - sin(angle)*dy; // and finally the dx/dy pane is rotated to match the x/y pane\ndy1 = sin(angle)*dx + cos(angle)*dy;\ndx = dx1*aspectx;\ndy = dy1*aspecty;\n/////////////////////////////////////////////////////////","warp":" shader_body { \n  vec3 ret_1;\n  ret_1.z = (texture (sampler_main, uv).z * 0.5);\n  vec2 tmpvar_2;\n  tmpvar_2 = ((uv_orig * texsize.xy) * texsize_noise_lq.zw);\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (((2.0 * \n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n  )).y * 0.5);\n  tmpvar_4.y = (((2.0 * \n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n  )).y * 0.5);\n  ret_1.y = texture (sampler_fw_main, clamp ((uv_orig + (\n    (tmpvar_4 * texsize.zw)\n   * 4.0)), 0.0, 1.0)).y;\n  ret_1.y = (ret_1.y + ((\n    (ret_1 - ((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1))\n  .y * 0.025) + -0.014));\n  ret_1.y = (ret_1.y + ((texture (sampler_noise_lq, tmpvar_2).y - 0.5) * 0.02));\n  vec2 tmpvar_5;\n  tmpvar_5.x = (((2.0 * \n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n  )).x * 0.5);\n  tmpvar_5.y = (((2.0 * \n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n  )).x * 0.5);\n  ret_1.x = ((texture (sampler_main, (uv - \n    ((tmpvar_5 * texsize.zw) * 4.0)\n  )).x - (ret_1.y * 0.01)) + 0.004);\n  ret_1.x = (ret_1.x + ((\n    (texture (sampler_noise_lq, tmpvar_2).x - 0.5)\n   * 0.01) + (ret_1.z * 0.14)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec2 mirror_uv_2;\n  vec2 rotate_uv_3;\n  uv_1 = (0.5 + ((uv - 0.5) * 1.5));\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv_1 - 0.5) * aspect.xy);\n  vec2 tmpvar_5;\n  tmpvar_5.x = ((q14 * tmpvar_4.x) - (q13 * tmpvar_4.y));\n  tmpvar_5.y = ((q13 * tmpvar_4.x) + (q14 * tmpvar_4.y));\n  vec2 tmpvar_6;\n  tmpvar_6 = (0.5 + (tmpvar_5 * 2.0));\n  rotate_uv_3 = tmpvar_6;\n  vec2 numerator_7;\n  numerator_7 = (tmpvar_6 - vec2(0.0, 0.5));\n  vec2 denominator_8;\n  denominator_8 = (tmpvar_6 - vec2(1.0, 0.5));\n  vec2 tmpvar_9;\n  tmpvar_9.x = ((numerator_7.x * denominator_8.x) + (numerator_7.y * denominator_8.y));\n  tmpvar_9.y = ((numerator_7.y * denominator_8.x) - (numerator_7.x * denominator_8.y));\n  vec2 tmpvar_10;\n  tmpvar_10 = (((tmpvar_9 / \n    ((denominator_8.x * denominator_8.x) + (denominator_8.y * denominator_8.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_11;\n  tmpvar_11 = sqrt(dot (tmpvar_10, tmpvar_10));\n  float tmpvar_12;\n  float tmpvar_13;\n  tmpvar_13 = (min (abs(\n    (tmpvar_10.x / tmpvar_10.y)\n  ), 1.0) / max (abs(\n    (tmpvar_10.x / tmpvar_10.y)\n  ), 1.0));\n  float tmpvar_14;\n  tmpvar_14 = (tmpvar_13 * tmpvar_13);\n  tmpvar_14 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_14) + 0.05368138) * tmpvar_14) - 0.1173503)\n     * tmpvar_14) + 0.1938925) * tmpvar_14) - 0.3326756)\n   * tmpvar_14) + 0.9999793) * tmpvar_13);\n  tmpvar_14 = (tmpvar_14 + (float(\n    (abs((tmpvar_10.x / tmpvar_10.y)) > 1.0)\n  ) * (\n    (tmpvar_14 * -2.0)\n   + 1.570796)));\n  tmpvar_12 = (tmpvar_14 * sign((tmpvar_10.x / tmpvar_10.y)));\n  if ((abs(tmpvar_10.y) > (1e-08 * abs(tmpvar_10.x)))) {\n    if ((tmpvar_10.y < 0.0)) {\n      if ((tmpvar_10.x >= 0.0)) {\n        tmpvar_12 += 3.141593;\n      } else {\n        tmpvar_12 = (tmpvar_12 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_12 = (sign(tmpvar_10.x) * 1.570796);\n  };\n  vec2 tmpvar_15;\n  tmpvar_15.x = (tmpvar_12 * 0.1591549);\n  tmpvar_15.y = tmpvar_11;\n  vec2 tmpvar_16;\n  tmpvar_16.x = ((tmpvar_15.x * 2.0) + q11);\n  tmpvar_16.y = ((0.35 * log(tmpvar_11)) + q12);\n  vec2 tmpvar_17;\n  tmpvar_17 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_16 * 0.5)) * 2.0) - 1.0)\n  )));\n  mirror_uv_2 = tmpvar_17;\n  uv_1 = (0.5 + ((tmpvar_17 - 0.5) * 1.5));\n  vec2 tmpvar_18;\n  tmpvar_18 = (uv_1 - 0.5);\n  vec2 tmpvar_19;\n  tmpvar_19.x = ((q14 * tmpvar_18.x) - (q13 * tmpvar_18.y));\n  tmpvar_19.y = ((q13 * tmpvar_18.x) + (q14 * tmpvar_18.y));\n  rotate_uv_3 = (0.5 + (tmpvar_19 * 2.0));\n  vec2 numerator_20;\n  numerator_20 = (rotate_uv_3 - vec2(0.0, 0.5));\n  vec2 denominator_21;\n  denominator_21 = (rotate_uv_3 - vec2(1.0, 0.5));\n  vec2 tmpvar_22;\n  tmpvar_22.x = ((numerator_20.x * denominator_21.x) + (numerator_20.y * denominator_21.y));\n  tmpvar_22.y = ((numerator_20.y * denominator_21.x) - (numerator_20.x * denominator_21.y));\n  vec2 tmpvar_23;\n  tmpvar_23 = (((tmpvar_22 / \n    ((denominator_21.x * denominator_21.x) + (denominator_21.y * denominator_21.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_24;\n  tmpvar_24 = sqrt(dot (tmpvar_23, tmpvar_23));\n  float tmpvar_25;\n  float tmpvar_26;\n  tmpvar_26 = (min (abs(\n    (tmpvar_23.x / tmpvar_23.y)\n  ), 1.0) / max (abs(\n    (tmpvar_23.x / tmpvar_23.y)\n  ), 1.0));\n  float tmpvar_27;\n  tmpvar_27 = (tmpvar_26 * tmpvar_26);\n  tmpvar_27 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_27) + 0.05368138) * tmpvar_27) - 0.1173503)\n     * tmpvar_27) + 0.1938925) * tmpvar_27) - 0.3326756)\n   * tmpvar_27) + 0.9999793) * tmpvar_26);\n  tmpvar_27 = (tmpvar_27 + (float(\n    (abs((tmpvar_23.x / tmpvar_23.y)) > 1.0)\n  ) * (\n    (tmpvar_27 * -2.0)\n   + 1.570796)));\n  tmpvar_25 = (tmpvar_27 * sign((tmpvar_23.x / tmpvar_23.y)));\n  if ((abs(tmpvar_23.y) > (1e-08 * abs(tmpvar_23.x)))) {\n    if ((tmpvar_23.y < 0.0)) {\n      if ((tmpvar_23.x >= 0.0)) {\n        tmpvar_25 += 3.141593;\n      } else {\n        tmpvar_25 = (tmpvar_25 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_25 = (sign(tmpvar_23.x) * 1.570796);\n  };\n  vec2 tmpvar_28;\n  tmpvar_28.x = (tmpvar_25 * 0.1591549);\n  tmpvar_28.y = tmpvar_24;\n  vec2 tmpvar_29;\n  tmpvar_29.x = ((tmpvar_28.x * 2.0) + q11);\n  tmpvar_29.y = ((0.35 * log(tmpvar_24)) + q12);\n  mirror_uv_2 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_29 * 0.5)) * 2.0) - 1.0)\n  )));\n  uv_1 = (0.5 + ((mirror_uv_2 - 0.5) * 1.5));\n  vec2 tmpvar_30;\n  tmpvar_30 = (uv_1 - 0.5);\n  vec2 tmpvar_31;\n  tmpvar_31.x = ((q14 * tmpvar_30.x) - (q13 * tmpvar_30.y));\n  tmpvar_31.y = ((q13 * tmpvar_30.x) + (q14 * tmpvar_30.y));\n  rotate_uv_3 = (0.5 + (tmpvar_31 * 2.0));\n  vec2 numerator_32;\n  numerator_32 = (rotate_uv_3 - vec2(0.0, 0.5));\n  vec2 denominator_33;\n  denominator_33 = (rotate_uv_3 - vec2(1.0, 0.5));\n  vec2 tmpvar_34;\n  tmpvar_34.x = ((numerator_32.x * denominator_33.x) + (numerator_32.y * denominator_33.y));\n  tmpvar_34.y = ((numerator_32.y * denominator_33.x) - (numerator_32.x * denominator_33.y));\n  vec2 tmpvar_35;\n  tmpvar_35 = (((tmpvar_34 / \n    ((denominator_33.x * denominator_33.x) + (denominator_33.y * denominator_33.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_36;\n  tmpvar_36 = sqrt(dot (tmpvar_35, tmpvar_35));\n  float tmpvar_37;\n  float tmpvar_38;\n  tmpvar_38 = (min (abs(\n    (tmpvar_35.x / tmpvar_35.y)\n  ), 1.0) / max (abs(\n    (tmpvar_35.x / tmpvar_35.y)\n  ), 1.0));\n  float tmpvar_39;\n  tmpvar_39 = (tmpvar_38 * tmpvar_38);\n  tmpvar_39 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_39) + 0.05368138) * tmpvar_39) - 0.1173503)\n     * tmpvar_39) + 0.1938925) * tmpvar_39) - 0.3326756)\n   * tmpvar_39) + 0.9999793) * tmpvar_38);\n  tmpvar_39 = (tmpvar_39 + (float(\n    (abs((tmpvar_35.x / tmpvar_35.y)) > 1.0)\n  ) * (\n    (tmpvar_39 * -2.0)\n   + 1.570796)));\n  tmpvar_37 = (tmpvar_39 * sign((tmpvar_35.x / tmpvar_35.y)));\n  if ((abs(tmpvar_35.y) > (1e-08 * abs(tmpvar_35.x)))) {\n    if ((tmpvar_35.y < 0.0)) {\n      if ((tmpvar_35.x >= 0.0)) {\n        tmpvar_37 += 3.141593;\n      } else {\n        tmpvar_37 = (tmpvar_37 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_37 = (sign(tmpvar_35.x) * 1.570796);\n  };\n  vec2 tmpvar_40;\n  tmpvar_40.x = (tmpvar_37 * 0.1591549);\n  tmpvar_40.y = tmpvar_36;\n  vec2 tmpvar_41;\n  tmpvar_41.x = ((tmpvar_40.x * 2.0) + q11);\n  tmpvar_41.y = ((0.35 * log(tmpvar_36)) + q12);\n  mirror_uv_2 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_41 * 0.5)) * 2.0) - 1.0)\n  )));\n  uv_1 = (0.5 + ((mirror_uv_2 - 0.5) * 1.5));\n  vec2 tmpvar_42;\n  tmpvar_42 = (uv_1 - 0.5);\n  vec2 tmpvar_43;\n  tmpvar_43.x = ((q14 * tmpvar_42.x) - (q13 * tmpvar_42.y));\n  tmpvar_43.y = ((q13 * tmpvar_42.x) + (q14 * tmpvar_42.y));\n  rotate_uv_3 = (0.5 + (tmpvar_43 * 2.0));\n  vec2 numerator_44;\n  numerator_44 = (rotate_uv_3 - vec2(0.0, 0.5));\n  vec2 denominator_45;\n  denominator_45 = (rotate_uv_3 - vec2(1.0, 0.5));\n  vec2 tmpvar_46;\n  tmpvar_46.x = ((numerator_44.x * denominator_45.x) + (numerator_44.y * denominator_45.y));\n  tmpvar_46.y = ((numerator_44.y * denominator_45.x) - (numerator_44.x * denominator_45.y));\n  vec2 tmpvar_47;\n  tmpvar_47 = (((tmpvar_46 / \n    ((denominator_45.x * denominator_45.x) + (denominator_45.y * denominator_45.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_48;\n  tmpvar_48 = sqrt(dot (tmpvar_47, tmpvar_47));\n  float tmpvar_49;\n  float tmpvar_50;\n  tmpvar_50 = (min (abs(\n    (tmpvar_47.x / tmpvar_47.y)\n  ), 1.0) / max (abs(\n    (tmpvar_47.x / tmpvar_47.y)\n  ), 1.0));\n  float tmpvar_51;\n  tmpvar_51 = (tmpvar_50 * tmpvar_50);\n  tmpvar_51 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_51) + 0.05368138) * tmpvar_51) - 0.1173503)\n     * tmpvar_51) + 0.1938925) * tmpvar_51) - 0.3326756)\n   * tmpvar_51) + 0.9999793) * tmpvar_50);\n  tmpvar_51 = (tmpvar_51 + (float(\n    (abs((tmpvar_47.x / tmpvar_47.y)) > 1.0)\n  ) * (\n    (tmpvar_51 * -2.0)\n   + 1.570796)));\n  tmpvar_49 = (tmpvar_51 * sign((tmpvar_47.x / tmpvar_47.y)));\n  if ((abs(tmpvar_47.y) > (1e-08 * abs(tmpvar_47.x)))) {\n    if ((tmpvar_47.y < 0.0)) {\n      if ((tmpvar_47.x >= 0.0)) {\n        tmpvar_49 += 3.141593;\n      } else {\n        tmpvar_49 = (tmpvar_49 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_49 = (sign(tmpvar_47.x) * 1.570796);\n  };\n  vec2 tmpvar_52;\n  tmpvar_52.x = (tmpvar_49 * 0.1591549);\n  tmpvar_52.y = tmpvar_48;\n  vec2 tmpvar_53;\n  tmpvar_53.x = ((tmpvar_52.x * 2.0) + q11);\n  tmpvar_53.y = ((0.35 * log(tmpvar_48)) + q12);\n  mirror_uv_2 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_53 * 0.5)) * 2.0) - 1.0)\n  )));\n  uv_1 = (0.5 + ((mirror_uv_2 - 0.5) * 1.5));\n  vec2 tmpvar_54;\n  tmpvar_54 = (uv_1 - 0.5);\n  vec2 tmpvar_55;\n  tmpvar_55.x = ((q14 * tmpvar_54.x) - (q13 * tmpvar_54.y));\n  tmpvar_55.y = ((q13 * tmpvar_54.x) + (q14 * tmpvar_54.y));\n  rotate_uv_3 = (0.5 + (tmpvar_55 * 2.0));\n  vec2 numerator_56;\n  numerator_56 = (rotate_uv_3 - vec2(0.0, 0.5));\n  vec2 denominator_57;\n  denominator_57 = (rotate_uv_3 - vec2(1.0, 0.5));\n  vec2 tmpvar_58;\n  tmpvar_58.x = ((numerator_56.x * denominator_57.x) + (numerator_56.y * denominator_57.y));\n  tmpvar_58.y = ((numerator_56.y * denominator_57.x) - (numerator_56.x * denominator_57.y));\n  vec2 tmpvar_59;\n  tmpvar_59 = (((tmpvar_58 / \n    ((denominator_57.x * denominator_57.x) + (denominator_57.y * denominator_57.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_60;\n  tmpvar_60 = sqrt(dot (tmpvar_59, tmpvar_59));\n  float tmpvar_61;\n  float tmpvar_62;\n  tmpvar_62 = (min (abs(\n    (tmpvar_59.x / tmpvar_59.y)\n  ), 1.0) / max (abs(\n    (tmpvar_59.x / tmpvar_59.y)\n  ), 1.0));\n  float tmpvar_63;\n  tmpvar_63 = (tmpvar_62 * tmpvar_62);\n  tmpvar_63 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_63) + 0.05368138) * tmpvar_63) - 0.1173503)\n     * tmpvar_63) + 0.1938925) * tmpvar_63) - 0.3326756)\n   * tmpvar_63) + 0.9999793) * tmpvar_62);\n  tmpvar_63 = (tmpvar_63 + (float(\n    (abs((tmpvar_59.x / tmpvar_59.y)) > 1.0)\n  ) * (\n    (tmpvar_63 * -2.0)\n   + 1.570796)));\n  tmpvar_61 = (tmpvar_63 * sign((tmpvar_59.x / tmpvar_59.y)));\n  if ((abs(tmpvar_59.y) > (1e-08 * abs(tmpvar_59.x)))) {\n    if ((tmpvar_59.y < 0.0)) {\n      if ((tmpvar_59.x >= 0.0)) {\n        tmpvar_61 += 3.141593;\n      } else {\n        tmpvar_61 = (tmpvar_61 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_61 = (sign(tmpvar_59.x) * 1.570796);\n  };\n  vec2 tmpvar_64;\n  tmpvar_64.x = (tmpvar_61 * 0.1591549);\n  tmpvar_64.y = tmpvar_60;\n  vec2 tmpvar_65;\n  tmpvar_65.x = ((tmpvar_64.x * 2.0) + q11);\n  tmpvar_65.y = ((0.35 * log(tmpvar_60)) + q12);\n  mirror_uv_2 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_65 * 0.5)) * 2.0) - 1.0)\n  )));\n  uv_1 = (0.5 + ((mirror_uv_2 - 0.5) * 1.5));\n  vec2 tmpvar_66;\n  tmpvar_66 = (uv_1 - 0.5);\n  vec2 tmpvar_67;\n  tmpvar_67.x = ((q14 * tmpvar_66.x) - (q13 * tmpvar_66.y));\n  tmpvar_67.y = ((q13 * tmpvar_66.x) + (q14 * tmpvar_66.y));\n  rotate_uv_3 = (0.5 + (tmpvar_67 * 2.0));\n  vec2 numerator_68;\n  numerator_68 = (rotate_uv_3 - vec2(0.0, 0.5));\n  vec2 denominator_69;\n  denominator_69 = (rotate_uv_3 - vec2(1.0, 0.5));\n  vec2 tmpvar_70;\n  tmpvar_70.x = ((numerator_68.x * denominator_69.x) + (numerator_68.y * denominator_69.y));\n  tmpvar_70.y = ((numerator_68.y * denominator_69.x) - (numerator_68.x * denominator_69.y));\n  vec2 tmpvar_71;\n  tmpvar_71 = (((tmpvar_70 / \n    ((denominator_69.x * denominator_69.x) + (denominator_69.y * denominator_69.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_72;\n  tmpvar_72 = sqrt(dot (tmpvar_71, tmpvar_71));\n  float tmpvar_73;\n  float tmpvar_74;\n  tmpvar_74 = (min (abs(\n    (tmpvar_71.x / tmpvar_71.y)\n  ), 1.0) / max (abs(\n    (tmpvar_71.x / tmpvar_71.y)\n  ), 1.0));\n  float tmpvar_75;\n  tmpvar_75 = (tmpvar_74 * tmpvar_74);\n  tmpvar_75 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_75) + 0.05368138) * tmpvar_75) - 0.1173503)\n     * tmpvar_75) + 0.1938925) * tmpvar_75) - 0.3326756)\n   * tmpvar_75) + 0.9999793) * tmpvar_74);\n  tmpvar_75 = (tmpvar_75 + (float(\n    (abs((tmpvar_71.x / tmpvar_71.y)) > 1.0)\n  ) * (\n    (tmpvar_75 * -2.0)\n   + 1.570796)));\n  tmpvar_73 = (tmpvar_75 * sign((tmpvar_71.x / tmpvar_71.y)));\n  if ((abs(tmpvar_71.y) > (1e-08 * abs(tmpvar_71.x)))) {\n    if ((tmpvar_71.y < 0.0)) {\n      if ((tmpvar_71.x >= 0.0)) {\n        tmpvar_73 += 3.141593;\n      } else {\n        tmpvar_73 = (tmpvar_73 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_73 = (sign(tmpvar_71.x) * 1.570796);\n  };\n  vec2 tmpvar_76;\n  tmpvar_76.x = (tmpvar_73 * 0.1591549);\n  tmpvar_76.y = tmpvar_72;\n  vec2 tmpvar_77;\n  tmpvar_77.x = ((tmpvar_76.x * 2.0) + q11);\n  tmpvar_77.y = ((0.35 * log(tmpvar_72)) + q12);\n  mirror_uv_2 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_77 * 0.5)) * 2.0) - 1.0)\n  )));\n  uv_1 = (0.5 + ((mirror_uv_2 - 0.5) * 1.5));\n  vec2 tmpvar_78;\n  tmpvar_78 = (uv_1 - 0.5);\n  vec2 tmpvar_79;\n  tmpvar_79.x = ((q14 * tmpvar_78.x) - (q13 * tmpvar_78.y));\n  tmpvar_79.y = ((q13 * tmpvar_78.x) + (q14 * tmpvar_78.y));\n  rotate_uv_3 = (0.5 + (tmpvar_79 * 2.0));\n  vec2 numerator_80;\n  numerator_80 = (rotate_uv_3 - vec2(0.0, 0.5));\n  vec2 denominator_81;\n  denominator_81 = (rotate_uv_3 - vec2(1.0, 0.5));\n  vec2 tmpvar_82;\n  tmpvar_82.x = ((numerator_80.x * denominator_81.x) + (numerator_80.y * denominator_81.y));\n  tmpvar_82.y = ((numerator_80.y * denominator_81.x) - (numerator_80.x * denominator_81.y));\n  vec2 tmpvar_83;\n  tmpvar_83 = (((tmpvar_82 / \n    ((denominator_81.x * denominator_81.x) + (denominator_81.y * denominator_81.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_84;\n  tmpvar_84 = sqrt(dot (tmpvar_83, tmpvar_83));\n  float tmpvar_85;\n  float tmpvar_86;\n  tmpvar_86 = (min (abs(\n    (tmpvar_83.x / tmpvar_83.y)\n  ), 1.0) / max (abs(\n    (tmpvar_83.x / tmpvar_83.y)\n  ), 1.0));\n  float tmpvar_87;\n  tmpvar_87 = (tmpvar_86 * tmpvar_86);\n  tmpvar_87 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_87) + 0.05368138) * tmpvar_87) - 0.1173503)\n     * tmpvar_87) + 0.1938925) * tmpvar_87) - 0.3326756)\n   * tmpvar_87) + 0.9999793) * tmpvar_86);\n  tmpvar_87 = (tmpvar_87 + (float(\n    (abs((tmpvar_83.x / tmpvar_83.y)) > 1.0)\n  ) * (\n    (tmpvar_87 * -2.0)\n   + 1.570796)));\n  tmpvar_85 = (tmpvar_87 * sign((tmpvar_83.x / tmpvar_83.y)));\n  if ((abs(tmpvar_83.y) > (1e-08 * abs(tmpvar_83.x)))) {\n    if ((tmpvar_83.y < 0.0)) {\n      if ((tmpvar_83.x >= 0.0)) {\n        tmpvar_85 += 3.141593;\n      } else {\n        tmpvar_85 = (tmpvar_85 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_85 = (sign(tmpvar_83.x) * 1.570796);\n  };\n  vec2 tmpvar_88;\n  tmpvar_88.x = (tmpvar_85 * 0.1591549);\n  tmpvar_88.y = tmpvar_84;\n  vec2 tmpvar_89;\n  tmpvar_89.x = ((tmpvar_88.x * 2.0) + q11);\n  tmpvar_89.y = ((0.35 * log(tmpvar_84)) + q12);\n  mirror_uv_2 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_89 * 0.5)) * 2.0) - 1.0)\n  )));\n  uv_1 = (0.5 + ((mirror_uv_2 - 0.5) * 1.5));\n  vec2 tmpvar_90;\n  tmpvar_90 = (uv_1 - 0.5);\n  vec2 tmpvar_91;\n  tmpvar_91.x = ((q14 * tmpvar_90.x) - (q13 * tmpvar_90.y));\n  tmpvar_91.y = ((q13 * tmpvar_90.x) + (q14 * tmpvar_90.y));\n  rotate_uv_3 = (0.5 + (tmpvar_91 * 2.0));\n  vec2 numerator_92;\n  numerator_92 = (rotate_uv_3 - vec2(0.0, 0.5));\n  vec2 denominator_93;\n  denominator_93 = (rotate_uv_3 - vec2(1.0, 0.5));\n  vec2 tmpvar_94;\n  tmpvar_94.x = ((numerator_92.x * denominator_93.x) + (numerator_92.y * denominator_93.y));\n  tmpvar_94.y = ((numerator_92.y * denominator_93.x) - (numerator_92.x * denominator_93.y));\n  vec2 tmpvar_95;\n  tmpvar_95 = (((tmpvar_94 / \n    ((denominator_93.x * denominator_93.x) + (denominator_93.y * denominator_93.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_96;\n  tmpvar_96 = sqrt(dot (tmpvar_95, tmpvar_95));\n  float tmpvar_97;\n  float tmpvar_98;\n  tmpvar_98 = (min (abs(\n    (tmpvar_95.x / tmpvar_95.y)\n  ), 1.0) / max (abs(\n    (tmpvar_95.x / tmpvar_95.y)\n  ), 1.0));\n  float tmpvar_99;\n  tmpvar_99 = (tmpvar_98 * tmpvar_98);\n  tmpvar_99 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_99) + 0.05368138) * tmpvar_99) - 0.1173503)\n     * tmpvar_99) + 0.1938925) * tmpvar_99) - 0.3326756)\n   * tmpvar_99) + 0.9999793) * tmpvar_98);\n  tmpvar_99 = (tmpvar_99 + (float(\n    (abs((tmpvar_95.x / tmpvar_95.y)) > 1.0)\n  ) * (\n    (tmpvar_99 * -2.0)\n   + 1.570796)));\n  tmpvar_97 = (tmpvar_99 * sign((tmpvar_95.x / tmpvar_95.y)));\n  if ((abs(tmpvar_95.y) > (1e-08 * abs(tmpvar_95.x)))) {\n    if ((tmpvar_95.y < 0.0)) {\n      if ((tmpvar_95.x >= 0.0)) {\n        tmpvar_97 += 3.141593;\n      } else {\n        tmpvar_97 = (tmpvar_97 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_97 = (sign(tmpvar_95.x) * 1.570796);\n  };\n  vec2 tmpvar_100;\n  tmpvar_100.x = (tmpvar_97 * 0.1591549);\n  tmpvar_100.y = tmpvar_96;\n  vec2 tmpvar_101;\n  tmpvar_101.x = ((tmpvar_100.x * 2.0) + q11);\n  tmpvar_101.y = ((0.35 * log(tmpvar_96)) + q12);\n  mirror_uv_2 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_101 * 0.5)) * 2.0) - 1.0)\n  )));\n  uv_1 = (0.5 + ((mirror_uv_2 - 0.5) * 1.5));\n  vec2 tmpvar_102;\n  tmpvar_102 = (uv_1 - 0.5);\n  vec2 tmpvar_103;\n  tmpvar_103.x = ((q14 * tmpvar_102.x) - (q13 * tmpvar_102.y));\n  tmpvar_103.y = ((q13 * tmpvar_102.x) + (q14 * tmpvar_102.y));\n  rotate_uv_3 = (0.5 + (tmpvar_103 * 2.0));\n  vec2 numerator_104;\n  numerator_104 = (rotate_uv_3 - vec2(0.0, 0.5));\n  vec2 denominator_105;\n  denominator_105 = (rotate_uv_3 - vec2(1.0, 0.5));\n  vec2 tmpvar_106;\n  tmpvar_106.x = ((numerator_104.x * denominator_105.x) + (numerator_104.y * denominator_105.y));\n  tmpvar_106.y = ((numerator_104.y * denominator_105.x) - (numerator_104.x * denominator_105.y));\n  vec2 tmpvar_107;\n  tmpvar_107 = (((tmpvar_106 / \n    ((denominator_105.x * denominator_105.x) + (denominator_105.y * denominator_105.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_108;\n  tmpvar_108 = sqrt(dot (tmpvar_107, tmpvar_107));\n  float tmpvar_109;\n  float tmpvar_110;\n  tmpvar_110 = (min (abs(\n    (tmpvar_107.x / tmpvar_107.y)\n  ), 1.0) / max (abs(\n    (tmpvar_107.x / tmpvar_107.y)\n  ), 1.0));\n  float tmpvar_111;\n  tmpvar_111 = (tmpvar_110 * tmpvar_110);\n  tmpvar_111 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_111) + 0.05368138) * tmpvar_111) - 0.1173503)\n     * tmpvar_111) + 0.1938925) * tmpvar_111) - 0.3326756)\n   * tmpvar_111) + 0.9999793) * tmpvar_110);\n  tmpvar_111 = (tmpvar_111 + (float(\n    (abs((tmpvar_107.x / tmpvar_107.y)) > 1.0)\n  ) * (\n    (tmpvar_111 * -2.0)\n   + 1.570796)));\n  tmpvar_109 = (tmpvar_111 * sign((tmpvar_107.x / tmpvar_107.y)));\n  if ((abs(tmpvar_107.y) > (1e-08 * abs(tmpvar_107.x)))) {\n    if ((tmpvar_107.y < 0.0)) {\n      if ((tmpvar_107.x >= 0.0)) {\n        tmpvar_109 += 3.141593;\n      } else {\n        tmpvar_109 = (tmpvar_109 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_109 = (sign(tmpvar_107.x) * 1.570796);\n  };\n  vec2 tmpvar_112;\n  tmpvar_112.x = (tmpvar_109 * 0.1591549);\n  tmpvar_112.y = tmpvar_108;\n  vec2 tmpvar_113;\n  tmpvar_113.x = ((tmpvar_112.x * 2.0) + q11);\n  tmpvar_113.y = ((0.35 * log(tmpvar_108)) + q12);\n  mirror_uv_2 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_113 * 0.5)) * 2.0) - 1.0)\n  )));\n  uv_1 = mirror_uv_2;\n  vec2 tmpvar_114;\n  tmpvar_114 = (texsize.zw * 4.0);\n  vec3 tmpvar_115;\n  tmpvar_115 = (((2.0 * \n    ((texture (sampler_blur1, (mirror_uv_2 + (vec2(1.0, 0.0) * tmpvar_114))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (mirror_uv_2 - (vec2(1.0, 0.0) * tmpvar_114))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec3 tmpvar_116;\n  tmpvar_116 = (((2.0 * \n    ((texture (sampler_blur1, (mirror_uv_2 + (vec2(0.0, 1.0) * tmpvar_114))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (mirror_uv_2 - (vec2(0.0, 1.0) * tmpvar_114))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec2 tmpvar_117;\n  tmpvar_117.x = tmpvar_115.y;\n  tmpvar_117.y = tmpvar_116.y;\n  vec2 tmpvar_118;\n  tmpvar_118.x = tmpvar_115.y;\n  tmpvar_118.y = tmpvar_116.y;\n  vec2 x_119;\n  x_119 = -((mirror_uv_2 + (tmpvar_117 * 0.5)));\n  vec4 tmpvar_120;\n  tmpvar_120.w = 1.0;\n  tmpvar_120.xyz = mix (vec3(1.0, 0.6, 0.0), vec3(0.0, -0.5, 0.0), vec3(((\n    (1.0 - texture (sampler_main, (mirror_uv_2 + (tmpvar_118 * 0.03))).y)\n   - 1.0) + sqrt(\n    dot (x_119, x_119)\n  ))));\n  ret = tmpvar_120.xyz;\n }","warp_hlsl":"shader_body\n{\n//uv = uv_orig;\nret.z = GetPixel(uv).z*0.5;\n\n   float pixelDistance   = 4;\n   float motionStrength  = 4;\n\n   float diffusionFactor = 1;  \n   float decay           = -0.014;\n\n   float2 uv_y = lerp(uv_orig,uv,0);\n   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*diffusionFactor;\n\n   float2 d = texsize.zw*pixelDistance;\n   float1 dx = ( 2*GetBlur1(uv_y + float2(1,0)*d) - 2*GetBlur1(uv_y-float2(1,0)*d) ).y*0.5;\n   float1 dy = ( 2*GetBlur1(uv_y + float2(0,1)*d) - 2*GetBlur1(uv_y-float2(0,1)*d) ).y*0.5;\n\n   float2 my_uv = uv_y + float2(dx,dy)*texsize.zw*motionStrength;\n\n   ret.y = tex2D( sampler_fw_main, saturate(my_uv)).y;\n\n   ret.y += (ret - GetBlur1(uv_y)).y*0.025 + decay;\n\n\n   ret.y += (tex2D(sampler_noise_lq, dither_uv).y-0.5)*0.02;\n\n   dx = ( 2*GetBlur1(uv_y + float2(1,0)*d) - 2*GetBlur1(uv_y-float2(1,0)*d) ).x*0.5;\n   dy = ( 2*GetBlur1(uv_y + float2(0,1)*d) - 2*GetBlur1(uv_y-float2(0,1)*d) ).x*0.5;\n\n   my_uv = uv - float2(dx,dy)*texsize.zw*motionStrength;\n\nret.x = GetPixel(my_uv).x - ret.y*0.01 + 0.004;    \nret.x += (tex2D(sampler_noise_lq, dither_uv).x-0.5)*0.01 + ret.z*0.14;\n}","comp_hlsl":"float2 complex_div(float2 numerator, float2 denominator){\n   return float2( numerator.x*denominator.x + numerator.y*denominator.y,\n                  numerator.y*denominator.x - numerator.x*denominator.y)/\n          (denominator.x*denominator.x + denominator.y*denominator.y);\n}\n\nfloat2 uv_polar(float2 domain, float2 center){\n   float2 c = domain - center;\n   float rad_hq = length(c);\n   float ang_hq = atan2(c.x,c.y);\n   return float2(ang_hq*M_INV_PI_2, rad_hq);\n}\n\nfloat2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){\n   float2 polar = uv_polar(domain, center);\n   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);\n}\n\nfloat2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){\n   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;\n}\n\nfloat2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){\n   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);\n   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);\n}\n\n\nfloat2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){\n   float2 uv_r = (domain-center);\n   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;\n}\n\n\nshader_body\n{\n\n// bipolar\nuv = 0.5 + (uv-0.5)*1.5;\nfloat2 rotate_uv = 0.5+uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q13, q14, 2);\nfloat2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.35, float2(q11,q12));\nfloat2 mirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\n\nuv = mirror_uv;\nuv = 0.5 + (uv-0.5)*1.5;\nrotate_uv = 0.5+uv_rotate(0 + (uv-0.5), 0, q13, q14, 2);\nbipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.35, float2(q11,q12));\nmirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\n\nuv = mirror_uv;\n\nuv = 0.5 + (uv-0.5)*1.5;\nrotate_uv = 0.5+uv_rotate(0 + (uv-0.5), 0, q13, q14, 2);\nbipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.35, float2(q11,q12));\nmirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\n\nuv = mirror_uv;\n\nuv = 0.5 + (uv-0.5)*1.5;\nrotate_uv = 0.5+uv_rotate(0 + (uv-0.5), 0, q13, q14, 2);\nbipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.35, float2(q11,q12));\nmirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\n\nuv = mirror_uv;\n\nuv = 0.5 + (uv-0.5)*1.5;\nrotate_uv = 0.5+uv_rotate(0 + (uv-0.5), 0, q13, q14, 2);\nbipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.35, float2(q11,q12));\nmirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\n\nuv = mirror_uv;\n\nuv = 0.5 + (uv-0.5)*1.5;\nrotate_uv = 0.5+uv_rotate(0 + (uv-0.5), 0, q13, q14, 2);\nbipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.35, float2(q11,q12));\nmirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\n\nuv = mirror_uv;\n\nuv = 0.5 + (uv-0.5)*1.5;\nrotate_uv = 0.5+uv_rotate(0 + (uv-0.5), 0, q13, q14, 2);\nbipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.35, float2(q11,q12));\nmirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\n\nuv = mirror_uv;\n\nuv = 0.5 + (uv-0.5)*1.5;\nrotate_uv = 0.5+uv_rotate(0 + (uv-0.5), 0, q13, q14, 2);\nbipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.35, float2(q11,q12));\nmirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\n\nuv = mirror_uv;\n\nuv = 0.5 + (uv-0.5)*1.5;\nrotate_uv = 0.5+uv_rotate(0 + (uv-0.5), 0, q13, q14, 2);\nbipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.35, float2(q11,q12));\nmirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\n\nuv = mirror_uv;\n\n    float2 d = texsize.zw*4;\n    float3 dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) )*0.5;\n    float3 dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) )*0.5;\n    float2 uv_y = uv+float2(dx.y,dy.y)*0.5;\n\nret = GetPixel(uv+float2(dx.y,dy.y)*0.03).y;\nret = lerp(float3(1,0.6,0),float3(0.,-0.5,0),(1-ret.y)*1-1  + length(0-uv_y));\n\n//ret = GetPixel(uv);\n}\n"}