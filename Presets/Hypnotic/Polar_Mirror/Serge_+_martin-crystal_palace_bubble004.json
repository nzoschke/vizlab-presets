{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_str":"a.xang=0;a.fov=0;a.aa=0;a.yang=0;a.ss=0;a.it=0;a.q1=0;a.my=0;a.oz=0;a.ayang=0;a.mz=0;a.oy=0;a.sz=0;a.azang=0;a.mx=0;a.sp=0;a.q2=0;a.zang=0;a.axang=0;a.ox=0;","frame_eqs_str":"","point_eqs_str":"a.sp=1607.68*a.sample;a.it+=1;a.it*=above(a.sample,0);a.sz=a.q1;a.ss=2*a.sample;a.ox=.5*a.sz*pow(-1,a.it)*below(a.ss,1)+.5*pow(-1,a.it)*above(a.ss,1)*a.sz;a.oy=(a.ss-.5)*a.sz*below(a.ss,1)+.5*a.sz*above(a.ss,1);a.oz=.5*-a.sz*below(a.ss,1)+(a.ss-1-.5)*a.sz*above(a.ss,1);a.xang=.132*a.q2;a.axang=0;a.yang=.153*a.q2;a.ayang=0;a.zang=2.1*a.q2;a.azang=0;a.fov=.6+.2*Math.sin(a.time);a.fov=.3;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);\na.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.aa=.5*(a.oz-1);a.a=.05;a.oz-=2;a.x=div(a.ox*a.fov,a.oz)+.5;a.x=.75*(a.x-.5)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;a.g=1+Math.sin(a.sp);a.b=.5+.5*Math.sin(1.57*a.sample);a.r=.5+.5*Math.cos(1.57*a.sample);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\nit = it+1;\nit = it*above(sample,0);\nsz = q1;\nss = sample*2;\nox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz;\noy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1);\noz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1);\n\nxang = q2*0.132;\naxang = 0;\nyang = q2*0.153;\nayang = 0;\nzang = q2*2.10;\nazang = 0;\nfov = 0.6 + 0.2*sin(time);\nfov = .3;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\naa = 0 + (oz-1)*.5;\na = .05;\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\ng = 1 + sin(sp);\nb = 0.5 + 0.5*sin(sample*1.57);\nr = 0.5 + 0.5*cos(sample*1.57);"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"sp = sample*6.28*8*8*4;\nit = it+1;\nit = it*above(sample,0);\nsz = q1;\nss = sample*2;\noy = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz;\noz = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1);\nox = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1);\n\nxang = q2*0.132;\naxang = 0;\nyang = q2*0.153;\nayang = 0;\nzang = q2*2.10;\nazang = 0;\nfov = 0.6 + 0.2*sin(time);\nfov = .3;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\na = .5 + (oz+2)*.5;\na = .05;\ng = 1 + sin(sp);\nb = 0.5 + 0.5*sin(sample*1.57);\nr = 0.5 + 0.5*cos(sample*1.57);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\nit = it+1;\nit = it*above(sample,0);\nsz = q1;\nss = sample*2;\noy = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz;\noz = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1);\nox = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1);\n\nxang = q2*0.132;\naxang = 0;\nyang = q2*0.153;\nayang = 0;\nzang = q2*2.10;\nazang = 0;\nfov = 0.6 + 0.2*sin(time);\nfov = .3;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\na = .5 + (oz+2)*.5;\na = .05;\ng = 1 + sin(sp);\nb = 0.5 + 0.5*sin(sample*1.57);\nr = 0.5 + 0.5*cos(sample*1.57);"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"sp = sample*6.28*8*8*4;\nit = it+1;\nit = it*above(sample,0);\nsz = q1;\nss = sample*2;\noz = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz;\nox = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1);\noy = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1);\n\nxang = q2*0.132;\naxang = 0;\nyang = q2*0.153;\nayang = 0;\nzang = q2*2.10;\nazang = 0;\nfov = 0.6 + 0.2*sin(time);\nfov = .3;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\na = .5 + (oz+2)*.1;\na = .05;\ng = 1 + sin(sp);\nb = 0.5 + 0.5*sin(sample*1.57);\nr = 0.5 + 0.5*cos(sample*1.57);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\nit = it+1;\nit = it*above(sample,0);\nsz = q1;\nss = sample*2;\noz = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz;\nox = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1);\noy = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1);\n\nxang = q2*0.132;\naxang = 0;\nyang = q2*0.153;\nayang = 0;\nzang = q2*2.10;\nazang = 0;\nfov = 0.6 + 0.2*sin(time);\nfov = .3;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\na = .5 + (oz+2)*.1;\na = .05;\ng = 1 + sin(sp);\nb = 0.5 + 0.5*sin(sample*1.57);\nr = 0.5 + 0.5*cos(sample*1.57);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.sw=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.index3=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.k2=0;a.q26=0;a.p2=0;a.avg=0;a.rota=0;a.movez=0;a.beat=0;a.vol=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q32=0;a.q7=0;a.q28=0;a.q30=0;a.v2=0;a.q20=0;a.q8=0;a.vol=0;a.p1=0;a.vx=.2;a.vy=-.1;a.kx=0;a.ky=0;","frame_eqs_str":"a.dec_med=pow(.96,div(30,a.fps));a.dec_slow=pow(.98,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),2);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),2);a.q20=a.avg;a.q21=\na.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.vol=a.bass_att+a.treb_att;a.v2=a.v2*a.dec_slow+a.vol*(1-a.dec_slow);a.q26=Math.max(Math.atan(a.vol-.8*a.v2),.3);a.q27=a.index+1;a.sw=a.sw*a.dec_med+(1-a.dec_med)*mod(a.index2,2);a.q28=a.sw;a.k1=a.is_beat*bnot(a.index);a.k2=a.is_beat*bnot(a.index);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_slow*a.p2+(1-a.dec_slow)*a.p1;a.rott=div(3.1416*a.p2,2);a.monitor=a.k1;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q5=Math.cos(div(a.time,\n6));a.q6=-Math.sin(div(a.time,6));a.q7=-a.q6;a.q8=a.q5;a.zoom=1;a.rot=-0;a.movez+=div(.105*(a.q1+1.1),a.fps);a.q29=a.movez;a.rota+=div(.03*(2-a.q1),a.fps);a.q30=a.rota;a.q31=1+16*Math.abs(Math.cos(.1*a.time));a.q32=div(.5*Math.cos(.08*a.time),4);","pixel_eqs_str":"","init_eqs_eel":"vol = 0; p1 = 0;\nvx = .2; vy = -0.1;\nkx = 0; ky = 0;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\ndec_slow = pow (0.98, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%2;\nindex3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\n\nvol = bass_att + treb_att;\nv2 = v2 * dec_slow + vol * (1-dec_slow) ;\nq26 = max(atan (vol - v2*.8),.3);\n\nq27 = index + 1;\n\nsw = sw*dec_med + (1-dec_med)*(index2%2);\nq28 = sw;\n\nk1 =  is_beat*bnot(index);\nk2 =  is_beat*bnot(index);\n\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_slow * p2+ (1-dec_slow)*p1;\nrott = p2 * 3.1416/2;\nmonitor = k1;\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n\nq5 = cos(time/6);\nq6 = -sin(time/6);\nq7 = -q6;\nq8 = q5;\n\nzoom = 1;\nrot = -0;\n\nmovez = movez + .0035*(q1+1.1)*30/fps;\nq29 = movez;\nrota = rota + .001*(2-q1)*30/fps;\nq30 = rota;\nq31 = 1 + 16*abs(cos(time*.1));\nq32 = .5*cos(time*.08)/4;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + ((0.004 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ).xy * vec2(0.0, 1.0)));\n  uv6_2 = (0.4 * sin((\n    (((uv - 0.2) * aspect.xy) * 18.0)\n   * rand_frame.xy)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (vec3((0.051 / sqrt(dot (uv6_2, uv6_2)))) * vec3(0.15, 0.12, 0.075))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.5 + ((uv - 0.5) * 1.5));\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv_1 - 0.5) * aspect.xy);\n  vec2 tmpvar_4;\n  tmpvar_4.x = ((q4 * tmpvar_3.x) - (q3 * tmpvar_3.y));\n  tmpvar_4.y = ((q3 * tmpvar_3.x) + (q4 * tmpvar_3.y));\n  vec2 tmpvar_5;\n  tmpvar_5 = (0.5 + (tmpvar_4 * 2.0));\n  vec2 numerator_6;\n  numerator_6 = (tmpvar_5 - vec2(0.0, 0.5));\n  vec2 denominator_7;\n  denominator_7 = (tmpvar_5 - vec2(1.0, 0.5));\n  vec2 tmpvar_8;\n  tmpvar_8.x = ((numerator_6.x * denominator_7.x) + (numerator_6.y * denominator_7.y));\n  tmpvar_8.y = ((numerator_6.y * denominator_7.x) - (numerator_6.x * denominator_7.y));\n  vec2 tmpvar_9;\n  tmpvar_9 = (((tmpvar_8 / \n    ((denominator_7.x * denominator_7.x) + (denominator_7.y * denominator_7.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_10;\n  tmpvar_10 = sqrt(dot (tmpvar_9, tmpvar_9));\n  float tmpvar_11;\n  float tmpvar_12;\n  tmpvar_12 = (min (abs(\n    (tmpvar_9.x / tmpvar_9.y)\n  ), 1.0) / max (abs(\n    (tmpvar_9.x / tmpvar_9.y)\n  ), 1.0));\n  float tmpvar_13;\n  tmpvar_13 = (tmpvar_12 * tmpvar_12);\n  tmpvar_13 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_13) + 0.05368138) * tmpvar_13) - 0.1173503)\n     * tmpvar_13) + 0.1938925) * tmpvar_13) - 0.3326756)\n   * tmpvar_13) + 0.9999793) * tmpvar_12);\n  tmpvar_13 = (tmpvar_13 + (float(\n    (abs((tmpvar_9.x / tmpvar_9.y)) > 1.0)\n  ) * (\n    (tmpvar_13 * -2.0)\n   + 1.570796)));\n  tmpvar_11 = (tmpvar_13 * sign((tmpvar_9.x / tmpvar_9.y)));\n  if ((abs(tmpvar_9.y) > (1e-08 * abs(tmpvar_9.x)))) {\n    if ((tmpvar_9.y < 0.0)) {\n      if ((tmpvar_9.x >= 0.0)) {\n        tmpvar_11 += 3.141593;\n      } else {\n        tmpvar_11 = (tmpvar_11 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_11 = (sign(tmpvar_9.x) * 1.570796);\n  };\n  vec2 tmpvar_14;\n  tmpvar_14.x = (tmpvar_11 * 0.1591549);\n  tmpvar_14.y = tmpvar_10;\n  vec2 tmpvar_15;\n  tmpvar_15.x = ((tmpvar_14.x * 2.0) + q11);\n  tmpvar_15.y = ((0.35 * log(tmpvar_10)) + q12);\n  vec2 tmpvar_16;\n  tmpvar_16 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_15 * 0.5)) * 2.0) - 1.0)\n  )));\n  uv_1 = tmpvar_16;\n  vec2 tmpvar_17;\n  tmpvar_17.x = sin(((tmpvar_16.y * 31.0) + (0.59 * time)));\n  tmpvar_17.y = sin(((tmpvar_16.x * 26.0) + (0.37 * time)));\n  vec2 tmpvar_18;\n  tmpvar_18 = (tmpvar_16 + (0.03 * tmpvar_17));\n  ret_2 = (max (texture (sampler_main, tmpvar_16).xyz, texture (sampler_main, tmpvar_18).xyz) * 1.33);\n  ret_2 = (pow (vec3(dot (ret_2, vec3(0.32, 0.49, 0.29))), vec3(2.5, 2.5, 2.5)) + ((texture (sampler_blur1, \n    ((tmpvar_16 + tmpvar_18) / 2.0)\n  ).xyz * scale1) + bias1));\n  vec4 tmpvar_19;\n  tmpvar_19.w = 1.0;\n  tmpvar_19.xyz = ret_2;\n  ret = tmpvar_19.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.2) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 32;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;\n\n\nuv6 = .4*sin(uv1*18*rand_frame);\nmus = .051/(length(uv6));\nmus *= float3 (1,.8,.5);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .15*mus;\nfloat2 uv2 = (uv_orig-.5)-float2(.5,.5+0.1*q25);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"float2 complex_div(float2 numerator, float2 denominator){\n   return float2( numerator.x*denominator.x + numerator.y*denominator.y,\n                  numerator.y*denominator.x - numerator.x*denominator.y)/\n          (denominator.x*denominator.x + denominator.y*denominator.y);\n}\n\nfloat2 uv_polar(float2 domain, float2 center){\n   float2 c = domain - center;\n   float rad_hq = length(c);\n   float ang_hq = atan2(c.x,c.y);\n   return float2(ang_hq*M_INV_PI_2, rad_hq);\n}\n\nfloat2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){\n   float2 polar = uv_polar(domain, center);\n   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);\n}\n\nfloat2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){\n   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;\n}\n\nfloat2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){\n   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);\n   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);\n}\n\n\nfloat2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){\n   float2 uv_r = (domain-center);\n   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;\n}\n\n\nshader_body\n{\nfloat2 uvo = uv;\nuv = 0.5 + (uv-0.5)*1.5;\nfloat2 rotate_uv = 0.5+uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q3, q4, 2);\nfloat2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.35, float2(q11,q12));\nfloat2 mirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\nuv = mirror_uv;\n    float2 uv_grid=uv+0.03*float2(sin(uv.y*31+0.59*time),sin(uv.x*26+0.37*time));\n    ret = tex2D(sampler_main, uv).xyz;\n    ret=max(ret,tex2D(sampler_main,uv_grid).xyz); //video distort\n    ret *= 1.33; //gamma\n    ret=lum(ret);\n    ret=pow(ret,2.5);\n    ret+=GetBlur1((uv+uv_grid)/2);\n }"}