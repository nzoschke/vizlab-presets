{"version":2,"baseVals":{"rating":5,"gammaadj":1.21,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.07,"wave_scale":1.229,"wave_smoothing":0.9,"wave_mystery":0.2,"modwavealphastart":0,"modwavealphaend":0,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"fshader":1,"zoom":0.9901,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":33,"textured":1,"y":0.52,"rad":0.6653,"tex_ang":1.0053,"tex_zoom":1.14795,"r":0.99,"g":0.9,"b":0.99,"a":0.97,"r2":1,"b2":0.89,"a2":0.6,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":54,"x":0.29,"rad":0.01,"ang":3.76991,"tex_zoom":6.16617,"r":0.85,"b":1,"a":0.9,"r2":1,"b2":1,"a2":0.86,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t0 = time/3;\nx = t0 - int(t0);\ny = 0.3+mid/50;","init_eqs_eel":"","frame_eqs_eel":"t0 = time/3;\nx = t0 - int(t0);\ny = 0.3+mid/50;"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.011,"tex_zoom":0.49981,"g":1,"b":1,"b2":1,"a2":0.7,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t0 = time/3;\nx = t0 - int(t0);\ny = 0.5+treb /50;","init_eqs_eel":"","frame_eqs_eel":"t0 = time/3;\nx = t0 - int(t0);\ny = 0.5+treb /50;"},{"baseVals":{"sides":63,"rad":0.01645,"tex_zoom":1.31212,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t0 = time/3;\nx = t0 - int(t0);\n\n//y = q2/30+0.8;\n\ny1 = .8 + bass+treb+mid;\ny = (y1-y0)/200 + .8;\ny0 = y1;\n\n\nb_ = b_*.9 +bass;\nm_ = m_*.9 +mid;\nt_ = t_*.9 +treb;\n\ny = .8 + (bass+mid+treb)/150;\ny = 0.8 + (q2+q1)/30;\n//f.0 = 3;","init_eqs_eel":"","frame_eqs_eel":"t0 = time/3;\nx = t0 - int(t0);\n\n//y = q2/30+0.8;\n\ny1 = .8 + bass+treb+mid;\ny = (y1-y0)/200 + .8;\ny0 = y1;\n\n\nb_ = b_*.9 +bass;\nm_ = m_*.9 +mid;\nt_ = t_*.9 +treb;\n\ny = .8 + (bass+mid+treb)/150;\ny = 0.8 + (q2+q1)/30;\n//f.0 = 3;"}],"waves":[{"baseVals":{"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":1,"scaling":0.89152,"smoothing":1,"g":0.6,"b":0},"init_eqs_str":"a.ampl=0;a.f2=0;a.t1=0;a.q1=0;a.q5=0;a.trel=0;a.k1=0;a.exc=0;a.q4=0;a.f1=0;a.t2=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.trel=a.q1-0;a.t1=div(Math.floor(a.trel),2);a.t2=a.trel-Math.floor(a.trel);","point_eqs_str":"a.k1=mod(512*a.sample,8);a.t1=equal(a.k1,0)*mod(61*a.t1+27,4096)+(1-equal(a.k1,0))*a.t1;a.exc=1+Math.floor(rand(5));a.ampl=a.sample*sqrt(a.t2)*(1+a.exc);a.f1=a.q4*a.ampl*Math.sin(div(6.28*a.t1,4096));a.f2=a.q4*a.ampl*Math.cos(div(6.28*a.t1,4096));a.x=a.q2+a.k1*a.f1;a.y=a.q3+a.k1*a.f2;a.a=equal(a.k1,6)+equal(a.k1,0);a.r=1;a.b=equal(a.k1,0);a.g=.6*(1+.6*equal(a.k1,0));a.a=a.a*a.q5*(1-0*a.t2*a.t2);","init_eqs_eel":"","frame_eqs_eel":"trel = q1-.0;\nt1 = int(trel)/2;\nt2 = trel - int(trel);","point_eqs_eel":"k1 = (sample*512) % 8;\n\nt1 = equal (k1,0)*((t1 * 61 + 27) % 4096) \n   + (1-equal(k1,0))*t1;\n\nexc = 1+int(rand(5));\nampl = sample*sqrt(t2) * (1+exc);\n\nf1 = q4*ampl* sin(t1*6.28/4096);\nf2 = q4*ampl* cos(t1*6.28/4096);\n\nx = q2 + k1* f1 ;\ny = q3 + k1* f2;\n\na = equal(k1,6) + equal (k1,0);\n\nr = 1;\nb = equal (k1,0);\ng = .6* (1+.6*equal (k1,0))  ;\na = a * q5 * (1-0*t2*t2);\n//a = 0;\n "},{"baseVals":{"enabled":1,"scaling":0.01348,"smoothing":0,"g":0.6,"b":0,"a":0.31},"init_eqs_str":"a.ampl=0;a.f2=0;a.t1=0;a.q1=0;a.q5=0;a.trel=0;a.k1=0;a.q4=0;a.f1=0;a.t2=0;a.q2=0;a.q3=0;a.t1=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t2=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t3=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t4=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t5=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t6=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t7=1+\n.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t8=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));","frame_eqs_str":"a.trel=a.q1-.33;a.t1=div(Math.floor(a.trel),3);a.t2=a.trel-Math.floor(a.trel);","point_eqs_str":"a.k1=mod(512*a.sample,8);a.t1=equal(a.k1,0)*mod(61*a.t1+27,4096)+(1-equal(a.k1,0))*a.t1;a.ampl=a.sample*sqrt(a.t2);a.f1=a.q4*a.ampl*Math.sin(div(6.28*a.t1,4096));a.f2=a.q4*a.ampl*Math.cos(div(6.28*a.t1,4096));a.x=a.q2+a.k1*a.f1;a.y=a.q3+a.k1*a.f2;a.a=equal(a.k1,6)+equal(a.k1,0);a.r=1;a.b=equal(a.k1,0);a.g=.6*(1+.6*equal(a.k1,0));a.a=a.a*a.q5*(1-0*a.t2*a.t2);","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"trel = q1-.33;\nt1 = int(trel)/3;\nt2 = trel - int(trel);\n\n\n","point_eqs_eel":"k1 = (sample*512) % 8;\n\nt1 = equal (k1,0)*((t1 * 61 + 27) % 4096) \n   + (1-equal(k1,0))*t1;\n\nampl = sample*sqrt(t2);\n\nf1 = q4*ampl* sin(t1*6.28/4096);\nf2 = q4*ampl* cos(t1*6.28/4096);\n\nx = q2 + k1* f1 ;\ny = q3 + k1* f2;\n\na = equal(k1,6) + equal (k1,0);\n\nr = 1;\nb = equal (k1,0);\ng = .6* (1+.6*equal (k1,0));\na = a * q5 * (1-0*t2*t2);\n//a = 0;"},{"baseVals":{"enabled":1,"spectrum":1,"g":0.6,"b":0},"init_eqs_str":"a.ampl=0;a.f2=0;a.t1=0;a.q1=0;a.q5=0;a.trel=0;a.k1=0;a.q4=0;a.f1=0;a.t2=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.trel=a.q1-.66;a.t1=Math.floor(a.trel);a.t2=a.trel-Math.floor(a.trel);","point_eqs_str":"a.k1=mod(512*a.sample,8);a.t1=equal(a.k1,0)*mod(61*a.t1+27,4096)+(1-equal(a.k1,0))*a.t1;a.ampl=a.sample*sqrt(a.t2);a.f1=a.q4*a.ampl*Math.sin(div(6.28*a.t1,4096));a.f2=a.q4*a.ampl*Math.cos(div(6.28*a.t1,4096));a.x=a.q2+a.k1*a.f1;a.y=a.q3+a.k1*a.f2;a.a=equal(a.k1,6)+equal(a.k1,0);a.r=1;a.b=equal(a.k1,0);a.g=.6*(1+.6*equal(a.k1,0));a.a=a.a*a.q5*(1-0*a.t2*a.t2);","init_eqs_eel":"","frame_eqs_eel":"trel = q1-.66;\nt1 = int(trel);\nt2 = trel - int(trel);","point_eqs_eel":"k1 = (sample*512) % 8;\n\nt1 = equal (k1,0)*((t1 * 61 + 27) % 4096) \n   + (1-equal(k1,0))*t1;\n\nampl = sample*sqrt(t2);\n\nf1 = q4*ampl* sin(t1*6.28/4096);\nf2 = q4*ampl* cos(t1*6.28/4096);\n\nx = q2 + k1* f1 ;\ny = q3 + k1* f2;\n\na = equal(k1,6) + equal (k1,0);\n\nr = 1;\nb = equal (k1,0);\ng = .6* (1+.6*equal (k1,0));\na = a * q5 * (1-0*t2*t2);\n//a = 0;"}],"init_eqs_str":"a.d=0;a.y3=0;a.y1=0;a.xx=0;a.q25=0;a.q12=0;a.x1=0;a.q22=0;a.q21=0;a.vx3=0;a.q6=0;a.dt=0;a.q1=0;a.q5=0;a.q9=0;a.v=0;a.vx4=0;a.mm=0;a.tt=0;a.bm=0;a.x3=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.xx2=0;a.q4=0;a.yy1=0;a.vy4=0;a.q26=0;a.x4=0;a.mt=0;a.r=0;a.x2=0;a.mx=0;a.mn=0;a.vy2=0;a.y2=0;a.bb=0;a.q2=0;a.q27=0;a.vx2=0;a.q3=0;a.yy=0;a.y4=0;a.q7=0;a.vy3=0;a.xx1=0;a.q8=0;a.x1=.9;a.y1=.5;a.x2=.5;a.y2=.5;a.x3=.5;a.y3=.5;a.x4=.5;a.y4=.5;","frame_eqs_str":"a.zoom=1;a.warp=0;a.wave_a=0;a.xx1=.9*a.xx1+.01*a.bass;a.xx2=.9*a.xx2+.01*a.treb;a.yy1=.94*a.yy1+.0075*(a.treb+a.bass);a.x1=.5+2*(a.xx1-a.xx2);a.y1=.4+1.5*a.yy1;a.dt=div(.03,a.fps);a.vx2=a.vx2*(1-2*a.dt)+10*a.dt*(a.x1+a.x3-2*a.x2);a.vy2=a.vy2*(1-2*a.dt)+a.dt*(10*(a.y1+a.y3-2*a.y2)-.5);a.vx3=a.vx3*(1-2*a.dt)+10*a.dt*(a.x2+a.x4-2*a.x3);a.vy3=a.vy3*(1-2*a.dt)+a.dt*(10*(a.y2+a.y4-2*a.y3)-.5);a.vx4=a.vx4*(1-2*a.dt)+10*a.dt*(a.x3-a.x4);a.vy4=a.vy4*(1-2*a.dt)+a.dt*(10*(a.y3-a.y4)-\n.5);a.x2+=a.vx2;a.y2+=a.vy2;a.x3+=a.vx3;a.y3+=a.vy3;a.x4+=a.vx4;a.y4+=a.vy4;a.vx2=.00001<Math.abs(above(a.x2,0))?a.vx2:.5*Math.abs(a.vx2);a.vx2=.00001<Math.abs(below(a.x2,1))?a.vx2:.5*-Math.abs(a.vx2);a.vx3=.00001<Math.abs(above(a.x3,0))?a.vx3:.5*Math.abs(a.vx3);a.vx3=.00001<Math.abs(below(a.x3,1))?a.vx3:.5*-Math.abs(a.vx3);a.vx4=.00001<Math.abs(above(a.x4,0))?a.vx4:.5*Math.abs(a.vx4);a.vx4=.00001<Math.abs(below(a.x4,1))?a.vx4:.5*-Math.abs(a.vx4);a.vy2=.00001<Math.abs(above(a.y2,0))?a.vy2:.5*Math.abs(a.vy2);\na.vy2=.00001<Math.abs(below(a.y2,1))?a.vy2:.5*-Math.abs(a.vy2);a.vy3=.00001<Math.abs(above(a.y3,0))?a.vy3:.5*Math.abs(a.vy3);a.vy3=.00001<Math.abs(below(a.y3,1))?a.vy3:.5*-Math.abs(a.vy3);a.vy4=.00001<Math.abs(above(a.y4,0))?a.vy4:.5*Math.abs(a.vy4);a.vy4=.00001<Math.abs(below(a.y4,1))?a.vy4:.5*-Math.abs(a.vy4);a.q1=a.x1;a.q2=a.x2;a.q3=a.x3;a.q4=a.x4;a.q5=a.y1;a.q6=a.y2;a.q7=a.y3;a.q8=a.y4;a.q9=div(1,a.aspectx);a.q10=div(1,a.aspecty);a.q11=a.aspectx;a.q12=a.aspecty;a.bb=.99*a.bb+.02*a.bass;a.mm=.99*\na.mm+.02*a.mid;a.tt=.99*a.tt+.02*a.treb;a.mx=Math.max(Math.max(a.bb,a.mm),a.tt);a.mn=Math.min(Math.min(a.bb,a.mm),a.tt);a.ob_r=div(a.bb-a.mn,a.mx-a.mn);a.ob_b=div(a.mm-a.mn,a.mx-a.mn);a.ob_g=div(a.tt-a.mn,a.mx-a.mn);a.v=div(.4,a.fps);a.bm+=(a.ob_r-a.ob_b)*a.v;a.mt+=(a.ob_b-a.ob_g)*a.v;a.q21=.5;a.q22=0;a.q23=-.5;a.q24=0;a.q25=div(.5,Math.asin(1));a.q26=-a.bm;a.q27=a.mt;","pixel_eqs_str":"a.x=.5+(a.x-.5)*a.q11;a.y=.5+(a.y-.5)*a.q12;a.xx=a.q4;a.yy=1-a.q8;a.dx=0;a.dy=0;a.d=sqrt((a.x-a.xx)*(a.x-a.xx)+(a.y-a.yy)*(a.y-a.yy));a.r=.11;a.v=20;a.dx=a.v*(Math.sin(a.y-a.yy)*(a.d-a.r)-(a.x-a.xx)*(a.d-div(a.r,2)))*(1-sigmoid(a.d-a.r,100));a.dy=-a.v*(Math.sin(a.x-a.xx)*(a.d-a.r)+(a.y-a.yy)*(a.d-div(a.r,2)))*(1-sigmoid(a.d-a.r,100));","init_eqs_eel":"x1 = 0.9;\ny1 = 0.5;\n\nx2 = 0.5; y2 = 0.5;\nx3 = 0.5; y3 = 0.5;\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"zoom = 1;\nwarp = 0;\nwave_a = 0;\n\n// elastic thread code\n\nxx1 = xx1*0.9 + (bass)*0.01;\nxx2 = xx2*0.9 + (treb)*0.01;\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\nx1 = 0.5 + (xx1-xx2)*2;\ny1 = 0.4 + yy1*1.5;\ndt = 0.03/fps;\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\nx2 = x2 + vx2; y2 = y2 + vy2;\nx3 = x3 + vx3; y3 = y3 + vy3;\nx4 = x4 + vx4; y4 = y4 + vy4;\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\nq9 = 1/aspectx;\nq10 = 1/aspecty;\nq11 = aspectx;\nq12 = aspecty;\n\n// coloring borders\nbb = bb*0.99 + bass*0.02;\nmm = mm*0.99 + mid*0.02;\ntt = tt*0.99 + treb*0.02;\n\nmx = max(max(bb,mm),tt);\nmn = min(min(bb,mm),tt);\n\nob_r = (bb-mn)/(mx-mn);\nob_b = (mm-mn)/(mx-mn);\nob_g = (tt-mn)/(mx-mn);\n\nv = 0.4/fps;\nbm = bm + (ob_r-ob_b)*v;\nmt = mt + (ob_b-ob_g)*v;\n\n// coordinates spiral 1\nq21 = 0.5; // X\nq22 = 0; // Y\n\n// coordinates spiral 2\nq23 = -0.5;\nq24 = 0;\n\nq25 = 0.5/asin(1); // pi/4\n\nq26 = -bm; // rotation\nq27 = mt; // growth","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q11;\ny = 0.5 + (y-0.5)*q12;\nxx = q4;\nyy = 1-q8;\n\ndx = 0; dy = 0;\n\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\n\nr = 0.11;\nv = 20;\ndx = (v*(sin(y-yy)*(d-r)-(x-xx)*(d-r/2)))*(1.00-sigmoid(d-r,100));\ndy = (-v*(sin(x-xx)*(d-r)+(y-yy)*(d-r/2)))*(1.00-sigmoid(d-r,100));","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\n   / 2.0) + q23)) + 1.0).xyz;\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\n  tmpvar_4.y = tmpvar_3.y;\n  ret_1 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\n   - \n    (tmpvar_2 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_3 * 0.01)\n  .xy)).xyz + (tmpvar_2 * 0.1)));\n  float tmpvar_5;\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\n  ret_1 = (ret_1 - 0.04);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":"vec2 xlat_mutabled;\nvec2 xlat_mutabledenominator;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\nvec2 xlat_mutablenumerator;\n shader_body { \n  vec2 spiral_1;\n  vec2 c_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv - 0.5) * 2.0) * aspect.wz);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q21;\n  tmpvar_4.y = q22;\n  xlat_mutablenumerator = ((tmpvar_3 + tmpvar_4) * 64.0);\n  vec2 tmpvar_5;\n  tmpvar_5.x = q23;\n  tmpvar_5.y = q24;\n  xlat_mutabledenominator = (tmpvar_3 + tmpvar_5);\n  vec2 tmpvar_6;\n  tmpvar_6.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n  tmpvar_6.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n  c_2 = ((tmpvar_6 / (\n    (xlat_mutabledenominator.x * xlat_mutabledenominator.x)\n   + \n    (xlat_mutabledenominator.y * xlat_mutabledenominator.y)\n  )) - 0.5);\n  float tmpvar_7;\n  float tmpvar_8;\n  tmpvar_8 = (min (abs(\n    (c_2.x / c_2.y)\n  ), 1.0) / max (abs(\n    (c_2.x / c_2.y)\n  ), 1.0));\n  float tmpvar_9;\n  tmpvar_9 = (tmpvar_8 * tmpvar_8);\n  tmpvar_9 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_9) + 0.05368138) * tmpvar_9) - 0.1173503)\n     * tmpvar_9) + 0.1938925) * tmpvar_9) - 0.3326756)\n   * tmpvar_9) + 0.9999793) * tmpvar_8);\n  tmpvar_9 = (tmpvar_9 + (float(\n    (abs((c_2.x / c_2.y)) > 1.0)\n  ) * (\n    (tmpvar_9 * -2.0)\n   + 1.570796)));\n  tmpvar_7 = (tmpvar_9 * sign((c_2.x / c_2.y)));\n  if ((abs(c_2.y) > (1e-08 * abs(c_2.x)))) {\n    if ((c_2.y < 0.0)) {\n      if ((c_2.x >= 0.0)) {\n        tmpvar_7 += 3.141593;\n      } else {\n        tmpvar_7 = (tmpvar_7 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_7 = (sign(c_2.x) * 1.570796);\n  };\n  float tmpvar_10;\n  tmpvar_10 = -(tmpvar_7);\n  vec2 tmpvar_11;\n  tmpvar_11.x = ((tmpvar_10 * q25) + q26);\n  tmpvar_11.y = (((\n    (0.4 * aspect.w)\n   * \n    log(sqrt(dot (c_2, c_2)))\n  ) + (tmpvar_10 * q25)) + q27);\n  spiral_1 = (0.5 + ((0.5 - \n    abs(((fract(\n      (tmpvar_11 * 0.5)\n    ) * 2.0) - 1.0))\n  ) * 0.95));\n  xlat_mutabled = (texsize.zw * 8.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (spiral_1 + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (spiral_1 - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (spiral_1 + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (spiral_1 - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_12;\n  tmpvar_12 = (((\n    -(xlat_mutabledx)\n   + xlat_mutabledy) + 1.0) * 1.2);\n  xlat_mutabled = (texsize.zw * 2.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (spiral_1 + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (spiral_1 - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (spiral_1 + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (spiral_1 - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_13;\n  tmpvar_13.x = xlat_mutabledx.x;\n  tmpvar_13.y = xlat_mutabledy.x;\n  float tmpvar_14;\n  tmpvar_14 = sqrt(dot (tmpvar_13, tmpvar_13));\n  vec3 tmpvar_15;\n  tmpvar_15 = mix (((vec3(0.5, 0.4, 0.6) * texture (sampler_main, spiral_1).x) * tmpvar_12.x), (vec3(8.0, 5.0, 2.0) * tmpvar_14), vec3((tmpvar_14 * 4.2)));\n  vec2 tmpvar_16;\n  tmpvar_16.x = xlat_mutabledx.z;\n  tmpvar_16.y = xlat_mutabledy.z;\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = mix (mix (tmpvar_15, (4.0 * tmpvar_15), (\n    (texture (sampler_main, spiral_1).y * 0.5)\n   - \n    (vec3(0.09, 0.3, 0.3) * ((texture (sampler_blur1, spiral_1).xyz * scale1) + bias1).z)\n  )), vec3(2.0, 2.0, 0.0), vec3((sqrt(\n    dot (tmpvar_16, tmpvar_16)\n  ) * 0.7)));\n  ret = tmpvar_17.xyz;\n }","warp_hlsl":"shader_body {\n\n//uv = uv_orig;\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat2 tmp = uv1;\ntmp.x = ang*3; tmp.y = rad;\nuv1 = tmp;\n\nfloat3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);\n\nfloat3 ret1 = GetBlur1 (uv)-.3;\nfloat3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;\nfloat3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;\n\nret = -.4*blur + crisp;\n    \n ret *= 0.98 * pow(1-.01*q28*q28*rad,2); \n  ret -= 0.04;\n}","comp_hlsl":"float2 d, uv_y;\nfloat3 dx, dy;\nfloat2 numerator, denominator, fraction;\n\nshader_body\n{\n\n/*** Flexis cleaned up Moebius spiral code ***/\n\nfloat cutoff = 0.95;\nint n = -1;\nfloat s = 0.4;\n\n   float2 c = (uv-0.5)*2*aspect.wz;\n   numerator = (c + float2(q21,q22))*64;\n   denominator = c + float2(q23,q24);\n   fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,\n                      numerator.y*denominator.x - numerator.x*denominator.y)/\n                      (denominator.x*denominator.x + denominator.y*denominator.y);\n   c = fraction-0.5;\n   float1 ang_hq = n*atan2(c.x,c.y);\n   float2 spiral = float2(ang_hq*q25+q26,s*aspect.w*log(length(c))+ang_hq*q25+q27);\n   spiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*cutoff; // mirror\n\n/**********************************************/\nfloat2 uvo = uv;\nuv = spiral;\n\n    d = texsize.zw*8;\n    dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat3 base = GetPixel(uv);\nfloat3 emboss = (-dx + dy + 1)*1.2;\n\n    d = texsize.zw*2;\n    dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat grad = length(float2(dx.x,dy.x));\n\nret = lerp( float3(0.5,0.4,0.6)*base.x*emboss.x,\n            float3(8,5,2)*grad,\n            grad*4.2\n          ); \nret = lerp(ret,4*ret,GetPixel(uv).y*0.5-GetBlur1(uv).z*0.3*float3(0.3,1,1));\n\ngrad = length(float2(dx.z,dy.z));\nret = lerp(ret, float3(2,2,0), grad*0.7);\n}\n"}