{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.9,"echo_zoom":1,"echo_orient":3,"wave_mode":3,"additivewave":1,"wave_a":0.002,"wave_scale":0.387,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":43.865,"warpscale":3.646,"warp":0.001,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_b":0.3,"ob_a":1,"ib_size":0.05,"ib_r":1,"ib_a":1,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"additive":1,"textured":1,"rad":0.6623,"g":1,"b":1,"a":0.7,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.btime=0;a.bt=0;a.ox=0;a.oy=0;a.ox=.5;a.oy=.5;","frame_eqs_str":"a.btime+=Math.min(.1*a.bass,.05);a.ang=.1*a.btime;a.r=Math.abs(Math.sin(1.4*a.time+5));a.g=Math.abs(Math.sin(1.6*a.time+3));a.b=Math.abs(Math.sin(1.8*a.time+1));a.bt=a.btime*sign(Math.sin(div(a.time,a.fps)));a.x=a.ox+.01*Math.sin(a.bt)+.005*Math.sin(a.bt+a.bass);a.x=.00001<Math.abs(above(a.x,1))?1+(1-a.x):a.x;a.y=a.oy+.01*Math.cos(a.bt)+.005*Math.cos(a.bt+a.bass);a.y=.00001<Math.abs(above(a.y,1))?1+(1-a.y):a.y;a.x=.00001<Math.abs(below(a.x,0))?-a.x:a.x;a.y=.00001<Math.abs(below(a.y,\n0))?-a.y:a.y;a.ox=a.x;a.oy=a.y;","init_eqs_eel":"ox = 0.5;\noy = 0.5;","frame_eqs_eel":"btime = btime + min(bass*0.1,0.05);\nang = btime*.1;\nr = abs(sin(time*1.4+5));\ng = abs(sin(time*1.6+3));\nb = abs(sin(time*1.8+1));\nbt = btime*sign(sin(time/fps));\nx = ox + 0.01*sin(bt) + 0.005*sin(bt+bass);\nx = if(above(x,1),1+(1-x),x);\ny = oy + 0.01*cos(bt) + 0.005*cos(bt+bass);\ny = if(above(y,1),1+(1-y),y);\nx = if(below(x,0),-x,x);\ny = if(below(y,0),-y,y);\nox = x;\noy = y;"},{"baseVals":{"enabled":1,"sides":33,"additive":1,"rad":0.54279,"r":0.5,"g":0.5,"b":0.5,"a":0.7,"r2":0.5,"g2":0.5,"b2":0.5,"border_a":0},"init_eqs_str":"a.bv=0;a.tt=0;","frame_eqs_str":"a.bv=.1*a.treb+.7*a.bv;a.tt+=.05*a.bv;a.r+=.2*Math.sin(1.4*a.tt+5);a.g+=.2*Math.sin(1.6*a.tt+3);a.b+=.2*Math.sin(1.8*a.tt+1);a.r2=a.r;a.b2=a.b;a.g2=a.g;a.x=.5+.3*Math.sin(a.tt)+.1*Math.sin(a.time);a.y=.5+.3*Math.cos(a.tt)+.1*Math.cos(a.time);","init_eqs_eel":"","frame_eqs_eel":"bv = treb*.1+.7*bv;\ntt=tt+bv*0.05;\nr = r+0.2*sin(tt*1.4+5);\ng = g+0.2*sin(tt*1.6+3);\nb = b+0.2*sin(tt*1.8+1);\nr2 = r;\nb2 = b;\ng2 = g;\nx = 0.5 + 0.3*sin(tt) + 0.1*sin(time);\ny = 0.5 + 0.3*cos(tt) + 0.1*cos(time);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.scale=0;a.q6=0;a.q1=0;a.q5=0;a.bthresh2=0;a.ow=0;a.bthresh=0;a.tt=0;a.angle=0;a.q11=0;a.rate=0;a.beat2=0;a.q4=0;a.bv=0;a.beat=0;a.q2=0;a.q3=0;a.q7=0;a.q8=0;a.tt=rand(1E4);","frame_eqs_str":"a.warp=0;a.rate=div(a.fps,a.fps+2);a.bv=.1*a.bass+.7*a.bv;a.tt+=.05*a.bv;a.beat=above(a.bass*a.bass_att,a.bthresh);a.bthresh=15*a.beat+(1-a.beat)*((a.bthresh-4.5)*a.rate+4.5);a.beat2=above(a.mid,a.bthresh2);a.bthresh2=15*a.beat2+(1-a.beat2)*((a.bthresh2-1.5)*a.rate+1.5);a.warp=3*a.beat2+(1-a.beat2)*a.ow;a.ow=a.warp*a.rate*a.rate;a.tt=.00001<Math.abs(a.beat)?rand(32768):a.tt;a.wave_x=-1;a.dx=.3*Math.sin(.12*a.tt)+10*Math.sin(.015*a.tt);a.dy=.39*Math.sin(.21*a.tt)+20*Math.sin(.041*\na.tt);a.rot=Math.sin(.15*a.tt);a.cx=.5*Math.sin(.16*a.tt)+.5;a.cy=.5*Math.cos(.46*a.tt)+.5;a.ib_r=.5*Math.sin(.51*a.tt)+.5;a.ib_g=.5*Math.sin(.71*a.tt)+.5;a.ib_b=.5*Math.sin(.81*a.tt)+.5;a.ib_a=1-pow(.5,div(a.mid_att+a.bass_att+a.treb_att,3));a.monitor=1-pow(.5,a.mid_att+a.bass_att+a.treb_att);a.scale=8;a.angle=.1*-a.time;a.q1=a.scale*Math.cos(a.angle);a.q2=a.scale*Math.sin(a.angle);a.q3=0;a.q4=.3;a.scale=.8;a.angle=.1*a.time;a.q5=a.scale*Math.cos(a.angle);a.q6=a.scale*Math.sin(a.angle);a.q7=-.25;\na.q8=.2;a.q11=div(1,Math.asin(1));","pixel_eqs_str":"a.zoom=.8-.2*pow(1-a.rad,1);","init_eqs_eel":"tt = rand(10000);","frame_eqs_eel":"warp = 0;\nrate = fps/(fps+2);\nbv = bass*.1+.7*bv;\ntt=tt+bv*0.05;\n\nbeat = above(bass*bass_att,bthresh);\nbthresh = beat*15 + (1-beat)*((bthresh - 4.5)*rate + 4.5);\n\nbeat2 = above(mid,bthresh2);\nbthresh2 = beat2*15 + (1-beat2)*((bthresh2 - 1.5)*rate + 1.5);\n\nwarp = beat2*3 + (1-beat2)*ow;\now = warp*rate*rate;\n\ntt = if(beat,rand(32768),tt);\nwave_x =-1;\ndx = .3*sin(tt*.12)+10*sin(tt*.015);\ndy = .39*sin(tt*.21)+20*sin(tt*.041);\nrot = 1*sin(tt*.15);\ncx = sin(tt*.16)*.5+.5;\ncy = cos(tt*.46)*.5+.5;\nib_r = sin(tt*.51)*.5+.5;\nib_g = sin(tt*.71)*.5+.5;\nib_b = sin(tt*.81)*.5+.5;\nib_a = 1-pow(.5,(mid_att + bass_att + treb_att)/3);\nmonitor = 1-pow(.5,mid_att + bass_att + treb_att);\n\n\n// a\nscale = 8;\nangle = -time*0.1;\n\nq1 = scale*cos(angle); // the real part\nq2 = scale*sin(angle); // the imaginary part\n\n// b\n\nq3 = 0; // the real part\nq4 = 0.3; // the imaginary part\n\n// c\nscale = 0.8;\nangle = time*0.1;\n\nq5 = scale*cos(angle); // the real part\nq6 = scale*sin(angle); // the imaginary part\n\n// d\nq7 = -0.25; // the real part\nq8 = 0.2; // the imaginary part\n\nq11 = 1/asin(1);","pixel_eqs_eel":"zoom = .8-.2*pow(1-rad,1);\n//cx = q8*(0&(x*10-0.5))*0.1+0.05;\n//cy = q8*(0&(y*10-0.5))*0.1+0.05;","warp":"","comp":"vec2 xlat_mutabledenominator;\nvec2 xlat_mutablenumerator;\n shader_body { \n  vec2 uv_1;\n  vec2 spiral_2;\n  uv_1 = (((uv - 0.5) * aspect.xy) * 2.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((uv_1.x * q1) - (uv_1.y * q2));\n  tmpvar_3.y = ((uv_1.x * q2) + (uv_1.y * q1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = q3;\n  tmpvar_4.y = q4;\n  xlat_mutablenumerator = (tmpvar_3 + tmpvar_4);\n  vec2 tmpvar_5;\n  tmpvar_5.x = ((uv_1.x * q5) - (uv_1.y * q6));\n  tmpvar_5.y = ((uv_1.x * q6) + (uv_1.y * q5));\n  vec2 tmpvar_6;\n  tmpvar_6.x = q7;\n  tmpvar_6.y = q8;\n  xlat_mutabledenominator = (tmpvar_5 + tmpvar_6);\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n  tmpvar_7.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n  uv_1 = ((tmpvar_7 / (\n    (xlat_mutabledenominator.x * xlat_mutabledenominator.x)\n   + \n    (xlat_mutabledenominator.y * xlat_mutabledenominator.y)\n  )) * 0.5);\n  vec2 tmpvar_8;\n  tmpvar_8 = ((uv_1 - 0.5) * aspect.wz);\n  float tmpvar_9;\n  float tmpvar_10;\n  tmpvar_10 = (min (abs(\n    (tmpvar_8.x / tmpvar_8.y)\n  ), 1.0) / max (abs(\n    (tmpvar_8.x / tmpvar_8.y)\n  ), 1.0));\n  float tmpvar_11;\n  tmpvar_11 = (tmpvar_10 * tmpvar_10);\n  tmpvar_11 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_11) + 0.05368138) * tmpvar_11) - 0.1173503)\n     * tmpvar_11) + 0.1938925) * tmpvar_11) - 0.3326756)\n   * tmpvar_11) + 0.9999793) * tmpvar_10);\n  tmpvar_11 = (tmpvar_11 + (float(\n    (abs((tmpvar_8.x / tmpvar_8.y)) > 1.0)\n  ) * (\n    (tmpvar_11 * -2.0)\n   + 1.570796)));\n  tmpvar_9 = (tmpvar_11 * sign((tmpvar_8.x / tmpvar_8.y)));\n  if ((abs(tmpvar_8.y) > (1e-08 * abs(tmpvar_8.x)))) {\n    if ((tmpvar_8.y < 0.0)) {\n      if ((tmpvar_8.x >= 0.0)) {\n        tmpvar_9 += 3.141593;\n      } else {\n        tmpvar_9 = (tmpvar_9 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_9 = (sign(tmpvar_8.x) * 1.570796);\n  };\n  vec2 tmpvar_12;\n  tmpvar_12.x = ((tmpvar_9 * q11) * 2.0);\n  tmpvar_12.y = (((aspect.w * \n    log(sqrt(dot (tmpvar_8, tmpvar_8)))\n  ) + (tmpvar_9 * q11)) - time);\n  spiral_2 = (0.5 + ((0.5 - \n    abs(((fract(\n      (tmpvar_12 * 0.5)\n    ) * 2.0) - 1.0))\n  ) * 0.95));\n  uv_1 = spiral_2;\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = texture (sampler_main, spiral_2).xyz;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"","comp_hlsl":"sampler sampler_sunrise;\n\nfloat2 factorA, factorB, product;\nfloat2 numerator, denominator, fraction;\n\nshader_body\n{\nfloat2 uvo = uv;\n//*** Flexis Moebius transformation code\n\nuv = (uv-0.5)*aspect.xy*2;\nfactorA = uv;\nfactorB = float2(q1,q2);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part\n                  factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part\n\nnumerator = product + float2(q3,q4);\n\nfactorA = uv;\nfactorB = float2(q5,q6);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part\n                  factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part\n\n\ndenominator = product + float2(q7,q8);\n\nfraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part\n                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part\n                   (denominator.x*denominator.x + denominator.y*denominator.y);\n\nuv = fraction*0.5;\n\n// ***\n\n\n// *** Flexis logarithmic spiral code\n\nfloat t = time; // set velocity here\nfloat2 c = (uv-0.5)*aspect.wz;\nfloat1 ang_hq = atan2(c.x,c.y);\n// q11 = 1/asin(1); from the init section\nfloat2 spiral = float2(ang_hq*q11*2+t*0,aspect.w*log(length(c))+ang_hq*q11-t);\nspiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*0.95; // mirror\nuv = spiral;\n\n// ***\n\nret = tex2d(sampler_main,spiral);\n//ret = GetPixel(uvo);\n}"}