{"version":2,"baseVals":{"rating":5,"gammaadj":1.21,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.8,"wave_g":0.49,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"additive":1,"rad":0.04896,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0,"g":1,"b":1,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\ntrel = time/3;\n\nx = .5+sin(trel*2);\ny = .5+cos(trel*1.3);\n\n\n\n\nrad = .1;\na = .8;","init_eqs_eel":"","frame_eqs_eel":"\ntrel = time/3;\n\nx = .5+sin(trel*2);\ny = .5+cos(trel*1.3);\n\n\n\n\nrad = .1;\na = .8;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_zoom = q27;","init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27;"},{"baseVals":{"sides":44,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = int(rand(50))/50;\ny = .5;\n\nr = .4;\ng = .6;\nb = 1;\nr2 = r;\ng2 = g;\nb2 = b;\n\na2 = min(q21/2 ,1)/2;\n\na = 0;\n\nrad = a2 * (.1+abs(x-.5))/2 ;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(50))/50;\ny = .5;\n\nr = .4;\ng = .6;\nb = 1;\nr2 = r;\ng2 = g;\nb2 = b;\n\na2 = min(q21/2 ,1)/2;\n\na = 0;\n\nrad = a2 * (.1+abs(x-.5))/2 ;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.76,"rad":0.39478,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"a2":0.8,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_zoom = q27/2;","init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27/2;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"thick":1,"additive":1,"scaling":7.858,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"xi = int(rand(100))/100;\nyi = int(rand(100))/100;\n\nx = xi; y = yi;\n\na = q21/15;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = int(rand(100))/100;\nyi = int(rand(100))/100;\n\nx = xi; y = yi;\n\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q21=0;a.q22=0;a.q23=0;a.q24=0;a.q25=0;a.q26=0;a.q27=0;a.q21=div(1,Math.asin(1));","frame_eqs_str":"a.q21=0;a.q22=-.5;a.q23=0;a.q24=.5;a.q25=div(.5,Math.asin(1));a.q26=.1*a.time;a.q27=.1*-a.time;","pixel_eqs_str":"","init_eqs_eel":"q21 = 1/asin(1);","frame_eqs_eel":"// coordinates spiral 1\nq21 = 0; // X\nq22 = -0.5; // Y\n\n// coordinates spiral 2\nq23 = 0;\nq24 = 0.5;\n\nq25 = 0.5/asin(1); // pi/4\n\nq26 = time*0.1; // rotation\nq27 = -time*0.1; // growth","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\n   / 2.0) + q23)) + 1.0).xyz;\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\n  tmpvar_4.y = tmpvar_3.y;\n  ret_1 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\n   - \n    (tmpvar_2 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_3 * 0.01)\n  .xy)).xyz + (tmpvar_2 * 0.1)));\n  float tmpvar_5;\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\n  ret_1 = (ret_1 - 0.04);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":"vec2 xlat_mutabled;\nvec2 xlat_mutabledenominator;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\nvec2 xlat_mutablenumerator;\n shader_body { \n  vec2 spiral_1;\n  vec2 c_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv - 0.5) * 2.0) * aspect.wz);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q21;\n  tmpvar_4.y = q22;\n  xlat_mutablenumerator = ((tmpvar_3 + tmpvar_4) * 64.0);\n  vec2 tmpvar_5;\n  tmpvar_5.x = q23;\n  tmpvar_5.y = q24;\n  xlat_mutabledenominator = (tmpvar_3 + tmpvar_5);\n  vec2 tmpvar_6;\n  tmpvar_6.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n  tmpvar_6.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n  c_2 = ((tmpvar_6 / (\n    (xlat_mutabledenominator.x * xlat_mutabledenominator.x)\n   + \n    (xlat_mutabledenominator.y * xlat_mutabledenominator.y)\n  )) - 0.5);\n  float tmpvar_7;\n  float tmpvar_8;\n  tmpvar_8 = (min (abs(\n    (c_2.x / c_2.y)\n  ), 1.0) / max (abs(\n    (c_2.x / c_2.y)\n  ), 1.0));\n  float tmpvar_9;\n  tmpvar_9 = (tmpvar_8 * tmpvar_8);\n  tmpvar_9 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_9) + 0.05368138) * tmpvar_9) - 0.1173503)\n     * tmpvar_9) + 0.1938925) * tmpvar_9) - 0.3326756)\n   * tmpvar_9) + 0.9999793) * tmpvar_8);\n  tmpvar_9 = (tmpvar_9 + (float(\n    (abs((c_2.x / c_2.y)) > 1.0)\n  ) * (\n    (tmpvar_9 * -2.0)\n   + 1.570796)));\n  tmpvar_7 = (tmpvar_9 * sign((c_2.x / c_2.y)));\n  if ((abs(c_2.y) > (1e-08 * abs(c_2.x)))) {\n    if ((c_2.y < 0.0)) {\n      if ((c_2.x >= 0.0)) {\n        tmpvar_7 += 3.141593;\n      } else {\n        tmpvar_7 = (tmpvar_7 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_7 = (sign(c_2.x) * 1.570796);\n  };\n  float tmpvar_10;\n  tmpvar_10 = -(tmpvar_7);\n  vec2 tmpvar_11;\n  tmpvar_11.x = ((tmpvar_10 * q25) + q26);\n  tmpvar_11.y = (((\n    (0.4 * aspect.w)\n   * \n    log(sqrt(dot (c_2, c_2)))\n  ) + (tmpvar_10 * q25)) + q27);\n  spiral_1 = (0.5 + ((0.5 - \n    abs(((fract(\n      (tmpvar_11 * 0.5)\n    ) * 2.0) - 1.0))\n  ) * 0.95));\n  xlat_mutabled = (texsize.zw * 8.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (spiral_1 + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (spiral_1 - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (spiral_1 + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (spiral_1 - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_12;\n  tmpvar_12 = (((\n    -(xlat_mutabledx)\n   + xlat_mutabledy) + 1.0) * 1.2);\n  xlat_mutabled = (texsize.zw * 2.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (spiral_1 + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (spiral_1 - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (spiral_1 + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (spiral_1 - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_13;\n  tmpvar_13.x = xlat_mutabledx.x;\n  tmpvar_13.y = xlat_mutabledy.x;\n  float tmpvar_14;\n  tmpvar_14 = sqrt(dot (tmpvar_13, tmpvar_13));\n  vec3 tmpvar_15;\n  tmpvar_15 = mix (((vec3(0.5, 0.4, 0.6) * texture (sampler_main, spiral_1).x) * tmpvar_12.x), (vec3(8.0, 5.0, 2.0) * tmpvar_14), vec3((tmpvar_14 * 4.2)));\n  vec2 tmpvar_16;\n  tmpvar_16.x = xlat_mutabledx.z;\n  tmpvar_16.y = xlat_mutabledy.z;\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = mix (mix (tmpvar_15, (4.0 * tmpvar_15), (\n    (texture (sampler_main, spiral_1).y * 0.5)\n   - \n    (vec3(0.09, 0.3, 0.3) * ((texture (sampler_blur1, spiral_1).xyz * scale1) + bias1).z)\n  )), vec3(2.0, 2.0, 0.0), vec3((sqrt(\n    dot (tmpvar_16, tmpvar_16)\n  ) * 0.7)));\n  ret = tmpvar_17.xyz;\n }","warp_hlsl":"shader_body {\n\n//uv = uv_orig;\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat2 tmp = uv1;\ntmp.x = ang*3; tmp.y = rad;\nuv1 = tmp;\n\nfloat3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);\n\nfloat3 ret1 = GetBlur1 (uv)-.3;\nfloat3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;\nfloat3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;\n\nret = -.4*blur + crisp;\n    \n ret *= 0.98 * pow(1-.01*q28*q28*rad,2); \n  ret -= 0.04;\n}","comp_hlsl":"float2 d, uv_y;\nfloat3 dx, dy;\nfloat2 numerator, denominator, fraction;\n\nshader_body\n{\n\n/*** Flexis cleaned up Moebius spiral code ***/\n\nfloat cutoff = 0.95;\nint n = -1;\nfloat s = 0.4;\n\n   float2 c = (uv-0.5)*2*aspect.wz;\n   numerator = (c + float2(q21,q22))*64;\n   denominator = c + float2(q23,q24);\n   fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,\n                      numerator.y*denominator.x - numerator.x*denominator.y)/\n                      (denominator.x*denominator.x + denominator.y*denominator.y);\n   c = fraction-0.5;\n   float1 ang_hq = n*atan2(c.x,c.y);\n   float2 spiral = float2(ang_hq*q25+q26,s*aspect.w*log(length(c))+ang_hq*q25+q27);\n   spiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*cutoff; // mirror\n\n/**********************************************/\nfloat2 uvo = uv;\nuv = spiral;\n\n    d = texsize.zw*8;\n    dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat3 base = GetPixel(uv);\nfloat3 emboss = (-dx + dy + 1)*1.2;\n\n    d = texsize.zw*2;\n    dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat grad = length(float2(dx.x,dy.x));\n\nret = lerp( float3(0.5,0.4,0.6)*base.x*emboss.x,\n            float3(8,5,2)*grad,\n            grad*4.2\n          ); \nret = lerp(ret,4*ret,GetPixel(uv).y*0.5-GetBlur1(uv).z*0.3*float3(0.3,1,1));\n\ngrad = length(float2(dx.z,dy.z));\nret = lerp(ret, float3(2,2,0), grad*0.7);\n}\n"}