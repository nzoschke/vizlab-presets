{"version":2,"baseVals":{"rating":5,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":4.619,"wave_scale":0.286,"wave_smoothing":0,"modwavealphastart":1.9,"modwavealphaend":1.9,"warpanimspeed":0.01,"warpscale":0.01,"zoomexp":2.11299,"zoom":1.01,"warp":0.01,"wave_r":0.48,"wave_g":0.61,"wave_b":0.79,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"num_inst":1024,"rad":0.01,"r2":1,"g2":0.86,"a2":0.7,"border_a":0},"init_eqs_str":"a.dir=0;a.d=0;a.n=0;a.n=1024;a.dir=1;","frame_eqs_str":"a.dir*=.00001<Math.abs(above(a.bass,1.3))?-1:1;a.d=div(.2*a.instance,a.n);a.r=a.mid*a.time*3.1824*a.treb;a.x=.5+a.dir*Math.cos(a.r)*a.d*.005-a.dir*Math.sin(-a.d+.5*a.mid*a.time)*a.d*10;a.y=.5+a.dir*Math.sin(a.r)*a.d*.005+a.dir*Math.cos(-a.d+.5*a.mid*a.time)*a.d*10;","init_eqs_eel":"n=1024;\ndir=1;","frame_eqs_eel":"\ndir*=if(above(bass,1.3),-1,1);\nd=0.2*instance/n;//bass*0.4;\nr=mid*time*3.1824*treb; \nx=.5+dir*cos(r)*d*.005-dir*sin(-d+0.5*mid*time)*d*10;\ny=.5+dir*sin(r)*d*.005+dir*cos(-d+0.5*mid*time)*d*10;"},{"baseVals":{"enabled":1,"sides":36,"thickoutline":1,"textured":1,"rad":1.21524,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.a=a.bass;a.rad=div(a.bass+a.mid+a.treb,3);a.x=.00001<Math.abs(below(a.bass,1.2))?.1*rand(10)*a.treb:.5;a.y=.00001<Math.abs(below(a.bass,1.2))?.1*rand(10)*a.mid:.5;a.r=1-(.7+.5*Math.abs(Math.sin(.05*a.time+.5*a.bass)));a.g=1-(.5+.5*Math.abs(Math.cos(.05*a.time-.4*a.mid)));a.b=1-(.5+.5*Math.abs(Math.sin(.05*a.time+.6*a.treb)));","init_eqs_eel":"","frame_eqs_eel":"a=bass;\nrad=(bass+mid+treb)/3;\nx=if(below(bass,1.2),rand(10)*0.1*treb,0.5);\ny=if(below(bass,1.2),rand(10)*0.1*mid,0.5);\n\nr=1-(0.7+0.5*abs(sin(0.05*time+0.5*bass)));\ng=1-(0.5+0.5*abs(cos(0.05*time-0.4*mid)));\nb=1-(0.5+0.5*abs(sin(0.05*time+0.6*treb)));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.y3=0;a.z2=0;a.y1=0;a.w=0;a.xs=0;a.h3=0;a.q12=0;a.x1=0;a.vt=0;a.z4=0;a.bt=0;a.v=0;a.z3=0;a.mm=0;a.xc=0;a.h2=0;a.dst=0;a.tt=0;a.my=0;a.bm=0;a.zs=0;a.x3=0;a.ys=0;a.q11=0;a.q10=0;a.q4=0;a.zc=0;a.mz=0;a.x4=0;a.p2=0;a.mt=0;a.i=0;a.x2=0;a.mx=0;a.mn=0;a.y2=0;a.bb=0;a.h1=0;a.z1=0;a.q3=0;a.y4=0;a.yc=0;a.ct=0;a.n=400;a.r=.5;a.mx=0;a.my=0;a.mz=0;a.dst=2;a.rx=0;a.ry=0;a.rz=0;a.rdx=1;a.rdy=1;a.rdz=1;a.p=3.14159265;a.p2=2*a.p;a.p3=div(180,a.p);a.dir=1;","frame_eqs_str":"a.rot-=.0125*a.bass*Math.sin(a.time+a.bass);a.bb=.99*a.bb+.02*a.bass;a.mm=.99*a.mm+.02*a.mid;a.tt=.99*a.tt+.02*a.treb;a.mx=Math.max(Math.max(a.bb,a.mm),a.tt);a.mn=Math.min(Math.min(a.bb,a.mm),a.tt);a.h1=div(a.bb-a.mn,a.mx-a.mn);a.h2=div(a.mm-a.mn,a.mx-a.mn);a.h3=div(a.tt-a.mn,a.mx-a.mn);a.v=div(.1333,a.fps);a.bm+=(a.h1-a.h2)*a.v;a.mt+=(a.h2-a.h3)*a.v;a.bt+=(a.h1-a.h3)*a.v;a.w=2*a.bm;a.q3=Math.sin(a.w);a.q4=Math.cos(a.w);a.q10=a.bm;a.q11=a.mt;a.q12=a.bt;","pixel_eqs_str":"a.vt=div(Math.sin(a.i*a.p2*4)*(a.v+1),2);a.x1=Math.sin(a.i*a.p2*2);a.y1=.00001<Math.abs(below(a.i,.5))?a.vt:0;a.z1=.00001<Math.abs(above(a.i,.5))?a.vt:0;a.y2=a.y1*a.xc-a.z1*a.xs;a.z2=a.y1*a.xs+a.z1*a.xc;a.x2=a.z2*a.ys+a.x1*a.yc;a.z3=a.z2*a.yc-a.x1*a.ys;a.x3=a.x2*a.zc-a.y2*a.zs;a.y3=a.y2*a.zc+a.x2*a.zs;a.x4=a.mx+a.x3;a.y4=a.my+a.y3;a.z4=a.mz+a.z3;a.x=div(a.x4,1+div(a.z4,a.dst));a.y=div(a.y4,1+div(a.z4,a.dst));","init_eqs_eel":"//init\nct=0;\nn=400;\nr=0.5;\nmx=0;\nmy=0;\nmz=0;\ndst=2;\nrx=0;\nry=0;\nrz=0;\nrdx=1;\nrdy=1;\nrdz=1;\np=3.14159265;\np2=2.0*p;\np3=180/p;\n\n\ndir=1;","frame_eqs_eel":"//dx-=0.0125*sin(0.02*time+treb);\n//dy-=0.0125*cos(0.02*time+mid);\n\nrot-=0.0125*(bass)*sin(time+bass);\n\nbb = bb*0.99 + bass*0.02;\nmm = mm*0.99 + mid*0.02;\ntt = tt*0.99 + treb*0.02;\n\nmx = max(max(bb,mm),tt);\nmn = min(min(bb,mm),tt);\n\nh1 = (bb-mn)/(mx-mn);\nh2 = (mm-mn)/(mx-mn);\nh3 = (tt-mn)/(mx-mn);\n\nv = 0.1333/fps;\nbm = bm + (h1-h2)*v;\nmt = mt + (h2-h3)*v;\nbt = bt + (h1-h3)*v;\n\nw = bm*2;\nq3 = sin(w);\nq4 = cos(w);\n\n\nq10 = bm;\nq11 = mt;\nq12 = bt;","pixel_eqs_eel":"//pixel\nvt=sin(i*p2*4)*(v+1)/2;\nx1=sin(i*p2*2);\ny1=if(below(i,0.5),vt,0);\nz1=if(above(i,0.5),vt,0);\ny2=y1*xc-z1*xs;\nz2=y1*xs+z1*xc;\nx2=z2*ys+x1*yc;\nz3=z2*yc-x1*ys;\nx3=x2*zc-y2*zs;\ny3=y2*zc+x2*zs;\nx4=mx+x3;y4=my+y3;\nz4=mz+z3;x=x4/(1+z4/dst);\ny=y4/(1+z4/dst);","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_2 = (((2.0 * \n    ((texture (sampler_blur1, (uv + tmpvar_3)).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv - tmpvar_3)).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec3 tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_4 = (((2.0 * \n    ((texture (sampler_blur1, (uv + tmpvar_5)).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv - tmpvar_5)).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_2.x;\n  tmpvar_6.y = tmpvar_4.x;\n  vec2 tmpvar_7;\n  tmpvar_7 = fract((uv + (\n    (tmpvar_6 * texsize.zw)\n   * 4.0)));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_2.y;\n  tmpvar_8.y = tmpvar_4.y;\n  vec2 tmpvar_9;\n  tmpvar_9 = fract((uv + (\n    (tmpvar_8 * texsize.zw)\n   * 4.0)));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_2.z;\n  tmpvar_10.y = tmpvar_4.z;\n  vec2 tmpvar_11;\n  tmpvar_11 = fract((uv + (\n    (tmpvar_10 * texsize.zw)\n   * 4.0)));\n  ret_1.x = (texture (sampler_main, tmpvar_7).x - ((\n    (2.0 * texture (sampler_main, tmpvar_7).xyz)\n   - \n    (2.0 * ((texture (sampler_blur3, tmpvar_7).xyz * scale3) + bias3))\n  ).x * 0.01));\n  ret_1.y = (texture (sampler_main, tmpvar_9).y - ((\n    (2.0 * texture (sampler_main, tmpvar_9).xyz)\n   - \n    (2.0 * ((texture (sampler_blur3, tmpvar_9).xyz * scale3) + bias3))\n  ).y * 0.01));\n  ret_1.z = (texture (sampler_main, tmpvar_11).z - ((\n    (2.0 * texture (sampler_main, tmpvar_11).xyz)\n   - \n    (2.0 * ((texture (sampler_blur3, tmpvar_11).xyz * scale3) + bias3))\n  ).z * 0.01));\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)\n  ).xyz - 0.5) * 0.008));\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.1) - 0.014));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_1;\n  ret = tmpvar_12.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  vec2 tmpvar_2;\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((q4 * tmpvar_2.x) - (q3 * tmpvar_2.y));\n  tmpvar_3.y = ((q3 * tmpvar_2.x) + (q4 * tmpvar_2.y));\n  vec2 tmpvar_4;\n  tmpvar_4 = (0.5 - (tmpvar_3 * 2.0));\n  vec2 numerator_5;\n  numerator_5 = (tmpvar_4 - vec2(0.0, 0.5));\n  vec2 denominator_6;\n  denominator_6 = (tmpvar_4 - vec2(1.0, 0.5));\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((numerator_5.x * denominator_6.x) + (numerator_5.y * denominator_6.y));\n  tmpvar_7.y = ((numerator_5.y * denominator_6.x) - (numerator_5.x * denominator_6.y));\n  vec2 tmpvar_8;\n  tmpvar_8 = (((tmpvar_7 / \n    ((denominator_6.x * denominator_6.x) + (denominator_6.y * denominator_6.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_9;\n  tmpvar_9 = sqrt(dot (tmpvar_8, tmpvar_8));\n  float tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = (min (abs(\n    (tmpvar_8.x / tmpvar_8.y)\n  ), 1.0) / max (abs(\n    (tmpvar_8.x / tmpvar_8.y)\n  ), 1.0));\n  float tmpvar_12;\n  tmpvar_12 = (tmpvar_11 * tmpvar_11);\n  tmpvar_12 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_12) + 0.05368138) * tmpvar_12) - 0.1173503)\n     * tmpvar_12) + 0.1938925) * tmpvar_12) - 0.3326756)\n   * tmpvar_12) + 0.9999793) * tmpvar_11);\n  tmpvar_12 = (tmpvar_12 + (float(\n    (abs((tmpvar_8.x / tmpvar_8.y)) > 1.0)\n  ) * (\n    (tmpvar_12 * -2.0)\n   + 1.570796)));\n  tmpvar_10 = (tmpvar_12 * sign((tmpvar_8.x / tmpvar_8.y)));\n  if ((abs(tmpvar_8.y) > (1e-08 * abs(tmpvar_8.x)))) {\n    if ((tmpvar_8.y < 0.0)) {\n      if ((tmpvar_8.x >= 0.0)) {\n        tmpvar_10 += 3.141593;\n      } else {\n        tmpvar_10 = (tmpvar_10 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_10 = (sign(tmpvar_8.x) * 1.570796);\n  };\n  vec2 tmpvar_13;\n  tmpvar_13.x = (tmpvar_10 * 0.1591549);\n  tmpvar_13.y = tmpvar_9;\n  vec2 tmpvar_14;\n  tmpvar_14.x = ((tmpvar_13.x * 2.0) + q11);\n  tmpvar_14.y = ((0.3 * log(tmpvar_9)) + q12);\n  uv_1 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_14 * 0.5)) * 2.0) - 1.0)\n  )));\n  vec2 tmpvar_15;\n  tmpvar_15 = (texsize.zw * 4.0);\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = (pow ((\n    (abs(((\n      ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n     * 2.0) - texture (sampler_main, uv_1).xyz)) * 1.8)\n   + 0.12), vec3(1.8, 1.8, 1.8)) * ((\n    dot ((((\n      (texture (sampler_blur2, (uv_1 + (vec2(1.0, 0.0) * tmpvar_15))).xyz * scale2)\n     + bias2) - (\n      (texture (sampler_blur2, (uv_1 - (vec2(1.0, 0.0) * tmpvar_15))).xyz * scale2)\n     + bias2)) + ((\n      (texture (sampler_blur2, (uv_1 + (vec2(0.0, 1.0) * tmpvar_15))).xyz * scale2)\n     + bias2) - (\n      (texture (sampler_blur2, (uv_1 - (vec2(0.0, 1.0) * tmpvar_15))).xyz * scale2)\n     + bias2))), vec3(0.32, 0.49, 0.29))\n   * 4.0) + 1.0));\n  ret = tmpvar_16.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw;\n    float3 dx = ( 2*GetBlur1(uv + float2(1,0)*d) - 2*GetBlur1(uv-float2(1,0)*d) )*0.5;\n    float3 dy = ( 2*GetBlur1(uv + float2(0,1)*d) - 2*GetBlur1(uv-float2(0,1)*d) )*0.5;\n\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1.2 + rand_frame.xy;\n\n    float2 my_uv =  lerp(uv_orig,uv,1) ;\n    float2 uv_x= frac(my_uv + float2(dx.x,dy.x)*texsize.zw  *4);\n    float2 uv_y= frac(my_uv + float2(dx.y,dy.y)*texsize.zw  *4);\n    float2 uv_z= frac(my_uv + float2(dx.z,dy.z)*texsize.zw  *4);\n    ret.x = GetPixel(uv_x).x - (2*GetPixel(uv_x) - 2*GetBlur3(uv_x)).x  * 0.01;\n    ret.y = GetPixel(uv_y).y - (2*GetPixel(uv_y) - 2*GetBlur3(uv_y)).y  * 0.01;\n    ret.z = GetPixel(uv_z).z - (2*GetPixel(uv_z) - 2*GetBlur3(uv_z)).z  * 0.01;\n\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0.008;\nret -= ret.yzx*0.1 - 0.014;\n\n}","comp_hlsl":"float2 complex_div(float2 numerator, float2 denominator){\n   return float2( numerator.x*denominator.x + numerator.y*denominator.y,\n                  numerator.y*denominator.x - numerator.x*denominator.y)/\n          (denominator.x*denominator.x + denominator.y*denominator.y);\n}\n\nfloat2 uv_polar(float2 domain, float2 center){\n   float2 c = domain - center;\n   float rad_hq = length(c);\n   float ang_hq = atan2(c.x,c.y);\n   return float2(ang_hq*M_INV_PI_2, rad_hq);\n}\n\nfloat2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){\n   float2 polar = uv_polar(domain, center);\n   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);\n}\n\nfloat2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){\n   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;\n}\n\nfloat2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){\n   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);\n   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);\n}\n\n\nfloat2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){\n   float2 uv_r = (domain-center);\n   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;\n}\n\n\nshader_body\n{\nfloat2 uvo = uv;\n\nfloat2 rotate_uv = 0.5-uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q3, q4, 2);\nfloat2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.3, float2(q11,q12));\nuv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\n\nfloat2 d = texsize.zw * 4;\nfloat3 dx = ( GetBlur2(uv + float2(1,0)*d) - GetBlur2(uv - float2(1,0)*d) );\nfloat3 dy = ( GetBlur2(uv + float2(0,1)*d) - GetBlur2(uv - float2(0,1)*d) );\n\nret = pow(abs(GetBlur3(uv)*2-GetPixel(uv))*1.8+0.12,1.8);\n//ret = GetBlur3(uv)*GetBlur1(uv)*4;\n//ret = GetPixel(uv);\nret *= lum(dx+dy)*4+1;\n}\n"}