{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"modwavealphastart":0,"modwavealphaend":1,"warp":0,"sx":0.90529,"sy":0.90529,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.015,"ob_r":0.7,"ob_g":0.7,"ob_b":0.5,"ob_a":1,"ib_size":0,"mv_x":0,"mv_y":0,"mv_a":0},"shapes":[{"baseVals":{"sides":44,"textured":1,"rad":1.07409,"tex_zoom":4.91381,"g":1,"b":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q21=0;a.q22=0;a.q23=0;a.q24=0;a.q25=0;a.q26=0;a.q27=0;a.q21=div(1,Math.asin(1));","frame_eqs_str":"a.wave_r=a.bass_att-.5;a.wave_b=a.mid_att-.5;a.wave_g=a.treb_att-.5;a.cx=.8*div(Math.sin(div(a.time,1.9))+1,2)+.1;a.cy=.8*div(Math.sin(div(a.time,3.1))+1,2)+.1;a.q21=.5;a.q22=-Math.sin(.5*a.time);a.q23=0;a.q24=1;a.q25=div(.5,Math.asin(1));a.q26=.3*a.time;a.q27=.6*-a.time;a.zoom+=.5*a.treb_att;a.mv_r=.5+Math.sin(a.time);a.mv_b=.5+Math.sin(.556677*a.time);a.mv_g=.5+Math.sin(.353*a.time);","pixel_eqs_str":"a.rot=a.rad*(.5*Math.sin(div(a.time,2))+.5)*a.x;","init_eqs_eel":"q21 = 1/asin(1);","frame_eqs_eel":"wave_r=bass_att-0.5;\nwave_b=mid_att-0.5;\nwave_g=treb_att-0.5;\ncx=(((sin(time/1.9)+1)/2)*0.8)+0.1;\ncy=(((sin(time/3.1)+1)/2)*0.8)+0.1;\n\n// coordinates spiral 1\nq21 = .5; //sin(time); // X\nq22 = 0 - sin(time * .5); //-0.5; // Y\n\n// coordinates spiral 2\nq23 = 0;\nq24 = 1; //sin(time); //0.5;\n\nq25 = 0.5/asin(1); // pi/4\n\nq26 = time*0.3; // rotation\nq27 = -time*0.6; // growth\n\n\nzoom = zoom + (treb_att * .5);\nmv_r = .5+sin(time);\nmv_b = .5+sin(time*.556677);\nmv_g = .5+sin(time*.353);\n//mv_a = 0;\n//mv_a = 0 + ((treb_att * .005));\n//mv_l = 0 + (treb * .05);\n//mv_l = 0;","pixel_eqs_eel":"rot=rad*((sin(time/2)*0.5+0.5)*x);","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = ((2.0 * sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )) + (rand_frame * 64.0)).x;\n  uv_1 = (uv + (clamp (\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\n  uv6_2 = (0.4 * sin((tmpvar_3 * 22.0)));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (((q24 * \n    (((texture (sampler_main, uv_1).xyz - (\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\n     * 0.04)) + (0.15 * (vec3(\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\n    ) * roam_cos.xyz))) - 0.02)\n  ) * 0.98) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_5.xyz;\n }","comp":"vec2 xlat_mutabledenominator;\nvec2 xlat_mutablenumerator;\n shader_body { \n  vec2 c_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (((uv - 0.5) * 2.0) * aspect.wz);\n  vec2 tmpvar_3;\n  tmpvar_3.x = q21;\n  tmpvar_3.y = q22;\n  xlat_mutablenumerator = ((tmpvar_2 + tmpvar_3) * 64.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q23;\n  tmpvar_4.y = q24;\n  xlat_mutabledenominator = (tmpvar_2 + tmpvar_4);\n  vec2 tmpvar_5;\n  tmpvar_5.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n  tmpvar_5.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n  c_1 = ((tmpvar_5 / (\n    (xlat_mutabledenominator.x * xlat_mutabledenominator.x)\n   + \n    (xlat_mutabledenominator.y * xlat_mutabledenominator.y)\n  )) - 0.5);\n  float tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (min (abs(\n    (c_1.x / c_1.y)\n  ), 1.0) / max (abs(\n    (c_1.x / c_1.y)\n  ), 1.0));\n  float tmpvar_8;\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\n  tmpvar_8 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\n  tmpvar_8 = (tmpvar_8 + (float(\n    (abs((c_1.x / c_1.y)) > 1.0)\n  ) * (\n    (tmpvar_8 * -2.0)\n   + 1.570796)));\n  tmpvar_6 = (tmpvar_8 * sign((c_1.x / c_1.y)));\n  if ((abs(c_1.y) > (1e-08 * abs(c_1.x)))) {\n    if ((c_1.y < 0.0)) {\n      if ((c_1.x >= 0.0)) {\n        tmpvar_6 += 3.141593;\n      } else {\n        tmpvar_6 = (tmpvar_6 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_6 = (sign(c_1.x) * 1.570796);\n  };\n  float tmpvar_9;\n  tmpvar_9 = -(tmpvar_6);\n  vec2 tmpvar_10;\n  tmpvar_10.x = ((tmpvar_9 * q25) + q26);\n  tmpvar_10.y = (((\n    (0.5 * aspect.w)\n   * \n    log(sqrt(dot (c_1, c_1)))\n  ) + (tmpvar_9 * q25)) + q27);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = (texture (sampler_main, (0.5 + (\n    (0.5 - abs(((\n      fract((tmpvar_10 * 0.5))\n     * 2.0) - 1.0)))\n   * 0.97))).xyz * (1.4 + treb_att));\n  ret = tmpvar_11.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = 2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat clp = 2;\nfloat2 rs = clamp(tan(z)*d,-clp,clp);\nuv += rs/20;\n\n\nuv6 = .4*sin(uv1*22);\nmus = .1/(length(uv6));\nmus *= roam_cos;\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.04 + .15*mus;\nq25 = q24;\nret = q25*(ret1-.02)*.98 + (1-q25)* GetPixel(uv_orig);\n}","comp_hlsl":"float2 numerator, denominator, fraction;\n\nshader_body\n{\n\n/*** Flexis cleaned up Moebius spiral code ***/\n\nfloat cutoff = 0.97;\nint n = -1;\nfloat s = .5;\n\n   float2 c = (uv-0.5)*2*aspect.wz;\n   numerator = (c + float2(q21,q22))*64;\n   denominator = c + float2(q23,q24);\n   fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,\n                      numerator.y*denominator.x - numerator.x*denominator.y)/\n                      (denominator.x*denominator.x + denominator.y*denominator.y);\n   c = fraction-0.5;\n   float1 ang_hq = n*atan2(c.x,c.y);\n   float2 spiral = float2(ang_hq*q25+q26,s*aspect.w*log(length(c))+ang_hq*q25+q27);\n   spiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*cutoff; // mirror\n\n/**********************************************/\n\nret = GetPixel(spiral);\n//ret = (treb_att * .35) + ret;\n\n//    ret *= ret + sin(treb_att * .5);\n\nret *= 1.40 + (treb_att);\n//ret = 0 + (sin(time)) - ret;\n}\n"}