{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"additivewave":1,"wave_brighten":0,"wrap":0,"invert":1,"wave_a":0.001,"wave_scale":0.009,"wave_smoothing":0.7,"warpscale":0.01,"zoomexp":1.001,"fshader":0.6,"warp":0,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"ob_size":0,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"rad":0.71008,"ang":2.07345,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.q1=.3*a.time;a.q2=.8*a.q1;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"q1=.3*time;\nq2=.8*q1;","pixel_eqs_eel":"","warp":"uniform sampler2D sampler_PEsticks2;\n shader_body { \n  vec2 uv_1;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv_1 = (uv_1 + 0.5);\n  vec2 x_2;\n  x_2 = (uv_1 - 0.5);\n  float tmpvar_3;\n  tmpvar_3 = (3.6 * sqrt(dot (x_2, x_2)));\n  vec2 tmpvar_4;\n  tmpvar_4 = normalize((uv_1 - 0.5));\n  float tmpvar_5;\n  tmpvar_5 = float((tmpvar_3 < 3.0));\n  vec2 tmpvar_6;\n  tmpvar_6.x = q1;\n  tmpvar_6.y = q2;\n  vec2 tmpvar_7;\n  tmpvar_7.x = -(q1);\n  tmpvar_7.y = -(q2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = max ((texture (sampler_PEsticks2, (2.0 * \n    (((clamp (\n      (sin(tmpvar_3) / cos(tmpvar_3))\n    , -4.0, 4.0) * tmpvar_4) / 2.0) + tmpvar_6)\n  )).xyz * tmpvar_5), (texture (sampler_PEsticks2, (2.0 * \n    (((clamp (\n      (sin(tmpvar_3) / cos(tmpvar_3))\n    , -4.0, 4.0) * tmpvar_4) / 2.0) + tmpvar_7)\n  )).xyz * tmpvar_5));\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"sampler sampler_PEsticks2;\n\nshader_body\n{\n\n\n//// Sphere mapping by martin\nuv -= 0.5;\nuv *= aspect.xy;    \nuv += .5;\nfloat z1 = 3.6*length(uv-.5);\nfloat2 dz1 = normalize(uv-.5);\nfloat2 rs1 = clamp(tan(z1),-4,4)*dz1/2;\nfloat2 rs2 = clamp(tan(z1),-4,4)*dz1/2;\nfloat pmask1 = (z1<3);\nrs1 += float2 (q1,q2);\nrs2 += float2 (-q1,-q2);\nfloat3 ret2 = tex2D(sampler_PEsticks2,2*rs1);\nfloat3 ret3 = tex2D(sampler_PEsticks2,2*rs2);\n\nret = max(ret2*pmask1,ret3*pmask1);\n\n\n}","comp_hlsl":"shader_body\n{\nret = GetPixel(uv);\n}"}