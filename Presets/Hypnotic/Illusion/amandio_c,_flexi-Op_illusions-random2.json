{"version":2,"baseVals":{"rating":5,"gammaadj":1.28,"decay":0.8,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":3.04777,"zoom":1.0173,"warp":0.01605,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"num_inst":2,"x":0.49,"rad":0.1158,"tex_zoom":4.36077,"g2":0,"a2":0.8,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"r":0,"g":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"r":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"g":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.q1=.5+.4*(.6*Math.sin(.3*a.time)+.4*Math.sin(.5*a.time));a.q2=.5+.4*(.6*Math.sin(.25*a.time)+.4*Math.sin(.21*a.time));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"q1=.5+.4*(.6*sin(.3*time)+.4*sin(.5*time));\nq2=.5+.4*(.6*sin(.25*time)+.4*sin(.21*time));","pixel_eqs_eel":"","warp":"uniform sampler2D sampler_rand01_OI;\n shader_body { \n  vec2 help_uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q1;\n  tmpvar_2.y = q2;\n  vec2 tmpvar_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv_orig - tmpvar_2);\n  float tmpvar_5;\n  tmpvar_5 = sqrt(dot (tmpvar_4, tmpvar_4));\n  float tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (min (abs(\n    (tmpvar_4.x / tmpvar_4.y)\n  ), 1.0) / max (abs(\n    (tmpvar_4.x / tmpvar_4.y)\n  ), 1.0));\n  float tmpvar_8;\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\n  tmpvar_8 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\n  tmpvar_8 = (tmpvar_8 + (float(\n    (abs((tmpvar_4.x / tmpvar_4.y)) > 1.0)\n  ) * (\n    (tmpvar_8 * -2.0)\n   + 1.570796)));\n  tmpvar_6 = (tmpvar_8 * sign((tmpvar_4.x / tmpvar_4.y)));\n  if ((abs(tmpvar_4.y) > (1e-08 * abs(tmpvar_4.x)))) {\n    if ((tmpvar_4.y < 0.0)) {\n      if ((tmpvar_4.x >= 0.0)) {\n        tmpvar_6 += 3.141593;\n      } else {\n        tmpvar_6 = (tmpvar_6 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_6 = (sign(tmpvar_4.x) * 1.570796);\n  };\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (tmpvar_5 / 0.15)), 0.0, 1.0);\n  float tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = (tmpvar_9 - 1.0);\n  tmpvar_10 = sqrt((1.0 - (tmpvar_11 * tmpvar_11)));\n  float vec_y_12;\n  vec_y_12 = (1.0 - tmpvar_9);\n  float tmpvar_13;\n  float tmpvar_14;\n  tmpvar_14 = (min (abs(\n    (vec_y_12 / tmpvar_10)\n  ), 1.0) / max (abs(\n    (vec_y_12 / tmpvar_10)\n  ), 1.0));\n  float tmpvar_15;\n  tmpvar_15 = (tmpvar_14 * tmpvar_14);\n  tmpvar_15 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_15) + 0.05368138) * tmpvar_15) - 0.1173503)\n     * tmpvar_15) + 0.1938925) * tmpvar_15) - 0.3326756)\n   * tmpvar_15) + 0.9999793) * tmpvar_14);\n  tmpvar_15 = (tmpvar_15 + (float(\n    (abs((vec_y_12 / tmpvar_10)) > 1.0)\n  ) * (\n    (tmpvar_15 * -2.0)\n   + 1.570796)));\n  tmpvar_13 = (tmpvar_15 * sign((vec_y_12 / tmpvar_10)));\n  if ((abs(tmpvar_10) > (1e-08 * abs(vec_y_12)))) {\n    if ((tmpvar_10 < 0.0)) {\n      if ((vec_y_12 >= 0.0)) {\n        tmpvar_13 += 3.141593;\n      } else {\n        tmpvar_13 = (tmpvar_13 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_13 = (sign(vec_y_12) * 1.570796);\n  };\n  float x_16;\n  x_16 = (sin(tmpvar_13) / 4.0);\n  float tmpvar_17;\n  tmpvar_17 = (tmpvar_13 - (sign(x_16) * (1.570796 - \n    (sqrt((1.0 - abs(x_16))) * (1.570796 + (abs(x_16) * (-0.2146018 + \n      (abs(x_16) * (0.08656672 + (abs(x_16) * -0.03102955)))\n    ))))\n  )));\n  vec2 tmpvar_18;\n  tmpvar_18.x = sin(tmpvar_6);\n  tmpvar_18.y = cos(tmpvar_6);\n  vec2 x_19;\n  x_19 = (uv_orig - tmpvar_2);\n  bool tmpvar_20;\n  tmpvar_20 = (sqrt(dot (x_19, x_19)) < 0.15);\n  tmpvar_3 = ((float(\n    !(tmpvar_20)\n  ) * uv_orig) + (float(tmpvar_20) * (tmpvar_2 + \n    ((tmpvar_18 * ((1.0 - tmpvar_9) - (tmpvar_10 * \n      (sin(tmpvar_17) / cos(tmpvar_17))\n    ))) * 0.15)\n  )));\n  help_uv_1 = tmpvar_3;\n  vec2 tmpvar_21;\n  float tmpvar_22;\n  tmpvar_22 = -(time);\n  tmpvar_21.x = (tmpvar_22 * 0.1);\n  tmpvar_21.y = (tmpvar_22 * 0.04);\n  vec2 numerator_23;\n  numerator_23 = (tmpvar_3 - vec2(0.3, 0.4));\n  vec2 denominator_24;\n  denominator_24 = (tmpvar_3 - vec2(0.7, 0.4));\n  vec2 tmpvar_25;\n  tmpvar_25.x = ((numerator_23.x * denominator_24.x) + (numerator_23.y * denominator_24.y));\n  tmpvar_25.y = ((numerator_23.y * denominator_24.x) - (numerator_23.x * denominator_24.y));\n  vec2 tmpvar_26;\n  tmpvar_26 = (((tmpvar_25 / \n    ((denominator_24.x * denominator_24.x) + (denominator_24.y * denominator_24.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_27;\n  tmpvar_27 = sqrt(dot (tmpvar_26, tmpvar_26));\n  float tmpvar_28;\n  float tmpvar_29;\n  tmpvar_29 = (min (abs(\n    (tmpvar_26.x / tmpvar_26.y)\n  ), 1.0) / max (abs(\n    (tmpvar_26.x / tmpvar_26.y)\n  ), 1.0));\n  float tmpvar_30;\n  tmpvar_30 = (tmpvar_29 * tmpvar_29);\n  tmpvar_30 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_30) + 0.05368138) * tmpvar_30) - 0.1173503)\n     * tmpvar_30) + 0.1938925) * tmpvar_30) - 0.3326756)\n   * tmpvar_30) + 0.9999793) * tmpvar_29);\n  tmpvar_30 = (tmpvar_30 + (float(\n    (abs((tmpvar_26.x / tmpvar_26.y)) > 1.0)\n  ) * (\n    (tmpvar_30 * -2.0)\n   + 1.570796)));\n  tmpvar_28 = (tmpvar_30 * sign((tmpvar_26.x / tmpvar_26.y)));\n  if ((abs(tmpvar_26.y) > (1e-08 * abs(tmpvar_26.x)))) {\n    if ((tmpvar_26.y < 0.0)) {\n      if ((tmpvar_26.x >= 0.0)) {\n        tmpvar_28 += 3.141593;\n      } else {\n        tmpvar_28 = (tmpvar_28 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_28 = (sign(tmpvar_26.x) * 1.570796);\n  };\n  vec2 tmpvar_31;\n  tmpvar_31.x = tmpvar_28;\n  tmpvar_31.y = tmpvar_27;\n  vec2 tmpvar_32;\n  tmpvar_32 = (tmpvar_31 * vec2(0.1591549, 1.0));\n  vec2 tmpvar_33;\n  tmpvar_33.x = ((tmpvar_32.x * 3.0) + tmpvar_21.x);\n  tmpvar_33.y = ((0.5 * log(\n    (1.0/(tmpvar_32.y))\n  )) + tmpvar_21.y);\n  help_uv_1 = (tmpvar_33 * vec2(7.0, 3.0));\n  vec4 tmpvar_34;\n  tmpvar_34.w = 1.0;\n  tmpvar_34.xyz = texture (sampler_rand01_OI, help_uv_1).xyz;\n  ret = tmpvar_34.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"///Box of tricks by Flexi  \n\nsampler sampler_rand01_OI;\n\nfloat figure_borders(float2 domain, float thickness){\n   float2 help_uv = frac(domain-0.5);\n   help_uv = min(help_uv,1-help_uv)*2;\n   return saturate(max(help_uv.x,help_uv.y)-1+thickness)/(thickness);\n}\n\nbool hex(float2 domain){\n   float2 help_uv = frac(domain)*float2(8,12);\n   float x,y; x = help_uv.x; y = help_uv.y;\n   return (x>1)*(x<7)*(y>4)*(y<8)*(x+y>7)*(x+y<13)*(x-y<1)*(y-x<5);\n}\n\nbool3 hexgrid(float2 domain){\n   bool tile1, tile2;\n   tile1 = hex(domain) + hex(domain + 0.5);\n   tile2 = hex(domain + float2(0.5,1/6.0) )\n         + hex(domain + float2(0,4/6.0)   );\n   return bool3(tile1, tile2,  1 - tile1 - tile2);\n}\n\n\nfloat2 complex_div(float2 numerator, float2 denominator){\n   return float2( numerator.x*denominator.x + numerator.y*denominator.y,\n                  numerator.y*denominator.x - numerator.x*denominator.y)/\n          (denominator.x*denominator.x + denominator.y*denominator.y);\n}\n\nfloat2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){\n   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;\n}\n\nfloat2 uv_polar(float2 domain, float2 center){\n   float2 c = domain - center;\n   float rad_hq = length(c);\n   float ang_hq = atan2(c.x,c.y);\n   return float2(ang_hq, rad_hq);\n}\n\nfloat2 uv_polar_logarithmic_inverse(float2 domain, float2 center, int fins, float log_factor, float2 coord){\n   float2 polar = uv_polar(domain, center)*float2(M_INV_PI_2,1);\n   return float2(polar.x*fins+coord.x, log_factor*log(1/polar.y) + coord.y);\n}\n\nfloat2 uv_bipolar_logarithmic_inverse(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){\n   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);\n   return uv_polar_logarithmic_inverse(help_uv,0.5,fins,log_factor,coord);\n}\n\nfloat2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){\n   float2 polar = uv_polar(domain, position);\n   float cone = saturate(1-polar.y/radius);\n   float halfsphere = sqrt(1-pow(cone-1,2));\n   float w = atan2(1-cone,halfsphere);\n   float refrac_w = w-asin(sin(w)/refractivity);\n   float refrac_d = 1-cone - halfsphere*tan(refrac_w);\n   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;\n   bool mask =(length(domain-position)<radius);\n   return !mask*domain + \n           mask*refrac_uv;\n}\n\nshader_body\n{\nfloat2 help_uv = uv_lens_half_sphere(uv_orig, float2(q1,q2),0.15,4);\nhelp_uv = uv_bipolar_logarithmic_inverse(help_uv, float2(0.3,0.4), float2(0.7,0.4), 3, 0.5, float2(-time*0.1,-time*0.04));\nhelp_uv = help_uv*float2(7,3);\n\nret = tex2D(sampler_rand01_OI,help_uv);\n}","comp_hlsl":"shader_body\n{\nret = GetPixel(uv);\n}"}