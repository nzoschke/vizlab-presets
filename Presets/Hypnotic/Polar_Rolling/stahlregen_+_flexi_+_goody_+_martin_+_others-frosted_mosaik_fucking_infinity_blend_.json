{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"wave_a":0.009,"wave_scale":1.224,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpanimspeed":0.01,"warpscale":1.766,"zoomexp":1.00016,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0,"wave_g":0,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"x":0.57,"y":0.41,"rad":0.09234,"tex_zoom":0.73458,"g2":0,"border_a":0},"init_eqs_str":"a.vx=0;","frame_eqs_str":"","init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);","init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = sin(time) * .4 + .5;\n\n\npow( (bass*.15),2);","init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\n\n\npow( (bass*.15),2);"},{"baseVals":{"enabled":1,"sides":36,"additive":1,"rad":1.38306,"r":0,"g":0.03,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"q1 = below(int(rand(100)),4 + 10*(treb+mid+bass));","point_eqs_str":"it = (it + 1)*above(sample,0)*below(it,53);\nita = (ita + equal(it,0))*above(sample,0);\n\nsw = 1-equal(it,0)*equal(ita,0);\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\nxv = if(sw - swi,xv,int(rand(1001))*.001*.8);\nmx = xv + ita*.025;\nmy = if(sw - swi,my,int(rand(1001))*.001*.975);\n\nsz = .01;\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\n\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\n\nlr = if(sw,lr,int(rand(10)));\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\n\nva = equal(let,23) + equal(let,24) + equal(let,26);\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\nvg = equal(let,1);\nvh = equal(let,9) + equal(let,20);\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\nvq = equal(let,2) + equal(let,4) + equal(let,22);\nvr = equal(let,9) + equal(let,20) + equal(let,25);\nvs = equal(let,22);\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\n\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\n\na = a*below(ita,8)*q1;\n\nx = mx + vx*sz*.75;\ny = my + vy*sz*1.5;","init_eqs_eel":"","frame_eqs_eel":"q1 = below(int(rand(100)),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\nita = (ita + equal(it,0))*above(sample,0);\n\nsw = 1-equal(it,0)*equal(ita,0);\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\nxv = if(sw - swi,xv,int(rand(1001))*.001*.8);\nmx = xv + ita*.025;\nmy = if(sw - swi,my,int(rand(1001))*.001*.975);\n\nsz = .01;\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\n\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\n\nlr = if(sw,lr,int(rand(10)));\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\n\nva = equal(let,23) + equal(let,24) + equal(let,26);\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\nvg = equal(let,1);\nvh = equal(let,9) + equal(let,20);\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\nvq = equal(let,2) + equal(let,4) + equal(let,22);\nvr = equal(let,9) + equal(let,20) + equal(let,25);\nvs = equal(let,22);\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\n\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\n\na = a*below(ita,8)*q1;\n\nx = mx + vx*sz*.75;\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.c_inv_i=0;a.translation_x=0;a.a_i=0;a.c_r=0;a.a_r=0;a.iangle=0;a.scale=0;a.q6=0;a.ac_i=0;a.itranslation_u=0;a.q1=0;a.itranslation_v=0;a.q5=0;a.c_inv_r=0;a.d_i=0;a.angle=0;a.mu_i=0;a.bcad_r=0;a.iscale=0;a.q4=0;a.b_r=0;a.mu_r=0;a.bcad_i=0;a.p2=0;a.c_i=0;a.p1=0;a.q2=0;a.ac_r=0;a.translation_y=0;a.p3=0;a.q3=0;a.b_i=0;a.q7=0;a.d_r=0;a.p4=0;a.q8=0;","frame_eqs_str":"a.wave_r=a.wave_r+.35*Math.sin(1.14*a.time)+.16*Math.sin(1.5*a.time);a.wave_g=a.wave_g+.36*Math.sin(1.27*a.time)+.15*Math.sin(1.11*a.time);a.wave_b=a.wave_b+.37*Math.sin(1.284*a.time)+.15*Math.sin(1.3*a.time);a.warp=0;a.ob_r=a.wave_g;a.ob_b=a.wave_r;a.ob_g=a.wave_b;a.ib_r=a.wave_r;a.ib_b=a.wave_g;a.ib_g=a.wave_r;a.scale=4;a.angle=.2*a.time;a.translation_x=0;a.translation_y=.2;a.iscale=6;a.iangle=.3*Math.sin(.1337*a.time);a.itranslation_u=0;a.itranslation_v=.2;a.a_r=Math.cos(a.angle)*\na.scale;a.a_i=Math.sin(a.angle)*a.scale;a.b_r=a.translation_x;a.b_i=a.translation_y;a.c_r=-Math.cos(a.iangle)*a.iscale;a.c_i=-Math.sin(a.iangle)*a.iscale;a.d_r=a.itranslation_u;a.d_i=a.itranslation_v;a.c_inv_r=div(a.c_r,a.c_r*a.c_r+a.c_i*a.c_i);a.c_inv_i=div(a.c_i,a.c_r*a.c_r+a.c_i*a.c_i);a.ac_r=a.a_r*a.c_inv_r-a.a_i*a.c_inv_i;a.ac_i=a.a_r*a.c_inv_i-a.a_i*a.c_inv_r;a.bcad_r=a.b_r*a.c_r-a.b_i*a.c_i-(a.a_r*a.d_r-a.a_i*a.d_i);a.bcad_i=a.b_r*a.c_i-a.b_i*a.c_r-(a.a_r*a.d_i-a.a_i*a.d_r);a.mu_r=a.bcad_r*\na.c_inv_r-a.bcad_i*a.c_inv_i;a.mu_i=a.bcad_r*a.c_inv_i-a.bcad_i*a.c_inv_r;a.q1=a.ac_r;a.q2=a.ac_i;a.q3=a.mu_r;a.q4=a.mu_i;a.q5=a.c_r;a.q6=a.c_i;a.q7=a.d_r;a.q8=a.d_i;","pixel_eqs_str":"a.p1=Math.sin(div(a.time,7));a.p2=Math.cos(div(a.time,3));a.p3=1+Math.cos(div(a.time,6));a.p4=.5*Math.cos(div(a.time,4.5));a.dx=.004*a.p1*a.rad;a.dy=.004*a.p2*a.rad;a.zoom=1+div(pow(a.rad,a.p4)*a.p3,50);a.rot=0;a.dx+=.005*Math.sin(a.x*a.time*20+a.treb_att*a.y);a.dy+=.005*Math.sin(a.y*a.time*19+a.treb_att*a.y);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.35*sin(1.14*time) + 0.16*sin(1.5*time);\nwave_g = wave_g + 0.36*sin(1.27*time) + 0.15*sin(1.11*time);\nwave_b = wave_b + 0.37*sin(1.284*time) + 0.15*sin(1.3*time);\nwarp = 0;\n\nob_r = wave_g;\nob_b = wave_r;\nob_g = wave_b;\nib_r = wave_r;\nib_b = wave_g;\nib_g = wave_r;\n\n//before inversion\nscale = 4;\nangle = time*.2;\ntranslation_x = 0;\ntranslation_y = 0.2;\n\n//complex inverted\niscale = 6;\niangle = sin(time*0.1337)*0.3;\nitranslation_u = 0;\nitranslation_v = 0.2;\n\n\n// the m?bius transformation\n// z -> (az+b)/(cz-d); where a,b,c,d are complex numbers and z will be the uv-vector\n// (az+b)/(cz-d) = a/c + mu/(cz+d), with mu = (bc-ad)/c\n// so a/c and mu can be calculated outside of the shader\n\na_r = cos(angle)*scale;\na_i = sin(angle)*scale;\nb_r = translation_x;\nb_i = translation_y;\n\nc_r = -cos(iangle)*iscale;\nc_i = -sin(iangle)*iscale;\nd_r = itranslation_u;\nd_i = itranslation_v;\n\n// c^(-1)\nc_inv_r = c_r/(c_r*c_r+c_i*c_i);\nc_inv_i = c_i/(c_r*c_r+c_i*c_i);\n\n// a*c^(-1)\nac_r = (a_r*c_inv_r - a_i*c_inv_i);\nac_i = (a_r*c_inv_i - a_i*c_inv_r);\n\n// (bc-ad)\nbcad_r = (b_r*c_r - b_i*c_i)-(a_r*d_r-a_i*d_i);\nbcad_i = (b_r*c_i - b_i*c_r)-(a_r*d_i-a_i*d_r);\n\n// mu*c^(-1)\nmu_r = bcad_r*c_inv_r - bcad_i*c_inv_i;\nmu_i = bcad_r*c_inv_i - bcad_i*c_inv_r;\n\nq1 = ac_r;\nq2 = ac_i;\nq3 = mu_r;\nq4 = mu_i;\n\nq5 = c_r;\nq6 = c_i;\nq7 = d_r;\nq8 = d_i;","pixel_eqs_eel":"p1 = sin (time/7);\np2 = cos (time/3);\np3 = 1+(cos (time/6));\np4 = .5*cos (time/4.5);\n\ndx  = 0.004*p1*rad;\ndy = 0.004*p2*rad ;\n\nzoom = 1 + pow(rad,p4)*p3/50;\nrot = 0;\n\n//Beat responsive tiling for the WIN!!!\ndx=dx+.005*sin(x*time*20+treb_att*y);\ndy=dy+.005*sin(y*time*19+treb_att*y);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.6));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 12.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.08, 0.08, 0.08));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","comp":"uniform sampler2D sampler_wrenches;\n shader_body { \n  vec2 moebius_1;\n  vec2 d_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = q1;\n  tmpvar_3.y = q2;\n  vec2 tmpvar_4;\n  tmpvar_4.x = q7;\n  tmpvar_4.y = q8;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((uv - 0.5) * aspect.wz);\n  vec2 tmpvar_6;\n  tmpvar_6.x = ((tmpvar_5.x * q5) - (tmpvar_5.y * q6));\n  tmpvar_6.y = ((tmpvar_5.x * q6) - (tmpvar_5.y * q5));\n  vec2 tmpvar_7;\n  tmpvar_7 = ((tmpvar_6 * aspect.yx) + tmpvar_4);\n  vec2 tmpvar_8;\n  tmpvar_8.x = ((q3 * tmpvar_7.x) + (q4 * tmpvar_7.y));\n  tmpvar_8.y = ((q4 * tmpvar_7.x) - (q3 * tmpvar_7.y));\n  moebius_1 = (0.5 + ((\n    (1.0 - abs(((\n      fract((((tmpvar_8 / \n        ((tmpvar_7.x * tmpvar_7.x) + (tmpvar_7.y * tmpvar_7.y))\n      ) + tmpvar_3) * 0.5))\n     * 2.0) - 1.0)))\n   - 0.5) * 0.99));\n  d_2 = (texsize.zw * 4.0);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (((texture (sampler_blur1, \n    (moebius_1 + (vec2(1.0, 0.0) * d_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (moebius_1 - (vec2(1.0, 0.0) * d_2))\n  ).xyz * scale1) + bias1)).z;\n  tmpvar_9.y = (((texture (sampler_blur1, \n    (moebius_1 + (vec2(0.0, 1.0) * d_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (moebius_1 - (vec2(0.0, 1.0) * d_2))\n  ).xyz * scale1) + bias1)).z;\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = mix (mix (texture (sampler_wrenches, (moebius_1 - \n    (tmpvar_9 * 0.6)\n  )).xyz, vec3(-0.4, -0.4, -0.4), vec3((\n    ((texture (sampler_blur1, moebius_1).xyz * scale1) + bias1)\n  .z * 0.4))), vec3(1.4, 1.4, 1.4), vec3((texture (sampler_main, moebius_1).z * 0.6)));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // take the difference between the crisp and blurred images,\n    // then add it back into the image.  Creates spots and stripes over time.\n    ret += (ret - GetBlur2(uv))*0.6;\n    ret *= 0.9;\n\n   // add noise:\n   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n   ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 12 * saturate(treb_att-1);\n\n   // desaturate over time, to keep the globs white\n   ret = lerp(ret, lum(ret), 0.08);\n}","comp_hlsl":"sampler sampler_wrenches;\nshader_body\n{\n\nfloat2 ac = float2(q1,q2);\nfloat2 mu = float2(q3,q4);\nfloat2 c = float2(q5,q6);\nfloat2 d = float2(q7,q8);\n\nfloat2 z = (uv-0.5)*aspect.wz;\n\n// (c*z + d)\nfloat2 czd = float2(z.x*c.x-z.y*c.y,z.x*c.y-z.y*c.x)*aspect.yx + d;\n// mu/(cz+d)\nfloat2 moebius = float2( mu.x*czd.x + mu.y*czd.y , mu.y*czd.x-mu.x*czd.y )/(czd.x*czd.x+czd.y*czd.y) + ac;\n\nmoebius = 0.5 + (1.0 - abs( frac( moebius * 0.5 ) * 2 - 1.0 )-0.5)*0.99;\n\nuv = moebius;\n\nret = GetPixel(uv);\n    d = texsize.zw*4;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nret = tex2D(sampler_wrenches, uv-float2(dx.z,dy.z)*0.6);\nret = lerp(ret,-.4,GetBlur1(uv).z*0.4);\nret = lerp(ret,1.4,GetPixel(uv).z*0.6);\n}"}