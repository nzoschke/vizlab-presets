{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":1.766,"zoomexp":1.00016,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.6,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":6.4,"mv_y":4.8,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"rad":0.15774,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=1.571;a.x=.1*Math.floor(rand(11));a.y=.13*Math.floor(rand(11));a.r=.01*Math.floor(rand(100));a.g=.01*Math.floor(rand(100));a.b=.01*Math.floor(rand(100));a.r2=.01*Math.floor(rand(100));a.g2=.01*Math.floor(rand(100));a.b2=.01*Math.floor(rand(100));","init_eqs_eel":"","frame_eqs_eel":"ang = 1.571;\nx = int(rand(11))*.1;\ny = int(rand(11))*.13;\n\nr = int(rand(100))*.01;\ng = int(rand(100))*.01;\nb = int(rand(100))*.01;\nr2 = int(rand(100))*.01;\ng2 = int(rand(100))*.01;\nb2 = int(rand(100))*.01;"},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.ma+=3.1415*above(a.bass,.5)*.02*a.bass;a.ma-=3.1415*above(a.treb,.5)*.02*a.treb;a.mx+=.0008*Math.cos(a.ma);a.my+=.0008*Math.sin(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=a.mx;a.y=a.my;a.a=above(a.bass+a.mid+a.treb,.2);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.w=0;a.six=0;a.h3=0;a.q12=0;a.thresh=0;a.bt=0;a.dy_r=0;a.v=0;a.mm=0;a.h2=0;a.tt=0;a.bm=0;a.q11=0;a.q10=0;a.q4=0;a.dx_r=0;a.mt=0;a.mx=0;a.mn=0;a.bb=0;a.h1=0;a.q3=0;a.q7=0;a.q8=0;a.q11=div(.5,Math.asin(1));","frame_eqs_str":"a.wave_r=a.wave_r+.35*Math.sin(1.14*a.time)+.16*Math.sin(1.5*a.time);a.wave_g=a.wave_g+.36*Math.sin(1.27*a.time)+.15*Math.sin(1.11*a.time);a.wave_b=a.wave_b+.37*Math.sin(1.284*a.time)+.15*Math.sin(1.3*a.time);a.warp=0;a.ob_r=a.wave_g;a.ob_b=a.wave_r;a.ob_g=a.wave_b;a.ib_r=a.wave_r;a.ib_b=a.wave_g;a.ib_g=a.wave_r;a.bb=.98*a.bb+.5*a.bass;a.mm=.98*a.mm+.5*a.mid;a.tt=.98*a.tt+.5*a.treb;a.mx=Math.max(Math.max(a.bb,a.mm),a.tt);a.mn=Math.min(Math.min(a.bb,a.mm),a.tt);a.h1=div(a.bb-\na.mn,a.mx-a.mn);a.h2=div(a.mm-a.mn,a.mx-a.mn);a.h3=div(a.tt-a.mn,a.mx-a.mn);a.v=div(.2,a.fps);a.bm+=(a.h1-a.h2)*a.v;a.mt+=(a.h2-a.h3)*a.v;a.bt+=(a.h1-a.h3)*a.v;a.w=a.bm;a.q3=Math.sin(a.w);a.q4=Math.cos(a.w);a.q10=a.bm;a.q11=a.mt;a.q12=a.bt;","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.15*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.165*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.six=Math.sin(a.x);a.dx+=.01*Math.sin(Math.abs(12*a.y))*Math.sin(a.time);a.dy+=.01*Math.sin(Math.abs(12*a.x))*Math.cos(a.time);a.zoom+=.0095*(Math.sin(8+4*Math.sin(.2*a.time)*a.ang)+.3*Math.sin(Math.sin(2*a.time*Math.sin(a.time)*\na.rad))-.1*Math.cos(a.rad));a.rot+=.08*Math.abs(.746-a.rad)*Math.sin(2.2*(.5-a.rad)+5.7*Math.sin(.1*a.time));a.sx+=.01*(.99-a.rad)*Math.sin(.733*a.time)*below(Math.sin(a.time),0);a.sy+=.01*(.99-a.rad)*Math.cos(.953*a.time)*above(Math.sin(a.time),0);a.zoom-=.015*(1.5-a.rad)*below(a.rad,1.5);a.dx=.00001<Math.abs(above(a.y,.93))?.01:.00001<Math.abs(below(a.y,.01))?.00001<Math.abs(below(a.x,.3))?.00001<Math.abs(below(a.y,.5))?0:-.01:-.01:0;a.dy=.00001<Math.abs(below(a.x,.05))?.01:.00001<Math.abs(above(a.x,\n.94-a.q7))?-.01:0;a.zoom=.00001<Math.abs(above(a.x,.09))?.00001<Math.abs(below(a.x,.85))?.00001<Math.abs(above(a.y,.09))?.00001<Math.abs(below(a.y,.85))?.95:1:1:1:1;a.dy=.00001<Math.abs(below(a.y,.5))?.00001<Math.abs(below(a.x,.3))?.01:a.dy:a.dy;a.rot=.00001<Math.abs(above(a.x,.09))?.00001<Math.abs(below(a.x,.85))?.00001<Math.abs(above(a.y,.09))?.00001<Math.abs(below(a.y,.85))?.1*Math.sin(Math.sin(.1*a.ang*a.ang)+6*a.rad+.444*a.q8):0:0:0:0;","init_eqs_eel":"q11 = 0.5/asin(1);","frame_eqs_eel":"wave_r = wave_r + 0.35*sin(1.14*time) + 0.16*sin(1.5*time);\nwave_g = wave_g + 0.36*sin(1.27*time) + 0.15*sin(1.11*time);\nwave_b = wave_b + 0.37*sin(1.284*time) + 0.15*sin(1.3*time);\nwarp = 0;\n\nob_r = wave_g;\nob_b = wave_r;\nob_g = wave_b;\nib_r = wave_r;\nib_b = wave_g;\nib_g = wave_r;\n\nbb = bb*0.98 + bass*0.5;\nmm = mm*0.98 + mid*0.5;\ntt = tt*0.98 + treb*0.5;\n\nmx = max(max(bb,mm),tt);\nmn = min(min(bb,mm),tt);\n\nh1 = (bb-mn)/(mx-mn);\nh2 = (mm-mn)/(mx-mn);\nh3 = (tt-mn)/(mx-mn);\n\nv = 0.2/fps;\nbm = bm + (h1-h2)*v;\nmt = mt + (h2-h3)*v;\nbt = bt + (h1-h3)*v;\n\nw = bm;\nq3 = sin(w);\nq4 = cos(w);\n\n\nq10 = bm;\nq11 = mt;\nq12 = bt;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.15*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.165*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\nsix = sin(x);\n\ndx = dx + 0.01*sin(abs(12*y))*sin(time);\ndy = dy + 0.01*sin(abs(12*x))*cos(time);\nzoom = zoom + 0.0095*(sin(8+4*sin(0.2*time)*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\nrot = rot + 0.08*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\nzoom = zoom - 0.015*(0.5*abs(3)-rad)*below(rad,1.5);\ndx = if(above(y,.93),.01,if(below(y,.01),if(below(x,.3),if(below(y,.5),0,-.01),-.01),0));\ndy = if(below(x,.05),.01,if(above(x,(0.94 - q7)),-.01,0));\nzoom = if(above(x,.09),if(below(x,.85),if(above(y,.09),if(below(y,.85),.95,1),1),1),1);\ndy = if(below(y,.5),if(below(x,.3),.01,dy),dy);\nrot = if(above(x,.09),if(below(x,.85),if(above(y,.09),if(below(y,.85),0.1*sin(sin(ang*0.1*ang)+rad*6+q8*.444),0),0),0),0);","warp":" shader_body { \n  vec2 my_uv2_1;\n  vec2 dz_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 4.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = ((2.0 * (\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\n   + bias1)));\n  vec3 tmpvar_6;\n  tmpvar_6 = ((2.0 * (\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\n   + bias1)));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_5.x;\n  tmpvar_7.y = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8 = (tmpvar_7 * texsize.zw);\n  ret_3.x = (texture (sampler_fw_main, (uv - tmpvar_8)).x - ((\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3).x - (\n    (texture (sampler_blur1, (uv + tmpvar_8)).xyz * scale1)\n   + bias1).x));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_5.y;\n  tmpvar_9.y = tmpvar_6.y;\n  dz_2 = (-(tmpvar_9) * texsize.zw);\n  ret_3.y = ((texture (sampler_fw_main, (uv - dz_2)).y - 0.06) - ((\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  .y - \n    ((texture (sampler_blur1, (uv + dz_2)).xyz * scale1) + bias1)\n  .y) * 1.3));\n  vec2 tmpvar_10;\n  tmpvar_10 = ((uv_orig - 0.5) * (1.8 - (\n    (bass_att - treb_att)\n   * 0.015)));\n  vec2 tmpvar_11;\n  tmpvar_11.x = ((tmpvar_10.x * tmpvar_10.x) - (tmpvar_10.y * tmpvar_10.y));\n  tmpvar_11.y = ((2.0 * tmpvar_10.x) * tmpvar_10.y);\n  my_uv2_1 = (tmpvar_11 + vec2(0.28, 0.4));\n  vec2 tmpvar_12;\n  tmpvar_12.x = ((2.0 * (\n    (texture (sampler_blur1, (my_uv2_1 + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (my_uv2_1 - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\n   + bias1))).z;\n  tmpvar_12.y = ((2.0 * (\n    (texture (sampler_blur1, (my_uv2_1 + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (my_uv2_1 - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\n   + bias1))).z;\n  dz_2 = (tmpvar_12 * texsize.zw);\n  ret_3.z = (texture (sampler_main, clamp ((my_uv2_1 + dz_2), 0.0, 1.0)).z - 0.014);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_3;\n  ret = tmpvar_13.xyz;\n }","comp":" shader_body { \n  vec3 dy_1;\n  vec3 dx_2;\n  vec2 mirror_uv_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_6;\n  tmpvar_6.x = ((q4 * tmpvar_5.x) - (q3 * tmpvar_5.y));\n  tmpvar_6.y = ((q3 * tmpvar_5.x) + (q4 * tmpvar_5.y));\n  vec2 tmpvar_7;\n  tmpvar_7 = (0.5 + (tmpvar_6 * 2.0));\n  vec2 numerator_8;\n  numerator_8 = (tmpvar_7 - vec2(0.0, 0.5));\n  vec2 denominator_9;\n  denominator_9 = (tmpvar_7 - vec2(1.0, 0.5));\n  vec2 tmpvar_10;\n  tmpvar_10.x = ((numerator_8.x * denominator_9.x) + (numerator_8.y * denominator_9.y));\n  tmpvar_10.y = ((numerator_8.y * denominator_9.x) - (numerator_8.x * denominator_9.y));\n  vec2 tmpvar_11;\n  tmpvar_11 = (((tmpvar_10 / \n    ((denominator_9.x * denominator_9.x) + (denominator_9.y * denominator_9.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_12;\n  tmpvar_12 = sqrt(dot (tmpvar_11, tmpvar_11));\n  float tmpvar_13;\n  float tmpvar_14;\n  tmpvar_14 = (min (abs(\n    (tmpvar_11.x / tmpvar_11.y)\n  ), 1.0) / max (abs(\n    (tmpvar_11.x / tmpvar_11.y)\n  ), 1.0));\n  float tmpvar_15;\n  tmpvar_15 = (tmpvar_14 * tmpvar_14);\n  tmpvar_15 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_15) + 0.05368138) * tmpvar_15) - 0.1173503)\n     * tmpvar_15) + 0.1938925) * tmpvar_15) - 0.3326756)\n   * tmpvar_15) + 0.9999793) * tmpvar_14);\n  tmpvar_15 = (tmpvar_15 + (float(\n    (abs((tmpvar_11.x / tmpvar_11.y)) > 1.0)\n  ) * (\n    (tmpvar_15 * -2.0)\n   + 1.570796)));\n  tmpvar_13 = (tmpvar_15 * sign((tmpvar_11.x / tmpvar_11.y)));\n  if ((abs(tmpvar_11.y) > (1e-08 * abs(tmpvar_11.x)))) {\n    if ((tmpvar_11.y < 0.0)) {\n      if ((tmpvar_11.x >= 0.0)) {\n        tmpvar_13 += 3.141593;\n      } else {\n        tmpvar_13 = (tmpvar_13 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_13 = (sign(tmpvar_11.x) * 1.570796);\n  };\n  vec2 tmpvar_16;\n  tmpvar_16.x = (tmpvar_13 * 0.1591549);\n  tmpvar_16.y = tmpvar_12;\n  vec2 tmpvar_17;\n  tmpvar_17.x = ((tmpvar_16.x * 2.0) + q11);\n  tmpvar_17.y = ((0.3 * log(tmpvar_12)) + q12);\n  vec2 tmpvar_18;\n  tmpvar_18 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_17 * 0.5)) * 2.0) - 1.0)\n  )));\n  vec2 tmpvar_19;\n  tmpvar_19 = (texsize.zw * 3.0);\n  vec3 tmpvar_20;\n  tmpvar_20 = ((2.0 * (\n    (texture (sampler_blur1, (tmpvar_18 + (vec2(1.0, 0.0) * tmpvar_19))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (tmpvar_18 - (vec2(1.0, 0.0) * tmpvar_19))).xyz * scale1)\n   + bias1)));\n  vec3 tmpvar_21;\n  tmpvar_21 = ((2.0 * (\n    (texture (sampler_blur1, (tmpvar_18 + (vec2(0.0, 1.0) * tmpvar_19))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (tmpvar_18 - (vec2(0.0, 1.0) * tmpvar_19))).xyz * scale1)\n   + bias1)));\n  vec2 tmpvar_22;\n  tmpvar_22.x = tmpvar_20.x;\n  tmpvar_22.y = tmpvar_21.x;\n  mirror_uv_3 = (tmpvar_18 + ((tmpvar_22 * texsize.zw) * 4.0));\n  ret_4 = ((mix (ret_4, vec3(1.0, 1.0, 1.0), \n    ((((texture (sampler_blur1, mirror_uv_3).xyz * scale1) + bias1).x * (1.0 - (\n      (texture (sampler_blur2, mirror_uv_3).xyz * scale2)\n     + bias2).x)) * (pow (hue_shader, vec3(4.0, 4.0, 4.0)) * 1.4))\n  ) * texture (sampler_main, mirror_uv_3).xxx) + ((\n    (1.0 - texture (sampler_main, mirror_uv_3).x)\n   * \n    ((texture (sampler_blur1, mirror_uv_3).xyz * scale1) + bias1)\n  .x) * vec3(3.0, 3.0, 3.0)));\n  vec2 tmpvar_23;\n  tmpvar_23.x = tmpvar_20.x;\n  tmpvar_23.y = tmpvar_21.x;\n  mirror_uv_3 = (mirror_uv_3 - ((tmpvar_23 * texsize.zw) * 24.0));\n  dx_2 = ((2.0 * (\n    (texture (sampler_blur1, (mirror_uv_3 + (vec2(1.0, 0.0) * tmpvar_19))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (mirror_uv_3 - (vec2(1.0, 0.0) * tmpvar_19))).xyz * scale1)\n   + bias1)));\n  dy_1 = ((2.0 * (\n    (texture (sampler_blur1, (mirror_uv_3 + (vec2(0.0, 1.0) * tmpvar_19))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (mirror_uv_3 - (vec2(0.0, 1.0) * tmpvar_19))).xyz * scale1)\n   + bias1)));\n  vec2 tmpvar_24;\n  tmpvar_24.x = -(dx_2.y);\n  tmpvar_24.y = dy_1.y;\n  vec2 tmpvar_25;\n  tmpvar_25 = (tmpvar_24 * 0.25);\n  vec3 tmpvar_26;\n  tmpvar_26 = mix (ret_4, vec3(1.0, 1.0, 1.0), (mix (vec3(1.0, 0.7, 0.2), vec3(0.15, 0.0, 0.5), vec3(\n    ((((\n      ((mirror_uv_3.x * 0.8) - mirror_uv_3.y)\n     + 0.75) + tmpvar_25.x) + tmpvar_25.y) - 0.1)\n  )) * texture (sampler_main, mirror_uv_3).y));\n  vec2 tmpvar_27;\n  vec2 tmpvar_28;\n  tmpvar_28 = ((0.5 + (\n    (uv - 0.5)\n   * aspect.wz)) - vec2(0.5, 0.5));\n  vec2 tmpvar_29;\n  tmpvar_29.x = ((q4 * tmpvar_28.x) - (q3 * tmpvar_28.y));\n  tmpvar_29.y = ((q3 * tmpvar_28.x) + (q4 * tmpvar_28.y));\n  tmpvar_27 = (vec2(0.5, 0.5) + tmpvar_29);\n  mirror_uv_3 = tmpvar_27.yx;\n  vec2 tmpvar_30;\n  tmpvar_30 = (vec2(1.0, 0.0) * texsize.zw);\n  dx_2 = ((2.0 * texture (sampler_main, (tmpvar_27.yx + tmpvar_30)).xyz) - (2.0 * texture (sampler_main, (tmpvar_27.yx - tmpvar_30)).xyz));\n  vec2 tmpvar_31;\n  tmpvar_31 = (vec2(0.0, 1.0) * texsize.zw);\n  dy_1 = ((2.0 * texture (sampler_main, (tmpvar_27.yx + tmpvar_31)).xyz) - (2.0 * texture (sampler_main, (tmpvar_27.yx - tmpvar_31)).xyz));\n  vec2 tmpvar_32;\n  tmpvar_32.x = dx_2.z;\n  tmpvar_32.y = dy_1.z;\n  ret_4 = (1.0 - mix (tmpvar_26, vec3(0.9, 0.9, 1.0), vec3((1.0 - texture (sampler_main, \n    (tmpvar_27.yx - tmpvar_32)\n  ).z))));\n  vec4 tmpvar_33;\n  tmpvar_33.w = 1.0;\n  tmpvar_33.xyz = ret_4;\n  ret = tmpvar_33.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*4;\n    float3 dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) );\nfloat2 dz = float2(dx.x,dy.x)*texsize.zw;\n\n//ret = GetPixel(uv);\nret = 0;\nret.x = tex2d(sampler_fw_main,uv - dz).x - 0.0 - (GetBlur3(uv).x-GetBlur1(uv+dz).x) ;\n\ndz = -float2(dx.y,dy.y)*texsize.zw;\nret.y = tex2d(sampler_fw_main,uv - dz).y - 0.06 - (GetBlur2(uv).y-GetBlur1(uv+dz).y)*1.3 ;\n\nfloat zoom = 1.8-(bass_att-treb_att)*0.015;\nfloat2 cntr = float2(0,0);\nfloat2 c = float2(0.28,0.4);\n\n float2 my_uv2 = (uv_orig-0.5-cntr)*zoom; // using uv_orig here - no contortion to the nice julia island\n my_uv2 = float2(my_uv2.x*my_uv2.x - my_uv2.y*my_uv2.y, 2*my_uv2.x*my_uv2.y) + c; // u -> u^2 + c\nuv = my_uv2;\nd = texsize.zw*4;\ndx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) );\ndy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) );\ndz = float2(dx.z,dy.z)*texsize.zw*1;\n\nret.z = GetPixel(saturate(my_uv2+dz)).z - 0.014;\n\n}","comp_hlsl":"float2 complex_div(float2 numerator, float2 denominator){\n   return float2( numerator.x*denominator.x + numerator.y*denominator.y,\n                  numerator.y*denominator.x - numerator.x*denominator.y)/\n          (denominator.x*denominator.x + denominator.y*denominator.y);\n}\n\nfloat2 uv_polar(float2 domain, float2 center){\n   float2 c = domain - center;\n   float rad_hq = length(c);\n   float ang_hq = atan2(c.x,c.y);\n   return float2(ang_hq*M_INV_PI_2, rad_hq);\n}\n\nfloat2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){\n   float2 polar = uv_polar(domain, center);\n   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);\n}\n\nfloat2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){\n   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;\n}\n\nfloat2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){\n   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);\n   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);\n}\n\n\nfloat2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){\n   float2 uv_r = (domain-center);\n   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;\n}\n\n\nshader_body\n{\nfloat2 uvo = uv;\n\nfloat2 rotate_uv = 0.5+uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q3, q4, 2);\nfloat2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.3, float2(q11,q12));\nfloat2 mirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\n\nfloat2 d = texsize.zw*3;\nfloat3 dx = ( 2*GetBlur1(mirror_uv+float2(1,0)*d)-2*GetBlur1(mirror_uv-float2(1,0)*d) );\nfloat3 dy = ( 2*GetBlur1(mirror_uv+float2(0,1)*d)-2*GetBlur1(mirror_uv-float2(0,1)*d) );\n\nmirror_uv += float2(dx.x,dy.x)*texsize.zw*4;\n\nfloat3 aura = pow(hue_shader,4)*1.4;\nfloat3 glow = 3;\nfloat3 blob = float3(1,0.75,0)*0;\n\nfloat2 uv_red = mirror_uv;\nret = lerp(ret,1,(GetBlur1(uv_red).x)*(1-GetBlur2(uv_red).x)*aura);\nret = lerp(blob, ret, GetPixel(uv_red).x);\nret += (1-GetPixel(uv_red).x)*GetBlur1(uv_red).x*glow;\n\nmirror_uv-= float2(dx.x,dy.x)*texsize.zw*24;\ndx = ( 2*GetBlur1(mirror_uv+float2(1,0)*d)-2*GetBlur1(mirror_uv-float2(1,0)*d) );\ndy = ( 2*GetBlur1(mirror_uv+float2(0,1)*d)-2*GetBlur1(mirror_uv-float2(0,1)*d) );\nfloat2 dz = +float2(-dx.y,dy.y)*0.25;\nfloat3 bg = lerp(float3(1,0.7,0.2),float3(0.15,0,0.5),mirror_uv.x*0.8 - mirror_uv.y + 0.75+dz.x+dz.y-0.1)*(GetPixel(mirror_uv).y);\nret = lerp(ret,1,bg);\n\nmirror_uv = uv_rotate(0.5 + (uvo-0.5)*aspect.wz, 0.5, q3, q4, 1).yx;\n\nd = texsize.zw;\ndx = ( 2*GetPixel(mirror_uv+float2(1,0)*d)-2*GetPixel(mirror_uv-float2(1,0)*d) );\ndy = ( 2*GetPixel(mirror_uv+float2(0,1)*d)-2*GetPixel(mirror_uv-float2(0,1)*d) );\ndz = -float2(dx.z,dy.z);\n\nret = 1-lerp(ret,float3(0.9,0.9,1),1-GetPixel(mirror_uv+dz).z) ;\n}"}