{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"wrap":0,"invert":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.5,"modwavealphaend":1,"zoomexp":100,"zoom":0.99504,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.6,"ob_size":0.004,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.q1=.0003*pow(1+1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,6);a.wave_r+=Math.sin(.339*a.time);a.wave_g+=Math.sin(.369*a.time);a.wave_b+=Math.sin(.399*a.time);a.wave_x+=.3*Math.sin(a.time);a.wave_y+=.3*Math.cos(a.time);a.ib_r+=Math.sin(.565*a.time);a.ib_g+=Math.sin(.615*a.time);a.ib_b+=Math.sin(.665*a.time);a.ob_r+=Math.cos(.565*a.time);a.ob_g+=Math.cos(.615*a.time);a.ob_b+=Math.cos(.665*a.time);a.warp=0;","pixel_eqs_str":"a.zoom-=.025*Math.sin(6.6*a.fps);a.zoom-=.035*Math.sin(11*a.ang+a.time);a.rot+=.005*Math.sin(5.8*a.fps);","init_eqs_eel":"","frame_eqs_eel":"q1 = 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\nwave_r = wave_r + 1*sin(time*0.339);\nwave_g = wave_g + 1*sin(time*0.369);\nwave_b = wave_b + 1*sin(time*0.399);\nwave_x = wave_x + 0.3*sin(time);\nwave_y = wave_y + 0.3*cos(time);\nib_r = ib_r + 1*sin(time*0.565);\nib_g = ib_g + 1*sin(time*0.615);\nib_b = ib_b + 1*sin(time*0.665);\nob_r = ob_r + 1*cos(time*0.565);\nob_g = ob_g + 1*cos(time*0.615);\nob_b = ob_b + 1*cos(time*0.665);\n//ib_size = ib_size + 0.035*bass;\nwarp = 0;","pixel_eqs_eel":"zoom = zoom - 0.025*sin(fps*6.6);\nzoom = zoom - 0.035*sin(ang*11+(time));\nrot = rot + 0.005*sin(fps*5.8);","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = fract(uv);\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy);\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 12.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = (((2.0 * \n    ((texture (sampler_blur3, (uv_orig + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale3) + bias3)\n  ) - (2.0 * \n    ((texture (sampler_blur3, (uv_orig - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale3) + bias3)\n  )) * 0.5);\n  vec3 tmpvar_6;\n  tmpvar_6 = (((2.0 * \n    ((texture (sampler_blur3, (uv_orig + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale3) + bias3)\n  ) - (2.0 * \n    ((texture (sampler_blur3, (uv_orig - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale3) + bias3)\n  )) * 0.5);\n  ret_1.x = ((texture (sampler_fc_main, tmpvar_2).x - (\n    (((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3) - texture (sampler_fc_main, tmpvar_2).xyz)\n  .x * 0.1)) - 0.035);\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_5.x;\n  tmpvar_7.y = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_5.y;\n  tmpvar_8.y = tmpvar_6.y;\n  ret_1.y = (((texture (sampler_fc_main, \n    (((uv_orig + (\n      ((texture (sampler_noise_lq, tmpvar_3).xy - 0.5) * texsize.zw)\n     * 4.0)) - ((tmpvar_7 * texsize.zw) * 4.0)) + ((tmpvar_8 * texsize.zw) * 8.0))\n  ).y + \n    ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5) * 0.1)\n  ) - 0.012) + (texture (sampler_pc_main, uv_orig).z * 0.2)).x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_6.x;\n  tmpvar_9.y = -(tmpvar_5.x);\n  vec2 tmpvar_10;\n  tmpvar_10 = ((uv_orig + (\n    ((texture (sampler_noise_lq, tmpvar_3).xy - 0.5) * texsize.zw)\n   * 2.0)) + ((tmpvar_9 * texsize.zw) * 64.0));\n  ret_1.z = (((\n    (texture (sampler_fc_main, tmpvar_10).z + ((texture (sampler_fc_main, tmpvar_10).z - (\n      (texture (sampler_blur2, tmpvar_10).xyz * scale2)\n     + bias2).z) * 0.2))\n   + \n    (texture (sampler_noise_lq, tmpvar_3).xyz * 0.1)\n  ) - (\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\n   + bias3).x) - (clamp (\n    (1.0 - ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2).x)\n  , 0.0, 1.0) * 0.04)).x;\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n }","comp":"vec2 xlat_mutablefactorA;\n shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  xlat_mutablefactorA = (uv - vec2(0.5, 0.5));\n  vec2 tmpvar_3;\n  tmpvar_3.x = -((xlat_mutablefactorA.y * 1024.0));\n  tmpvar_3.y = (xlat_mutablefactorA.x * 1024.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = tmpvar_3.x;\n  tmpvar_4.y = -(tmpvar_3.y);\n  uv_1 = (vec2(-64.0, 64.0) * (tmpvar_4 / (\n    (tmpvar_3.x * tmpvar_3.x)\n   + \n    (tmpvar_3.y * tmpvar_3.y)\n  )).yx);\n  uv_1 = (0.5 + ((1.0 - \n    abs(((fract(\n      (mix ((0.5 + (\n        ((0.5 + ((uv - 0.5) * vec2(0.9, 1.1))) - 0.5)\n       * 2.0)), (uv_1 + 0.5), vec2(0.5, 0.5)) * 0.5)\n    ) * 2.0) - 1.0))\n  ) - 0.5));\n  vec2 tmpvar_5;\n  tmpvar_5 = (texsize.zw * 4.0);\n  vec2 tmpvar_6;\n  tmpvar_6.x = (((2.0 * \n    ((texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\n  )) * 0.5).y;\n  tmpvar_6.y = (((2.0 * \n    ((texture (sampler_blur1, (uv_1 + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_1 - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\n  )) * 0.5).y;\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv_1 - ((tmpvar_6 * texsize.zw) * 128.0));\n  ret_2 = (((\n    ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)\n  .x * \n    clamp ((1.0 - texture (sampler_main, uv_1).y), 0.0, 1.0)\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\n  ret_2 = (mix (mix (ret_2, \n    (pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0)) * 1.4)\n  , vec3(\n    ((texture (sampler_main, tmpvar_7).x * 0.8) + ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1).x)\n  )), vec3(1.0, 1.0, 1.0), (\n    (pow (hue_shader, vec3(8.0, 8.0, 8.0)) * texture (sampler_main, clamp (uv_1, 0.0, 1.0)).y)\n   * 1.2)) * clamp ((1.0 - texture (sampler_main, uv_1).z), 0.0, 1.0));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\nuv = frac(uv);\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1 + rand_frame.xy;\nfloat2 d = texsize.zw*12;\nfloat3 dx = (2*GetBlur3(uv_orig + float2(1,0)*d) - 2*GetBlur3(uv_orig -float2(1,0)*d))*0.5;\nfloat3 dy = (2*GetBlur3(uv_orig + float2(0,1)*d) - 2*GetBlur3(uv_orig -float2(0,1)*d))*0.5;\n\nfloat2 uvx = uv\n           + (tex2D(sampler_noise_lq, dither_uv).xy-0.5)*texsize.zw*0\n           - float2(dx.x,dy.x)*texsize.zw*0;\n    ret.x = tex2D( sampler_fc_main, uvx ).x\n          - (GetBlur3(uvx)-tex2D( sampler_fc_main, uvx )).x*0.1\n          - 0.035;\n\nfloat2 uvy = uv_orig\n           + (tex2D(sampler_noise_lq, dither_uv).xy-0.5)*texsize.zw*4\n           - float2(dx.x,dy.x)*texsize.zw*4\n           + float2(dx.y,dy.y)*texsize.zw*8;\n\nret.y = tex2d(sampler_fc_main,uvy).y\n      + (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)*0.1\n      - 0.012\n      + (tex2d(sampler_pc_main,uv_orig).z)*0.2;\n\n\nfloat2 uvz = uv_orig\n           + (tex2D(sampler_noise_lq, dither_uv).xy-0.5)*texsize.zw*2\n           + float2(dy.x,-dx.x)*texsize.zw*64\n           + float2(dx.z,dy.z)*texsize.zw*0;\nret.z = tex2d(sampler_fc_main,uvz).z\n      + (tex2d(sampler_fc_main,uvz).z-GetBlur2(uvz).z)*0.2 \n      + (tex2D(sampler_noise_lq, dither_uv).xyz)*0.1\n      - GetBlur3(uv_orig).x\n      - saturate(1-GetBlur2(uv_orig).x)*0.04;\n}","comp_hlsl":"float2 uvo, factorA, factorB, product, numerator, denominator, fraction;\nshader_body\n{\nuvo = 0.5 + (uv-0.5)*float2(0.9,1.1);\nfactorA = uv-float2(1-0.5,0.5);\nfactorB = float2(0,1024);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nnumerator = float2(1,0);\ndenominator = product;\nfraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part\n                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part\n                   (denominator.x*denominator.x + denominator.y*denominator.y);\nuv = fraction.yx*float2(-1,1)*64;\nuv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);\nuv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5); // Eo.S. mirror code with cutted borders\n\n    float2 d = texsize.zw*4;\n    float3 dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) )*0.5;\n    float3 dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) )*0.5;\n\nfloat2 uv_x = uv - float2(dx.y,dy.y)*texsize.zw*128;\nret = GetBlur2(uv_x).x*saturate(1-GetPixel(uv).y)*pow(hue_shader.yxz,8)*3;\nret = lerp(ret,pow(hue_shader.yzx,8)*1.4,GetPixel(uv_x).x*0.8 + GetBlur1(uv_x).x);\nret = lerp(ret,1,pow(hue_shader,8)*GetPixel(saturate(uv - float2(dx.z,dy.z)*2*0)).y*1.2);\nret *= saturate(1-GetPixel(uv).z);\n}"}