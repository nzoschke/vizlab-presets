{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"wave_dots":1,"wave_thick":1,"wrap":0,"invert":1,"wave_a":0.001,"wave_scale":0.5,"wave_smoothing":0,"zoomexp":100,"zoom":0.99504,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.004,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.q1=.0003*pow(1+1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,6);a.wave_r+=Math.sin(.339*a.time);a.wave_g+=Math.sin(.369*a.time);a.wave_b+=Math.sin(.399*a.time);a.wave_x+=.3*Math.sin(a.time);a.wave_y+=.3*Math.cos(a.time);a.ib_r+=Math.sin(.565*a.time);a.ib_g+=Math.sin(.615*a.time);a.ib_b+=Math.sin(.665*a.time);a.ob_r+=Math.cos(.565*a.time);a.ob_g+=Math.cos(.615*a.time);a.ob_b+=Math.cos(.665*a.time);a.warp=0;","pixel_eqs_str":"a.zoom-=.025*Math.sin(6.6*a.fps);a.zoom-=.035*Math.sin(11*a.ang+a.time);a.rot+=.005*Math.sin(5.8*a.fps);","init_eqs_eel":"","frame_eqs_eel":"q1 = 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\nwave_r = wave_r + 1*sin(time*0.339);\nwave_g = wave_g + 1*sin(time*0.369);\nwave_b = wave_b + 1*sin(time*0.399);\nwave_x = wave_x + 0.3*sin(time);\nwave_y = wave_y + 0.3*cos(time);\nib_r = ib_r + 1*sin(time*0.565);\nib_g = ib_g + 1*sin(time*0.615);\nib_b = ib_b + 1*sin(time*0.665);\nob_r = ob_r + 1*cos(time*0.565);\nob_g = ob_g + 1*cos(time*0.615);\nob_b = ob_b + 1*cos(time*0.665);\n//ib_size = ib_size + 0.035*bass;\nwarp = 0;","pixel_eqs_eel":"zoom = zoom - 0.025*sin(fps*6.6);\nzoom = zoom - 0.035*sin(ang*11+(time));\nrot = rot + 0.005*sin(fps*5.8);","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec3 tmpvar_3;\n  tmpvar_3 = ((640.0 * texsize.z) * ((2.0 * \n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\n  ) - (2.0 * \n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\n  )));\n  vec3 tmpvar_4;\n  tmpvar_4 = ((512.0 * texsize.w) * ((2.0 * \n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\n  ) - (2.0 * \n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\n  )));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.y;\n  tmpvar_5.y = tmpvar_4.y;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.x;\n  tmpvar_6.y = tmpvar_4.x;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.y;\n  tmpvar_7.y = -(tmpvar_3.y);\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv - ((\n    ((tmpvar_5 * 0.3) + (tmpvar_6 * 0.1))\n   + \n    (tmpvar_7 * 0.01)\n  ) * 0.01));\n  ret_2.x = texture (sampler_fw_main, (tmpvar_8 - floor(tmpvar_8))).x;\n  ret_2.x = (ret_2.x + ((\n    (2.0 * ret_2.x)\n   - \n    (2.0 * ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1).x)\n  ) * 0.25));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.y;\n  tmpvar_9.y = tmpvar_4.y;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.x;\n  tmpvar_10.y = -(tmpvar_3.y);\n  my_uv_1 = ((uv - (tmpvar_9 * 0.01)) + (tmpvar_10 * 0.001));\n  ret_2.y = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).y;\n  ret_2.y = (ret_2.y + ((\n    ((2.0 * ret_2.y) - (2.0 * ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y))\n   * 0.025) + 0.01));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_2;\n  ret = tmpvar_11.xyz;\n }","comp":"vec2 xlat_mutablefactorA;\n shader_body { \n  vec2 uv_1;\n  vec2 dz_2;\n  vec3 dy_3;\n  vec3 dx_4;\n  vec2 d_5;\n  vec3 ret_6;\n  xlat_mutablefactorA = (uv - vec2(0.5, 0.5));\n  vec2 tmpvar_7;\n  tmpvar_7.x = -((xlat_mutablefactorA.y * -1024.0));\n  tmpvar_7.y = (xlat_mutablefactorA.x * -1024.0);\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7.x;\n  tmpvar_8.y = -(tmpvar_7.y);\n  uv_1 = (vec2(-100.0, 100.0) * (tmpvar_8 / (\n    (tmpvar_7.x * tmpvar_7.x)\n   + \n    (tmpvar_7.y * tmpvar_7.y)\n  )).yx);\n  uv_1 = (0.5 + ((\n    (1.0 - abs(((\n      fract((mix ((0.5 + \n        (((0.5 + (\n          (uv - 0.5)\n         * vec2(1.1, 0.81))) - 0.5) * 2.0)\n      ), (uv_1 + 0.5), vec2(0.5, 0.5)) * 0.5))\n     * 2.0) - 1.0)))\n   - 0.5) * 0.98));\n  vec2 tmpvar_9;\n  vec2 tmpvar_10;\n  tmpvar_10 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_9.x = (texture (sampler_main, (uv_1 + tmpvar_10)).xyz - texture (sampler_main, (uv_1 - tmpvar_10)).xyz).y;\n  vec2 tmpvar_11;\n  tmpvar_11 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_9.y = (texture (sampler_main, (uv_1 + tmpvar_11)).xyz - texture (sampler_main, (uv_1 - tmpvar_11)).xyz).y;\n  d_5 = (texsize.zw * 2.0);\n  dx_4 = (((2.0 * \n    ((texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * d_5))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * d_5))).xyz * scale1) + bias1)\n  )) * 0.5);\n  dy_3 = (((2.0 * \n    ((texture (sampler_blur1, (uv_1 + (vec2(0.0, 1.0) * d_5))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_1 - (vec2(0.0, 1.0) * d_5))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec2 tmpvar_12;\n  tmpvar_12.x = dx_4.y;\n  tmpvar_12.y = dy_3.y;\n  dz_2 = ((tmpvar_9 * 3.0) + tmpvar_12);\n  ret_6 = (vec3(((\n    pow ((sqrt(dot (dz_2, dz_2)) * 0.8), 0.7)\n   + \n    (((texture (sampler_blur2, uv_1).xyz * scale2) + bias2).y * 0.4)\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\n  vec2 tmpvar_13;\n  tmpvar_13.x = dx_4.x;\n  tmpvar_13.y = dy_3.x;\n  vec3 tmpvar_14;\n  tmpvar_14 = mix (mix (ret_6, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \n    (uv_1 + ((tmpvar_13 * texsize.zw) * 18.0))\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv_1).zzz);\n  ret_6 = tmpvar_14;\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = tmpvar_14;\n  ret = tmpvar_15.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    float1 d = 0.01;\n    float3 dx = ( 2*GetBlur2(uv + float2(d,0)) - 2*GetBlur2(uv-float2(d,0)) )*1280*texsize.z*0.5;\n    float3 dy = ( 2*GetBlur2(uv + float2(0,d)) - 2*GetBlur2(uv-float2(0,d)) )*1024*texsize.w*0.5;\n\n    float2 my_uv = uv - (+float2(dx.y,dy.y)*0.3 + float2(dx.x,dy.x)*0.1 + float2(dy.y,-dx.y)*0.01)*0.01;\n    ret.x = tex2D( sampler_fw_main, my_uv-floor(my_uv)).x;\n    ret.x += (2*ret.x - 2*GetBlur1(my_uv).x)*.25 +0.0;\n\n\n    my_uv = uv - float2(dx.y,dy.y)*0.01 + float2(dy.x,-dx.y)*0.001;\n    ret.y = tex2D( sampler_fw_main, my_uv-floor(my_uv)).y;\n    ret.y += (2*ret.y - 2*GetBlur3(my_uv).y)*.025 +0.01;\n\n}","comp_hlsl":"float2 uvo, factorA, factorB, product, numerator, denominator, fraction;\nshader_body\n{\nuvo = 0.5 + (uv-0.5)*float2(1.1,0.81);\nfactorA = uv-float2(1-0.5,0.5);\nfactorB = float2(0,-1024);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nnumerator = float2(1,0);\ndenominator = product;\nfraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part\n                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part\n                   (denominator.x*denominator.x + denominator.y*denominator.y);\nuv = fraction.yx*float2(-1,1)*100;\nuv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);\nuv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.98; // Eo.S. mirror code with cutted borders\n    float2 d = texsize.zw;\n    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );\n    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );\nfloat2 dz = float2(dx.y,dy.y)*3;\n\nd = texsize.zw*2;\ndx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) )*0.5;\ndy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) )*0.5;\n\ndz +=float2(dx.y,dy.y);\n\nfloat3 bg = pow(length(dz)*0.8+0,0.7) + GetBlur2(uv).y*0.4-0.1;\n\nret = bg*float3(0.3,0.5,0.7);\nret = lerp(ret,float3(0.2,0.1,0),GetPixel(uv + float2(dx.x,dy.x)*texsize.zw*18).x*6);\nret = lerp(ret,1,GetPixel(uv).z);\n\n}"}