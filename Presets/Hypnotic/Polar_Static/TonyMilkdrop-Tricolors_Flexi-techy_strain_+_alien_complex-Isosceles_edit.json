{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_thick":1,"wrap":0,"darken":1,"solarize":1,"wave_a":1,"wave_scale":0.05,"wave_smoothing":0,"wave_mystery":-0.3,"warpanimspeed":2.699,"warpscale":2.518,"zoomexp":13.66864,"zoom":1.00499,"warp":0.24952,"wave_r":0,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.q1=.0003*pow(1+1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,6);a.monitor=a.q1;a.wave_r+=.5*Math.sin(.565*a.time);a.wave_g+=.5*Math.sin(.615*a.time);a.wave_b+=.5*Math.sin(.665*a.time);","pixel_eqs_str":"a.zoom+=.025;","init_eqs_eel":"","frame_eqs_eel":"q1 = 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\nmonitor = q1;\nwave_r = wave_r + 0.5*sin(time*0.565);\nwave_g = wave_g + 0.5*sin(time*0.615);\nwave_b = wave_b + 0.5*sin(time*0.665);","pixel_eqs_eel":"zoom = zoom + 0.025;\n//rot = rot + 0.05*sin(fps*100)*q1;","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = ((640.0 * texsize.z) * ((2.0 * \n    ((texture (sampler_blur2, (uv + vec2(0.02, 0.0))).xyz * scale2) + bias2)\n  ) - (2.0 * \n    ((texture (sampler_blur2, (uv - vec2(0.02, 0.0))).xyz * scale2) + bias2)\n  )).y);\n  tmpvar_2.y = ((512.0 * texsize.w) * ((2.0 * \n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.02))).xyz * scale2) + bias2)\n  ) - (2.0 * \n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.02))).xyz * scale2) + bias2)\n  )).y);\n  ret_1.y = texture (sampler_pc_main, (uv - (tmpvar_2 * 0.004))).y;\n  ret_1.y = (ret_1.y + ((\n    (((2.0 * ret_1.y) - (2.0 * (\n      (texture (sampler_blur1, uv).xyz * scale1)\n     + bias1).y)) - 0.1)\n   * 0.05) + 0.02));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":"vec2 xlat_mutablefactorA;\n shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  xlat_mutablefactorA = (uv - vec2(0.5, 0.5));\n  vec2 tmpvar_3;\n  tmpvar_3.x = -((xlat_mutablefactorA.y * 1024.0));\n  tmpvar_3.y = (xlat_mutablefactorA.x * 1024.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = tmpvar_3.x;\n  tmpvar_4.y = -(tmpvar_3.y);\n  uv_1 = (vec2(-64.0, 64.0) * (tmpvar_4 / (\n    (tmpvar_3.x * tmpvar_3.x)\n   + \n    (tmpvar_3.y * tmpvar_3.y)\n  )).yx);\n  uv_1 = (0.5 + ((1.0 - \n    abs(((fract(\n      (mix ((0.5 + (\n        ((0.5 + ((uv - 0.5) * vec2(0.9, 1.1))) - 0.5)\n       * 2.0)), (uv_1 + 0.5), vec2(0.5, 0.5)) * 0.5)\n    ) * 2.0) - 1.0))\n  ) - 0.5));\n  vec2 tmpvar_5;\n  tmpvar_5 = (texsize.zw * 4.0);\n  vec2 tmpvar_6;\n  tmpvar_6.x = (((2.0 * \n    ((texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\n  )) * 0.5).y;\n  tmpvar_6.y = (((2.0 * \n    ((texture (sampler_blur1, (uv_1 + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_1 - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\n  )) * 0.5).y;\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv_1 - ((tmpvar_6 * texsize.zw) * 128.0));\n  ret_2 = (((\n    ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)\n  .x * \n    clamp ((1.0 - texture (sampler_main, uv_1).y), 0.0, 1.0)\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\n  ret_2 = (mix (mix (ret_2, \n    (pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0)) * 1.4)\n  , vec3(\n    ((texture (sampler_main, tmpvar_7).x * 0.8) + ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1).x)\n  )), vec3(1.0, 1.0, 1.0), (\n    (pow (hue_shader, vec3(8.0, 8.0, 8.0)) * texture (sampler_main, clamp (uv_1, 0.0, 1.0)).y)\n   * 1.2)) * clamp ((1.0 - texture (sampler_main, uv_1).z), 0.0, 1.0));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    float1 d = 0.02;\n    float1 dx = ( 2*GetBlur2(uv + float2(d,0)) - 2*GetBlur2(uv-float2(d,0)) ).y*1280*texsize.z*0.5;\n    float1 dy = ( 2*GetBlur2(uv + float2(0,d)) - 2*GetBlur2(uv-float2(0,d)) ).y*1024*texsize.w*0.5;\n    float2 my_uv = uv - float2(dx,dy)*0.004;\n\n\n\n    ret.y = tex2D( sampler_pc_main, my_uv).y;\n    ret.y += (2*ret.y - 2*GetBlur1(uv).y - 0.1)*.05 +0.02;\n\nfloat t = q12;\nfloat2 c = ((uv-0.5)*aspect.wz).yx;\nfloat1 ang_hq = atan2(c.x,c.y);\nfloat1 rad_hq = length(c);\nfloat2 spiral = float2(ang_hq*q11,0.618*log(rad_hq)+ang_hq*q11-t);\nspiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 )); // mirror\n\n}","comp_hlsl":"float2 uvo, factorA, factorB, product, numerator, denominator, fraction;\nshader_body\n{\nuvo = 0.5 + (uv-0.5)*float2(0.9,1.1);\nfactorA = uv-float2(1-0.5,0.5);\nfactorB = float2(0,1024);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nnumerator = float2(1,0);\ndenominator = product;\nfraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part\n                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part\n                   (denominator.x*denominator.x + denominator.y*denominator.y);\nuv = fraction.yx*float2(-1,1)*64;\nuv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);\nuv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5); // Eo.S. mirror code with cutted borders\n\n    float2 d = texsize.zw*4;\n    float3 dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) )*0.5;\n    float3 dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) )*0.5;\n\nfloat2 uv_x = uv - float2(dx.y,dy.y)*texsize.zw*128;\nret = GetBlur2(uv_x).x*saturate(1-GetPixel(uv).y)*pow(hue_shader.yxz,8)*3;\nret = lerp(ret,pow(hue_shader.yzx,8)*1.4,GetPixel(uv_x).x*0.8 + GetBlur1(uv_x).x);\nret = lerp(ret,1,pow(hue_shader,8)*GetPixel(saturate(uv - float2(dx.z,dy.z)*2*0)).y*1.2);\nret *= saturate(1-GetPixel(uv).z);\n}"}