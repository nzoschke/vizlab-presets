{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":0.107,"zoomexp":4.10046,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":366,"rad":0.0303,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;","frame_eqs_str":"a.ma+=3.1415*above(a.bass,1)*.01*a.bass;a.ma-=3.1415*above(a.treb,1)*.01*a.treb;a.mx+=.0002*Math.cos(a.ma);a.my+=.0002*Math.sin(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=a.mx;a.y=a.my;a.a=above(a.bass+a.mid+a.treb,.8);","init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":408,"rad":0.03,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;","frame_eqs_str":"a.ma+=3.1415*above(a.bass,1)*.05*a.bass;a.ma-=3.1415*above(a.mid,1)*.05*a.mid;a.mx+=.0001*Math.cos(a.ma);a.my+=.0001*Math.sin(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=a.mx;a.y=a.my;a.a=above(a.bass+a.mid+a.treb,.1);","init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":262,"rad":0.0297,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;","frame_eqs_str":"a.ma+=3.1415*above(a.mid,1)*.01*a.mid;a.ma-=3.1415*above(a.treb,1)*.01*a.treb;a.mx+=.0004*Math.cos(a.ma);a.my+=.0004*Math.sin(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=a.mx;a.y=a.my;a.a=above(a.bass+a.mid+a.treb,.3);","init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":276,"rad":0.0303,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;","frame_eqs_str":"a.ma+=3.1415*above(a.bass,.5)*.02*a.bass;a.ma-=3.1415*above(a.treb,.5)*.02*a.treb;a.mx+=.0008*Math.cos(a.ma);a.my+=.0008*Math.sin(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=a.mx;a.y=a.my;a.a=above(a.bass+a.mid+a.treb,.2);","init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.3));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));"}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.tic=0;a.sw=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.meanbass_att=0;a.q29=0;a.q1=0;a.mq31=0;a.q5=0;a.mq21=0;a.mq24=0;a.q9=0;a.chng=0;a.mq28=0;a.tin=0;a.lastbeat=0;a.mq23=0;a.beatrate=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.peakbass_att=0;a.q10=0;a.atime=0;a.an=0;a.alt=0;a.q26=0;a.mq27=0;a.mq25=0;a.volume=0;a.mq22=0;a.beat=0;a.vol=0;a.mq26=0;a.sp=0;a.q2=0;a.q27=0;a.q7=0;a.q28=0;a.q8=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.volume=.3*\n(a.bass+a.mid);a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.05*(19*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,a.peakbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+\na.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-a.beat)*a.peakbass_att*(.96*above(a.time-a.lastbeat,2*a.beatrate)+.996*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.zoom=1;a.decay=1;a.warp=0;a.wave_a=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.q2=1;a.q1=1;a.vol+=(div(a.alt+a.bass+a.mid,3)-a.vol)*a.tic;a.q5=a.vol*a.vol*a.vol*2;a.q8=.5*Math.sin(a.time);a.q9=\n.5*Math.sin(.75*a.time);a.sw=Math.abs(a.sw-a.beat);a.an+=.5*a.tic*(1-2*a.sw);a.q7=1+1*(pow(a.q8,2)+pow(a.q9,2));a.q10=Math.sin(a.an);a.q11=Math.cos(a.an);a.sp+=a.tic*a.vol*a.vol*.5;a.q12=a.sp;a.monitor=a.q12;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n//begin beat code\nvolume = 0.3*(bass+mid);\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.05*(meanbass_att*19 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\n//Adjust responsiveness: To increase responsiveness, set the \"0.96 and \"0.996\" on the next line to slightly lower values. Higher values decrease responsiveness.\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\n//end beat code\n\nzoom = 1;\ndecay = 1;\nwarp = 0;\nwave_a = 0;\n\ntic = min(time-tin,.1);\ntin = time;\n\nq2 = 1;\n\nq1=1;\nvol = vol + ((alt + bass + mid)/3-vol)*tic*1;\nq5 = vol*vol*vol*2;\n\n\nq8 = sin(time)*.5;\nq9 = sin(time*.75)*.5;\n\nsw = abs(sw - beat);\nan = an + tic*.5*(1-2*sw);\n\n\nq7 = 1+(pow(q8,2) + pow(q9,2))*1;\nq10 = sin(an);\nq11 = cos(an);\n\nsp = sp + tic*vol*vol*.5;\n\nq12 = sp;\n\nmonitor = q12;","pixel_eqs_eel":"//zoom = pow(rad,2)+.01;","warp":" shader_body { \n  float conway_1;\n  vec3 ret_2;\n  ret_2 = ((texture (sampler_main, uv_orig).xyz * vec3(0.97, 1.0, 0.97)) - vec3(0.03, 0.0, 0.03));\n  ret_2 = (ret_2 - ((slow_roam_sin.wzy * slow_roam_cos.zxy) * 0.5));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_blur1, uv_orig);\n  ret_2.z = (ret_2.z + ((\n    (tmpvar_3.xyz * scale1)\n   + bias1).z * 0.45));\n  ret_2.x = (ret_2.x + ((\n    ((tmpvar_3.xyz * scale1) + bias1)\n  .z * 0.05) + (\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\n  .z * 0.05)));\n  ret_2.z = (ret_2.z - ret_2.x);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\n    ret_2.y = (ret_2.y - (tmpvar_4.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (ret_2.z - (tmpvar_4.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (ret_2.x - (tmpvar_4.z * 0.5));\n  };\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, uv_orig);\n  ret_2.y = clamp (tmpvar_5.y, 0.0, 1.0);\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).y + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(0.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).y);\n  float tmpvar_6;\n  tmpvar_6 = (((q5 * \n    (1.0 - ((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1).y)\n  ) * (1.0 - \n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\n  .y)) * (1.0 - (\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\n   + bias3).y));\n  conway_1 = (conway_1 - tmpvar_5.x);\n  if ((conway_1 > 0.0)) {\n    float tmpvar_7;\n    tmpvar_7 = clamp (ret_2.y, 0.0, 1.0);\n    if ((tmpvar_7 == 0.0)) {\n      ret_2.y = (floor((tmpvar_6 * 1.8)) * q1);\n    };\n  };\n  ret_2.y = (ret_2.y - ret_2.x);\n  ret_2 = (ret_2 - (1.0 - q2));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","comp":"vec2 xlat_mutablefactorA;\n shader_body { \n  vec2 uv_1;\n  vec2 uvo_2;\n  vec3 ret_3;\n  uv_1 = (0.5 + ((uv - 0.5) * 0.95));\n  uvo_2 = uv_1;\n  uv_1 = (uv_1 - 0.5);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q1;\n  tmpvar_4.y = q2;\n  xlat_mutablefactorA = (uv_1 + tmpvar_4);\n  vec2 tmpvar_5;\n  tmpvar_5 = (xlat_mutablefactorA * vec2(8.0, 8.0));\n  vec2 tmpvar_6;\n  tmpvar_6.x = q3;\n  tmpvar_6.y = q4;\n  xlat_mutablefactorA = (uv_1 + tmpvar_6);\n  vec2 tmpvar_7;\n  tmpvar_7 = (xlat_mutablefactorA * vec2(8.0, 8.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = q5;\n  tmpvar_8.y = q6;\n  xlat_mutablefactorA = (uv_1 + tmpvar_8);\n  vec2 tmpvar_9;\n  tmpvar_9 = (xlat_mutablefactorA * vec2(8.0, 8.0));\n  vec2 tmpvar_10;\n  tmpvar_10.x = q7;\n  tmpvar_10.y = q8;\n  xlat_mutablefactorA = (uv_1 + tmpvar_10);\n  vec2 tmpvar_11;\n  tmpvar_11 = (xlat_mutablefactorA * vec2(8.0, 8.0));\n  vec2 tmpvar_12;\n  tmpvar_12.x = ((tmpvar_5.x * tmpvar_7.x) - (tmpvar_5.y * tmpvar_7.y));\n  tmpvar_12.y = ((tmpvar_5.x * tmpvar_7.y) + (tmpvar_5.y * tmpvar_7.x));\n  vec2 tmpvar_13;\n  tmpvar_13.x = ((tmpvar_9.x * tmpvar_11.x) - (tmpvar_9.y * tmpvar_11.y));\n  tmpvar_13.y = ((tmpvar_9.x * tmpvar_11.y) + (tmpvar_9.y * tmpvar_11.x));\n  xlat_mutablefactorA = tmpvar_12;\n  vec2 tmpvar_14;\n  tmpvar_14.x = ((tmpvar_12.x * tmpvar_13.x) - (tmpvar_12.y * tmpvar_13.y));\n  tmpvar_14.y = ((tmpvar_12.x * tmpvar_13.y) + (tmpvar_12.y * tmpvar_13.x));\n  vec2 tmpvar_15;\n  tmpvar_15.x = tmpvar_14.x;\n  tmpvar_15.y = -(tmpvar_14.y);\n  uv_1 = (vec2(-32.0, 32.0) * (tmpvar_15 / (\n    (tmpvar_14.x * tmpvar_14.x)\n   + \n    (tmpvar_14.y * tmpvar_14.y)\n  )).yx);\n  vec2 tmpvar_16;\n  tmpvar_16 = mix ((0.5 + (\n    (uvo_2 - 0.5)\n   * 2.0)), (uv_1 + 0.5), vec2(0.5, 0.5));\n  vec2 x_17;\n  x_17 = (tmpvar_16 - 0.5);\n  uv_1 = (0.5 + ((1.0 - \n    abs(((fract(\n      (tmpvar_16 * 0.5)\n    ) * 2.0) - 1.0))\n  ) - 0.5));\n  ret_3 = (mix (vec3(0.8, 0.5, 0.0), vec3(-0.5, -0.5, -0.5), (\n    (((texture (sampler_blur2, uv_1).xyz * scale2) + bias2) * 2.0)\n   - texture (sampler_main, uv_1).xyz).xxx) - ((slow_roam_sin.wzy * slow_roam_cos.zxy) * 0.5));\n  vec3 tmpvar_18;\n  tmpvar_18 = mix (ret_3, vec3(1.0, 1.0, 1.0), vec3(((\n    (((texture (sampler_blur3, uv_1).xyz * scale3) + bias3) * 2.0)\n   - texture (sampler_main, uv_1).xyz).y * 1.5)));\n  ret_3 = tmpvar_18;\n  float tmpvar_19;\n  tmpvar_19 = clamp ((1.6 - (\n    pow (sqrt(dot (x_17, x_17)), 6.0)\n   * 0.004)), 0.0, 1.0);\n  vec4 tmpvar_20;\n  tmpvar_20 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_18.x > (q26 * q13)) && (tmpvar_18.x <= (q23 * q11)))) {\n    ret_3.z = (tmpvar_18.z - (tmpvar_20.x * 0.5));\n  };\n  if (((tmpvar_18.y > (q25 * q11)) && (tmpvar_18.y <= (q22 * q12)))) {\n    ret_3.x = (tmpvar_18.x - (tmpvar_20.y * 0.5));\n  };\n  if (((ret_3.z > (q24 * q12)) && (ret_3.z <= (q21 * q13)))) {\n    ret_3.y = (tmpvar_18.y - (tmpvar_20.z * 0.5));\n  };\n  ret_3 = (1.0 - mix ((\n    (((texture (sampler_blur3, uvo_2).xyz * scale3) + bias3) * 2.0)\n   - texture (sampler_main, uvo_2).xyz).yyy, ret_3, vec3(tmpvar_19)));\n  vec4 tmpvar_21;\n  tmpvar_21.w = 1.0;\n  tmpvar_21.xyz = ret_3;\n  ret = tmpvar_21.xyz;\n }","warp_hlsl":"\nshader_body\n{\n\nret.xyz = tex2D(sampler_main, uv_orig).xyz*float3(.97,1,.97) - float3(.03,0,.03);\n\nret-=slow_roam_sin.wzy*slow_roam_cos.zxy*.5;\nret.z += GetBlur1(uv_orig).z*.45;\nret.x += GetBlur1(uv_orig).z*.05 + GetBlur3(uv_orig).z*.05;\nret.z -= ret.x;\n\nfloat2 pixelsize = texsize.zw;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; \nret.y = saturate(tex2D( sampler_pw_main,uv_orig).y);\n\nfloat1 conway = tex2D( sampler_pw_main, uv_orig + float2(-1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,1)*pixelsize).y;\n\nfloat1 test = q5*(1-GetBlur1(uv_orig).y)*(1-GetBlur2(uv_orig).y)*(1-GetBlur3(uv_orig).y);\n\nconway -= tex2D( sampler_pw_main, uv_orig).x;\n\n\nif (conway > 0) {\nif (saturate(ret.y) == 0) {\nret.y = floor(test*1.8)*q1;\n}\n}\n\nret.y -= ret.x;\n\nret.xyz -= 1-q2;\n}","comp_hlsl":"sampler sampler_fc_sunrise;\nfloat2 factorA, factorB, product;\nfloat2 numerator, denominator, fraction;\nshader_body\n{\nuv = 0.5 + (uv-0.5)*0.95;\nfloat2 uvo = uv;\nuv = (uv-0.5);\nfactorA = uv+ float2(q1,q2);\nfactorB = float2(8,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv1 = product;\nfactorA = uv+ float2(q3,q4);\nfactorB = float2(8,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv2 = product;\nfactorA = uv+ float2(q5,q6);\nfactorB = float2(8,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv3 = product;\nfactorA = uv+ float2(q7,q8);\nfactorB = float2(8,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv4 = product;\nfactorA = uv1;\nfactorB = uv2;\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv12 = product;\nfactorA = uv3;\nfactorB = uv4;\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv34 = product;\nfactorA = uv12;\nfactorB = uv34;\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nnumerator = float2(1,0);\ndenominator = product;\nfraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part\n                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part\n                   (denominator.x*denominator.x + denominator.y*denominator.y);\nuv = fraction.yx*float2(-1,1)*32;\nuv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);\nfloat l = length(uv-0.5);\nuv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5); // Eo.S. mirror code with cutted borders\nret = lerp(float3(0.8,0.5,0),-0.5,(GetBlur2(uv)*2-GetPixel(uv)).x);\nret-=slow_roam_sin.wzy*slow_roam_cos.zxy*.5;\nret = lerp(ret,1,(GetBlur3(uv)*2-GetPixel(uv)).y*1.5);\nfloat c =saturate(1.6-pow(l,6)*0.004);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret = lerp((GetBlur3(uvo)*2-GetPixel(uvo)).y,ret,c);\nret=1-ret;\n}"}