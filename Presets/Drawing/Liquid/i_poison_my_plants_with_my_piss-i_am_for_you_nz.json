{"version":2,"baseVals":{"rating":5,"wave_mode":5,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":2.002,"wave_scale":0.729,"wave_smoothing":0.783,"wave_mystery":-0.14,"modwavealphastart":0.76,"modwavealphaend":0.9,"warpanimspeed":0.012,"warpscale":100,"zoomexp":0.1584,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0.97},"shapes":[{"baseVals":{"enabled":1,"sides":5,"thickoutline":1,"rad":0.07592,"ang":0.01,"a":0.63,"a2":0.6,"border_r":0.46,"border_g":0.37,"border_b":0.6,"border_a":0.5},"init_eqs_str":"a.q3=0;","frame_eqs_str":"a.x=.5+.2*Math.cos(.5*a.q3)+.25*Math.cos(5.5*a.time);a.y=.5+.2*Math.sin(.5*a.q3)+.25*Math.sin(5.5*a.time);a.r=.5+.5*Math.sin(1.713*a.time+2);a.g=.5+.5*Math.sin(1.063*a.time+3);a.b=.5+.5*Math.sin(1.054*a.time+1);a.r2=.5+.5*Math.sin(1.085*a.time+3);a.g2=.5+.5*Math.sin(1.056*a.time+1);a.b2=.5+.5*Math.sin(1.038*a.time+3);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.20*cos(q3*0.5) + 0.25*cos(time*5.5);\ny = 0.5 + 0.20*sin(q3*0.5) + 0.25*sin(time*5.5);\nr = 0.5 + 0.5*sin(time*1.713 + 2);\ng = 0.5 + 0.5*sin(time*1.063 + 3);\nb = 0.5 + 0.5*sin(time*1.054 + 1);\nr2 = 0.5 + 0.5*sin(time*1.085 + 3);\ng2 = 0.5 + 0.5*sin(time*1.056+ 1);\nb2 = 0.5 + 0.5*sin(time*1.038 + 3);"},{"baseVals":{"enabled":1,"sides":32,"rad":0.07345,"ang":0.03,"r":0.21,"g":0.44,"b":0.23,"a":0.55,"r2":0.18,"b2":0.11,"a2":0.53,"border_r":0.15,"border_g":0.4,"border_b":0.48,"border_a":0.43},"init_eqs_str":"","frame_eqs_str":"a.ang=2.4*a.time;a.x=.5+.26*Math.cos(3.1*a.time)+.13*Math.cos(1.7*a.time);a.y=.5+.22*Math.sin(3.3*a.time)+.14*Math.sin(1.2*a.time);a.r=.5+.5*Math.sin(.713*a.time+1);a.g=.5+.5*Math.sin(.563*a.time+2);a.b=.5+.5*Math.sin(.654*a.time+5);a.r2=.5+.5*Math.sin(.885*a.time+4);a.g2=.5+.5*Math.sin(.556*a.time+1);a.b2=.5+.5*Math.sin(.638*a.time+3);","init_eqs_eel":"","frame_eqs_eel":"ang = time*2.4;\nx = 0.5 + 0.26*cos(time*3.1) + 0.13*cos(time*1.7);\ny = 0.5 + 0.22*sin(time*3.3) + 0.14*sin(time*1.2);\nr = 0.5 + 0.5*sin(time*0.713 + 1);\ng = 0.5 + 0.5*sin(time*0.563 + 2);\nb = 0.5 + 0.5*sin(time*0.654 + 5);\nr2 = 0.5 + 0.5*sin(time*0.885 + 4);\ng2 = 0.5 + 0.5*sin(time*0.556+ 1);\nb2 = 0.5 + 0.5*sin(time*0.638 + 3);"},{"baseVals":{"enabled":1,"sides":5,"thickoutline":1,"rad":0.08147,"ang":0.03,"r":0.59,"g":0.43,"b":0.29,"a":0.59,"r2":0.16,"g2":0.4,"b2":0.54,"a2":0.58,"border_r":0.39,"border_g":0,"border_b":0.35,"border_a":0.49},"init_eqs_str":"a.q3=0;","frame_eqs_str":"a.x=.5+.15*Math.cos(.5*a.q3)+.21*Math.sin(7.5*a.time);a.y=.5+.15*Math.sin(.5*a.q3)+.21*Math.cos(7.5*a.time);a.r=.5+.5*Math.sin(1.713*a.time+1);a.g=.5+.5*Math.sin(1.563*a.time+3);a.b=.5+.5*Math.sin(1.654*a.time+2);a.r2=.5+.5*Math.sin(1.885*a.time+3);a.g2=.5+.5*Math.sin(1.556*a.time+2);a.b2=.5+.5*Math.sin(1.638*a.time+4);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.15*cos(q3*0.5) + 0.21*sin(time*7.5);\ny = 0.5 + 0.15*sin(q3*0.5) + 0.21*cos(time*7.5);\nr = 0.5 + 0.5*sin(time*1.713 + 1);\ng = 0.5 + 0.5*sin(time*1.563 + 3);\nb = 0.5 + 0.5*sin(time*1.654 + 2);\nr2 = 0.5 + 0.5*sin(time*1.885 + 3);\ng2 = 0.5 + 0.5*sin(time*1.556+ 2);\nb2 = 0.5 + 0.5*sin(time*1.638 + 4);"},{"baseVals":{"enabled":1,"sides":32,"x":0.51,"y":0.49,"rad":0.07123,"ang":0.06283,"a":0.56,"a2":0.55,"border_r":0.46,"border_g":0.28,"border_b":0.54,"border_a":0.48},"init_eqs_str":"a.q3=0;","frame_eqs_str":"a.x=.5+.17*Math.cos(.5*a.q3)+.11*Math.cos(5.5*a.time);a.y=.5+.17*Math.sin(.5*a.q3)+.11*Math.sin(5.5*a.time);a.r=.5+.5*Math.sin(1.013*a.time+2);a.g=.5+.5*Math.sin(1.963*a.time+3);a.b=.5+.5*Math.sin(1.054*a.time+1);a.r2=.5+.5*Math.sin(1.185*a.time+3);a.g2=.5+.5*Math.sin(1.356*a.time+2);a.b2=.5+.5*Math.sin(1.238*a.time+4);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.17*cos(q3*0.5) + 0.11*cos(time*5.5);\ny = 0.5 + 0.17*sin(q3*0.5) + 0.11*sin(time*5.5);\nr = 0.5 + 0.5*sin(time*1.013 + 2);\ng = 0.5 + 0.5*sin(time*1.963 + 3);\nb = 0.5 + 0.5*sin(time*1.054 + 1);\nr2 = 0.5 + 0.5*sin(time*1.185 + 3);\ng2 = 0.5 + 0.5*sin(time*1.356+ 2);\nb2 = 0.5 + 0.5*sin(time*1.238 + 4);"}],"waves":[{"baseVals":{"enabled":1,"samples":428,"sep":2,"usedots":1,"scaling":0.99998,"smoothing":0.4999},"init_eqs_str":"a.y3=0;a.z2=0;a.y1=0;a.t5=0;a.t1=0;a.x1=0;a.q1=0;a.z3=0;a.t3=0;a.x3=0;a.t6=0;a.ry=0;a.rz=0;a.hu=0;a.rx=0;a.x2=0;a.t2=0;a.y2=0;a.z1=0;a.t4=0;","frame_eqs_str":"a.rx=a.rx+.025+.025*Math.sin(a.bass_att);a.ry=a.ry+.025+.25*Math.sin(a.treb_att);a.rz+=.01;a.t1=Math.sin(a.rx);a.t2=Math.cos(a.rx);a.t3=Math.sin(a.ry);a.t4=Math.cos(a.ry);a.t5=Math.sin(a.rz);a.t6=Math.cos(a.rz);","point_eqs_str":"a.sample=a.sample*a.q1*.5;a.x1=Math.sin(a.sample)*Math.sin(80*a.sample)*.3;a.y1=.3*Math.cos(a.sample);a.z1=Math.sin(a.sample)*Math.cos(80*a.sample)*.3;a.x1+=.5*Math.sin(.1*a.time);a.y1+=.5*Math.cos(.2*a.time);a.x2=a.x1*a.t4-a.z1*a.t3;a.z2=a.x1*a.t3+a.z1*a.t4;a.y2=a.y1*a.t2-a.z2*a.t1;a.z3=a.y1*a.t1+a.z2*a.t2+1;a.x3=a.x2*a.t6-a.y2*a.t5;a.y3=a.x2*a.t5+a.y2*a.t6;a.z3=.00001<Math.abs(above(a.z3,.1))?div(.5,a.z3):0;a.x=(.00001<Math.abs(a.z3)?a.x3*a.z3:a.x)+.5;a.y=(.00001<Math.abs(a.z3)?\na.y3*a.z3:a.y)+.5;a.hu=a.sample+Math.sin(a.time);a.r=.5*Math.sin(a.hu)+.5;a.g=.5*Math.sin(a.hu+.33*a.q1)+.5;a.b=.5*Math.sin(a.hu+.66*a.q1)+.5;a.a=.16*(a.bass+a.mid+a.treb)+.5;","init_eqs_eel":"","frame_eqs_eel":"\nrx=rx+.025+sin(bass_att)*.025;\nry=ry+.025+sin(treb_att)*.25;\nrz=rz+.01;\n\nt1=sin(rx);t2=cos(rx);\nt3=sin(ry);t4=cos(ry);\nt5=sin(rz);t6=cos(rz);","point_eqs_eel":"sample=sample*q1*.5;\nx1=sin(sample)*sin(sample*80)*.3;\ny1=cos(sample)*.3;\nz1=sin(sample)*cos(sample*80)*.3;\nx1=x1+sin(time*.1)*.5;\ny1=y1+cos(time*.2)*.5;\nx2=x1*t4-z1*t3;z2=x1*t3+z1*t4;\ny2=y1*t2-z2*t1;z3=y1*t1+z2*t2+1;\nx3=x2*t6-y2*t5;y3=x2*t5+y2*t6;\nz3=if(above(z3,.1),.5/z3,0);\nx=if(z3,x3*z3,x)+.5;\ny=if(z3,y3*z3,y)+.5;\nhu=sample+sin(time);\nr=sin(hu)*.5+.5;\ng=sin(hu+q1*.33)*.5+.5;\nb=sin(hu+q1*.66)*.5+.5;\na=(bass+mid+treb)*.16+.5;"},{"baseVals":{"enabled":1,"thick":1,"scaling":0.46374,"smoothing":0},"init_eqs_str":"a.y3=0;a.z2=0;a.y1=0;a.t5=0;a.t1=0;a.x1=0;a.z4=0;a.nsample=0;a.t8=0;a.z3=0;a.t3=0;a.rotz=0;a.x3=0;a.x4=0;a.tvar=0;a.x2=0;a.t2=0;a.y2=0;a.svar=0;a.fvar=0;a.z1=0;a.roty=0;a.t4=0;a.y4=0;a.rotx=0;a.t8=3.14159265;a.t5=1;","frame_eqs_str":"a.rotx+=a.bass;a.roty+=a.mid;a.rotz+=a.treb;a.t1=div(a.t8*a.rotx,90);a.t2=div(a.t8*a.roty,90);a.t3=div(a.t8*a.rotz,90);a.t4=3*Math.sin(a.time+.66*a.t8);a.t5=10+8*Math.cos(a.time+.66*a.t8);a.b=.3-.4*Math.cos(a.time+1.16*a.t8);a.g=.4-.4*Math.sin(a.time+1.06*a.t8);a.r=.2-.4*Math.sin(a.time+.86*a.t8);","point_eqs_str":"a.fvar=512*a.sample;a.svar=div(a.fvar,64);a.tvar=bitand(0,a.svar);a.nsample=.001*a.tvar;a.x1=Math.sin(a.t8*a.sample)*Math.sin(4*a.t8*a.sample);a.y1=Math.cos(a.t8*a.nsample);a.z1=Math.sin(a.t8*a.sample)*Math.cos(4*a.t8*a.sample);a.y2=a.y1*Math.cos(a.t1)-a.z1*Math.sin(a.t1);a.z2=a.y1*Math.sin(a.t1)+a.z1*Math.cos(a.t1);a.x2=a.z2*Math.sin(a.t2)+a.x1*Math.cos(a.t2);a.z3=a.z2*Math.cos(a.t2)-a.x1*Math.sin(a.t2);a.x3=a.x2*Math.cos(a.t3)-a.y2*Math.sin(a.t3);a.y3=a.y2*Math.cos(a.t3)+\na.x2*Math.sin(a.t3);a.x4=a.x3+a.t4;a.y4=a.y3;a.z4=a.z3+a.t5;a.x=.5+.5*div(a.x4,1+.7*a.z4);a.y=.5+.5*div(a.y4,1+.7*a.z4);","init_eqs_eel":"//pi\nt8=3.14159265;\nt5 = 1;","frame_eqs_eel":"// Zylot and StudioMusic were here\nrotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/90;\nt2 = t8*roty/90;\nt3 = t8*rotz/90;\n\nt4 = 3*sin(time+0.66*t8);\nt5 = 10+8*cos(time+0.66*t8);\n\nb = 0.3-0.4*cos(time+1.16*t8);\ng = 0.4-0.4*sin(time+1.06*t8);\nr = 0.2-0.4*sin(time+0.86*t8);","point_eqs_eel":"//Define 3D Shape\n\n//Sphere\nfvar = sample*512;\nsvar = fvar/64;\ntvar = 0&svar;\nnsample = tvar*0.001;\nx1 = (1)*sin(t8*sample)*sin(4*t8*sample);\ny1 = (1)*cos(t8*nsample);\nz1= (1)*sin(t8*sample)*cos(4*t8*sample);\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3+t4;\ny4 = y3;\nz4 = z3+t5;\n//draw 3d shape in 2d\nx=0.5+0.5*(x4/(1+z4*0.7));\ny=0.5+0.5*(y4/(1+z4*0.7));\n\n"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"//pi\nt8=3.14159265;\nt5 = 1;","frame_eqs_str":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 3*sin(time+1.33*t8);\nt5 = 10+8*cos(time+1.33*t8);\n\nr = 0.5-0.4*cos(time+1.33*t8);\nb = 0.5-0.4*sin(time+1.33*t8);","point_eqs_str":"//Define 3D Shape\n\n//Cube\nx0 = if(below(sample*12,1),sample*12, if(below(sample*12,2),1, if(below(sample*12,3),abs(sample*12-3), if(below(sample*12,6),0, if(below(sample*12,8),1, if(below(sample*12,9),abs(sample*12-9), if(below(sample*12,10),0, if(below(sample*12,11),sample*12-10,1))))))));\ny0 = if(below(sample*12,1),0, if(below(sample*12,2),sample*12-1, if(below(sample*12,3),1, if(below(sample*12,4),abs(sample*12-4), if(below(sample*12,5),0, if(below(sample*12,7),1, if(below(sample*12,9),0, if(below(sample*12,10),sample*12-9, if(below(sample*12,11),1,abs(sample*12-12))))))))));\nz0 = if(below(sample*12,4),0, if(below(sample*12,5),sample*12-4, if(below(sample*12,6),abs(sample*12-6), if(below(sample*12,7),sample*12-6, if(below(sample*12,8),abs(sample*12-8),1)))));\nx1 = 0.5-x0+if(below(sin(sample*12*3.1415),0),value1,0);\ny1 = 0.5-y0+if(below(cos((sample*12-1.5)*3.1415),0),value1,0);\nz1 = 0.5-z0+if(below(sample*12,4),0,if(below(sample*12,8),value1,0));\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3+t4;\ny4 = y3;\nz4 = z3+t5;\n//draw 3d shape in 2d\nx=0.5+0.5*(x4/(1+z4*0.5));\ny=0.5+0.5*(y4/(1+z4*0.5));\n\ng = b+value1;","init_eqs_eel":"//pi\nt8=3.14159265;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 3*sin(time+1.33*t8);\nt5 = 10+8*cos(time+1.33*t8);\n\nr = 0.5-0.4*cos(time+1.33*t8);\nb = 0.5-0.4*sin(time+1.33*t8);","point_eqs_eel":"//Define 3D Shape\n\n//Cube\nx0 = if(below(sample*12,1),sample*12, if(below(sample*12,2),1, if(below(sample*12,3),abs(sample*12-3), if(below(sample*12,6),0, if(below(sample*12,8),1, if(below(sample*12,9),abs(sample*12-9), if(below(sample*12,10),0, if(below(sample*12,11),sample*12-10,1))))))));\ny0 = if(below(sample*12,1),0, if(below(sample*12,2),sample*12-1, if(below(sample*12,3),1, if(below(sample*12,4),abs(sample*12-4), if(below(sample*12,5),0, if(below(sample*12,7),1, if(below(sample*12,9),0, if(below(sample*12,10),sample*12-9, if(below(sample*12,11),1,abs(sample*12-12))))))))));\nz0 = if(below(sample*12,4),0, if(below(sample*12,5),sample*12-4, if(below(sample*12,6),abs(sample*12-6), if(below(sample*12,7),sample*12-6, if(below(sample*12,8),abs(sample*12-8),1)))));\nx1 = 0.5-x0+if(below(sin(sample*12*3.1415),0),value1,0);\ny1 = 0.5-y0+if(below(cos((sample*12-1.5)*3.1415),0),value1,0);\nz1 = 0.5-z0+if(below(sample*12,4),0,if(below(sample*12,8),value1,0));\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3+t4;\ny4 = y3;\nz4 = z3+t5;\n//draw 3d shape in 2d\nx=0.5+0.5*(x4/(1+z4*0.5));\ny=0.5+0.5*(y4/(1+z4*0.5));\n\ng = b+value1;"},{"baseVals":{"enabled":1,"spectrum":1,"scaling":0.99773,"r":0.3,"g":0.65,"b":0.3,"a":0.91},"init_eqs_str":"a.px=0;a.z2=0;a.y1=0;a.oldt2=0;a.q1=0;a.cf=0;a.py=0;a.v=0;a.t3=0;a.shc=0;a.oldt3=0;a.t6=0;a.rf=0;a.q4=0;a.t7=0;a.pz=0;a.x2=0;a.t2=0;a.u=0;a.q2=0;a.z1=0;a.q3=0;a.t4=0;a.t1=300;a.t2=10;a.t3=0;a.t4=2.14159265;a.t5=1;a.t6=10;a.t7=-10;","frame_eqs_str":"a.t7=.5+.5*Math.sin(a.time)*a.t4;a.t6=div(a.t7+5*a.t6,6);a.t2=.01115111*pow(2*a.bass+a.bass_att,5)+a.oldt2;a.oldt2=a.t2;a.t3=.01126213*pow(2*a.bass+a.bass_att,4)+a.oldt3;a.oldt3=a.t3;a.q1=-Math.cos(Math.cos(a.t2));a.q2=Math.cos(-a.t3);a.q3=Math.sin(Math.cos(-a.t2));a.q4=Math.sin(a.t3);","point_eqs_str":"a.u=2*a.sample-1;a.rf=512;a.shc=1-a.u*a.u;a.cf=below(a.sample,1.05);a.u=.00001<Math.abs(a.cf)?sqrt(a.shc)*(div(-a.u,2)+.5):.00001<Math.abs(below(a.sample,.05))?15*(a.sample-.05)+.1:1.5*pow(a.shc,.7);a.u+=div(a.v,2);a.px=div(Math.cos(a.sample*a.t4*a.rf)*a.u,2)+Math.cos(a.t6)+1.5;a.py=2*a.sample-1;a.pz=div(Math.sin(a.sample*a.t4*a.rf)*a.u,2)+2.9;a.y1=a.py*a.q1+a.pz*a.q3;a.z1=a.pz*a.q1-a.py*a.q3;a.x2=a.px*a.q2+a.z1*a.q4;a.z2=a.z1*a.q2-a.px*a.q4+5;a.x=div(a.x2,a.z2);a.y=div(a.y1,\na.z2);a.x=.5*a.x+.5;a.y=.5*a.y+.5;a.r=.5+.5*Math.sin(295*a.sample);a.g=.5*Math.sin(.0245*a.time)+.999*(.5+.5*Math.sin(195*a.x));a.b=.5*Math.sin(.1876*a.time)+.495*(.5+.5*Math.sin(208*a.y));","init_eqs_eel":"//pi\n//t8=3.14159265*0.15;\n//t5 = 1;\n\n//n =300;\nt1 = 300;\n//rx = 0;\nt2 = 10;\n//ry = 0;\nt3 = 0;\n//tpi =3.1415;\nt4 = 2.14159265;\n//c=1;\nt5 = 1;\n//hu=10;\nt6 = 10;\n//hut=-10;\nt7 = -10;","frame_eqs_eel":"t7 = 0.5+0.5*sin(time)*t4;\nt6 = (t7+t6*5)/6;\nt2 = pow(2*bass+bass_att,5)*0.01115111 +oldt2;\noldt2 = t2;\n//t2 = 3*sin(time*1.1965);\nt3 = pow(2*bass+bass_att,4)*0.01126213 + oldt3;\noldt3 = t3;\n//t3 =  3*sin(time*0.0872);\n\nq1 = -cos(cos(t2));\nq2 = cos(-t3);\nq3 = sin(cos(-t2));\nq4 = sin(t3);","point_eqs_eel":"u = sample*2-1;\nrf = 512;\nshc = 1-u*u;\ncf = below(sample,1.05);\nu=if(cf,sqrt(shc)*(-u/2+0.5), if(below(sample,0.05), (sample-0.05)*15+0.1, pow(shc,0.7)*1.5));\nu = u + v/2;\npx = cos(sample*t4*rf)*u/2+cos(t6)+1.5;\npy = sample*2-1;\npz = sin(sample*t4*rf)*u/2+2.9;\ny1 = py*q1 + pz*q3;\nz1 = pz*q1 - py*q3;\nx2 = px*q2 + z1*q4;\nz2 = z1*q2 - px*q4+5;\nx = x2/z2;\ny = y1/z2;\nx = x*0.5 + 0.5;\ny = 0.5*y + 0.5;\nr = 0.5+sin(sample*295)*0.5;\ng = 0.5*sin(time*0.0245)+0.999*(0.5+sin(x*195)*0.5);\nb = 0.5*sin(time*0.1876)+0.495*(0.5+sin(y*208)*0.5);"}],"init_eqs_str":"a.d=0;a.w=0;a.frame3=0;a.b3=0;a.t5=0;a.m3=0;a.m7=0;a.t1=0;a.b4=0;a.cz=0;a.m4=0;a.q1=0;a.b7=0;a.py2=0;a.py3=0;a.vx1=0;a.cr=0;a.t3=0;a.my=0;a.b5=0;a.t6=0;a.px1=0;a.py1=0;a.t7=0;a.dir=0;a.b6=0;a.m2=0;a.mx=0;a.b2=0;a.px3=0;a.t2=0;a.vy2=0;a.m6=0;a.px2=0;a.vy1=0;a.q2=0;a.m1=0;a.vx2=0;a.q3=0;a.s1=0;a.s2=0;a.t4=0;a.m5=0;a.c=0;a.b1=0;a.sigmoide=0;","frame_eqs_str":"a.frame3=mod(a.frame,3);a.w=-a.time;a.w=4*Math.sin(.1*a.time)+4*Math.sin(.21618*a.time);a.c=.2;a.px1=.5+a.c*Math.sin(a.w);a.py1=.5+a.c*Math.cos(a.w);a.px2=.5+a.c*Math.sin(a.w+4.1888);a.py2=.5+a.c*Math.cos(a.w+4.1888);a.px3=.5+a.c*Math.sin(a.w+2.0944);a.py3=.5+a.c*Math.cos(a.w+2.0944);a.wave_x=.00001<Math.abs(equal(a.frame3,0))?a.px1:.00001<Math.abs(equal(a.frame3,1))?a.px2:a.px3;a.wave_y=.00001<Math.abs(equal(a.frame3,0))?a.py1:.00001<Math.abs(equal(a.frame3,1))?a.py2:a.py3;\na.wave_r=1;a.wave_g=1;a.wave_b=0;a.b7=a.b6;a.b6=a.b5;a.b5=a.b4;a.b4=a.b3;a.b3=a.b2;a.b2=a.b1;a.b1=a.bass;a.m7=a.m6;a.m6=a.m5;a.m5=a.m4;a.m4=a.m3;a.m3=a.m2;a.m2=a.m1;a.m1=a.mid;a.t7=a.t6;a.t6=a.t5;a.t5=a.t4;a.t4=a.t3;a.t3=a.t2;a.t2=a.t1;a.t1=a.treb;a.q1=div(a.b1+a.b2+a.b3+a.b4+a.b5+a.b6+a.b7,7);a.q2=div(a.m1+a.m2+a.m3+a.m4+a.m5+a.m6+a.m7,7);a.q3=div(a.t1+a.t2+a.t3+a.t4+a.t5+a.t6+a.t7,7);","pixel_eqs_str":"a.w=4*Math.sin(.1*a.time)+4*Math.sin(.21618*a.time);a.y=.5+.75*(a.y-.5);a.d=.3-.05*(a.q1-a.bass);a.px1=.5+a.d*Math.sin(a.w);a.py1=.5-a.d*Math.cos(a.w);a.d=.3-.05*(a.q2-a.mid);a.px3=.5+a.d*Math.sin(a.w+4.1888);a.py3=.5-a.d*Math.cos(a.w+4.1888);a.d=.3-.05*(a.q3-a.treb);a.px2=.5+a.d*Math.sin(a.w+2.0944);a.py2=.5-a.d*Math.cos(a.w+2.0944);a.mx=div(a.px1+a.px2+a.px3,3);a.my=div(a.py1+a.py2+a.py3,3);a.vx1=a.px2-a.px1;a.vy1=a.py2-a.py1;a.vx2=a.x-a.px1;a.vy2=a.y-a.py1;a.c=150-50*a.bass;\na.sigmoide=1;a.dir=Math.acos(div(a.vx1*a.vx2+a.vy1*a.vy2,sqrt(a.vx1*a.vx1+a.vy1*a.vy1)*sqrt(a.vx2*a.vx2+a.vy2*a.vy2)))-1;a.sigmoide=div(a.sigmoide,1+pow(2,a.c*a.dir));a.vx1=a.px3-a.px2;a.vy1=a.py3-a.py2;a.vx2=a.x-a.px2;a.vy2=a.y-a.py2;a.dir=Math.acos(div(a.vx1*a.vx2+a.vy1*a.vy2,sqrt(a.vx1*a.vx1+a.vy1*a.vy1)*sqrt(a.vx2*a.vx2+a.vy2*a.vy2)))-1;a.sigmoide=div(1*a.sigmoide,1+pow(2,a.c*a.dir));a.vx1=a.px1-a.px3;a.vy1=a.py1-a.py3;a.vx2=a.x-a.px3;a.vy2=a.y-a.py3;a.dir=Math.acos(div(a.vx1*a.vx2+a.vy1*a.vy2,\nsqrt(a.vx1*a.vx1+a.vy1*a.vy1)*sqrt(a.vx2*a.vx2+a.vy2*a.vy2)))-1.2;a.sigmoide=div(a.sigmoide,1+pow(2,a.c*a.dir));a.cz=.05+.01*a.bass;a.cr=.02+.1*a.treb;a.s1=a.sigmoide+.1*(a.q1-a.bass);a.s2=a.cr*(a.sigmoide+.1*(a.q3-a.treb));a.dx=.05*Math.sin(a.w)*(1-.5*a.treb)*(a.sigmoide-.5);a.dy=.05*-Math.cos(a.w)*(1-.5*a.treb)*(a.sigmoide-.5);","init_eqs_eel":"","frame_eqs_eel":"frame3 = frame%3;\n//wave_x = if(equal(frame3,0),0.25,if(equal(frame3,1),0.5,.75));\n//wave_y = if(equal(frame3,0),0.5,if(equal(frame3,1),0.5,0.5));\n\nw = -time*1;\nw = sin(time*0.1)*4+sin(time*0.21618)*4;\nc = 0.2;//bass*0.1;\npx1 = 0.5+ c*sin(w);\npy1 = 0.5+ c*cos(w);\n\npx2 = 0.5+ c*sin(w+1.0472*4);\npy2 = 0.5+ c*cos(w+1.0472*4);\n\npx3 = 0.5+ c*sin(w+2.0944);\npy3 = 0.5+ c*cos(w+2.0944);\n\n\nwave_x = if(equal(frame3,0),px1,if(equal(frame3,1),px2,px3));\nwave_y = if(equal(frame3,0),py1,if(equal(frame3,1),py2,py3));\n//wave_y = -wave_y;\n\nwave_r = 1;//if(equal(frame3,0),1,if(equal(frame3,1),0,0));\nwave_g = 1;//if(equal(frame3,0),0,if(equal(frame3,1),1,0));\nwave_b = 0;//if(equal(frame3,0),0,if(equal(frame3,1),0,1));\n\n\n//wave_mystery = if(equal(frame3,0),(b7 - bass)*0.1 -0.5,if(equal(frame3,1),(m7 - mid)*0.1  -0.5,(t7 - treb)*0.1 -0.5));\n\nb7 = b6;\nb6 = b5;\nb5 = b4;\nb4 = b3;\nb3 = b2;\nb2 = b1;\nb1 = bass;\n\nm7 = m6;\nm6 = m5;\nm5 = m4;\nm4 = m3;\nm3 = m2;\nm2 = m1;\nm1 = mid;\n\nt7 = t6;\nt6 = t5;\nt5 = t4;\nt4 = t3;\nt3 = t2;\nt2 = t1;\nt1 = treb;\n\nq1 = (b1+b2+b3+b4+b5+b6+b7)/7;\nq2 = (m1+m2+m3+m4+m5+m6+m7)/7;\nq3 = (t1+t2+t3+t4+t5+t6+t7)/7;","pixel_eqs_eel":"w = sin(time*0.1)*4+sin(time*0.21618)*4;\ny = 0.5 + (y-0.5)*0.75;\n\nd = 0.3 - (q1-bass)*0.05;\npx1 = 0.5+ d*sin(w);\npy1 = 0.5- d*cos(w);\n\nd = 0.3 - (q2-mid)*0.05;\npx3 = 0.5+ d*sin(w+1.0472*4);\npy3 = 0.5- d*cos(w+1.0472*4);\n\nd = 0.3 - (q3-treb)*0.05;\npx2 = 0.5+ d*sin(w+2.0944);\npy2 = 0.5- d*cos(w+2.0944);\n\nmx = (px1+px2+px3)/3;\nmy = (py1+py2+py3)/3;\n\nvx1 = px2 - px1;\nvy1 = py2 - py1;\nvx2 = x - px1;\nvy2 = y - py1;\n\nc = 150-50*bass;\nsigmoide = 1;\n\n\ndir = acos((vx1*vx2+vy1*vy2)/(sqrt(vx1*vx1+vy1*vy1)*sqrt(vx2*vx2+vy2*vy2)))-1;\nsigmoide = sigmoide/(1+pow(2,c*dir));\n\nvx1 = px3 - px2;\nvy1 = py3 - py2;\nvx2 = x - px2;\nvy2 = y - py2;\n\ndir = acos((vx1*vx2+vy1*vy2)/(sqrt(vx1*vx1+vy1*vy1)*sqrt(vx2*vx2+vy2*vy2)))-1;\nsigmoide = sigmoide*1/(1+pow(2,c*dir));\n\nvx1 = px1 - px3;\nvy1 = py1 - py3;\nvx2 = x - px3;\nvy2 = y - py3;\n\ndir = acos((vx1*vx2+vy1*vy2)/(sqrt(vx1*vx1+vy1*vy1)*sqrt(vx2*vx2+vy2*vy2)))-1.2;\nsigmoide = sigmoide/(1+pow(2,c*dir));\n\n\n\ncz = 0.05+bass*0.01;\ncr = 0.02+treb*0.1;\n\ns1 = sigmoide+0.1*(q1-bass);\ns2 = cr*(sigmoide+0.1*(q3-treb));\n\ndx = (sin(w))*0.05*(1-treb*0.5)*(sigmoide-0.5);//s2*sin(my-y) +(x-mx)*cz*s1;\ndy = -(cos(w))*0.05*(1-treb*0.5)*(sigmoide-0.5);//-s2*sin(mx-x) +(y-my)*cz*s1;","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((texture (sampler_main, (\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \n      mix (uv_orig, uv, vec2(4.0, 4.0))\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\n      ((texture (sampler_blur2, mix (uv_orig, uv, vec2(-12.0, -12.0))).xyz * scale2) + bias2)\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\n   + \n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\n  )).xyz + (\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\n   * 0.006).xyz) + -0.0006);\n  ret = tmpvar_2.xyz;\n }","comp":"vec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  vec2 uv2_4;\n  vec3 ret_5;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv2_4.x = -(uv_1.y);\n  uv2_4.y = uv_1.x;\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((0.25 + q29)));\n  inten_2 = ((pow (dist_3, 0.5) * (1.0 - \n    (dist_3 * dist_3)\n  )) * 2.0);\n  vec2 tmpvar_6;\n  tmpvar_6 = fract(((\n    ((3.0 * uv2_4) * dist_3)\n   + 0.5) + q31));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_6).xyz + (2.0 * (\n    (texture (sampler_blur1, tmpvar_6).xyz * scale1)\n   + bias1)));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\n  uv2_4.x = -(uv_1.y);\n  uv2_4.y = uv_1.x;\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((0.5 + q29)));\n  inten_2 = ((pow (dist_3, 0.5) * (1.0 - \n    (dist_3 * dist_3)\n  )) * 2.0);\n  vec2 tmpvar_7;\n  tmpvar_7 = fract(((\n    ((3.0 * uv2_4) * dist_3)\n   + 0.5) + q31));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_7).xyz + (2.0 * (\n    (texture (sampler_blur1, tmpvar_7).xyz * scale1)\n   + bias1)));\n  xlat_mutableret1 = max ((xlat_mutableret1 * 0.9), (xlat_mutableneu * inten_2));\n  uv2_4 = (uv_1 * aspect.yx);\n  dist_3 = (1.0 - fract((0.75 + q29)));\n  inten_2 = ((pow (dist_3, 0.5) * (1.0 - \n    (dist_3 * dist_3)\n  )) * 2.0);\n  vec2 tmpvar_8;\n  tmpvar_8 = fract(((\n    ((3.0 * uv2_4) * dist_3)\n   + 0.5) + q31));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_8).xyz + (2.0 * (\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\n   + bias1)));\n  xlat_mutableret1 = max ((xlat_mutableret1 * 0.9), (xlat_mutableneu * inten_2));\n  ret_5 = ((0.5 * xlat_mutableret1) + (vec3(0.0, 0.0, 0.15) * (0.5 + uv_1.y)));\n  ret_5 = (1.5 - ret_5);\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (texsize.xyy * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.4) * time)));\n  if ((((ret_5.x + ret_5.y) + ret_5.z) > 1.5)) {\n    ret_5 = (ret_5 * (tmpvar_9 * 1.5).xyz);\n  };\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_5;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n\n\nfloat error     = 0.5;        // maximum random pixel offset\nfloat diffusion = 0.006;      // dither strength\nfloat fadeout   = -0.0006;    // may be minor 1/256 due to the error diffusion dither;\n\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;\nfloat magic = lum(GetPixel(lerp(uv_orig,uv, 4))) - lum(GetBlur2(lerp(uv_orig,uv,-12)));\nuv = lerp(uv_orig,uv, magic*12 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;\nret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;\n\n}","comp_hlsl":"float3 ret1, neu, blur;\n\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat dist = 1;\nfloat inten = 1;\nret1 = 0;\nint anz = 3;\nint n = 1;\nwhile (n <= anz) {\n    ang2 = n/anz;\n    c = (ang2);\n    s = 1-(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    uv2 *= aspect.yx;\n    dist = 1-frac(.25*n+q29); //evtl sqrt !\n    inten =  pow(dist,.5)*(1-dist*dist)*2;\n    float2 uv3 = frac(3*uv2*dist + .5 + q31);;\n    neu =  GetPixel (uv3) + 2*GetBlur1(uv3);\n\n    ret1 = max(ret1*.9,neu*inten);\nn++;\n}\n\nret = .5*ret1 + 0.5*float3(0,0,.3)*(.5+uv.y) ;\nret=1.5-ret;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nif(ret.x+ret.y+ret.z>1.5)ret *= (noise2)*1.5; \n\n}"}