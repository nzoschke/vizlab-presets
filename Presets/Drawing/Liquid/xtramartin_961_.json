{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":6,"wave_thick":1,"wave_a":0.001,"wave_scale":1.91,"wave_smoothing":0.9,"wave_mystery":-0.1,"warpscale":3.138,"zoom":1.02225,"warp":0.00054,"wave_r":0.5,"wave_g":0.5,"wave_b":0.3,"ob_size":0,"ob_g":1,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"additive":1,"rad":0.05504,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=div(Math.floor(rand(100)),100);a.y=div(rand(100),100);a.x=.5+.4*Math.sin(a.time);a.y=.5+.4*Math.cos(.7*a.time);a.a=.2*a.bass;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))/100;\ny = rand (100)/100;\n\nx = .5 + .4*sin(time);\ny = .5 + .4*cos(time*.7);\n\n\na = .2*bass;"},{"baseVals":{"enabled":1,"sides":12,"num_inst":92,"x":0.8,"rad":0.02705,"ang":1.5708,"tex_ang":1.25664,"tex_zoom":3.07268,"g":1,"b":1,"g2":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.xang=0;a.ampl=0;a.fov=0;a.t1=0;a.yang=0;a.my=0;a.oz=0;a.k1=0;a.t_rel=0;a.k2=0;a.mz=0;a.oy=0;a.mx=0;a.zang=0;a.sample=0;a.t_abs=0;a.ox=0;","frame_eqs_str":"a.t1=a.time-Math.floor(a.time);a.sample=div(a.instance,a.num_inst);a.t_abs=3*a.sample;a.t_rel=a.sample-div(a.time,5);a.ampl=div(2*a.t_abs,2);a.k1=Math.sin(div(a.time,13));a.k2=Math.sin(div(a.time,12));a.ox=a.ampl*Math.sin(a.t_abs*(31+5*a.k1))+Math.sin(div(a.time,25))*(1-a.t_abs)*.4;a.oy=a.ampl*Math.cos(a.t_abs*(31+5*a.k2));a.oz=-1;a.r=sqr(Math.sin(3.4*a.t_rel));a.g=sqr(Math.sin(a.t_rel));a.b=sqr(Math.cos(1.8*a.t_rel));a.xang=div(a.time,9.5);a.yang=div(0*a.time,7);a.zang=div(-a.time,\n22);a.fov=.5;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz-=6;a.x=div(a.ox*a.fov,a.oz)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;a.a=.5*div(1,a.mz);a.rad=.005*div(1,a.mz);","init_eqs_eel":"","frame_eqs_eel":"t1 = time - int (time);\nsample = instance/num_inst;\nt_abs = sample*3;\nt_rel = sample-time/5;\n\nampl = 2*t_abs/2 ;\n\nk1=sin(time/13);\nk2=sin(time/12);\nox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;\noy = ampl*cos (t_abs*(31+5*k2));\noz = -1  ;\n\n\nr = sqr(sin(t_rel*3.4));\ng = sqr(sin(t_rel));\nb = sqr (cos(t_rel*1.8));\n\n//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;\n\nxang = time/9.5;\nyang = 0*time/7;\nzang = -time/22;\nfov = 0.5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\na=1/mz*.5;\n//a2=1/mz*.5;\n//border_a=1/mz*.5;\nrad=1/mz*.005;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;a.pi23=0;a.t1=0;","frame_eqs_str":"a.ma+=3.1415*above(a.bass,1)*.01*a.bass;a.ma-=3.1415*above(a.treb,1)*.01*a.treb;a.mx+=.0002*Math.cos(a.ma);a.my+=.0002*Math.tan(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=1-a.mx;a.y=1-a.my;a.ang=3*(Math.sin(.35*a.time)+1);a.pi23=1.333333332*Math.asin(1);a.t1=a.bass+a.mid+a.treb;","init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*tan(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=1-my;\n\nang=(sin(time*.35)+1)*3;\n//a=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nt1=bass+mid+treb;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.zoom=1;a.warp=0;a.rot=0;a.dx=0;a.dy=0;a.monitor=a.frame;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"zoom = 1.0;\nwarp = 0;\nrot = 0;\ndx = 0;\ndy = 0;\n\nmonitor = frame;","pixel_eqs_eel":"","warp":"float xlat_mutablebuf2;\nvec2 xlat_mutableuv1;\n shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  xlat_mutableuv1 = (uv + (0.001 * (texture (sampler_noise_lq, \n    ((uv * 4.0) + rand_frame.xy)\n  ) - 0.5)).xy);\n  vec3 tmpvar_3;\n  tmpvar_3.z = 0.0;\n  float tmpvar_4;\n  tmpvar_4 = (float(mod (frame, 2.0)));\n  tmpvar_3.x = tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (frame + 1.0);\n  tmpvar_3.y = (float(mod (tmpvar_5, 2.0)));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.0;\n  tmpvar_6.x = tmpvar_4;\n  tmpvar_6.y = (float(mod (tmpvar_5, 2.0)));\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.0;\n  tmpvar_7.x = tmpvar_4;\n  tmpvar_7.y = (float(mod (tmpvar_5, 2.0)));\n  vec3 tmpvar_8;\n  tmpvar_8.z = 0.0;\n  tmpvar_8.x = tmpvar_4;\n  tmpvar_8.y = (float(mod (tmpvar_5, 2.0)));\n  vec3 tmpvar_9;\n  tmpvar_9.z = 0.0;\n  tmpvar_9.x = (float(mod (tmpvar_5, 2.0)));\n  tmpvar_9.y = (float(mod ((tmpvar_5 + 1.0), 2.0)));\n  xlat_mutablebuf2 = (((\n    (((dot (texture (sampler_main, \n      (xlat_mutableuv1 + (tmpvar_2 * vec2(1.0, 0.0)))\n    ).xyz, tmpvar_3) - 0.5) + (dot (texture (sampler_main, \n      (xlat_mutableuv1 + (tmpvar_2 * vec2(0.0, 1.0)))\n    ).xyz, tmpvar_6) - 0.5)) + (dot (texture (sampler_main, (xlat_mutableuv1 + \n      (tmpvar_2 * vec2(-1.0, 0.0))\n    )).xyz, tmpvar_7) - 0.5))\n   + \n    (dot (texture (sampler_main, (xlat_mutableuv1 + (tmpvar_2 * vec2(0.0, -1.0)))).xyz, tmpvar_8) - 0.5)\n  ) / 2.0) - (dot (texture (sampler_main, xlat_mutableuv1).xyz, tmpvar_9) - 0.5));\n  xlat_mutablebuf2 = ((xlat_mutablebuf2 * 0.996) + 0.5);\n  if ((tmpvar_4 == 0.0)) {\n    ret_1.y = texture (sampler_main, uv).y;\n    ret_1.x = (1.0 - xlat_mutablebuf2);\n    ret_1.y = (1.0 - ret_1.y);\n  } else {\n    ret_1.y = xlat_mutablebuf2;\n    ret_1.x = texture (sampler_main, uv).x;\n    ret_1.z = (1.0 - ret_1.z);\n  };\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_1;\n  ret = tmpvar_10.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.0;\n  tmpvar_6.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  tmpvar_6.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\n    ((uv_1.xyy + (tmpvar_6 * 0.5)) * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  uv_1 = (uv_1 - (tmpvar_8 * 0.04));\n  ret_2 = (abs((\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n  )) * (dot (tmpvar_7, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  ret_2 = (1.0 - pow (ret_2, vec3(0.5, 0.5, 0.5)));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"float buf2;\nfloat2 uv1;\n\nfloat GetBuf(float num, float2 uvi)\n{return dot(GetPixel(uvi), float3(num%2,(num+1)%2,0))-.5;}\n\nshader_body {\n\nfloat2 pix = texsize.zw*4;\n\n//noise dither\nuv1 = uv + .001*(tex2D (sampler_noise_lq,uv*4+rand_frame)-.5);\n\nbuf2 = (GetBuf(frame, uv1+pix*float2(1,0))\n       +GetBuf(frame, uv1+pix*float2(0,1))\n       +GetBuf(frame, uv1+pix*float2(-1,0))\n       +GetBuf(frame, uv1+pix*float2(0,-1)))/2 - GetBuf(frame+1, uv1);\nbuf2 = buf2*.996+.5;\n\n\nif (frame%2 == 0) \n{ret.r = buf2;\n ret.g = GetPixel(uv).g;\nret.x=1-ret.x;\nret.y=1-ret.y;\n\n}\n\nelse \n{ret.g = buf2;\n ret.r = GetPixel(uv).r;\nret.z=1-ret.z;\n\n}\n\n}","comp_hlsl":"shader_body\n{\n\nuv = 0.5 + (uv-0.5)*0.98;\n    float2 d = texsize.zw*4;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nuv -= float2(lum(dx),lum(dy))*0.04;\nret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));\nret *= lum(noise)*3; \nret = pow(ret,0.5);\nret=1-ret;\n}"}