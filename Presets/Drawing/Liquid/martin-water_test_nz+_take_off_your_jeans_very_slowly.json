{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"additivewave":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.7,"warpscale":3.138,"zoom":1.02225,"warp":0.00054,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"mv_x":0,"mv_y":0,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"num_inst":200,"rad":0.02705,"tex_zoom":1.24699,"g":0.4,"b":0.3,"g2":0,"a2":1,"border_a":0.51,"enabled":0},"init_eqs_str":"","frame_eqs_str":"sample=instance/num_inst;\nrad=.22*sample;\nr=sample;\nang=(1-sample)*time*15;\nsides=(1-sample)* 14;\n\n\nt1 = sample+time*.2;\nmx = .4* (.6*sin (7*t1)+.4*sin (4.3*t1)) ;\nmy = .4*  (.6*cos (3.3*t1)+.4*cos (6.9*t1))* sin (-10+20*sample) ;\nmz = .4* (.6*cos (4.1*t1)+.4*cos (6.9*t1)) * cos (-5+10*sample) ;\n \n\n/////// rotations... by flexi\n\nd = 1; \nzoom = 1;\n\nw1 = .3*time;\nw2 = .1*time;\nw3 = .2*time;\n\nx1 = cos(w1)*mx + sin(w1)*my;\ny1 = -sin(w1)*mx + cos(w1)*my;\nz1 = mz;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\n\n// perspective calculation\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\np = tan(asin(1) + atan2(d+z3,l));\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x;\ny = 0.5 + my_y;","init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\nrad=.22*sample;\nr=sample;\nang=(1-sample)*time*15;\nsides=(1-sample)* 14;\n\n\nt1 = sample+time*.2;\nmx = .4* (.6*sin (7*t1)+.4*sin (4.3*t1)) ;\nmy = .4*  (.6*cos (3.3*t1)+.4*cos (6.9*t1))* sin (-10+20*sample) ;\nmz = .4* (.6*cos (4.1*t1)+.4*cos (6.9*t1)) * cos (-5+10*sample) ;\n \n\n/////// rotations... by flexi\n\nd = 1; \nzoom = 1;\n\nw1 = .3*time;\nw2 = .1*time;\nw3 = .2*time;\n\nx1 = cos(w1)*mx + sin(w1)*my;\ny1 = -sin(w1)*mx + cos(w1)*my;\nz1 = mz;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\n\n// perspective calculation\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\np = tan(asin(1) + atan2(d+z3,l));\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x;\ny = 0.5 + my_y;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;","frame_eqs_str":"a.trans=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.trans2=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.trans3=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+div(rand(Math.floor(a.q30)),15)+\na.instance-a.instance;a.r=.1*rand(a.q30)+a.instance-a.instance;a.g=.1*rand(a.q30)+a.instance-a.instance;a.b=.1*rand(a.q30)+a.instance-a.instance;a.r2=.1*rand(a.q30)+a.instance-a.instance;a.g2=.1*rand(a.q30)+a.instance-a.instance;a.b2=.1*rand(a.q30)+a.instance-a.instance;a.border_r=.1*rand(a.q30)+a.instance-a.instance;a.border_g=.1*rand(a.q30)+a.instance-a.instance;a.border_b=.1*rand(a.q30)+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\ntrans2 = rand(int(q30))/15+instance-instance;\ntrans3 = rand(int(q30))/15+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + rand(int(q30))/15+instance-instance;\nr=rand(q30)*.1+instance-instance;\ng=rand(q30)*.1+instance-instance;\nb=rand(q30)*.1+instance-instance;\nr2=rand(q30)*.1+instance-instance;\ng2=rand(q30)*.1+instance-instance;\nb2=rand(q30)*.1+instance-instance;\nborder_r=rand(q30)*.1+instance-instance;\nborder_g=rand(q30)*.1+instance-instance;\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;a.pi23=0;a.t1=0;","frame_eqs_str":"a.ma+=3.1415*above(a.bass,1)*.01*a.bass;a.ma-=3.1415*above(a.treb,1)*.01*a.treb;a.mx+=.0002*Math.cos(a.ma);a.my+=.0002*Math.tan(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=1-a.mx;a.y=1-a.my;a.ang=3*(Math.sin(.35*a.time)+1);a.pi23=1.333333332*Math.asin(1);a.t1=a.bass+a.mid+a.treb;","init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*tan(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=1-my;\n\nang=(sin(time*.35)+1)*3;\n//a=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"samples":200,"usedots":1,"scaling":0.01,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"t1 = sample+time*.2;\n\nx = .35* sin (6*t1) ;\nmy = .35* cos (3*t1)* sin (-10+20*sample) ;\nmz = .35* cos (7*t1) * cos (-5+10*sample) ;\n \n\n/////// rotations... by flexi\n\nd = 1; \nzoom = 1;\n\nw1 = .3*time;\nw2 = .1*time;\nw3 = .2*time;\n\nx1 = cos(w1)*mx + sin(w1)*my;\ny1 = -sin(w1)*mx + cos(w1)*my;\nz1 = mz;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\n\n// perspective calculation\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\np = tan(asin(1) + atan2(d+z3,l));\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x;\ny = 0.5 + my_y;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t1 = sample+time*.2;\n\nx = .35* sin (6*t1) ;\nmy = .35* cos (3*t1)* sin (-10+20*sample) ;\nmz = .35* cos (7*t1) * cos (-5+10*sample) ;\n \n\n/////// rotations... by flexi\n\nd = 1; \nzoom = 1;\n\nw1 = .3*time;\nw2 = .1*time;\nw3 = .2*time;\n\nx1 = cos(w1)*mx + sin(w1)*my;\ny1 = -sin(w1)*mx + cos(w1)*my;\nz1 = mz;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\n\n// perspective calculation\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\np = tan(asin(1) + atan2(d+z3,l));\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x;\ny = 0.5 + my_y;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q22=0;a.q21=0;a.q29=0;a.q1=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.mq23=0;a.q23=0;a.q24=0;a.atime=0;a.mq30=0;a.q26=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.q2=0;a.q27=0;a.q3=0;a.q28=0;a.q30=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq30=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq30;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q30=a.mq30;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q1=.4+.4*Math.sin(.006*a.atime);a.q2=.4+.4*Math.cos(.00613828348*a.atime);a.q3=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q3;a.zoom=1;a.warp=\n0;a.rot=0;a.dx=0;a.dy=0;a.monitor=a.frame;a.q30=a.bass+a.treb+a.mid;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq30=if(above(chng,cthr),rand(1)*.3,mq30);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq1=.4+sin(atime*.006        )*.4;\nq2=.4+cos(atime*.00613828348)*.4;\nq3=.4+sin(atime*.00598593455)*.4;\nmonitor=q3;\nzoom = 1.0;\nwarp = 0;\nrot = 0;\ndx = 0;\ndy = 0;\n\nmonitor = frame;\nq30=bass+treb+mid;","pixel_eqs_eel":"","warp":"float xlat_mutablebuf2;\n shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec3 tmpvar_3;\n  tmpvar_3.z = 0.0;\n  float tmpvar_4;\n  tmpvar_4 = (float(mod (frame, 2.0)));\n  tmpvar_3.x = tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (frame + 1.0);\n  tmpvar_3.y = (float(mod (tmpvar_5, 2.0)));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.0;\n  tmpvar_6.x = tmpvar_4;\n  tmpvar_6.y = (float(mod (tmpvar_5, 2.0)));\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.0;\n  tmpvar_7.x = tmpvar_4;\n  tmpvar_7.y = (float(mod (tmpvar_5, 2.0)));\n  vec3 tmpvar_8;\n  tmpvar_8.z = 0.0;\n  tmpvar_8.x = tmpvar_4;\n  tmpvar_8.y = (float(mod (tmpvar_5, 2.0)));\n  vec3 tmpvar_9;\n  tmpvar_9.z = 0.0;\n  tmpvar_9.x = (float(mod (tmpvar_5, 2.0)));\n  tmpvar_9.y = (float(mod ((tmpvar_5 + 1.0), 2.0)));\n  xlat_mutablebuf2 = (((\n    ((dot (texture (sampler_main, (uv + \n      (tmpvar_2 * vec2(1.0, 0.0))\n    )).xyz, tmpvar_3) + dot (texture (sampler_main, (uv + \n      (tmpvar_2 * vec2(0.0, 1.0))\n    )).xyz, tmpvar_6)) + dot (texture (sampler_main, (uv + (tmpvar_2 * vec2(-1.0, 0.0)))).xyz, tmpvar_7))\n   + \n    dot (texture (sampler_main, (uv + (tmpvar_2 * vec2(0.0, -1.0)))).xyz, tmpvar_8)\n  ) / 2.0) - dot (texture (sampler_main, uv).xyz, tmpvar_9));\n  xlat_mutablebuf2 = (xlat_mutablebuf2 * 0.998);\n  if ((tmpvar_4 == 0.0)) {\n    ret_1.x = xlat_mutablebuf2;\n    ret_1.y = texture (sampler_main, uv).y;\n  } else {\n    ret_1.y = xlat_mutablebuf2;\n    ret_1.x = texture (sampler_main, uv).x;\n  };\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q3)) && (ret_1.x <= (q24 * q1)))) {\n    ret_1.y = (ret_1.y + (tmpvar_10.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q1)) && (ret_1.y <= (q25 * q2)))) {\n    ret_1.z = (ret_1.z + (tmpvar_10.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q2)) && (ret_1.z <= (q26 * q3)))) {\n    ret_1.x = (ret_1.x + (tmpvar_10.z * 0.5));\n  };\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q1;\n  tmpvar_2.y = q2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - tmpvar_2);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q2;\n  tmpvar_4.y = q1;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - tmpvar_4);\n  float tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (min (abs(\n    (tmpvar_5.x / tmpvar_5.y)\n  ), 1.0) / max (abs(\n    (tmpvar_5.x / tmpvar_5.y)\n  ), 1.0));\n  float tmpvar_8;\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\n  tmpvar_8 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\n  tmpvar_8 = (tmpvar_8 + (float(\n    (abs((tmpvar_5.x / tmpvar_5.y)) > 1.0)\n  ) * (\n    (tmpvar_8 * -2.0)\n   + 1.570796)));\n  tmpvar_6 = (tmpvar_8 * sign((tmpvar_5.x / tmpvar_5.y)));\n  if ((abs(tmpvar_5.y) > (1e-08 * abs(tmpvar_5.x)))) {\n    if ((tmpvar_5.y < 0.0)) {\n      if ((tmpvar_5.x >= 0.0)) {\n        tmpvar_6 += 3.141593;\n      } else {\n        tmpvar_6 = (tmpvar_6 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_6 = (sign(tmpvar_5.x) * 1.570796);\n  };\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_main, fract(uv));\n  vec3 tmpvar_10;\n  tmpvar_10 = (((tmpvar_9.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) - sin(time)) * (tmpvar_9.xyz / (1.0 - \n    cos(((tmpvar_6 - (12.0 * \n      sqrt(dot (tmpvar_3, tmpvar_3))\n    )) - ((0.2 * q11) - time)))\n  )).x);\n  vec3 tmpvar_11;\n  tmpvar_11 = (1.0 - tmpvar_10);\n  float tmpvar_12;\n  tmpvar_12 = dot (tmpvar_10, tmpvar_11);\n  vec2 tmpvar_13;\n  tmpvar_13.x = uv.x;\n  tmpvar_13.y = (uv.y * 0.75);\n  ret_1 = ((texture (sampler_main, tmpvar_13).xyz * tmpvar_11) + (0.55 * tmpvar_10));\n  vec4 tmpvar_14;\n  tmpvar_14 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_1.x > (q26 * q13)) && (ret_1.x <= (q23 * q11)))) {\n    ret_1.z = (ret_1.z - (tmpvar_14.x * 0.5));\n  };\n  if (((ret_1.y > (q25 * q11)) && (ret_1.y <= (q22 * q12)))) {\n    ret_1.x = (ret_1.x - (tmpvar_14.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\n    ret_1.y = (ret_1.y - (tmpvar_14.z * 0.5));\n  };\n  vec3 tmpvar_15;\n  tmpvar_15 = mix (ret_1, tmpvar_11, vec3((1.5 * clamp (tmpvar_12, 0.0, 1.0))));\n  ret_1 = tmpvar_15;\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = tmpvar_15;\n  ret = tmpvar_16.xyz;\n }","warp_hlsl":"float buf2;\n\nfloat GetBuf(float num, float2 uvi)\n{return dot(GetPixel(uvi), float3(num%2,(num+1)%2,0));}\n\nshader_body {\n\nfloat2 pix = texsize.zw*4;\n\nbuf2 = (GetBuf(frame, uv+pix*float2(1,0))\n       +GetBuf(frame, uv+pix*float2(0,1))\n       +GetBuf(frame, uv+pix*float2(-1,0))\n       +GetBuf(frame, uv+pix*float2(0,-1)))/2 - GetBuf(frame+1, uv);\nbuf2 *= .998;\n\n\nif (frame%2 == 0) \n{ret.r = buf2;\n ret.g = GetPixel(uv).g;}\n\nelse \n{ret.g = buf2;\n ret.r = GetPixel(uv).r;}\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q3         && ret.x<= q24*q1        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q1         && ret.y<= q25*q2        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q2         && ret.z<= q26*q3        )ret.x += (noise9).z*.5; \n\n}","comp_hlsl":"shader_body\n{\n\nfloat2 uvc = uv-.5;\nfloat2 uv1 = uv-float2(q1,q2);\nfloat2 uv1a= uv-float2(q2,q1);\nfloat2 uvm = float2(atan2(uvc.x,uvc.y), 1/length(uvc));\nuvm=uv;\n\nfloat tun=atan2(uv1a.x,uv1a.y)-12*length(uv1);\ntun-=.2*q11-time;\n\n\nfloat3 blur = GetBlur1(uvm);\nfloat3 sharp = tex2D(sampler_main, uvm);\nfloat3 fix = GetPixel(frac(uvm));\n\nfloat mod = (fix/((1)-cos(tun)));\n\nfloat3 fret = (fix-blur-sin(time))*mod;\nfloat3 inv = 1-fret;\n\nfloat melt = dot(fret, inv);\n\nret=tex2D(sampler_main, float2(uv.x, uv.y*.75))*inv+.55*fret;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uvm.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret=lerp(ret, inv, 1.5*saturate(melt));\n\n//ret=GetPixel(uv);\n//ret=1-ret;\n}"}