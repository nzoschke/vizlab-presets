{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":4,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":1.245,"wave_scale":0.959,"wave_smoothing":0,"wave_mystery":1,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpanimspeed":3.987,"warpscale":0.034,"zoomexp":0.75683,"zoom":1.00814,"warp":0.06295,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":7,"rad":0.03333,"r":0,"g2":0,"border_a":0},"init_eqs_str":"a.vol=0;","frame_eqs_str":"a.x=.01*Math.floor(rand(100))+a.instance-a.instance;a.y=.01*Math.floor(rand(100))+a.instance-a.instance;a.a=1;a.vol=a.bass+a.mid+a.treb;a.rad=div(Math.floor(rand(Math.floor(a.vol))),7)+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01+instance-instance;\ny = int(rand(100))*.01+instance-instance;\n\na =1;\nvol=bass+mid+treb;\nrad = int(rand(int(vol)))/7+instance-instance;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q12=0;a.nor=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q1=0;a.mq31=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.atime=0;a.mini=0;a.q26=0;a.maj=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.q27=0;a.q28=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.q1=a.zoom;\na.zoom-=.008;a.warp=0;a.wave_a=0;a.maj=.05*above(a.bass*a.treb,3.1);a.nor=.025*above(a.bass*a.treb,2.5);a.mini=.001*above(a.bass*a.treb,2);a.zoom-=.00001<Math.abs(.00001<Math.abs(a.maj)?a.nor:a.maj)?a.mini:a.nor;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\nq1=zoom;\nzoom=zoom-0.008;\nwarp=0;\nwave_a=0;\nmaj=above(bass*treb,3.1)*0.05;\nnor=above(bass*treb,2.5)*0.025;\nmini=above(bass*treb,2)*0.001;\n//'min' gives an error.\nzoom=zoom-if(if(maj,nor,maj),mini,nor);","pixel_eqs_eel":"//zoom=zoom+(int(rand(256))-int(rand(256)))/25;","warp":"vec4 xlat_mutabletexsize;\n shader_body { \n  vec3 ret_1;\n  xlat_mutabletexsize.xy = (texsize.zw * 3.0);\n  vec2 tmpvar_2;\n  tmpvar_2.x = (uv.x - xlat_mutabletexsize.x);\n  tmpvar_2.y = (uv.y - (xlat_mutabletexsize.y * 2.0));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, (uv - xlat_mutabletexsize.xy));\n  vec2 tmpvar_4;\n  tmpvar_4.x = (uv.x + (xlat_mutabletexsize.x * 2.0));\n  tmpvar_4.y = (uv.y - (xlat_mutabletexsize.y * 2.0));\n  vec2 tmpvar_5;\n  tmpvar_5.x = (uv.x + xlat_mutabletexsize.x);\n  tmpvar_5.y = (uv.y - (xlat_mutabletexsize.y * 2.0));\n  vec2 tmpvar_6;\n  tmpvar_6.x = (uv.x + xlat_mutabletexsize.x);\n  tmpvar_6.y = (uv.y - xlat_mutabletexsize.y);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (uv.x - (xlat_mutabletexsize.x * 2.0));\n  tmpvar_7.y = (uv.y + (xlat_mutabletexsize.y * 2.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = (uv.x - xlat_mutabletexsize.x);\n  tmpvar_8.y = (uv.y + (xlat_mutabletexsize.y * 2.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = (uv.x - xlat_mutabletexsize.x);\n  tmpvar_9.y = (uv.y + xlat_mutabletexsize.y);\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_main, tmpvar_9);\n  vec2 tmpvar_11;\n  tmpvar_11.x = (uv.x + xlat_mutabletexsize.x);\n  tmpvar_11.y = (uv.y + (xlat_mutabletexsize.y * 2.0));\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_main, (uv + xlat_mutabletexsize.xy));\n  ret_1 = (ret_1 + ((1.2 * \n    ((((tmpvar_12.xyz + texture (sampler_main, tmpvar_11).xyz) + (texture (sampler_main, \n      (uv + (xlat_mutabletexsize.xy * vec2(2.0, 2.0)))\n    ).xyz + tmpvar_10.xyz)) + ((texture (sampler_main, tmpvar_8).xyz + texture (sampler_main, tmpvar_7).xyz) + (texture (sampler_main, tmpvar_6).xyz + texture (sampler_main, tmpvar_5).xyz))) + ((texture (sampler_main, tmpvar_4).xyz + tmpvar_3.xyz) + (texture (sampler_main, (uv - \n      (xlat_mutabletexsize.xy * vec2(2.0, 2.0))\n    )).xyz + texture (sampler_main, tmpvar_2).xyz)))\n  ) / 12.0));\n  vec4 tmpvar_13;\n  tmpvar_13 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * xlat_mutabletexsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_13.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_13.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_13.z * 0.5));\n  };\n  ret_1 = (ret_1 - ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) * 0.5));\n  ret_1 = (ret_1 / (1.0 + (\n    ((tmpvar_12.xyz + tmpvar_10.xyz) + (tmpvar_3.xyz + tmpvar_10.xyz))\n   * 0.01)));\n  ret_1 = (ret_1 * 1.1);\n  ret_1 = (ret_1 + (0.1 * (0.5 - texture (sampler_noise_lq, \n    ((uv_orig * rand_frame.xy) * 9.0)\n  ))).xyz);\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_1;\n  ret = tmpvar_14.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec3 xlat_mutableret2;\nvec2 xlat_mutablesam;\n shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  xlat_mutablesam = (texture (sampler_main, (uv * 0.5)).xy * ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, (xlat_mutablesam + uv));\n  float tmpvar_4;\n  tmpvar_4 = (0.5 * bass_att);\n  xlat_mutableret1 = ((tmpvar_3.x * (\n    (tmpvar_4 * uv_orig.y)\n   + tmpvar_3.xyz)) + (tmpvar_3.x * texture (sampler_main, uv).xyz));\n  xlat_mutableret1 = (xlat_mutableret1 * ((xlat_mutableret1 + 1.0) / 2.0));\n  uv_1 = (((uv - 0.5) * 0.3) + 0.5);\n  xlat_mutablesam = (texture (sampler_main, (uv_1 * 0.5)).xy * ((\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv_1).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_main, (xlat_mutablesam + uv_1));\n  xlat_mutableret2 = ((tmpvar_5.x * (\n    (tmpvar_4 * uv_orig.y)\n   + tmpvar_5.xyz)) + (tmpvar_5.x * texture (sampler_main, uv_1).xyz));\n  xlat_mutableret2 = (xlat_mutableret2 * (xlat_mutableret1 + 1.0));\n  vec3 tmpvar_6;\n  tmpvar_6 = max (xlat_mutableret1, xlat_mutableret2);\n  ret_2 = tmpvar_6;\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * xlat_mutablesam.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_6.x > (q26 * q13)) && (tmpvar_6.x <= (q23 * q11)))) {\n    ret_2.z = (tmpvar_6.z - (tmpvar_7.x * 0.5));\n  };\n  if (((tmpvar_6.y > (q25 * q11)) && (tmpvar_6.y <= (q22 * q12)))) {\n    ret_2.x = (tmpvar_6.x - (tmpvar_7.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\n    ret_2.y = (tmpvar_6.y - (tmpvar_7.z * 0.5));\n  };\n  ret_2 = (ret_2 * (0.5 + (0.5 * \n    dot (ret_2, vec3(0.32, 0.49, 0.29))\n  )));\n  ret_2 = (1.0 - ret_2);\n  ret_2 = (ret_2 - (texture (sampler_noisevol_hq, (\n    ((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (texsize.xyy * texsize_noisevol_hq.zww))\n   + \n    (vec3(0.0, 0.0, 0.4) * time)\n  )) * 0.2).xyz);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\ntexsize.xy=texsize.zw*3;\nfloat2 muv=uv;\n//uv=uv_orig;\nfloat3 lluu = GetPixel(float2(uv.x-texsize.x*2,uv.y-texsize.y*2));\nfloat3 luu  = GetPixel(float2(uv.x-texsize.x,uv.y-texsize.y*2));\nfloat3 lu   = GetPixel(float2(uv.x-texsize.x,uv.y-texsize.y));\nfloat3 rruu = GetPixel(float2(uv.x+texsize.x*2,uv.y-texsize.y*2));\nfloat3 ruu  = GetPixel(float2(uv.x+texsize.x,uv.y-texsize.y*2));\nfloat3 ru   = GetPixel(float2(uv.x+texsize.x,uv.y-texsize.y));\nfloat3 lldd = GetPixel(float2(uv.x-texsize.x*2,uv.y+texsize.y*2));\nfloat3 ldd  = GetPixel(float2(uv.x-texsize.x,uv.y+texsize.y*2));\nfloat3 ld   = GetPixel(float2(uv.x-texsize.x,uv.y+texsize.y));\nfloat3 rrdd = GetPixel(float2(uv.x+texsize.x*2,uv.y+texsize.y*2));\nfloat3 rdd  = GetPixel(float2(uv.x+texsize.x,uv.y+texsize.y*2));\nfloat3 rd   = GetPixel(float2(uv.x+texsize.x,uv.y+texsize.y));\n//ret-=((lu+luu+lu)*(1-lluu))*0.1;\n//uncomment upper - kinda new look.\nret+=1.2*(rd+rdd+rrdd+ld+ldd+lldd+ru+ruu+rruu+lu+lluu+luu)/12;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \nret-=GetBlur1(uv)*0.5;\nret/=1+(rd+ld+lu+ld)*0.01;\nret*=1.1;\n//try\n//ret+=0.05;\n//instead of\nret+=0.1*(0.5-tex2D(sampler_noise_lq,uv_orig*rand_frame.xy*9));\n\n}","comp_hlsl":"float3 ret1, ret2, reta;\nfloat2 sam;\nshader_body\n{\n    sam = tex2D(sampler_main,uv*.5);\n    ret1 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret1 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret1;\n    ret1 *= (ret1+1)/2; //gamma\n\nuv = (uv-.5)*.3+.5;\n    sam = tex2D(sampler_main,uv*.5);\n    ret2 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret2 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret2;\n    ret2 *= (ret1+1); //gamma\n\n\n\nret = max(ret1, ret2);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((sam.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret *= .5+.5*lum(ret);\n//ret = (1+ret1)*ret2;\n\nret=1-ret;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nret -= (noise2)*.2; \n}\n\n"}