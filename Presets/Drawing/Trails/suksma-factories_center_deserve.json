{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoom":1.01,"cx":0,"cy":0,"dx":0.32,"dy":0.28,"warp":0,"sx":0.61,"sy":0.644,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.05,"ob_a":0.05,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0.5,"ib_a":0.5,"mv_x":6.4,"mv_y":14.4,"mv_l":0.5,"mv_g":0.1,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.66717,"tex_zoom":0.16678,"g":1,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"additive":1,"a":0.9},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.ma+=3.1415*above(a.bass,1.2)*.01*a.bass;a.ma-=3.1415*above(a.treb,1.2)*.01*a.treb;a.mx+=.0002*Math.cos(a.ma);a.my+=.0002*Math.sin(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=a.mx;a.y=a.my;a.r=Math.sin(a.time);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1.2)*3.1415*.01*bass);\nma=ma-(above(treb,1.2)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\nr=sin(time);"},{"baseVals":{"enabled":1,"usedots":1,"additive":1,"a":0.9},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.ma+=3.1415*above(a.bass,1.2)*.05*a.bass;a.ma-=3.1415*above(a.mid,1.2)*.05*a.mid;a.mx+=.0001*Math.cos(a.ma);a.my+=.0001*Math.sin(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=a.mx;a.y=a.my;a.b=Math.floor(a.bass);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1.2)*3.1415*.05*bass);\nma=ma-(above(mid,1.2)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\nb=int(bass);"},{"baseVals":{"enabled":1,"usedots":1,"additive":1,"a":0.9},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.ma+=3.1415*above(a.mid,1.2)*.01*a.mid;a.ma-=3.1415*above(a.treb,1.2)*.01*a.treb;a.mx+=.0004*Math.cos(a.ma);a.my+=.0004*Math.sin(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=a.mx;a.y=a.my;a.g=.6*a.mid;a.b=.6*a.treb;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1.2)*3.1415*.01*mid);\nma=ma-(above(treb,1.2)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\ng=mid*.6;\nb=treb*.6;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1,"a":0.9},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.ma+=3.1415*above(a.bass,.5)*.02*a.bass;a.ma-=3.1415*above(a.treb,1.3)*.02*a.treb;a.mx+=.0004*Math.cos(a.ma);a.my+=.0004*Math.sin(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=a.mx;a.y=a.my;a.r=.35*(a.bass+a.treb);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,1.3)*3.1415*.02*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\nr=(bass+treb)*.35;"}],"init_eqs_str":"a.lbbtime=0;a.lbbtime2=0;a.avgbbeatrate=0;a.mtime2=0;a.beatb=0;a.q6=0;a.dt=0;a.q1=0;a.q5=0;a.avgvol=0;a.beatbhard=0;a.avgdt=0;a.beatb2=0;a.bool=0;a.ph=0;a[\"const\"]=0;a.q4=0;a.lbass=0;a.mtime3=0;a.mtime4=0;a.rawbeatb=0;a.db=0;a.vol=0;a.bc=0;a.q2=0;a.ltreb=0;a.phase=0;a.q3=0;a.q7=0;a.mtime=0;a.q8=0;a.avgdb=0;a.db=.001;a.dt=.001;a.avgdb=a.bass-a.bass_att;a.avgdt=a.treb-a.treb_att;a.lbass=0;a.ltreb=0;a.avgbbeatrate=.5;a.beatb=0;a.beatb2=0;a.lbbtime2=a.time;a.rawbeatb=0;a.lbbtime=\na.time;a.avgdb=.01;a.vol=0;a.avgvol=1;a.ph=0;a.phase=0;a.bool=0;a[\"const\"]=.01;a.mtime=100+1E3*a.bass_att;a.mtime2=100+1E3*a.treb_att;a.mtime4=1E3+1E3*a.treb;a.mtime3=1E3+1E3*a.bass;","frame_eqs_str":"a.db=(a.bass-a.lbass)*a.fps;a.dt=(a.treb-a.ltreb)*a.fps;a.ltreb=a.treb;a.lbass=a.bass;a.avgdb=.9*a.avgdb+.1*Math.abs(a.db);a.avgdt=.9*a.avgdt+.1*Math.abs(a.dt);a.rawbeatb=above(Math.abs(a.db),a.avgdt);a.beatb=a.rawbeatb*above(a.time-a.lbbtime,.75*a.avgbbeatrate);a.beatb2=a.beatb*above(Math.abs(a.dt),a.avgdb);a.beatbhard=a.beatb2*(Math.abs(a.db)-3*a.avgdb);a.avgbbeatrate=a.beatb*(.99*a.avgbbeatrate+.01*(a.time-a.lbbtime))+(1-a.beatb)*(a.avgbbeatrate+.00001*(3-a.avgbbeatrate));\na.lbbtime2=a.time*a.beatb2+(1-a.beatb2)*a.lbbtime2;a.lbbtime=a.time*a.beatb+(1-a.beatb)*a.lbbtime;a.ph=(a.time-a.lbbtime2)*div(60,a.avgbbeatrate)*a[\"const\"];a.phase=Math.max(Math.min(a.ph,1),0);a[\"const\"]=a[\"const\"]*(1-a.beatb2)+a.beatb2*(a[\"const\"]+.001*a.bool);a.bool=below(a.phase,.98)*(.99-a.ph)-.5*above(a.phase,.98)*a.ph;a.bc=a.bc+a.beatb+a.beatb2;a.vol=a.rawbeatb*Math.abs(a.db)*.001;a.avgvol=.999*a.avgvol+.01*a.vol;a.mtime+=(Math.min(.01*a.avgdt,.25)-.01*a.beatbhard*a.dt)*div(1,a.fps);a.mtime2+=\n(Math.min(.01*a.avgdb,.25)+.01*a.beatbhard*a.db)*div(1,a.fps);a.mtime3+=a.avgvol*Math.abs(a.db)*a.q4*.0001*div(1,a.fps);a.mtime4+=a.avgvol*Math.abs(a.dt)*a.q4*.0001*div(1,a.fps);a.q3=a.bc;a.q4=div(60,a.avgbbeatrate);a.q5=a.mtime;a.q6=a.mtime2;a.q7=a.mtime3;a.q8=a.mtime4;a.wave_r+=.5*(.5*Math.sin(.05*(a.q7-a.q5)*a.q4)+.4*Math.sin(.916*a.time));a.wave_g+=.5*(.5*Math.sin(.05*(a.q6-a.q8)*a.q4)+.4*Math.sin(1.023*a.time));a.wave_b+=.5*(.5*Math.sin(.05*(a.q5-a.q7)*a.q4)+.4*Math.sin(.949*a.time));a.decay-=\n0*equal(mod(a.frame,30),0);a.q1=10*Math.sin(a.mtime3);a.q2=10*Math.sin(a.mtime2);","pixel_eqs_str":"","init_eqs_eel":"db=.001;\ndt=.001;\navgdb=bass-bass_att;\navgdt=treb-treb_att;\nlbass=0;\nltreb=0;\n\navgbbeatrate=.5;\nbeatb=0;\nbeatb2=0;\nlbbtime2=time;\nrawbeatb=0;\nlbbtime=time;\navgdb=.01;\nvol=0;\navgvol=1;\nph=0;\nphase=0;\nbool=0;\nconst=.01;\nmtime=100+bass_att*1000;\nmtime2=100+treb_att*1000;\nmtime4=1000+treb*1000;\nmtime3=1000+bass*1000;","frame_eqs_eel":"db=(bass-lbass)*fps;\ndt=(treb-ltreb)*fps;\n\nltreb=treb;\nlbass=bass;\n\navgdb=avgdb*.9+abs(db)*.1;\navgdt=avgdt*.9+abs(dt)*.1;\n\n//beatdection\nrawbeatb=above(abs(db),avgdt);\nbeatb=rawbeatb*above(time-lbbtime,avgbbeatrate*.75);\nbeatb2=beatb*above(abs(dt),avgdb);\nbeatbhard=beatb2*(abs(db)-avgdb*3);\n\n//beatrate calc\n//avgbbeatrate=beatb2*(avgbbeatrate*.9+(time-lbbtime2)*.1)+(1-beatb2)*(avgbbeatrate+(3-avgbbeatrate)*.001);\navgbbeatrate=beatb*(avgbbeatrate*.99+(time-lbbtime)*.01)+(1-beatb)*(avgbbeatrate+(3-avgbbeatrate)*.00001);\n\nlbbtime2=time*beatb2+(1-beatb2)*lbbtime2;\nlbbtime=time*beatb+(1-beatb)*lbbtime;\n\nph=(time-lbbtime2)*(60/avgbbeatrate)*const;\nphase=max(min( ph, 1 ),0);\nconst=const*(1-beatb2)+beatb2*( const+ (.001*bool) );\nbool=below(phase,.98)*(.99-ph)-above(phase,.98)*(ph*.5);\n\n\n\nbc=bc+beatb+beatb2;\n\nvol=(rawbeatb*abs(db)*.001);\navgvol=avgvol*.999+vol*.01;\n\n\n\nmtime=mtime+(min(avgdt*.01,.25)-beatbhard*.01*dt)*(1/fps);\nmtime2=mtime2+(min(avgdb*.01,.25)+beatbhard*.01*db)*(1/fps);\nmtime3=mtime3+avgvol*abs(db)*q4*.0001*(1/fps);\nmtime4=mtime4+avgvol*abs(dt)*q4*.0001*(1/fps);\n\nq3=bc;\nq4=60/avgbbeatrate;\n\nq5=mtime;\nq6=mtime2;\nq7=mtime3;\nq8=mtime4;\n\n\n\n//wave_x = wave_x + 1.000*( 0.1*sin(0.1*mtime4) + 0.00*sin(1.621*time) );\n//wave_y = wave_y + 1.000*( 0.1*sin(.1*mtime3) + 0.00*sin(2.322*time) );\nwave_r = wave_r + 0.500*( 0.50*sin(0.0500*(q7-q5)*q4) + 0.40*sin(0.916*time) );\nwave_g = wave_g + 0.500*( 0.50*sin(0.0500*(q6-q8)*q4) + 0.40*sin(1.023*time) );\nwave_b = wave_b + 0.500*( 0.50*sin(0.0500*(q5-q7)*q4) + 0.40*sin(0.949*time) );\n//rot = rot + 0.1*sin(q8);\ndecay = decay - 0.00*equal(frame%30,0);\n//zoom = zoom + 0.013*( 0.60*sin(0.339*q5) + 0.40*sin(0.276*q6) );\n//zoom=zoom+avgdb*.01;\n\nq1=sin(mtime3)*10;\nq2=sin(mtime2)*10;","pixel_eqs_eel":"","warp":"uniform sampler2D sampler_prayerwheel;\n shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\n  ).xyz - 0.5) / 256.0));\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_prayerwheel, uv_orig);\n  vec2 x_3;\n  x_3 = (uv - uv_orig);\n  ret_1 = (mix (ret_1, tmpvar_2.xyz, vec3(clamp (\n    (1.0 - (abs((\n      dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29))\n     - \n      fract((time * 0.2))\n    )) * 33.0))\n  , 0.0, 1.0))) * (0.97 + (0.03 * \n    clamp ((sqrt(dot (x_3, x_3)) * 200.0), 0.0, 1.0)\n  )));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 * 1.5);\n  ret_2 = (ret_2 - ((0.85 + \n    (hue_shader * 8.5)\n  ) - 7.35));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"#define sampler_pic sampler_prayerwheel\nsampler2D sampler_pic;\n\nshader_body\n{\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*1;\n\n    // mix in img...\n    float3 pic = tex2D(sampler_pic, uv_orig).xyz;\n    float lum = lum(pic);\n    float use_it = abs(lum - frac(time*0.2));\n    use_it = saturate(1 - use_it*33);\n    ret = lerp(ret, pic, use_it.xxx);\n\n    // darken over time\n    //ret -= 0.004;\n    //ret *= 0.99;\n    ret *= 0.97 + 0.03*saturate( length(uv - uv_orig)*200 );  // center only\n}\n","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n\n    ret *= 1.5; //old gamma effect   \n    ret -= 0.85+(hue_shader*8.5)-7.35;\n}"}