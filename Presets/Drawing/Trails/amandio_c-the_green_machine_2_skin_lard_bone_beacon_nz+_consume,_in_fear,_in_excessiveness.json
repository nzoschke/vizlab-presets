{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":4,"wave_thick":1,"wrap":0,"brighten":1,"wave_a":0,"wave_scale":0,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"warp":0,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0.002,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":512,"x":0.55,"rad":0.03682,"tex_zoom":0.27705,"r":0,"g2":0,"border_r":0,"border_g":0.7,"border_b":0.1,"border_a":0},"init_eqs_str":"a.i=0;a.x1=0;a.y1=0;a.zoom=0;a.q2=0;a.q6=0;a.sample=0;a.d=0;","frame_eqs_str":"a.i=3*a.instance;a.x1=a.gmegabuf[Math.floor(a.i)];a.y1=a.gmegabuf[Math.floor(a.i+1)];a.rad=a.gmegabuf[Math.floor(a.i+2)];a.zoom=a.q2;a.x=.5+div(a.zoom*a.x1,a.q6);a.y=.5+a.zoom*a.y1;a.sample=div(.5*a.i,1024);a.r=.3+.1*Math.sin(3*a.sample+.7*a.q2*a.d+.2*a.time);a.g=.3+.1*Math.sin(3*a.sample+.8*a.q2*a.d+.23*a.time);a.b=.1+.1*Math.sin(3*a.sample+.4*a.q2*a.d+.15*a.time);","init_eqs_eel":"","frame_eqs_eel":"i=3*instance;     \n\nx1=gmegabuf(i);     y1=gmegabuf(i+1);\nrad=gmegabuf(i+2);\n\nzoom=q2;\nx= .5+zoom*x1/q6;\ny= .5+zoom*y1;      \n\nsample=.5*i/1024;\nr= .3+.1*sin(3*sample+.7*q2*d+.2*time);\ng= .3+.1*sin(3*sample+.8*q2*d+.23*time);\nb= .1+.1*sin(3*sample+.4*q2*d+.15*time);"},{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":1024,"rad":0.03682,"tex_ang":4.08407,"tex_zoom":5.7611,"r":0,"g2":0,"border_g":0.7,"border_b":0.1,"border_a":0},"init_eqs_str":"a.i=0;a.x1=0;a.y1=0;a.zoom=0;a.q2=0;a.q6=0;a.sample=0;a.d=0;","frame_eqs_str":"a.i=3*(a.instance+1024);a.x1=a.gmegabuf[Math.floor(a.i)];a.y1=a.gmegabuf[Math.floor(a.i+1)];a.rad=a.gmegabuf[Math.floor(a.i+2)];a.zoom=a.q2;a.x=.5+div(a.zoom*a.x1,a.q6);a.y=.5+a.zoom*a.y1;a.sample=div(.5*a.i,1024);a.r=.3+.1*Math.sin(3*a.sample+.7*a.q2*a.d+.2*a.time);a.g=.3+.1*Math.sin(3*a.sample+.8*a.q2*a.d+.23*a.time);a.b=.1+.1*Math.sin(3*a.sample+.4*a.q2*a.d+.15*a.time);","init_eqs_eel":"","frame_eqs_eel":"i=3*(instance+1024);     \n\nx1=gmegabuf(i);     y1=gmegabuf(i+1);\nrad=gmegabuf(i+2);\n\nzoom=q2;\nx= .5+zoom*x1/q6;\ny= .5+zoom*y1;      \n\nsample=.5*i/1024;\nr= .3+.1*sin(3*sample+.7*q2*d+.2*time);\ng= .3+.1*sin(3*sample+.8*q2*d+.23*time);\nb= .1+.1*sin(3*sample+.4*q2*d+.15*time);"},{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":1024,"y":0.61,"rad":0.03682,"tex_zoom":6.17732,"r":0,"g2":0,"border_g":0.7,"border_b":0.1,"border_a":0},"init_eqs_str":"a.i=0;a.x1=0;a.y1=0;a.zoom=0;a.q2=0;a.q6=0;a.sample=0;a.d=0;","frame_eqs_str":"a.i=3*(a.instance+2048);a.x1=a.gmegabuf[Math.floor(a.i)];a.y1=a.gmegabuf[Math.floor(a.i+1)];a.rad=a.gmegabuf[Math.floor(a.i+2)];a.zoom=a.q2;a.x=.5+div(a.zoom*a.x1,a.q6);a.y=.5+a.zoom*a.y1;a.sample=div(.5*a.i,1024);a.r=.3+.1*Math.sin(3*a.sample+.7*a.q2*a.d+.2*a.time);a.g=.3+.1*Math.sin(3*a.sample+.8*a.q2*a.d+.23*a.time);a.b=.1+.1*Math.sin(3*a.sample+.4*a.q2*a.d+.15*a.time);","init_eqs_eel":"","frame_eqs_eel":"i=3*(instance+2048);     \n\nx1=gmegabuf(i);     y1=gmegabuf(i+1);\nrad=gmegabuf(i+2);\n\nzoom=q2;\nx= .5+zoom*x1/q6;\ny= .5+zoom*y1;      \n\nsample=.5*i/1024;\nr= .3+.1*sin(3*sample+.7*q2*d+.2*time);\ng= .3+.1*sin(3*sample+.8*q2*d+.23*time);\nb= .1+.1*sin(3*sample+.4*q2*d+.15*time);"},{"baseVals":{"enabled":1,"sides":10,"additive":1,"num_inst":1024,"x":0.38,"y":0.28,"rad":0.03682,"tex_zoom":1.54929,"g":0.7,"b":0.2,"g2":0,"border_g":0.7,"border_b":0.1,"border_a":0},"init_eqs_str":"a.i=0;a.x1=0;a.y1=0;a.zoom=0;a.q2=0;a.q6=0;a.sample=0;a.d=0;","frame_eqs_str":"a.i=3*(a.instance+3072);a.x1=a.gmegabuf[Math.floor(a.i)];a.y1=a.gmegabuf[Math.floor(a.i+1)];a.rad=a.gmegabuf[Math.floor(a.i+2)];a.zoom=a.q2;a.x=.5+div(a.zoom*a.x1,a.q6);a.y=.5+a.zoom*a.y1;a.sample=div(.5*a.i,1024);a.r=.3+.1*Math.sin(3*a.sample+.7*a.q2*a.d+.2*a.time);a.g=.3+.1*Math.sin(3*a.sample+.8*a.q2*a.d+.23*a.time);a.b=.1+.1*Math.sin(3*a.sample+.4*a.q2*a.d+.15*a.time);","init_eqs_eel":"","frame_eqs_eel":"i=3*(instance+3072);     \n\nx1=gmegabuf(i);     y1=gmegabuf(i+1);\nrad=gmegabuf(i+2);\n\nzoom=q2;\nx= .5+zoom*x1/q6;\ny= .5+zoom*y1;      \n\nsample=.5*i/1024;\nr= .3+.1*sin(3*sample+.7*q2*d+.2*time);\ng= .3+.1*sin(3*sample+.8*q2*d+.23*time);\nb= .1+.1*sin(3*sample+.4*q2*d+.15*time);"}],"waves":[{"baseVals":{"usedots":1,"scaling":60.80387,"smoothing":0.7,"g":0.9,"b":0.9,"a":0.21,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"scaling":67.1652,"smoothing":0.7,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"r":0.7,"g":0.7,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.d=0;a.n=0;a.rad=0;a.mq1=0;a.s=0;a.q25=0;a.q12=0;a.t1=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q6=0;a.p=0;a.mq31=0;a.mq21=0;a.mq24=0;a.x=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.atime=0;a.q26=0;a.t=0;a.i=0;a.y=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.p1=0;a.mq26=0;a.q2=0;a.q27=0;a.t0=0;a.q28=0;a.c=0;for(var b=a.i=0;1E4>b;b++)a.gmegabuf[Math.floor(a.i)]=0,a.i+=1;a.t=7;a.t0=a.time;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.q6=a.aspecty;\na.t+=div(.1,a.fps);a.t1+=div(1,a.fps);a.c=bnot(mod(a.frame,2));a.s=10*Math.sin(.2*a.t);a.i=0;a.x=0;a.y=0;a.p=0;a.p1=pow(10,12);for(var b=0;b<4096*a.c;b++)a.p+=Math.sin(a.t)*(Math.sin(a.i*a.s+a.t)+Math.cos(a.i*a.s-a.t)),a.p1+=a.p,a.x+=Math.sin(a.p1),a.y+=Math.cos(a.p1),a.d=sqrt(a.x*a.x+a.y*a.y),a.rad=.0001+.00005*a.d,a.rad=.00001<Math.abs(above(a.rad,.005))?.005:a.rad,a.gmegabuf[Math.floor(3*a.i)]=a.x,a.gmegabuf[Math.floor(3*a.i+1)]=a.y,a.gmegabuf[Math.floor(3*a.i+2)]=a.rad,a.i+=1;a.n=7;a.decay=above(a.time-\na.t0,.2)-equal(mod(5*a.t1,5*a.n),0);a.monitor=a.s;a.q2=.004;","pixel_eqs_str":"","init_eqs_eel":"i=0;  \nloop(10000, gmegabuf(i)=0;\n\ni=i+1;);\n\nt=7;\n\nt0=time;","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\nq6=aspecty;       t=t+.1/fps;   t1=t1+1/fps;  \nc=bnot(frame%2);                s=10*sin(.2*t);\ni=0;    x=0;     y=0;   p=0;    p1=pow(10,12);\n\nloop(4*1024*c,  \n\np=p+ sin(t)*(sin(i*s+t)+ cos(i*s-t));   p1=p1+p;\nx=x+sin(p1);                            y=y+cos(p1);\n\nd=sqrt(x*x+y*y);\nrad=.0001+.00005*d;\nrad=if(above(rad,.005),.005,rad);\n\ngmegabuf(3*i)=x;     gmegabuf(3*i+1)=y;   gmegabuf(3*i+2)=rad ;\n\ni=i+1;);\n\n///// clears the screen each n seconds\n\nn=7;\ndecay=above(time-t0,.2)-equal((5*t1)%(5*n),0);\n\nmonitor=s;\n\nq2=.004;   //// zoom","pixel_eqs_eel":"","warp":" shader_body { \n  float conway_1;\n  vec3 ret_2;\n  ret_2 = ((texture (sampler_main, uv_orig).xyz * vec3(0.97, 1.0, 0.97)) - vec3(0.03, 0.0, 0.03));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_blur1, uv_orig);\n  ret_2.z = (ret_2.z + ((\n    (tmpvar_3.xyz * scale1)\n   + bias1).z * 0.45));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur3, uv_orig);\n  ret_2.x = (ret_2.x + ((\n    ((tmpvar_3.xyz * scale1) + bias1)\n  .z * 0.05) + (\n    ((tmpvar_4.xyz * scale3) + bias3)\n  .z * 0.05)));\n  ret_2.z = (ret_2.z - ret_2.x);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, uv_orig);\n  ret_2.y = clamp (tmpvar_5.y, 0.0, 1.0);\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).y + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(0.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).y);\n  float tmpvar_6;\n  tmpvar_6 = (((q5 * \n    (1.0 - ((tmpvar_3.xyz * scale1) + bias1).y)\n  ) * (1.0 - \n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\n  .y)) * (1.0 - (\n    (tmpvar_4.xyz * scale3)\n   + bias3).y));\n  conway_1 = (conway_1 - tmpvar_5.x);\n  if ((conway_1 > 1.0)) {\n    float tmpvar_7;\n    tmpvar_7 = clamp (ret_2.y, 0.0, 1.0);\n    if ((tmpvar_7 == 0.0)) {\n      ret_2.y = floor((tmpvar_6 * 99.0));\n    };\n  };\n  ret_2.y = (ret_2.y - ret_2.x);\n  ret_2 = (ret_2 - ((bass / 7.0) - (mid / 11.2)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  float tmpvar_2;\n  tmpvar_2 = uv.y;\n  vec2 tmpvar_3;\n  tmpvar_3.x = (uv.x + 2.0);\n  tmpvar_3.y = tmpvar_2;\n  vec2 tmpvar_4;\n  tmpvar_4.x = (uv.y - 2.0);\n  tmpvar_4.y = tmpvar_2;\n  vec2 tmpvar_5;\n  tmpvar_5.x = uv.x;\n  tmpvar_5.y = (uv.y + 2.0);\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_2;\n  tmpvar_6.y = (uv.x - 2.0);\n  vec2 tmpvar_7;\n  float tmpvar_8;\n  tmpvar_8 = (time * 0.1);\n  tmpvar_7.x = (tmpvar_8 * roam_cos.x);\n  tmpvar_7.y = (tmpvar_8 * roam_sin.y);\n  vec2 tmpvar_9;\n  tmpvar_9.x = ((texture (sampler_main, (uv + \n    (texsize.zw * tmpvar_3)\n  )).x - texture (sampler_main, (uv + \n    (texsize.zw * tmpvar_4)\n  )).y) / 128.0);\n  tmpvar_9.y = ((texture (sampler_main, (uv + \n    (texsize.zw * tmpvar_5)\n  )).z - texture (sampler_main, (uv + \n    (texsize.zw * tmpvar_6)\n  )).x) / 128.0);\n  ret_1 = (texture (sampler_noise_hq, ((\n    (texsize.zw * tmpvar_7)\n   + \n    (uv * 0.2)\n  ) + (\n    (17000.0 * texsize.zw)\n   * tmpvar_9))).xxx * texture (sampler_main, uv).xyz);\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_1.x > (q26 * q13)) && (ret_1.x <= (q23 * q11)))) {\n    ret_1.z = (ret_1.z - (tmpvar_10.x * 0.5));\n  };\n  if (((ret_1.y > (q25 * q11)) && (ret_1.y <= (q22 * q12)))) {\n    ret_1.x = (ret_1.x - (tmpvar_10.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\n    ret_1.y = (ret_1.y - (tmpvar_10.z * 0.5));\n  };\n  ret_1 = (ret_1 - ((slow_roam_sin.wyx * slow_roam_cos.zwx) * 0.4));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n }","warp_hlsl":"sampler sampler_rand02;\nfloat4  texsize_rand02;    // ...it's smart enough to get it from just this.\nshader_body\n{\n    // sample previous frame\n    float3 main = tex2D( sampler_main, uv ).xyz;\n    float3 mblur = GetBlur1( uv );\n    main = ( (main-mblur*.5)*3 );\n    float zoom = 1+.5*( (q9*uv_orig.y-q8*uv_orig.x)*6+rad*sin(ang+2-q3-q4)*mblur.z*3)*(.01+(q1-q2)*.01);\n    float rot = (mblur.y-mblur.x)*(q7-q8)*.5;\n    float2 zcr = float2(.5,.5);\n    float2 cr = float2(.5,.5);\n    float2 newuv = uv;\n\n    ///////////////////rotation////////////////\n    newuv = uv - cr;\n    float s = sin(rot);\n    float c = cos(rot);\n    newuv = float2( (uv.x-cr.x)*c-(uv.y-cr.y)*s , (uv.x-cr.x)*s+(uv.y-cr.y)*c  );\n    newuv = newuv + cr;\n    ///////////////////rotation////////////////\n\n    ///////////////////zoom////////////////\n    newuv = newuv-zcr;\n    newuv = newuv * zoom;\n    newuv= newuv+zcr;\n    ///////////////////zoom////////////////\n\n\n    float3 colorwarp = tex2D( sampler_main, newuv );\n\n    float3 color = tex2D(sampler_rand02, newuv ).xyz;\n//    ret = ( (  (colorwarp*main*3-normalize(color)) ) );\n    ret= lerp(colorwarp,main*color,1-sin((color-colorwarp)*6));\n    // darken (decay) over time\n    ret *= 0.96; //or try: ret -= 0.004;\n\n\nret.xyz = tex2D(sampler_main, uv_orig).xyz*float3(.97,1,.97) - float3(.03,0,.03);\n\nret.z += GetBlur1(uv_orig).z*.45;\nret.x += GetBlur1(uv_orig).z*.05 + GetBlur3(uv_orig).z*.05;\nret.z -= ret.x;\n\nfloat2 pixelsize = texsize.zw;\nret.y = saturate(tex2D( sampler_pw_main,uv_orig).y);\n\nfloat1 conway = tex2D( sampler_pw_main, uv_orig + float2(-1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,1)*pixelsize).y;\n\nfloat1 test = q5*(1-GetBlur1(uv_orig).y)*(1-GetBlur2(uv_orig).y)*(1-GetBlur3(uv_orig).y);\n\nconway -= tex2D( sampler_pw_main, uv_orig).x;\n\n\nif (conway > 1) {\nif (saturate(ret.y) == 0) {\nret.y = floor(test*99)*1;\n}\n}\n\nret.y -= ret.x;\n\nret.xyz -= bass/7-mid/11.2 ;\n}","comp_hlsl":" float s1, s2, s3, s4, ioffs, x, y;\n float2 d,e;\n\n shader_body{\n  ioffs=2; // higher values = smoother results for distortion\n  x=uv.x, y=uv.y;\n  d=texsize.zw;\n  e=texsize.yx; \n s1=GetPixel(uv+d*float2(x+ioffs,y)).x;\n s2=GetPixel(uv+d*float2(y-ioffs,y)).y;\n s3=GetPixel(uv+d*float2(x,y+ioffs)).z;\n s4=GetPixel(uv+d*float2(y,x-ioffs)).x;\n\n // distorted noise\n ret=tex2D(sampler_noise_hq,d*float2(time*.1*roam_cos.x,time*.1*roam_sin.y)+uv*\n.2+17000*d*float2( (s1-s2)/(ioffs*64), (s3-s4)/(ioffs*64) ) ).x;\nret*=GetPixel(uv);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret-=slow_roam_sin.wyx*slow_roam_cos.zwx*.4;\n\n}"}