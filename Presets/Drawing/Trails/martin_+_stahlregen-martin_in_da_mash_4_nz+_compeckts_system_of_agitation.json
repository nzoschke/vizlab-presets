{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1x":0.5},"shapes":[{"baseVals":{"additive":1,"rad":0.04896,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0,"g":1,"b":1,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\ntrel = time/3;\n\nx = .5+sin(trel*2);\ny = .5+cos(trel*1.3);\n\n\n\n\nrad = .1;\na = .8;","init_eqs_eel":"","frame_eqs_eel":"\ntrel = time/3;\n\nx = .5+sin(trel*2);\ny = .5+cos(trel*1.3);\n\n\n\n\nrad = .1;\na = .8;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_zoom = q27;","init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27;"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q19=0;a.trans2=0;a.trans3=0;","frame_eqs_str":"a.trans=div(rand(Math.floor(a.q19)),15)+a.instance-a.instance;a.trans2=div(rand(Math.floor(a.q19)),15)+a.instance-a.instance;a.trans3=div(rand(Math.floor(a.q19)),15)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+div(rand(Math.floor(a.q19)),15)+\na.instance-a.instance;a.r=.1*rand(a.q19)+a.instance-a.instance;a.g=.1*rand(a.q19)+a.instance-a.instance;a.b=.1*rand(a.q19)+a.instance-a.instance;a.r2=.1*rand(a.q19)+a.instance-a.instance;a.g2=.1*rand(a.q19)+a.instance-a.instance;a.b2=.1*rand(a.q19)+a.instance-a.instance;a.border_r=.1*rand(a.q19)+a.instance-a.instance;a.border_g=.1*rand(a.q19)+a.instance-a.instance;a.border_b=.1*rand(a.q19)+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q19))/15+instance-instance;\ntrans2 = rand(int(q19))/15+instance-instance;\ntrans3 = rand(int(q19))/15+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + rand(int(q19))/15+instance-instance;\nr=rand(q19)*.1+instance-instance;\ng=rand(q19)*.1+instance-instance;\nb=rand(q19)*.1+instance-instance;\nr2=rand(q19)*.1+instance-instance;\ng2=rand(q19)*.1+instance-instance;\nb2=rand(q19)*.1+instance-instance;\nborder_r=rand(q19)*.1+instance-instance;\nborder_g=rand(q19)*.1+instance-instance;\nborder_b=rand(q19)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;a.pi23=0;a.t1=0;","frame_eqs_str":"a.ma+=3.1415*above(a.bass,1)*.01*a.bass;a.ma-=3.1415*above(a.treb,1)*.01*a.treb;a.mx+=.0002*Math.cos(a.ma);a.my+=.0002*Math.tan(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=1-a.mx;a.y=1-a.my;a.ang=3*(Math.sin(.35*a.time)+1);a.pi23=1.333333332*Math.asin(1);a.t1=a.bass+a.mid+a.treb;","init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*tan(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=1-my;\n\nang=(sin(time*.35)+1)*3;\n//a=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"thick":1,"additive":1,"scaling":7.858,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t2 = t2 + bass_att;","point_eqs_str":"\nx = sample;\ny = value1 * int(rand(50))/100 * abs(sample-.5)+ .478;\n\na = q26/4 * (.2 + abs(sample-.5)); ","init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"\nx = sample;\ny = value1 * int(rand(50))/100 * abs(sample-.5)+ .478;\n\na = q26/4 * (.2 + abs(sample-.5)); "},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"xi = int(rand(100))/100;\nyi = int(rand(100))/100;\n\nx = xi; y = yi;\n\na = q21/15;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = int(rand(100))/100;\nyi = int(rand(100))/100;\n\nx = xi; y = yi;\n\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.index2=0;a.q25=0;a.index=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q1=0;a.mq31=0;a.dec_med=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.rott=0;a.ava=0;a.mq23=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q11=0;a.atime=0;a.kmov=0;a.q26=0;a.p2=0;a.mov=0;a.avg=0;a.movez=0;a.mq27=0;a.mq25=0;a.trig=0;a.q19=0;a.mq22=0;a.beat=0;a.vol=0;a.p1=0;a.peak=0;a.mq26=0;a.q2=0;a.q27=0;a.cont=0;a.t0=0;a.q28=0;a.q30=0;a.q20=0;a.dirx=1;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.dec_med=\npow(.9,div(30,a.fps));a.dec_slow=pow(.9,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.2+a.avg+a.peak)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),8);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;a.ava=a.ava*a.dec_slow+\na.q26*(1-a.dec_slow);a.k1=a.is_beat*equal(mod(a.index,4),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q27=8-a.index;a.q28=div(a.index2,6);a.q29=.1*a.q27+.1*a.time;a.trig=bnot(mod(a.index,4))*a.q24;a.mov=a.trig*(Math.floor(rand(100))-50)+(1-a.trig)*a.mov;a.movez+=div(.02,a.fps)*a.mov;a.q30=a.movez;a.trig=a.q24*bnot(a.index);a.kmov=bnot(a.trig)*(a.kmov+div(.1,a.fps));a.q31=82*a.kmov*a.kmov;a.cont+=\ndiv(.2*a.q1,a.fps)*below(a.index,2);a.q31=a.cont;a.q19=a.bass+a.treb+a.mid;","pixel_eqs_str":"","init_eqs_eel":"dirx = 1;","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\ndec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.1);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%8;\n\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\nava = ava*dec_slow + q26*(1-dec_slow);\n\nk1 =  is_beat*equal(index%4,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\nq1 = cos(rott);\nq2 = sin(rott);\n\nq27 = 8-index;\nq28 = index2/6;\nq29 = .1*q27+time*.1;\n\ntrig = bnot(index%4)*q24;\nmov = trig*(int(rand(100))-50) + (1-trig)*mov ;\nmovez = movez + .02/fps*mov;\nq30 = movez;\n\n\ntrig = q24 * bnot(index);\nkmov = bnot(trig)* (kmov + .1/fps); \nq31 = kmov*82*kmov;\n\ncont = cont + q1*.2/fps*below(index,2);\nq31 = cont;\n\n\n\n\n\n//**************************\n\nq19=bass+treb+mid;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = (sqrt(dot (tmpvar_3, tmpvar_3)) + (rand_frame * 13.0)).x;\n  uv_1 = (uv + (clamp (\n    ((sin(tmpvar_4) / cos(tmpvar_4)) / normalize(tmpvar_3))\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 16.0));\n  ret_2 = ((q24 * (\n    ((texture (sampler_main, uv_1).xyz + ((0.1 * vec3(\n      ((q1 * cos((uv_1.x * 44.0))) - cos((uv_1.y * 82.0)))\n    )) * (1.0 + texture (sampler_noise_lq, \n      ((uv_1 / 16.0) + (time / 100.0))\n    )).xyz)) * 0.98)\n   - 0.025)) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.yxx) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\n    ret_2.y = (ret_2.y + (tmpvar_5.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q24 * q12)))) {\n    ret_2.z = (ret_2.z + (tmpvar_5.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (ret_2.x + (tmpvar_5.z * 0.5));\n  };\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n }","comp":"vec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv2;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  vec3 ret_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_3 = (1.0 - fract((0.25 + q29)));\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\n  vec2 tmpvar_5;\n  tmpvar_5 = fract(((\n    (2.0 * uv_1)\n   * dist_3) + 0.5));\n  xlat_mutableneu = (((\n    (texture (sampler_blur1, tmpvar_5).xyz * scale1)\n   + bias1) * 1.5) - texture (sampler_main, tmpvar_5).xyz);\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\n  xlat_mutableuv2.x = -(uv_1.y);\n  xlat_mutableuv2.y = uv_1.x;\n  dist_3 = (1.0 - fract((0.5 + q29)));\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\n  vec2 tmpvar_6;\n  tmpvar_6 = fract(((\n    (2.0 * xlat_mutableuv2)\n   * dist_3) + 0.5));\n  xlat_mutableneu = (((\n    (texture (sampler_blur1, tmpvar_6).xyz * scale1)\n   + bias1) * 1.5) - texture (sampler_main, tmpvar_6).xyz);\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  dist_3 = (1.0 - fract((0.75 + q29)));\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\n  vec2 tmpvar_7;\n  tmpvar_7 = fract(((\n    (2.0 * uv_1)\n   * dist_3) + 0.5));\n  xlat_mutableneu = (((\n    (texture (sampler_blur1, tmpvar_7).xyz * scale1)\n   + bias1) * 1.5) - texture (sampler_main, tmpvar_7).xyz);\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  xlat_mutableuv2.x = -(uv_1.y);\n  xlat_mutableuv2.y = uv_1.x;\n  dist_3 = (1.0 - fract((1.0 + q29)));\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\n  vec2 tmpvar_8;\n  tmpvar_8 = fract(((\n    (2.0 * xlat_mutableuv2)\n   * dist_3) + 0.5));\n  xlat_mutableneu = (((\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\n   + bias1) * 1.5) - texture (sampler_main, tmpvar_8).xyz);\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  ret_4 = (xlat_mutableret1 * 6.0);\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_4.x > (q26 * q13)) && (ret_4.x <= (q23 * q11)))) {\n    ret_4.z = (ret_4.z - (tmpvar_9.x * 0.5));\n  };\n  if (((ret_4.y > (q25 * q11)) && (ret_4.y <= (q22 * q12)))) {\n    ret_4.x = (ret_4.x - (tmpvar_9.y * 0.5));\n  };\n  if (((ret_4.z > (q24 * q12)) && (ret_4.z <= (q21 * q13)))) {\n    ret_4.y = (ret_4.y - (tmpvar_9.z * 0.5));\n  };\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_4;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\nfloat2 uv6 = uv1;\nfloat z = 1*length(uv1)+rand_frame*13;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)/d,-2,2);\n\nuv += rs/16;\n\nuv6 = (uv1)*(1 + 0*q27);\n//uv = mul(uv,float2x2(_qb));\n\n\nuv6 = uv.yx;\nmus = q1*cos(uv6.y*44)-(cos(uv6.x*82));\nfloat mod = q28*lum(mus) + 1-q28*lum(mus);\n//mus = lerp(mus.gbr,mus*float3 (.9,.9,1),mod);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp + .1*mus *(1+tex2D (sampler_noise_lq,uv/16+time/100));\nret1 = ret1 * .98 -  .025;\nq25 = q24*1;\nret = q25 * ret1 + (1-q25)*GetPixel(uv_orig);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv6.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n}","comp_hlsl":"float3 ret1, neu;\nfloat2 uv2, uv3;\nshader_body\n{\nfloat c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat dist = 1;\nfloat inten = 1;\nret1 = 0;\nint anz = 4;\nint n = 1;\nwhile (n <= anz) {\n    c = n%2;\n    s = (n+1)%2;\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n//    uv2 *= aspect.yx;\n    dist = 1-frac(1.0/anz*n+q29);\n    inten =  sqrt(dist)*(1-dist*dist);\n    uv3 = frac(2*uv2*dist +.5-.0*dist);\n\n    neu = GetBlur1(uv3)*1.5-GetPixel(uv3);\n\n    ret1 = max(ret1,neu*inten);\nn++;\n}\n\nret = ret1*6;\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \n}"}