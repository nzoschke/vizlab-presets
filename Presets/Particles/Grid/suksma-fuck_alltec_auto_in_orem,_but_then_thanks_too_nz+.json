{"version":2,"baseVals":{"rating":5,"gammaadj":2.995,"decay":0.9,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"wave_thick":1,"wrap":0,"brighten":1,"wave_a":1,"wave_scale":1.186,"wave_smoothing":0,"zoomexp":0.35177,"fshader":1,"zoom":0.9803,"warp":0.01,"wave_g":0.7,"wave_b":0.5,"ob_size":0,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.25},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.newang=0;a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q6=0;a.q1=0;a.newrad=0;a.mq31=0;a.q5=0;a.mq21=0;a.mq24=0;a.oldq8=0;a.chng=0;a.mq28=0;a.mq23=0;a.mode=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.atime=0;a.q4=0;a.newx=0;a.q26=0;a.zz=0;a.mq27=0;a.mq25=0;a.oldzz=0;a.oldchange=0;a.mq22=0;a.beat=0;a.vol=0;a.newzoom=0;a.mq26=0;a.q2=0;a.q27=0;a.q3=0;a.q7=0;a.q28=0;a.newy=0;a.change=0;a.q8=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.warp=0;a.q8=\na.oldq8+.003*(div(pow(1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,6),a.fps)+div(pow(1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,5),a.fps)+div(pow(1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,4),a.fps)+div(pow(1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,3),a.fps)+div(pow(1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,2),a.fps)+div(1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*\na.treb_att+.1*a.mid+.1*a.mid_att,a.fps))+div(1,5*a.fps);a.oldq8=a.q8;a.q1=.5+.15*Math.sin(.416*a.q8)+.15*Math.sin(.832*a.q8)+.1*Math.sin(1.324*a.q8);a.q2=.5+.15*Math.sin(.341*a.q8)+.15*Math.sin(.768*a.q8)+.1*Math.sin(1.523*a.q8);a.q6=.5+.15*Math.sin(.287*a.q8)+.15*Math.sin(.913*a.q8)+.1*Math.sin(1.142*a.q8);a.q7=.5+.15*Math.sin(.531*a.q8)+.15*Math.sin(.671*a.q8)+.1*Math.sin(1.442*a.q8);a.change=.00001<Math.abs(a.beat)?Math.floor(rand(10))+3:a.oldchange;a.oldchange=a.change;a.change=10;a.q4=a.change+\n.2*Math.sin(.385*a.q8)+.2*Math.sin(.641*a.q8)+.2*Math.sin(.846*a.q8);a.zz=.00001<Math.abs(a.beat)?Math.floor(rand(13))+3:a.oldzz;a.oldzz=a.zz;a.zz=6;a.q5=a.zz+.2*Math.sin(.385*a.q8)+.2*Math.sin(.641*a.q8)+.2*Math.sin(.846*a.q8);a.q3=a.mode;a.wave_a=0;a.monitor=a.mode;a.decay=.3;","pixel_eqs_str":"a.newx=a.x-a.q1;a.newy=a.y-a.q6;a.newrad=Math.min(2*sqrt(a.newx*a.newx+.5625*a.newy*a.newy),sqrt(2));a.newang=Math.atan2(a.newx,a.newy);a.newzoom=pow(.995+.05*Math.sin(a.q4*a.newang),pow(Math.sin(a.newrad*a.newrad),a.newrad));a.dx=a.newx*a.newzoom-a.newx;a.dy=a.newy*a.newzoom-a.newy;a.newx=a.x-a.q2;a.newy=a.y-a.q7;a.newrad=Math.min(2*sqrt(a.newx*a.newx+.5625*a.newy*a.newy),sqrt(2));a.newang=Math.atan2(a.newx,a.newy);a.newzoom=pow(.995+.05*Math.sin(a.q5*a.newang),pow(Math.sin(a.newrad*\na.newrad),a.newrad));a.dx=a.dx+a.newx*a.newzoom-a.newx;a.dy=a.dy+a.newy*a.newzoom-a.newy;a.newx=a.x-.33*(a.q1+a.q2+a.q6);a.newy=a.y-.33*(3-a.q2-a.q6-a.q7);a.newrad=Math.min(2*sqrt(a.newx*a.newx+.5625*a.newy*a.newy),sqrt(2));a.newang=Math.atan2(a.newx,a.newy);a.newzoom=pow(1.04+.05*Math.sin(.5*(a.q4+a.q5)*a.newang),pow(Math.sin(a.newrad*a.newrad),a.newrad));a.dx=a.dx+a.newx*a.newzoom-a.newx;a.dy=a.dy+a.newy*a.newzoom-a.newy;","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\nwarp =0;\nq8 = oldq8 +0.003*(((pow(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps) + (pow(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,5)/fps) + (pow(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,4)/fps) + (pow(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,3)/fps) + (pow(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,2)/fps) +(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att)/fps)) + 1/(fps*5);\noldq8 = q8;\nq1 = 0.5 + 0.15*sin(0.416*q8) + 0.15*sin(0.832*q8) + 0.1*sin(1.324*q8);\nq2 = 0.5 + 0.15*sin(0.341*q8) + 0.15*sin(0.768*q8) + 0.1*sin(1.523*q8);\nq6 = 0.5 + 0.15*sin(0.287*q8) + 0.15*sin(0.913*q8) + 0.1*sin(1.142*q8);\nq7 = 0.5 + 0.15*sin(0.531*q8) + 0.15*sin(0.671*q8) + 0.1*sin(1.442*q8);\nchange = if(beat,int(rand(10))+3,oldchange);\noldchange = change;\nchange = 10;\nq4 = (change + 0.2*sin(q8*0.385) + 0.2*sin(q8*0.641) + 0.2*sin(q8*0.846));\nzz = if(beat,int(rand(13))+3,oldzz);\noldzz =zz;\nzz = 6;\nq5 = (zz + 0.2*sin(q8*0.385) + 0.2*sin(q8*0.641) + 0.2*sin(q8*0.846));\nq3 = mode;\nwave_a =0;\nmonitor = mode;\ndecay =0.3;","pixel_eqs_eel":"newx = x - q1;\nnewy = y - q6;\nnewrad = min(sqrt((newx)*(newx)+0.5625*(newy)*(newy))*2,sqrt(2));\nnewang = atan2(newx,newy);\nnewzoom = pow(0.995 + 0.05*sin((q4)*(newang)), pow(sin(newrad*newrad), newrad));\ndx = (newx)*newzoom - newx;\ndy = (newy)*newzoom - newy;\nnewx = x - q2;\nnewy = y - q7;\nnewrad = min(sqrt((newx)*(newx)+0.5625*(newy)*(newy))*2,sqrt(2));\nnewang = atan2(newx,newy);\nnewzoom = pow(0.995 + 0.05*sin((q5)*(newang)), pow(sin(newrad*newrad), newrad));\ndx = dx + (newx)*newzoom - newx;\ndy = dy + (newy)*newzoom - newy;\nnewx = x - (0.33*(q1+q2+q6));\nnewy = y - (0.33*(3-q2-q6-q7));\nnewrad = min(sqrt((newx)*(newx)+0.5625*(newy)*(newy))*2,sqrt(2));\nnewang = atan2(newx,newy);\nnewzoom = pow(1.04 + 0.05*sin(0.5*(q4+q5)*(newang)), pow(sin(newrad*newrad), newrad));\ndx = dx + (newx)*newzoom - newx;\ndy = dy + (newy)*newzoom - newy;","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_fc_main, uv);\n  ret_1.yz = tmpvar_2.yz;\n  ret_1.x = texture (sampler_main, ((uv - 0.5) + 0.5)).x;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (tmpvar_2.y + (tmpvar_3.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (tmpvar_2.z + (tmpvar_3.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_3.z * 0.5));\n  };\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - 0.5);\n  ret_1.y = texture (sampler_main, ((tmpvar_4 * 0.9) + 0.5)).y;\n  ret_1.z = texture (sampler_main, ((tmpvar_4 * 1.15) + 0.5)).z;\n  ret_1 = (ret_1 * 0.75);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","comp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\nvec2 xlat_mutableuv_y;\n shader_body { \n  vec3 ret_1;\n  xlat_mutabled = (texsize.zw * 4.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_2;\n  tmpvar_2.x = xlat_mutabledx.y;\n  tmpvar_2.y = xlat_mutabledy.y;\n  xlat_mutableuv_y = (uv + (tmpvar_2 * 0.4));\n  xlat_mutabled = (texsize.zw * 18.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (xlat_mutableuv_y + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (xlat_mutableuv_y - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (xlat_mutableuv_y + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (xlat_mutableuv_y - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  float tmpvar_3;\n  tmpvar_3 = ((-(xlat_mutabledx) + xlat_mutabledy) + 1.0).x;\n  xlat_mutabled = (texsize.zw * 2.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (xlat_mutableuv_y + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (xlat_mutableuv_y - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (xlat_mutableuv_y + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (xlat_mutableuv_y - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.x;\n  tmpvar_4.y = xlat_mutabledy.x;\n  float tmpvar_5;\n  tmpvar_5 = sqrt(dot (tmpvar_4, tmpvar_4));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (((vec3(0.8, 0.4, 0.0) * texture (sampler_main, uv).x) * tmpvar_3), (vec3(8.0, 4.0, 0.0) * tmpvar_5), vec3(tmpvar_5));\n  ret_1 = tmpvar_6;\n  vec3 tmpvar_7;\n  tmpvar_7.x = xlat_mutabledy.z;\n  tmpvar_7.yz = xlat_mutabledx.yz;\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_7) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_6.x > (q26 * q13)) && (tmpvar_6.x <= (q23 * q11)))) {\n    ret_1.z = (tmpvar_6.z - (tmpvar_8.x * 0.5));\n  };\n  if (((tmpvar_6.y > (q25 * q11)) && (tmpvar_6.y <= (q22 * q12)))) {\n    ret_1.x = (tmpvar_6.x - (tmpvar_8.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\n    ret_1.y = (tmpvar_6.y - (tmpvar_8.z * 0.5));\n  };\n  vec3 tmpvar_9;\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_blur1, uv);\n  tmpvar_9 = mix (mix (ret_1, vec3(0.8, 0.4, 1.0), vec3((\n    ((tmpvar_10.xyz * scale1) + bias1)\n  .y * 0.5))), vec3(1.0, 1.0, 1.0), vec3((texture (sampler_main, uv).z * (1.0 - \n    (((tmpvar_10.xyz * scale1) + bias1).y * 2.0)\n  ))));\n  ret_1 = tmpvar_9;\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = tmpvar_9;\n  ret = tmpvar_11.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz;\n    float3 ret2 = tex2D( sampler_fc_main, uv ).xyz;\n    \n    ret.x = tex2D( sampler_main, (uv-0.5)*1.00+0.5 ).x;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n    ret.y = tex2D( sampler_main, (uv-0.5)*0.9+0.5 ).y;\n    ret.z = tex2D( sampler_main, (uv-0.5)*1.15+0.5 ).z;   \n\n    // darken (decay) over time\n    ret *= 0.75; //or try: ret -= 0.004;\n}","comp_hlsl":"float2 d, uv_y;\nfloat3 dx, dy;\nshader_body\n{\n\n    d = texsize.zw*4;\n    dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n    uv_y = uv+float2(dx.y,dy.y)*0.4;\n\n\n    d = texsize.zw*18;\n    dx = ( GetBlur1(uv_y+float2(1,0)*d)-GetBlur1(uv_y-float2(1,0)*d) );\n    dy = ( GetBlur1(uv_y+float2(0,1)*d)-GetBlur1(uv_y-float2(0,1)*d) );\n\nfloat base = GetPixel(uv);\nfloat emboss = (-dx + dy + 1);\n\n    d = texsize.zw*2;\n    dx = ( GetBlur1(uv_y+float2(1,0)*d)-GetBlur1(uv_y-float2(1,0)*d) );\n    dy = ( GetBlur1(uv_y+float2(0,1)*d)-GetBlur1(uv_y-float2(0,1)*d) );\n\nfloat grad = length(float2(dx.x,dy.x));\n\nret = lerp( float3(0.8,0.4,0)*base.x*emboss,\n            float3(8,4,0)*grad,\n            grad\n          ); \nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((float3(dy.z,dx.y,dx.z)*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret = lerp(ret,float3(0.8,0.4,1), GetBlur1(uv).y*0.5);\nret = lerp(ret,1,GetPixel(uv).z*(1-GetBlur1(uv).y*2));\n\n}\n"}