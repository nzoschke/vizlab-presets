{"version":2,"baseVals":{"rating":5,"gammaadj":1.998,"echo_zoom":1.421,"wave_mode":1,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"darken_center":1,"wave_a":0.22,"wave_scale":3.436,"wave_smoothing":0.54,"wave_mystery":-0.4,"modwavealphastart":0.25,"modwavealphaend":2,"warpanimspeed":1.348,"warpscale":1.16,"zoom":1.01035,"warp":0.08979,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.6,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.t2=0;","frame_eqs_str":"a.wave_r+=.65*(.6*Math.sin(1.437*a.time)+.4*Math.sin(.97*a.time));a.wave_g+=.65*(.6*Math.sin(1.344*a.time)+.4*Math.sin(.841*a.time));a.wave_b+=.65*(.6*Math.sin(1.251*a.time)+.4*Math.sin(1.055*a.time));a.rot+=.01*(.6*Math.sin(.181*a.time)+.09*Math.sin(-.279*a.time));a.zoom+=.01*(.6*Math.sin(.3131*a.time+2)+.4*Math.sin(-.479*a.time+4));a.decay-=.01*equal(mod(a.frame,6),0);a.t2=6*a.time;a.wave_x=.5+.3*(.6*Math.sin(.374*a.t2)+.4*Math.sin(.294*a.t2));a.wave_y=.5+.3*(.6*Math.sin(.393*\na.t2)+.4*Math.sin(.223*a.t2));","pixel_eqs_str":"a.dx+=2*div(Math.cos(29.37*a.y-1.9*a.time),a.pixelsx);a.dy+=2*div(Math.cos(33.21*a.x-1.7*a.time),a.pixelsy);a.dx+=1.5*div(Math.cos(77.55*a.y-2.1*a.time),a.pixelsx);a.dy+=1.5*div(Math.cos(78.32*a.x-2.4*a.time),a.pixelsy);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.650*( 0.60*sin(1.437*time) + 0.40*sin(0.970*time) );\nwave_g = wave_g + 0.650*( 0.60*sin(1.344*time) + 0.40*sin(0.841*time) );\nwave_b = wave_b + 0.650*( 0.60*sin(1.251*time) + 0.40*sin(1.055*time) );\n//wave_b = wave_b * wave_g;\n//wave_r = wave_r * sqrt(wave_b);\n\n//wave_mystery = time*0.3;\nrot = rot + 0.01*( 0.60*sin(0.181*time) + 0.09*sin(-0.279*time) );\nzoom = zoom + 0.01*( 0.60*sin(0.3131*time+2) + 0.4*sin(-0.479*time+4) );\n//cx = cx + 0.10*( 0.60*sin(0.374*time) + 0.10*sin(0.294*time) );\n//cy = cy + 0.10*( 0.60*sin(0.393*time) + 0.10*sin(0.223*time) );\n//dx = dx + 0.00740*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\n//dy = dy + 0.00740*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\ndecay = decay - 0.01*equal(frame%6,0);\n\n//wave_x = 0.1 + rand(80)*0.01;\n//wave_y = 0.1 + rand(80)*0.01;\nt2 = time*6;\nwave_x = 0.5 + 0.3*( 0.60*sin(0.374*t2) + 0.40*sin(0.294*t2) );\nwave_y = 0.5 + 0.3*( 0.60*sin(0.393*t2) + 0.40*sin(0.223*t2) );","pixel_eqs_eel":"//dx = 0;\n//dy = 0;\ndx = dx + cos(y*29.37 - time*1.9) * 1.0/pixelsx * 2;\ndy = dy + cos(x*33.21 - time*1.7) * 1.0/pixelsy * 2;\ndx = dx + cos(y*77.55 - time*2.1) * 1.0/pixelsx * 1.5;\ndy = dy + cos(x*78.32 - time*2.4) * 1.0/pixelsy * 1.5;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (max (max (\n    max (max (max (texture (sampler_fw_main, uv_orig).xyz, texture (sampler_fw_main, mix (uv_orig, uv, vec2(0.2, 0.2))).xyz), texture (sampler_fw_main, mix (uv_orig, uv, vec2(0.4, 0.4))).xyz), texture (sampler_fw_main, mix (uv_orig, uv, vec2(0.6, 0.6))).xyz)\n  , texture (sampler_fw_main, \n    mix (uv_orig, uv, vec2(0.8, 0.8))\n  ).xyz), texture (sampler_fw_main, uv).xyz) - 0.016);\n  ret = tmpvar_1.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  float ang2_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = cos(q30);\n  float tmpvar_6;\n  tmpvar_6 = sin(q30);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_5) - (uv_1.y * tmpvar_6));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_6) + (uv_1.y * tmpvar_5));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  dist_3 = (1.0 - fract(q29));\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\n  xlat_mutableblur = (((texture (sampler_blur1, \n    fract(xlat_mutableuv3)\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\n  ang2_4 = (2.093333 + q30);\n  float tmpvar_7;\n  tmpvar_7 = cos(ang2_4);\n  float tmpvar_8;\n  tmpvar_8 = sin(ang2_4);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_7) - (uv_1.y * tmpvar_8));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_8) + (uv_1.y * tmpvar_7));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  dist_3 = (1.0 - fract((0.3333333 + q29)));\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\n  xlat_mutableblur = (((texture (sampler_blur1, \n    fract(xlat_mutableuv3)\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\n  ang2_4 = (4.186667 + q30);\n  float tmpvar_9;\n  tmpvar_9 = cos(ang2_4);\n  float tmpvar_10;\n  tmpvar_10 = sin(ang2_4);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  dist_3 = (1.0 - fract((0.6666667 + q29)));\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\n  xlat_mutableblur = (((texture (sampler_blur1, \n    fract(xlat_mutableuv3)\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\n  ang2_4 = (6.28 + q30);\n  float tmpvar_11;\n  tmpvar_11 = cos(ang2_4);\n  float tmpvar_12;\n  tmpvar_12 = sin(ang2_4);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_11) - (uv_1.y * tmpvar_12));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_12) + (uv_1.y * tmpvar_11));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  dist_3 = (1.0 - fract((1.0 + q29)));\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\n  xlat_mutableblur = (((texture (sampler_blur1, \n    fract(xlat_mutableuv3)\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = (xlat_mutableret1 - 0.1);\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"shader_body\n{\n/*\n    float2 dxy = 0;\n\n    float f = 1.12;\n\n    dxy.x += cos(uv_orig.y*138*f - time);\n    dxy.y += cos(uv_orig.x*138*f - time);\n    dxy.x += cos(uv_orig.y*368*f - time*5);\n    dxy.y += cos(uv_orig.x*368*f - time*5);\n    dxy.y += 0.15;\n    float2 uv2 = uv + dxy*texsize.zw;\n*/\n    float2 uv2 = uv;\n\n    ret = tex2D(sampler_fw_main, uv_orig).xyz;\n    ret = max(ret, tex2D( sampler_fw_main, lerp(uv_orig, uv, 0.2) ).xyz);\n    ret = max(ret, tex2D( sampler_fw_main, lerp(uv_orig, uv, 0.4) ).xyz);\n    ret = max(ret, tex2D( sampler_fw_main, lerp(uv_orig, uv, 0.6) ).xyz);\n    ret = max(ret, tex2D( sampler_fw_main, lerp(uv_orig, uv, 0.8) ).xyz);\n    ret = max(ret, tex2D( sampler_fw_main, uv                     ).xyz);\n\n\n    ret -= 0.016;\n    \n\n    //ret = lerp(ret, GetBlur1(uv2), 0.01);\n\n}","comp_hlsl":"float3 ret1, neu, crisp, blur;\nfloat2 uv2, uv3;\n\nshader_body\n{\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nfloat dist = 1;\nfloat inten = 1;\nfloat mask = 0;\nret1 = 0;\nint anz = 3;\nfloat n = 0;\nfloat t_rel = q29;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz+q30;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    uv2*= aspect.yx;\n\n    dist = 1-frac(n/anz+t_rel); //evtl sqrt !\n\n    inten =  4*dist*(1-dist*dist);\n    uv3 = 3*uv2*dist + 0.5+.0*float2(q5,q6);\n    crisp = GetPixel(uv3);\n    blur = GetBlur1(frac(uv3)) * float3 (.8,.9,1);\n    ret1 = max(ret1,(crisp+blur)*inten);\nn++;\n}\n\n\nfloat3 ret1 = ret1 ;\n//ret1 = GetPixel(.5+uv_orig*aspect.yx*1.2);\n\n\nret = ret1-.1;\n\n}"}