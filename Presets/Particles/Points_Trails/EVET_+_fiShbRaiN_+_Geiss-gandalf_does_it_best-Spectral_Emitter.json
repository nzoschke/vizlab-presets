{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.94,"echo_zoom":0.597,"echo_orient":1,"wave_mode":7,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":1.47,"zoomexp":1.34784,"zoom":0.99816,"warp":0.01,"sx":1.00183,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":0.51,"ib_size":0.26,"mv_x":21.473,"mv_y":15.907,"mv_l":0.474,"mv_g":0.179,"mv_b":0.483,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"additive":1,"rad":0.36457,"tex_zoom":0.55045,"g":1,"b":1,"a":0.05,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=int(rand(100))*.01;\ny=int(rand(100))*.01;\nrad=int(rand(100))*.01;","init_eqs_eel":"","frame_eqs_eel":"x=int(rand(100))*.01;\ny=int(rand(100))*.01;\nrad=int(rand(100))*.01;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"additive":1,"a":0.06,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"xspout=.5;\nyspout=-.01;\n\npphase=9999*sample*sample*.0001;\npphase2=.1+((sample*3349*sample)%100)*.01;\npheight=((sample*9893)%100)*.002;\nyheight=((sample*1231*sample)%100)*.01;\n\nr=((sample*5454)%100)*.01*abs(sin(time*.25));\ng=((sample*9954)%100)*.01;\n\nxoffset1=(cos((time*pphase2)+pphase)*pheight);\nxoffset2=-1*(cos((time*pphase2)+pphase)*pheight);\n\nlrorient=if(below(cos((time*pphase2)+pphase),cos(((time-.1)*pphase2)+pphase)),0,1);\n\npx=if(equal(lrorient,0),xspout-pheight+xoffset1,xspout+pheight-xoffset2);\n\npy=yspout+(abs(sin((time*pphase2)+pphase))*yheight);\n\nx=px;\ny=py;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xspout=.5;\nyspout=-.01;\n\npphase=9999*sample*sample*.0001;\npphase2=.1+((sample*3349*sample)%100)*.01;\npheight=((sample*9893)%100)*.002;\nyheight=((sample*1231*sample)%100)*.01;\n\nr=((sample*5454)%100)*.01*abs(sin(time*.25));\ng=((sample*9954)%100)*.01;\n\nxoffset1=(cos((time*pphase2)+pphase)*pheight);\nxoffset2=-1*(cos((time*pphase2)+pphase)*pheight);\n\nlrorient=if(below(cos((time*pphase2)+pphase),cos(((time-.1)*pphase2)+pphase)),0,1);\n\npx=if(equal(lrorient,0),xspout-pheight+xoffset1,xspout+pheight-xoffset2);\n\npy=yspout+(abs(sin((time*pphase2)+pphase))*yheight);\n\nx=px;\ny=py;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1,"a":0.2},"init_eqs_str":"a.pphase=0;a.pheight=0;a.xspout=0;a.yspout=0;a.px=0;a.py=0;","frame_eqs_str":"","point_eqs_str":"a.pphase=5671*a.sample*Math.cos(.0001*a.time);a.pheight=.005*mod(7654*a.sample,100)*Math.sin(.2*a.time);a.xspout=.00001<Math.abs(below(Math.abs(Math.sin(.2*a.time)),.005))?.3+.01*Math.floor(rand(40)):a.xspout;a.yspout=.00001<Math.abs(below(Math.abs(Math.sin(.2*a.time)),.005))?.3+.01*Math.floor(rand(40)):a.yspout;a.px=a.xspout+Math.cos(a.time+a.pphase)*a.pheight;a.py=a.yspout+Math.sin(a.time+a.pphase)*a.pheight;a.x=a.px;a.y=a.py;a.a=Math.abs(.3*Math.sin(.2*a.time)+.1*a.treb_att);\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"pphase=(sample*5671*cos(time*.0001));\npheight=((sample*7654)%100)*.005*sin(time*.2);\n\n//xspout=.5;\nxspout=if(below(abs(sin(time*.2)),.005),.3+(int(rand(40))*.01),xspout);\n//yspout=.5;\nyspout=if(below(abs(sin(time*.2)),.005),.3+(int(rand(40))*.01),yspout);\n\npx=xspout+(cos(time+pphase)*pheight);\npy=yspout+(sin(time+pphase)*pheight);\n\nx=px;\ny=py;\na=abs(sin(time*.2)*.3+(treb_att*.1));"},{"baseVals":{"enabled":1,"usedots":1,"additive":1,"a":0.2},"init_eqs_str":"a.pphase=0;a.pheight=0;a.xspout=0;a.yspout=0;a.px=0;a.py=0;","frame_eqs_str":"","point_eqs_str":"a.pphase=5566*a.sample*Math.sin(.001*a.time);a.pheight=.005*mod(3443*a.sample,100)*Math.sin(.45*a.time);a.xspout=.00001<Math.abs(below(Math.abs(Math.sin(.45*a.time)),.005))?.3+.01*Math.floor(rand(40)):a.xspout;a.yspout=.00001<Math.abs(below(Math.abs(Math.sin(.45*a.time)),.005))?.3+.01*Math.floor(rand(40)):a.yspout;a.px=a.xspout+Math.cos(a.time+a.pphase)*a.pheight;a.py=a.yspout+Math.sin(a.time+a.pphase)*a.pheight;a.x=a.px;a.y=a.py;a.a=Math.abs(.3*Math.sin(.45*a.time)+.1*a.bass_att);\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"pphase=(sample*5566*sin(time*.001));\npheight=((sample*3443)%100)*.005*sin(time*.45);\n\n//xspout=.5;\nxspout=if(below(abs(sin(time*.45)),.005),.3+(int(rand(40))*.01),xspout);\n//yspout=.5;\nyspout=if(below(abs(sin(time*.45)),.005),.3+(int(rand(40))*.01),yspout);\n\npx=xspout+(cos(time+pphase)*pheight);\npy=yspout+(sin(time+pphase)*pheight);\n\nx=px;\ny=py;\na=abs(sin(time*.45)*.3+(bass_att*.1));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"a.px=0;a.xoffset2=0;a.py=0;a.xoffset1=0;a.pheight=0;a.pphase=0;a.yspout=0;a.pphase2=0;a.xspout=0;a.lrorient=0;a.yheight=0;","frame_eqs_str":"","point_eqs_str":"a.xspout=.5;a.yspout=-.01;a.pphase=1234*a.sample*a.sample*.0001;a.pphase2=.1+.01*mod(6666*a.sample*a.sample,100);a.pheight=.001*mod(5555*a.sample,100);a.yheight=.01*mod(5511*a.sample*a.sample,100);a.r=.01*mod(2222*a.sample,100)*Math.abs(Math.sin(.25*a.time));a.g=.01*mod(642*a.sample,100);a.xoffset1=Math.cos(a.time*a.pphase2+a.pphase)*a.pheight;a.xoffset2=-1*Math.cos(a.time*a.pphase2+a.pphase)*a.pheight;a.lrorient=.00001<Math.abs(below(Math.cos(a.time*a.pphase2+a.pphase),Math.cos((a.time-\n.1)*a.pphase2+a.pphase)))?0:1;a.px=.00001<Math.abs(equal(a.lrorient,0))?a.xspout-a.pheight+a.xoffset1:a.xspout+a.pheight-a.xoffset2;a.py=a.yspout+Math.abs(Math.sin(a.time*a.pphase2+a.pphase))*a.yheight;a.x=a.px;a.y=a.py;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xspout=.5;\nyspout=-.01;\n\npphase=1234*sample*sample*.0001;\npphase2=.1+((sample*6666*sample)%100)*.01;\npheight=((sample*5555)%100)*.001;\nyheight=((sample*5511*sample)%100)*.01;\n\nr=((sample*2222)%100)*.01*abs(sin(time*.25));\ng=((sample*642)%100)*.01;\n\nxoffset1=(cos((time*pphase2)+pphase)*pheight);\nxoffset2=-1*(cos((time*pphase2)+pphase)*pheight);\n\nlrorient=if(below(cos((time*pphase2)+pphase),cos(((time-.1)*pphase2)+pphase)),0,1);\n\npx=if(equal(lrorient,0),xspout-pheight+xoffset1,xspout+pheight-xoffset2);\n\npy=yspout+(abs(sin((time*pphase2)+pphase))*yheight);\n\nx=px;\ny=py;"}],"init_eqs_str":"a.db=0;a.bb=0;a.dt=0;a.tt=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.zoom=1;a.db=.75*a.db+.25*a.bass_att;a.bb+=.1*a.db;a.dt=.75*a.dt+.25*a.treb_att;a.tt+=.1*a.dt;a.q2=Math.sin(.225*a.bb+a.time-.25*a.tt);a.q3=Math.cos(.25*a.bb+a.time-.235*a.tt);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//decay=.1+abs(sin(time*.3)*.8);\nzoom=1;\ndb = .75 * db + .25 * bass_att;\nbb = bb + .1 * db;\ndt = .75 * dt + .25 * treb_att;\ntt = tt + .1 * dt;\n\nq2 = sin(.225*bb+time-.25*tt);\nq3 = cos(.25*bb+time-.235*tt);","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - 0.5);\n  float tmpvar_5;\n  tmpvar_5 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_6;\n  tmpvar_6[uint(0)].x = cos(tmpvar_5);\n  tmpvar_6[uint(0)].y = sin(tmpvar_5);\n  tmpvar_6[1u].x = -(sin(tmpvar_5));\n  tmpvar_6[1u].y = cos(tmpvar_5);\n  uv6_2 = (tmpvar_4 * tmpvar_6);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_4)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_7;\n  tmpvar_7 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_8.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_8 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_8, tmpvar_8))\n   * tmpvar_7)));\n  ret_3 = (((crisp_1 - \n    (dot (tmpvar_7, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * 0.99) - 0.04);\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv6_2.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_3.x > (q21 * q13)) && (ret_3.x <= (q24 * q11)))) {\n    ret_3.y = (ret_3.y + (tmpvar_9.x * 0.5));\n  };\n  if (((ret_3.y > (q22 * q11)) && (ret_3.y <= (q25 * q12)))) {\n    ret_3.z = (ret_3.z + (tmpvar_9.y * 0.5));\n  };\n  if (((ret_3.z > (q23 * q12)) && (ret_3.z <= (q26 * q13)))) {\n    ret_3.x = (ret_3.x + (tmpvar_9.z * 0.5));\n  };\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_3;\n  ret = tmpvar_10.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_6;\n  tmpvar_6 = (0.1 / (sqrt(\n    dot (tmpvar_5, tmpvar_5)\n  ) + 0.05));\n  vec2 tmpvar_7;\n  float tmpvar_8;\n  tmpvar_8 = (ang / 3.14);\n  tmpvar_7.x = tmpvar_8;\n  tmpvar_7.y = (tmpvar_6 * 1.5);\n  uv2_3.y = (tmpvar_7.y + (0.1 * time));\n  uv2_3.x = (tmpvar_8 + (0.02 * time));\n  uv3_2.y = (tmpvar_6 + q30);\n  uv3_2.x = (tmpvar_8 + (time / 32.0));\n  crisp_1 = ((texture (sampler_main, fract(uv2_3)).xyz + (2.0 * texture (sampler_main, \n    fract(uv3_2)\n  ).xyz)) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  ret_4 = ((crisp_1 + (\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, fract(uv)).xyz));\n  ret_4 = (ret_4 * 0.8);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_4;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"float3 color, mus;\nfloat dx,dy;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\n\nfloat2 uv1 = (uv-.5);\nfloat2 uv6 = uv1;\n\nfloat rota = lum(tex2D (sampler_noise_hq,uv/4))*q31;\n\nuv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));\nuv6 += sin(q32*uv1);\nmus = .2/(sqrt(uv6.x)+.2);\n\nmus *= float3 (1.1,1,.95);\nmus *= .9+.1*tex2D (sampler_noise_hq,uv);\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (0.005,0);\nfloat2 ver = float2 (0,.005);\n\nfloat dx = lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\n\nfloat2 zz = float2 (dx,dy);\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\nfloat3 crisp2 = tex2D(sampler_main,uv);\ncrisp += crisp2/2;\ncrisp *= .67;\ncrisp +=.08 * mus - length(zz)*blur;\n\nfloat3 ret1 = crisp - lum(blur)*.04;\nret = ret1 * .99 -  .04 ;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv6.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\nfloat rad2 = length(uv1) + .05;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1*1.5);\nuv2.y = uv2.y  +0.1*time;\nuv2.x = uv2.x  +.02*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1);\nuv3.y = uv3.y  + q30 ;\nuv3.x = uv3.x  + time/32;\n\n\nfloat3 crisp = GetPixel(frac(uv2)) + 2*GetPixel(frac(uv3));\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (1,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\n\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(frac(uv));\n\nret *= .8;\n}"}