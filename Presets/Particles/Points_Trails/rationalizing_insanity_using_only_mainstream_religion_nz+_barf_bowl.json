{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warp":0.001,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_str":"a.z=0;a.t1=0;a.q6=0;a.q5=0;a.t3=0;a.t2=0;a.q2=0;a.q7=0;a.q8=0;a.t1=.5;a.t2=.5;a.t3=.5;","frame_eqs_str":"","point_eqs_str":"a.x=Math.sin(.8*a.t2)-a.t3*Math.cos(a.q5*a.t1);a.y=a.t3*Math.sin(a.q2*a.t1)-Math.cos(-1.4*a.t2+.1);a.z=1.1*Math.sin(a.t1);a.t1=a.x;a.t2=a.y;a.t3=a.z;a.x=.5*a.x+.7;a.y=.5*a.y+.7;a.r=a.q8;a.b=a.q7;a.g=a.q6;","init_eqs_eel":"t1=0.5;\nt2=0.5;\nt3=0.5;","frame_eqs_eel":"","point_eqs_eel":"//x = a*sin(b*y) - z*cos(c*x); \n//x = 1.4*sin(q2*t2) - t3*cos(0.5*t1);\n//y = z*sin(d*x) - cos(e*y); \n//y = t3*sin(-q1*t1) - cos(-0.5*t2);\n//z = f*sin(x);\n//z = 1*sin(t1);\n\n\nx = sin(0.8*t2) - t3*cos(q5*t1);\ny = t3*sin(q2*t1)-cos(-1.4*t2+0.1);\nz = 1.1*sin(t1);\n\n\n//transmit the x,y,z positions to the next point\nt1=x;\nt2=y;\nt3=z;\n\n//adjust the scale and position of the entire attractor *after* we passed xyz to the next point\n\nx = (x*0.5+0.7);\ny = (y*0.5+0.7);\n\n\nr = q8;\nb = q7;\ng = q6;"},{"baseVals":{"enabled":1,"a":0.05},"init_eqs_str":"a.z=0;a.t1=0;a.q6=0;a.q5=0;a.t3=0;a.t2=0;a.q2=0;a.q7=0;a.q8=0;a.t1=.5;a.t2=.5;a.t3=.5;","frame_eqs_str":"","point_eqs_str":"a.x=Math.sin(.8*a.t2)-a.t3*Math.cos(a.q5*a.t1);a.y=a.t3*Math.sin(a.q2*a.t1)-Math.cos(-1.4*a.t2+.1);a.z=1.1*Math.sin(a.t1);a.t1=a.x;a.t2=a.y;a.t3=a.z;a.x=.5*a.x+.7;a.y=.5*a.y+.7;a.r=a.q8;a.b=a.q7;a.g=a.q6;","init_eqs_eel":"t1=0.5;\nt2=0.5;\nt3=0.5;","frame_eqs_eel":"","point_eqs_eel":"\n\nx = sin(0.8*t2) - t3*cos(q5*t1);\ny = t3*sin(q2*t1)-cos(-1.4*t2+0.1);\nz = 1.1*sin(t1);\n\n//transmit the x,y,z positions to the next point\nt1=x;\nt2=y;\nt3=z;\n\n//adjust the scale and position of the entire attractor *after* we passed xyz to the next point\nx = x*0.5+0.7;\ny = y*0.5+0.7;\n\n\nr = q8;\nb = q7;\ng = q6;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.d=0;a.cx1=0;a.y3=0;a.y1=0;a.mq1=0;a.cy1=0;a.q25=0;a.q12=0;a.q18=0;a.x1=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.q5=0;a.mq21=0;a.vb=0;a.mq24=0;a.q9=0;a.v=0;a.chng=0;a.mq28=0;a.mm=0;a.tt=0;a.mq23=0;a.x3=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.mq30=0;a.q4=0;a.dir=0;a.amp=0;a.q16=0;a.q26=0;a.wang=0;a.mq27=0;a.x2=0;a.mq25=0;a.q19=0;a.mq22=0;a.beat=0;a.q17=0;a.y2=0;a.mq26=0;a.bb=0;a.q2=0;a.q27=0;a.q14=0;a.trebcap=0;a.q3=0;a.vvm=0;a.q32=\n0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a[\"in\"]=0;a.vvt=0;a.q8=0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(a.bass*a.treb*a.mid,2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(a.mid,2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(a.treb,2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=2*a.vvb;a.q2=2*a.vvm;a.q3=20*a.vvt;a.v=2;a.bb-=a.vvb*a.v;a.mm-=a.vvm*a.v;a.tt-=a.vvt*a.v;a.q4=-a.bb;a.q5=-a.mm;a.q6=-a.tt;a.q4=\n5*(a.q1+a.q2+a.q3);a.q5=5*(a.q1+a.q2+a.q3);a.q6=5*(a.q1+a.q2+a.q3);a.q7=5*(a.q1+a.q2+a.q3);a.q8=5*(a.q1+a.q2+a.q3);a.q9=5*(a.q1+a.q2+a.q3);a.q10=5*(a.q1+a.q2+a.q3);a.q11=5*(a.q1+a.q2+a.q3);a.q12=5*(a.q1+a.q2+a.q3);a.q13=5*(a.q1+a.q2+a.q3);a.q14=5*(a.q1+a.q2+a.q3);a.q15=5*(a.q1+a.q2+a.q3);a.q16=5*(a.q1+a.q2+a.q3);a.q17=5*(a.q1+a.q2+a.q3);a.q18=5*(a.q1+a.q2+a.q3);a.q19=5*(a.q1+a.q2+a.q3);a.q20=5*(a.q1+a.q2+a.q3);a.q21=5*(a.q1+a.q2+a.q3);a.q22=5*(a.q1+a.q2+a.q3);a.q23=5*(a.q1+a.q2+a.q3);a.q24=5*(a.q1+\na.q2+a.q3);a.q25=5*(a.q1+a.q2+a.q3);a.q26=5*(a.q1+a.q2+a.q3);a.q27=5*(a.q1+a.q2+a.q3);a.q28=5*(a.q1+a.q2+a.q3);a.q29=5*(a.q1+a.q2+a.q3);a.q30=3*(a.q1+a.q2+a.q3);a.q31=5*(a.q1+a.q2+a.q3);a.q32=5*(a.q1+a.q2+a.q3);a.mv_g=1-.4*a.bass_att;a.beat=.00001<Math.abs(above(a.bass*a.bass_att,4.5))?1-a.beat:a.beat;a.q1=2*a.beat-1;a.amp=.8*a.amp+.06*(a.bass_att+a.mid_att+a.treb_att);a.q2=Math.min(a.amp,1);a.trebcap=.7*a.trebcap+.16*a.treb;a.q3=2*a.trebcap;a.monitor=a.q3;a.chng=Math.sin(.5*a.time);a.cthr=.99;a.mq21=\n.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq29;a.mq30=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq30;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q30=a.mq30;a.monitor=a.mq1;","pixel_eqs_str":"a.wang=(3+a.q3)*a.x+1.7*a.time+.1*a.bass;a[\"in\"]=0;a[\"in\"]+=below(Math.abs(a.x-.25),.05)*below(Math.abs(a.y-.5),.25);a[\"in\"]=below(Math.abs(a.y-(.5+.5*Math.sin(a.wang)*a.q2)),.1);a[\"in\"]=bnot(bnot(a[\"in\"]));a.dx=.02*a[\"in\"];a.dy=.08*Math.cos(a.wang)*a.q2*a[\"in\"];a.dx+=.005*bnot(a[\"in\"])*a.q1;a.dy+=bnot(a[\"in\"])*Math.cos(a.wang)*-.01*a.q1;a.cx1=.5+.2*Math.sin(.618*a.time);a.cy1=.5+.2*Math.cos(1.618*a.time);a.dir=a.bass;a.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));\na.x1=.00001<Math.abs(above(a.d,.3))?0:.05*Math.sin(a.y-a.cy1)*a.dir;a.y1=.00001<Math.abs(above(a.d,.3))?0:.05*-Math.sin(a.x-a.cx1)*a.dir;a.cx1=.5+.3*Math.sin(2.618*a.time);a.cy1=.5+.3*Math.cos(3.14*a.time);a.dir=2*-a.mid;a.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));a.x2=.00001<Math.abs(above(a.d,.2))?0:.05*Math.sin(a.y-a.cy1)*a.dir;a.y2=.00001<Math.abs(above(a.d,.2))?0:.05*-Math.sin(a.x-a.cx1)*a.dir;a.cx1=.5+.4*Math.sin(2.618*-a.time);a.cy1=.5+.4*Math.cos(1.14*-a.time);a.dir=3*a.treb;\na.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));a.x3=.00001<Math.abs(above(a.d,.1))?0:.05*Math.sin(a.y-a.cy1)*a.dir;a.y3=.00001<Math.abs(above(a.d,.1))?0:.05*-Math.sin(a.x-a.cx1)*a.dir;a.dx=a.dx+a.x1+a.x2+a.x3;a.dy=a.dy+a.y1+a.y2+a.y3;","init_eqs_eel":"","frame_eqs_eel":"vb = vb*0.95 + (1-vb)*pow(bass*treb*mid,2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(mid,2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(treb,2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = vvb*2;//0.5 + vb - vvb;\nq2 = vvm*2;//0.5 + vm - vvm;\nq3 = vvt*2*10;//0.5 + vt - vvt;\nv=2;\nbb = bb - vvb*v;\nmm = mm - vvm*v;\ntt = tt - vvt*v;\nq4 = -bb;\nq5 = -mm;\nq6 = -tt;\nq4=(q1+q2+q3)*5;\nq5=(q1+q2+q3)*5;\nq6=(q1+q2+q3)*5;\nq7=(q1+q2+q3)*5;\nq8=(q1+q2+q3)*5;\nq9=(q1+q2+q3)*5;\nq10=(q1+q2+q3)*5;\nq11=(q1+q2+q3)*5;\nq12=(q1+q2+q3)*5;\nq13=(q1+q2+q3)*5;\nq14=(q1+q2+q3)*5;\nq15=(q1+q2+q3)*5;\nq16=(q1+q2+q3)*5;\nq17=(q1+q2+q3)*5;\nq18=(q1+q2+q3)*5;\nq19=(q1+q2+q3)*5;\nq20=(q1+q2+q3)*5;\nq21=(q1+q2+q3)*5;\nq22=(q1+q2+q3)*5;\nq23=(q1+q2+q3)*5;\nq24=(q1+q2+q3)*5;\nq25=(q1+q2+q3)*5;\nq26=(q1+q2+q3)*5;\nq27=(q1+q2+q3)*5;\nq28=(q1+q2+q3)*5;\nq29=(q1+q2+q3)*5;\nq30=(q1+q2+q3)*3;\nq31=(q1+q2+q3)*5;\nq32=(q1+q2+q3)*5;\nmv_g=1-bass_att*.4;\nbeat=if(above(bass*bass_att,4.5),1-beat,beat);\nq1=beat*2-1;\n\namp =amp*.8+.2*(bass_att+mid_att+treb_att)*.3;\nq2 = min(amp,1);\ntrebcap=trebcap*.7+.16*treb;\nq3=trebcap*2;\nmonitor = q3;\nchng=sin(time*.5);\ncthr=.99;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1),mq29);\nmq30=if(above(chng,cthr),rand(1),mq30);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\n\nmonitor=mq1;","pixel_eqs_eel":"wang = (3+q3)*x+time*1.7+bass*.1;\nin = 0;\nin = in + below(abs(x-.25),.05)*below(abs(y-.5),.25);\nin = below(abs(y-(.5+.5*sin(wang)*q2)),.1);\nin=bnot(bnot(in));\ndx = .02*in;\ndy = .08*cos(wang)*q2*in;\n\ndx = dx+bnot(in)*.005*q1;\ndy = dy+bnot(in)*cos(wang)*-.01*q1;\n\n\ncx1 = 0.5+sin(time*0.618)*0.2;\ncy1 = 0.5+cos(time*1.618)*0.2;\n\ndir = bass;\n\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\n\nx1 = if( above(d,0.3),0,  sin(y-cy1)*0.05*dir);\ny1 = if( above(d,0.3),0, -sin(x-cx1)*0.05*dir);\n\n\ncx1 = 0.5+sin(time*2.618)*0.3;\ncy1 = 0.5+cos(time*3.14)*0.3;\n\ndir = -mid*2;\n\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\n\nx2 = if( above(d,0.2),0,  sin(y-cy1)*0.05*dir);\ny2 = if( above(d,0.2),0, -sin(x-cx1)*0.05*dir);\n\ncx1 = 0.5+sin(-time*2.618)*0.4;\ncy1 = 0.5+cos(-time*1.14)*0.4;\n\ndir = treb*3;\n\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\n\nx3 = if( above(d,0.1),0,  sin(y-cy1)*0.05*dir);\ny3 = if( above(d,0.1),0, -sin(x-cx1)*0.05*dir);\n\n\ndx = dx+x1+x2+x3;\ndy = dy+y1+y2+y3;","warp":" shader_body { \n  vec2 v_1;\n  vec3 ret_2;\n  v_1 = (normalize((uv - 0.5)) * texsize.zw);\n  ret_2 = (0.2 * ((\n    ((texture (sampler_main, uv).xyz + texture (sampler_main, (uv - (v_1 * 2.5))).xyz) + texture (sampler_main, (uv - (v_1 * 5.5))).xyz)\n   + texture (sampler_main, \n    (uv - (v_1 * 9.0))\n  ).xyz) + texture (sampler_main, (uv - \n    (v_1 * 13.0)\n  )).xyz));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * roam_cos.y)) && (ret_2.x <= (q24 * roam_sin.x)))) {\n    ret_2.y = (ret_2.y - (tmpvar_3.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * roam_sin.x)) && (ret_2.y <= (q25 * roam_cos.x)))) {\n    ret_2.z = (ret_2.z - (tmpvar_3.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * roam_cos.x)) && (ret_2.z <= (q26 * roam_sin.y)))) {\n    ret_2.x = (ret_2.x - (tmpvar_3.z * 0.5));\n  };\n  ret_2 = (ret_2 * 0.98);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_2;\n  ret = tmpvar_4.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  float ang2_4;\n  vec3 ret_5;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  float tmpvar_6;\n  tmpvar_6 = cos(q30);\n  float tmpvar_7;\n  tmpvar_7 = sin(q30);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_6) - (uv_1.y * tmpvar_7));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_7) + (uv_1.y * tmpvar_6));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  dist_3 = (1.0 - fract(q29));\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\n  xlat_mutableblur = (((texture (sampler_blur1, \n    fract(xlat_mutableuv3)\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\n  ang2_4 = (2.093333 + q30);\n  float tmpvar_8;\n  tmpvar_8 = cos(ang2_4);\n  float tmpvar_9;\n  tmpvar_9 = sin(ang2_4);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_8) - (uv_1.y * tmpvar_9));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_9) + (uv_1.y * tmpvar_8));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  dist_3 = (1.0 - fract((0.3333333 + q29)));\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\n  xlat_mutableblur = (((texture (sampler_blur1, \n    fract(xlat_mutableuv3)\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\n  ang2_4 = (4.186667 + q30);\n  float tmpvar_10;\n  tmpvar_10 = cos(ang2_4);\n  float tmpvar_11;\n  tmpvar_11 = sin(ang2_4);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_10) - (uv_1.y * tmpvar_11));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_11) + (uv_1.y * tmpvar_10));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  dist_3 = (1.0 - fract((0.6666667 + q29)));\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\n  xlat_mutableblur = (((texture (sampler_blur1, \n    fract(xlat_mutableuv3)\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\n  ang2_4 = (6.28 + q30);\n  float tmpvar_12;\n  tmpvar_12 = cos(ang2_4);\n  float tmpvar_13;\n  tmpvar_13 = sin(ang2_4);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_12) - (uv_1.y * tmpvar_13));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_13) + (uv_1.y * tmpvar_12));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  dist_3 = (1.0 - fract((1.0 + q29)));\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\n  xlat_mutableblur = (((texture (sampler_blur1, \n    fract(xlat_mutableuv3)\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\n  ret_5 = xlat_mutableret1;\n  vec4 tmpvar_14;\n  tmpvar_14 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((xlat_mutableret1.x > (q26 * roam_cos.y)) && (xlat_mutableret1.x <= (q23 * roam_sin.x)))) {\n    ret_5.z = (xlat_mutableret1.z - (tmpvar_14.x * 0.5));\n  };\n  if (((xlat_mutableret1.y > (q25 * roam_sin.x)) && (xlat_mutableret1.y <= (q22 * roam_cos.x)))) {\n    ret_5.x = (xlat_mutableret1.x - (tmpvar_14.y * 0.5));\n  };\n  if (((ret_5.z > (q24 * roam_cos.x)) && (ret_5.z <= (q21 * roam_sin.y)))) {\n    ret_5.y = (xlat_mutableret1.y - (tmpvar_14.z * 0.5));\n  };\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = ret_5;\n  ret = tmpvar_15.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame 3 times, creating radial blur\n    float2 v = normalize(uv - 0.5);\n    //v = v.yx * float2(1,-1);\n    v *= texsize.zw;\n    ret = 0.2*(   tex2D( sampler_main, uv ).xyz\n                   +  tex2D(sampler_main, uv - v*2.5 ).xyz\n                   +  tex2D(sampler_main, uv - v*5.5 ).xyz\n                   +  tex2D(sampler_main, uv - v*9  ).xyz\n                   +  tex2D(sampler_main, uv - v*13 ).xyz\n    );\n    \nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; \nif(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z -= (noise9).y*.5; \nif(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; \n\n    // darken over time\n    ret *= 0.98; //or try: ret -= 0.004;\n}","comp_hlsl":"float3 ret1, neu, crisp, blur;\nfloat2 uv2, uv3;\n\nshader_body\n{\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nfloat dist = 1;\nfloat inten = 1;\nfloat mask = 0;\nret1 = 0;\nint anz = 3;\nfloat n = 0;\nfloat t_rel = q29;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz+q30;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    uv2*= aspect.yx;\n\n    dist = 1-frac(n/anz+t_rel); //evtl sqrt !\n\n    inten =  4*dist*(1-dist*dist);\n    uv3 = 3*uv2*dist + 0.5+.0*float2(q5,q6);\n    crisp = GetPixel(uv3);\n    blur = GetBlur1(frac(uv3)) * float3 (.8,.9,1);\n    ret1 = max(ret1,(crisp+blur)*inten);\nn++;\n}\n\nfloat3 ret1 = ret1 ;\nret = ret1;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q30 \n                     );\nif(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z -= (noise9).x*.5; \nif(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x -= (noise9).y*.5; \nif(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y -= (noise9).z*.5; \n\n}"}