{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.96,"echo_zoom":1.007,"echo_orient":1,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.312,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.99817,"fshader":1,"zoom":1.05048,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71},"shapes":[{"baseVals":{"thickoutline":1,"x":0.8,"rad":6.65013,"ang":3.64425,"tex_ang":3.14159,"tex_zoom":0.27429,"r":0.5,"g":0.5,"b":1,"a":0,"g2":0,"border_g":0,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;","frame_eqs_str":"border_a=treb;\nrad=bass;","init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;","frame_eqs_eel":"border_a=treb;\nrad=bass;"},{"baseVals":{"sides":3,"thickoutline":1,"x":0.37,"y":0.49,"rad":0.75,"ang":3.64425,"tex_zoom":2.21671,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_str":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;\nte = 1;\npoly = 4;","frame_eqs_str":"\nrate = fps/(fps+1/2);\nbeat = above(bass,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.5)*rate+1.5);\nran = rand(8)+4;\npoly = if(beat,if(equal(ran,poly),poly+1,ran),poly);\n//poly = if(above(poly,8),4,poly);\nsides = poly;\n\nrate2 = fps/(fps+10);\nout = (1-beat)*rate2*out + beat;\nborder_a = out;\nte = bass/fps/2 + te;\nx=sin(time*0.23)*0.15 + 0.5;\ny=cos(time*0.19)*0.15 + 0.5;\nang = 3*sin(-te*0.67) + 3*cos(te*0.4);\nrad = rad * (0.9 + 0.2*t2) - 0.1*sin(te*1.51);;\nr = min(1,max(0,r + 0.3*sin(time*0.427 + 1)));\ng = min(1,max(0,g + 0.3*sin(time*0.401 + 2)));\nb = min(1,max(0,b + 0.3*sin(time*0.452 + 4)));\nr2 = min(1,max(0,r2 + 0.3*sin(time*0.417 + 3)));\ng2 = min(1,max(0,g2 + 0.3*sin(time*0.457 + 5)));\nb2 = min(1,max(0,b2 + 0.3*sin(time*0.434 + 6)));","init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;\nte = 1;\npoly = 4;","frame_eqs_eel":"\nrate = fps/(fps+1/2);\nbeat = above(bass,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.5)*rate+1.5);\nran = rand(8)+4;\npoly = if(beat,if(equal(ran,poly),poly+1,ran),poly);\n//poly = if(above(poly,8),4,poly);\nsides = poly;\n\nrate2 = fps/(fps+10);\nout = (1-beat)*rate2*out + beat;\nborder_a = out;\nte = bass/fps/2 + te;\nx=sin(time*0.23)*0.15 + 0.5;\ny=cos(time*0.19)*0.15 + 0.5;\nang = 3*sin(-te*0.67) + 3*cos(te*0.4);\nrad = rad * (0.9 + 0.2*t2) - 0.1*sin(te*1.51);;\nr = min(1,max(0,r + 0.3*sin(time*0.427 + 1)));\ng = min(1,max(0,g + 0.3*sin(time*0.401 + 2)));\nb = min(1,max(0,b + 0.3*sin(time*0.452 + 4)));\nr2 = min(1,max(0,r2 + 0.3*sin(time*0.417 + 3)));\ng2 = min(1,max(0,g2 + 0.3*sin(time*0.457 + 5)));\nb2 = min(1,max(0,b2 + 0.3*sin(time*0.434 + 6)));"},{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"textured":1,"rad":0.85357,"tex_zoom":1.22019,"r":0.98,"b":0.89,"a":0.02,"r2":0.92,"b2":1,"a2":0.05,"border_b":0,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;a.t1=.01*rand(100);a.t2=.01*rand(100);a.te=1;a.poly=5;","frame_eqs_str":"a.ang=.05*Math.sin(.4*a.time)*(.5*Math.sin(.4*a.time)+.5);a.r=a.q1;a.g=a.q2;a.b=a.q3;","init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;\nte = 1;\npoly = 5;","frame_eqs_eel":"ang=sin(time*0.4)*0.05 * (sin(time*0.4)*0.5+0.5);\nr=q1;\ng=q2;\nb=q3;"},{"baseVals":{"sides":3,"rad":0.26515,"g":1,"r2":1,"g2":0,"border_r":0,"border_g":0,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rate = fps/(fps+1/2);\n\nang = time*0.5;\nvol = (bass_att+mid_att+treb_att)/6;\nte = vol/fps + te;\nx = x + 0.2*sin(te*1.14);\ny = y + 0.2*sin(te*0.96+2);\n\nbeat = above(vol*1.5,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.4)*rate+1.4);\npoly = if(beat,rand(5)+3,poly);\npoly = if(equal(poly,7),rand(50)+7,poly);\nsides = poly;\nrad = rad-log(poly)/100;\n\na=pow(vol*2,2);\nborder_a=a;\nrad=rad*0.7+a*0.015","init_eqs_eel":"","frame_eqs_eel":"rate = fps/(fps+1/2);\n\nang = time*0.5;\nvol = (bass_att+mid_att+treb_att)/6;\nte = vol/fps + te;\nx = x + 0.2*sin(te*1.14);\ny = y + 0.2*sin(te*0.96+2);\n\nbeat = above(vol*1.5,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.4)*rate+1.4);\npoly = if(beat,rand(5)+3,poly);\npoly = if(equal(poly,7),rand(50)+7,poly);\nsides = poly;\nrad = rad-log(poly)/100;\n\na=pow(vol*2,2);\nborder_a=a;\nrad=rad*0.7+a*0.015"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0,"g":0.9,"b":0.8},"init_eqs_str":"a.s=0;a.xp=0;a.yp=0;a.zp=0;a.t1=0;a.x_screen=0;a.y_screen=0;a.advance=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(24.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(47.4*a.s)+Math.cos(27.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.r=1;a.g=1;a.b=1;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;\n\n"},{"baseVals":{"enabled":1,"usedots":1,"r":0.7,"g":0},"init_eqs_str":"a.s=0;a.xp=0;a.yp=0;a.zp=0;a.t1=0;a.x_screen=0;a.y_screen=0;a.advance=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.44*a.s)+Math.sin(14.3*a.s)+Math.sin(12.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.29*a.s)+Math.cos(19.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(6.24*a.s)+Math.cos(37.4*a.s)+Math.cos(29.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.r=1;a.g=1;a.b=1;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.44)+sin(s*14.3)+sin(s*12.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.29)+cos(s*19.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*6.24)+cos(s*37.4)+cos(s*29.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;\n\n"},{"baseVals":{"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\n\nfreq=sin(q7*0.5)*4+4;\n\naflux=sin(n*0.5);\n\nscale=sin(n*freq)*0.3+0.7;\nxp=rand(10)-5;\nxp=xp*0.0008*aflux;\nyp=rand(10)-5;\nyp=yp*0.0008*aflux;\nzp=sample*3-1.5;\n\n//rotate on y\nang=(q7+time*0.01)*0.2;\nxp2=xp*sin(ang) + zp*cos(ang);\nyp2=yp;\nzp2=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x\nang=(q7+time*0.01)*0.3;\nxp3=xp2;\nyp3=yp2*sin(ang) + zp2*cos(ang);\nzp3=yp2*cos(ang) - zp2*sin(ang);\n\n\nxp=xp3;\nyp=yp3;\nzp=zp3;\n\nzp=zp+2.1;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\nr=(q1+q2)*0.5;\ng=(q2+q3)*0.5;\nb=(q3+q1)*0.5;\n\na=aflux*aflux*0.7","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\n\nfreq=sin(q7*0.5)*4+4;\n\naflux=sin(n*0.5);\n\nscale=sin(n*freq)*0.3+0.7;\nxp=rand(10)-5;\nxp=xp*0.0008*aflux;\nyp=rand(10)-5;\nyp=yp*0.0008*aflux;\nzp=sample*3-1.5;\n\n//rotate on y\nang=(q7+time*0.01)*0.2;\nxp2=xp*sin(ang) + zp*cos(ang);\nyp2=yp;\nzp2=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x\nang=(q7+time*0.01)*0.3;\nxp3=xp2;\nyp3=yp2*sin(ang) + zp2*cos(ang);\nzp3=yp2*cos(ang) - zp2*sin(ang);\n\n\nxp=xp3;\nyp=yp3;\nzp=zp3;\n\nzp=zp+2.1;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\nr=(q1+q2)*0.5;\ng=(q2+q3)*0.5;\nb=(q3+q1)*0.5;\n\na=aflux*aflux*0.7"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\n\n\n\nscale=sin(n*freq)*0.3+0.7;\nzp=sin(time);\naflux=sin(zp*3.1415+3.1415);\nxp=sin(n)*0.1*aflux;\nyp=cos(n)*0.1*aflux;\n\n\n//rotate on y\nang=(q7+time*0.01)*0.2;\nxp2=xp*sin(ang) + zp*cos(ang);\nyp2=yp;\nzp2=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x\nang=(q7+time*0.01)*0.3;\nxp3=xp2;\nyp3=yp2*sin(ang) + zp2*cos(ang);\nzp3=yp2*cos(ang) - zp2*sin(ang);\n\n\nxp=xp3;\nyp=yp3;\nzp=zp3;\n\nzp=zp+2.1;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\n\na=aflux","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\n\n\n\nscale=sin(n*freq)*0.3+0.7;\nzp=sin(time);\naflux=sin(zp*3.1415+3.1415);\nxp=sin(n)*0.1*aflux;\nyp=cos(n)*0.1*aflux;\n\n\n//rotate on y\nang=(q7+time*0.01)*0.2;\nxp2=xp*sin(ang) + zp*cos(ang);\nyp2=yp;\nzp2=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x\nang=(q7+time*0.01)*0.3;\nxp3=xp2;\nyp3=yp2*sin(ang) + zp2*cos(ang);\nzp3=yp2*cos(ang) - zp2*sin(ang);\n\n\nxp=xp3;\nyp=yp3;\nzp=zp3;\n\nzp=zp+2.1;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\n\na=aflux"}],"init_eqs_str":"a.q1=0;a.dvy=0;a.vx=0;a.vy=0;a.vang=0;a.xv=0;a.dvx=0;a.bb=0;a.q2=0;a.q3=0;a.q30=0;a.yv=0;","frame_eqs_str":"a.q1=.5+.4*Math.sin(.43*a.time+.12*a.bass_att);a.q2=.5+.4*Math.sin(.63*a.time+.14*a.bass_att);a.q3=.5+.4*Math.sin(.83*a.time+.16*a.bass_att);a.ob_b=.01*mod(a.frame,40);a.bb=.016*a.bass_att+.98*a.bb;a.mv_x=30*a.bb;a.mv_dx=a.mv_dx+.1*Math.sin(a.time)+.01*a.mv_x-.3;a.monitor=a.mv_x;a.wave_mystery=.01*Math.floor(rand(150))-.01*Math.floor(rand(150));a.q30=10*a.q3;","pixel_eqs_str":"a.xv=Math.sin(.333*a.time)*a.x*Math.cos(.667*a.time)*a.x;a.yv=Math.cos(.333*a.time)*a.y*Math.sin(.667*a.time)*a.y;a.x=a.xv;a.y=a.yv;a.vang=.0628318*Math.sin(.2*a.time)-1.68;a.vx=(a.x-.5)*Math.cos(a.vang)-(a.y-.5)*Math.sin(a.vang)+.5;a.vy=(a.x-.5)*Math.sin(a.vang)+(a.y-.5)*Math.cos(a.vang)+.5;a.dvx=.01+.01*Math.floor(rand(2));a.dvy=-.01;a.dx=a.dvx*Math.cos(a.vang)-a.dvy*Math.sin(a.vang);a.dy=-a.dvx*Math.sin(a.vang)-a.dvy*Math.cos(a.vang);a.dy=below(a.y,.2)*a.dy+.01*above(a.y,\n.1);a.dx=below(a.x,.2)*a.dx+.01*above(a.x,.1);a.sx+=.075*Math.sin(3*a.x);a.sy+=.075*Math.sin(3.1*a.y);a.cx=.5+.2*Math.sin(.57*a.time);a.cy=.5+.2*Math.cos(.61*a.time);a.rot=a.rot+.01*Math.sin(10*a.rad-1.5*a.time)*a.treb_att-.005*Math.cos(a.time*a.rad);","init_eqs_eel":"","frame_eqs_eel":"q1 = 0.5+0.4*sin(0.43*time+0.12*bass_att);\nq2 = 0.5+0.4*sin(0.63*time+0.14*bass_att);\nq3 = 0.5+0.4*sin(0.83*time+0.16*bass_att);\n\nob_b= frame%40*.01;\nbb= (bass_att*.8)*.02+bb*.98;\nmv_x = bb*30;\nmv_dx = mv_dx+sin(time)*.1+mv_x*.01-.3;\n\nmonitor = mv_x;\n\nwave_mystery = int(rand(150))*0.01 - int(rand(150))*0.01;\nq30=q3*10;","pixel_eqs_eel":"//Have fun with the shaders kids!\n\n//xy transform code (Yes, it is based off of Flexi's from the previous collaboration)\nxv = sin(time*.333)*x*cos(time*.667)*x;\nyv = cos(time*.333)*y*sin(time*.667)*y;\nx = xv; \ny = yv;\n//end x/y transform code\n\nvang = sin(time*.2)*3.14159*.02-1.68;\nvx = (x-.5)*cos(vang) - (y-.5)*sin(vang)+.5;\nvy = (x-.5)*sin(vang) +(y-.5)*cos(vang)+.5;\n\ndvx = .01+int(rand(2))*.01;\ndvy = -.01;\n\ndx = dvx*cos(vang) - dvy*sin(vang);\ndy = -dvx*sin(vang) - dvy*cos(vang);\n\ndy=below(y,.2)*dy+above(y,.1)*.01;\ndx=below(x,.2)*dx+above(x,.1)*.01;\n\nsx=sx+.075*sin(x*3);\nsy=sy+.075*sin(y*3.1);\n\ncx = .5 + 0.2*sin(time*.57);\ncy = .5 + 0.2*cos(time*.61);\n\nrot=rot+.01*sin(rad*10-time*1.5)*treb_att-.005*cos(time*rad);","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = ((texture (sampler_main, (uv_orig + \n    ((uv - uv_orig) * dot (texture (sampler_main, uv).xyz, vec3(0.32, 0.49, 0.29)))\n  )).xyz * 0.99) - 0.002);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  float tmpvar_3;\n  tmpvar_3 = -(q8);\n  float tmpvar_4;\n  tmpvar_4 = (uv.x - 0.5);\n  float tmpvar_5;\n  tmpvar_5 = (uv.y - 0.5);\n  tmpvar_2.x = (((\n    (tmpvar_4 * cos((tmpvar_3 * 0.29)))\n   + \n    (tmpvar_5 * sin((tmpvar_3 * 0.29)))\n  ) * 0.8) + 0.5);\n  tmpvar_2.y = (((\n    (-(tmpvar_4) * sin((tmpvar_3 * 0.29)))\n   + \n    (tmpvar_5 * cos((tmpvar_3 * 0.29)))\n  ) * 0.8) + 0.5);\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\n    (0.5 - uv)\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 0.6);\n  ret_1 = (ret_1 + (texture (sampler_main, tmpvar_2).xyz * 0.4));\n  ret_1 = (ret_1 * 2.0);\n  ret_1 = ((1.0 - (\n    (ret_1 * (1.0 - ret_1))\n   * 4.0)) * 0.6);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{ret=GetPixel(uv);\nfloat2 mo=uv-uv_orig;\nret=GetPixel(uv_orig+mo*lum(ret));\nret=ret*0.99-0.002;\n}","comp_hlsl":"shader_body\n{\n    \n    //rotate texture cords\n    float texRotU2 = (uv[0] - 0.5)*cos(-q8*0.29) + (uv[1] - 0.5)*sin(-q8*0.29);\n    float texRotv2 = -(uv[0] - 0.5)*sin(-q8*0.29) + (uv[1] - 0.5)*cos(-q8*0.29);\n\n\t\n\t    float2 uv2 = float2(texRotU2*0.8 +0.5, texRotv2*0.8 + 0.5);\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo).xyz, \n                0.50 \n              )*0.6;\n    \n    ret += tex2D(sampler_main, uv2).xyz*0.4;\n    ret *= 2.00; //gamma\n    ret = (1 - ret*(1-ret)*4)*0.6; //invert\n}"}