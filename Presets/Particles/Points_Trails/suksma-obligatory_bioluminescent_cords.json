{"version":2,"baseVals":{"rating":5,"gammaadj":2.7,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.611,"zoom":1.031,"dy":-0.018,"warp":0.313,"sx":0.952,"wave_r":0,"wave_g":0,"wave_b":0,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"g":1,"b":1,"a":0,"r2":1,"b2":1,"a2":1},"init_eqs_str":"a.q2=0;a.q7=0;a.time1=0;a.q3=0;a.time2=0;a.q4=0;a.x1=0;a.y1=0;","frame_eqs_str":"a.r=0;a.g=0;a.b=0;a.r2=a.r;a.g2=a.g;a.b2=a.b;a.border_a=0;a.a=.6*a.q2;a.a2=.4*a.q7;a.time1+=a.q3*a.q2*a.bass*.1;a.time2+=a.q3*a.q4*a.treb*.1;a.x1=Math.sin(a.time1);a.y1=Math.cos(a.time2);a.x=.5*a.x1+.5;a.y=.5*a.y1+.5;","init_eqs_eel":"","frame_eqs_eel":"r=0;\ng=0;\nb=0;\n\nr2=r;\ng2=g;\nb2=b;\nborder_a=0;\n\na=.6*q2;\na2=q7*.4;\n\ntime1=time1+q3*q2*bass*.1;\ntime2=time2+q3*q4*treb*.1;\n\nx1=sin(time1);\ny1=cos(time2);\n\nx=x1*.5+.5;\ny=y1*.5+.5;"},{"baseVals":{"sides":100,"rad":0.43865,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r=0;\ng=0;\nb=0;\n\nr2=r;\ng2=g;\nb2=b;\n\na=.2*q7-q6*.01;\na2=a*2;\n\nrad=.2;\ntime1=time1+q3*q2*bass*.1;\ntime2=time2+q3*q4*treb*.1;\n\n\nx1=sin(time1)+sin(time2*treb);\ny1=cos(time2)-sin(time2*mid);\n\nx=x1*.5+.5;\ny=y1*.5+.5;","init_eqs_eel":"","frame_eqs_eel":"r=0;\ng=0;\nb=0;\n\nr2=r;\ng2=g;\nb2=b;\n\na=.2*q7-q6*.01;\na2=a*2;\n\nrad=.2;\ntime1=time1+q3*q2*bass*.1;\ntime2=time2+q3*q4*treb*.1;\n\n\nx1=sin(time1)+sin(time2*treb);\ny1=cos(time2)-sin(time2*mid);\n\nx=x1*.5+.5;\ny=y1*.5+.5;"},{"baseVals":{"additive":1,"thickoutline":1,"rad":0.43606,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rad=q5*.33;\ny=.75;\nx=.2;","init_eqs_eel":"","frame_eqs_eel":"rad=q5*.33;\ny=.75;\nx=.2;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":256,"usedots":1,"thick":1,"smoothing":0.2,"a":0.6},"init_eqs_str":"a.y1=0;a.time1=0;a.sw6=0;a.sw2=0;a.t1=0;a.x1=0;a.sw3=0;a.sw5=0;a.q6=0;a.r1=0;a.t3=0;a.hue=0;a.q4=0;a.time2=0;a.i=0;a.t2=0;a.h=0;a.sw1=0;a.q3=0;a.g1=0;a.sw4=0;a.b1=0;a.mtime=0;a.time1=1E4;a.time2=1E4;a.f2=0;","frame_eqs_str":"a.time1+=a.q3*a.bass*.001*a.q4*sign(a.bass_att-a.treb);a.time2+=a.q3*a.treb*.001*a.q4*sign(a.treb_att-a.bass);a.mtime=a.mtime+.001*a.q6+.001*a.q4;a.t1=a.time1;a.t2=a.time2;a.t3=a.mtime;","point_eqs_str":"a.i=6.28*a.sample;a.x1=Math.sin(a.i+a.t2+1*a.value1*a.q3)-Math.sin(a.i*a.t1);a.y1=Math.cos(a.i+a.t1+1*a.value2*a.q3)+Math.sin(a.i*a.t2);a.x=.5*a.x1+.5;a.y=.5*a.y1+.5;a.mtime+=.0001;a.hue=a.t3*a.sample;a.h=6*(a.hue-Math.floor(a.hue));a.sw1=below(a.h,1);a.sw2=(1-a.sw1)*below(a.h,2);a.sw3=(1-a.sw1)*(1-a.sw2)*below(a.h,3);a.sw4=(1-a.sw1)*(1-a.sw2)*(1-a.sw3)*below(a.h,4);a.sw6=above(a.h,5);a.sw5=(1-a.sw1)*(1-a.sw2)*(1-a.sw3)*(1-a.sw4)*(1-a.sw6);a.r1=a.sw1+a.sw2*(2-a.h)+a.sw5*(a.h-\n4)+a.sw6;a.g1=a.sw1*a.h+a.sw2+a.sw3+a.sw4*(4-a.h);a.b1=a.sw3*(a.h-2)+a.sw4+a.sw5+a.sw6*(6-a.h);a.r=a.r1;a.g=a.g1;a.b=a.b1;","init_eqs_eel":"time1=10000;\ntime2=10000;\nf2=0;","frame_eqs_eel":"time1=time1+q3*bass*.001*q4*sign(bass_att-treb);\ntime2=time2+q3*treb*.001*q4*sign(treb_att-bass);\nmtime=mtime+q6*.001+q4*.001;\n\n\nt1=time1;\nt2=time2;\nt3=mtime;","point_eqs_eel":"i=sample*6.28;\n\nx1=sin(i+t2+value1*1*q3)-sin(i*t1);\ny1=cos(i+t1+value2*1*q3)+sin(i*t2);\n\nx=x1*.5+.5;\ny=y1*.5+.5;\n\nmtime=mtime+.0001;\n\n// This is the version you should use...\n// ----------- start copying -----------\nhue=t3*sample; // change this\nh=6*(hue-int(hue));\nsw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);\nsw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);\nr1=sw1+sw2*(2-h)+sw5*(h-4)+sw6;  // resulting Red value, assign it to q1\ng1=sw1*h+sw2+sw3+sw4*(4-h);      // resulting Green value, assign it to q2\nb1=sw3*(h-2)+sw4+sw5+sw6*(6-h);  // resulting Blue value, assign it to q3\n// ----------- end ----------------\n\n\n\n\nr=r1;\ng=g1;\nb=b1;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.35*(.6*Math.sin(.849*a.time)+.4*Math.sin(1.09*a.time));a.wave_g+=.35*(.6*Math.sin(.711*a.time)+.4*Math.sin(.982*a.time));a.wave_b+=.35*(.6*Math.sin(.737*a.time)+.4*Math.sin(1.012*a.time));a.cy+=.03*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.sx+=.01*(.6*Math.sin(.313*a.time)+.4*Math.sin(.383*a.time));a.sy+=.01*(.6*Math.sin(.367*a.time)+.4*Math.sin(.272*a.time));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.849*time) + 0.40*sin(1.090*time) ); \nwave_g = wave_g + 0.350*( 0.60*sin(0.711*time) + 0.40*sin(0.982*time) ); \nwave_b = wave_b + 0.350*( 0.60*sin(0.737*time) + 0.40*sin(1.012*time) ); \ncy = cy + 0.030*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) ); \nsx = sx + 0.010*( 0.60*sin(0.313*time) + 0.40*sin(0.383*time) ); \nsy = sy + 0.010*( 0.60*sin(0.367*time) + 0.40*sin(0.272*time) );","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_4);\n  tmpvar_5[uint(0)].y = sin(tmpvar_4);\n  tmpvar_5[1u].x = -(sin(tmpvar_4));\n  tmpvar_5[1u].y = cos(tmpvar_4);\n  uv6_2 = (tmpvar_3 * tmpvar_5);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_3)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_6;\n  tmpvar_6 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_7.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_7 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_7, tmpvar_7))\n   * tmpvar_6)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((crisp_1 - \n    (dot (tmpvar_6, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * treb_att))\n  ), pow (hue_shader.xzy, vec3(bass_att))));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"float3 color, mus;\nfloat dx,dy;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\n\nfloat2 uv1 = (uv-.5);\nfloat2 uv6 = uv1;\n\nfloat rota = lum(tex2D (sampler_noise_hq,uv/4))*q31;\n\nuv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));\nuv6 += sin(q32*uv1);\nmus = .2/(sqrt(uv6.x)+.2);\n\nmus *= float3 (1.1,1,.95);\nmus *= .9+.1*tex2D (sampler_noise_hq,uv);\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (0.005,0);\nfloat2 ver = float2 (0,.005);\n\nfloat dx = lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\n\nfloat2 zz = float2 (dx,dy);\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\nfloat3 crisp2 = tex2D(sampler_main,uv);\ncrisp += crisp2/2;\ncrisp *= .67;\ncrisp +=.08 * mus - length(zz)*blur;\n\nfloat3 ret1 = crisp - lum(blur)*.04;\nret = ret1 * .99 -  .04 ;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)*treb_att),pow(hue_shader.xzy,bass_att));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}