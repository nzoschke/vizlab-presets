{"version":2,"baseVals":{"rating":5,"gammaadj":1.998,"echo_zoom":1.421,"wave_mode":1,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"darken_center":1,"wave_a":0.22,"wave_scale":3.436,"wave_smoothing":0.54,"wave_mystery":-0.4,"modwavealphastart":0.28,"modwavealphaend":2,"warpanimspeed":1.348,"warpscale":1.16,"zoom":1.01035,"warp":0.08979,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.6,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.t2=0;","frame_eqs_str":"a.wave_r+=.65*(.6*Math.sin(1.437*a.time)+.4*Math.sin(.97*a.time));a.wave_g+=.65*(.6*Math.sin(1.344*a.time)+.4*Math.sin(.841*a.time));a.wave_b+=.65*(.6*Math.sin(1.251*a.time)+.4*Math.sin(1.055*a.time));a.rot+=.01*(.6*Math.sin(.181*a.time)+.09*Math.sin(-.279*a.time));a.zoom+=.01*(.6*Math.sin(.3131*a.time+2)+.4*Math.sin(-.479*a.time+4));a.decay-=.01*equal(mod(a.frame,6),0);a.t2=6*a.time;a.wave_x=.5+.3*(.6*Math.sin(.374*a.t2)+.4*Math.sin(.294*a.t2));a.wave_y=.5+.3*(.6*Math.sin(.393*\na.t2)+.4*Math.sin(.223*a.t2));","pixel_eqs_str":"a.dx+=2*div(Math.cos(29.37*a.y-1.9*a.time),a.pixelsx);a.dy+=2*div(Math.cos(33.21*a.x-1.7*a.time),a.pixelsy);a.dx+=1.5*div(Math.cos(77.55*a.y-2.1*a.time),a.pixelsx);a.dy+=1.5*div(Math.cos(78.32*a.x-2.4*a.time),a.pixelsy);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.650*( 0.60*sin(1.437*time) + 0.40*sin(0.970*time) );\nwave_g = wave_g + 0.650*( 0.60*sin(1.344*time) + 0.40*sin(0.841*time) );\nwave_b = wave_b + 0.650*( 0.60*sin(1.251*time) + 0.40*sin(1.055*time) );\n//wave_b = wave_b * wave_g;\n//wave_r = wave_r * sqrt(wave_b);\n\n//wave_mystery = time*0.3;\nrot = rot + 0.01*( 0.60*sin(0.181*time) + 0.09*sin(-0.279*time) );\nzoom = zoom + 0.01*( 0.60*sin(0.3131*time+2) + 0.4*sin(-0.479*time+4) );\n//cx = cx + 0.10*( 0.60*sin(0.374*time) + 0.10*sin(0.294*time) );\n//cy = cy + 0.10*( 0.60*sin(0.393*time) + 0.10*sin(0.223*time) );\n//dx = dx + 0.00740*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\n//dy = dy + 0.00740*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\ndecay = decay - 0.01*equal(frame%6,0);\n\n//wave_x = 0.1 + rand(80)*0.01;\n//wave_y = 0.1 + rand(80)*0.01;\nt2 = time*6;\nwave_x = 0.5 + 0.3*( 0.60*sin(0.374*t2) + 0.40*sin(0.294*t2) );\nwave_y = 0.5 + 0.3*( 0.60*sin(0.393*t2) + 0.40*sin(0.223*t2) );","pixel_eqs_eel":"//dx = 0;\n//dy = 0;\ndx = dx + cos(y*29.37 - time*1.9) * 1.0/pixelsx * 2;\ndy = dy + cos(x*33.21 - time*1.7) * 1.0/pixelsy * 2;\ndx = dx + cos(y*77.55 - time*2.1) * 1.0/pixelsx * 1.5;\ndy = dy + cos(x*78.32 - time*2.4) * 1.0/pixelsy * 1.5;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (max (max (\n    max (max (max (texture (sampler_fw_main, uv_orig).xyz, texture (sampler_fw_main, mix (uv_orig, uv, vec2(0.2, 0.2))).xyz), texture (sampler_fw_main, mix (uv_orig, uv, vec2(0.4, 0.4))).xyz), texture (sampler_fw_main, mix (uv_orig, uv, vec2(0.6, 0.6))).xyz)\n  , texture (sampler_fw_main, \n    mix (uv_orig, uv, vec2(0.8, 0.8))\n  ).xyz), texture (sampler_fw_main, uv).xyz) - 0.016);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = (tmpvar_5 * 2.5);\n  uv2_3.y = (tmpvar_6.y + (0.25 * time));\n  uv2_3.x = (tmpvar_7 + (time / 32.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (tmpvar_5 * 2.5);\n  uv3_2.x = tmpvar_8.x;\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\n  crisp_1 = ((texture (sampler_main, uv2_3).xyz + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.5 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (200.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n/*\n    float2 dxy = 0;\n\n    float f = 1.12;\n\n    dxy.x += cos(uv_orig.y*138*f - time);\n    dxy.y += cos(uv_orig.x*138*f - time);\n    dxy.x += cos(uv_orig.y*368*f - time*5);\n    dxy.y += cos(uv_orig.x*368*f - time*5);\n    dxy.y += 0.15;\n    float2 uv2 = uv + dxy*texsize.zw;\n*/\n    float2 uv2 = uv;\n\n    ret = tex2D(sampler_fw_main, uv_orig).xyz;\n    ret = max(ret, tex2D( sampler_fw_main, lerp(uv_orig, uv, 0.2) ).xyz);\n    ret = max(ret, tex2D( sampler_fw_main, lerp(uv_orig, uv, 0.4) ).xyz);\n    ret = max(ret, tex2D( sampler_fw_main, lerp(uv_orig, uv, 0.6) ).xyz);\n    ret = max(ret, tex2D( sampler_fw_main, lerp(uv_orig, uv, 0.8) ).xyz);\n    ret = max(ret, tex2D( sampler_fw_main, uv                     ).xyz);\n\n\n    ret -= 0.016;\n    \n\n    //ret = lerp(ret, GetBlur1(uv2), 0.01);\n\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\n//float ang1 = atan2(uv1.y, uv1.x);\n//float rad1 = log(length(uv1)-0.1);\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1*2.5);\nuv2.y = uv2.y  +0.25*time;\n//uv2.x = uv2.x  +.0*time;\nuv2.x = uv2.x + time/32;\n\nfloat2 uv3 = float2 (ang/3.14, rad1*2.5);\nuv3.y = uv3.y  +0.08*time ;\n//uv3.x = uv3.x  + time/32;\n\nfloat3 crisp = 1*GetPixel(uv2) + GetPixel(uv3);\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3.5*crisp * pow(rad,1);\n\nfloat mask = saturate(1-200*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(uv);\n\n}"}