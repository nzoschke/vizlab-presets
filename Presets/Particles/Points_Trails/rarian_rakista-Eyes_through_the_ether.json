{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"decay":1,"echo_zoom":1.061,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.312,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":0.01,"zoom":1.00183,"dx":1,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71},"shapes":[{"baseVals":{"thickoutline":1,"x":0.8,"rad":6.65013,"ang":3.64425,"tex_ang":3.14159,"tex_zoom":0.27429,"r":0.5,"g":0.5,"b":1,"a":0,"g2":0,"border_g":0,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;","frame_eqs_str":"border_a=treb;\nrad=bass;","init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;","frame_eqs_eel":"border_a=treb;\nrad=bass;"},{"baseVals":{"sides":3,"thickoutline":1,"x":0.37,"y":0.49,"rad":0.75,"ang":3.64425,"tex_zoom":2.21671,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_str":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;\nte = 1;\npoly = 4;","frame_eqs_str":"\nrate = fps/(fps+1/2);\nbeat = above(bass,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.5)*rate+1.5);\nran = rand(8)+4;\npoly = if(beat,if(equal(ran,poly),poly+1,ran),poly);\n//poly = if(above(poly,8),4,poly);\nsides = poly;\n\nrate2 = fps/(fps+10);\nout = (1-beat)*rate2*out + beat;\nborder_a = out;\nte = bass/fps/2 + te;\nx=sin(time*0.23)*0.15 + 0.5;\ny=cos(time*0.19)*0.15 + 0.5;\nang = 3*sin(-te*0.67) + 3*cos(te*0.4);\nrad = rad * (0.9 + 0.2*t2) - 0.1*sin(te*1.51);;\nr = min(1,max(0,r + 0.3*sin(time*0.427 + 1)));\ng = min(1,max(0,g + 0.3*sin(time*0.401 + 2)));\nb = min(1,max(0,b + 0.3*sin(time*0.452 + 4)));\nr2 = min(1,max(0,r2 + 0.3*sin(time*0.417 + 3)));\ng2 = min(1,max(0,g2 + 0.3*sin(time*0.457 + 5)));\nb2 = min(1,max(0,b2 + 0.3*sin(time*0.434 + 6)));","init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;\nte = 1;\npoly = 4;","frame_eqs_eel":"\nrate = fps/(fps+1/2);\nbeat = above(bass,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.5)*rate+1.5);\nran = rand(8)+4;\npoly = if(beat,if(equal(ran,poly),poly+1,ran),poly);\n//poly = if(above(poly,8),4,poly);\nsides = poly;\n\nrate2 = fps/(fps+10);\nout = (1-beat)*rate2*out + beat;\nborder_a = out;\nte = bass/fps/2 + te;\nx=sin(time*0.23)*0.15 + 0.5;\ny=cos(time*0.19)*0.15 + 0.5;\nang = 3*sin(-te*0.67) + 3*cos(te*0.4);\nrad = rad * (0.9 + 0.2*t2) - 0.1*sin(te*1.51);;\nr = min(1,max(0,r + 0.3*sin(time*0.427 + 1)));\ng = min(1,max(0,g + 0.3*sin(time*0.401 + 2)));\nb = min(1,max(0,b + 0.3*sin(time*0.452 + 4)));\nr2 = min(1,max(0,r2 + 0.3*sin(time*0.417 + 3)));\ng2 = min(1,max(0,g2 + 0.3*sin(time*0.457 + 5)));\nb2 = min(1,max(0,b2 + 0.3*sin(time*0.434 + 6)));"},{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"textured":1,"rad":0.85357,"tex_zoom":1.22019,"r":0.98,"b":0.89,"a":0.02,"r2":0.92,"b2":1,"a2":0.05,"border_b":0,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;a.t1=.01*rand(100);a.t2=.01*rand(100);a.te=1;a.poly=5;","frame_eqs_str":"a.ang=.05*Math.sin(.4*a.time)*(.5*Math.sin(.4*a.time)+.5);a.r=a.q1;a.g=a.q2;a.b=a.q3;","init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;\nte = 1;\npoly = 5;","frame_eqs_eel":"ang=sin(time*0.4)*0.05 * (sin(time*0.4)*0.5+0.5);\nr=q1;\ng=q2;\nb=q3;"},{"baseVals":{"sides":3,"rad":0.26515,"g":1,"r2":1,"g2":0,"border_r":0,"border_g":0,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rate = fps/(fps+1/2);\n\nang = time*0.5;\nvol = (bass_att+mid_att+treb_att)/6;\nte = vol/fps + te;\nx = x + 0.2*sin(te*1.14);\ny = y + 0.2*sin(te*0.96+2);\n\nbeat = above(vol*1.5,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.4)*rate+1.4);\npoly = if(beat,rand(5)+3,poly);\npoly = if(equal(poly,7),rand(50)+7,poly);\nsides = poly;\nrad = rad-log(poly)/100;\n\na=pow(vol*2,2);\nborder_a=a;\nrad=rad*0.7+a*0.015","init_eqs_eel":"","frame_eqs_eel":"rate = fps/(fps+1/2);\n\nang = time*0.5;\nvol = (bass_att+mid_att+treb_att)/6;\nte = vol/fps + te;\nx = x + 0.2*sin(te*1.14);\ny = y + 0.2*sin(te*0.96+2);\n\nbeat = above(vol*1.5,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.4)*rate+1.4);\npoly = if(beat,rand(5)+3,poly);\npoly = if(equal(poly,7),rand(50)+7,poly);\nsides = poly;\nrad = rad-log(poly)/100;\n\na=pow(vol*2,2);\nborder_a=a;\nrad=rad*0.7+a*0.015"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0,"g":0.9,"b":0.8},"init_eqs_str":"a.s=0;a.xp=0;a.yp=0;a.zp=0;a.t1=0;a.x_screen=0;a.y_screen=0;a.advance=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(24.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(47.4*a.s)+Math.cos(27.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.r=1;a.g=1;a.b=1;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;\n\n"},{"baseVals":{"enabled":1,"usedots":1,"r":0.7,"g":0},"init_eqs_str":"a.s=0;a.xp=0;a.yp=0;a.zp=0;a.t1=0;a.x_screen=0;a.y_screen=0;a.advance=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.44*a.s)+Math.sin(14.3*a.s)+Math.sin(12.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.29*a.s)+Math.cos(19.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(6.24*a.s)+Math.cos(37.4*a.s)+Math.cos(29.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.r=1;a.g=1;a.b=1;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.44)+sin(s*14.3)+sin(s*12.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.29)+cos(s*19.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*6.24)+cos(s*37.4)+cos(s*29.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;\n\n"},{"baseVals":{"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\n\nfreq=sin(q7*0.5)*4+4;\n\naflux=sin(n*0.5);\n\nscale=sin(n*freq)*0.3+0.7;\nxp=rand(10)-5;\nxp=xp*0.0008*aflux;\nyp=rand(10)-5;\nyp=yp*0.0008*aflux;\nzp=sample*3-1.5;\n\n//rotate on y\nang=(q7+time*0.01)*0.2;\nxp2=xp*sin(ang) + zp*cos(ang);\nyp2=yp;\nzp2=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x\nang=(q7+time*0.01)*0.3;\nxp3=xp2;\nyp3=yp2*sin(ang) + zp2*cos(ang);\nzp3=yp2*cos(ang) - zp2*sin(ang);\n\n\nxp=xp3;\nyp=yp3;\nzp=zp3;\n\nzp=zp+2.1;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\nr=(q1+q2)*0.5;\ng=(q2+q3)*0.5;\nb=(q3+q1)*0.5;\n\na=aflux*aflux*0.7","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\n\nfreq=sin(q7*0.5)*4+4;\n\naflux=sin(n*0.5);\n\nscale=sin(n*freq)*0.3+0.7;\nxp=rand(10)-5;\nxp=xp*0.0008*aflux;\nyp=rand(10)-5;\nyp=yp*0.0008*aflux;\nzp=sample*3-1.5;\n\n//rotate on y\nang=(q7+time*0.01)*0.2;\nxp2=xp*sin(ang) + zp*cos(ang);\nyp2=yp;\nzp2=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x\nang=(q7+time*0.01)*0.3;\nxp3=xp2;\nyp3=yp2*sin(ang) + zp2*cos(ang);\nzp3=yp2*cos(ang) - zp2*sin(ang);\n\n\nxp=xp3;\nyp=yp3;\nzp=zp3;\n\nzp=zp+2.1;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\nr=(q1+q2)*0.5;\ng=(q2+q3)*0.5;\nb=(q3+q1)*0.5;\n\na=aflux*aflux*0.7"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\n\n\n\nscale=sin(n*freq)*0.3+0.7;\nzp=sin(time);\naflux=sin(zp*3.1415+3.1415);\nxp=sin(n)*0.1*aflux;\nyp=cos(n)*0.1*aflux;\n\n\n//rotate on y\nang=(q7+time*0.01)*0.2;\nxp2=xp*sin(ang) + zp*cos(ang);\nyp2=yp;\nzp2=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x\nang=(q7+time*0.01)*0.3;\nxp3=xp2;\nyp3=yp2*sin(ang) + zp2*cos(ang);\nzp3=yp2*cos(ang) - zp2*sin(ang);\n\n\nxp=xp3;\nyp=yp3;\nzp=zp3;\n\nzp=zp+2.1;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\n\na=aflux","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\n\n\n\nscale=sin(n*freq)*0.3+0.7;\nzp=sin(time);\naflux=sin(zp*3.1415+3.1415);\nxp=sin(n)*0.1*aflux;\nyp=cos(n)*0.1*aflux;\n\n\n//rotate on y\nang=(q7+time*0.01)*0.2;\nxp2=xp*sin(ang) + zp*cos(ang);\nyp2=yp;\nzp2=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x\nang=(q7+time*0.01)*0.3;\nxp3=xp2;\nyp3=yp2*sin(ang) + zp2*cos(ang);\nzp3=yp2*cos(ang) - zp2*sin(ang);\n\n\nxp=xp3;\nyp=yp3;\nzp=zp3;\n\nzp=zp+2.1;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\n\na=aflux"}],"init_eqs_str":"a.rad=0;a.ready=0;a.index2=0;a.index=0;a.q22=0;a.q21=0;a.movex=0;a.q1=0;a.dec_med=0;a.rott=0;a.ly=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q11=0;a.q10=0;a.q4=0;a.is_beat2=0;a.alt=0;a.q26=0;a.p2=0;a.avg=0;a.q19=0;a.beat=0;a.p1=0;a.lx=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q28=0;a.q30=0;a.q20=0;a.step=0;a.shift=0;a.step=0;","frame_eqs_str":"a.dec_med=pow(.8,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.4+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,4);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass_att+\na.mid_att+a.treb_att;a.ready=a.is_beat*bnot(a.ready)+bnot(a.is_beat2)*a.ready;a.is_beat2=a.ready*above(a.time,a.t0+.2);a.q19=a.is_beat2;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.14159265359*a.p2,2);a.q27=a.index+1;a.q28=a.index2+1;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.movex+=div(.06,a.fps);a.q30=a.movex;a.alt=a.alt*(1-a.dec_med)+a.q26*a.dec_med;a.q26-=a.alt;a.step=a.step+Math.max(a.q26,0)+a.q24-\nMath.floor(a.step);a.q30=a.step;a.q30=a.movex;a.lx+=div(.03,a.fps);a.ly+=div(.3,a.fps)*a.q2;a.q10=a.lx;a.q11=0;a.zoom=1+0*a.rad;a.dx=0;a.dy=0;a.rot=.1*a.q1;","pixel_eqs_str":"","init_eqs_eel":"shift = 0;\nstep = 0;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .4+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %4;\nindex2 = (index2 + is_beat*bnot(index))%4;\n\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att;\n\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\nis_beat2 = ready * above (time, t0+.2);\nq19 = is_beat2;\n\n//k1 =  is_beat*bnot(index)*bnot(index2);\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.14159265359/2;\n\nq27 = index+1;\nq28 = index2+1;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nmovex = movex +.002*30/fps;\nq30 = movex;\n\nalt = alt * (1-dec_med) + q26*dec_med;\nq26 = q26 - alt;\nstep = step + 1*max(q26,0) + q24 -int(step);\nq30 = step;\nq30 = movex;\n\nlx = lx + .001*30/fps;\nly = ly + .01*30/fps*q2;\nq10 = lx;\nq11 = 0;\n\n\nzoom = (1.0  + .0*rad);\ndx = .0;\ndy = .00;\nrot = .1*q1;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = ret_1;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = max (tmpvar_3, texture (sampler_main, (uv + (tmpvar_2 * 2.3)))).xyz;\n  ret_1 = (max (tmpvar_4, texture (sampler_main, (uv - \n    (tmpvar_2 * 2.3)\n  ))).xyz * 0.97);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  float tmpvar_3;\n  tmpvar_3 = -(q8);\n  float tmpvar_4;\n  tmpvar_4 = (uv.x - 0.5);\n  float tmpvar_5;\n  tmpvar_5 = (uv.y - 0.5);\n  tmpvar_2.x = (((\n    (tmpvar_4 * cos((tmpvar_3 * 0.29)))\n   + \n    (tmpvar_5 * sin((tmpvar_3 * 0.29)))\n  ) * 0.8) + 0.5);\n  tmpvar_2.y = (((\n    (-(tmpvar_4) * sin((tmpvar_3 * 0.29)))\n   + \n    (tmpvar_5 * cos((tmpvar_3 * 0.29)))\n  ) * 0.8) + 0.5);\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\n    (0.5 - uv)\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 0.8);\n  ret_1 = (ret_1 + (texture (sampler_main, (tmpvar_2 * q9)).xyz * 0.2));\n  ret_1 = (1.0 - ((ret_1 * \n    (1.0 - ret_1)\n  ) * 4.0));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // this vector points exactly one pixel, in the direction of motion\n    float2 v = normalize(uv-uv_orig)*texsize.zw;\n\n    float3 s;\n    ret = max(ret, tex2D(sampler_main, uv+v*2.3));\n    ret = max(ret, tex2D(sampler_main, uv-v*2.3));\n\n    // darken over time\n    ret *= 0.97;\n\n    // add noise\n    //float2 uv_noise = uv*texsize_noise_lq.zw*texsize.xy + rand_frame.xy;\n    //ret += (tex2D(sampler_noise_lq, uv_noise)*2-1)*0.02;\n}","comp_hlsl":"shader_body\n{\n    \n    //rotate texture cords\n    float texRotU2 = (uv[0] - 0.5)*cos(-q8*0.29) + (uv[1] - 0.5)*sin(-q8*0.29);\n    float texRotv2 = -(uv[0] - 0.5)*sin(-q8*0.29) + (uv[1] - 0.5)*cos(-q8*0.29);\n\n\t\n\t    float2 uv2 = float2(texRotU2*0.8 +0.5, texRotv2*0.8 + 0.5);\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo).xyz, \n                0.50 \n              )*0.8;\n    \n    ret += tex2D(sampler_main, uv2*q9).xyz*0.2;\n    ret *= 1.00; //gamma\n    ret = 1 - ret*(1 - ret)*4; //invert\n}"}