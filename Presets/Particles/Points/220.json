{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1.817,"echo_alpha":1,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.312,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.037,"warpscale":0.015,"fshader":1,"warp":0.033,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71},"shapes":[{"baseVals":{"thickoutline":1,"x":0.8,"rad":6.65013,"ang":3.64425,"tex_ang":3.14159,"tex_zoom":0.27429,"r":0.5,"g":0.5,"b":1,"a":0,"g2":0,"border_g":0,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;","frame_eqs_str":"border_a=treb;\nrad=bass;","init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;","frame_eqs_eel":"border_a=treb;\nrad=bass;"},{"baseVals":{"sides":3,"thickoutline":1,"x":0.37,"y":0.49,"rad":0.75,"ang":3.64425,"tex_zoom":2.21671,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_str":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;\nte = 1;\npoly = 4;","frame_eqs_str":"\nrate = fps/(fps+1/2);\nbeat = above(bass,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.5)*rate+1.5);\nran = rand(8)+4;\npoly = if(beat,if(equal(ran,poly),poly+1,ran),poly);\n//poly = if(above(poly,8),4,poly);\nsides = poly;\n\nrate2 = fps/(fps+10);\nout = (1-beat)*rate2*out + beat;\nborder_a = out;\nte = bass/fps/2 + te;\nx=sin(time*0.23)*0.15 + 0.5;\ny=cos(time*0.19)*0.15 + 0.5;\nang = 3*sin(-te*0.67) + 3*cos(te*0.4);\nrad = rad * (0.9 + 0.2*t2) - 0.1*sin(te*1.51);;\nr = min(1,max(0,r + 0.3*sin(time*0.427 + 1)));\ng = min(1,max(0,g + 0.3*sin(time*0.401 + 2)));\nb = min(1,max(0,b + 0.3*sin(time*0.452 + 4)));\nr2 = min(1,max(0,r2 + 0.3*sin(time*0.417 + 3)));\ng2 = min(1,max(0,g2 + 0.3*sin(time*0.457 + 5)));\nb2 = min(1,max(0,b2 + 0.3*sin(time*0.434 + 6)));","init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;\nte = 1;\npoly = 4;","frame_eqs_eel":"\nrate = fps/(fps+1/2);\nbeat = above(bass,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.5)*rate+1.5);\nran = rand(8)+4;\npoly = if(beat,if(equal(ran,poly),poly+1,ran),poly);\n//poly = if(above(poly,8),4,poly);\nsides = poly;\n\nrate2 = fps/(fps+10);\nout = (1-beat)*rate2*out + beat;\nborder_a = out;\nte = bass/fps/2 + te;\nx=sin(time*0.23)*0.15 + 0.5;\ny=cos(time*0.19)*0.15 + 0.5;\nang = 3*sin(-te*0.67) + 3*cos(te*0.4);\nrad = rad * (0.9 + 0.2*t2) - 0.1*sin(te*1.51);;\nr = min(1,max(0,r + 0.3*sin(time*0.427 + 1)));\ng = min(1,max(0,g + 0.3*sin(time*0.401 + 2)));\nb = min(1,max(0,b + 0.3*sin(time*0.452 + 4)));\nr2 = min(1,max(0,r2 + 0.3*sin(time*0.417 + 3)));\ng2 = min(1,max(0,g2 + 0.3*sin(time*0.457 + 5)));\nb2 = min(1,max(0,b2 + 0.3*sin(time*0.434 + 6)));"},{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"textured":1,"rad":0.85357,"tex_zoom":1.22019,"r":0.98,"b":0.89,"a":0.02,"r2":0.92,"b2":1,"a2":0.05,"border_b":0,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;a.t1=.01*rand(100);a.t2=.01*rand(100);a.te=1;a.poly=5;","frame_eqs_str":"a.ang=.05*Math.sin(.4*a.time)*(.5*Math.sin(.4*a.time)+.5);a.r=a.q1;a.g=a.q2;a.b=a.q3;","init_eqs_eel":"t1 = rand(100)*0.01;\nt2 = rand(100)*0.01;\nte = 1;\npoly = 5;","frame_eqs_eel":"ang=sin(time*0.4)*0.05 * (sin(time*0.4)*0.5+0.5);\nr=q1;\ng=q2;\nb=q3;"},{"baseVals":{"sides":3,"rad":0.26515,"g":1,"r2":1,"g2":0,"border_r":0,"border_g":0,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rate = fps/(fps+1/2);\n\nang = time*0.5;\nvol = (bass_att+mid_att+treb_att)/6;\nte = vol/fps + te;\nx = x + 0.2*sin(te*1.14);\ny = y + 0.2*sin(te*0.96+2);\n\nbeat = above(vol*1.5,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.4)*rate+1.4);\npoly = if(beat,rand(5)+3,poly);\npoly = if(equal(poly,7),rand(50)+7,poly);\nsides = poly;\nrad = rad-log(poly)/100;\n\na=pow(vol*2,2);\nborder_a=a;\nrad=rad*0.7+a*0.015","init_eqs_eel":"","frame_eqs_eel":"rate = fps/(fps+1/2);\n\nang = time*0.5;\nvol = (bass_att+mid_att+treb_att)/6;\nte = vol/fps + te;\nx = x + 0.2*sin(te*1.14);\ny = y + 0.2*sin(te*0.96+2);\n\nbeat = above(vol*1.5,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.4)*rate+1.4);\npoly = if(beat,rand(5)+3,poly);\npoly = if(equal(poly,7),rand(50)+7,poly);\nsides = poly;\nrad = rad-log(poly)/100;\n\na=pow(vol*2,2);\nborder_a=a;\nrad=rad*0.7+a*0.015"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0,"g":0.9,"b":0.8},"init_eqs_str":"a.s=0;a.xp=0;a.yp=0;a.zp=0;a.t1=0;a.x_screen=0;a.y_screen=0;a.advance=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(24.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(47.4*a.s)+Math.cos(27.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.r=1;a.g=1;a.b=1;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;\n\n"},{"baseVals":{"enabled":1,"usedots":1,"r":0.7,"g":0},"init_eqs_str":"a.s=0;a.xp=0;a.yp=0;a.zp=0;a.t1=0;a.x_screen=0;a.y_screen=0;a.advance=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.44*a.s)+Math.sin(14.3*a.s)+Math.sin(12.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.29*a.s)+Math.cos(19.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(6.24*a.s)+Math.cos(37.4*a.s)+Math.cos(29.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.r=1;a.g=1;a.b=1;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.44)+sin(s*14.3)+sin(s*12.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.29)+cos(s*19.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*6.24)+cos(s*37.4)+cos(s*29.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;\n\n"},{"baseVals":{"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\n\nfreq=sin(q7*0.5)*4+4;\n\naflux=sin(n*0.5);\n\nscale=sin(n*freq)*0.3+0.7;\nxp=rand(10)-5;\nxp=xp*0.0008*aflux;\nyp=rand(10)-5;\nyp=yp*0.0008*aflux;\nzp=sample*3-1.5;\n\n//rotate on y\nang=(q7+time*0.01)*0.2;\nxp2=xp*sin(ang) + zp*cos(ang);\nyp2=yp;\nzp2=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x\nang=(q7+time*0.01)*0.3;\nxp3=xp2;\nyp3=yp2*sin(ang) + zp2*cos(ang);\nzp3=yp2*cos(ang) - zp2*sin(ang);\n\n\nxp=xp3;\nyp=yp3;\nzp=zp3;\n\nzp=zp+2.1;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\nr=(q1+q2)*0.5;\ng=(q2+q3)*0.5;\nb=(q3+q1)*0.5;\n\na=aflux*aflux*0.7","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\n\nfreq=sin(q7*0.5)*4+4;\n\naflux=sin(n*0.5);\n\nscale=sin(n*freq)*0.3+0.7;\nxp=rand(10)-5;\nxp=xp*0.0008*aflux;\nyp=rand(10)-5;\nyp=yp*0.0008*aflux;\nzp=sample*3-1.5;\n\n//rotate on y\nang=(q7+time*0.01)*0.2;\nxp2=xp*sin(ang) + zp*cos(ang);\nyp2=yp;\nzp2=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x\nang=(q7+time*0.01)*0.3;\nxp3=xp2;\nyp3=yp2*sin(ang) + zp2*cos(ang);\nzp3=yp2*cos(ang) - zp2*sin(ang);\n\n\nxp=xp3;\nyp=yp3;\nzp=zp3;\n\nzp=zp+2.1;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\nr=(q1+q2)*0.5;\ng=(q2+q3)*0.5;\nb=(q3+q1)*0.5;\n\na=aflux*aflux*0.7"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\n\n\n\nscale=sin(n*freq)*0.3+0.7;\nzp=sin(time);\naflux=sin(zp*3.1415+3.1415);\nxp=sin(n)*0.1*aflux;\nyp=cos(n)*0.1*aflux;\n\n\n//rotate on y\nang=(q7+time*0.01)*0.2;\nxp2=xp*sin(ang) + zp*cos(ang);\nyp2=yp;\nzp2=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x\nang=(q7+time*0.01)*0.3;\nxp3=xp2;\nyp3=yp2*sin(ang) + zp2*cos(ang);\nzp3=yp2*cos(ang) - zp2*sin(ang);\n\n\nxp=xp3;\nyp=yp3;\nzp=zp3;\n\nzp=zp+2.1;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\n\na=aflux","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\n\n\n\nscale=sin(n*freq)*0.3+0.7;\nzp=sin(time);\naflux=sin(zp*3.1415+3.1415);\nxp=sin(n)*0.1*aflux;\nyp=cos(n)*0.1*aflux;\n\n\n//rotate on y\nang=(q7+time*0.01)*0.2;\nxp2=xp*sin(ang) + zp*cos(ang);\nyp2=yp;\nzp2=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x\nang=(q7+time*0.01)*0.3;\nxp3=xp2;\nyp3=yp2*sin(ang) + zp2*cos(ang);\nzp3=yp2*cos(ang) - zp2*sin(ang);\n\n\nxp=xp3;\nyp=yp3;\nzp=zp3;\n\nzp=zp+2.1;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\n\na=aflux"}],"init_eqs_str":"a.meanbass_att=0;a.q1=0;a.flip=0;a.lastbeat=0;a.beatrate=0;a.mode=0;a.peakbass_att=0;a.beatcounter=0;a.att=0;a.volume=0;a.beat=0;a.vol=0;a.q7=0;a.mtime=0;a.q8=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;a.warp=0;","frame_eqs_str":"a.volume=.3*(a.bass+a.mid+a.att);a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,a.peakbass_att);a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-\na.beat)*a.peakbass_att*(.95*above(a.time-a.lastbeat,2*a.beatrate)+.995*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatcounter+=a.beat;a.mode=.00001<Math.abs(a.beat*equal(mod(a.beatcounter,2),0))?1-a.mode:a.mode;a.flip=2*a.mode-1;a.monitor=a.flip;a.q8=a.flip;a.q7=0;a.decay=\n.88;a.zoom=1.002;a.vol=.25*(a.bass_att+a.mid_att+a.treb_att);a.vol*=a.vol;a.mtime+=.1*a.vol*a.flip;a.q1=.4*a.mtime;a.warp=.3;","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0;\nwarp=0","frame_eqs_eel":"//krash's beat detection code\nvolume = 0.3*(bass+mid+att);\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatcounter = beatcounter + beat;\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\nflip = 2*mode-1;\nmonitor=flip;\nq8=flip;\nq7=0;\n\ndecay=0.88;\nzoom=1.002;\n\nvol=(bass_att+mid_att+treb_att)*0.25;\nvol=vol*vol;\nmtime=mtime+vol*0.1*flip;\n\nq1=mtime*0.4;\n\nwarp=0.3","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = normalize((uv_orig - 0.5));\n  float tmpvar_3;\n  tmpvar_3 = (time * 7.0);\n  uv_1 = (mix (uv_orig, uv, vec2((\n    clamp ((((bass / bass_att) - 0.9) * 13.0), 0.0, 1.0)\n   * 0.3))) + ((\n    (tmpvar_2 * texsize.zw)\n   * \n    cos(((rad * 170.0) - tmpvar_3))\n  ) * 2.0));\n  uv_1 = (uv_1 + ((\n    (vec2(5.0, -5.0) * texsize.zw)\n   * \n    cos(((ang * 30.0) - tmpvar_3))\n  ) * tmpvar_2.yx));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ((texture (sampler_main, uv_1).xyz - 0.004) * 0.83);\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = tmpvar_5;\n  uv2_3.y = (tmpvar_5 + (0.2 * time));\n  uv2_3.x = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (tmpvar_5 * 1.5);\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = ((texture (sampler_main, uv2_3).xyz + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.5 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (200.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n    float t = saturate((bass/bass_att-0.9)*13);\n    uv = lerp(uv_orig, uv, t*0.3);\n\n    float2 v1 = normalize(uv_orig-0.5);\n    float2 v2 = v1.yx * float2(1,-1);\n    \n    float z = length(texsize.zw)*450;\n\n    uv.xy += v1*texsize.zw * cos(rad*170 - time*7)*2;\n    uv.xy += v2*texsize.zw * cos(ang*30 - time*7)*5;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    \n    \n    // darken (decay) over time\n    ret = (ret - 0.004)*0.83;\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\n//float ang1 = atan2(uv1.y, uv1.x);\n//float rad1 = log(length(uv1)-0.1);\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1);\nuv2.y = uv2.y  +0.2*time;\nuv2.x = uv2.x  +.0*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1*1.5);\nuv3.y = uv3.y  +0.08*time ;\nuv3.x = uv3.x  + time/32;\n\nfloat3 crisp = 1*GetPixel(uv2) + GetPixel(uv3);\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3.5*crisp * pow(rad,1);\n\nfloat mask = saturate(1-200*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(uv);\n\n}"}