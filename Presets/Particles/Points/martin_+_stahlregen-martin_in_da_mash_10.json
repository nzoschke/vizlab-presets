{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.039,"wave_scale":0.372,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.3,"ob_size":0,"ob_r":1,"ob_b":1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":44,"additive":1,"thickoutline":1,"rad":0.12634,"ang":1.5708,"tex_zoom":0.53907,"r":0,"g":0.54,"b":0.89,"a":0.1,"r2":0.84,"g2":0.93,"b2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5 + .5 * sin(time);\ny = .5 + .5 * sin(time);","init_eqs_eel":"","frame_eqs_eel":"x = .5 + .5 * sin(time);\ny = .5 + .5 * sin(time);"},{"baseVals":{"sides":63,"textured":1,"rad":1.99863,"tex_zoom":0.49981,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"k0 = int(100.0*sample);\nk2 = int(100.0*sample+1);\nk1 = equal(k0%2,0);\nk2 = equal(k0%2,1);\n\n\nix = (100*value1)%7-2.5;\niy = (100*value2)%7-2.5;\n\nsp = bass + treb;\nsp = sp /3000;\n\n\ndx = (dx+sp*ix) * .998;\ndy = (dy+sp*iy) * .998 ;\n\n\nox = k1*dx + (1-k1)*ox;\noy = k2*dy + (1-k2)*oy;\n\n\n\n//ox = 0; oy = 0;\n\nx = ox+.5;\ny = oy+.5;\n\nr = 1;\ng = 1;\nb = 1;\na = 1;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"k0 = int(100.0*sample);\nk2 = int(100.0*sample+1);\nk1 = equal(k0%2,0);\nk2 = equal(k0%2,1);\n\n\nix = (100*value1)%7-2.5;\niy = (100*value2)%7-2.5;\n\nsp = bass + treb;\nsp = sp /3000;\n\n\ndx = (dx+sp*ix) * .998;\ndy = (dy+sp*iy) * .998 ;\n\n\nox = k1*dx + (1-k1)*ox;\noy = k2*dy + (1-k2)*oy;\n\n\n\n//ox = 0; oy = 0;\n\nx = ox+.5;\ny = oy+.5;\n\nr = 1;\ng = 1;\nb = 1;\na = 1;"},{"baseVals":{"enabled":1,"usedots":1,"scaling":0.89152,"smoothing":0.82,"a":0.1},"init_eqs_str":"a.xang=0;a.fov=0;a.t1=0;a.yang=0;a.my=0;a.oz=0;a.t_rel=0;a.mz=0;a.oy=0;a.mx=0;a.t2=0;a.zang=0;a.monitor=0;a.t_abs=0;a.ox=0;","frame_eqs_str":"a.t1=2*Math.sin(div(a.time,15));a.t2=2*Math.sin(div(a.time,11));a.monitor=a.time;","point_eqs_str":"a.t_abs=a.sample;a.ox=Math.sin(68*a.t_abs);a.oy=Math.cos(63*a.t_abs);a.oz=Math.sin(125*a.t_abs);a.r=1;a.g=.5;a.b=1;a.t_rel=a.sample-div(a.time,127);a.t_rel-=Math.floor(a.t_rel);a.a=mod(512*a.sample-2*a.time,2);a.a=1;a.xang=0;a.yang=a.t1;a.zang=a.t1;a.fov=.15;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=\na.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.x=div(a.ox*a.fov,a.oz)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;","init_eqs_eel":"","frame_eqs_eel":"t1 = 2*sin(time/15);\nt2 = 2*sin(time/11);\nmonitor = time;","point_eqs_eel":"  \nt_abs = sample ;\n\nox = sin (t_abs*68);\noy = cos (t_abs*63);\noz = sin (t_abs*125);\n\nr = 1;\ng = .5 ;\nb = 1 ;\n\nt_rel = sample - time/127;\nt_rel = t_rel - int(t_rel);\n\na = (512*sample-time*2)%2;\na = 1;\n\nxang = 0 ;\nyang = t1;\nzang = t1;\nfov = 0.15;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\n//oz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"k1 = (sample*512) % 8;\n\nt1 = equal (k1,0)*((t1 * 61 + 27) % 4096) \n   + (1-equal(k1,0))*t1;\n\nexc = 1+rand(5);\nampl = sample*sqrt(t2) * (1+exc);\n\nf1 = q4*ampl* sin(t1*6.28/4096);\nf2 = q4*ampl* cos(t1*6.28/4096);\n\nx = q2 + k1* f1 ;\ny = q3 + k1* f2;\n\na = equal(k1,6) + equal (k1,0);\n\nr = 1;\nb = equal (k1,0);\ng = .6* (1+.6*equal (k1,0))  ;\na = a * q5 * (1-0*t2*t2);\n//a = 0;\n \n ","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"k1 = (sample*512) % 8;\n\nt1 = equal (k1,0)*((t1 * 61 + 27) % 4096) \n   + (1-equal(k1,0))*t1;\n\nexc = 1+rand(5);\nampl = sample*sqrt(t2) * (1+exc);\n\nf1 = q4*ampl* sin(t1*6.28/4096);\nf2 = q4*ampl* cos(t1*6.28/4096);\n\nx = q2 + k1* f1 ;\ny = q3 + k1* f2;\n\na = equal(k1,6) + equal (k1,0);\n\nr = 1;\nb = equal (k1,0);\ng = .6* (1+.6*equal (k1,0))  ;\na = a * q5 * (1-0*t2*t2);\n//a = 0;\n \n "},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"\nt_abs = sample;\nt_rel = sample-time/8;\n\nox =  sin (sample*110) ;\noy =  cos (sample*110);\n\noz = 4+1/(t_rel - int(t_rel));\n\nr = .3;\ng = 0.7;\nb = 1;\n\na = .8;\n\nxang = 0;\nyang = 0;\nzang = 0;\nfov = .5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\nx = ox*fov/oz +0.45;\ny = oy*fov/oz + 0.45;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\nt_abs = sample;\nt_rel = sample-time/8;\n\nox =  sin (sample*110) ;\noy =  cos (sample*110);\n\noz = 4+1/(t_rel - int(t_rel));\n\nr = .3;\ng = 0.7;\nb = 1;\n\na = .8;\n\nxang = 0;\nyang = 0;\nzang = 0;\nfov = .5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\nx = ox*fov/oz +0.45;\ny = oy*fov/oz + 0.45;"}],"init_eqs_str":"a.index2=0;a.index4=0;a.index=0;a.q22=0;a.q21=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.index3=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.t_rel=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.movez=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.p3=0;a.q3=0;a.t0=0;a.q7=0;a.q28=0;a.q30=0;a.q20=0;a.q8=0;a.p3=0;a.t_rel=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.monitor=a.index4;\na.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass_att+a.mid_att+a.treb_att+1;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.rott=div(3.14159265359*a.p3,2);a.q27=8-a.index;a.q28=a.index2+1;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.t_rel+=div(.6,a.fps)*a.q1*a.q1;a.q5=Math.cos(a.t_rel);a.q6=Math.sin(a.t_rel);a.q7=-a.q6;a.q8=a.q5;a.movez+=div(div(.6,\na.fps),(1.4-a.q5)*(1.4-a.q5));a.q30=a.movez;a.zoom=1;","pixel_eqs_str":"a.dx=div(0*a.q28,8);","init_eqs_eel":"p3 = 0;\nt_rel = 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%4;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\nmonitor = index4;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att+1;\n\n//k1 =  is_beat*bnot(index)*bnot(index2);\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\np3 = dec_med * p3+ (1-dec_med)*p2;\nrott = p3 * 3.14159265359/2;\n\n\nq27 = 8-index;\nq28 = index2+1;\n\n//q28 = sin(time)+1;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nt_rel = t_rel + .02*30/fps*q1*q1;\n\nq5 = cos(t_rel);\nq6 = sin(t_rel);\nq7 = -q6;\nq8 = q5;\n\nmovez = movez + .02*30/fps / ((1.4-q5)*(1.4-q5));\nq30 = movez;\n\n\nzoom = 1.0;","pixel_eqs_eel":"dx = 0*q28/8;","warp":" shader_body { \n  vec2 uv6_1;\n  vec2 uv1_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float x_4;\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\n  float tmpvar_5;\n  tmpvar_5 = (12.0 * sqrt((x_4 * x_4)));\n  vec2 tmpvar_6;\n  tmpvar_6 = normalize(tmpvar_3);\n  uv1_2 = (tmpvar_3 + ((-0.01 * \n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_6));\n  uv1_2 = (uv1_2 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 60.0));\n  uv6_1 = (0.4 * cos((uv1_2 * 6.0)));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((0.5 * (\n    ((texture (sampler_main, ((uv1_2 * \n      (0.8 + (0.2 * tmpvar_5))\n    ) + 0.5)).xyz + (vec3((0.01 / \n      (sqrt(dot (uv6_1, uv6_1)) - (0.001 * q27))\n    )) * (0.3 * \n      (1.0 + roam_cos)\n    ).xyz)) * 0.96)\n   - 0.025)) + (0.5 * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_7.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  vec2 uv2_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)] = _qa.xy;\n  tmpvar_5[1u] = _qa.zw;\n  uv_1 = (uv_1 * tmpvar_5);\n  uv2_4.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\n  uv2_4.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((0.25 + q30)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  vec2 tmpvar_6;\n  tmpvar_6 = (((2.0 * uv2_4) * dist_3) + 0.5);\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_6).xyz * scale2) + bias2);\n  xlat_mutableneu = (texture (sampler_main, tmpvar_6).xyz + xlat_mutableblur);\n  xlat_mutableret1 = (xlat_mutableneu * inten_2);\n  uv2_4.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\n  uv2_4.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((0.5 + q30)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  vec2 tmpvar_7;\n  tmpvar_7 = (((2.0 * uv2_4) * dist_3) + 0.5);\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2);\n  xlat_mutableneu = (texture (sampler_main, tmpvar_7).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\n  uv2_4.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((0.75 + q30)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  vec2 tmpvar_8;\n  tmpvar_8 = (((2.0 * uv2_4) * dist_3) + 0.5);\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_8).xyz * scale2) + bias2);\n  xlat_mutableneu = (texture (sampler_main, tmpvar_8).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  uv2_4.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((1.0 + q30)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  vec2 tmpvar_9;\n  tmpvar_9 = (((2.0 * uv2_4) * dist_3) + 0.5);\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2);\n  xlat_mutableneu = (texture (sampler_main, tmpvar_9).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = (xlat_mutableret1 + (vec3(0.0, 0.0, 0.15) * rad));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv-.5);// * aspect.xy;\n\nfloat2 uv6 = uv1;\n\n//##hier unten statt - auch plus\nfloat z = 12*length((abs(uv1.x)-abs(uv1.y)));\n//z = length(uv1)*22;\n\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-2,2);\nuv1 += -.010*lum(GetBlur1(uv))*d;\nuv1 -= rs/60; //auch minus und frac versuchen\n\nuv6 = .4*cos(uv1*6+rand_frame*0);\nmus = .01/(length(uv6)-.001*q27);\nmus *= .3*(1+roam_cos);\n//mus = .2;\n\n\n//probier auch 1*z;\nfloat3 crisp= tex2D(sampler_main,(uv1)*(.8+.2*z)+.5);\n\nfloat3 ret1 = crisp + mus;\n\nq25 = q24+.4; //##hier auf 1 setzen\nq25 = .5;\nret = q25*(ret1*.96-.025) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"float3 ret1, neu, blur;\n\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nfloat dist = 1;\nfloat inten = 1;\nfloat mask = 0;\nret1 = 0;\nint anz = 4;\nfloat n = 1;\nuv = mul(uv,float2x2(_qa));\n//uv +=.3*q1;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    uv2 *= aspect.yx;\n    dist = 1-frac(1.0/anz*n+q30); //evtl sqrt !\n    inten =  pow(dist,.3)*(1-dist)*2;\n    float2 uv3 = 2*uv2*dist+.5;\n    neu =  GetPixel (uv3);\n    blur = GetBlur2 (uv3);\n    neu += blur;\n    ret1 = ret1*.9+neu*inten;\nn++;\n}\n\n\nret = ret1 + .5*float3(0,0,.3)*rad ;\n\n}"}