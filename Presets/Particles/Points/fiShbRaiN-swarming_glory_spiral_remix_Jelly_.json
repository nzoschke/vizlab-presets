{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":0.454,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.99817,"fshader":1,"zoom":0.99951,"warp":0.01,"sx":1.44772,"sy":1.64462,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_g":0.179,"mv_b":0.483,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":6,"additive":1,"textured":1,"rad":1.79142,"tex_zoom":0.56151,"a":0.5,"a2":0.11,"border_a":0},"init_eqs_str":"a.wa=0;","frame_eqs_str":"a.r=Math.abs(Math.sin(a.time));a.g=Math.abs(Math.sin(.3*a.time));a.b=Math.abs(Math.sin(.5*a.time));a.g2=Math.abs(Math.sin(a.time));a.b2=Math.abs(Math.sin(.3*a.time));a.r2=Math.abs(Math.sin(.5*a.time));a.wa=.00001<Math.abs(above(a.treb_att,8))?.75:a.wa-.01;a.wa=.00001<Math.abs(above(a.bass_att,1.2))?.75:a.wa-.01;a.wa=.00001<Math.abs(below(a.wa,0))?0:a.wa;a.a=a.wa;a.tex_zoom+=.00001<Math.abs(above(a.wa,0))?.03*Math.sin(.1*a.time):0;","init_eqs_eel":"","frame_eqs_eel":"r=abs(sin(time));\ng=abs(sin(time*.3));\nb=abs(sin(time*.5));\n\ng2=abs(sin(time));\nb2=abs(sin(time*.3));\nr2=abs(sin(time*.5));\n\nwa=if(above(treb_att,8),.75,wa-.01);\nwa=if(above(bass_att,1.2),.75,wa-.01);\nwa=if(below(wa,0),0,wa);\n\na=wa;\ntex_zoom=tex_zoom+if(above(wa,0),sin(time*.1)*.03,0);"},{"baseVals":{"rad":0.7316,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"a.px=0;a.py=0;a.prad=0;a.pang=0;","frame_eqs_str":"","point_eqs_str":"a.px=.01*mod(999*a.sample,100);a.py=.01*mod(99999*a.sample,100);a.prad=.01*mod(8888*a.sample,100);a.pang=div(7777*a.sample,10);a.px+=Math.cos(a.pang+a.time)*a.prad;a.py+=Math.sin(a.pang+a.time)*a.prad;a.x=a.px;a.y=a.py;a.r=Math.abs(Math.sin(a.time));a.g=Math.abs(Math.sin(.3*a.time));a.b=Math.abs(Math.sin(.5*a.time));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"px=(((sample)*999)%100)*.01;\npy=(((sample)*99999)%100)*.01;\n\nprad=((sample*8888)%100)*.01;\npang=((sample*7777)/10);\n\npx=px+(cos(pang+time)*prad);\npy=py+(sin(pang+time)*prad);\n\nx=px;\ny=py;\n\nr=abs(sin(time));\ng=abs(sin(time*.3));\nb=abs(sin(time*.5));\n"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"a.px=0;a.py=0;a.prad=0;a.pang=0;","frame_eqs_str":"","point_eqs_str":"a.px=.01*mod(777*a.sample,100);a.py=.01*mod(88888*a.sample,100);a.prad=.01*mod(4444*a.sample,100);a.pang=div(66666*a.sample,10);a.px+=Math.cos(a.pang+a.time)*a.prad;a.py+=Math.sin(a.pang+a.time)*a.prad;a.x=a.px;a.y=a.py;a.g=Math.abs(Math.sin(a.time));a.b=Math.abs(Math.sin(.3*a.time));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"px=(((sample)*777)%100)*.01;\npy=(((sample)*88888)%100)*.01;\n\nprad=((sample*4444)%100)*.01;\npang=((sample*66666)/10);\n\npx=px+(cos(pang+time)*prad);\npy=py+(sin(pang+time)*prad);\n\nx=px;\ny=py;\n\ng=abs(sin(time));\nb=abs(sin(time*.3));\n\n"},{"baseVals":{"additive":1,"a":0.08,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.rot=Math.sin(.2*a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"rot=sin(time*.2);","pixel_eqs_eel":"","warp":"","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\n  ), pow (hue_shader.zyx, ret_2)));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader.zyx,ret));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}