{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":4.02628,"zoom":0.9896,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.5,"ob_g":0.5,"ob_b":0.5,"ib_size":0.5,"ib_r":0.5,"ib_g":0.5,"ib_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":5.3898,"ang":0.1885,"tex_ang":0.81681,"tex_zoom":0.19112,"g":0.97,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.tex_ang=1.05+.25*Math.sin(.05*a.time);","init_eqs_eel":"","frame_eqs_eel":"tex_ang=1.05+.25*sin(.05*time);"},{"baseVals":{"enabled":1,"sides":20,"textured":1,"rad":0.16397,"tex_zoom":1.57572,"g":1,"b":1,"a":0,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":18,"textured":1,"num_inst":10,"x":0.463,"rad":1.60089,"tex_zoom":0.67634,"g":1,"b":1,"r2":0.7,"g2":0.8,"b2":0.8,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":16,"num_inst":130,"x":0.503,"rad":0.0376,"tex_zoom":1.11234,"g":0.47,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"a.sample=0;","frame_eqs_str":"a.sample=div(a.instance,a.num_inst);a.x=.1+.8*a.sample;a.y=.5+.4*Math.cos(20*a.sample);a.x+=.02*Math.sin(16*a.sample*a.time);a.r=.6+.4*Math.sin(112*a.sample);a.b=.6+.4*Math.sin(25*a.sample);a.g=.6+.5*Math.sin(85*a.sample);","init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\n\nx= .1+.8*sample;\ny= .5+.4*cos(20*sample);\nx=x+.02*sin(16*sample*time);\n\nr = .6+.4*sin(sample*112);\nb = .6+.4*sin(sample*25);\ng = .6+.5*sin(85*sample);"}],"waves":[{"baseVals":{"spectrum":1,"additive":1,"smoothing":0,"r":0.4,"g":0.4,"b":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"r":0,"g":0,"b":0,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.bass_residual=0;a.old_treb_flop=0;a.bass_flop=0;a.grid=0;a.q6=0;a.q1=0;a.q5=0;a.treb_flop=0;a.bass_thresh=0;a.old_bass_flop=0;a.treb_thresh=0;a.pulse=0;a.bass_changed=0;a.mid_thresh=0;a.q4=0;a.mid_changed=0;a.entropy=0;a.old_mid_flop=0;a.mid_residual=0;a.treb_residual=0;a.chaos=0;a.mid_flop=0;a.q2=0;a.treb_changed=0;a.q3=0;a.q7=0;a.q8=0;a.entropy=2;","frame_eqs_str":"a.decay=.999;a.wrap=Math.sin(10*a.time);a.mv_dx=a.bass;a.ib_a=.005;a.warp=0;a.old_bass_flop=a.bass_flop;a.old_treb_flop=a.treb_flop;a.old_mid_flop=a.mid_flop;a.chaos=.9+.1*Math.sin(a.pulse);a.entropy=.00001<Math.abs(equal(a.pulse,-20))?1+a.bass_flop+a.treb_flop+a.mid_flop+Math.floor(rand(2)):a.entropy;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*((a.bass_thresh-1.3)*a.chaos+1.3);a.bass_flop=Math.abs(a.bass_flop-equal(a.bass_thresh,2));\na.treb_thresh=2*above(a.treb_att,a.treb_thresh)+(1-above(a.treb_att,a.treb_thresh))*((a.treb_thresh-1.3)*a.chaos+1.3);a.treb_flop=Math.abs(a.treb_flop-equal(a.treb_thresh,2));a.mid_thresh=2*above(a.mid_att,a.mid_thresh)+(1-above(a.mid_att,a.mid_thresh))*((a.mid_thresh-1.3)*a.chaos+1.3);a.mid_flop=Math.abs(a.mid_flop-equal(a.mid_thresh,2));a.bass_changed=bnot(equal(a.old_bass_flop,a.bass_flop));a.mid_changed=bnot(equal(a.old_mid_flop,a.mid_flop));a.treb_changed=bnot(equal(a.old_treb_flop,a.treb_flop));\na.bass_residual=a.bass_changed*Math.sin(.1*a.pulse*a.entropy)+bnot(a.bass_changed)*a.bass_residual;a.treb_residual=a.treb_changed*Math.sin(.1*a.pulse*a.entropy)+bnot(a.treb_changed)*a.treb_residual;a.mid_residual=a.mid_changed*Math.sin(.1*a.pulse*a.entropy)+bnot(a.mid_changed)*a.mid_residual;a.pulse=.00001<Math.abs(above(Math.abs(a.pulse),20))?-20:a.pulse+.032*(a.bass_thresh+a.mid_thresh+a.treb_thresh);a.q1=a.mid_residual;a.q2=a.bass_residual;a.q3=a.treb_residual;a.q4=Math.sin(a.pulse);a.q5=Math.cos(div(a.pulse,\n2)+a.q1);a.q6=above(a.q1,0)+above(a.q2,0)+above(a.q3,0)+above(a.q3,0)*a.treb_flop+above(a.q2,0)*a.bass_flop+above(a.q1,0)*a.mid_flop;a.q7=a.entropy;a.q8=Math.sin(a.q6*a.q1+a.q7*a.q2);a.zoom+=.02*a.q8;a.wave_mystery=Math.sin(a.q1+a.q5);a.wave_r+=.5*Math.sin(a.q1+2*a.q2+.14*a.q4);a.wave_b+=.5*Math.sin(a.q2+2*a.q3+.14*a.q4);a.wave_g+=.5*Math.sin(a.q3+2*a.q1+.14*a.q4);a.ob_r=.00001<Math.abs(a.bass_flop)?a.ob_r+.5*Math.sin(a.q1+1.14*a.q3+a.q2):a.wave_b;a.ob_b=.00001<Math.abs(a.treb_flop)?a.ob_b+.5*Math.sin(a.q2+\n1.14*a.q1+a.q3):a.wave_g;a.ob_g=.00001<Math.abs(a.mid_flop)?a.ob_g+.5*Math.sin(a.q3+1.14*a.q2+a.q1):a.wave_r;a.ib_r=.00001<Math.abs(a.bass_flop)?a.ob_b:a.ib_r+.5*Math.cos(a.q5+2.14*a.q1);a.ib_b=.00001<Math.abs(a.treb_flop)?a.ob_g:a.ib_b+.5*Math.cos(a.q5+2.14*a.q2);a.ib_g=.00001<Math.abs(a.mid_flop)?a.ob_r:a.ib_g+.5*Math.cos(a.q5+2.14*a.q3);a.mv_r+=.5*Math.sin(a.q4+1.14*a.q5*a.q1);a.mv_b+=.5*Math.sin(a.q4+1.14*a.q5*a.q2);a.mv_g+=.5*Math.sin(a.q5+1.14*a.q5*a.q3);a.ob_a=.25+.25*Math.sin(a.q2+2.14*a.q3);\na.ib_a=.5+.5*Math.sin(2.14*a.q2+a.q3);a.mv_a+=a.mv_a*Math.sin(2.14*a.q3+a.q2);a.ob_size=.1+.1*Math.sin(3*a.q3+a.q1);a.ib_size=.5*a.ib_size+.25*a.ib_size*Math.sin(3*a.q1+a.q3);a.wave_mode=a.q6+above(a.q4,0)+above(a.q5,0);a.wave_mystery=Math.sin(1.14*a.q3+1.14*a.q1+a.q2);a.mv_l=a.q6*a.q7*a.q2;a.wave_x+=.1*a.q7*a.q4;a.wave_y+=.1*a.q6*a.q5;a.mv_x=a.q6*a.q7;a.mv_y=a.q6*a.q7;a.cx+=1*a.q6*a.q4;a.cy+=.1*a.q7*a.q5;","pixel_eqs_str":"a.grid=mod(a.x*a.q7*a.q6,2)+mod(a.y*a.q7*a.q6,2);a.zoom+=.07*a.q8*Math.cos(3.14*a.rad*a.q3+Math.abs(a.rad-.1*a.q6)*a.q2+3.14*a.rad*Math.sin(a.time*a.q1)+a.q7)*bnot(a.grid);a.rot=.1*equal(a.grid,0)*Math.cos(2.14*a.x*a.q5+a.q3);","init_eqs_eel":"entropy=2;","frame_eqs_eel":"decay=.999;\nwrap=sin(time*10);\nmv_dx=bass;\nib_a=.005;\nwarp=0;\nold_bass_flop=bass_flop;\nold_treb_flop=treb_flop;\nold_mid_flop=mid_flop;\nchaos=.9+.1*sin(pulse);\nentropy=if(equal(pulse,-20),1+bass_flop+treb_flop+mid_flop+int(rand(2)),entropy);\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);\nbass_flop=abs(bass_flop-equal(bass_thresh,2));\ntreb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);\ntreb_flop=abs(treb_flop-equal(treb_thresh,2));\nmid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);\nmid_flop=abs(mid_flop-equal(mid_thresh,2));\nbass_changed=bnot(equal(old_bass_flop,bass_flop));\nmid_changed=bnot(equal(old_mid_flop,mid_flop));\ntreb_changed=bnot(equal(old_treb_flop,treb_flop));\nbass_residual = bass_changed*sin(pulse*.1*entropy) + bnot(bass_changed)*bass_residual;\ntreb_residual = treb_changed*sin(pulse*.1*entropy) + bnot(treb_changed)*treb_residual;\nmid_residual = mid_changed*sin(pulse*.1*entropy) + bnot(mid_changed)*mid_residual;\npulse=if(above(abs(pulse),20),-20,pulse+(bass_thresh+mid_thresh+treb_thresh)*.032);\nq1=mid_residual;\nq2=bass_residual;\nq3=treb_residual;\nq4=sin(pulse);\nq5=cos(pulse/2+q1);\nq6=above(q1,0)+above(q2,0)+above(q3,0)+above(q3,0)*treb_flop+above(q2,0)*bass_flop+above(q1,0)*mid_flop;\nq7=entropy;\nq8=sin(q6*q1+q7*q2);\nzoom=zoom+.02*q8;\nwave_mystery=sin(q1+q5);\nwave_r=wave_r+.5*sin(q1+q2*2+q4*.14);\nwave_b=wave_b+.5*sin(q2+q3*2+q4*.14);\nwave_g=wave_g+.5*sin(q3+q1*2+q4*.14);\nob_r=if(bass_flop,ob_r+.5*sin(q1+q3*1.14+q2),wave_b);\nob_b=if(treb_flop,ob_b+.5*sin(q2+q1*1.14+q3),wave_g);\nob_g=if(mid_flop,ob_g+.5*sin(q3+q2*1.14+q1),wave_r);\nib_r=if(bass_flop,ob_b,ib_r+.5*cos(q5+q1*2.14));\nib_b=if(treb_flop,ob_g,ib_b+.5*cos(q5+q2*2.14));\nib_g=if(mid_flop,ob_r,ib_g+.5*cos(q5+q3*2.14));\nmv_r=mv_r+.5*sin(q4+q5*1.14*q1);\nmv_b=mv_b+.5*sin(q4+q5*1.14*q2);\nmv_g=mv_g+.5*sin(q5+q5*1.14*q3);\nob_a=.25+.25*sin(q2+q3*2.14);\nib_a=.5+.5*sin(q2*2.14+q3);\nmv_a=mv_a+mv_a*sin(q3*2.14+q2);\nob_size=.1+.1*sin(q3*3+q1);\nib_size=ib_size*.5+ib_size*.25*sin(q1*3+q3);\nwave_mode=q6+above(q4,0)+above(q5,0);\nwave_mystery=sin(q3*1.14+q1*1.14+q2);\nmv_l=(q6*q7)*q2;\nwave_x=wave_x+.1*q7*q4;\nwave_y=wave_y+.1*q6*q5;\nmv_x=q6*q7;\nmv_y=q6*q7;\ncx=cx+1*q6*q4;\ncy=cy+.1*q7*q5;","pixel_eqs_eel":"grid=(x*q7*q6)%2+(y*q7*q6)%2;\nzoom=zoom+q8*.07*cos(rad*3.14*q3+abs(rad-.1*q6)*q2+rad*3.14*sin(time*q1)+q7)*bnot(grid);\nrot=.1*equal(grid,0)*cos(x*2.14*q5+q3);","warp":" shader_body { \n  float conway_1;\n  vec3 ret_2;\n  ret_2 = ((texture (sampler_main, uv_orig).xyz * vec3(0.97, 1.0, 0.97)) - vec3(0.03, 0.0, 0.03));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_blur1, uv_orig);\n  ret_2.z = (ret_2.z + ((\n    (tmpvar_3.xyz * scale1)\n   + bias1).z * 0.45));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur3, uv_orig);\n  ret_2.x = (ret_2.x + ((\n    ((tmpvar_3.xyz * scale1) + bias1)\n  .z * 0.05) + (\n    ((tmpvar_4.xyz * scale3) + bias3)\n  .z * 0.05)));\n  ret_2.z = (ret_2.z - ret_2.x);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, uv_orig);\n  ret_2.y = clamp (tmpvar_5.y, 0.0, 1.0);\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).y + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(0.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).y);\n  float tmpvar_6;\n  tmpvar_6 = (((q5 * \n    (1.0 - ((tmpvar_3.xyz * scale1) + bias1).y)\n  ) * (1.0 - \n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\n  .y)) * (1.0 - (\n    (tmpvar_4.xyz * scale3)\n   + bias3).y));\n  conway_1 = (conway_1 - tmpvar_5.x);\n  if ((conway_1 > 0.0)) {\n    float tmpvar_7;\n    tmpvar_7 = clamp (ret_2.y, 0.0, 1.0);\n    if ((tmpvar_7 == 0.0)) {\n      ret_2.y = (floor((tmpvar_6 * 1.8)) * q1);\n    };\n  };\n  ret_2.y = (ret_2.y - ret_2.x);\n  ret_2 = (ret_2 - (1.0 - q2));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","comp":"vec2 xlat_mutablefactorA;\n shader_body { \n  vec2 uv_1;\n  vec2 uvo_2;\n  uv_1 = (0.5 + ((uv - 0.5) * 0.95));\n  uvo_2 = uv_1;\n  uv_1 = (uv_1 - 0.5);\n  vec2 tmpvar_3;\n  tmpvar_3.x = q1;\n  tmpvar_3.y = q2;\n  xlat_mutablefactorA = (uv_1 + tmpvar_3);\n  vec2 tmpvar_4;\n  tmpvar_4 = (xlat_mutablefactorA * vec2(8.0, 8.0));\n  vec2 tmpvar_5;\n  tmpvar_5.x = q3;\n  tmpvar_5.y = q4;\n  xlat_mutablefactorA = (uv_1 + tmpvar_5);\n  vec2 tmpvar_6;\n  tmpvar_6 = (xlat_mutablefactorA * vec2(8.0, 8.0));\n  vec2 tmpvar_7;\n  tmpvar_7.x = q5;\n  tmpvar_7.y = q6;\n  xlat_mutablefactorA = (uv_1 + tmpvar_7);\n  vec2 tmpvar_8;\n  tmpvar_8 = (xlat_mutablefactorA * vec2(8.0, 8.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = q7;\n  tmpvar_9.y = q8;\n  xlat_mutablefactorA = (uv_1 + tmpvar_9);\n  vec2 tmpvar_10;\n  tmpvar_10 = (xlat_mutablefactorA * vec2(8.0, 8.0));\n  vec2 tmpvar_11;\n  tmpvar_11.x = ((tmpvar_4.x * tmpvar_6.x) - (tmpvar_4.y * tmpvar_6.y));\n  tmpvar_11.y = ((tmpvar_4.x * tmpvar_6.y) + (tmpvar_4.y * tmpvar_6.x));\n  vec2 tmpvar_12;\n  tmpvar_12.x = ((tmpvar_8.x * tmpvar_10.x) - (tmpvar_8.y * tmpvar_10.y));\n  tmpvar_12.y = ((tmpvar_8.x * tmpvar_10.y) + (tmpvar_8.y * tmpvar_10.x));\n  xlat_mutablefactorA = tmpvar_11;\n  vec2 tmpvar_13;\n  tmpvar_13.x = ((tmpvar_11.x * tmpvar_12.x) - (tmpvar_11.y * tmpvar_12.y));\n  tmpvar_13.y = ((tmpvar_11.x * tmpvar_12.y) + (tmpvar_11.y * tmpvar_12.x));\n  vec2 tmpvar_14;\n  tmpvar_14.x = tmpvar_13.x;\n  tmpvar_14.y = -(tmpvar_13.y);\n  uv_1 = (vec2(-32.0, 32.0) * (tmpvar_14 / (\n    (tmpvar_13.x * tmpvar_13.x)\n   + \n    (tmpvar_13.y * tmpvar_13.y)\n  )).yx);\n  vec2 tmpvar_15;\n  tmpvar_15 = mix ((0.5 + (\n    (uvo_2 - 0.5)\n   * 2.0)), (uv_1 + 0.5), vec2(0.5, 0.5));\n  vec2 x_16;\n  x_16 = (tmpvar_15 - 0.5);\n  uv_1 = (0.5 + ((1.0 - \n    abs(((fract(\n      (tmpvar_15 * 0.5)\n    ) * 2.0) - 1.0))\n  ) - 0.5));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = mix (((\n    ((texture (sampler_blur3, uvo_2).xyz * scale3) + bias3)\n   * 2.0) - texture (sampler_main, uvo_2).xyz).yyy, mix (mix (vec3(0.8, 0.5, 0.0), vec3(-0.5, -0.5, -0.5), \n    ((((texture (sampler_blur2, uv_1).xyz * scale2) + bias2) * 2.0) - texture (sampler_main, uv_1).xyz)\n  .xxx), vec3(1.0, 1.0, 1.0), vec3((\n    ((((texture (sampler_blur3, uv_1).xyz * scale3) + bias3) * 2.0) - texture (sampler_main, uv_1).xyz)\n  .y * 1.5))), vec3(clamp ((1.6 - \n    (pow (sqrt(dot (x_16, x_16)), 6.0) * 0.004)\n  ), 0.0, 1.0)));\n  ret = tmpvar_17.xyz;\n }","warp_hlsl":"\nshader_body\n{\n\nret.xyz = tex2D(sampler_main, uv_orig).xyz*float3(.97,1,.97) - float3(.03,0,.03);\n\nret.z += GetBlur1(uv_orig).z*.45;\nret.x += GetBlur1(uv_orig).z*.05 + GetBlur3(uv_orig).z*.05;\nret.z -= ret.x;\n\nfloat2 pixelsize = texsize.zw;\nret.y = saturate(tex2D( sampler_pw_main,uv_orig).y);\n\nfloat1 conway = tex2D( sampler_pw_main, uv_orig + float2(-1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,1)*pixelsize).y;\n\nfloat1 test = q5*(1-GetBlur1(uv_orig).y)*(1-GetBlur2(uv_orig).y)*(1-GetBlur3(uv_orig).y);\n\nconway -= tex2D( sampler_pw_main, uv_orig).x;\n\n\nif (conway > 0) {\nif (saturate(ret.y) == 0) {\nret.y = floor(test*1.8)*q1;\n}\n}\n\nret.y -= ret.x;\n\nret.xyz -= 1-q2;\n}","comp_hlsl":"sampler sampler_fc_sunrise;\nfloat2 factorA, factorB, product;\nfloat2 numerator, denominator, fraction;\nshader_body\n{\nuv = 0.5 + (uv-0.5)*0.95;\nfloat2 uvo = uv;\nuv = (uv-0.5);\nfactorA = uv+ float2(q1,q2);\nfactorB = float2(8,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv1 = product;\nfactorA = uv+ float2(q3,q4);\nfactorB = float2(8,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv2 = product;\nfactorA = uv+ float2(q5,q6);\nfactorB = float2(8,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv3 = product;\nfactorA = uv+ float2(q7,q8);\nfactorB = float2(8,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv4 = product;\nfactorA = uv1;\nfactorB = uv2;\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv12 = product;\nfactorA = uv3;\nfactorB = uv4;\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv34 = product;\nfactorA = uv12;\nfactorB = uv34;\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nnumerator = float2(1,0);\ndenominator = product;\nfraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part\n                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part\n                   (denominator.x*denominator.x + denominator.y*denominator.y);\nuv = fraction.yx*float2(-1,1)*32;\nuv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);\nfloat l = length(uv-0.5);\nuv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5); // Eo.S. mirror code with cutted borders\nret = lerp(float3(0.8,0.5,0),-0.5,(GetBlur2(uv)*2-GetPixel(uv)).x);\nret = lerp(ret,1,(GetBlur3(uv)*2-GetPixel(uv)).y*1.5);\nfloat c =saturate(1.6-pow(l,6)*0.004);\nret = lerp((GetBlur3(uvo)*2-GetPixel(uvo)).y,ret,c);\n}"}