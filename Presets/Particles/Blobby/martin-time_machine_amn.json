{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":-0.32,"modwavealphastart":2,"modwavealphaend":1.32,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_x":0,"mv_y":0,"mv_l":0,"mv_r":0,"mv_g":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":30,"num_inst":141,"x":0.94,"rad":0.17914,"tex_zoom":1.14941,"g":0.66,"b":1,"g2":0.01,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"a.my_z=0;a.d=0;a.y3=0;a.z2=0;a.y1=0;a.z=0;a.w=0;a.s=0;a.w2=0;a.x1=0;a.zoom=0;a.p=0;a.q1=0;a.r1=0;a.z3=0;a.w3=0;a.my_x=0;a.x3=0;a.my_y=0;a.t=0;a.w1=0;a.x2=0;a.l=0;a.y2=0;a.q2=0;a.z1=0;a.q3=0;a.sample=0;","frame_eqs_str":"a.sample=div(a.instance,a.num_inst);a.s=a.sample;a.t=a.time;a.r1=4*a.rad;a.x1=a.r1*Math.sin(30*a.sample+3*a.t);a.y1=a.r1*Math.cos(30*a.sample+2*a.t);a.x2=a.y1-a.r1*Math.sin(30*a.sample+3*a.t);a.y2=a.x1+a.r1*Math.cos(30*a.sample+2*a.t);a.x3=a.x2+a.r1*Math.sin(30*a.sample+3*a.t);a.y3=a.y2+a.r1*Math.cos(30*a.sample+2*a.t);a.x=.00001<Math.abs(above(a.sample,.33))?.00001<Math.abs(above(a.sample,.66))?a.x3:a.x2:a.x1;a.y=.00001<Math.abs(above(a.sample,.33))?.00001<Math.abs(above(a.sample,\n.66))?a.y3:a.y2:a.y1;a.rad*=Math.sin(220*a.s);a.a=Math.sin(113*a.sample);a.a2=a.a;a.my_x=a.x;a.my_y=a.y;a.my_z=a.z;a.r=a.a;a.d=.4;a.zoom=.4;a.w3=a.q3;a.w2=a.q2;a.w1=a.q1;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*a.my_y;a.z1=a.my_z;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*a.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*a.x3+\na.y3*a.y3);a.w=Math.atan2(a.x3,a.y3);a.p=Math.tan(Math.asin(1)+Math.atan2(a.d+a.z3,a.l));a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));a.rad*=a.l;a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+a.my_x;a.y=.5+a.my_y;","init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\ns=sample;\nt=time;\nr1=4*rad;\n\nx1= r1*sin(30*sample+3*t);\ny1= r1*cos(30*sample+2*t);\n\nx2= y1- r1*sin(30*sample+3*t);\ny2= x1+ r1*cos(30*sample+2*t);\n\nx3= x2+ r1*sin(30*sample+3*t);\ny3= y2+ r1*cos(30*sample+2*t);\n\n\nx=if(above(sample,.33), if(above(sample,.66),x3,x2),  x1);\ny=if(above(sample,.33), if(above(sample,.66),y3,y2),  y1);\n\nrad= rad* sin(220*s);\na=sin(113*sample);\na2=a;\nmy_x = x;\nmy_y = y;\nmy_z = z;\n\nr=a;\n\n/////// rotations... by flexi\n\nd = .4; //// distance\nzoom = .4;\n\nw3 = q3;\nw2 = q2;\nw1 = q1;\n\nx1 = cos(w1)*my_x + sin(w1)*my_y;\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\nz1 = my_z;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\n\n\n// perspective calculation\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\np = tan(asin(1) + atan2(d+z3,l));\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\n\nrad= rad* l;\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x;\ny = 0.5 + my_y;\n"},{"baseVals":{"enabled":1,"sides":30,"num_inst":108,"rad":0.18532,"r":0,"g":0.4,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"a.my_z=0;a.d=0;a.y3=0;a.z2=0;a.y1=0;a.z=0;a.w=0;a.s=0;a.w2=0;a.x1=0;a.zoom=0;a.p=0;a.q1=0;a.r1=0;a.z3=0;a.w3=0;a.my_x=0;a.x3=0;a.my_y=0;a.t=0;a.w1=0;a.x2=0;a.l=0;a.y2=0;a.q2=0;a.z1=0;a.q3=0;a.sample=0;","frame_eqs_str":"a.sample=div(a.instance,a.num_inst);a.s=a.sample;a.t=a.time;a.r1=4*a.rad;a.x1=a.r1*Math.sin(30*a.sample+3*a.t);a.y1=a.r1*Math.cos(30*a.sample+2*a.t);a.x2=a.y1-a.r1*Math.sin(30*a.sample+3*a.t);a.y2=a.x1+a.r1*Math.cos(30*a.sample+2*a.t);a.x3=a.x2+a.r1*Math.sin(30*a.sample+3*a.t);a.y3=a.y2+a.r1*Math.cos(30*a.sample+2*a.t);a.x=.00001<Math.abs(above(a.sample,.33))?.00001<Math.abs(above(a.sample,.66))?a.x3:a.x2:a.x1;a.y=.00001<Math.abs(above(a.sample,.33))?.00001<Math.abs(above(a.sample,\n.66))?a.y3:a.y2:a.y1;a.rad*=Math.sin(a.s);a.a=Math.sin(113*a.sample);a.a2=a.a;a.r=a.a;a.my_x=a.x;a.my_y=a.y;a.my_z=a.z;a.d=.5;a.zoom=.3;a.w3=a.q1;a.w2=a.q3;a.w1=a.q2;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*a.my_y;a.z1=a.my_z;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*a.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*a.x3+a.y3*\na.y3);a.w=Math.atan2(a.x3,a.y3);a.p=Math.tan(Math.asin(1)+Math.atan2(a.d+a.z3,a.l));a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+a.my_x;a.y=.5+a.my_y;","init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\ns=sample;\nt=time;\nr1=4*rad;\n\nx1= r1*sin(30*sample+3*t);\ny1= r1*cos(30*sample+2*t);\n\nx2= y1- r1*sin(30*sample+3*t);\ny2= x1+ r1*cos(30*sample+2*t);\n\nx3= x2+ r1*sin(30*sample+3*t);\ny3= y2+ r1*cos(30*sample+2*t);\n\n\nx=if(above(sample,.33), if(above(sample,.66),x3,x2),  x1);\ny=if(above(sample,.33), if(above(sample,.66),y3,y2),  y1);\n\n\nrad= rad* sin(s);\na=sin(113*sample);\na2=a;\nr=a;\nmy_x = x;\nmy_y = y;\nmy_z = z;\n\n\n\n\n/////// rotations... by flexi\n\nd = .5;\nzoom = .3;\n\n\n\n\nw3 = q1;\nw2 = q3;\nw1 = q2;\n\nx1 = cos(w1)*my_x + sin(w1)*my_y;\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\nz1 = my_z;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\n\n\n// perspective calculation\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\np = tan(asin(1) + atan2(d+z3,l));\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x;\ny = 0.5 + my_y;\n"},{"baseVals":{"sides":30,"num_inst":78,"rad":0.6153,"g":0.2,"b":0.2,"r2":0.1,"g2":0.1,"b2":0.1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"s=instance/num_inst;\nt=time;\n\nx1=0;\ny1=0;\n\nx2= x1+ rad*.2*sin(2*3.5*s+t);\ny2= y1+ rad*.04*cos(2*3.5*s+t);\n\nx=.5+if(equal(s,.5),x1,x2);\ny=.5+if(equal(s,.5),y1,y2);\n\nx= x+ .4*rad*sin(3*t);\ny= y+ .4*rad*cos(5*t);\n\nrad= rad* .2*equal(s,.5)*sin(1+s+t)+rad*.05*sin(s+t)*above(s,0);\na= a-.8+equal(s,.5);\nr=if(equal(s,.5),r,sin(10*s*t));\nr2=r/2;\n\n\n\n\n\nx3= x+ rad*.4*sin(2*3.5*s+14*t);\ny3= y+ rad*.3*cos(2*3.5*s+15*t);\n\nx=if(equal(s,.5),x,x3);\ny=if(equal(s,.5),y,y3);\n","init_eqs_eel":"","frame_eqs_eel":"s=instance/num_inst;\nt=time;\n\nx1=0;\ny1=0;\n\nx2= x1+ rad*.2*sin(2*3.5*s+t);\ny2= y1+ rad*.04*cos(2*3.5*s+t);\n\nx=.5+if(equal(s,.5),x1,x2);\ny=.5+if(equal(s,.5),y1,y2);\n\nx= x+ .4*rad*sin(3*t);\ny= y+ .4*rad*cos(5*t);\n\nrad= rad* .2*equal(s,.5)*sin(1+s+t)+rad*.05*sin(s+t)*above(s,0);\na= a-.8+equal(s,.5);\nr=if(equal(s,.5),r,sin(10*s*t));\nr2=r/2;\n\n\n\n\n\nx3= x+ rad*.4*sin(2*3.5*s+14*t);\ny3= y+ rad*.3*cos(2*3.5*s+15*t);\n\nx=if(equal(s,.5),x,x3);\ny=if(equal(s,.5),y,y3);\n"},{"baseVals":{"sides":50,"thickoutline":1,"rad":0.02047,"g":1,"b":1,"r2":0.3,"g2":0.3,"b2":0.3,"a2":1,"border_r":0.2,"border_g":0.2,"border_b":0.2,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=.5+.5*(q1-q2)+.2*(q3-q4)+.08*(q5-q6)+.03*(q7-q8);\ny=.5+.5*(q1+q2)+.2*(q3+q4)+.08*(q5+q6)+.03*(q7+q8);","init_eqs_eel":"","frame_eqs_eel":"x=.5+.5*(q1-q2)+.2*(q3-q4)+.08*(q5-q6)+.03*(q7-q8);\ny=.5+.5*(q1+q2)+.2*(q3+q4)+.08*(q5+q6)+.03*(q7+q8);"}],"waves":[{"baseVals":{"samples":352,"usedots":1,"scaling":0.04259,"smoothing":0,"g":0,"b":0,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.index=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q1=0;a.dec_med=0;a.rott=0;a.dray=0;a.divisor=0;a.is_beat=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q11=0;a.q10=0;a.q4=0;a.q26=0;a.trot=0;a.p2=0;a.avg=0;a.trig=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q7=0;a.q28=0;a.q30=0;a.radi=0;a.q20=0;a.q8=0;a.dirx=1;","frame_eqs_str":"a.dec_med=pow(.7,div(30,a.fps));a.dec_slow=pow(.9,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,-1+a.avg+a.peak)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;\na.k1=a.is_beat*equal(mod(a.index,4),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q27=a.index;a.q28=a.index2;a.divisor=mod(a.q28,2)+1;a.trot=div(div(6.28*(a.index+a.q28),a.divisor),2);a.q7=Math.cos(a.trot);a.q8=Math.sin(a.trot);a.q10=above(Math.sin(div(a.time,12)),.2);a.trig=bnot(a.q27+a.q28)*a.q24;a.radi=bnot(a.trig)*a.radi+a.trig*Math.floor(rand(100));a.q11=div(a.radi,220)+.05;\na.trig=bnot(a.q27)*a.q24;a.dray=bnot(a.trig)*a.dray+a.trig*Math.floor(rand(10));a.q12=.02;a.q13=div(Math.sin(div(a.time,12))+1,2);a.q30=div(a.aspectx,a.aspecty);","pixel_eqs_str":"","init_eqs_eel":"dirx = 1;","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, -1+avg+peak) * above (time, t0+.1);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%4;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\nk1 =  is_beat*equal(index%4,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n\nq27 = index;\nq28 = index2;\n\n//**************************\ndivisor = (q28%2)+1;\ntrot = (index+q28)*6.28/divisor/2;\n//trot = .2;\nq7 = cos(trot);\nq8 = sin(trot);\n\nq10 = above(sin(time/12),.2);\n\ntrig = bnot(q27+q28)*q24;\nradi = bnot(trig)*radi +  trig*int(rand(100));\nq11 = radi / 220 + .05;\n\ntrig = bnot(q27)*q24;\ndray = bnot(trig) * dray + trig * int(rand(10));\nq12 = .02;\nq13 = (sin(time/12)+1)/2;\n\nq30 = aspectx/aspecty;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 tmpvar_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv_orig - 0.5);\n  tmpvar_1 = (tmpvar_2 * aspect.xy);\n  float theta_3;\n  theta_3 = ((q1 * (\n    (16.0 * q2)\n   * \n    sqrt(dot (tmpvar_1, tmpvar_1))\n  )) + (q27 / 8.0));\n  vec2 tmpvar_4;\n  tmpvar_4.x = rad;\n  tmpvar_4.y = sqrt(dot (tmpvar_1, tmpvar_1));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ((q24 * (\n    (((texture (sampler_main, (uv + \n      ((clamp ((\n        (sin(theta_3) / cos(theta_3))\n       * \n        -(normalize((1.0/(tmpvar_1))))\n      ), vec2(-8.0, -8.0), vec2(8.0, 8.0)) * cos((\n        (tmpvar_1.yx * q27)\n       * 3.0))) / 32.0)\n    )) - (0.03 * rad)).xyz + ((0.02 * \n      (vec3(inversesqrt(((2.0 * tmpvar_4).y - (q27 / 18.0)))) * roam_cos.xyz)\n    ) * roam_cos.xyz)) * 0.99)\n   - 0.02)) + ((1.0 - q24) * texture (sampler_main, (tmpvar_2 + 0.5)).xyz));\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec4 noise_2;\n  vec3 ret_3;\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 4.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_6;\n  tmpvar_6 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.0;\n  tmpvar_7.x = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  tmpvar_7.y = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  noise_2 = (texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * \n    (((uv_1.xyy + (tmpvar_7 * 0.5)) * texsize.xyy) * texsize_noisevol_hq.zww)\n  ) + (vec3(0.0, 0.0, 0.2) * time))) - (roam_sin.wzyx * roam_cos.zxyw));\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  uv_1 = (uv_1 - (tmpvar_8 * 0.04));\n  ret_3 = (abs((\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n  )) - (roam_sin.zyx * roam_cos.ywx));\n  ret_3 = (ret_3 * (dot (noise_2, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  vec3 tmpvar_9;\n  tmpvar_9 = pow (ret_3, vec3(0.5, 0.5, 0.5));\n  ret_3 = tmpvar_9;\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = tmpvar_9;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv_orig-.5) * aspect.xy;\n\nfloat2 uv6 = uv1;\n\nfloat z = 16*q2*length(uv1) ;\nfloat2 d = -normalize(1/uv1);\n\nfloat2 rs = clamp(tan(q1*z+q27/8)*d,-8,8);\n\nrs *= cos(uv1.yx*q27*3) ;\n\nuv += rs/32;\n\nuv6 = 2*(float2(rad, length(uv1)));\n\n//uv6 = mul(uv6,float2x2(_qa));\n\nmus = (1/(sqrt(uv6.y-q27/18)));\n//mus = 1/(length(.1*sin(22*uv+rand_frame*6)));\n//mus *= float3 (1,.84,.5);\nmus *= roam_cos;\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv) - .03*rad;\n\nfloat3 ret1 = crisp - blur*.0 + .02*mus* roam_cos;\n//q24 *=1.1;\nret = q24*(ret1 * .99 -  .02) + (1-q24)*GetPixel((uv_orig-.5)+.5);\n\n\n}","comp_hlsl":"shader_body\n{\n\nuv = 0.5 + (uv-0.5)*0.98;\n    float2 d = texsize.zw*4;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nnoise-=roam_sin.wzyx*roam_cos.zxyw;\nuv -= float2(lum(dx),lum(dy))*0.04;\nret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));\nret-=roam_sin.zyx*roam_cos.ywx;\nret *= lum(noise)*3; \nret = pow(ret,0.5);\n}"}