{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.997,"echo_zoom":0.997,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"ob_size":0.005,"ob_r":0.01,"ib_size":0.26,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"rad":0.21859,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.mang=0;","frame_eqs_str":"a.r=1;a.b=1;a.g=1;a.mang=a.mang+.5+a.bass;a.rad+=.05*a.treb;a.ang=a.mang;","init_eqs_eel":"","frame_eqs_eel":"r = 1;\nb = 1;\ng = 1;\n\nmang = mang + .5+bass;\nrad = rad + treb*.05;\nang = mang;"},{"baseVals":{"sides":8,"rad":1.00394,"r":0,"a":0,"g2":0.4,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang - time*.333;\nborder_r = .5+.4*sin(time*1.4)+bass*.1;\nborder_g = .5+.4*sin(time*1.2)+treb*.1;\nborder_b = .5+.4*sin(time*1)+mid*.1;","init_eqs_eel":"","frame_eqs_eel":"ang = ang - time*.333;\nborder_r = .5+.4*sin(time*1.4)+bass*.1;\nborder_g = .5+.4*sin(time*1.2)+treb*.1;\nborder_b = .5+.4*sin(time*1)+mid*.1;"},{"baseVals":{"sides":3,"rad":0.21,"r":0.84,"r2":1,"g2":0.58,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + time*4;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + time*4;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":2.98779},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+div(.5*a.sample,Math.sin(100*a.sample+10*a.time));a.y=.5+.5*a.sample*Math.cos(100*a.sample+10*a.time);a.r=.01+.5*Math.sin(250*a.sample+1*a.time);a.b=.01+.5*Math.sin(220*a.sample-2*a.time);a.g=.01+.5*Math.sin(130*a.sample+4*a.time);a.b=.00001<Math.abs(above(a.b,0))?a.b:0;a.r=.00001<Math.abs(above(a.r,0))?a.r:0;a.g=.00001<Math.abs(above(a.g,0))?a.g:0;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5+.25*(sample*2)/sin(sample*100+time*10);\ny = .5+.25*(sample*2)*cos(sample*100+time*10);\nr = .01+.5*sin(sample*250+time*1);\nb = .01+.5*sin(sample*220-time*2);\ng = .01+.5*sin(sample*130+time*4);\n\nb = if(above(b,0),b,0);\nr = if(above(r,0),r,0);\ng = if(above(g,0),g,0);"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.5*a.sample*Math.sin(100*a.sample+10*a.time);a.y=.5+div(.5*a.sample,Math.cos(100*a.sample+10*a.time));a.r=.01+.5*Math.sin(250*a.sample+1*a.time);a.b=.01+.5*Math.sin(220*a.sample-2*a.time);a.g=.01+.5*Math.sin(130*a.sample+4*a.time);a.b=.00001<Math.abs(above(a.b,0))?a.b:0;a.r=.00001<Math.abs(above(a.r,0))?a.r:0;a.g=.00001<Math.abs(above(a.g,0))?a.g:0;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5+.25*(sample*2)*sin(sample*100+time*10);\ny = .5+.25*(sample*2)/cos(sample*100+time*10);\nr = .01+.5*sin(sample*250+time*1);\nb = .01+.5*sin(sample*220-time*2);\ng = .01+.5*sin(sample*130+time*4);\n\nb = if(above(b,0),b,0);\nr = if(above(r,0),r,0);\ng = if(above(g,0),g,0);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.warp=0;a.decay=.95;","pixel_eqs_str":"a.zoom+=.6*a.rad;","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\ndecay = .95;","pixel_eqs_eel":"zoom = zoom + (rad*.6);","warp":"","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\n  ), pow (hue_shader.yxz, ret_2)));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader.yxz,ret));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}