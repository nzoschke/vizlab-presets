{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":1,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wrap":0,"wave_a":0.001,"wave_scale":0.188,"wave_smoothing":0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":2.599,"warpscale":0.01,"zoomexp":0.9999,"zoom":1.01959,"warp":0.01,"sy":1.0017,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"sides":8,"additive":1,"textured":1,"rad":0.50127,"ang":0.62832,"tex_zoom":1.003,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"border_r=q1;\nborder_g=q2;\nborder_b=q3;\n\nang=3.14*sin(time*.44)*cos(time*.17);;\n\nx=q4;\ny=q5;","init_eqs_eel":"","frame_eqs_eel":"border_r=q1;\nborder_g=q2;\nborder_b=q3;\n\nang=3.14*sin(time*.44)*cos(time*.17);;\n\nx=q4;\ny=q5;"},{"baseVals":{"sides":8,"thickoutline":1,"textured":1,"rad":0.50122,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"border_r=q1;\nborder_g=q2;\nborder_b=q3;\n\nx=q4+.25*sin(time*.121)*cos(time*.19);\nx=q5+.25*cos(time*.17)*cos(time*.137);\n\nang=3.14*cos(time*.77);","init_eqs_eel":"","frame_eqs_eel":"border_r=q1;\nborder_g=q2;\nborder_b=q3;\n\nx=q4+.25*sin(time*.121)*cos(time*.19);\nx=q5+.25*cos(time*.17)*cos(time*.137);\n\nang=3.14*cos(time*.77);"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.8,"rad":0.44044,"tex_zoom":0.99991,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":40,"additive":1,"thickoutline":1,"textured":1,"y":0.51,"rad":0.36457,"tex_ang":1.88496,"tex_zoom":1.00182,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0.2,"enabled":0},"init_eqs_str":"","frame_eqs_str":"bass_mod=max(x+abs(bass_att),x+sin(time));\n\ny=.5+.5*sin(time);\nx=bass_mod*pow(y,2);\n\na=if(above(x,y),0,a);\na2=a;\nborder_a=.1*a;\n\ntex_zoom=bass+mid;\n\nr=bass*.5;\ng=mid*.6;\nb=treb*.7;","init_eqs_eel":"","frame_eqs_eel":"bass_mod=max(x+abs(bass_att),x+sin(time));\n\ny=.5+.5*sin(time);\nx=bass_mod*pow(y,2);\n\na=if(above(x,y),0,a);\na2=a;\nborder_a=.1*a;\n\ntex_zoom=bass+mid;\n\nr=bass*.5;\ng=mid*.6;\nb=treb*.7;"}],"waves":[{"baseVals":{"enabled":1,"sep":128,"spectrum":1,"usedots":1,"thick":1,"scaling":4.44797,"smoothing":1},"init_eqs_str":"a.stx=0;a.sty=0;a.mvx=0;a.mvy=0;a.t1=1;","frame_eqs_str":"","point_eqs_str":"a.stx=.5+.05*Math.sin(.22*a.time+.05*a.treb_att);a.sty=.5+.05*Math.cos(.15*a.time+.05*a.treb_att);a.mvx=a.stx+.05*Math.cos(a.time)+.05*Math.sin(a.bass);a.mvy=a.sty+.05*Math.sin(a.time)+.05*Math.cos(a.treb);a.x=a.mvx+.1*Math.abs(Math.sin(a.y*a.bass)*a.x+pow(Math.cos(a.x*a.y*a.treb),a.bass_att))*Math.sin(a.y+a.time);a.y=a.mvy+.1*Math.abs(Math.cos(a.x*a.treb)*a.y+pow(Math.cos(a.y*a.x*a.bass),a.treb_att))*Math.cos(a.x+a.time);","init_eqs_eel":"t1 = 1","frame_eqs_eel":"","point_eqs_eel":"stx=.5+.05*sin(time*.22+.05*treb_att);\nsty=.5+.05*cos(time*.15+.05*treb_att);\n\nmvx=stx+.05*cos(time)+.05*sin(bass);\nmvy=sty+.05*sin(time)+.05*cos(treb);\n\nx=mvx+abs(sin(y*bass)*x+pow(cos(x*y*treb),bass_att))*.1*sin(y+time);\ny=mvy+abs(cos(x*treb)*y+pow(cos(y*x*bass),treb_att))*.1*cos(x+time);\n\n\n\n// x/y border limits"},{"baseVals":{"enabled":1,"sep":128,"spectrum":1,"usedots":1,"thick":1,"scaling":4.44796,"smoothing":1},"init_eqs_str":"a.stx=0;a.sty=0;a.mvx=0;a.mvy=0;a.t1=1;","frame_eqs_str":"","point_eqs_str":"a.stx=.5+.05*Math.sin(.12*a.time+a.treb_att);a.sty=.5-.05*Math.cos(.25*a.time+a.treb_att);a.mvx=a.stx-.05*Math.sin(a.time)+.05*Math.cos(a.bass);a.mvy=a.sty+.05*Math.cos(a.time)+.05*Math.sin(a.treb);a.x=a.mvx+.1*Math.abs(Math.sin(a.y*a.bass)*a.x+pow(Math.cos(a.x*a.y*a.treb),a.bass_att))*Math.sin(a.y+a.time);a.y=a.mvy+.1*Math.abs(Math.cos(a.x*a.treb)*a.y+pow(Math.cos(a.y*a.x*a.bass),a.treb_att))*Math.cos(a.x+a.time);","init_eqs_eel":"t1 = 1","frame_eqs_eel":"","point_eqs_eel":"stx=.5+.05*sin(time*.12+treb_att);\nsty=.5-.05*cos(time*.25+treb_att);\n\nmvx=stx-.05*sin(time)+.05*cos(bass);\nmvy=sty+.05*cos(time)+.05*sin(treb);\n\nx=mvx+abs(sin(y*bass)*x+pow(cos(x*y*treb),bass_att))*.1*sin(y+time);\ny=mvy+abs(cos(x*treb)*y+pow(cos(y*x*bass),treb_att))*.1*cos(x+time);\n\n\n\n// x/y border limits"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"scaling":4.44841,"smoothing":1},"init_eqs_str":"a.stx=0;a.sty=0;a.mvx=0;a.mvy=0;a.t1=1;","frame_eqs_str":"","point_eqs_str":"a.stx=.5-.01*Math.cos(.32*a.time+a.mid_att);a.sty=.5-.01*Math.sin(.45*a.time+a.mid_att);a.mvx=a.stx-.01*Math.cos(1.33*a.time)+.001*Math.sin(a.bass);a.mvy=a.sty+.01*Math.sin(.87*a.time)+.001*Math.sin(a.treb);a.x=a.mvx+.05*Math.abs(Math.sin(a.y*a.bass)*a.x+pow(Math.cos(a.x*a.y*a.treb),a.bass_att))*Math.sin(a.y+1.43*a.time);a.y=a.mvy+.05*Math.abs(Math.cos(a.x*a.treb)*a.y+pow(Math.cos(a.y*a.x*a.bass),a.treb_att))*Math.cos(a.x+1.54*a.time);","init_eqs_eel":"t1 = 1","frame_eqs_eel":"","point_eqs_eel":"stx=.5-.01*cos(time*.32+mid_att);\nsty=.5-.01*sin(time*.45+mid_att);\n\nmvx=stx-.01*cos(time*1.33)+.001*sin(bass);\nmvy=sty+.01*sin(time*.87)+.001*sin(treb);\n\nx=mvx+abs(sin(y*bass)*x+pow(cos(x*y*treb),bass_att))*.05*sin(y+time*1.43);\ny=mvy+abs(cos(x*treb)*y+pow(cos(y*x*bass),treb_att))*.05*cos(x+time*1.54);\n\n\n\n// x/y border limits"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"scaling":4.44841,"smoothing":1},"init_eqs_str":"a.stx=0;a.sty=0;a.mvx=0;a.mvy=0;a.t1=1;","frame_eqs_str":"","point_eqs_str":"a.stx=.5+.01*Math.sin(.022*a.time+a.mid_att);a.sty=.5+.01*Math.cos(.615*a.time+a.mid_att);a.mvx=a.stx+.01*Math.cos(.94*a.time)+.05*Math.sin(a.bass);a.mvy=a.sty+.01*Math.sin(1.4*a.time)+.05*Math.cos(a.treb);a.x=a.mvx+.1*Math.abs(Math.sin(a.y*a.bass)*a.x+pow(Math.cos(a.x*a.y*a.treb),a.bass_att))*Math.sin(a.y+.72*a.time);a.y=a.mvy+.1*Math.abs(Math.cos(a.x*a.treb)*a.y+pow(Math.cos(a.y*a.x*a.bass),a.treb_att))*Math.cos(a.x+.47*a.time);","init_eqs_eel":"t1 = 1","frame_eqs_eel":"","point_eqs_eel":"stx=.5+.01*sin(time*.022+mid_att);\nsty=.5+.01*cos(time*.615+mid_att);\n\nmvx=stx+.01*cos(time*.94)+.05*sin(bass);\nmvy=sty+.01*sin(time*1.4)+.05*cos(treb);\n\nx=mvx+.5*abs(sin(y*bass)*x+pow(cos(x*y*treb),bass_att))*.2*sin(y+time*.72);\ny=mvy+.5*abs(cos(x*treb)*y+pow(cos(y*x*bass),treb_att))*.2*cos(x+time*.47);\n\n\n\n// x/y border limits"}],"init_eqs_str":"a.q4=0;a.q5=0;a.decay=.1;","frame_eqs_str":"a.sx=1;a.sy=1;a.q4=.5+.05*Math.cos(.52*a.time)*Math.cos(.39*a.time);a.q5=.5+.05*Math.sin(.44*a.time)*Math.cos(.71*a.time);","pixel_eqs_str":"a.zoom=a.zoom+.01+.75*a.rad*a.treb_att;","init_eqs_eel":"decay=0.1;","frame_eqs_eel":"sx=1.000;\nsy=1.000;\n\n//dy=0.0058;\n\nq4=.5+.05*cos(time*.52)*cos(time*.39);\nq5=.5+.05*sin(time*.44)*cos(time*.71);","pixel_eqs_eel":"zoom=zoom+.01+.75*rad*treb_att;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1.z = texture (sampler_fc_main, uv).z;\n  ret_1.x = (texture (sampler_main, uv).x * 0.97);\n  ret_1.y = (texture (sampler_main, mix (uv_orig, uv, vec2(0.2, 0.2))).y * 0.98);\n  ret_1.z = ((texture (sampler_main, mix (uv_orig, uv, vec2(0.4, 0.4))).z * 0.96) + (ret_1.xy * 0.25)).x;\n  ret_1 = (ret_1 - (0.0085 + (0.005 * ret_1)));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec3 tmpvar_3;\n  tmpvar_3 = ((texture (sampler_blur3, uv).xyz * scale3) + bias3);\n  ret_1 = (tmpvar_2.xyz + (tmpvar_3 + mix (tmpvar_2.xxx, \n    (tmpvar_3.x * vec3(0.24, 0.9, 0.138))\n  , tmpvar_2.yyy)));\n  ret_1 = (ret_1 + (tmpvar_3 + mix (ret_1.yyy, \n    (tmpvar_3.y * vec3(0.9, 0.25, 0.1))\n  , tmpvar_2.xxx)));\n  ret_1 = (ret_1 + (tmpvar_3 + mix (ret_1.zzz, \n    (tmpvar_3.z * vec3(0.31, 0.12, 0.18))\n  , tmpvar_2.zzz)));\n  ret_1 = (ret_1 + ((tmpvar_3 * \n    (fract(tmpvar_2.xyz) + fract(tmpvar_3))\n  ) + (\n    (tmpvar_2.xyz + dot ((tmpvar_2.xyz + tmpvar_3), vec3(0.32, 0.49, 0.29)))\n   + tmpvar_2.xyz)));\n  ret_1 = (ret_1 + fract((ret_1 + tmpvar_3)));\n  ret_1 = (ret_1 * ret_1);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv);\n\n    //Layer code - Thanks to flexi.    \n    float2 uv1 = lerp(uv_orig,uv,1); //equals uv\n    float2 uv2 = lerp(uv_orig,uv,0.2); // 20% of uv\n    float2 uv3 = lerp(uv_orig,uv,0.4); //20% of uv but in the opposite direction\n\n    ret.x = GetPixel(uv1).x*0.97;\n    ret.y = GetPixel(uv2).y*0.98;\n    ret.z = GetPixel(uv3).z*0.96+ret.xy*.25;\n    \n    // darken (decay) over time\n    ret -= .0085+.005*ret ; \n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main,uv);    \n\n    float3 bl = GetBlur3(uv).xyz;\n    float3 base = GetPixel(uv).xyz;\n         \n    float3 blum = ret+lum(base+bl)+GetPixel(uv.xy); \n  \n    ret += bl+lerp(ret.x,bl.x*float3(0.24,0.9,0.138),base.y); \n    ret += bl+lerp(ret.y,bl.y*float3(0.9,0.25,0.1),base.x); \n    ret += bl+lerp(ret.z,bl.z*float3(0.31,0.12,0.18),base.z);\n    \n    ret += bl*(frac(base)+frac(bl))+blum; \n    ret += frac(ret+bl);\n\n    ret*=ret;\n}"}