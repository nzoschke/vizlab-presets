{"version":2,"baseVals":{"rating":5,"gammaadj":1.88,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.526,"wave_scale":1.05,"wave_smoothing":0,"wave_mystery":-0.22,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"fshader":0.3,"zoom":0.9999,"warp":0.00909,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.05,"ob_r":0.8,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1x":0.8,"b2x":0.7},"shapes":[{"baseVals":{"textured":1,"x":0.7,"y":0.3,"rad":0.48446,"tex_zoom":1.8751,"g":1,"b":1,"r2":1,"b2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":32,"num_inst":37,"rad":0.0363,"ang":0.81681,"tex_ang":0.37699,"tex_zoom":1.02841,"g":1,"b":1,"a":0.05,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":26,"num_inst":2,"rad":0.15038,"tex_ang":0.62832,"tex_zoom":1.35189,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":24,"textured":1,"x":0.7,"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":1,"b":0.99,"a":0,"g2":0,"a2":1,"border_r":0,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":182,"sep":60,"usedots":1,"scaling":0.14868,"smoothing":0,"a":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t1 = 1; t2 = 0;","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"t1 = 1; t2 = 0;","point_eqs_eel":""},{"baseVals":{"samples":100,"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.r1b=0;a.isb=0;a.sw=0;a.progress=0;a.zo=0;a.r3b=0;a.ts=0;a.zo_=0;a.q12=0;a.t1=0;a.q22=0;a.q21=0;a.fac=0;a.tr=0;a.q6=0;a.dt=0;a.zo__=0;a.p=0;a.q1=0;a.r1=0;a.q5=0;a.dec_s=0;a.v=0;a.r1c=0;a.r3c=0;a.bi=0;a.r2a=0;a.q10=0;a.spd=0;a.dec_m=0;a.q4=0;a.r2b=0;a.r2=0;a.s3=0;a.tstart=0;a.r3=0;a.t2=0;a.vol=0;a.r2c=0;a.q2=0;a.r1a=0;a.trest=0;a.r3a=0;a.q3=0;a.s1=0;a.t0=0;a.vol_=0;a.dec=0;a.s2=0;a.q7=0;a.pk=0;a.q20=0;a.q8=0;a.zo=1;a.zo_=.1;a.zo__=.02;a.tstart=a.time;a.t1=rand(12);a.t2=rand(12);\n","frame_eqs_str":"a.dt=div(1,a.fps);a.dec_m=1-2*a.dt;a.dec_s=1-.5*a.dt;a.vol=div(2*a.bass_att+a.mid_att+a.treb_att,3);a.p=a.progress;a.trest=.00001<Math.abs(.00001>Math.abs(a.p-0)?1:0)?1E5:div((a.time-a.tstart)*(1-a.p),a.p);a.v=Math.max(0,a.vol);a.dec=.00001<Math.abs(a.v>a.vol_?1:0)?1-1*a.dt:1-.25*a.dt;a.vol_=a.vol_*a.dec+(1-a.dec)*a.v;a.spd=div(a.vol_*a.dt*(.5+a.zo__),4);a.isb=above(a.vol,a.pk)*(a.time>a.t0+.5?1:0);.00001<Math.abs(a.isb)?(a.t0=a.time,a.pk=3*a.vol):a.pk*=a.dec_s;a.bi+=a.isb;\na.sw=a.isb&&.7<rand(1)&&8<a.time-a.ts?1:0;.00001<Math.abs(a.sw)?a.ts=a.time:0;a.zo=.00001<Math.abs(a.sw)?.7*Math.floor(rand(3))+.3:a.zo;a.zo_+=Math.atan(10*(a.zo-a.zo_))*a.dt*.2;a.zo__=a.zo__*a.dec_m+(1-a.dec_m)*a.zo_;.00001<Math.abs(a.isb&&.00001>Math.abs(mod(a.bi,2)-0)?1:0)?a.r1=rand(2)-1:0;.00001<Math.abs(a.isb&&.00001>Math.abs(mod(a.bi,3)-0)?1:0)?a.r2=rand(2)-1:0;.00001<Math.abs(a.isb&&.00001>Math.abs(mod(a.bi,5)-2)?1:0)?a.r3=rand(2)-1:0;a.r1a+=Math.atan(50*(a.r1-a.r1a))*a.spd*.1;a.r2a+=Math.atan(50*\n(a.r2-a.r2a))*a.spd*.1;a.r3a+=Math.atan(50*(a.r3-a.r3a))*a.spd*.1;a.r1b=a.r1b*a.dec_m+(1-a.dec_m)*a.r1a;a.r2b=a.r2b*a.dec_m+(1-a.dec_m)*a.r2a;a.r3b=a.r3b*a.dec_m+(1-a.dec_m)*a.r3a;a.r1c=a.r1c*a.dec_m+(1-a.dec_m)*a.r1b;a.r2c=a.r2c*a.dec_m+(1-a.dec_m)*a.r2b;a.r3c=a.r3c*a.dec_m+(1-a.dec_m)*a.r3b;a.s1+=(1+a.r1c)*a.spd;a.s2+=a.r2c*a.spd;a.s3+=(1+a.r2c)*a.spd;a.q1=a.r1c;a.q2=a.r2c;a.q3=a.r3c;a.q4=.2*(a.q1-a.q2);a.q5=a.s1;a.q6=a.s2;a.q7=4*a.s3;a.q8=12*(a.s2+a.s3);a.q10=a.zo__;a.q12=.2;a.tr=a.tr*a.dec_m+\ndiv((1-a.dec_m)*a.trest,5);a.q20=Math.max(0,Math.min(1,a.tr));a.t1+=.12*a.spd;a.t2+=.07*a.spd;a.q21=1.5+.3*Math.sin(a.t1);a.q22=1+.3*Math.sin(a.t2);a.monitor=a.t1;","pixel_eqs_str":"a.rot=-a.q1*(sqr(a.x-.5+.2*(a.q2+a.q3))+sqr(a.y-.5+.2*(a.q1-a.q3)));a.fac=.04;a.rot-=(Math.sin(8*a.x+8*a.q1)+Math.sin(8*a.y+8*a.q3))*a.fac;a.zoom=1-(a.y-.5)*Math.sin(.3*(a.q5+a.q6));","init_eqs_eel":"zo=1; zo_=0.1; zo__=0.02; tstart=time;\nt1=rand(12); t2=rand(12);","frame_eqs_eel":"dt=1/fps; dec_m = 1-2*dt; dec_s = 1-0.5*dt; \nvol = (2*bass_att+mid_att+treb_att)/3;\n\np = progress;\ntrest = if (p==0,100000, (time-tstart)*(1-p)/p);\n\nv = max(0,vol);\ndec = if (v>vol_,1-1*dt,1-0.25*dt);\nvol_= vol_*dec+(1-dec)*v;\nspd = vol_*dt * (0.5+zo__)/4;\n\nisb = above(vol, pk) * (time>t0+.5);\nif (isb,t0=time; pk=vol*3,Pk*=dec_s);\nbi += isb;\n\nsw = isb&&(rand(1)>0.7)&&(time-ts>8);\nif (sw,ts=time,0);\nzo = if(sw, int(rand(3))*0.7+0.3,zo);\nzo_ += atan(10*(zo-zo_))*dt*0.2;\nzo__ = zo__*dec_m + (1-dec_m)*zo_;\n\n\nif (isb&&(bi%2==0),r1 = rand(2)-1,0);\nif (isb&&(bi%3==0),r2 = rand(2)-1,0);\nif (isb&&(bi%5==2),r3 = rand(2)-1,0);\n\nr1a += atan(50*(r1-r1a))*spd*.1;\nr2a += atan(50*(r2-r2a))*spd*.1;\nr3a += atan(50*(r3-r3a))*spd*.1;\n\nr1b = r1b*dec_m + (1-dec_m)*r1a;\nr2b = r2b*dec_m + (1-dec_m)*r2a;\nr3b = r3b*dec_m + (1-dec_m)*r3a;\nr1c = r1c*dec_m + (1-dec_m)*r1b;\nr2c = r2c*dec_m + (1-dec_m)*r2b;\nr3c = r3c*dec_m + (1-dec_m)*r3b;\n\ns1 += (1+r1c)*spd;\ns2 += (r2c)*spd;\ns3 += (1+r2c)*spd;\n\nq1=r1c;\nq2=r2c;\nq3=r3c;\nq4=(q1-q2)*0.2;\nq5=s1;\nq6=s2;\nq7=s3*4;\nq8=(s2+s3)*12;\nq10 = zo__;\n\nq12 = 0.2; //front-back light\ntr = tr*dec_m + (1-dec_m)*trest/5;\nq20 = max(0,min(1,tr)); //fade - does not work\n\n//colors\nt1 += spd*0.12;\nt2 += spd*0.07;\nq21 = 1.5 + 0.3*sin(t1);\nq22 = 1 + 0.3*sin(t2); \nmonitor = t1;","pixel_eqs_eel":"rot = -q1*(sqr(x-0.5+0.2*(q2+q3))+ sqr(y-0.5+0.2*(q1-q3)));\nfac = 0.04;\nrot -= (sin(x*8+8*q1)+sin(y*8+q3*8))*fac;\nzoom = 1-(y-0.5)*sin((q5+q6)*0.3);","warp":"float xlat_mutabledist;\nfloat xlat_mutableh;\nvec3 xlat_mutablelea;\nvec3 xlat_mutableneu;\nfloat xlat_mutablestripe;\nvec2 xlat_mutableuv4;\nvec2 xlat_mutableuv5;\n shader_body { \n  vec2 uv1_2;\n  uv1_2 = (((uv - 0.5) + (0.2 * q2)) * aspect.xy);\n  xlat_mutablelea = vec3(0.0, 0.0, 0.0);\n  for (float n_1 = 4.0; n_1 > 0.0; n_1 = (n_1 - 1.0)) {\n    float aa_3;\n    xlat_mutabledist = (((\n      (1.5 + q2)\n     * 0.33) * n_1) / 4.0);\n    xlat_mutableuv4 = ((256.0 * xlat_mutabledist) * (uv1_2 * q10));\n    float tmpvar_4;\n    tmpvar_4 = (((\n      (1.0 + (q3 / 2.0))\n     * n_1) / 4.0) + (q1 / 2.0));\n    mat2 tmpvar_5;\n    tmpvar_5[uint(0)].x = cos(tmpvar_4);\n    tmpvar_5[uint(0)].y = sin(tmpvar_4);\n    tmpvar_5[1u].x = -(sin(tmpvar_4));\n    tmpvar_5[1u].y = cos(tmpvar_4);\n    xlat_mutableuv4 = (xlat_mutableuv4 * tmpvar_5);\n    xlat_mutablestripe = (16.0 - (0.8 * abs(\n      floor(xlat_mutableuv4.x)\n    )));\n    xlat_mutableuv4.y = (xlat_mutableuv4.y + ((\n      (xlat_mutablestripe * q5)\n     + \n      ((16.0 - xlat_mutablestripe) * q6)\n    ) - (8.0 * n_1)));\n    vec4 tmpvar_6;\n    tmpvar_6 = texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0));\n    float tmpvar_7;\n    tmpvar_7 = clamp ((64.0 * (tmpvar_6.z - \n      (0.98 - ((xlat_mutablestripe / 16.0) * 0.1))\n    )), 0.0, 1.0);\n    aa_3 = ((tmpvar_6.y - 0.5) * q8);\n    mat2 tmpvar_8;\n    tmpvar_8[uint(0)].x = cos(aa_3);\n    tmpvar_8[uint(0)].y = sin(aa_3);\n    tmpvar_8[1u].x = -(sin(aa_3));\n    tmpvar_8[1u].y = cos(aa_3);\n    xlat_mutableuv5 = ((fract(xlat_mutableuv4) - 0.5) * tmpvar_8);\n    float tmpvar_9;\n    tmpvar_9 = abs(sin((\n      (xlat_mutableuv4.y * 0.5)\n     + \n      ((2.0 * q7) * tmpvar_6.x)\n    )));\n    xlat_mutableuv5.x = (xlat_mutableuv5.x * (1.0/(tmpvar_9)));\n    float x_10;\n    x_10 = (xlat_mutableuv5.y + 0.4);\n    float r_11;\n    float tmpvar_12;\n    tmpvar_12 = abs(xlat_mutableuv5.x);\n    if ((x_10 >= 0.0)) {\n      r_11 = (1.0 - ((x_10 - tmpvar_12) / (x_10 + tmpvar_12)));\n    } else {\n      r_11 = (3.0 - ((x_10 + tmpvar_12) / (tmpvar_12 - x_10)));\n    };\n    float tmpvar_13;\n    if ((xlat_mutableuv5.x < 0.0)) {\n      tmpvar_13 = -(r_11);\n    } else {\n      tmpvar_13 = r_11;\n    };\n    vec3 tmpvar_14;\n    tmpvar_14 = (texture (sampler_noise_hq, vec2((0.5 * (tmpvar_13 / 4.0)))) - 0.5).xyz;\n    xlat_mutableuv5 = (xlat_mutableuv5 + ((tmpvar_14 * n_1) * (0.25 * tmpvar_6.x)).xy);\n    xlat_mutableh = (tmpvar_7 * clamp ((8.0 - \n      (16.0 * sqrt(dot (xlat_mutableuv5, xlat_mutableuv5)))\n    ), 0.0, 1.0));\n    vec2 tmpvar_15;\n    tmpvar_15.x = q21;\n    tmpvar_15.y = q22;\n    vec3 tmpvar_16;\n    tmpvar_16.z = 0.9;\n    tmpvar_16.xy = ((tmpvar_6.xy + tmpvar_15) * (0.16 / abs(\n      (tmpvar_9 - tmpvar_14.x)\n    )));\n    xlat_mutableneu = (xlat_mutableh * tmpvar_16);\n    xlat_mutablelea = mix (xlat_mutablelea, xlat_mutableneu, vec3(xlat_mutableh));\n  };\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = xlat_mutablelea;\n  ret = tmpvar_17.xyz;\n }","comp":"vec3 xlat_mutablelea;\nfloat xlat_mutabletmp;\nvec2 xlat_mutableuv2;\n shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  float tmpvar_3;\n  tmpvar_3 = (0.5 + uv.y);\n  float tmpvar_4;\n  tmpvar_4 = (0.004 * time);\n  xlat_mutableuv2 = (((0.16 * tmpvar_2) * (tmpvar_3 * q10)) + tmpvar_4);\n  float tmpvar_5;\n  tmpvar_5 = (0.003 * time);\n  xlat_mutabletmp = clamp (((\n    (texture (sampler_noise_hq, xlat_mutableuv2).xy + (texture (sampler_noise_hq, ((xlat_mutableuv2 * 3.0) + vec2(tmpvar_5))).xy / 3.0))\n   + \n    (texture (sampler_noise_hq, ((xlat_mutableuv2 * 9.0) + vec2(tmpvar_5))).xy / 9.0)\n  ) - 0.5), 0.0, 1.0).x;\n  xlat_mutableuv2 = (((\n    ((0.16 * tmpvar_2) * (1.0 - (xlat_mutabletmp * 0.05)))\n   * tmpvar_3) * q10) + tmpvar_4);\n  xlat_mutabletmp = clamp (((\n    (texture (sampler_noise_hq, xlat_mutableuv2).xy + (texture (sampler_noise_hq, ((xlat_mutableuv2 * 3.0) + vec2(tmpvar_5))).xy / 3.0))\n   + \n    (texture (sampler_noise_hq, ((xlat_mutableuv2 * 9.0) + vec2(tmpvar_5))).xy / 9.0)\n  ) - 0.5), 0.0, 1.0).x;\n  xlat_mutableuv2 = (((\n    ((0.16 * tmpvar_2) * (1.0 - (xlat_mutabletmp * 0.05)))\n   * tmpvar_3) * q10) + tmpvar_4);\n  xlat_mutabletmp = clamp (((\n    (texture (sampler_noise_hq, xlat_mutableuv2).xy + (texture (sampler_noise_hq, ((xlat_mutableuv2 * 3.0) + vec2(tmpvar_5))).xy / 3.0))\n   + \n    (texture (sampler_noise_hq, ((xlat_mutableuv2 * 9.0) + vec2(tmpvar_5))).xy / 9.0)\n  ) - 0.5), 0.0, 1.0).x;\n  xlat_mutableuv2 = (((\n    ((0.16 * tmpvar_2) * (1.0 - (xlat_mutabletmp * 0.05)))\n   * tmpvar_3) * q10) + tmpvar_4);\n  xlat_mutabletmp = clamp (((\n    (texture (sampler_noise_hq, xlat_mutableuv2).xy + (texture (sampler_noise_hq, ((xlat_mutableuv2 * 3.0) + vec2(tmpvar_5))).xy / 3.0))\n   + \n    (texture (sampler_noise_hq, ((xlat_mutableuv2 * 9.0) + vec2(tmpvar_5))).xy / 9.0)\n  ) - 0.5), 0.0, 1.0).x;\n  float tmpvar_6;\n  tmpvar_6 = clamp (xlat_mutabletmp, 0.0, 1.0);\n  ret_1 = (((vec3(0.2, 0.4, 1.25) * \n    clamp (uv.y, 0.0, 1.0)\n  ) * (rand_preset.z - 0.2)) + ((vec3(tmpvar_6) * 0.5) * (1.4 - uv.y)));\n  vec2 x_7;\n  x_7 = (uv - (1.1 * rand_preset.xy));\n  ret_1 = (ret_1 + ((\n    (0.1 / sqrt(dot (x_7, x_7)))\n   * vec3(1.0, 0.8, 0.5)) * clamp (\n    (1.0 - vec3(tmpvar_6))\n  , 0.0, 1.0)));\n  ret_1 = (ret_1 * (1.0 - (\n    (rad * rad)\n   * 0.7)));\n  xlat_mutableuv2 = (((tmpvar_2 * 0.5) + 0.45) + (0.05 * q3));\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_main, xlat_mutableuv2);\n  ret_1 = (ret_1 * clamp ((1.0 - tmpvar_8.z), 0.0, 1.0));\n  ret_1 = (ret_1 + ((tmpvar_8.xyz * vec3(1.0, 1.0, 0.0)) * (1.0 + q12)));\n  xlat_mutablelea = (mix ((2.0 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ), texture (sampler_main, uv).xyz, vec3(clamp (\n    ((6.0 * q10) - 2.0)\n  , 0.0, 1.0))) * clamp ((1.0 - \n    (8.0 * tmpvar_8.z)\n  ), 0.0, 1.0));\n  ret_1 = (ret_1 * clamp ((1.0 - \n    (xlat_mutablelea.z * 0.8)\n  ), 0.0, 1.0));\n  ret_1 = (ret_1 + ((xlat_mutablelea * vec3(1.0, 1.0, 0.0)) * (1.0 - q12)));\n  vec3 tmpvar_9;\n  tmpvar_9 = mix (vec3((dot (ret_1, vec3(0.32, 0.49, 0.29)) * (\n    (q20 * 0.6)\n   + 0.4))), ret_1, vec3(q20));\n  ret_1 = tmpvar_9;\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = tmpvar_9;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"#define sat saturate\nsampler sampler_pw_noise_lq;\nfloat dr, smask, stripe, h, dist;\nfloat2 uv1, uv2, uv3,uv4,uv5,uv6;\nfloat3 lea, noise, ret1, struc, neu;\n\nfloat aTan2(float y, float x) {float angle;\t float abs_y = abs(y); float r; \nif (x>=0) {r=1-(x-abs_y) / (x+abs_y); } else {r=3-(x+abs_y) / (abs_y-x);}\t\nreturn (y < 0 ? -r : r)/4;}\n\nshader_body {\nfloat2 uv1 = (uv-.5+0.2*q2)*aspect.xy;\nlea = 0;\nint anz = 4;\nfor (float n=anz; n>0; n--) {\n  dist = (1.5+q2)*0.33*n/anz;\n  uv4 = 256 * (dist* uv1)*q10;\n\n  float aa = (1.0+q3/2)*n/anz+q1*(1+uv1.x*0)/2 ;\n  uv4 = mul(uv4,float2x2(cos(aa),-sin(aa),sin(aa),cos(aa)));\n  stripe = (16-0.8*abs(floor(uv4.x)));;\n  uv4.y += stripe*q5 + (16-stripe)*q6 - 8.0*n;\n\n  noise = tex2D (sampler_pw_noise_lq,uv4/256);\n  smask = sat (64*(noise.b-(0.98-(stripe/16)*0.1))); //0.1=dens.\n\n  aa =  (noise.g-0.5)*q8;\n  uv5 = mul(frac(uv4)-0.5,float2x2(cos(aa),-sin(aa),sin(aa),cos(aa)));\n\n  dr = (abs(sin(uv4.y*0.5 +2*q7*noise.r)));\n  uv5.x *= 1/dr;\n  struc = tex2D(sampler_noise_hq,0.5*aTan2(uv5.x,uv5.y+0.4))-0.5;\n  uv6 = uv5;\n  uv5 += struc*n*.25*(noise.r);\n  h = smask*sat (8-16*length(uv5));\n  neu = h*float3 ((noise.rg+float2(q21,q22))*(.16/abs(dr-struc.x)),0.9);\n  lea = lerp (lea, neu, h);\n}\n//lea.rg *= 1-sat(tex2D(sampler_noise_lq,uv6*.1).r-.4)*h;\nret = lea;\n//ret = max (ret, (ret.b==0)*GetPixel((uv_orig-0.5)*2+0.4)*0.6);\n\n}","comp_hlsl":"#define sat saturate\nsampler sampler_clouds;\nfloat z, sun, tmp;\nfloat2 uv1, uv2, dz;\nfloat3 sky, cloud, lea;\nstatic float2 hor = float2 (texsize.z,0)*1;\nstatic float2 ver = float2 (0,texsize.w)*1;\n\nfloat2 noise4 (float2 uvi) { float2 n1,n2,n3,n4,n5, zv; zv = 0.003*time;\n  n1 = tex2D(sampler_noise_hq, (uvi));\n  n2 = tex2D(sampler_noise_hq, (uvi*3+zv));\n  n3 = tex2D(sampler_noise_hq, (uvi*9+zv));\n  return sat(n1 + n2/3 + n3/9-0.5);}\n\nshader_body {\nuv1 = uv-.5;\ntmp = 0; \nfor (int n = 1; n <= 4; n++) {\n  uv2 = 0.16*uv1 * (1-tmp*.05)*(.5+uv.y)*q10 + .004*time;\n  tmp = noise4(uv2).x;\n}\ncloud = sat(tmp) ;\n\nret = float3 (0.2,0.4,1.25)*sat(uv.y)*(rand_preset.z-0.2)+cloud*0.5*(1.4-uv.y);\nret += 0.1/length(uv-1.1*rand_preset.xy+0*noise4(uv*0.25)*.25) * float3 (1,0.8,0.5)* sat(1-cloud);\nret *= 1-pow(rad,2)*0.7;\nuv2 = (uv-0.5)*0.5+0.45+0.05*q3;\ndz.x=GetPixel(uv2-hor)-GetPixel(uv2+hor);\ndz.y=GetPixel(uv2-ver)-GetPixel(uv2+ver);\n\nlea = GetPixel(uv2);\nret *= sat (1-lea.b);\nret += lea*float3(1,1,0) * (1+q12);\n\nlea =  lerp(2*GetBlur1(uv),GetPixel(uv),sat(6*q10-2)) * sat(1-8*lea.b) ;\nret *= sat (1-lea.b*0.8);\nret += lea*float3(1,1,0) * (1-q12);\n\nret = lerp (lum(ret)*(q20*0.6+0.4),ret,q20);\n//if (ret.r == 0) {discard;}\n\n}\nwritten by martin\nEND"}