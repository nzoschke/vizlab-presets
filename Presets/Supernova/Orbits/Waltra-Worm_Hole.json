{"version":2,"baseVals":{"rating":5,"gammaadj":0.16,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.002,"wave_smoothing":0.9,"modwavealphastart":0.5,"modwavealphaend":1,"zoom":1.0299,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.007,"ib_size":0.26,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0.3},"shapes":[{"baseVals":{"sides":60,"additive":1,"thickoutline":1,"rad":0.39872,"g":1,"b":0.7,"r2":1,"g2":0.8,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ax=0; ay=0; az=-30;\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\na=below(vz,0);","init_eqs_eel":"","frame_eqs_eel":"ax=0; ay=0; az=-30;\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\na=below(vz,0);"},{"baseVals":{"enabled":1,"sides":60,"additive":1,"textured":1,"rad":0.55924,"ang":1.88496,"tex_ang":0.69115,"tex_zoom":2.34866,"g":0.1,"b":1,"a":0.2,"r2":1,"g2":0.05,"b2":0.4,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":60,"additive":1,"textured":1,"rad":1.54304,"ang":6.28319,"tex_ang":6.28319,"tex_zoom":0.30546,"r":0,"g":0.5,"b":0.6,"a":0.4,"g2":0,"a2":0.8,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.tex_ang=a.bass;","init_eqs_eel":"","frame_eqs_eel":"tex_ang=bass;"},{"baseVals":{"sides":6,"additive":1,"rad":0.1149,"g":1,"b":0.7,"r2":1,"g2":0.8,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"q8=-q8+1;\nt=(frame%6+4);\nsides=if(equal(t%2,0),6,60);\n\nr=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\ng=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\nb=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\n\nr2=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\ng2=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\nb2=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\n\nr=r+equal(t%2,1);\ng=g+equal(t%2,1);\nb=b+equal(t%2,1)*.7;\n\nr2=r2+equal(t%2,1);\ng2=g2+equal(t%2,1)*.8;\n\nrad=equal(t,4)*.1+equal(t,5)*.14+equal(t,6)*.14+equal(t,7)*.18 +equal(t,8)*.12+equal(t,9)*.2;\n\nan=atan2(q8-.5,q7-.5);\nang=0+equal(t%2,0)*2*an;\nang=if(equal(t,6),-ang,ang);\n\nd=sqrt(sqr(q7-.5)+sqr(q8-.5));\na=above(1-d,0)*sqrt(1-d);\n\nx=t*(.5-q7)*.1617+q7;\ny=t*(.5-q8)*.1617+q8;","init_eqs_eel":"","frame_eqs_eel":"q8=-q8+1;\nt=(frame%6+4);\nsides=if(equal(t%2,0),6,60);\n\nr=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\ng=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\nb=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\n\nr2=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\ng2=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\nb2=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\n\nr=r+equal(t%2,1);\ng=g+equal(t%2,1);\nb=b+equal(t%2,1)*.7;\n\nr2=r2+equal(t%2,1);\ng2=g2+equal(t%2,1)*.8;\n\nrad=equal(t,4)*.1+equal(t,5)*.14+equal(t,6)*.14+equal(t,7)*.18 +equal(t,8)*.12+equal(t,9)*.2;\n\nan=atan2(q8-.5,q7-.5);\nang=0+equal(t%2,0)*2*an;\nang=if(equal(t,6),-ang,ang);\n\nd=sqrt(sqr(q7-.5)+sqr(q8-.5));\na=above(1-d,0)*sqrt(1-d);\n\nx=t*(.5-q7)*.1617+q7;\ny=t*(.5-q8)*.1617+q8;"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"additive":1,"smoothing":0},"init_eqs_str":"a.s=0;a.xp=0;a.yp=0;a.zp=0;a.t1=0;a.x_screen=0;a.y_screen=0;a.advance=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(24.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(47.4*a.s)+Math.cos(27.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.r=1;a.g=1;a.b=1;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_str":"a.bz=0;a.bx=0;a.q1=0;a.by=0;a.ax=0;a.vx=0;a.vy=0;a.vz=0;a.ay=0;a.q2=0;a.q3=0;a.az=0;","frame_eqs_str":"","point_eqs_str":"a.ax=5*(Math.sin(100*a.sample+1.865)+1)*Math.sin(1884.93*a.sample+3.14*a.sample);a.ay=5*(Math.sin(100*a.sample+5.23)+1)*Math.cos(200*6.2831*a.sample+3.14*a.sample+.1454);a.az=5*(Math.sin(100*a.sample+.234)+1)*Math.sin(400*6.2831*a.sample+3.14*a.sample+1.84);a.bx=a.ax;a.by=a.ay*Math.cos(a.q1)-a.az*Math.sin(a.q1);a.bz=a.ay*Math.sin(a.q1)+a.az*Math.cos(a.q1);a.ax=a.bx*Math.cos(a.q2)-a.bz*Math.sin(a.q2);a.ay=a.by;a.az=a.bx*Math.sin(a.q2)+a.bz*Math.cos(a.q2);a.bx=a.ax*Math.cos(a.q3)-\na.ay*Math.sin(a.q3);a.by=a.ax*Math.sin(a.q3)+a.ay*Math.cos(a.q3);a.bz=a.az;a.vx=a.bx;a.vy=a.by;a.vz=a.bz;a.x=div(a.vx,Math.abs(a.vz-10))+.5;a.y=div(a.vy,Math.abs(a.vz-10))+.5;a.a=.05*above(a.vz,0)*(5-Math.abs(a.az));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ax = 10*.5*(sin(100*sample+1.865)+1)*sin(300*6.2831*sample+3.14*sample);\nay = 10*.5*(sin(100*sample+5.23)+1)*cos(200*6.2831*sample+ 3.14*sample+.1454);\naz = 5*(sin(100*sample+.234)+1)*sin(400*6.2831*sample+3.14*sample+1.84);\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\na=above(vz,0)*(.05*(5-abs(az)))"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"smoothing":0,"g":0.5,"b":0.1},"init_eqs_str":"a.bz=0;a.bx=0;a.q1=0;a.by=0;a.ax=0;a.vx=0;a.vy=0;a.vz=0;a.ay=0;a.t=0;a.q2=0;a.q3=0;a.as=0;a.az=0;","frame_eqs_str":"","point_eqs_str":"a.t=above(Math.sin(125.662*a.sample+16*a.time),0);a.ax=(1.58+1.5*a.t*Math.abs(a.value1))*Math.cos(6.2831*a.sample);a.ay=1.3*(1.58+1.5*a.t*Math.abs(a.value2))*Math.sin(6.2831*a.sample);a.az=0;a.bx=a.ax;a.by=a.ay*Math.cos(a.q1)-a.az*Math.sin(a.q1);a.bz=a.ay*Math.sin(a.q1)+a.az*Math.cos(a.q1);a.ax=a.bx*Math.cos(a.q2)-a.bz*Math.sin(a.q2);a.ay=a.by;a.az=a.bx*Math.sin(a.q2)+a.bz*Math.cos(a.q2);a.bx=a.ax*Math.cos(a.q3)-a.ay*Math.sin(a.q3);a.by=a.ax*Math.sin(a.q3)+a.ay*Math.cos(a.q3);\na.bz=a.az;a.vx=a.bx;a.vy=a.by;a.vz=a.bz;a.x=div(a.vx,Math.abs(a.vz-10))+.5;a.y=div(a.vy,Math.abs(a.vz-10))+.5;a.as=above(Math.cos(a.q3+1.57)*Math.cos(a.q2)*a.vx+Math.sin(a.q3+1.57)*Math.sin(a.q1)*a.vy+Math.sin(a.q2)*a.vz,0);a.a=a.t*(.07*(1-a.as)+a.as);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t=above(sin(20*6.2831*sample+time*16),0);\nax = (1.58+1.5*t*abs(value1))*cos(6.2831*sample);\nay = 1.3*(1.58+1.5*t*abs(value2))*sin(6.2831*sample);\naz = 0;\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\nas=above(cos(q3+1.57)*cos(q2)*vx+sin(q3+1.57)*sin(q1)*vy+sin(q2)*vz,0);\na=t*(.07*(1-as)+as);"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"smoothing":0,"g":0.5,"b":0.1},"init_eqs_str":"a.bz=0;a.bx=0;a.q1=0;a.by=0;a.ax=0;a.vx=0;a.vy=0;a.vz=0;a.ay=0;a.t=0;a.q2=0;a.q3=0;a.as=0;a.az=0;","frame_eqs_str":"","point_eqs_str":"a.t=above(Math.sin(125.662*a.sample+16*a.time),0);a.ax=(1.58+1.5*a.t*Math.abs(a.value1))*Math.cos(6.2831*a.sample);a.ay=0;a.az=1.2*(1.58+1.5*a.t*Math.abs(a.value2))*Math.sin(6.2831*a.sample);a.bx=a.ax;a.by=a.ay*Math.cos(a.q1)-a.az*Math.sin(a.q1);a.bz=a.ay*Math.sin(a.q1)+a.az*Math.cos(a.q1);a.ax=a.bx*Math.cos(a.q2)-a.bz*Math.sin(a.q2);a.ay=a.by;a.az=a.bx*Math.sin(a.q2)+a.bz*Math.cos(a.q2);a.bx=a.ax*Math.cos(a.q3)-a.ay*Math.sin(a.q3);a.by=a.ax*Math.sin(a.q3)+a.ay*Math.cos(a.q3);\na.bz=a.az;a.vx=a.bx;a.vy=a.by;a.vz=a.bz;a.x=div(a.vx,Math.abs(a.vz-10))+.5;a.y=div(a.vy,Math.abs(a.vz-10))+.5;a.as=above(Math.cos(a.q3-1.57)*Math.cos(a.q2)*a.vx+Math.sin(a.q3-1.57)*Math.sin(a.q1)*a.vy+Math.sin(a.q2)*a.vz,0);a.a=a.t*(.07*(1-a.as)+a.as);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t=above(sin(20*6.2831*sample+time*16),0);\nax = (1.58+1.5*t*abs(value1))*cos(6.2831*sample);\nay = 0;\naz = 1.2*(1.58+1.5*t*abs(value2))*sin(6.2831*sample);\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\nas=above(cos(q3-1.57)*cos(q2)*vx+sin(q3-1.57)*sin(q1)*vy+sin(q2)*vz,0);\na=t*(.07*(1-as)+as);"}],"init_eqs_str":"a.movement=0;a.q1=0;","frame_eqs_str":"a.movement=a.movement+.1*Math.max(0,a.bass+a.bass_att-2)+.15*pow(a.bass,3)+.005;a.q1=a.movement;a.monitor=a.q1;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"movement = movement + 0.1*max(0,bass+bass_att-2) + 0.15*pow(bass,3) + 0.005;\nq1 = movement;\nmonitor =q1;","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - 0.5);\n  float tmpvar_5;\n  tmpvar_5 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_6;\n  tmpvar_6[uint(0)].x = cos(tmpvar_5);\n  tmpvar_6[uint(0)].y = sin(tmpvar_5);\n  tmpvar_6[1u].x = -(sin(tmpvar_5));\n  tmpvar_6[1u].y = cos(tmpvar_5);\n  uv6_2 = (tmpvar_4 * tmpvar_6);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_4)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_7;\n  tmpvar_7 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_8.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_8 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_8, tmpvar_8))\n   * tmpvar_7)));\n  ret_3 = (((crisp_1 - \n    (dot (tmpvar_7, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * 0.99) - 0.04);\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_8.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_3.x > (q21 * q3)) && (ret_3.x <= (q24 * q1)))) {\n    ret_3.y = (ret_3.y - (tmpvar_9.x * 0.5));\n  };\n  if (((ret_3.y > (q22 * q1)) && (ret_3.y <= (q25 * q2)))) {\n    ret_3.z = (ret_3.z - (tmpvar_9.y * 0.5));\n  };\n  if (((ret_3.z > (q23 * q2)) && (ret_3.z <= (q26 * q3)))) {\n    ret_3.x = (ret_3.x - (tmpvar_9.z * 0.5));\n  };\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_3;\n  ret = tmpvar_10.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (1.0 - uv.x);\n  tmpvar_2.y = uv.y;\n  vec3 tmpvar_3;\n  tmpvar_3 = vec3((texture (sampler_main, uv).x + texture (sampler_main, tmpvar_2).x));\n  vec2 tmpvar_4;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_blur1, uv);\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \n    ((tmpvar_5.xyz * scale1) + bias1)\n  .zzz).xy) + 0.5);\n  vec3 tmpvar_6;\n  tmpvar_6 = (tmpvar_3 + clamp ((\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    (1.0 - (tmpvar_3.x * 2.0))\n  ), 0.0, 1.0));\n  vec3 tmpvar_7;\n  tmpvar_7 = (tmpvar_6 + clamp ((\n    pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    (1.0 - (tmpvar_6.x * 2.0))\n  ), 0.0, 1.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = uv.x;\n  tmpvar_8.y = (1.0 - uv.y);\n  ret_1 = (pow (mix (\n    (vec3((((tmpvar_5.xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)) + (((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1).x + ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3).x))\n  , tmpvar_7, tmpvar_7), vec3(5.0, 1.0, 0.5)) + pow ((texture (sampler_main, tmpvar_8).yyy + texture (sampler_main, \n    (1.0 - uv)\n  ).yyy), vec3(0.6, 0.95, 5.0)));\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_4.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_1.x > (q26 * q13)) && (ret_1.x <= (q23 * q11)))) {\n    ret_1.z = (ret_1.z - (tmpvar_9.x * 0.5));\n  };\n  if (((ret_1.y > (q25 * q11)) && (ret_1.y <= (q22 * q12)))) {\n    ret_1.x = (ret_1.x - (tmpvar_9.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\n    ret_1.y = (ret_1.y - (tmpvar_9.z * 0.5));\n  };\n  ret_1 = (ret_1 - ((slow_roam_sin.xyz * roam_cos.zxy) * 0.5));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_1;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"float3 color, mus;\nfloat dx,dy;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\n\nfloat2 uv1 = (uv-.5);\nfloat2 uv6 = uv1;\n\nfloat rota = lum(tex2D (sampler_noise_hq,uv/4))*q31;\n\nuv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));\nuv6 += sin(q32*uv1);\nmus = .2/(sqrt(uv6.x)+.2);\n\nmus *= float3 (1.1,1,.95);\nmus *= .9+.1*tex2D (sampler_noise_hq,uv);\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (0.005,0);\nfloat2 ver = float2 (0,.005);\n\nfloat dx = lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\n\nfloat2 zz = float2 (dx,dy);\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\nfloat3 crisp2 = tex2D(sampler_main,uv);\ncrisp += crisp2/2;\ncrisp *= .67;\ncrisp +=.08 * mus - length(zz)*blur;\n\nfloat3 ret1 = crisp - lum(blur)*.04;\nret = ret1 * .99 -  .04 ;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((zz.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q3         && ret.x<= q24*q1        )ret.y -= (noise9).x*.5; \nif(ret.y> q22*q1         && ret.y<= q25*q2        )ret.z -= (noise9).y*.5; \nif(ret.z> q23*q2         && ret.z<= q26*q3        )ret.x -= (noise9).z*.5; \n}","comp_hlsl":"shader_body\n{\n\n\n\nfloat2 uva = uv;\nfloat2 uvb = float2(1-uv.x,uv.y);\n\nret = tex2D(sampler_main, uva).x + tex2D(sampler_main, uvb).x;\n\nfloat3 blurs = GetBlur1(uva).x + GetBlur3(uva).x;\nblurs += GetBlur1(uvb).x + GetBlur3(uvb).x;\n\n\nfloat2 uv3 = (uv-.5)*(1-GetBlur1(uv).zzz)+.5;\nret += saturate(pow(tex2D(sampler_main, uv3).zzz,.5)*(1-ret.x*2)),\nret += saturate(pow(GetBlur1(uv3).zzz,.5)*(1-ret.x*2)),\n\n\nret = lerp (\nblurs,\nret,\npow(ret,1));\n\nret = pow(ret,float3(5,1,.5));\n\nret += pow(tex2D(sampler_main, float2(uv.x,1-uv.y)).yyy+tex2D(sampler_main, 1-uv).yyy,float3(.6,.95,5));\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv3.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \n\nret-=slow_roam_sin*roam_cos.zxy*.5;\n\n}"}