{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":1,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wave_a":0,"wave_scale":50,"modwavealphastart":0.01,"modwavealphaend":0.01,"warpanimspeed":0.037,"warpscale":0.015,"zoomexp":1.22019,"warp":0.033,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.09,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":15,"thickoutline":1,"rad":0.28,"ang":0.27,"r":0.1,"g":0.1,"b":0.1,"a":0.1,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.a=.1+.1*a.mid;","init_eqs_eel":"","frame_eqs_eel":"a=0.1+(0.1*mid);\t"},{"baseVals":{"enabled":1,"sides":20,"additive":1,"thickoutline":1,"x":0.2,"y":0,"rad":3,"ang":0.27,"r":0,"a":0.039,"r2":0.2,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.rad=2*a.bass;a.r=Math.min(Math.sin(1-a.time),1);a.g=1-Math.min(Math.sin(3.14*(1-a.r)),1);a.b=Math.min(Math.abs(Math.sin(2-a.g-a.r)),1);","init_eqs_eel":"","frame_eqs_eel":"rad=bass*2;\nr=min(sin(1-time),1);\ng=1-min(sin((1-r)*3.14),1);\nb=min(abs(sin(2-g-r)),1);"},{"baseVals":{"enabled":1,"sides":20,"additive":1,"x":0.1,"y":0.9,"rad":3,"ang":0.27,"r":0.1,"a":0.04,"r2":0.1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.rad=2*a.treb;a.r=Math.min(Math.abs(Math.sin(a.time-.6)),1);a.g=1-Math.min(Math.abs(Math.sin(3.14*(1-a.r))),1);a.b=Math.min(Math.abs(Math.sin(1-a.g)),1);","init_eqs_eel":"","frame_eqs_eel":"rad=treb*2;\nr=min(abs(sin(time-0.6)),1);\ng=1-min(abs(sin((1-r)*3.14)),1);\nb=min(abs(sin(1-g)),1);"},{"baseVals":{"enabled":1,"sides":20,"additive":1,"y":0.9,"ang":1.58,"r":0.8,"g":0.8,"b":0.8,"a":0.8,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.xcorr=0;a.xq=0;a.ys=0;a.zq=0;a.zp=0;","frame_eqs_str":"a.xp=.53129;a.yp=.25;a.xcorr=.18*a.yp+.3;a.ang=150*a.time;a.xq=a.xp*Math.sin(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang);a.xp=a.xq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);a.yp=a.yq;a.zp=a.xq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.zq+=3.14;a.xs=div(a.xq,a.zq);a.ys=div(a.yq,a.zq);a.x=Math.min(Math.abs(5*a.xs-a.xcorr),1);a.y=Math.min(Math.abs(1.3*a.ys+.5),1);a.r=Math.min(Math.abs(Math.sin(a.time)),\n1);a.g=1-Math.min(Math.abs(Math.sin(3.14*(1-a.r))),1);a.b=Math.min(Math.abs(Math.sin(1-a.g)),1);a.rad=.05*(a.bass+a.mid+a.treb+2);","init_eqs_eel":"","frame_eqs_eel":"xp=0.53129;\nyp=0.25;\nxcorr=yp*0.18+0.3;\nang=time*150;\nxq=xp*sin(ang);\nyq=yp;\nzq=xp*cos(ang);\nxp=xq*sin(ang)+zq*cos(ang);\nyp=yq;\nzp=xq*cos(ang)-zq*sin(ang);\nxq=xp;\nyq=yp*sin(ang)+zp*cos(ang);\nzq=yp*cos(ang)-zp*sin(ang);\nzq=zq+3.14;\nxs=xq/zq;\nys=yq/zq;\nx=min(abs(xs*5-xcorr),1);\ny=min(abs(ys*1.3+0.5),1);\nr=min(abs(sin(time)),1);\ng=1-min(abs(sin((1-r)*3.14)),1);\nb=min(abs(sin(1-g)),1);\nrad=(bass+mid+treb+2)*0.05;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.vol=0;a.mtime=0;a.q1=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.decay=1;a.zoom=.95+.075*Math.max(a.treb_att,a.bass_att);a.warp=0;a.vol=.25*(a.bass_att+a.mid_att+a.treb_att);a.vol*=a.vol;a.mtime+=.1*a.vol;a.q1=.4*a.mtime-.05*a.time;","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"decay=1;\nzoom=0.95+.075*max(treb_att,bass_att);\n\nwarp = 0;\n\nvol=(bass_att+mid_att+treb_att)*0.25;\nvol=vol*vol;\nmtime=mtime+vol*0.1;\n\nq1=mtime*0.4-.05*time;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  ret_1.x = texture (sampler_main, (tmpvar_2 + 0.5)).x;\n  ret_1.y = texture (sampler_main, ((tmpvar_2 * 0.98) + 0.5)).y;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_3.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_3.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_3.z * 0.5));\n  };\n  ret_1.z = texture (sampler_main, (((uv - 0.5) * 0.95) + 0.5)).z;\n  vec3 tmpvar_4;\n  tmpvar_4.x = -(ret_1.x);\n  tmpvar_4.y = (ret_1.x - ret_1.y);\n  tmpvar_4.z = (ret_1.y - ret_1.z);\n  ret_1 = ((ret_1 + (tmpvar_4 * 0.03)) + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 3.0));\n  ret_1 = (ret_1 * (0.95 + (\n    sin(mid)\n   * 0.05)));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  float ang2_1;\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\n  ang2_1 = (cos((50.26548 * ang2_1)) * 0.023);\n  ang2_1 = (ang2_1 * 6.283185);\n  vec2 tmpvar_2;\n  tmpvar_2.x = cos(ang2_1);\n  tmpvar_2.y = sin(ang2_1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = texture (sampler_main, (0.5 + ((\n    (0.375 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\n   * tmpvar_2) * texsize.zw))).xyz;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n    ret.x = tex2D( sampler_main, (uv-0.5)*1.00+0.5 ).x;\n    ret.y = tex2D( sampler_main, (uv-0.5)*0.98+0.5 ).y;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n    ret.z = tex2D( sampler_main, (uv-0.5)*0.95+0.5 ).z;\n    \n    // .x = fastest layer, .z = slowest\n    // slowly shift stuff toward the front, over time:\n    ret += float3(-ret.x,ret.x-ret.y,ret.y-ret.z)*0.03, (bass_att-1)*0.1;\n     \n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*3;\n\n    // darken over time\n//    ret -= 0.003;\n    //ret *= 0.99;\n    //ret *= 0.97*saturate( length(uv - uv_orig)*200 );  // center only\nret = ret * (0.95 + (sin(mid)*0.05));\n}","comp_hlsl":"shader_body\n{\n    float rad_lq = rad * length(texsize.xy)*0.5;\n    float ang_lq = ang;\n    float2 uv_temp1 = (uv - 0.5) * texsize.xy;\n    float rad_hq = length(uv_temp1);\n    float ang_hq = atan2(-uv_temp1.y, uv_temp1.x);\n\n    float2 uv2 = (uv - 0.5);\n    float rad2 = rad_lq*0.75;\n    float ang2 = ang_lq * M_INV_PI_2;\n\n        // ROTATION OVER TIME\n        ang2 += time*0.025;   //rotate over time\n\n        // FIN TYPE\n        float fins = 8;//3 + floor(rand_preset.z*5.95);\n        ang2 = cos(ang2*M_PI_2*fins) * 0.023;\n\n\n    ang2 *= M_PI_2;\n    uv2 = 0.5 + rad2*float2(cos(ang2),sin(ang2))*texsize.zw;\n\n    ret = tex2D(sampler_main, uv2).xyz;\n    ret *= 1.0; // a little bit of overbright\n}"}