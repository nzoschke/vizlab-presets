{"version":2,"baseVals":{"rating":5,"gammaadj":2.693,"decay":0.97,"echo_zoom":1.628,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":3.138,"zoomexp":2.00676,"fshader":1,"zoom":1.033,"warp":0.12262,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":1.46815,"tex_zoom":0.63904,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.1*a.time;a.sides=Math.floor(Math.abs(7*Math.sin(.5*a.time)));","init_eqs_eel":"","frame_eqs_eel":"ang=time*.1;\n\nsides=int(abs(sin(time*.5)*7));"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"rad":0.02743,"a":0.05,"r2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.1*a.time;a.r=.7+.3*Math.sin(a.time);a.g=.7+.3*Math.cos(a.time);a.b=.7+.3*Math.sin(a.time+.12);a.rad+=a.treb_att*a.bass_att*.5;a.x=.5+.5*Math.sin(a.time);","init_eqs_eel":"","frame_eqs_eel":"ang=time*.1;\n\nr=.7+(sin(time)*.3);\ng=.7+(cos(time)*.3);\nb=.7+(sin(time+.12)*.3);\n\nrad=rad+(treb_att*bass_att*.5);\nx=.5+(sin(time)*.5);"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"rad":0.02508,"a":0.05,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.25*a.time;a.g=.7+.3*Math.sin(a.time);a.b=.7+.3*Math.cos(a.time);a.r=.7+.3*Math.sin(a.time+.12);a.r2=.7+.3*Math.sin(a.time);a.g2=.7+.3*Math.cos(a.time);a.b2=.7+.3*Math.sin(a.time+.12);a.rad+=a.treb_att*a.bass_att*.5;a.y=.5+.25*Math.sin(a.time);","init_eqs_eel":"","frame_eqs_eel":"ang=time*.25;\n\ng=.7+(sin(time)*.3);\nb=.7+(cos(time)*.3);\nr=.7+(sin(time+.12)*.3);\n\nr2=.7+(sin(time)*.3);\ng2=.7+(cos(time)*.3);\nb2=.7+(sin(time+.12)*.3);\n\nrad=rad+(treb_att*bass_att*.5);\ny=.5+(sin(time)*.25);"},{"baseVals":{"additive":1,"textured":1,"rad":2.66717,"tex_zoom":0.60804,"a":0.1,"a2":0.01,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"a.branch=0;a.wx=0;a.sc=0;a.wy=0;a.d=0;a.wainc=0;a.wa=0;","frame_eqs_str":"","point_eqs_str":"a.branch=Math.floor(rand(2));a.wx=.00001<Math.abs(equal(a.sc,0))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,0))?0:a.wy;a.wx=.00001<Math.abs(equal(a.sc,1))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,1))?.1:a.wy;a.d=.00001<Math.abs(below(a.sc,2))?.3:.7*a.d;a.wainc=.00001<Math.abs(equal(a.branch,1))?.2+Math.sin(a.time):-.2;a.wa=.00001<Math.abs(below(a.sc,2))?1.57079635:a.wa+a.wainc;a.wx=.00001<Math.abs(above(a.sc,2))?a.wx+Math.cos(a.wa)*a.d:a.wx;a.wy=.00001<Math.abs(above(a.sc,2))?a.wy+\nMath.sin(a.wa)*a.d:a.wy;a.sc=.00001<Math.abs(equal(a.sc,11))?0:a.sc+1;a.a=.00001<Math.abs(below(a.sc,2))?0:.1;a.x=a.wx;a.y=a.wy;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\n\n//base\nwx=if(equal(sc,0),.5,wx);\nwy=if(equal(sc,0),0,wy);\n\nwx=if(equal(sc,1),.5,wx);\nwy=if(equal(sc,1),.1,wy);\n\n//calculate previous branch length\nd=if(below(sc,2),.3,.7*d);\n\n//angle\nwainc=if(equal(branch,1),.2+sin(time),-.2);\n\nwa=if(below(sc,2),3.1415927*.5,wa+wainc);\n\n//branches\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\n\n//sample count\nsc=if(equal(sc,11),0,sc+1);\n\na=if(below(sc,2),0,.1);\n\nx=wx;\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"a.branch=0;a.wx=0;a.sc=0;a.wy=0;a.d=0;a.wainc=0;a.wa=0;","frame_eqs_str":"","point_eqs_str":"a.branch=Math.floor(rand(2));a.wx=.00001<Math.abs(equal(a.sc,0))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,0))?1:a.wy;a.wx=.00001<Math.abs(equal(a.sc,1))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,1))?.9:a.wy;a.d=.00001<Math.abs(below(a.sc,2))?.3:.7*a.d;a.wainc=.00001<Math.abs(equal(a.branch,1))?.2+Math.sin(a.time):-.2;a.wa=.00001<Math.abs(below(a.sc,2))?4.71238905:a.wa+a.wainc;a.wx=.00001<Math.abs(above(a.sc,2))?a.wx+Math.cos(a.wa)*a.d:a.wx;a.wy=.00001<Math.abs(above(a.sc,2))?a.wy+\nMath.sin(a.wa)*a.d:a.wy;a.sc=.00001<Math.abs(equal(a.sc,11))?0:a.sc+1;a.a=.00001<Math.abs(below(a.sc,2))?0:.1;a.x=a.wx;a.y=a.wy;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\n\n//base\nwx=if(equal(sc,0),.5,wx);\nwy=if(equal(sc,0),1,wy);\n\nwx=if(equal(sc,1),.5,wx);\nwy=if(equal(sc,1),.9,wy);\n\n//calculate previous branch length\nd=if(below(sc,2),.3,.7*d);\n\n//angle\nwainc=if(equal(branch,1),.2+sin(time),-.2);\n\nwa=if(below(sc,2),3.1415927*1.5,wa+wainc);\n\n//branches\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\n\n//sample count\nsc=if(equal(sc,11),0,sc+1);\n\na=if(below(sc,2),0,.1);\n\nx=wx;\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"a.branch=0;a.wx=0;a.sc=0;a.wy=0;a.d=0;a.wainc=0;a.wa=0;","frame_eqs_str":"","point_eqs_str":"a.branch=Math.floor(rand(2));a.wx=.00001<Math.abs(equal(a.sc,0))?0:a.wx;a.wy=.00001<Math.abs(equal(a.sc,0))?.5:a.wy;a.wx=.00001<Math.abs(equal(a.sc,1))?.1:a.wx;a.wy=.00001<Math.abs(equal(a.sc,1))?.5:a.wy;a.d=.00001<Math.abs(below(a.sc,2))?.3:.7*a.d;a.wainc=.00001<Math.abs(equal(a.branch,1))?.25+Math.cos(a.time):-.25;a.wa=.00001<Math.abs(below(a.sc,2))?6.2831854:a.wa+a.wainc;a.wx=.00001<Math.abs(above(a.sc,2))?a.wx+Math.cos(a.wa)*a.d:a.wx;a.wy=.00001<Math.abs(above(a.sc,2))?\na.wy+Math.sin(a.wa)*a.d:a.wy;a.sc=.00001<Math.abs(equal(a.sc,11))?0:a.sc+1;a.a=.00001<Math.abs(below(a.sc,2))?0:.1;a.x=a.wx;a.y=a.wy;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\n\n//base\nwx=if(equal(sc,0),0,wx);\nwy=if(equal(sc,0),.5,wy);\n\nwx=if(equal(sc,1),.1,wx);\nwy=if(equal(sc,1),.5,wy);\n\n//calculate previous branch length\nd=if(below(sc,2),.3,.7*d);\n\n//angle\nwainc=if(equal(branch,1),.25+cos(time),-.25);\n\nwa=if(below(sc,2),3.1415927*2,wa+wainc);\n\n//branches\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\n\n//sample count\nsc=if(equal(sc,11),0,sc+1);\n\na=if(below(sc,2),0,.1);\n\nx=wx;\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"a.branch=0;a.wx=0;a.sc=0;a.wy=0;a.d=0;a.wainc=0;a.wa=0;","frame_eqs_str":"","point_eqs_str":"a.branch=Math.floor(rand(2));a.wx=.00001<Math.abs(equal(a.sc,0))?1:a.wx;a.wy=.00001<Math.abs(equal(a.sc,0))?.5:a.wy;a.wx=.00001<Math.abs(equal(a.sc,1))?.9:a.wx;a.wy=.00001<Math.abs(equal(a.sc,1))?.5:a.wy;a.d=.00001<Math.abs(below(a.sc,2))?.3:.7*a.d;a.wainc=.00001<Math.abs(equal(a.branch,1))?.25+Math.cos(a.time):-.25;a.wa=.00001<Math.abs(below(a.sc,2))?3.1415927:a.wa+a.wainc;a.wx=.00001<Math.abs(above(a.sc,2))?a.wx+Math.cos(a.wa)*a.d:a.wx;a.wy=.00001<Math.abs(above(a.sc,2))?\na.wy+Math.sin(a.wa)*a.d:a.wy;a.sc=.00001<Math.abs(equal(a.sc,11))?0:a.sc+1;a.a=.00001<Math.abs(below(a.sc,2))?0:.1;a.x=a.wx;a.y=a.wy;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\n\n//base\nwx=if(equal(sc,0),1,wx);\nwy=if(equal(sc,0),.5,wy);\n\nwx=if(equal(sc,1),.9,wx);\nwy=if(equal(sc,1),.5,wy);\n\n//calculate previous branch length\nd=if(below(sc,2),.3,.7*d);\n\n//angle\nwainc=if(equal(branch,1),.25+cos(time),-.25);\n\nwa=if(below(sc,2),3.1415927*1,wa+wainc);\n\n//branches\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\n\n//sample count\nsc=if(equal(sc,11),0,sc+1);\n\na=if(below(sc,2),0,.1);\n\nx=wx;\ny=wy;"}],"init_eqs_str":"a.dx_residual=0;a.dy_residual=0;a.bass_thresh=0;","frame_eqs_str":"a.wave_r=1;a.wave_g=0;a.wave_b=0;a.rot+=.01*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.cx+=.21*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.21*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.dx+=.003*(.6*Math.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.dy+=.003*(.6*Math.sin(.284*a.time)+.4*Math.sin(.247*a.time));a.decay-=.01*equal(mod(a.frame,6),0);a.dx+=a.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,\na.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.016*equal(a.bass_thresh,2.13)*Math.sin(7*a.time)+(1-equal(a.bass_thresh,2.13))*a.dx_residual;a.dy_residual=.012*equal(a.bass_thresh,2.13)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2.13))*a.dy_residual;a.wave_x-=7*a.dx_residual;a.wave_y-=7*a.dy_residual;a.wave_mystery=.03*a.time;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = 1;\nwave_g = 0;\nwave_b = 0;\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\ndecay = decay - 0.01*equal(frame%6,0);\ndx = dx + dx_residual;\ndy = dy + dy_residual;\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\nwave_x = wave_x - dx_residual*7;\nwave_y = wave_y - dy_residual*7;\nwave_mystery = time*0.03;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  uv_1.y = uv.y;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = roam_cos.x;\n  tmpvar_3.y = roam_sin.x;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize_noise_lq.zw * texsize.xy);\n  uv_1.x = (uv.x + ((0.02 * \n    ((texture (sampler_noise_lq, ((\n      (0.1 * tmpvar_4)\n     * uv) + (tmpvar_3 * 0.1))).y * 2.0) - 1.0)\n  ) * aspect.x));\n  vec2 tmpvar_5;\n  tmpvar_5.x = roam_sin.y;\n  tmpvar_5.y = -(roam_cos.y);\n  uv_1.x = (uv_1.x + ((0.04 * \n    ((texture (sampler_noise_lq, ((\n      (0.0125 * tmpvar_4)\n     * uv_1) + (tmpvar_5 * 0.03))).z * 2.0) - 1.0)\n  ) * aspect.x));\n  ret_2 = (texture (sampler_main, uv_1).xyz * vec3(0.99, 0.98, 0.97));\n  ret_2 = (ret_2 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).x - 0.5)\n   / 256.0) * 2.0));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  float tmpvar_1;\n  tmpvar_1 = abs(((\n    fract((((ang / 6.28) * 7.0) + (time * 0.05)))\n   * 2.0) - 1.0));\n  vec2 tmpvar_2;\n  tmpvar_2.x = cos(tmpvar_1);\n  tmpvar_2.y = sin(tmpvar_1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (-0.3 + (1.7 * texture (sampler_main, (0.5 + \n    ((pow (rad, 0.5) * 0.5) * tmpvar_2)\n  )).xyz));\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"// to access a texture on disk: make a sampler.  This example loads \"noise_lq.{tga/jpg/etc}\".\n\n     // auto-binds; .xy = (w,h); .zw = (1/w,1/h)\n\nshader_body \n{\n    uv.x += 0.02 * (tex2D( sampler_noise_lq, \n                         uv*0.050*texsize_noise_lq.zw*texsize.xy*2\n                         + float2(roam_cos.x,roam_sin.x)*0.1 ).y*2-1)*aspect.x;\n    uv.x += 0.04 * (tex2D( sampler_noise_lq, \n                         uv*0.025*texsize_noise_lq.zw*texsize.xy*0.5\n                         + float2(roam_sin.y,-roam_cos.y)*0.03  ).z*2-1)*aspect.x;\n\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // darken over time\n    // cool idea: different falloff rates for the 3 colors-\n    ret *= float3(0.99,0.98,0.97);\n\n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret.xyz += (tex2D(sampler_noise_lq, dither_uv).x-0.5)/256.0*2; \n}","comp_hlsl":"shader_body\n{\n  //rad = frac(rad*2);\n  rad = pow(rad,0.5)*1;\n\n\n  float ang2 = frac(ang/6.28*7 + time*0.05);\n  ang2 = abs(ang2*2-1);\n  float2 uv2 = 0.5 + rad*0.5*float2(cos(ang2),sin(ang2));    \n\n  uv = uv2;\n  //uv = lerp(uv, uv2, 0.5 + 0.5*cos(ang + time*3));\n\n\n  ret = tex2D(sampler_main, uv).xyz;\n\n  //ret = lum(ret);\n  //ret = pow(ret,float3(0.7,1.3,1.6));\n\n  ret = -0.3 + 1.7*ret;\n}\n\n"}