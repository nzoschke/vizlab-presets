{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":10.437,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":32,"mv_y":24,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0.1,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"rad":0.53328,"tex_ang":1.00531,"tex_zoom":45.1115,"r":0.5,"g":1,"b":0.9,"r2":0.83,"g2":0.93,"b2":0.8,"a2":1,"border_b":0,"border_a":0.5,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":0.4,"rad":2.36696,"tex_ang":3.45575,"tex_zoom":0.99305,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a2 =0;a = 0;\na = q24/2;","init_eqs_eel":"","frame_eqs_eel":"a2 =0;a = 0;\na = q24/2;"},{"baseVals":{"sides":100,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = int(rand(10))/10;\ny = int(rand(10))/10;\n\nr = int(rand(50))/50;\ng = int(rand(50))/50;\nb = int(rand(50))/50;\n\nr2 = 1;\ng2 = 1;\nb2 = 1;\n\na = min(q21/2 ,1);\na = .5;\nrad = a*a/16 ;\na2 = .5;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(10))/10;\ny = int(rand(10))/10;\n\nr = int(rand(50))/50;\ng = int(rand(50))/50;\nb = int(rand(50))/50;\n\nr2 = 1;\ng2 = 1;\nb2 = 1;\n\na = min(q21/2 ,1);\na = .5;\nrad = a*a/16 ;\na2 = .5;"},{"baseVals":{"textured":1,"x":0.49,"rad":0.84592,"tex_zoom":0.68039,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0.5,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"k1 = (sample*100)%8;\nk2 = bnot (k1);\nxi = value1*k2 + xi*(1-k2);\nyi = value2*(1-k2) + yi*k2;\n\ndx = dx*.99 + xi;\ndy = dy*.99 + yi;\n\nx = .5 + xi/2;\ny = .5 + yi/2;\n\na = q22/8; \na = min(a,.2);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"k1 = (sample*100)%8;\nk2 = bnot (k1);\nxi = value1*k2 + xi*(1-k2);\nyi = value2*(1-k2) + yi*k2;\n\ndx = dx*.99 + xi;\ndy = dy*.99 + yi;\n\nx = .5 + xi/2;\ny = .5 + yi/2;\n\na = q22/8; \na = min(a,.2);"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"xi = int(rand(100))/100;\nyi = int(rand(100))/100;\n\nx = xi; y = yi;\n\na = q21/15;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = int(rand(100))/100;\nyi = int(rand(100))/100;\n\nx = xi; y = yi;\n\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.q25=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.q1=0;a.dec_med=0;a.index3=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.t_rel=0;a.dec_slow=0;a.q10=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.p3=0;a.q3=0;a.t0=0;a.ds=0;a.q28=0;a.q30=0;a.q20=0;a.p4=0;a.indexa=0;","frame_eqs_str":"a.dec_med=pow(.7,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.beat=a.bass+a.mid+a.treb;a.beat*=a.beat;a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,-1.2*a.avg+a.peak)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.indexa+a.is_beat,8);a.index3=mod(a.index2+a.is_beat*bnot(a.index),2);\na.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass_att+a.mid_att+a.treb_att+1;a.q27=a.index+1;a.q28=a.index2;a.q29=2*(mod(a.index2,2)-.5);a.k1=a.is_beat*equal(mod(a.index,2),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.ds=a.ds*a.dec_med+a.q24*(1-a.dec_med);a.q25=a.q24;a.q10=above(a.q2,.5);a.t_rel=8*a.time;a.p3=a.p3*a.dec_med+(1-a.dec_med)*(100*a.index+\n0*a.q26);a.q30=a.p3;a.p4=a.dec_med*a.p4+(1-a.dec_med)*a.q27;a.q31=a.p4;a.zoom=1;a.warp=0;","pixel_eqs_str":"a.zoom=1.2;","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \n\nbeat = bass+mid+treb;\nbeat = beat*beat;\n\navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, -1.2*avg+peak) * above (time, t0+.1);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (indexa + is_beat) %8;\nindex3 = (index2 + is_beat*bnot(index))%2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att + 1;\nq27 = index + 1;\nq28 = index2;\n\nq29 = ((index2%2)-.5)*2;\n\nk1 =  is_beat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nds = ds*dec_med + q24*(1-dec_med);\nq25 = q24;\n//q25 = above(ds,.5);\n\nq10 = above (q2,.5);\n\nt_rel = time*8;\n//q25 = below((t_rel)-int(t_rel),.2);\n\n\np3 = p3*dec_med + (1-dec_med) * (100*index + .0*q26);\nq30 = p3 ;\n\np4 = dec_med*p4 + (1-dec_med)*q27;\nq31 = p4;\n\nzoom = 1.0;\nwarp = 0;","pixel_eqs_eel":"zoom = 1.2;","warp":"","comp":"vec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers2;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_3 = (1.0 - fract(q30));\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 4.0);\n  xlat_mutableneu = texture (sampler_main, fract(((\n    ((3.0 * abs((\n      fract((uv_1 + 0.5))\n     - 0.5))) * dist_3)\n   + q29) + q31))).xyz;\n  xlat_mutableneu = (xlat_mutableneu * vec3(greaterThanEqual (xlat_mutableneu, vec3(0.0, 0.0, 0.0))));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\n  dist_3 = (1.0 - fract((0.5 + q30)));\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 4.0);\n  xlat_mutableneu = texture (sampler_main, fract(((\n    ((3.0 * abs((\n      fract((uv_1 + 0.5))\n     - 0.5))) * dist_3)\n   + q29) + q31))).xyz;\n  xlat_mutableneu = (xlat_mutableneu * vec3(greaterThanEqual (xlat_mutableneu, vec3(0.0, 0.0, 0.0))));\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  dist_3 = (1.0 - fract((1.0 + q30)));\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 4.0);\n  xlat_mutableneu = texture (sampler_main, fract(((\n    ((3.0 * abs((\n      fract((uv_1 + 0.5))\n     - 0.5))) * dist_3)\n   + q29) + q31))).xyz;\n  xlat_mutableneu = (xlat_mutableneu * vec3(greaterThanEqual (xlat_mutableneu, vec3(0.0, 0.0, 0.0))));\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  xlat_mutablers2 = ((0.3 * cos(\n    (uv_1 * 16.0)\n  )) - xlat_mutableret1.xy);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ((-0.1 * xlat_mutableret1) + ((\n    ((2.0 * (clamp (\n      (0.05 / sqrt(dot (xlat_mutablers2, xlat_mutablers2)))\n    , 0.0, 1.0) * (1.0 + \n      (q22 / 4.0)\n    ))) * (0.4 + (4.0 * xlat_mutableret1)))\n   * \n    (1.0 + roam_cos)\n  .xyz) / 2.0));\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"","comp_hlsl":"float3 ret1, neu;\nfloat2 rs,rs2,uv1,rsk,Kugel1,dz1,uv4;\nfloat rad1, mask1;\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5 ;\nuv *= aspect.xy;    \n\n\nfloat dist = 1;\nfloat inten = 1;\nret1 = 0;\nint anz = 2;\nfloat n = 0;\nwhile (n <= anz) {\n    uv2 =  abs(frac(uv+.5)-.5) ;\n    dist = 1-frac(1.0/anz*n+q30); //evtl sqrt !\n    inten =  sqrt(dist)*(1-dist)*4;\n    float2 uv3 =  frac(3*uv2*dist+q29+q31);\n    neu = 1*GetPixel(uv3) +GetBlur3(uv3*1.1)*0;\n    neu *= (neu >= 0);\n    ret1 = max(ret1,neu*inten);\nn++;\n}\n\n\nrs2 = .3*cos(uv*16+0*time) -  (ret1);\nfloat dots = saturate(.05/length(rs2))*(1+q22/4) ;\n\nret = -0.1*ret1 + 2*dots*(.4+4*ret1)*(1+roam_cos)/2 ;\n}"}