{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.994,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":100,"wave_scale":9.365,"wave_smoothing":0.216,"warpanimspeed":100,"warpscale":0.011,"zoomexp":1.25486,"zoom":1.19729,"rot":0.01,"warp":0.3442,"sy":0.90529,"wave_r":0.8,"wave_g":0.8,"wave_b":0.8,"ob_size":0,"ob_a":0.5,"ib_size":0.5,"ib_r":0.6,"ib_g":0.3,"ib_b":0.5,"mv_x":64,"mv_y":48,"mv_l":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mymovement=0;a.dav0=0;a.dav1=0;a.dav2=0;a.dav3=0;","frame_eqs_str":"a.dav0=a.bass*a.time;a.dav1=2E7;a.dav2=.9*a.dav1;a.dav3=1.1*a.dav1;a.wave_r+=.6*Math.sin(a.dav1*a.dav0)+.4*Math.sin(a.dav1*a.dav0);a.wave_g+=.6*Math.sin(a.dav2*a.dav0)+.4*Math.sin(a.dav2*a.dav0);a.wave_b+=.6*Math.sin(a.dav3*a.dav0)+.4*Math.sin(a.dav3*a.dav0);a.wave_mystery=.5*Math.sin(.35*a.bass);a.decay-=.01*equal(mod(a.frame,10),0);","pixel_eqs_str":"a.zoom+=.1*(1+a.rad+.5*a.bass);a.mymovement=Math.sin(Math.sin(1.211*a.time)+.3*Math.cos(.887*a.time)-.4*Math.sin(1.453*a.time));a.rot-=.15*Math.sin(a.mymovement-a.ang);","init_eqs_eel":"","frame_eqs_eel":"dav0 = bass*time;\ndav1 = 100000*200;\ndav2 = dav1*0.9;\ndav3 = dav1*1.1;\nwave_r = wave_r +1*( 0.60*sin(dav1*dav0) + 0.40*sin(dav1*dav0) );\nwave_g = wave_g + 1*( 0.60*sin(dav2*dav0) + 0.40*sin(dav2*dav0) );\nwave_b = wave_b + 1*( 0.60*sin(dav3*dav0) + 0.40*sin(dav3*dav0) );\nwave_mystery = 0.5*sin(0.35*bass);\ndecay = decay - 0.01*equal(frame%10,0);","pixel_eqs_eel":"zoom = zoom + (0.1*(1+rad+0.5*bass));\nmymovement = sin(sin(1.211*time)+ 0.3*cos(0.887*time)- 0.4*sin(1.453*time));\nrot = rot - 0.15*sin(mymovement-ang);","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + ((0.004 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ).xy * vec2(0.0, 1.0)));\n  uv6_2 = (0.4 * sin((\n    (((uv - 0.5) * aspect.xy) * 18.0)\n   * rand_frame.xy)));\n  vec3 tmpvar_3;\n  tmpvar_3.x = (treb * 0.5);\n  tmpvar_3.y = (bass * 0.5);\n  tmpvar_3.z = (mid * 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.15 * (vec3((0.051 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * tmpvar_3))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 uv3_1;\n  vec3 noise_2;\n  uv3_1.x = (0.5 - texture (sampler_noise_hq, vec2((uv.x + q4)))).x;\n  uv3_1.y = (0.5 - texture (sampler_noise_hq, vec2((uv.y + q3)))).x;\n  uv3_1.z = 1.0;\n  uv3_1.x = (uv3_1.x * (0.5 * q2));\n  uv3_1.y = (uv3_1.y * (0.5 * q1));\n  noise_2 = (vec3(0.5, 0.5, 0.5) * normalize((texture (sampler_noise_hq, uv3_1.xy) * texture (sampler_main, uv))).xyz);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (texture (sampler_main, noise_2.xy).xyz * (texture (sampler_noise_hq, noise_2.xy) + texture (sampler_fc_main, uv)).xyz);\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;\n\n\nuv6 = .4*sin(uv1*18*rand_frame);\nmus = .051/(length(uv6));\nmus *= float3 (treb*.5,bass*.5,mid*.5);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .15*mus;\nfloat2 uv2 = (uv_orig-.5)-float3(bass*.1,treb*.1+0.1*q25,mid*.1);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"shader_body\n{\nfloat3 ret2 = tex2D(sampler_main, uv);\nfloat3 noise = .5;\nfloat2 uv2 = 0;\nfloat3 uv3 = 0;\nfloat bl = GetBlur2(uv);\nfloat3 foreground = 0;\n\nuv2.x=1-tex2D(sampler_noise_hq, uv.x);\nuv2.y=1-tex2D(sampler_noise_hq, uv.y);\nuv2.x*=q1;\nuv2.y*=q2;\n\nuv3.x=.5-tex2D(sampler_noise_hq, uv.x+q4);\nuv3.y=.5-tex2D(sampler_noise_hq, uv.y+q3);\nuv3.z=1;\n\nuv3.x*=.5*q2;\nuv3.y*=.5*q1;\n\nnoise *= normalize(tex2D(sampler_noise_hq, uv3.xy-foreground)*tex2D(sampler_main, uv));\n\nforeground=(tex2D(sampler_noise_hq, noise)+tex2D(sampler_fc_main, uv));\n\nret = tex2D(sampler_main, noise)*foreground;\n\n}"}