{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.994,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":100,"wave_scale":9.365,"wave_smoothing":0.216,"warpanimspeed":100,"warpscale":0.011,"zoomexp":1.25486,"zoom":1.19729,"rot":0.01,"warp":0.3442,"sy":0.90529,"wave_r":0.8,"wave_g":0.8,"wave_b":0.8,"ob_size":0,"ob_a":0.5,"ib_size":0.5,"ib_r":0.6,"ib_g":0.3,"ib_b":0.5,"mv_x":64,"mv_y":48,"mv_l":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mymovement=0;a.dav0=0;a.dav1=0;a.dav2=0;a.dav3=0;","frame_eqs_str":"a.dav0=a.bass*a.time;a.dav1=2E7;a.dav2=.9*a.dav1;a.dav3=1.1*a.dav1;a.wave_r+=.6*Math.sin(a.dav1*a.dav0)+.4*Math.sin(a.dav1*a.dav0);a.wave_g+=.6*Math.sin(a.dav2*a.dav0)+.4*Math.sin(a.dav2*a.dav0);a.wave_b+=.6*Math.sin(a.dav3*a.dav0)+.4*Math.sin(a.dav3*a.dav0);a.wave_mystery=.5*Math.sin(.35*a.bass);a.decay-=.01*equal(mod(a.frame,10),0);","pixel_eqs_str":"a.zoom+=.1*(1+a.rad+.5*a.bass);a.mymovement=Math.sin(Math.sin(1.211*a.time)+.3*Math.cos(.887*a.time)-.4*Math.sin(1.453*a.time));a.rot-=.15*Math.sin(a.mymovement-a.ang);","init_eqs_eel":"","frame_eqs_eel":"dav0 = bass*time;\ndav1 = 100000*200;\ndav2 = dav1*0.9;\ndav3 = dav1*1.1;\nwave_r = wave_r +1*( 0.60*sin(dav1*dav0) + 0.40*sin(dav1*dav0) );\nwave_g = wave_g + 1*( 0.60*sin(dav2*dav0) + 0.40*sin(dav2*dav0) );\nwave_b = wave_b + 1*( 0.60*sin(dav3*dav0) + 0.40*sin(dav3*dav0) );\nwave_mystery = 0.5*sin(0.35*bass);\ndecay = decay - 0.01*equal(frame%10,0);","pixel_eqs_eel":"zoom = zoom + (0.1*(1+rad+0.5*bass));\nmymovement = sin(sin(1.211*time)+ 0.3*cos(0.887*time)- 0.4*sin(1.453*time));\nrot = rot - 0.15*sin(mymovement-ang);","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + ((0.004 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ).xy * vec2(0.0, 1.0)));\n  uv6_2 = (0.4 * sin((\n    (((uv - 0.5) * aspect.xy) * 18.0)\n   * rand_frame.xy)));\n  vec3 tmpvar_3;\n  tmpvar_3.x = (treb * 0.5);\n  tmpvar_3.y = (bass * 0.5);\n  tmpvar_3.z = (mid * 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.15 * (vec3((0.051 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * tmpvar_3))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_4.xyz;\n }","comp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = (0.448 + q9);\n  tmpvar_1.y = (0.701 + q10);\n  vec2 tmpvar_2;\n  tmpvar_2 = ((uv - 0.5) * 1.81);\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((tmpvar_2.x * tmpvar_2.x) - (tmpvar_2.y * tmpvar_2.y));\n  tmpvar_3.y = ((2.0 * tmpvar_2.x) * tmpvar_2.y);\n  xlat_mutabled = (texsize.zw * 3.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, uv);\n  vec2 tmpvar_5;\n  tmpvar_5.x = xlat_mutabledx.x;\n  tmpvar_5.y = xlat_mutabledy.x;\n  float tmpvar_6;\n  tmpvar_6 = sqrt(dot (tmpvar_5, tmpvar_5));\n  vec2 tmpvar_7;\n  tmpvar_7.x = xlat_mutabledx.y;\n  tmpvar_7.y = xlat_mutabledy.y;\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = mix (mix (mix (\n    mix (((vec3(0.6, 0.5, 0.4) * tmpvar_4.x) * ((\n      (-(xlat_mutabledx) + xlat_mutabledy)\n     + 1.0) * 1.4).x), (vec3(4.0, 2.0, 1.0) * tmpvar_6), vec3((tmpvar_6 * 2.0)))\n  , vec3(0.3, 0.0, 0.0), vec3(\n    (texture (sampler_main, (tmpvar_3 + tmpvar_1)).z * 4.0)\n  )), vec3(0.0, 0.0, 1.4), vec3((\n    sqrt(dot (tmpvar_7, tmpvar_7))\n   * 1.4))), vec3(0.5, 0.5, 0.5), vec3((tmpvar_4.y * 2.0)));\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;\n\n\nuv6 = .4*sin(uv1*18*rand_frame);\nmus = .051/(length(uv6));\nmus *= float3 (treb*.5,bass*.5,mid*.5);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .15*mus;\nfloat2 uv2 = (uv_orig-.5)-float3(bass*.1,treb*.1+0.1*q25,mid*.1);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"float2 d, uv_y;\nfloat3 dx, dy;\nshader_body\n{\n\n float zoom =1.81;\n float2 c = float2(0.448+q9,0.701+q10);\n float2 my_uv2 = (uv-0.5)*zoom;\n my_uv2 = float2(my_uv2.x*my_uv2.x - my_uv2.y*my_uv2.y, 2*my_uv2.x*my_uv2.y) + c;\n float julia = GetPixel(my_uv2).z;\n\n    d = texsize.zw*3;\n    dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat3 base = GetPixel(uv);\nfloat3 emboss = (-dx + dy + 1)*1.4;\nfloat grad_x = length(float2(dx.x,dy.x));\nfloat grad_y = length(float2(dx.y,dy.y));\n\n\nret = lerp( float3(0.6,0.5,0.4)*base.x*emboss.x,\n            float3(4,2,1)*grad_x,\n            grad_x*2\n          ); \n\n\nret = lerp(ret, float3(0.3,0,0), julia*4);\nret = lerp(ret, float3(0,0,1.4), grad_y*1.4);\nret = lerp(ret, 0.5, base.y*2);\n}\n"}