{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.997,"echo_zoom":0.997,"echo_orient":1,"wave_mode":7,"wave_thick":1,"darken":1,"wave_a":0.433,"wave_scale":2.62,"wave_smoothing":0.27,"wave_mystery":-0.08,"modwavealphastart":1.03,"modwavealphaend":1.61,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.6,"wave_g":0.8,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":30,"rad":1.08925,"r":0.8,"g":0.4,"b":0.2,"a":0.05,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.rad+=.02*Math.cos(3*a.time);","init_eqs_eel":"","frame_eqs_eel":"rad = rad + 0.02*cos(time*3);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.q25=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.t_rel=0;a.dec_slow=0;a.q10=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.p3=0;a.q3=0;a.t0=0;a.q7=0;a.ds=0;a.q28=0;a.q30=0;a.q20=0;a.p4=0;a.q8=0;","frame_eqs_str":"a.dec_med=pow(.7,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.beat=a.bass+a.mid+a.treb;a.beat*=a.beat;a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.2*a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),2);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;\na.q23=a.index;a.q24=a.is_beat;a.q26=a.bass_att+a.mid_att+a.treb_att+3;a.q27=a.index+1;a.q28=a.index2;a.q29=a.index2;a.monitor=a.q29;a.k1=a.is_beat*equal(mod(a.index,2),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q5=Math.cos(div(a.time,17));a.q6=Math.sin(div(a.time,17));a.q7=-a.q2;a.q8=a.q1;a.ds=a.ds*a.dec_med+a.q24*(1-a.dec_med);a.q25=a.q24;a.q10=a.q22+3;a.t_rel=8*a.time;a.p3=\na.p3*a.dec_med+(1-a.dec_med)*(100*a.index+0*a.q26);a.q30=a.p3;a.p4=a.dec_med*a.p4+(1-a.dec_med)*a.q27;a.q31=a.p4;a.zoom=1.1+.2*a.q1;a.warp=0;a.ob_size=.01;a.ob_r=.9;a.ob_g=1;a.ob_b=0;a.ob_a=.2*Math.sin(div(a.time,7));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \n\nbeat = bass+mid+treb;\nbeat = beat*beat;\n\navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .2*avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att + 3;\nq27 = index + 1;\nq28 = index2;\nq29 = index2;\nmonitor = q29;\nk1 =  is_\nbeat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n\nq5 = cos(time/17);\nq6 = sin(time/17);\nq7 = -q2;\nq8 = q1;\n\n\nds = ds*dec_med + q24*(1-dec_med);\nq25 = q24;\n//q25 = above(ds,.5);\n\nq10 = q22+3;\n\nt_rel = time*8;\n//q25 = below((t_rel)-int(t_rel),.2);\n\n\np3 = p3*dec_med + (1-dec_med) * (100*index + .0*q26);\nq30 = p3 ;\n\np4 = dec_med*p4 + (1-dec_med)*q27;\nq31 = p4;\n\n\nzoom = 1.1 + q1*.2;\nwarp =0;\nob_size = .01;\nob_r = .9;\nob_g = 1;\nob_b = 0;\nob_a = .2*sin(time/7);","pixel_eqs_eel":"","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 0.875);\n  ret = tmpvar_1.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv_1;\n  uv_1.x = uv.x;\n  vec3 ret2_2;\n  float z_3;\n  uv_1.y = (uv.y - 0.1);\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv_1 - 0.5) * aspect.xy);\n  z_3 = (0.3 / tmpvar_4.y);\n  xlat_mutablers0.x = (tmpvar_4.x * z_3);\n  xlat_mutablers0.y = z_3;\n  float tmpvar_5;\n  tmpvar_5 = (time / 2.0);\n  xlat_mutablers.x = (xlat_mutablers0.x + tmpvar_5);\n  xlat_mutablers.y = (z_3 + tmpvar_5);\n  xlat_mutableret1 = (vec3(dot (texture (sampler_noise_hq, (xlat_mutablers / 2.0)), vec4(0.32, 0.49, 0.29, 0.0))) - 0.55);\n  float tmpvar_6;\n  tmpvar_6 = clamp ((24.0 * tmpvar_4.y), 0.0, 1.0);\n  xlat_mutableuv2 = ((1.5 * tmpvar_4) * (q28 - abs(tmpvar_4.x)));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  vec2 tmpvar_7;\n  tmpvar_7 = fract(((xlat_mutableuv2 - \n    (q27 / 2.0)\n  ) - (\n    (xlat_mutableret1 * 0.04)\n   * tmpvar_6).xy));\n  vec2 tmpvar_8;\n  tmpvar_8.y = 0.0;\n  tmpvar_8.x = texsize.z;\n  vec2 tmpvar_9;\n  tmpvar_9.x = 0.0;\n  tmpvar_9.y = texsize.w;\n  vec2 tmpvar_10;\n  tmpvar_10.x = dot ((texture (sampler_main, (tmpvar_7 + tmpvar_8)).xyz - texture (sampler_main, (tmpvar_7 - tmpvar_8)).xyz), vec3(0.32, 0.49, 0.29));\n  tmpvar_10.y = dot ((texture (sampler_main, (tmpvar_7 + tmpvar_9)).xyz - texture (sampler_main, (tmpvar_7 - tmpvar_9)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutableuv3 = (tmpvar_7 + (0.02 * tmpvar_10));\n  vec2 tmpvar_11;\n  tmpvar_11.x = 0.5;\n  tmpvar_11.y = (tmpvar_4.y / tmpvar_4.x);\n  ret2_2 = (((\n    (texture (sampler_blur1, fract(((time / 8.0) + (\n      (0.1 * bass_att)\n     * tmpvar_11)))).xyz * scale1)\n   + bias1) * roam_cos.xyz) + ((0.008 / \n    sqrt(dot (tmpvar_4, tmpvar_4))\n  ) * roam_cos.xyz));\n  ret2_2 = (ret2_2 * q10);\n  xlat_mutableret1 = (texture (sampler_main, xlat_mutableuv3).xyz + ((texture (sampler_blur1, xlat_mutableuv3).xyz * scale1) + bias1));\n  xlat_mutableret1 = (xlat_mutableret1 * (1.0 - (tmpvar_6 / 3.0)));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = (xlat_mutableret1 + ret2_2);\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    \n    // darken (decay) over time\n    ret *= 0.875; //or try: ret -= 0.004;\n}","comp_hlsl":"\nfloat2 rs, rs0, uv2, uv3,uv4;\nfloat3 noise, ret1;\n\nshader_body {\nuv.y = uv.y - .1;\nfloat2 uv1 = (uv-.5 )*aspect.xy;\n\n\nfloat z = .1/uv1.y/uv1.x;\nz = .3/uv1.y;\nrs0.x = uv1.x*z;\nrs0.y = z;\nrs.x = rs0.x + time/2;\nrs.y = rs0.y + time/2;\n\nnoise = lum(tex2D(sampler_noise_hq,rs/2));\n\nret1 = noise-.55;\n\nfloat mask = saturate(24*(uv1.y));\n\nuv2 = 1.5*uv1 * (q28-abs(uv1.x)) ;\nuv2 *= aspect.yx;\n\nuv3 =frac(uv2-q27/2-ret1*.04*mask);\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0, texsize.w);\nfloat dx = lum(GetPixel(uv3+hor) - GetPixel(uv3-hor));\nfloat dy = lum(GetPixel(uv3+ver) - GetPixel(uv3-ver));\nfloat2 dz = .02*float2 (dx,dy);\nuv3 += dz;\n\nuv4 = float2(.5,(uv1.y/uv1.x));\nuv4 = frac(time/8+.1*bass_att*uv4);\nfloat3 col = roam_cos;\nfloat3 ret2 = (GetBlur1(uv4)) * col;\nret2 += (.008/(length(uv1)))*col;\nret2 *= q10;\n\n\nret1 =  GetPixel(uv3) + GetBlur1(uv3);\nret1 *= 1-mask/3;;\n\n//ret1 *= (.2+bass_att);\n\nret = ret1 + ret2;    \n}"}