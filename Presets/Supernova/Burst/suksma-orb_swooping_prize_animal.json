{"version":2,"baseVals":{"rating":5,"decay":0.92,"echo_zoom":2.209,"echo_alpha":0.9,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0.26,"mv_x":12.8,"mv_y":9.6,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"rad":0.49138,"tex_zoom":0.36971,"g":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=.5+q4;y=.5+q5;","init_eqs_eel":"","frame_eqs_eel":"x=.5+q4;y=.5+q5;"},{"baseVals":{"sides":24,"rad":0.01842,"tex_zoom":0.81954,"g":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_ang=0.01;\nx=.5-q4;\ny=.5-q5;","init_eqs_eel":"","frame_eqs_eel":"tex_ang=0.01;\nx=.5-q4;\ny=.5-q5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.red_rand=0;a.green_rand=0;a.red_rand=Math.floor(rand(100));a.blue_rand=Math.floor(rand(100));a.decay=.94;","frame_eqs_str":"a.warp=0;a.wave_r=.01*a.red_rand+.1*Math.sin(1.17*a.time);a.wave_g=.01*a.green_rand+.1*Math.sin(1.36*a.time);a.wave_b=1-.5*(a.wave_r+a.wave_g)+.1*Math.sin(1.09*a.time);","pixel_eqs_str":"a.dy=-.012*(a.y+.1);","init_eqs_eel":"red_rand = int(rand(100));\nblue_rand = int(rand(100));\ndecay = 0.94;","frame_eqs_eel":"warp = 0;\nwave_r = 0.01*red_rand + 0.1*sin(time*1.17);\nwave_g = 0.01*green_rand+ 0.1*sin(time*1.36);\nwave_b= 1-0.5*(wave_r+wave_g)+ 0.1*sin(time*1.09);","pixel_eqs_eel":"dy = -0.012*(y+0.1);","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + ((0.004 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ).xy * vec2(0.0, 1.0)));\n  uv6_2 = (0.4 * sin((\n    (((uv - 0.5) * aspect.xy) * 18.0)\n   * rand_frame.xy)));\n  vec3 tmpvar_3;\n  tmpvar_3.x = (treb * 0.5);\n  tmpvar_3.y = (bass * 0.5);\n  tmpvar_3.z = (mid * 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.15 * (vec3((0.051 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * tmpvar_3))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_4.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  vec2 uv2_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv2_4.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\n  uv2_4.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\n  dist_3 = (1.0 - fract((0.25 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = (xlat_mutableneu * inten_2);\n  uv2_4.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\n  uv2_4.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\n  dist_3 = (1.0 - fract((0.5 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\n  uv2_4.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\n  dist_3 = (1.0 - fract((0.75 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  uv2_4.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  dist_3 = (1.0 - fract((1.0 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = xlat_mutableret1;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;\n\n\nuv6 = .4*sin(uv1*18*rand_frame);\nmus = .051/(length(uv6));\nmus *= float3 (treb*.5,bass*.5,mid*.5);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .15*mus;\nfloat2 uv2 = (uv_orig-.5)-float3(bass*.1,treb*.1+0.1*q25,mid*.1);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"float3 ret1, neu, blur;\n\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nfloat dist = 1;\nfloat dista = 0;\nfloat inten = 1;\nfloat mask = 0;\nret1 = 0;\nint anz = 4;\nfloat n = 1;\n//uv = mul(uv,float2x2(_qa));\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    dist = 1-frac(.25*n+time/1); //evtl sqrt !\n    inten =  pow(dist,.3)*(1-dist)*2;\n//    inten =  (1-dist);\n\n    neu =  GetPixel (2*uv2*dist + 0.5 );\n    blur = GetBlur1 (2*uv2*dist + 0.54 );\n    neu += blur;\n//    neu *= (neu >= 0);\n  //  mask = 1-(neu*inten >= .1) * (dist < dista);\n    ret1 = ret1*.9+neu*inten;\n    dista = dist;\nn++;\n}\n\nfloat dz = ret1/2;\nfloat2 rs1 = uv*8 + time;\n\nfloat scale = 64;\nrs1 = rs1 + dz*scale*.4;\n\nfloat lava = tex2D (sampler_noise_hq,rs1/scale).x;\nlava = saturate(-abs (lava) + 1);\nfloat3 lay1 = saturate(float3 (lava,lava*(lava-0.55)*2,(lava-1)*16));\n\nret = ret1*1 + 0*float3(0,0,.3)*rad + lay1*0;\n\n}"}