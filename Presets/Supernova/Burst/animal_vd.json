{"version":2,"baseVals":{"rating":5,"decay":0.99,"echo_zoom":2.978,"echo_alpha":0.5,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"wrap":0,"red_blue":1,"wave_a":4.1,"wave_scale":1.074,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":0.12,"fshader":1,"warp":0.01,"sx":1.00182,"sy":1.00815,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":40,"textured":1,"rad":0.67495,"tex_zoom":1.47412,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8,"rad":1.08925},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"scaling":1.0741,"smoothing":0},"init_eqs_str":"a.aa=0;a.vl=0;a.it=0;a.my=0;a.mod=0;a.mx=0;a.sp=0;a.bb=0;a.cc=0;","frame_eqs_str":"","point_eqs_str":"a.it=2*a.time;a.sp=a.sample+.1*a.it;a.vl=1+.5*(a.treb_att-.7);a.my=.5+.2*Math.sin(.932*a.time)*a.vl;a.mx=.5+.2*Math.cos(.932*a.time)*a.vl;a.mod=div(a.value1+a.value2,2);a.mod*=a.mod*a.mod;a.y=.5+a.sample*(a.my-.5)+a.mod;a.x=.5+a.sample*(a.mx-.5)+a.mod;a.aa=.6+.4*Math.sin(6.28*a.sp);a.bb=a.aa*(.6+.4*Math.sin(6.28*a.sp));a.cc=a.bb*(.6+.4*Math.sin(6.28*a.sp));a.r=a.aa;a.b=a.cc;a.g=a.bb;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = time*2;\nsp = sample + it*0.1;\n\nvl = 1 + 0.5*(treb_att-0.7);\n\nmy = 0.5 + 0.2*sin(time*0.932)*vl;\nmx = 0.5 + 0.2*cos(time*0.932)*vl;\n\nmod = (value1+value2)/2;\n\nmod = mod*mod*mod;\n\ny = 0.5 + sample*(my-0.5) + mod;\nx = 0.5 + sample*(mx-0.5) + mod;\n\naa = 0.6 + 0.4*sin(sp*6.28);\nbb = aa*(0.6 + 0.4*sin(sp*6.28));\ncc = bb*(0.6 + 0.4*sin(sp*6.28));\nr=aa;b=cc;g=bb;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"scaling":1.0741,"smoothing":0},"init_eqs_str":"a.aa=0;a.vl=0;a.it=0;a.my=0;a.mod=0;a.mx=0;a.sp=0;a.bb=0;a.cc=0;","frame_eqs_str":"","point_eqs_str":"a.it=2*a.time;a.sp=a.sample+.1*a.it;a.vl=1+.5*(a.mid_att-.7);a.my=.5+.2*Math.sin(.654*a.time)*a.vl;a.mx=.5+.2*Math.cos(.654*a.time)*a.vl;a.mod=div(a.value1+a.value2,2);a.mod*=a.mod*a.mod;a.y=.5+a.sample*(a.my-.5)+a.mod;a.x=.5+a.sample*(a.mx-.5)+a.mod;a.aa=.6+.4*Math.sin(6.28*a.sp);a.bb=a.aa*(.6+.4*Math.sin(6.28*a.sp));a.cc=a.bb*(.6+.4*Math.sin(6.28*a.sp));a.b=a.aa;a.g=a.bb;a.r=a.cc;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = time*2;\nsp = sample + it*0.1;\n\nvl = 1 + 0.5*(mid_att-0.7);\n\nmy = 0.5 + 0.2*sin(time*0.654)*vl;\nmx = 0.5 + 0.2*cos(time*0.654)*vl;\n\nmod = (value1+value2)/2;\nmod = mod*mod*mod;\n\ny = 0.5 + sample*(my-0.5) + mod;\nx = 0.5 + sample*(mx-0.5) + mod;\n\naa = 0.6 + 0.4*sin(sp*6.28);\nbb = aa*(0.6 + 0.4*sin(sp*6.28));\ncc = bb*(0.6 + 0.4*sin(sp*6.28));\nb=aa;g=bb;r=cc;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"scaling":1.0741,"smoothing":0},"init_eqs_str":"a.aa=0;a.vl=0;a.it=0;a.my=0;a.mod=0;a.mx=0;a.sp=0;a.bb=0;a.cc=0;","frame_eqs_str":"","point_eqs_str":"a.it=2*a.time;a.sp=a.sample+.1*a.it;a.vl=1+.5*(a.bass_att-.7);a.my=.5+.2*Math.sin(.378*a.time)*a.vl;a.mx=.5+.2*Math.cos(.378*a.time)*a.vl;a.mod=div(a.value1+a.value2,2);a.mod*=a.mod*a.mod;a.y=.5+a.sample*(a.my-.5)+a.mod;a.x=.5+a.sample*(a.mx-.5)+a.mod;a.aa=.6+.4*Math.sin(6.28*a.sp);a.bb=a.aa*(.6+.4*Math.sin(6.28*a.sp));a.cc=a.bb*(.6+.4*Math.sin(6.28*a.sp));a.r=a.aa;a.b=a.bb;a.g=a.cc;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = time*2;\nsp = sample + it*0.1;\n\nvl = 1 + 0.5*(bass_att-0.7);\n\nmy = 0.5 + 0.2*sin(time*0.378)*vl;\nmx = 0.5 + 0.2*cos(time*0.378)*vl;\n\nmod = (value1+value2)/2;\nmod = mod*mod*mod;\n\ny = 0.5 + sample*(my-0.5) + mod;\nx = 0.5 + sample*(mx-0.5) + mod;\n\naa = 0.6 + 0.4*sin(sp*6.28);\nbb = aa*(0.6 + 0.4*sin(sp*6.28));\ncc = bb*(0.6 + 0.4*sin(sp*6.28));\nr=aa;b=bb;g=cc;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.gamma=0;a.maxdbass=0;a.sw=0;a.q6=0;a.dbass=0;a.q1=0;a.q5=0;a.mytime=0;a.cheat=0;a.timescale=0;a.dis=0;a.lastbeat=0;a.ptreb=0;a.interval=0;a.lim=0;a.a=0;a.pbass=0;a.dtreb=0;a.mod=0;a.b=0;a.tm=0;a.beat=0;a.vol=0;a.q2=0;a.q7=0;a.sure=0;a.q8=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.sure=.00001<Math.abs(equal(a.sure,0))?.6:a.sure;a.interval=.00001<Math.abs(equal(a.interval,0))?40:a.interval;a.lastbeat=.00001<Math.abs(equal(a.lastbeat,0))?a.frame-a.fps:a.lastbeat;a.dbass=div(a.bass-a.pbass,a.fps);a.beat=above(a.dbass,.6*a.maxdbass)*above(a.frame-a.lastbeat,div(a.fps,3));a.sure=.00001<Math.abs(a.beat*below(Math.abs(a.frame-(a.interval+a.lastbeat)),div(a.fps,5)))?Math.min(.095+a.sure,1):a.beat*(a.sure-.095)+(1-a.beat)*a.sure*.9996;a.sure=Math.max(.5,a.sure);\na.cheat=.00001<Math.abs(above(a.frame,a.lastbeat+a.interval+Math.floor(div(a.fps,10)))*above(a.sure,.91))?1:a.cheat;a.beat=.00001<Math.abs(a.cheat)?1:a.beat;a.sure=.00001<Math.abs(a.cheat)?.95*a.sure:a.sure;a.maxdbass=Math.max(.999*a.maxdbass,a.dbass);a.maxdbass=Math.max(.012,a.maxdbass);a.maxdbass=Math.min(.02,a.maxdbass);a.interval=.00001<Math.abs(a.beat)?a.frame-a.lastbeat:a.interval;a.lastbeat=.00001<Math.abs(a.beat)?a.frame-a.cheat*Math.floor(div(a.fps,10)):a.lastbeat;a.pbass=a.bass;a.q8=a.beat;\na.q7=div(a.frame-a.lastbeat,a.interval);a.dtreb=(a.treb_att-a.ptreb)*a.fps;a.timescale=.2;a.mytime=.00001<Math.abs(equal(a.mytime,0))?105:a.mytime;a.mytime=a.mytime+div(a.timescale,a.fps)+a.timescale*a.beat*Math.min(div(a.interval,a.fps),1);a.q6=a.mytime;a.warp=0;a.zoom=1.0015;a.ptreb=a.treb_att;a.q1=.3*a.time-Math.floor(a.beat);a.q5=.3*a.time-Math.floor(.3*a.time);a.monitor=a.mytime;a.vol=1.025*(a.bass_att+a.bass+a.mid_att+a.mid+a.treb_att+a.treb);a.gamma=.01;a.q2=a.q5+equal(a.vol,1.1)*Math.sin(div(a.time,\n1))*.02;a.wave_a=0;a.decay=1.92;","pixel_eqs_str":"a.zoom=1.03+div(a.rad,50);a.b=10.5;a.dis=pow((a.x-a.a)*(a.x-a.a)+19.5625*(a.y-a.b)*(a.y-a.b),2.5)*a.bass;a.sw=below(a.dis,1.2);a.mod=-.28+.18*pow(1-.01*a.dis,.8)*a.bass;a.dx=.00001<Math.abs(a.sw)?a.mod*(a.x-.5):0;a.dy=.00001<Math.abs(a.sw)?a.mod*(a.y-.5):0;a.mod=.005-.01*Math.sin(12.5664*a.rad)*a.bass;a.dx=.00001<Math.abs(a.sw)?a.dx+Math.sin(a.ang)*a.mod:1;a.dy=.00001<Math.abs(a.sw)?a.dy+Math.cos(a.ang)*a.mod:1;a.sx=.00001<Math.abs(a.sw)?a.sx:-1;a.sy=.00001<Math.abs(a.sw)?a.sy:\n-1;a.a=above(a.x,.5);a.b=above(a.y,.5);a.dis=pow((a.x-a.a)*(a.x-a.a)+.5625*(a.y-a.b)*(a.y-a.b),.5);a.lim=below(a.dis,.2);a.dx=.00001<Math.abs(a.lim)?.5*(1-2*below(a.x,.5)):a.dx;a.dy=.00001<Math.abs(a.lim)?.5*(1-2*below(a.y,.5)):a.dy;a.tm=a.time-5*a.rad;a.dx=.00001<Math.abs(a.lim+a.sw)?a.dx:a.mod*(a.x-a.a);a.dy=.00001<Math.abs(a.lim+a.sw)?a.dy:a.mod*(a.y-a.b);","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"// -------------------------------- Beat Detective v0.07 ------------------------\nsure=if(equal(sure,0),.6,sure);\ninterval=if(equal(interval,0),40,interval);\nlastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);\ndbass=(bass-pbass)/FPS;\nbeat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);\nsure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),\nmin(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);\nsure=max(.5,sure);\ncheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);\nbeat=if(cheat,1,beat);\nsure=if(cheat,.95*sure,sure);\nmaxdbass=max(maxdbass*.999,dbass);\nmaxdbass=max(.012,maxdbass);\nmaxdbass=min(.02,maxdbass);\ninterval=if(beat, frame-lastbeat,interval);\nlastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);\n//cheat=0;\npbass=bass;\n// ------------------------------------------------------------------------------\n\nq8=beat;\nq7=(frame-lastbeat)/interval;\ndtreb=(treb_att-ptreb)*FPS;\n\ntimescale=0.2;\n\nmytime=if(equal(mytime,0),105,mytime);\nmytime=mytime+timescale/FPS+timescale*beat*min(interval/FPS,1);\n\nq6=mytime;\nwarp=0;\nzoom=1.0015;\n\nptreb=treb_att;\nq1=time*.3-int(beat);\nq5=time*.3-int(time*.3);\nmonitor=mytime;\n\nvol=(bass_att+bass+mid_att+mid+treb_att+treb)*1.025;\ngamma=.01;\nq2=q5+(equal(vol,1.1)*sin(time/1)*0.02);\n//q4=q2+(equal(vol,1.1)*sin(time/1)*0.02);\n//zoom=zoom+q1;\n\n\nwave_a = 0;\ndecay=1.92;","pixel_eqs_eel":"zoom=1.03+(rad/50);\n//rot=ang/900*(rot*(2-((above(bass,0.9)))));\n\n\n\n//a = .5;\nb = 10.5;\ndis = pow((x-a)*(x-a) + 19.5625*(y-b)*(y-b),2.5)*bass;\nsw = below(dis,1.2);\n\nmod = -.28 + .18*pow(1-dis*.01,.8)*bass;\ndx = if(sw,mod*(x-.5),0);\ndy = if(sw,mod*(y-.5),0);\n\n\nmod = .005 - .01*sin(rad*6.2832*2)*bass;\ndx = if(sw,dx + sin(ang)*mod,1);\ndy = if(sw,dy + cos(ang)*mod,1);\n\nsx = if(sw,sx,-1);\nsy = if(sw,sy,-1);\n\n\na = above(x,.5);\nb = above(y,.5);\ndis = pow((x-a)*(x-a) + .5625*(y-b)*(y-b),.5);\n\nlim = below(dis,.2);\n\ndx = if(lim,.5*(1-2*below(x,.5)),dx);\ndy = if(lim,.5*(1-2*below(y,.5)),dy);\n\n\n//mod = -.05;\ntm=time-(rad*5);\ndx = if(lim + sw,dx,mod*(x-a));\ndy = if(lim + sw,dy,mod*(y-b));","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\n  tmpvar_4 = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  float tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\n  tmpvar_7 = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4;\n  tmpvar_10.y = tmpvar_7;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  tmpvar_11.y = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x - 0.01);\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_7;\n  tmpvar_13.y = -(tmpvar_4);\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_14;\n  x_14 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\n   * 180.0) / sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )));\n  ret_2.z = (ret_2.z * 0.8);\n  ret_2.z = (ret_2.z - 0.01);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_7);\n  tmpvar_15.y = tmpvar_4;\n  my_uv_1 = (tmpvar_15 * 0.045);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_3.x);\n  tmpvar_16.y = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_3.y);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\n   * 0.1) - 0.01));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_2;\n  ret = tmpvar_17.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  vec2 uv2_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv2_4.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\n  uv2_4.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\n  dist_3 = (1.0 - fract((0.25 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = (xlat_mutableneu * inten_2);\n  uv2_4.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\n  uv2_4.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\n  dist_3 = (1.0 - fract((0.5 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\n  uv2_4.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\n  dist_3 = (1.0 - fract((0.75 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  uv2_4.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  dist_3 = (1.0 - fract((1.0 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = xlat_mutableret1;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with\n    float1 d = 0.005;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float2 my_uv = uv - float2(dx,dy)*0.01 + float2(dxb,dyb)*0.003;\n\n\n\n    float2 v = 0.01;\n    ret.x = tex2D( sampler_fw_main, my_uv -floor(my_uv)*0).x;\n\n    \n    ret.x += (ret.x - GetBlur3(uv).x)*.1;\n    ret.x -= 0.01;\n\n\n//--------------------------------\n\n    my_uv = uv + float2(dy,-dx)*0.05*(1.2-GetBlur3(uv).y);\n\n\n\n    v = 0.01;\n    ret.z = tex2D( sampler_fw_main, my_uv).z;\n    \n    ret.z += (ret.z - GetBlur1(uv).z)*length(my_uv-uv)*180/length(scale);\n    ret.z *= 0.8;\n    ret.z -= 0.01;\n\n\n\n//--------------------------------\n\n    d = 0.01;\n    my_uv = float2(-dy,dx)*0.045;\n\n    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;\n    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;\n    my_uv += uv - float2(dx,dy)*0.03;\n    v = 0.01;\n    ret.y =tex2D( sampler_fw_main, my_uv).y;\n    ret.y += (ret.y - GetBlur3(my_uv).y)*0.1 - 0.01;\n    \n    \n\n    \n    \n//ret = 0;\n}","comp_hlsl":"float3 ret1, neu, blur;\n\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nfloat dist = 1;\nfloat dista = 0;\nfloat inten = 1;\nfloat mask = 0;\nret1 = 0;\nint anz = 4;\nfloat n = 1;\n//uv = mul(uv,float2x2(_qa));\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    dist = 1-frac(.25*n+time/1); //evtl sqrt !\n    inten =  pow(dist,.3)*(1-dist)*2;\n//    inten =  (1-dist);\n\n    neu =  GetPixel (2*uv2*dist + 0.5 );\n    blur = GetBlur1 (2*uv2*dist + 0.54 );\n    neu += blur;\n//    neu *= (neu >= 0);\n  //  mask = 1-(neu*inten >= .1) * (dist < dista);\n    ret1 = ret1*.9+neu*inten;\n    dista = dist;\nn++;\n}\n\nfloat dz = ret1/2;\nfloat2 rs1 = uv*8 + time;\n\nfloat scale = 64;\nrs1 = rs1 + dz*scale*.4;\n\nfloat lava = tex2D (sampler_noise_hq,rs1/scale).x;\nlava = saturate(-abs (lava) + 1);\nfloat3 lay1 = saturate(float3 (lava,lava*(lava-0.55)*2,(lava-1)*16));\n\nret = ret1*1 + 0*float3(0,0,.3)*rad + lay1*0;\n\n}"}