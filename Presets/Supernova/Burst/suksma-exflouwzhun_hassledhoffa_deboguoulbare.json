{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.95,"echo_zoom":1.448,"echo_alpha":0.8,"wave_mode":5,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":3.3,"warpscale":2.671,"zoomexp":100,"fshader":1,"zoom":0.81914,"warp":36.97113,"sx":3.54492,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":20.16,"mv_l":0.4,"mv_g":0.4,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"r":0.9,"g":0.7,"b":0.9,"a":0.7,"r2":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5*(Math.sin(a.time)+1);a.y=.5*a.bass_att+.2*Math.sin(.5*a.time);a.ang=a.time;a.rad=.5*a.bass;","init_eqs_eel":"","frame_eqs_eel":"x=(sin(time)+1)*.5;\ny=(bass_att*.5)+(sin(time*.5)*.2);\n\nang=time;\nrad=bass*.5;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.80814,"tex_zoom":1.22018,"a":0.5,"r2":0.9,"b2":0.8,"a2":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.7316,"tex_ang":5.02655,"tex_zoom":0.24832,"r":0.8,"g":0.3,"b":0.8,"a2":0.1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.rad=.9*a.bass;a.ang=a.time;","init_eqs_eel":"","frame_eqs_eel":"rad=bass*.9;\nang=time;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"g":0.2,"b":0.3,"g2":0,"b2":0.1,"border_r":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5*(Math.cos(.2*(a.time+.233))+1);a.y=.5*(Math.sin(.1*a.time)+1)+.5*Math.sin(.13*a.time);a.rad=.2*a.treb;","init_eqs_eel":"","frame_eqs_eel":"x=(cos((time+.233)*.2)+1)*.5;\ny=(sin(time*.1)+1)*.5+(sin(time*.13)*.5);\n\nrad=treb*.2;"}],"waves":[{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x=int(rand(1));\ny=int(rand(1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=int(rand(1));\ny=int(rand(1));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.direc=0;","frame_eqs_str":"","pixel_eqs_str":"a.direc=.00001<Math.abs(above(a.treb,1.3))?-1*a.direc:a.direc;a.zoom+=Math.sin(a.x*a.treb*a.mid*.1)*a.direc*-1;a.rot+=Math.cos(a.y*a.bass)*a.x*a.direc;","init_eqs_eel":"","frame_eqs_eel":"","pixel_eqs_eel":"direc=if(above(treb,1.3),direc*-1,direc);\n\nzoom=zoom+sin(x*treb*mid*.1)*direc*-1;\nrot=rot+(cos(y*bass)*x)*direc;","warp":" shader_body { \n  vec3 rsamp_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_pw_main, uv_orig);\n  ret_2 = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, (uv_orig + ((\n    (tmpvar_3.xy - 0.5)\n   * 12.0) * texsize.zw)));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  rsamp_1 = tmpvar_6;\n  float tmpvar_7;\n  vec2 x_8;\n  x_8 = (tmpvar_4.xy - uv_orig);\n  tmpvar_7 = sqrt(dot (x_8, x_8));\n  float tmpvar_9;\n  vec2 x_10;\n  x_10 = (tmpvar_5.xy - uv_orig);\n  tmpvar_9 = sqrt(dot (x_10, x_10));\n  if ((tmpvar_7 > tmpvar_9)) {\n    ret_2.xy = tmpvar_6.xy;\n  };\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_pw_main, (uv_orig + ((\n    (tmpvar_3.zw - 0.5)\n   * 48.0) * texsize.zw)));\n  rsamp_1 = tmpvar_11.xyz;\n  float tmpvar_12;\n  vec2 x_13;\n  x_13 = (ret_2.xy - uv_orig);\n  tmpvar_12 = sqrt(dot (x_13, x_13));\n  float tmpvar_14;\n  vec2 x_15;\n  x_15 = (tmpvar_11.xy - uv_orig);\n  tmpvar_14 = sqrt(dot (x_15, x_15));\n  if ((tmpvar_12 > tmpvar_14)) {\n    ret_2.xy = rsamp_1.xy;\n  };\n  ret_2.z = texture (sampler_fw_main, ret_2.xy).z;\n  ret_2.z = (ret_2.z - (q1 * 0.005));\n  if ((ret_2.z < 0.09)) {\n    ret_2 = vec3(0.0, 0.0, 0.0);\n  };\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_2;\n  ret = tmpvar_16.xyz;\n }","comp":"vec3 xlat_mutablenoise;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers;\n shader_body { \n  float z_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  float tmpvar_3;\n  tmpvar_3 = (0.4 / abs(tmpvar_2.y));\n  xlat_mutablers.x = (tmpvar_2.x * tmpvar_3);\n  float tmpvar_4;\n  tmpvar_4 = (time * 4.0);\n  xlat_mutablers.y = (tmpvar_3 + tmpvar_4);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_noise_lq, (xlat_mutablers / 28.0));\n  xlat_mutablenoise = (tmpvar_5.xyz * vec3(greaterThanEqual (tmpvar_5.xyz, vec3(0.84, 0.84, 0.84))));\n  xlat_mutableret1 = xlat_mutablenoise;\n  z_1 = (0.4 / abs(tmpvar_2.x));\n  xlat_mutablers.y = (tmpvar_2.y * z_1);\n  xlat_mutablers.x = (z_1 + tmpvar_4);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_pw_noise_lq, (xlat_mutablers / 28.0));\n  xlat_mutablenoise = (tmpvar_6.xyz * vec3(greaterThanEqual (tmpvar_6.xyz, vec3(0.84, 0.84, 0.84))));\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((texture (sampler_main, (uv + \n    (xlat_mutableret1 * 0.1)\n  .xy)).xyz * 1.5) - (0.1 * xlat_mutableret1));\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv_orig;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));\nret.xyz = tex2D( sampler_pw_main,uvm).xyz;\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nrsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nret.z = tex2D(sampler_fw_main,ret.xy).z;\n\nret.z -= q1*.005;\n\nif (ret.z < .09) {\nret*=0;\n}\n\n\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\n\nfloat2 rs;\nfloat3 noise, ret1;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = (uv-.5-.0*float2(q1,q2) );//*aspect.xy;\n//uv = mul(uv-.5,float2x2(_qa))+.5;\nfloat h1 = .4;\n\n\nfloat z = +h1/abs(uv1.y);\nrs.x = uv1.x * z;\nrs.y = z + time*4;\nnoise = tex2D(sampler_pw_noise_lq,rs/28);\nnoise *= (noise >= .84);\nret1 = noise;\n\n\nz = h1/abs(uv1.x);\nrs.y = uv1.y * z;\nrs.x = z + time*4;\nnoise = tex2D(sampler_pw_noise_lq,rs/28);\nnoise *= (noise >= .84);\nret1 += noise;\n\nret = GetPixel(uv+ret1*.1)*1.5 - .1*ret1;    \n}"}