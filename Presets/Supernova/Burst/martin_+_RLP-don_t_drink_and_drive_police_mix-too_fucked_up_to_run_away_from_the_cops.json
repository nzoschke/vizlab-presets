{"version":2,"baseVals":{"rating":5,"gammaadj":1.28,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":1,"additivewave":1,"modwavealphabyvolume":1,"darken":1,"wave_a":1.008,"wave_scale":2.233,"wave_smoothing":0.81,"wave_mystery":0.28,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpanimspeed":7.243,"warpscale":6.297,"zoom":1.12348,"warp":1.5502,"sx":1.01,"wave_r":0.9,"wave_b":0.9,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"x":0.65,"y":0.9,"rad":0.22056,"ang":1.5708,"tex_zoom":0.33105,"g":1,"b":1,"a":0.1,"g2":0,"b2":0.2,"border_b":0,"border_a":0},"init_eqs_str":"a.q22=0;","frame_eqs_str":"a.x=.6;a.y=.3;a.b=0;a.r=1;a.g=0;a.a=Math.min(div(a.q22,18),1);a.a2=0;","init_eqs_eel":"","frame_eqs_eel":"x = .6; y = .3;\nb = 0;\nr = 1;\ng = 0;\na = min(q22/18,1); \na2 = 0;"},{"baseVals":{"enabled":1,"textured":1,"rad":0.52676,"tex_ang":0.37699,"tex_zoom":2.24557,"r":0.96,"r2":1,"b2":1,"a2":0.7,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"a.q28=0;","frame_eqs_str":"a.tex_zoom=1.4+Math.sin(div(a.time,3.67));a.a=a.q28;a.a2=div(a.q28,8);","init_eqs_eel":"","frame_eqs_eel":"tex_zoom = 1.4 + sin(time/3.67);\na = q28; a2 = q28/8;"},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.9},"init_eqs_str":"a.xang=0;a.ampl=0;a.fov=0;a.t1=0;a.yang=0;a.my=0;a.oz=0;a.k1=0;a.t_rel=0;a.k2=0;a.mz=0;a.oy=0;a.mx=0;a.t2=0;a.zang=0;a.t_abs=0;a.ox=0;","frame_eqs_str":"a.t2+=a.bass_att;","point_eqs_str":"a.k1=Math.cos(div(a.time,3));a.k2=Math.sin(div(a.time,2));a.t_abs=a.sample;a.t_rel=a.sample-div(a.time,2.12);a.ampl=12*Math.cos(a.t_rel);a.ox=Math.sin(18*a.t_rel)+a.ampl*Math.sin(12*a.t_rel);a.oy=Math.cos(13*a.t_rel)+a.ampl*Math.cos(11*a.t_rel);a.oz=div(a.ampl,3);a.oz=0;a.r=1;a.g=.5;a.b=0;a.a=.25*Math.cos(div(3.14*a.t_abs,2))+.2*below(Math.abs(1-a.t_abs-a.t1),0);a.a=.25*Math.cos(1.5*a.t_abs)+.7*below(Math.abs(a.t_abs),0);a.xang=3*a.k1;a.yang=1;a.zang=3*a.k1;a.fov=.22;a.mx=a.ox*\nMath.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz-=6;a.x=div(a.ox*a.fov,a.oz)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;","init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":" //Alle Funktionen muessen rel. zu t_rel sein\n\nk1 = cos(time/3);\nk2 = sin(time/2);\n\nt_abs = sample;\nt_rel = sample-time/2.12;\nampl =  cos(t_rel)*12; \n//ampl = 3;\n\nox = sin (t_rel*18) + ampl*sin (t_rel*12) ;\noy = cos (t_rel*13) + ampl*cos (t_rel*11);\noz =  ampl/3;\noz = 0;\n\n\n//r = sqr(sin(t_rel*3.4));\n//g = sqr(sin(t_rel*2.3));\n//b = sqr (cos(t_rel*1.9));\n\nr = 1;\ng = 0.5;\nb = 0;\n\na=0.25*(cos(t_abs*3.14/2)) + 0.2 *below (abs(1-t_abs- t1),0.0);\n//a=0.25*(sin(t_abs*3.14)) + 0.4 *below (abs(1-t_abs-t1), bass_att/1);\na=0.25*(cos(t_abs*1.5)) + 0.7 *below (abs(t_abs),0.0);\n\nxang = k1*3;\nyang = 1;\nzang = 3*k1;\nfov = 0.22;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82},"init_eqs_str":"a.t1=0;a.t2=0;a.q21=0;a.t_rel=0;","frame_eqs_str":"a.t_rel=2*a.time;a.t1=Math.floor(a.t_rel);a.t2=Math.floor(a.t_rel)+1;","point_eqs_str":"a.t1=mod(65*a.t1+37,4096);a.t2=mod(65*a.t2+37,4096);a.x=div(a.t1,4096);a.y=div(a.t2,4096);a.a=div(a.q21,8);","init_eqs_eel":"","frame_eqs_eel":"t_rel = time *2;\n\nt1 = int (t_rel);\nt2 = int (t_rel) + 1;","point_eqs_eel":"t1 = (t1*65 + 37) % 4096;\nt2 = (t2*65 + 37) % 4096;\n\nx =  (t1/4096);\ny =  (t2/4096);\n\na = q21/8;"},{"baseVals":{"enabled":1,"samples":128,"scaling":0.89152,"smoothing":0.82,"a":0.1},"init_eqs_str":"a.t1=0;a.q24=0;","frame_eqs_str":"a.t1=.51;a.t1=div(a.time,2)-Math.floor(div(a.time,2));","point_eqs_str":"a.x=div(a.sample,3)+a.t1;a.y=a.sample;a.a=div(a.q24,2);a.a=.6;","init_eqs_eel":"","frame_eqs_eel":"t1 = .51;\nt1 = time/2 - int(time/2);","point_eqs_eel":"x = sample/3 + t1;\n//y = sample/3 + t1;\ny = sample;\n\n//x = sample;\n//y = sample;\n\na = q24/2;\n//a = 1;\na = .6;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.hop2=0;a.index2=0;a.index4=0;a.q25=0;a.index=0;a.q18=0;a.q22=0;a.q21=0;a.q29=0;a.q1=0;a.dec_med=0;a.q5=0;a.index3=0;a.rott=0;a.hop=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.police=0;a.hop3=0;a.dhop=0;a.q26=0;a.p2=0;a.avg=0;a.hop4=0;a.movez=0;a.q19=0;a.beat=0;a.q17=0;a.blink=0;a.p1=0;a.peak=0;a.q27=0;a.p3=0;a.t0=0;a.q28=0;a.q20=0;","frame_eqs_str":"a.rot+=.14*Math.sin(5*a.time);a.dec_med=pow(.8,div(30,a.fps));a.dec_slow=pow(.95,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.4+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),2);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),\n4);a.index4=mod(a.index4+a.is_beat*bnot(a.index)*bnot(a.index2)*bnot(a.index3),4);a.police=a.dec_slow*a.police+(1-a.dec_slow)*bnot(a.index3+a.index2-2);a.q17=a.police;a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.hop=a.dec_slow*a.hop+(1-a.dec_slow)*a.q22;a.hop2=a.dec_slow*a.hop2+(1-a.dec_slow)*a.hop;a.hop3=a.dec_slow*a.hop3+(1-a.dec_slow)*a.hop2;a.dhop=a.hop2-a.hop3;a.q18=a.dhop+0*Math.sin(a.time);a.hop4=a.dec_slow*a.hop4+(1-a.dec_slow)*a.dhop;a.q19=8*a.hop4;a.k1=a.is_beat*\nequal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.rott=div(3.14159265359*a.p3,2);a.q27=8-a.index;a.q28=a.index2;a.q26=.1*a.index3;a.q25=a.index4;a.monitor=a.q25;a.movez+=div(.03*30,a.fps)*(1-bnot(a.index)*above(Math.sin(div(a.time,20)),.8));a.q29=1*a.movez;a.blink=(1-0*equal(a.index,0))*(1-equal(a.index,7));a.q31=mod(10*a.time,2)*(1-a.blink);a.q5=a.rott;a.q1=1+10*bnot(a.index3+a.index2);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"rot=rot+0.140*sin(5.00*time);\ndec_med = pow (0.8, 30/fps);\ndec_slow = pow (0.95, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .4+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%2;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%4;\nindex4 = (index4 + is_beat*bnot(index)*bnot(index2)*bnot(index3))%4;\n\npolice = dec_slow*police \n + (1-dec_slow) * bnot (index3 + index2 -2);\nq17 = police;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\n\nhop = dec_slow*hop + (1-dec_slow)*q22;\nhop2 = dec_slow*hop2 + (1-dec_slow)*hop;\nhop3 = dec_slow*hop3 + (1-dec_slow)*hop2;\ndhop = hop2 - hop3;\nq18 = dhop +.0*sin(time);\nhop4 = dec_slow*hop4 + (1-dec_slow)*dhop;\nq19 = hop4 * 8 ;\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\np3 = dec_med * p3+ (1-dec_med)*p2;\n\nrott = p3 * 3.14159265359/2;\n\nq27 = 8-index;\nq28 = index2;\nq26 = .0 + .1*index3;\nq25 = index4;\n\nmonitor = q25;\nmovez = movez + .03*30/fps *\n                  (1-bnot(index) * above(sin(time/20),.8));\nq29 = movez*1;\n\n\nblink = (1-0*equal(index,0)) * (1-equal (index,7));\nq31 = ((time*10)%2) * (1-blink);\nq5 = rott;\n\nq1 = 1 + 10 * bnot (index3 + index2);","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  vec2 zz_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - vec2(0.5, 0.5));\n  vec3 tmpvar_4;\n  tmpvar_4 = (0.016 * texture (sampler_noise_lq, ((uv * 0.3) + (0.01 * rand_frame).xy))).xyz;\n  vec2 tmpvar_5;\n  tmpvar_5 = (0.8 * sin((tmpvar_3 * 8.0)));\n  float tmpvar_6;\n  tmpvar_6 = clamp ((0.01 / sqrt(\n    dot (tmpvar_5, tmpvar_5)\n  )), 0.0, 1.0);\n  vec2 tmpvar_7;\n  tmpvar_7 = ((-(tmpvar_3) * texsize.xy) * q26);\n  zz_2 = tmpvar_7;\n  if ((q25 == 1.0)) {\n    zz_2 = (tmpvar_7 * (abs(tmpvar_3.y) / abs(tmpvar_3.x)));\n  } else {\n    if ((q25 == 2.0)) {\n      zz_2 = (zz_2 * (abs(tmpvar_3.y) - abs(tmpvar_3.x)));\n    };\n  };\n  uv_1 = (uv + ((\n    clamp ((sin(zz_2) / cos(zz_2)), vec2(-20.0, -20.0), vec2(20.0, 20.0))\n   * texsize.zw) * 4.0));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((\n    (0.95 * (texture (sampler_main, uv_1) + tmpvar_6).xyz)\n   + tmpvar_4) - 0.02) - (0.06 * (\n    (texture (sampler_blur2, uv_1).xyz * scale2)\n   + bias2).x));\n  ret = tmpvar_8.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  float inten_3;\n  float dist_4;\n  float ang2_5;\n  vec2 uv2_6;\n  vec3 ret_7;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_4 = 1.0;\n  inten_3 = 1.0;\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\n  for (float n_2 = 1.0; n_2 <= 4.0; n_2 += 1.0) {\n    ang2_5 = (((6.28 * n_2) / 4.0) + (q5 * (n_2 - 1.0)));\n    float tmpvar_8;\n    tmpvar_8 = cos(ang2_5);\n    float tmpvar_9;\n    tmpvar_9 = sin(ang2_5);\n    uv2_6.x = ((uv_1.x * tmpvar_8) - (uv_1.y * tmpvar_9));\n    uv2_6.y = ((uv_1.x * tmpvar_9) + (uv_1.y * tmpvar_8));\n    uv2_6 = (uv2_6 * aspect.yx);\n    dist_4 = (1.0 - fract((\n      (0.25 * n_2)\n     + q29)));\n    dist_4 = (dist_4 * dist_4);\n    inten_3 = ((pow (dist_4, 0.2) * (1.0 - dist_4)) * 2.0);\n    vec2 tmpvar_10;\n    tmpvar_10.x = q18;\n    tmpvar_10.y = q19;\n    vec2 tmpvar_11;\n    tmpvar_11 = (((\n      (3.0 * uv2_6)\n     * dist_4) + 0.5) + ((0.5 * \n      (1.0 - (0.5 * q28))\n    ) * tmpvar_10));\n    xlat_mutableblur = ((texture (sampler_blur1, fract(tmpvar_11)).xyz * scale1) + bias1);\n    xlat_mutableneu = (texture (sampler_main, tmpvar_11).xyz + xlat_mutableblur);\n    xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_3));\n  };\n  uv2_6 = (0.5 * cos((uv_1 * 16.0)));\n  ret_7 = ((xlat_mutableret1 * 0.7) + ((\n    clamp ((0.04 / sqrt(dot (uv2_6, uv2_6))), 0.0, 1.0)\n   * vec3(1.0, 0.7, 0.0)) * q31));\n  float tmpvar_12;\n  tmpvar_12 = (0.5 / ((1.0 + uv_1.x) - (4.0 * \n    fract((time * 3.0))\n  )));\n  ret_7 = (ret_7 + (vec3((q17 * \n    clamp ((tmpvar_12 * tmpvar_12), 0.0, 1.0)\n  )) * vec3(0.0, 0.0, 0.7)));\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_7;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"shader_body {\n\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;\n\nfloat3 noiseVal =.016*(tex2D(sampler_noise_lq, uv*.3+.01*rand_frame));\nfloat3 Feedback = GetBlur1(1-uv);\n\nfloat2 uv2 = .8*sin((uv1)*8);;\nfloat dots = saturate(.01/length(uv2));\n\nfloat2 zz = -uv1 *texsize.xy *q26;\n\nif (q25 ==1) {zz *= (abs(uv1.y)/abs(uv1.x));}\nelse if (q25==2)  {zz *= (abs(uv1.y)-abs(uv1.x));}\n\n\nfloat2 h1 = clamp(tan(zz),-20,20);\n\nuv.xy += h1*texsize.zw * 4;\n\nfloat3 crisp1 = tex2D(sampler_main,uv) + dots;\nfloat blur = GetBlur2 (uv);\nret = .95*crisp1+noiseVal-.02 - .06*blur;\n\n\n}","comp_hlsl":"float3 ret1, neu, blur;\n\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nfloat dist = 1;\nfloat inten = 1;\nfloat mask = 0;\nret1 = 0;\nint anz = 4;\nfloat n = 1;\n//uv = mul(uv,float2x2(_qa));\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz + q5 * (n-1);\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    uv2 *= aspect.yx;\n    dist = 1-frac(.25 *n+q29); //evtl sqrt !\n    dist = dist*dist;\n    inten =  pow(dist,.2)*(1-dist)*2;\n    float2 uv3 = 3*uv2*dist + .5 + .5*(1-0.5*q28)* float2(q18,q19);;\n    neu =  GetPixel (uv3);\n    blur = GetBlur1 (frac(uv3));\n    neu += blur;\n    ret1 = ret1*.9+neu*inten;\n\nn++;\n}\n\nuv2 = .5*cos(uv*16);\nfloat3 dots = saturate(.04/length(uv2)) * float3 (1,.7,0);\n\n\nret = ret1*.7 + dots * q31;\nfloat3 pol = q17 * saturate (pow(.5/(1+uv.x-4*(frac(time*3))),2));\nret += pol*float3 (0,0,.7);\n\n}"}