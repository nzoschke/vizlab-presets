{"version":2,"baseVals":{"rating":5,"decay":0.9,"wrap":0,"wave_a":1.959,"wave_scale":0.01,"wave_smoothing":0.54,"wave_mystery":0.08,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.31,"ob_r":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"r":0,"g2":0,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.trebc=0;a.trebc=0;","frame_eqs_str":"a.x=.5;a.y=.5;a.trebc+=.3*a.treb;a.x=.5+.1*a.bass*Math.sin(a.time+a.trebc);a.y=.5+.1*a.mid*Math.cos(a.time+a.trebc);a.r=a.bass;","init_eqs_eel":"trebc = 0;","frame_eqs_eel":"x = .5;\ny = .5;\n\ntrebc = trebc+treb*.3;\n\nx = .5+((bass*.1)*sin(time+trebc));\ny = .5+((mid*.1)*cos(time+trebc));\n\nr = bass;"},{"baseVals":{"enabled":1,"sides":100,"r":0,"g2":0,"border_a":0},"init_eqs_str":"a.trebc=0;","frame_eqs_str":"a.x=.5;a.y=.5;a.trebc+=.3*a.mid;a.x=.5+.1*a.treb*Math.sin(a.time+a.trebc);a.y=.5+.1*a.bass*Math.cos(a.time+a.trebc);a.g=a.treb;","init_eqs_eel":"","frame_eqs_eel":"x = .5;\ny = .5;\n\ntrebc = trebc+mid*.3;\n\nx = .5+((treb*.1)*sin(time+trebc));\ny = .5+((bass*.1)*cos(time+trebc));\n\ng = treb;"},{"baseVals":{"enabled":1,"sides":100,"r":0,"g2":0,"border_a":0},"init_eqs_str":"a.trebc=0;","frame_eqs_str":"a.x=.5;a.y=.5;a.trebc+=.3*a.bass;a.x=.5+.1*a.mid*Math.sin(a.time+a.trebc);a.y=.5+.1*a.treb*Math.cos(a.time+a.trebc);a.b=a.mid;","init_eqs_eel":"","frame_eqs_eel":"x = .5;\ny = .5;\n\ntrebc = trebc+bass*.3;\n\nx = .5+((mid*.1)*sin(time+trebc));\ny = .5+((treb*.1)*cos(time+trebc));\n\nb = mid;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.1*Math.sin(bitand(0,60*a.sample)+a.time);a.y=.5+.13*Math.cos(bitand(0,60*a.sample)+a.time);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5+sin((0&sample*60)+time)*.1;\ny = .5+1.3*cos((0&sample*60)+time)*.1;"},{"baseVals":{"enabled":1,"usedots":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.9*Math.sin(bitand(0,60*a.sample)-a.time)*.1;a.y=.5+.12*Math.cos(bitand(0,60*a.sample)-a.time);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5+.9*sin((0&sample*60)-time)*.1;\ny = .5+1.2*cos((0&sample*60)-time)*.1;"},{"baseVals":{"enabled":1,"usedots":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+3*Math.sin(bitand(0,60*a.sample)-a.time)*.1;a.y=.5+.39*Math.cos(bitand(0,60*a.sample)-a.time);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5+3*sin((0&sample*60)-time)*.1;\ny = .5+3.9*cos((0&sample*60)-time)*.1;"},{"baseVals":{"enabled":1,"usedots":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+3.5*Math.sin(bitand(0,60*a.sample)+a.time)*.1;a.y=.5+.41*Math.cos(bitand(0,60*a.sample)+a.time);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5+3.5*sin((0&sample*60)+time)*.1;\ny = .5+4.1*cos((0&sample*60)+time)*.1;"}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.mq31=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.atime=0;a.q26=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.q27=0;a.q28=0;a.changer=1;a.speed=1;a.setter=0;a.timer=0;a.random=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.wave_a=0;\na.warp=0;","pixel_eqs_str":"a.zoom+=.4*Math.abs(a.rad-.5);","init_eqs_eel":"changer = 1;\nspeed = 1;\nsetter = 0;\ntimer = 0;\nrandom = 0;","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\nwave_a = 0;\nwarp = 0;","pixel_eqs_eel":"zoom = zoom + (abs(rad-.5)*.4);","warp":" shader_body { \n  vec3 noise_1;\n  vec3 ret_2;\n  noise_1 = ((texture (sampler_noise_lq, (\n    (((texsize.xy * texsize_noise_lq.zw).x * uv) / 2.0)\n   + q23)) + 1.0).xyz - ((roam_sin.xyz * roam_cos.zxy) * 0.2));\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\n  tmpvar_4.y = tmpvar_3.y;\n  ret_2 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\n   - \n    (noise_1 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_3 * 0.01)\n  .xy)).xyz + (noise_1 * 0.1)));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\n    ret_2.y = (ret_2.y - (tmpvar_5.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (ret_2.z - (tmpvar_5.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (ret_2.x - (tmpvar_5.z * 0.5));\n  };\n  float tmpvar_6;\n  tmpvar_6 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_2 = (ret_2 * (0.98 * (tmpvar_6 * tmpvar_6)));\n  ret_2 = (ret_2 - 0.04);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_2;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv).zzz;\n  ret_1 = ((pow (\n    mix (vec3((((texture (sampler_blur1, uv).xyz * scale1) + bias1).z + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).z)), tmpvar_2, tmpvar_2)\n  , vec3(0.8, 2.0, 8.0)) * 1.25) - 0.25);\n  ret_1 = (ret_1 - ((roam_sin.wzy * roam_cos.xyz) * 0.2));\n  ret_1 = (ret_1 * ((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2).y * 1.2));\n  ret_1 = (ret_1 * 2.0);\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_1.x > (q26 * q13)) && (ret_1.x <= (q23 * q11)))) {\n    ret_1.z = (ret_1.z - (tmpvar_3.x * 0.5));\n  };\n  if (((ret_1.y > (q25 * q11)) && (ret_1.y <= (q22 * q12)))) {\n    ret_1.x = (ret_1.x - (tmpvar_3.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\n    ret_1.y = (ret_1.y - (tmpvar_3.z * 0.5));\n  };\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body {\n\n//uv = uv_orig;\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat2 tmp = uv1;\ntmp.x = ang*3; tmp.y = rad;\nuv1 = tmp;\n\nfloat3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);\nnoise-=roam_sin*roam_cos.zxy*.2;\n\nfloat3 ret1 = GetBlur1 (uv)-.3;\nfloat3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;\nfloat3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;\n\nret = -.4*blur + crisp;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; \n    \n ret *= 0.98 * pow(1-.01*q28*q28*rad,2); \n  ret -= 0.04;\n}","comp_hlsl":"sampler sampler_rose;\nshader_body\n{\n\nret = tex2D(sampler_main, uv).z,\n\nret = lerp (\nGetBlur1(uv).z + GetBlur3(uv).z,\nret,\npow(ret,1));\n  \nfloat1 val = ret*6.2831853;\n    ret = pow(ret,float3(.8,2,8))*1.25 - .25;\n\nret-=roam_sin.wzy*roam_cos*.2;\nret *= GetBlur2(uv+float2(0,.01)).y*1.2;\n\nret *= 2; //gamma\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \n}"}