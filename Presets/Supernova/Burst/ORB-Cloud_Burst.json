{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"wrap":0,"darken":1,"wave_a":0.001,"zoom":0.96,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"a.ring1y=0;a.ring4y=0;a.q1=0;a.zs=0;a.ring3y=0;a.ring5x=0;a.ring5y=0;a.ring3x=0;a.ring2x=0;a.ring1x=0;a.ring2y=0;a.ring4x=0;","frame_eqs_str":"","point_eqs_str":"a.zs=.00001<Math.abs(below(a.zs,100))?100:a.zs;a.zs=.00001<Math.abs(above(a.zs,10100))?100:a.zs;a.zs=.00001<Math.abs(above(a.zs,1100))?1:a.zs;a.zs=.1*a.sample;a.ring1x=.1*Math.cos(a.q1*a.zs);a.ring1y=.1*Math.sin(a.q1*a.zs);a.ring2x=.1*Math.cos(a.q1*a.zs*1.1);a.ring2y=.1*Math.sin(a.q1*a.zs*1.1);a.ring3x=.1*Math.cos(a.q1*a.zs*1.2);a.ring3y=.1*Math.sin(a.q1*a.zs*1.2);a.ring4x=.1*Math.cos(a.q1*a.zs*1.3);a.ring4y=.1*Math.sin(a.q1*a.zs*1.3);a.ring5x=.1*Math.cos(a.q1*a.zs*1.4);a.ring5y=\n.1*Math.sin(a.q1*a.zs*1.4);a.ring1x=a.ring1x*Math.cos(.1*a.q1)-a.ring1y*Math.sin(.1*a.q1);a.ring1y=a.ring1x*Math.sin(.1*a.q1)+a.ring1y*Math.cos(.1*a.q1);a.ring2x=a.ring2x*Math.cos(.2*a.q1)-a.ring2y*Math.sin(.2*a.q1);a.ring2y=a.ring2x*Math.sin(.2*a.q1)+a.ring2y*Math.cos(.2*a.q1);a.ring3x=a.ring3x*Math.cos(.3*a.q1)-a.ring3y*Math.sin(.3*a.q1);a.ring3y=a.ring3x*Math.sin(.3*a.q1)+a.ring3y*Math.cos(.3*a.q1);a.ring4x=a.ring4x*Math.cos(.4*a.q1)-a.ring4y*Math.sin(.4*a.q1);a.ring4y=a.ring4x*Math.sin(.4*a.q1)+\na.ring4y*Math.cos(.4*a.q1);a.ring5x=a.ring5x*Math.cos(.5*a.q1)-a.ring5y*Math.sin(.5*a.q1);a.ring5y=a.ring5x*Math.sin(.5*a.q1)+a.ring5y*Math.cos(.5*a.q1);a.x=a.ring1x+a.ring2x+a.ring3x+a.ring4x+a.ring5x+.5;a.y=a.ring1y+a.ring2y+a.ring3y+a.ring4y+a.ring5y+.5;a.r=1;a.g=1;a.b=1;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,100),100,zs);\nzs = if(above(zs, 10100),100, zs);\n\nzs = if(above(zs, 1100),1, zs);\n\n//sum\nzs = 1*sample*0.1;\n\n//draw\n//ring\nring1x  = 0.1*cos(q1*zs*1);\nring1y =  0.1*sin(q1*zs*1);\n\nring2x  = 0.1*cos(q1*zs*1.1);\nring2y =  0.1*sin(q1*zs*1.1);\n\nring3x  = 0.1*cos(q1*zs*1.2);\nring3y =  0.1*sin(q1*zs*1.2);\n\nring4x  = 0.1*cos(q1*zs*1.3);\nring4y =  0.1*sin(q1*zs*1.3);\n\nring5x  = 0.1*cos(q1*zs*1.4);\nring5y =  0.1*sin(q1*zs*1.4);\n\n//rotate\nring1x = ring1x*cos(q1*0.1) - ring1y*sin(q1*0.1);\nring1y = ring1x*sin(q1*0.1) + ring1y*cos(q1*0.1);\n\nring2x = ring2x*cos(q1*0.2) - ring2y*sin(q1*0.2);\nring2y = ring2x*sin(q1*0.2) + ring2y*cos(q1*0.2);\n\nring3x = ring3x*cos(q1*0.3) - ring3y*sin(q1*0.3);\nring3y = ring3x*sin(q1*0.3) + ring3y*cos(q1*0.3);\n\nring4x = ring4x*cos(q1*0.4) - ring4y*sin(q1*0.4);\nring4y = ring4x*sin(q1*0.4) + ring4y*cos(q1*0.4);\n\nring5x = ring5x*cos(q1*0.5) - ring5y*sin(q1*0.5);\nring5y = ring5x*sin(q1*0.5) + ring5y*cos(q1*0.5);\n\n//rotate\n//x = x*cos(q1*0.6) - y*sin(q1*0.6);\n//y = x*sin(q1*0.6) + y*cos(q1*0.6);\n\n//place\nx = ring1x  + ring2x + ring3x + ring4x + ring5x + 0.5;\ny = ring1y  + ring2y + ring3y + ring4y + ring5y + 0.5;\n\nr =1;\ng =1;\nb =1;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"a":0.2},"init_eqs_str":"a.ring1y=0;a.xr=0;a.ring4y=0;a.q1=0;a.zs=0;a.ring3y=0;a.ring5x=0;a.ring5y=0;a.xb=0;a.ring3x=0;a.ring2x=0;a.ring1x=0;a.xg=0;a.ring2y=0;a.ring4x=0;","frame_eqs_str":"","point_eqs_str":"a.zs=.00001<Math.abs(below(a.zs,100))?100:a.zs;a.zs=.00001<Math.abs(above(a.zs,10100))?100:a.zs;a.zs=.00001<Math.abs(above(a.zs,1100))?1:a.zs;a.zs=.1*a.sample;a.ring1x=.1*Math.cos(a.q1*a.zs);a.ring1y=.1*Math.sin(a.q1*a.zs);a.ring2x=.1*Math.cos(a.q1*a.zs*1.1);a.ring2y=.1*Math.sin(a.q1*a.zs*1.1);a.ring3x=.1*Math.cos(a.q1*a.zs*1.2);a.ring3y=.1*Math.sin(a.q1*a.zs*1.2);a.ring4x=.1*Math.cos(a.q1*a.zs*1.3);a.ring4y=.1*Math.sin(a.q1*a.zs*1.3);a.ring5x=.1*Math.cos(a.q1*a.zs*1.4);a.ring5y=\n.1*Math.sin(a.q1*a.zs*1.4);a.ring1x=a.ring1x*Math.cos(.1*a.q1)-a.ring1y*Math.sin(.1*a.q1);a.ring1y=a.ring1x*Math.sin(.1*a.q1)+a.ring1y*Math.cos(.1*a.q1);a.ring2x=a.ring2x*Math.cos(.2*a.q1)-a.ring2y*Math.sin(.2*a.q1);a.ring2y=a.ring2x*Math.sin(.2*a.q1)+a.ring2y*Math.cos(.2*a.q1);a.ring3x=a.ring3x*Math.cos(.3*a.q1)-a.ring3y*Math.sin(.3*a.q1);a.ring3y=a.ring3x*Math.sin(.3*a.q1)+a.ring3y*Math.cos(.3*a.q1);a.ring4x=a.ring4x*Math.cos(.4*a.q1)-a.ring4y*Math.sin(.4*a.q1);a.ring4y=a.ring4x*Math.sin(.4*a.q1)+\na.ring4y*Math.cos(.4*a.q1);a.ring5x=a.ring5x*Math.cos(.5*a.q1)-a.ring5y*Math.sin(.5*a.q1);a.ring5y=a.ring5x*Math.sin(.5*a.q1)+a.ring5y*Math.cos(.5*a.q1);a.x=a.ring1x+a.ring2x+a.ring3x+a.ring4x+a.ring5x+.5;a.y=a.ring1y+a.ring2y+a.ring3y+a.ring4y+a.ring5y+.5;a.xr=.5+.5*Math.sin(.2*a.q1+a.x+a.x);a.xg=.5+.5*Math.sin(.5*a.q1+a.x+a.y);a.xb=.5+.5*Math.sin(.36*a.q1+a.y+a.y);a.r=Math.abs(a.xr-.5)+Math.abs(a.xr-.5);a.g=Math.abs(a.xg-.5)+Math.abs(a.xg-.5);a.b=Math.abs(a.xb-.5)+Math.abs(a.xb-.5);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,100),100,zs);\nzs = if(above(zs, 10100),100, zs);\n\nzs = if(above(zs, 1100),1, zs);\n\nzs = 1*sample*0.1;\n\n//draw\n//ring\nring1x  = 0.1*cos(q1*zs*1);\nring1y =  0.1*sin(q1*zs*1);\n\nring2x  = 0.1*cos(q1*zs*1.1);\nring2y =  0.1*sin(q1*zs*1.1);\n\nring3x  = 0.1*cos(q1*zs*1.2);\nring3y =  0.1*sin(q1*zs*1.2);\n\nring4x  = 0.1*cos(q1*zs*1.3);\nring4y =  0.1*sin(q1*zs*1.3);\n\nring5x  = 0.1*cos(q1*zs*1.4);\nring5y =  0.1*sin(q1*zs*1.4);\n\n//rotate\nring1x = ring1x*cos(q1*0.1) - ring1y*sin(q1*0.1);\nring1y = ring1x*sin(q1*0.1) + ring1y*cos(q1*0.1);\n\nring2x = ring2x*cos(q1*0.2) - ring2y*sin(q1*0.2);\nring2y = ring2x*sin(q1*0.2) + ring2y*cos(q1*0.2);\n\nring3x = ring3x*cos(q1*0.3) - ring3y*sin(q1*0.3);\nring3y = ring3x*sin(q1*0.3) + ring3y*cos(q1*0.3);\n\nring4x = ring4x*cos(q1*0.4) - ring4y*sin(q1*0.4);\nring4y = ring4x*sin(q1*0.4) + ring4y*cos(q1*0.4);\n\nring5x = ring5x*cos(q1*0.5) - ring5y*sin(q1*0.5);\nring5y = ring5x*sin(q1*0.5) + ring5y*cos(q1*0.5);\n\n//place\nx = ring1x  + ring2x + ring3x + ring4x + ring5x + 0.5;\ny = ring1y  + ring2y + ring3y + ring4y + ring5y + 0.5;\n\nxr = 0.5 + 0.5*sin(q1*0.2 + x + x);\nxg = 0.5 + 0.5*sin(q1*0.5 + x + y);\nxb = 0.5 + 0.5*sin(q1*0.36 + y + y);\n\nr=abs(xr-0.5)+abs(xr-0.5);;\ng=abs(xg-0.5)+abs(xg-0.5);;\nb=(abs(xb-0.5)+abs(xb-0.5));"},{"baseVals":{"thick":1,"additive":1,"a":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"//init\nzs = if(below(zs,100),100,zs);\nzs = if(above(zs, 10100),100, zs);\n\n//sum\nzs = zs + q8;\n\n//project\nx = 0.1*cos(q1*zs*1);// /(1 + 0.1*abs(cos(zs)));\ny = 0.1*sin(q1*zs*1);// /(1 + 0.1*abs(cos(zs)));\n\n//rotate\nx = x*cos(q1*0.8) - y*sin(q1*0.8);\ny = x*sin(q1*0.8) + y*cos(q1*0.8);\n\nx = x + 0.5;\ny = y + 0.5;\n\n\nr = 0.5 + 0.5*sin(q1*2.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*2.36 + y + y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,100),100,zs);\nzs = if(above(zs, 10100),100, zs);\n\n//sum\nzs = zs + q8;\n\n//project\nx = 0.1*cos(q1*zs*1);// /(1 + 0.1*abs(cos(zs)));\ny = 0.1*sin(q1*zs*1);// /(1 + 0.1*abs(cos(zs)));\n\n//rotate\nx = x*cos(q1*0.8) - y*sin(q1*0.8);\ny = x*sin(q1*0.8) + y*cos(q1*0.8);\n\nx = x + 0.5;\ny = y + 0.5;\n\n\nr = 0.5 + 0.5*sin(q1*2.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*2.36 + y + y);"},{"baseVals":{"thick":1,"additive":1,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"//init\nzs = if(below(zs,100),100,zs);\nzs = if(above(zs, 10100),100, zs);\n\n//sum\nzs = zs + q8;\n\n//project\nx = 0.5*cos(q1*zs*1);\ny = 0.5*sin(q1*zs*1);\n\n//rotate\nx = x*cos(q1*0.5) - y*sin(q1*0.5);\ny = x*sin(q1*0.5) + y*cos(q1*0.5);\n\nx = x + 0.5;\ny = y + 0.5;\n\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*2.5 + x + y);\nb = 0.5 + 0.5*sin(q1*3.36 + y + y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,100),100,zs);\nzs = if(above(zs, 10100),100, zs);\n\n//sum\nzs = zs + q8;\n\n//project\nx = 0.5*cos(q1*zs*1);\ny = 0.5*sin(q1*zs*1);\n\n//rotate\nx = x*cos(q1*0.5) - y*sin(q1*0.5);\ny = x*sin(q1*0.5) + y*cos(q1*0.5);\n\nx = x + 0.5;\ny = y + 0.5;\n\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*2.5 + x + y);\nb = 0.5 + 0.5*sin(q1*3.36 + y + y);"}],"init_eqs_str":"a.basstime=0;a.stickybit=0;a.volavg2=0;a.q1=0;a.sample1=0;a.difftime=0;a.diff=0;a.edge=0;a.basstime2=0;a.volavg=0;a.bit2=0;a.vol=0;a.q2=0;a.rarr=0;a.q3=0;a.basssum=0;a.sample2=0;a.q8=0;","frame_eqs_str":"a.basstime+=.03*a.bass;a.basstime2=a.basstime+.03*a.bass;a.q1=a.basstime2;a.basstime=.00001<Math.abs(below(a.basstime,1E3))?1E3:a.basstime;a.basstime+=.03*a.bass_att;a.vol=pow(a.bass+a.mid+a.treb,2);a.basssum=a.vol;a.stickybit=mod(a.time,2);a.volavg+=a.vol*equal(a.stickybit,1);a.sample1+=equal(a.stickybit,1);a.volavg2+=a.vol*equal(a.stickybit,0);a.sample2+=equal(a.stickybit,0);a.edge=bnot(equal(a.bit2,a.stickybit));a.volavg-=a.volavg*a.edge*a.stickybit;a.volavg2-=a.volavg2*\na.edge*equal(a.stickybit,0);a.sample1-=a.sample1*a.edge*a.stickybit;a.sample2-=a.sample2*a.edge*equal(a.stickybit,0);a.diff=.00001<Math.abs(equal(a.stickybit,1))?div(a.basssum,div(a.volavg2,a.sample2)):0;a.diff=.00001<Math.abs(equal(a.stickybit,0))?div(a.basssum,div(a.volavg,a.sample1)):a.diff;a.q3=a.diff;a.bit2=mod(a.time,2);a.difftime+=.03*a.diff;a.q2=a.difftime;a.difftime=.00001<Math.abs(above(a.difftime,2E3))?0:a.difftime;a.monitor=a.q1;a.rarr=.01*rand(100);a.decay=.7+.2*Math.abs(Math.cos(1.56*\na.difftime+a.rarr));a.q8=.0001*(a.diff+1);a.monitor=a.q3;","pixel_eqs_str":"a.zoom=1;","init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass*0.03;\nbasstime2 = basstime + bass*0.03;\nq1 = basstime2;\n\n//start in most active range\nbasstime = if(below(basstime,1000),1000,basstime);\n//basstime = if(above(basstime,495),450,basstime);\n\nbasstime = basstime + bass_att*0.03;\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\nq3 = diff;\n\nbit2 = time%2;\n\ndifftime = difftime + diff*0.03;\nq2 = difftime;\n\n//fix a strange error\ndifftime = if(above(difftime,2000),0, difftime);\n\nmonitor = q1;\n\nrarr = rand(100)*0.01;\n\ndecay = 0.7 + 0.2*(abs(cos(difftime*1.56+rarr)));\n\n//shape fill\nq8 = (diff+1)*0.0001;\nmonitor = q3;","pixel_eqs_eel":"zoom = 1;","warp":" shader_body { \n  float tmpvar_1;\n  tmpvar_1 = (texsize.zw * 8.0).x;\n  vec3 tmpvar_2;\n  tmpvar_2 = ((texture (sampler_main, (uv + \n    (vec2(1.0, 0.0) * tmpvar_1)\n  )).xyz + texture (sampler_main, (uv + \n    (vec2(1.0, 0.0) * tmpvar_1)\n  )).xyz) * 0.5);\n  vec3 tmpvar_3;\n  tmpvar_3 = ((texture (sampler_main, (uv + \n    (vec2(0.0, 1.0) * tmpvar_1)\n  )).xyz + texture (sampler_main, (uv + \n    (vec2(0.0, 1.0) * tmpvar_1)\n  )).xyz) * 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (texture (sampler_fc_main, ((\n    ((uv - 0.5) * (1.0 - ((tmpvar_2 + \n      (tmpvar_3 * texture (sampler_main, ((uv + tmpvar_2.xy) + tmpvar_3.xy)).xyz)\n    ).x * 0.06)))\n   * 0.99) + 0.5)).xyz - 0.03);\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  tmpvar_2 = ((tmpvar_3 * vec2(-1.0, 1.0)) + 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur1, uv);\n  ret_1 = (((\n    (mix (texture (sampler_main, ((tmpvar_3 * 0.98) + 0.5)).xyz, texture (sampler_main, ((\n      (tmpvar_2 - 0.5)\n     * 0.98) + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) + (((tmpvar_4.xyz * scale1) + bias1) * 0.2))\n   + \n    (((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1) * 0.2)\n  ) + (\n    (tmpvar_4.xyz * scale1)\n   + bias1)) + ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1));\n  ret_1 = (ret_1 * 0.9);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body\n{\n   float d = texsize.zw*8;\n   float3 deltax = (GetPixel(uv + float2(1,0)*d) + GetPixel(uv + float2(1,0)*d))*0.5;    \n   float3 deltay = (GetPixel(uv + float2(0,1)*d) + GetPixel(uv + float2(0,1)*d))*0.5;    \n     \n\n   float delta = ((deltax+deltay * tex2D(sampler_main, uv + deltax+deltay))).xy;\n   ret = tex2D(sampler_fc_main, (uv-0.5)*(1 - delta*0.06)*0.99 + 0.5 );\n   ret = ret -0.03;\n}","comp_hlsl":"\nshader_body\n{\n    float2 uv_echo = (uv - 0.5)*float2(-1,1) + 0.5;\n    ret = lerp( tex2D(sampler_main, (uv-0.5)*0.98 + 0.5).xyz, \n                tex2D(sampler_main, (uv_echo-0.5)*0.98 + 0.5).xyz, \n                0.50 \n              )  + GetBlur1(uv)*0.2 + GetBlur1(uv_echo)*0.2\n              + GetBlur1(uv) + GetBlur1(uv_echo);\n    ret = ret*0.9; //gamma\n    //ret =  ret*(1 - ret)*10; //brighten\n}"}