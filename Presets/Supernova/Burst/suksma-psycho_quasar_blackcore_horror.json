{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.906,"echo_zoom":2.003,"echo_alpha":0.5,"echo_orient":3,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":1,"warpanimspeed":0.01,"warpscale":1.766,"zoomexp":1.00016,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.88,"y":0.8,"rad":0.33004,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q8=0;","frame_eqs_str":"a.x=.5+.4*Math.sin(.2765*a.time+.341*a.q8);a.y=.5+.4*Math.sin(.311*a.time+.213*a.q8);a.ang=3.1415-3.1415*Math.cos(.1389*a.time);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.2765*time+0.341*q8);\ny = 0.5+ 0.4*sin(0.311*time+0.213*q8);\nang = 3.1415-3.1415*cos(time*0.1389);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.88,"y":0.2,"rad":0.33004,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q8=0;","frame_eqs_str":"a.x=.5+.4*Math.sin(.212*a.time+.1*a.q8);a.y=.5+.4*Math.sin(.2891*a.time+.121*a.q8);a.ang=3.1415+3.1415*Math.sin(.181*a.time);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.212*time+0.1*q8);\ny = 0.5+ 0.4*sin(0.2891*time+0.121*q8);\nang = 3.1415+3.1415*sin(time*0.181);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.12,"y":0.8,"rad":0.33004,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q6=0;","frame_eqs_str":"a.x=.5+.4*Math.sin(.0932*a.time+.421*a.q6);a.y=.5+.4*Math.sin(.1178*a.time+.2135*a.q6);a.ang=3.1415-3.1415*Math.cos(.1154*a.time);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.0932*time+0.421*q6);\ny = 0.5+ 0.4*sin(0.1178*time+0.2135*q6);\nang = 3.1415-3.1415*cos(time*0.1154);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.12,"y":0.2,"rad":0.33004,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q4=0;","frame_eqs_str":"a.x=.5+.4*Math.sin(.105*a.time+.3*a.q4);a.y=.5+.4*Math.sin(.1267*a.time+.323*a.q4);a.ang=3.1415+3.1415*Math.sin(.2654*a.time);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.105*time+0.3*q4);\ny = 0.5+ 0.4*sin(0.1267*time+0.323*q4);\nang = 3.1415+3.1415*sin(time*0.2654);"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"scaling":0.46374,"smoothing":0},"init_eqs_str":"a.y3=0;a.z2=0;a.y1=0;a.t5=0;a.t1=0;a.x1=0;a.z4=0;a.nsample=0;a.t8=0;a.z3=0;a.t3=0;a.rotz=0;a.x3=0;a.x4=0;a.tvar=0;a.x2=0;a.t2=0;a.y2=0;a.svar=0;a.fvar=0;a.z1=0;a.roty=0;a.t4=0;a.y4=0;a.rotx=0;a.t8=div(3.14159265,2);a.t5=1;","frame_eqs_str":"a.rotx+=a.bass;a.roty+=a.mid;a.rotz+=a.treb;a.t1=div(a.t8*a.rotx,180);a.t2=div(a.t8*a.roty,180);a.t3=div(a.t8*a.rotz,180);a.t4=Math.sin(a.bass+.86*a.t8);a.t5=10+8*Math.cos(a.time+.56*a.t8);","point_eqs_str":"a.fvar=512*a.sample;a.svar=128*a.fvar;a.tvar=bitand(0,a.svar);a.nsample=4.5*a.tvar;a.x1=-2.5+1.5*Math.sin(a.sample);a.y1=-1*Math.cos(a.t8*a.nsample);a.z1=-1*Math.sin(a.t8*a.nsample);a.y2=a.y1*Math.cos(a.t1)-a.z1*Math.sin(a.t1);a.z2=a.y1*Math.sin(a.t1)+a.z1*Math.cos(a.t1);a.x2=a.z2*Math.sin(a.t2)+a.x1*Math.cos(a.t2);a.z3=a.z2*Math.cos(a.t2)-a.x1*Math.sin(a.t2);a.x3=a.x2*Math.cos(a.t3)-a.y2*Math.sin(a.t3);a.y3=a.y2*Math.cos(a.t3)+a.x2*Math.sin(a.t3);a.x4=a.x3;a.y4=a.y3;a.z4=a.z3+\n5;a.x=.5+.5*div(a.x4,1+.5*a.z4);a.y=.5+.5*div(a.y4,1+.5*a.z4);a.a=-.9+Math.sin(a.nsample+a.time);a.a=.00001<Math.abs(below(a.a,0))?0:a.a;a.a=1;a.r=.5*Math.sin(Math.abs(a.x2*Math.sin(a.time)))+.5;a.b=.5*Math.sin(Math.abs(a.y3+Math.sin(.8765*a.time)))+.5;a.g=a.x2*a.z2;","init_eqs_eel":"//pi\nt8=3.14159265/2;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = sin(bass+0.86*t8);\nt5 = 10+8*cos(time+0.56*t8);","point_eqs_eel":"//Define 3D Shape\n\n//Sphere\nfvar = sample*512;\nsvar = fvar*128;\ntvar = 0&svar;\nnsample = tvar*4.5;\nx1 = -2.5+(1.5)*sin(sample);\ny1 = (-1)*cos(t8*nsample);\nz1 = (-1)*sin(t8*nsample);\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3;\ny4 = y3;\nz4 = z3+5;\n//draw 3d shape in 2d\nx=0.5+0.5*(x4/(1+z4*0.5));\ny=0.5+0.5*(y4/(1+z4*0.5));\n\na = -.9+sin(nsample+time);\na = if(below(a,0),0,a);\na=1;\nr =sin(abs(x2*sin(time)))*0.5 + 0.5;\nb = sin(abs(y3+sin(0.8765*time)))*0.5 + 0.5;\ng = x2*z2;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":0.46374,"smoothing":0},"init_eqs_str":"a.y3=0;a.z2=0;a.y1=0;a.t5=0;a.t1=0;a.x1=0;a.z4=0;a.nsample=0;a.t8=0;a.z3=0;a.t3=0;a.rotz=0;a.x3=0;a.x4=0;a.tvar=0;a.x2=0;a.t2=0;a.y2=0;a.svar=0;a.fvar=0;a.z1=0;a.roty=0;a.t4=0;a.y4=0;a.rotx=0;a.t8=3.14159265;a.t5=1;","frame_eqs_str":"a.rotx+=a.bass;a.roty+=a.mid;a.rotz+=a.treb;a.t1=div(a.t8*a.rotx,180);a.t2=div(a.t8*a.roty,180);a.t3=div(a.t8*a.rotz,180);a.t4=3*Math.sin(a.time+.776*a.t8);a.t5=10+8*Math.cos(a.time+.56*a.t8);","point_eqs_str":"a.fvar=512*a.sample;a.svar=128*a.fvar;a.tvar=bitand(0,a.svar);a.nsample=4.5*a.tvar;a.x1=-.75+1.5*Math.sin(a.sample);a.y1=Math.cos(a.t8*a.nsample);a.z1=Math.sin(a.t8*a.nsample);a.y2=a.y1*Math.cos(a.t1)-a.z1*Math.sin(a.t1);a.z2=a.y1*Math.sin(a.t1)+a.z1*Math.cos(a.t1);a.x2=a.z2*Math.sin(a.t2)+a.x1*Math.cos(a.t2);a.z3=a.z2*Math.cos(a.t2)-a.x1*Math.sin(a.t2);a.x3=a.x2*Math.cos(a.t3)-a.y2*Math.sin(a.t3);a.y3=a.y2*Math.cos(a.t3)+a.x2*Math.sin(a.t3);a.x4=a.x3;a.y4=a.y3;a.z4=a.z3+5;\na.x=.5+.75*div(a.x4,1+.5*a.z4);a.y=.5+.75*div(a.y4,1+.5*a.z4);a.a=-.9+Math.sin(a.nsample+a.time);a.a=.00001<Math.abs(below(a.a,0))?0:a.a;a.a=1;a.r=a.y2*a.z2;a.b=a.z3+a.y3;a.g=div(a.z3,a.x2);","init_eqs_eel":"//pi\nt8=3.14159265;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 3*sin(time+0.776*t8);\nt5 = 10+8*cos(time+0.56*t8);\n","point_eqs_eel":"//Define 3D Shape\n\n//Sphere\nfvar = sample*512;\nsvar = fvar*128;\ntvar = 0&svar;\nnsample = tvar*4.5;\nx1 = -.75+(1.5)*sin(sample);\ny1 = (1)*cos(t8*nsample);\nz1 = (1)*sin(t8*nsample);\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3;\ny4 = y3;\nz4 = z3+5;\n//draw 3d shape in 2d\nx=0.5+0.75*(x4/(1+z4*0.5));\ny=0.5+0.75*(y4/(1+z4*0.5));\n\na = -.9+sin(nsample+time);\na = if(below(a,0),0,a);\na=1;\nr = y2*z2;\nb = z3+y3;\ng = z3/x2;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":0.46374,"smoothing":0},"init_eqs_str":"a.y3=0;a.z2=0;a.y1=0;a.t5=0;a.t1=0;a.x1=0;a.z4=0;a.nsample=0;a.t8=0;a.z3=0;a.t3=0;a.rotz=0;a.x3=0;a.x4=0;a.tvar=0;a.x2=0;a.t2=0;a.y2=0;a.svar=0;a.fvar=0;a.z1=0;a.roty=0;a.t4=0;a.y4=0;a.rotx=0;a.t8=4.900884534;a.t5=1;","frame_eqs_str":"a.rotx+=a.bass;a.roty+=a.mid;a.rotz+=a.treb;a.t1=div(a.t8*a.rotx,180);a.t2=div(a.t8*a.roty,180);a.t3=div(a.t8*a.rotz,180);a.t4=12+13*Math.sin(a.time+2.46*a.t8);a.t5=2+8*Math.cos(a.time+1.66*a.t8);a.r=1;a.b=0;a.g=0;","point_eqs_str":"a.fvar=512*a.sample;a.svar=128*a.fvar;a.tvar=bitand(0,a.svar);a.nsample=4.5*a.tvar;a.x1=-.5+2.5*Math.sin(a.sample);a.y1=Math.cos(a.t8*a.nsample);a.z1=Math.sin(a.t8*a.nsample);a.y2=a.y1*Math.cos(a.t1)-a.z1*Math.sin(a.t1);a.z2=a.y1*Math.sin(a.t1)+a.z1*Math.cos(a.t1);a.x2=a.z2*Math.sin(a.t2)+a.x1*Math.cos(a.t2);a.z3=a.z2*Math.cos(a.t2)-a.x1*Math.sin(a.t2);a.x3=a.x2*Math.cos(a.t3)-a.y2*Math.sin(a.t3);a.y3=a.y2*Math.cos(a.t3)+a.x2*Math.sin(a.t3);a.x4=a.x3;a.y4=a.y3;a.z4=a.z3+5;a.x=\n.5-1*div(a.x4,1+.5*a.z4);a.y=.5-1*div(a.y4,1+.5*a.z4);a.a=-.9+Math.sin(a.nsample+a.time);a.a=.00001<Math.abs(below(a.a,0))?0:a.a;a.a=1;a.g=a.y2;a.b=a.x2;a.r=a.z2+a.z3;","init_eqs_eel":"//pi\nt8=3.14159265*1.56;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 12+13*sin(time+2.46*t8);\nt5 = 2+8*cos(time+1.66*t8);\nr = 1;\nb = 0;\ng=0;","point_eqs_eel":"//Define 3D Shape\n\n//Sphere\nfvar = sample*512;\nsvar = fvar*128;\ntvar = 0&svar;\nnsample = tvar*4.5;\nx1 = -.5+(2.5)*sin(sample);\ny1 = (1)*cos(t8*nsample);\nz1 = (1)*sin(t8*nsample);\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3;\ny4 = y3;\nz4 = z3+5;\n//draw 3d shape in 2d\nx=0.5-1*(x4/(1+z4*0.5));\ny=0.5-1*(y4/(1+z4*0.5));\n\na = -.9+sin(nsample+time);\na = if(below(a,0),0,a);\na=1;\ng=y2;\nb=x2;\nr= z2+z3;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"scaling":0.46374,"smoothing":0},"init_eqs_str":"a.y3=0;a.z2=0;a.y1=0;a.t5=0;a.t1=0;a.x1=0;a.z4=0;a.nsample=0;a.t8=0;a.z3=0;a.t3=0;a.rotz=0;a.x3=0;a.x4=0;a.tvar=0;a.x2=0;a.t2=0;a.y2=0;a.svar=0;a.fvar=0;a.z1=0;a.roty=0;a.t4=0;a.y4=0;a.rotx=0;a.t8=3.14159265*.15;a.t5=1;","frame_eqs_str":"a.rotx+=a.bass;a.roty+=a.mid;a.rotz+=a.treb;a.t1=div(a.t8*a.rotx,180);a.t2=div(a.t8*a.roty,180);a.t3=div(a.t8*a.rotz,180);a.t4=3*Math.sin(a.time+.66*a.t8);a.t5=10+8*Math.cos(a.time+.66*a.t8);","point_eqs_str":"a.fvar=512*a.sample;a.svar=128*a.fvar;a.tvar=bitand(0,a.svar);a.nsample=4.5*a.tvar;a.x1=-.75+1.5*Math.sin(a.sample);a.y1=Math.cos(a.t8*a.nsample);a.z1=Math.sin(a.t8*a.nsample);a.y2=a.y1*Math.cos(a.t1)-a.z1*Math.sin(a.t1);a.z2=a.y1*Math.sin(a.t1)+a.z1*Math.cos(a.t1);a.x2=a.z2*Math.sin(a.t2)+a.x1*Math.cos(a.t2);a.z3=a.z2*Math.cos(a.t2)-a.x1*Math.sin(a.t2);a.x3=a.x2*Math.cos(a.t3)-a.y2*Math.sin(a.t3);a.y3=a.y2*Math.cos(a.t3)+a.x2*Math.sin(a.t3);a.x4=a.x3;a.y4=a.y3;a.z4=a.z3+5;\na.x=.5+.8*div(a.x4,1+.5*a.z4);a.y=.5+.8*div(a.y4,1+.5*a.z4);a.a=-.9+Math.sin(a.nsample+a.time);a.a=.00001<Math.abs(below(a.a,0))?0:a.a;a.a=1;a.b=a.z4;a.r=a.z2-a.x1;a.g=a.y2+a.z2;","init_eqs_eel":"//pi\nt8=3.14159265*0.15;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 3*sin(time+0.66*t8);\nt5 = 10+8*cos(time+0.66*t8);\n","point_eqs_eel":"//Define 3D Shape\n\n//Sphere\nfvar = sample*512;\nsvar = fvar*128;\ntvar = 0&svar;\nnsample = tvar*4.5;\nx1 = -.75+(1.5)*sin(sample);\ny1 = (1)*cos(t8*nsample);\nz1 = (1)*sin(t8*nsample);\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3;\ny4 = y3;\nz4 = z3+5;\n//draw 3d shape in 2d\nx=0.5+0.8*(x4/(1+z4*0.5));\ny=0.5+0.8*(y4/(1+z4*0.5));\n\na = -.9+sin(nsample+time);\na = if(below(a,0),0,a);\na=1;\n\nb = z4;\nr=z2-x1;\ng=y2+z2;"}],"init_eqs_str":"a.thresh=0;a.dx_r=0;a.dy_r=0;","frame_eqs_str":"a.wave_r=a.wave_r+.35*Math.sin(1.4*a.time)+.15*Math.sin(2.5*a.time+2*a.mid);a.wave_g=a.wave_g+.85*Math.sin(1.7*a.time)+.15*Math.sin(2.11*a.time+2.2*a.treb);a.wave_b=a.wave_b+.35*Math.sin(9.84*a.time)+.15*Math.sin(2.3*a.time+2*a.bass);a.wave_x+=.473*(.2583*Math.sin(1.1*a.time)*Math.cos(.23*a.time)+.24*Math.cos(a.time));a.wave_y+=.473*(.2331*Math.cos(1.3*a.time)*Math.sin(1.6*a.time)+.2*Math.sin(1.1*a.time));a.wave_mystery+=.23*Math.sin(a.time);a.ob_size=.085*above(a.bass,1.3)*\na.bass_att;","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=1.15*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.rad;a.dy_r=1.15*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.rad;a.sy-=below(a.rad,.5*Math.cos(a.time))*above(a.rad,.5*Math.cos(a.time))*.034*(3.5*Math.sin(1.03*a.rad)-1.9*a.rad*a.bass_att)*Math.cos(1.15*a.time);a.sy+=below(a.rad,.5*Math.sin(a.time))*below(a.rad,.5*Math.sin(a.time))*.034*(3.5*Math.cos(1.02*\na.rad)-.89*a.rad*a.mid_att)*Math.cos(1.1*a.time);a.rot-=3*above(a.rad,.5*Math.cos(a.time))*above(a.rad,.5*Math.cos(a.time))*.035*(3.25*Math.tan(1.06*a.rad)-1.1*a.rad*a.mid_att)*Math.sin(.9*a.time);a.rot-=3*above(a.rad,.5*Math.sin(a.time))*below(a.rad,.5*Math.sin(a.time))*.033*(3.25*Math.tan(1.06*a.rad)-1*a.rad*a.treb_att)*Math.sin(1.1*a.time);a.zoom-=.1*(.7-a.rad);a.dy+=.002*Math.sin(.86*Math.cos(2.25*a.dx_r*a.treb)*Math.sin(.52*a.time*Math.cos(Math.max(.075*a.bass_att,.05*a.bass))));a.dx+=.002*Math.cos(.94*\nMath.sin(2.25*a.dy_r*a.bass)*Math.sin(.79*a.time*Math.sin(Math.max(.075*a.treb_att,.05*a.bass))));a.dy-=.025*Math.sin(.94*(1+1.1*a.dy_r*Math.cos(4*a.time))*a.time)*above(a.dx_r,Math.sin(.14*a.bass_att));a.dx+=.025*Math.sin(.97*(.25-a.dy_r*Math.sin(3*a.time))*a.time)*above(a.dy_r,Math.cos(.2*a.bass_att));","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.35*sin(1.4*time) + 0.15*sin(2.5*time+2*mid);\nwave_g = wave_g + 0.85*sin(1.7*time) + 0.15*sin(2.11*time+2.2*treb);\nwave_b = wave_b + 0.35*sin(9.84*time) + 0.15*sin(2.3*time+2*bass);\n//wave_y = wave_y + 0.24*sin(2.5*time);\n//wave_x = 0.75 + 0.45*sin(sin(0.5*bass_att-0.4*treb_att)*sin(time));\n//warp = warp + (0.8*bass_att - 0.8*treb_att)*0.25;\n\nwave_x = wave_x + 0.473*(0.21*sin(1.1*time)*1.23*cos(0.23*time)+0.24*cos(time));\nwave_y = wave_y + 0.473*(0.21*cos(1.3*time)*1.11*sin(1.6*time)+0.2*sin(1.1*time));\nwave_mystery = wave_mystery + 0.23*sin(time);\nob_size = above(bass,1.3)*(0.085*bass_att);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*1.15*sin(5*time)+(1-equal(thresh,2))*rad;\ndy_r = equal(thresh,2)*1.15*sin(6*time)+(1-equal(thresh,2))*rad;\nsy = sy - below(rad,0.5*cos(time))*above(rad,0.5*cos(time))*(0.034*(7*sin(rad*1.03)*\n0.5-rad*1.9*bass_att))*cos(1.15*time);\nsy = sy + below(rad,0.5*sin(time))*below(rad,0.5*sin(time))*(0.034*(7*cos(rad*1.02)*\n0.5-rad*0.89*mid_att))*cos(1.1*time);\nrot = rot - 3*above(rad,0.5*cos(time))*above(rad,0.5*cos(time))*(0.035*(6.5*tan(rad*1.06)*\n0.5-rad*1.1*mid_att))*sin(0.9*time);\nrot = rot - 3*above(rad,0.5*sin(time))*below(rad,0.5*sin(time))*(0.033*(6.5*tan(rad*1.06)*\n0.5-rad*1*treb_att))*sin(1.1*time);\nzoom = zoom - 0.1*(0.7-rad);\ndy = dy + (0.002*sin(cos(dx_r*2.25*treb)*0.86*sin(0.52*time*cos(max(0.075*bass_att,0.05*bass)))));\ndx = dx + (0.002*cos(sin(dy_r*2.25*bass)*0.94*sin(0.79*time*sin(max(0.075*treb_att,0.05*bass)))));\ndy = dy - sin((1+1.1*dy_r*cos(4*time))*0.94*time)*(0.025*above(dx_r,sin(0.14*bass_att)));\ndx = dx + sin((0.25-dy_r*sin(3*time))*0.97*time)*(0.025*above(dy_r,cos(0.2*bass_att)));","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + ((0.004 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ).xy * vec2(0.0, 1.0)));\n  uv6_2 = (0.4 * sin((\n    (((uv - 0.5) * aspect.xy) * 18.0)\n   * rand_frame.xy)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (vec3((0.051 / sqrt(dot (uv6_2, uv6_2)))) * vec3(0.15, 0.12, 0.075))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_3.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  vec2 uv2_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv2_4.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\n  uv2_4.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\n  dist_3 = (1.0 - fract((0.25 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = (xlat_mutableneu * inten_2);\n  uv2_4.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\n  uv2_4.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\n  dist_3 = (1.0 - fract((0.5 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\n  uv2_4.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\n  dist_3 = (1.0 - fract((0.75 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  uv2_4.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  dist_3 = (1.0 - fract((1.0 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = xlat_mutableret1;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;\n\n\nuv6 = .4*sin(uv1*18*rand_frame);\nmus = .051/(length(uv6));\nmus *= float3 (1,.8,.5);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .15*mus;\nfloat2 uv2 = (uv_orig-.5)-float2(.5,.5+0.1*q25);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"float3 ret1, neu, blur;\n\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nfloat dist = 1;\nfloat dista = 0;\nfloat inten = 1;\nfloat mask = 0;\nret1 = 0;\nint anz = 4;\nfloat n = 1;\n//uv = mul(uv,float2x2(_qa));\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    dist = 1-frac(.25*n+time/1); //evtl sqrt !\n    inten =  pow(dist,.3)*(1-dist)*2;\n//    inten =  (1-dist);\n\n    neu =  GetPixel (2*uv2*dist + 0.5 );\n    blur = GetBlur1 (2*uv2*dist + 0.54 );\n    neu += blur;\n//    neu *= (neu >= 0);\n  //  mask = 1-(neu*inten >= .1) * (dist < dista);\n    ret1 = ret1*.9+neu*inten;\n    dista = dist;\nn++;\n}\n\nfloat dz = ret1/2;\nfloat2 rs1 = uv*8 + time;\n\nfloat scale = 64;\nrs1 = rs1 + dz*scale*.4;\n\nfloat lava = tex2D (sampler_noise_hq,rs1/scale).x;\nlava = saturate(-abs (lava) + 1);\nfloat3 lay1 = saturate(float3 (lava,lava*(lava-0.55)*2,(lava-1)*16));\n\nret = ret1*1 + 0*float3(0,0,.3)*rad + lay1*0;\n\n}"}