{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"additivewave":1,"wave_brighten":0,"wave_a":1.264,"wave_scale":0.264,"wave_smoothing":0.72,"wave_mystery":-0.4,"zoom":1.205,"warp":0.01605,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.3*(.9*Math.sin(1.753*a.time)+.4*Math.sin(1.315*a.time+1));a.wave_g+=.3*(.9*Math.sin(2.883*a.time+3)+.4*Math.sin(1.006*a.time+4));a.wave_b+=.3*(.9*Math.sin(1.393*a.time+5)+.4*Math.sin(2.733*a.time+2));a.zoom+=.013*(.6*Math.sin(.339*a.time)+.4*Math.sin(.276*a.time));a.rot+=.04*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.cx+=.003*(.6*Math.sin(.471*a.time)+.4*Math.sin(.297*a.time));a.cy+=.003*(.6*Math.sin(.379*a.time)+.4*Math.sin(.351*a.time));a.dx+=.003*(.6*\nMath.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.rot+=.02*(Math.sin(2.134*a.time)+Math.sin(1.7134*a.time)+Math.sin(2.834*a.time));a.dx+=.01*(Math.sin(1.134*a.time)+Math.sin(.7134*a.time)+Math.sin(2.334*a.time));a.dy+=.01*(Math.sin(1.8834*a.time)+Math.sin(1.0144*a.time)+Math.sin(1.334*a.time));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.300*( 0.90*sin(1.753*time+0) + 0.40*sin(1.315*time+1) );\nwave_g = wave_g + 0.300*( 0.90*sin(2.883*time+3) + 0.40*sin(1.006*time+4) );\nwave_b = wave_b + 0.300*( 0.90*sin(1.393*time+5) + 0.40*sin(2.733*time+2) );\nzoom = zoom + 0.013*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\ncx = cx + 0.003*( 0.60*sin(0.471*time) + 0.40*sin(0.297*time) );\ncy = cy + 0.003*( 0.60*sin(0.379*time) + 0.40*sin(0.351*time) );\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\nrot=rot+0.02*(sin(time*2.134)+sin(time*1.7134)+sin(time*2.834));\ndx=dx+0.01*(sin(time*1.134)+sin(time*0.7134)+sin(time*2.334));\ndy=dy+0.01*(sin(time*1.8834)+sin(time*1.0144)+sin(time*1.334));","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  vec2 zz_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - vec2(0.5, 0.5));\n  vec3 tmpvar_4;\n  tmpvar_4 = (0.016 * texture (sampler_noise_lq, ((uv * 0.3) + (0.01 * rand_frame).xy))).xyz;\n  vec2 tmpvar_5;\n  tmpvar_5 = (0.8 * sin((tmpvar_3 * 8.0)));\n  float tmpvar_6;\n  tmpvar_6 = clamp ((0.01 / sqrt(\n    dot (tmpvar_5, tmpvar_5)\n  )), 0.0, 1.0);\n  vec2 tmpvar_7;\n  tmpvar_7 = ((-(tmpvar_3) * texsize.xy) * q26);\n  zz_2 = tmpvar_7;\n  if ((q25 == 1.0)) {\n    zz_2 = (tmpvar_7 * (abs(tmpvar_3.y) / abs(tmpvar_3.x)));\n  } else {\n    if ((q25 == 2.0)) {\n      zz_2 = (zz_2 * (abs(tmpvar_3.y) - abs(tmpvar_3.x)));\n    };\n  };\n  uv_1 = (uv + ((\n    clamp ((sin(zz_2) / cos(zz_2)), vec2(-20.0, -20.0), vec2(20.0, 20.0))\n   * texsize.zw) * 4.0));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((\n    (0.95 * (texture (sampler_main, uv_1) + tmpvar_6).xyz)\n   + tmpvar_4) - 0.02) - (0.06 * (\n    (texture (sampler_blur2, uv_1).xyz * scale2)\n   + bias2).x));\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = ((texture (sampler_main, uv).xyz * 1.5) - 0.1);\n  ret_1.y = (ret_1 * 0.7).y;\n  ret_1.x = (((texture (sampler_blur1, uv).xyz * scale1) + bias1).x - 0.03);\n  ret_1.z = (((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2).z * 1.5) - 0.05);\n  ret_1 = (ret_1 * 2.3);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body {\n\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;\n\nfloat3 noiseVal =.016*(tex2D(sampler_noise_lq, uv*.3+.01*rand_frame));\nfloat3 Feedback = GetBlur1(1-uv);\n\nfloat2 uv2 = .8*sin((uv1)*8);;\nfloat dots = saturate(.01/length(uv2));\n\nfloat2 zz = -uv1 *texsize.xy *q26;\n\nif (q25 ==1) {zz *= (abs(uv1.y)/abs(uv1.x));}\nelse if (q25==2)  {zz *= (abs(uv1.y)-abs(uv1.x));}\n\n\nfloat2 h1 = clamp(tan(zz),-20,20);\n\nuv.xy += h1*texsize.zw * 4;\n\nfloat3 crisp1 = tex2D(sampler_main,uv) + dots;\nfloat blur = GetBlur2 (uv);\nret = .95*crisp1+noiseVal-.02 - .06*blur;\n\n\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret = ret*1.5 - 0.1;\n\n    float4 g;\n    float3 d = float3(texsize.zw * 4, 0);\n    g.x = lum(GetBlur1(uv + d.xz));\n    g.y = lum(GetBlur1(uv - d.xz));\n    g.z = lum(GetBlur1(uv + d.zy));\n    g.w = lum(GetBlur1(uv - d.zy));\n    \n    ret *= 0.7;\n    ret.x += saturate(g.x-g.y)*5;\n    ret.z += saturate(g.y-g.x)*5;\n    //ret.xy += (g.xz-g.yw)*3;\n\nret.x = GetBlur1(uv).x - 0.03;\nret.z = GetBlur2(uv).z*1.5 - 0.05;\nret *= 2.3;\n\n}\n\n"}