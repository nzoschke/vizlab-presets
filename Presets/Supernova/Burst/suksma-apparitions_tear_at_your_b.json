{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.9,"additivewave":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.9995,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_g":1,"ob_b":0.2,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"mv_x":12.8,"mv_y":9.6,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"rad":0.49138,"r":0,"g":1,"b":1,"r2":0.7,"b2":1,"border_a":0},"init_eqs_str":"a.q4=0;a.q5=0;","frame_eqs_str":"a.x=.5+a.q4;a.y=.5+a.q5;a.a=a.bass_att+a.mid_att+a.treb_att;a.a*=.25;a.a=a.a*a.a*1.5;a.r2=.5*Math.sin(1.31*a.bass);a.g2=.5*Math.sin(1.32*a.bass);a.b2=.5*Math.sin(1.33*a.bass);a.r=a.bass+1.31*a.time;a.g=a.bass+div(1.32*a.time,2);a.b=a.bass+div(1.33*a.time,3);a.rad=Math.sin(a.bass);","init_eqs_eel":"","frame_eqs_eel":"x=.5+q4;y=.5+q5;\na=bass_att+mid_att+treb_att;\na=a*0.25;\na=a*a*1.5;\nr2 = 0.5*sin(bass*1.31);\ng2 = 0.5*sin(bass*1.32);\nb2 = 0.5*sin(bass*1.33);\nr = bass+1.31*time;\ng = bass+1.32*time/2;\nb = bass+1.33*time/3;\n//zoom = sin(bass);\nrad = sin(bass);"},{"baseVals":{"sides":24,"rad":0.01842,"tex_zoom":0.81954,"g":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_ang=0.01;\nx=.5-q4;\ny=.5-q5;","init_eqs_eel":"","frame_eqs_eel":"tex_ang=0.01;\nx=.5-q4;\ny=.5-q5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.vol=0;a.bass_thresh=0;","frame_eqs_str":"a.wave_r+=.35*(.6*Math.sin(.825*a.time)+.4*Math.sin(.915*a.time));a.wave_g+=.35*(.6*Math.sin(.9*a.time)+.4*Math.sin(1.025*a.time));a.vol=div(5*a.bass+3*a.mid+2*a.treb,10);a.wave_x+=.03*a.vol*Math.sin(.727*a.time);a.wave_y+=.04*a.vol*Math.sin(.777*a.time);a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx=.005+.002*(.6*Math.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.dy=.005+.002*(.6*Math.sin(.234*a.time)+.4*\nMath.sin(.277*a.time));a.monitor=a.time;","pixel_eqs_str":"a.cx=.1*bitand(.25,10*a.x-.5)+.025;a.cy=.1*bitand(.25,10*a.y-.5)+.025;a.sx=a.sx-.005-.01*Math.abs(a.x-1);a.sy=a.sy-.005-.01*Math.abs(a.x-1);a.zoom=pow(a.rad,.05)+.05;a.rot=.03*Math.sin(.84*a.time)-.013*Math.cos(.784*a.time)+.02*Math.sin(1-a.rad);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.825*time) + 0.40*sin(0.915*time) );\nwave_g = wave_g + 0.350*( 0.60*sin(0.900*time) + 0.40*sin(1.025*time) );\nvol = (5*bass + 3*mid + 2*treb)/10;\nwave_x = wave_x + 0.03*vol*sin(0.727*time);\nwave_y = wave_y + 0.04*vol*sin(0.777*time);\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\ndx = 0.005 + 0.002*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\ndy = 0.005 + 0.002*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\nmonitor = time;","pixel_eqs_eel":"cx = (0.25&(x*10-0.5))*0.1+0.025;\ncy = (0.25&(y*10-0.5))*0.1+0.025;\nsx = sx -.005-abs(x-1)*.01;\nsy = sy -.005-abs(x-1)*.01;\nzoom = pow(rad,0.05)+.050;\nrot = 0.03*sin(0.84*time)-0.013*cos(0.784*time)+0.02*sin(1-rad);","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_4);\n  tmpvar_5[uint(0)].y = sin(tmpvar_4);\n  tmpvar_5[1u].x = -(sin(tmpvar_4));\n  tmpvar_5[1u].y = cos(tmpvar_4);\n  uv6_2 = (tmpvar_3 * tmpvar_5);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_3)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_6;\n  tmpvar_6 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_7.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_7 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_7, tmpvar_7))\n   * tmpvar_6)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((crisp_1 - \n    (dot (tmpvar_6, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, (uv + (cos(\n    (texture (sampler_main, uv).xz * 17.3)\n  ) * 0.02))).xyz;\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"float3 color, mus;\nfloat dx,dy;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\n\nfloat2 uv1 = (uv-.5);\nfloat2 uv6 = uv1;\n\nfloat rota = lum(tex2D (sampler_noise_hq,uv/4))*q31;\n\nuv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));\nuv6 += sin(q32*uv1);\nmus = .2/(sqrt(uv6.x)+.2);\n\nmus *= float3 (1.1,1,.95);\nmus *= .9+.1*tex2D (sampler_noise_hq,uv);\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (0.005,0);\nfloat2 ver = float2 (0,.005);\n\nfloat dx = lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\n\nfloat2 zz = float2 (dx,dy);\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\nfloat3 crisp2 = tex2D(sampler_main,uv);\ncrisp += crisp2/2;\ncrisp *= .67;\ncrisp +=.08 * mus - length(zz)*blur;\n\nfloat3 ret1 = crisp - lum(blur)*.04;\nret = ret1 * .99 -  .04 ;\n}","comp_hlsl":"shader_body\n{\n    //uv.y = rad*rad;\n    float srad = sqrt(rad)+ 0.05;\n\n    ret = tex2D(sampler_main, uv).xyz;\n    ret = tex2D(sampler_main, uv + (cos(ret.xz*17.3))*0.02).xyz;\n\n\n    //ret += GetBlur1(uv) - 0.07;\n    //ret *= float3(1.3,0.8,0.5);\n    //ret *= 0.8;    \n}"}