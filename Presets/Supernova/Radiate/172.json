{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":0.97,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":1.331,"zoom":1.0065,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":0.387,"tex_zoom":1.69447,"g":1,"b":1,"r2":0.8,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":5,"additive":1,"textured":1,"x":0.61,"y":0.41,"rad":0.4817,"ang":1.00531,"tex_zoom":1.10462,"g":1,"b":1,"a":0.4,"r2":0.4,"g2":0.6,"b2":1,"border_a":0},"init_eqs_str":"a.flip=0;a.q7=0;a.vol=0;a.flip=1;","frame_eqs_str":"a.flip=-a.flip;a.x=.2*Math.sin(a.q7)*a.flip+.5;a.y=.26*Math.cos(a.q7)+.5;a.ang=.5*-a.time;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.a*=Math.min(a.vol,1);","init_eqs_eel":"flip=1","frame_eqs_eel":"flip=-flip;\n\nx=sin(q7)*0.2*flip + 0.5;\ny=cos(q7)*0.2*1.3 + 0.5;\nang=-time*0.5;\n\nvol=(bass+mid+treb)*0.25;\nvol=vol*vol;\n\na=a*min(vol,1);"},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":0.28999,"tex_zoom":2.59927,"g":1,"b":1,"r2":1,"g2":0.5,"b2":0.7,"border_a":0},"init_eqs_str":"a.q8=0;a.q7=0;a.sang=0;a.cang=0;a.xn=0;a.yn=0;","frame_eqs_str":"a.x=.2*Math.sin(2*a.q8);a.y=.2*Math.cos(2*a.q8);a.ang=1*a.q7;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xn=a.x*a.sang+a.y*a.cang;a.yn=a.x*a.cang-a.y*a.sang;a.x=a.xn+.5;a.y=1.3*a.yn+.5;a.ang=-a.time;","init_eqs_eel":"","frame_eqs_eel":"x=sin(q8*2)*0.2;\ny=cos(q8*2)*0.2;\n\n\n\nang=q7*1;\nsang=sin(ang);cang=cos(ang);\nxn=x*sang + y*cang;\nyn=x*cang - y*sang;\nx=xn + 0.5;\ny=yn*1.3 + 0.5;\n\n\nang=-time*1;"},{"baseVals":{"enabled":1,"sides":15,"additive":1,"rad":0.17987,"g":0.6,"b":0.5,"g2":0.6,"b2":1,"border_a":0},"init_eqs_str":"a.vol=0;","frame_eqs_str":"a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.a=Math.min(a.vol,1);","init_eqs_eel":"","frame_eqs_eel":"vol=(bass+mid+treb)*0.25;\nvol=vol*vol;\n\na=min(vol,1);"}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0.45,"g":0.65,"enabled":0},"init_eqs_str":"","frame_eqs_str":"advance=advance+0.006*q6;\nadvance=if(above(advance,1), advance-1, advance);\nt1=advance;","point_eqs_str":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 0.4;\nyp=cos(step2) * 0.4;\nzp=sin(step2*19.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;\n\na=a*0.5","init_eqs_eel":"","frame_eqs_eel":"advance=advance+0.006*q6;\nadvance=if(above(advance,1), advance-1, advance);\nt1=advance;","point_eqs_eel":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 0.4;\nyp=cos(step2) * 0.4;\nzp=sin(step2*19.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;\n\na=a*0.5"},{"baseVals":{"thick":1,"additive":1,"r":0.45,"g":0.65,"enabled":0},"init_eqs_str":"","frame_eqs_str":"advance=advance+0.005*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_str":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 0.4;\nyp=cos(step2) * 0.4;\nzp=sin(step2*19.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=-xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;\na=a*0.5","init_eqs_eel":"","frame_eqs_eel":"advance=advance+0.005*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_eel":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 0.4;\nyp=cos(step2) * 0.4;\nzp=sin(step2*19.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=-xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;\na=a*0.5"},{"baseVals":{"thick":1,"additive":1,"r":0.3,"g":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"advance=advance+0.005*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_str":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 1.1;\nyp=cos(step2) * 1.1;\nzp=sin(step2*15.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+0.005*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_eel":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 1.1;\nyp=cos(step2) * 1.1;\nzp=sin(step2*15.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;"},{"baseVals":{"thick":1,"additive":1,"r":0,"g":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"advance=advance+0.004*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_str":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 1.6;\nyp=cos(step2) * 1.6;\nzp=sin(step2*11.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+0.004*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_eel":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 1.6;\nyp=cos(step2) * 1.6;\nzp=sin(step2*11.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;"}],"init_eqs_str":"a.colour=0;","frame_eqs_str":"a.colour=div(Math.sin(1.2*a.time),2)+.5;a.wave_g=1-a.colour;a.wave_b=.9+div(Math.sin(div(a.time,3)),10);a.wave_r=a.colour;","pixel_eqs_str":"a.sy=.00001<Math.abs(below(a.y,.47))?.00001<Math.abs(above(a.y,.2))?div(pow(Math.log(a.ang*a.time),3),4):-4:1.1;","init_eqs_eel":"","frame_eqs_eel":"colour = sin(time*1.2)/2 + 0.5;\nwave_g = 1-colour;\nwave_b =0.9 + sin(time/3)/10;\nwave_r = colour;","pixel_eqs_eel":"sy= if(below(y,0.47),if(above(y,0.2),pow(log(ang*time),3)/4,-4),1.1);","warp":"","comp":" shader_body { \n  float ang2_1;\n  float tmpvar_2;\n  tmpvar_2 = ((rad * sqrt(\n    dot (texsize.xy, texsize.xy)\n  )) * 0.5);\n  ang2_1 = ((ang * 0.1591549) + ((time * 0.015) - (tmpvar_2 * 0.0002)));\n  ang2_1 = (fract((ang2_1 * 7.0)) / 7.0);\n  ang2_1 = (abs((ang2_1 - 0.07142857)) * 6.283185);\n  vec2 tmpvar_3;\n  tmpvar_3.x = cos(ang2_1);\n  tmpvar_3.y = sin(ang2_1);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (texture (sampler_main, (0.5 + (\n    ((tmpvar_2 * 0.8) * tmpvar_3)\n   * texsize.zw))).xyz * 1.333);\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\n    float rad_lq = rad * length(texsize.xy)*0.5;\n    float ang_lq = ang;\n\n    float2 uv2 = (uv - 0.5);\n    float rad2 = rad_lq*0.8;\n    float ang2 = ang_lq * M_INV_PI_2;\n\n        ang2 += time*0.015 - rad_lq*0.0002;\n        float fins = 7;\n          ang2 = frac(ang2*fins)/fins;\n          ang2 = abs(ang2 - 0.5/fins);\n\n    ang2 *= M_PI_2;\n    uv2 = 0.5 + rad2*float2(cos(ang2),sin(ang2))*texsize.zw;\n\n    ret = tex2D(sampler_main, uv2).xyz;\n    ret *= 1.333; // a little bit of overbright\n}"}