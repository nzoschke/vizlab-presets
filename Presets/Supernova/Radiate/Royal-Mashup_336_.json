{"version":2,"baseVals":{"rating":5,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":3,"additivewave":1,"modwavealphabyvolume":1,"darken":1,"wave_a":4.1,"wave_scale":0.525,"wave_smoothing":0.36,"wave_mystery":-0.5,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":1.07055,"rot":0.02,"warp":0.19805,"sx":1.1046,"sy":1.10451,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r=div(Math.sin(div(15*a.time,20)),2)+.5;a.wave_g=div(Math.cos(div(a.time,30)),2)+.5;a.wave_b=div(Math.cos(div(23*a.time,20)),2)+.5;","pixel_eqs_str":"a.rot=div(pow(-a.ang,3),10)-1.19*Math.sin(a.ang);a.zoom=Math.sin(pow(a.rad,3))+.94;","init_eqs_eel":"","frame_eqs_eel":"wave_r = sin(15*time/20)/2+0.5;\nwave_g = cos(time/30)/2+0.5;\nwave_b = cos(23*time/20)/2+0.5;","pixel_eqs_eel":"rot=pow(-ang,3)/10-1.19*sin(ang);\nzoom=sin(pow(rad,3))+0.94;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = ret_1;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv - tmpvar_2)) * 0.9)).xyz;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 0.0;\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 0.0;\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \n    (tmpvar_2 * 2.0)\n  )) * 0.97)).xyz;\n  ret_1 = (max (tmpvar_6, (texture (sampler_main, \n    (uv + (tmpvar_2 * 3.0))\n  ) * 0.9)).xyz * 0.92);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":"","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // motion blur:\n    // 'v' points exactly one pixel, in the direction of motion\n    float2 v = normalize(uv-uv_orig)*texsize.zw;\n    float3 s;\n    ret = max(ret, tex2D(sampler_main, uv+v*-1)*0.90);\n    ret = max(ret, tex2D(sampler_main, uv+v* 1)*0.97);\n    ret = max(ret, tex2D(sampler_main, uv+v* 2)*0.97);\n    ret = max(ret, tex2D(sampler_main, uv+v* 3)*0.90);\n\n    // darken over time\n    ret *= 0.92;\n\n    // add noise\n    //float2 uv_noise = uv*texsize_noise_lq.zw*texsize.xy + rand_frame.xy;\n    //ret += (tex2D(sampler_noise_lq, uv_noise)*2-1)*0.02;\n}","comp_hlsl":""}