{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.947,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":4.1,"wave_scale":1.074,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_a":1,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"sides":40,"textured":1,"y":0.15,"rad":0.45333,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"scaling":1.0741,"smoothing":0},"init_eqs_str":"a.aa=0;a.vl=0;a.it=0;a.my=0;a.mod=0;a.mx=0;a.sp=0;a.bb=0;a.cc=0;","frame_eqs_str":"","point_eqs_str":"a.it=2*a.time;a.sp=a.sample+.1*a.it;a.vl=1+.5*(a.treb_att-.7);a.my=.5+.2*Math.sin(.932*a.time)*a.vl;a.mx=.5+.2*Math.cos(.932*a.time)*a.vl;a.mod=div(a.value1+a.value2,2);a.mod*=a.mod*a.mod;a.y=.5+a.sample*(a.my-.5)+a.mod;a.x=.5+a.sample*(a.mx-.5)+a.mod;a.aa=.6+.4*Math.sin(6.28*a.sp);a.bb=a.aa*(.6+.4*Math.sin(6.28*a.sp));a.cc=a.bb*(.6+.4*Math.sin(6.28*a.sp));a.r=a.aa;a.b=a.cc;a.g=a.bb;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = time*2;\nsp = sample + it*0.1;\n\nvl = 1 + 0.5*(treb_att-0.7);\n\nmy = 0.5 + 0.2*sin(time*0.932)*vl;\nmx = 0.5 + 0.2*cos(time*0.932)*vl;\n\nmod = (value1+value2)/2;\n\nmod = mod*mod*mod;\n\ny = 0.5 + sample*(my-0.5) + mod;\nx = 0.5 + sample*(mx-0.5) + mod;\n\naa = 0.6 + 0.4*sin(sp*6.28);\nbb = aa*(0.6 + 0.4*sin(sp*6.28));\ncc = bb*(0.6 + 0.4*sin(sp*6.28));\nr=aa;b=cc;g=bb;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"scaling":1.0741,"smoothing":0},"init_eqs_str":"a.aa=0;a.vl=0;a.it=0;a.my=0;a.mod=0;a.mx=0;a.sp=0;a.bb=0;a.cc=0;","frame_eqs_str":"","point_eqs_str":"a.it=2*a.time;a.sp=a.sample+.1*a.it;a.vl=1+.5*(a.mid_att-.7);a.my=.5+.2*Math.sin(.654*a.time)*a.vl;a.mx=.5+.2*Math.cos(.654*a.time)*a.vl;a.mod=div(a.value1+a.value2,2);a.mod*=a.mod*a.mod;a.y=.5+a.sample*(a.my-.5)+a.mod;a.x=.5+a.sample*(a.mx-.5)+a.mod;a.aa=.6+.4*Math.sin(6.28*a.sp);a.bb=a.aa*(.6+.4*Math.sin(6.28*a.sp));a.cc=a.bb*(.6+.4*Math.sin(6.28*a.sp));a.b=a.aa;a.g=a.bb;a.r=a.cc;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = time*2;\nsp = sample + it*0.1;\n\nvl = 1 + 0.5*(mid_att-0.7);\n\nmy = 0.5 + 0.2*sin(time*0.654)*vl;\nmx = 0.5 + 0.2*cos(time*0.654)*vl;\n\nmod = (value1+value2)/2;\nmod = mod*mod*mod;\n\ny = 0.5 + sample*(my-0.5) + mod;\nx = 0.5 + sample*(mx-0.5) + mod;\n\naa = 0.6 + 0.4*sin(sp*6.28);\nbb = aa*(0.6 + 0.4*sin(sp*6.28));\ncc = bb*(0.6 + 0.4*sin(sp*6.28));\nb=aa;g=bb;r=cc;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"scaling":1.0741,"smoothing":0},"init_eqs_str":"a.aa=0;a.vl=0;a.it=0;a.my=0;a.mod=0;a.mx=0;a.sp=0;a.bb=0;a.cc=0;","frame_eqs_str":"","point_eqs_str":"a.it=2*a.time;a.sp=a.sample+.1*a.it;a.vl=1+.5*(a.bass_att-.7);a.my=.5+.2*Math.sin(.378*a.time)*a.vl;a.mx=.5+.2*Math.cos(.378*a.time)*a.vl;a.mod=div(a.value1+a.value2,2);a.mod*=a.mod*a.mod;a.y=.5+a.sample*(a.my-.5)+a.mod;a.x=.5+a.sample*(a.mx-.5)+a.mod;a.aa=.6+.4*Math.sin(6.28*a.sp);a.bb=a.aa*(.6+.4*Math.sin(6.28*a.sp));a.cc=a.bb*(.6+.4*Math.sin(6.28*a.sp));a.r=a.aa;a.b=a.bb;a.g=a.cc;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = time*2;\nsp = sample + it*0.1;\n\nvl = 1 + 0.5*(bass_att-0.7);\n\nmy = 0.5 + 0.2*sin(time*0.378)*vl;\nmx = 0.5 + 0.2*cos(time*0.378)*vl;\n\nmod = (value1+value2)/2;\nmod = mod*mod*mod;\n\ny = 0.5 + sample*(my-0.5) + mod;\nx = 0.5 + sample*(mx-0.5) + mod;\n\naa = 0.6 + 0.4*sin(sp*6.28);\nbb = aa*(0.6 + 0.4*sin(sp*6.28));\ncc = bb*(0.6 + 0.4*sin(sp*6.28));\nr=aa;b=bb;g=cc;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.modx=0;a.mody=0;a.it=0;a.tm=0;a.aa=0;a.bb=0;a.cc=0;","frame_eqs_str":"a.it+=.05;a.wave_mystery=a.it;a.tm=a.time;a.aa=.6+.4*Math.sin(6.28*a.tm);a.bb=a.aa*(.6+.4*Math.sin(6.28*a.tm));a.cc=a.bb*(.6+.4*Math.sin(6.28*a.tm));a.wave_b=a.aa;a.wave_g=a.bb;a.wave_r=a.cc;a.wave_a=0;","pixel_eqs_str":"a.modx=.5-Math.abs(a.x-.5);a.mody=.5-Math.abs(a.y-.5);a.rot=5*a.modx*a.mody;a.zoom=1-.1*a.modx*a.mody;","init_eqs_eel":"","frame_eqs_eel":"it = it + 0.05;\nwave_mystery = it;\ntm = time;\naa = 0.6 + 0.4*sin(tm*6.28);\nbb = aa*(0.6 + 0.4*sin(tm*6.28));\ncc = bb*(0.6 + 0.4*sin(tm*6.28));\nwave_b=aa;\nwave_g=bb;\nwave_r=cc;\nwave_a = 0;","pixel_eqs_eel":"modx = (0.5-abs(x-0.5));\nmody = (0.5-abs(y-0.5));\nrot = 5*modx*mody;\nzoom = 1 - 0.1*modx*mody;","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + ((0.004 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ).xy * vec2(0.0, 1.0)));\n  uv6_2 = (0.4 * sin((\n    (((uv - 0.5) * aspect.xy) * 18.0)\n   * rand_frame.xy)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (vec3((0.051 / sqrt(dot (uv6_2, uv6_2)))) * vec3(0.15, 0.12, 0.075))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec3 uvw_1;\n  vec3 ret_2;\n  vec3 tmpvar_3;\n  tmpvar_3.z = 0.3;\n  tmpvar_3.xy = (uv * 3.3);\n  uvw_1.xy = tmpvar_3.xy;\n  uvw_1.z = (0.3 + (time * 0.3));\n  ret_2 = (texture (sampler_main, (uv + (\n    (((texture (sampler_noisevol_hq, uvw_1).xy * 2.0) - 1.0) * texsize.zw)\n   * 13.0))).xyz + ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) * 0.4));\n  vec3 tmpvar_4;\n  tmpvar_4 = pow (ret_2, vec3(0.5, 0.8, 1.7));\n  ret_2 = tmpvar_4;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = tmpvar_4;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;\n\n\nuv6 = .4*sin(uv1*18*rand_frame);\nmus = .051/(length(uv6));\nmus *= float3 (1,.8,.5);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .15*mus;\nfloat2 uv2 = (uv_orig-.5)-float2(.5,.5+0.1*q25);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"shader_body\n{\n    // use 3D noise \n    float3 uvw = float3(uv*3.3, 0.3);\n    //uvw = mul(uvw, rot_s2);\n    uvw.z += time*0.3;\n\n    // sample a high-quality 3D noise volume!\n    float4 N = tex3D(sampler_noisevol_hq, uvw);\n\n    float2 uv2 = uv;\n    uv2 += (N.xy*2-1)*texsize.zw*13;\n\n    ret = tex2D(sampler_main, uv2).xyz;\n    ret += GetBlur1(uv)*0.4;\n \n    // palettize:\n    ret = pow(ret, float3(0.5, 0.8, 1.7));\n   \n    //ret.xyz *= 2; // a little bit of overbright\n}\n\n"}