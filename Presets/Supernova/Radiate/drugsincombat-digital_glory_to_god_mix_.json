{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.991,"echo_zoom":1.008,"echo_alpha":0.5,"echo_orient":3,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.002,"wave_smoothing":0.9,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":1.549,"warpscale":2.94,"zoomexp":0.02049,"fshader":0.07,"warp":1.45984,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":60,"additive":1,"thickoutline":1,"rad":0.39872,"g":1,"b":0.7,"r2":1,"g2":0.8,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ax=0; ay=0; az=-30;\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\na=below(vz,0);","init_eqs_eel":"","frame_eqs_eel":"ax=0; ay=0; az=-30;\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\na=below(vz,0);"},{"baseVals":{"enabled":1,"sides":60,"additive":1,"textured":1,"rad":0.55924,"ang":1.88496,"tex_ang":0.69115,"tex_zoom":2.34866,"g":0.1,"b":1,"a":0.2,"r2":1,"g2":0.05,"b2":0.4,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":60,"additive":1,"textured":1,"rad":1.54304,"ang":6.28319,"tex_ang":6.28319,"tex_zoom":0.30546,"r":0,"g":0.5,"b":0.6,"a":0.4,"g2":0,"a2":0.8,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.tex_ang=a.bass;","init_eqs_eel":"","frame_eqs_eel":"tex_ang=bass;"},{"baseVals":{"sides":6,"additive":1,"rad":0.1149,"g":1,"b":0.7,"r2":1,"g2":0.8,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"q8=-q8+1;\nt=(frame%6+4);\nsides=if(equal(t%2,0),6,60);\n\nr=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\ng=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\nb=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\n\nr2=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\ng2=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\nb2=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\n\nr=r+equal(t%2,1);\ng=g+equal(t%2,1);\nb=b+equal(t%2,1)*.7;\n\nr2=r2+equal(t%2,1);\ng2=g2+equal(t%2,1)*.8;\n\nrad=equal(t,4)*.1+equal(t,5)*.14+equal(t,6)*.14+equal(t,7)*.18 +equal(t,8)*.12+equal(t,9)*.2;\n\nan=atan2(q8-.5,q7-.5);\nang=0+equal(t%2,0)*2*an;\nang=if(equal(t,6),-ang,ang);\n\nd=sqrt(sqr(q7-.5)+sqr(q8-.5));\na=above(1-d,0)*sqrt(1-d);\n\nx=t*(.5-q7)*.1617+q7;\ny=t*(.5-q8)*.1617+q8;","init_eqs_eel":"","frame_eqs_eel":"q8=-q8+1;\nt=(frame%6+4);\nsides=if(equal(t%2,0),6,60);\n\nr=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\ng=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\nb=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\n\nr2=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\ng2=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\nb2=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\n\nr=r+equal(t%2,1);\ng=g+equal(t%2,1);\nb=b+equal(t%2,1)*.7;\n\nr2=r2+equal(t%2,1);\ng2=g2+equal(t%2,1)*.8;\n\nrad=equal(t,4)*.1+equal(t,5)*.14+equal(t,6)*.14+equal(t,7)*.18 +equal(t,8)*.12+equal(t,9)*.2;\n\nan=atan2(q8-.5,q7-.5);\nang=0+equal(t%2,0)*2*an;\nang=if(equal(t,6),-ang,ang);\n\nd=sqrt(sqr(q7-.5)+sqr(q8-.5));\na=above(1-d,0)*sqrt(1-d);\n\nx=t*(.5-q7)*.1617+q7;\ny=t*(.5-q8)*.1617+q8;"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"additive":1,"smoothing":0},"init_eqs_str":"a.s=0;a.xp=0;a.yp=0;a.zp=0;a.t1=0;a.x_screen=0;a.y_screen=0;a.advance=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(24.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(47.4*a.s)+Math.cos(27.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.r=1;a.g=1;a.b=1;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_str":"a.bz=0;a.bx=0;a.q1=0;a.by=0;a.ax=0;a.vx=0;a.vy=0;a.vz=0;a.ay=0;a.q2=0;a.q3=0;a.az=0;","frame_eqs_str":"","point_eqs_str":"a.ax=5*(Math.sin(100*a.sample+1.865)+1)*Math.sin(1884.93*a.sample+3.14*a.sample);a.ay=5*(Math.sin(100*a.sample+5.23)+1)*Math.cos(200*6.2831*a.sample+3.14*a.sample+.1454);a.az=5*(Math.sin(100*a.sample+.234)+1)*Math.sin(400*6.2831*a.sample+3.14*a.sample+1.84);a.bx=a.ax;a.by=a.ay*Math.cos(a.q1)-a.az*Math.sin(a.q1);a.bz=a.ay*Math.sin(a.q1)+a.az*Math.cos(a.q1);a.ax=a.bx*Math.cos(a.q2)-a.bz*Math.sin(a.q2);a.ay=a.by;a.az=a.bx*Math.sin(a.q2)+a.bz*Math.cos(a.q2);a.bx=a.ax*Math.cos(a.q3)-\na.ay*Math.sin(a.q3);a.by=a.ax*Math.sin(a.q3)+a.ay*Math.cos(a.q3);a.bz=a.az;a.vx=a.bx;a.vy=a.by;a.vz=a.bz;a.x=div(a.vx,Math.abs(a.vz-10))+.5;a.y=div(a.vy,Math.abs(a.vz-10))+.5;a.a=.05*above(a.vz,0)*(5-Math.abs(a.az));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ax = 10*.5*(sin(100*sample+1.865)+1)*sin(300*6.2831*sample+3.14*sample);\nay = 10*.5*(sin(100*sample+5.23)+1)*cos(200*6.2831*sample+ 3.14*sample+.1454);\naz = 5*(sin(100*sample+.234)+1)*sin(400*6.2831*sample+3.14*sample+1.84);\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\na=above(vz,0)*(.05*(5-abs(az)))"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"smoothing":0,"g":0.5,"b":0.1},"init_eqs_str":"a.bz=0;a.bx=0;a.q1=0;a.by=0;a.ax=0;a.vx=0;a.vy=0;a.vz=0;a.ay=0;a.t=0;a.q2=0;a.q3=0;a.as=0;a.az=0;","frame_eqs_str":"","point_eqs_str":"a.t=above(Math.sin(125.662*a.sample+16*a.time),0);a.ax=(1.58+1.5*a.t*Math.abs(a.value1))*Math.cos(6.2831*a.sample);a.ay=1.3*(1.58+1.5*a.t*Math.abs(a.value2))*Math.sin(6.2831*a.sample);a.az=0;a.bx=a.ax;a.by=a.ay*Math.cos(a.q1)-a.az*Math.sin(a.q1);a.bz=a.ay*Math.sin(a.q1)+a.az*Math.cos(a.q1);a.ax=a.bx*Math.cos(a.q2)-a.bz*Math.sin(a.q2);a.ay=a.by;a.az=a.bx*Math.sin(a.q2)+a.bz*Math.cos(a.q2);a.bx=a.ax*Math.cos(a.q3)-a.ay*Math.sin(a.q3);a.by=a.ax*Math.sin(a.q3)+a.ay*Math.cos(a.q3);\na.bz=a.az;a.vx=a.bx;a.vy=a.by;a.vz=a.bz;a.x=div(a.vx,Math.abs(a.vz-10))+.5;a.y=div(a.vy,Math.abs(a.vz-10))+.5;a.as=above(Math.cos(a.q3+1.57)*Math.cos(a.q2)*a.vx+Math.sin(a.q3+1.57)*Math.sin(a.q1)*a.vy+Math.sin(a.q2)*a.vz,0);a.a=a.t*(.07*(1-a.as)+a.as);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t=above(sin(20*6.2831*sample+time*16),0);\nax = (1.58+1.5*t*abs(value1))*cos(6.2831*sample);\nay = 1.3*(1.58+1.5*t*abs(value2))*sin(6.2831*sample);\naz = 0;\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\nas=above(cos(q3+1.57)*cos(q2)*vx+sin(q3+1.57)*sin(q1)*vy+sin(q2)*vz,0);\na=t*(.07*(1-as)+as);"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"smoothing":0,"g":0.5,"b":0.1},"init_eqs_str":"a.bz=0;a.bx=0;a.q1=0;a.by=0;a.ax=0;a.vx=0;a.vy=0;a.vz=0;a.ay=0;a.t=0;a.q2=0;a.q3=0;a.as=0;a.az=0;","frame_eqs_str":"","point_eqs_str":"a.t=above(Math.sin(125.662*a.sample+16*a.time),0);a.ax=(1.58+1.5*a.t*Math.abs(a.value1))*Math.cos(6.2831*a.sample);a.ay=0;a.az=1.2*(1.58+1.5*a.t*Math.abs(a.value2))*Math.sin(6.2831*a.sample);a.bx=a.ax;a.by=a.ay*Math.cos(a.q1)-a.az*Math.sin(a.q1);a.bz=a.ay*Math.sin(a.q1)+a.az*Math.cos(a.q1);a.ax=a.bx*Math.cos(a.q2)-a.bz*Math.sin(a.q2);a.ay=a.by;a.az=a.bx*Math.sin(a.q2)+a.bz*Math.cos(a.q2);a.bx=a.ax*Math.cos(a.q3)-a.ay*Math.sin(a.q3);a.by=a.ax*Math.sin(a.q3)+a.ay*Math.cos(a.q3);\na.bz=a.az;a.vx=a.bx;a.vy=a.by;a.vz=a.bz;a.x=div(a.vx,Math.abs(a.vz-10))+.5;a.y=div(a.vy,Math.abs(a.vz-10))+.5;a.as=above(Math.cos(a.q3-1.57)*Math.cos(a.q2)*a.vx+Math.sin(a.q3-1.57)*Math.sin(a.q1)*a.vy+Math.sin(a.q2)*a.vz,0);a.a=a.t*(.07*(1-a.as)+a.as);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t=above(sin(20*6.2831*sample+time*16),0);\nax = (1.58+1.5*t*abs(value1))*cos(6.2831*sample);\nay = 0;\naz = 1.2*(1.58+1.5*t*abs(value2))*sin(6.2831*sample);\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\nas=above(cos(q3-1.57)*cos(q2)*vx+sin(q3-1.57)*sin(q1)*vy+sin(q2)*vz,0);\na=t*(.07*(1-as)+as);"}],"init_eqs_str":"a.c_inv_i=0;a.d=0;a.n=0;a.cx1=0;a.y3=0;a.y1=0;a.translation_x=0;a.w=0;a.n2=0;a.cy1=0;a.q25=0;a.q12=0;a.a_i=0;a.c_r=0;a.a_r=0;a.iangle=0;a.x1=0;a.q22=0;a.q21=0;a.q13=0;a.scale=0;a.q29=0;a.q6=0;a.j3=0;a.ac_i=0;a.itranslation_u=0;a.q1=0;a.itranslation_v=0;a.q5=0;a.c_inv_r=0;a.n1=0;a.v=0;a.x3=0;a.d_i=0;a.q23=0;a.q24=0;a.angle=0;a.bcad_r=0;a.iscale=0;a.q4=0;a.b_r=0;a.j2=0;a.dir=0;a.bcad_i=0;a.k=0;a.r=0;a.c_i=0;a.x2=0;a.y2=0;a.j1=0;a.q2=0;a.q14=0;a.ac_r=0;a.translation_y=0;a.q3=0;\na.b_i=0;a.q7=0;a.q30=0;a.d_r=0;a.q8=0;a.x1=0;a.y1=0;","frame_eqs_str":"a.v=.8;a.j1=.95*a.j1+sqr(4*a.bass)*a.v;a.j2=.95*a.j2+sqr(4*a.mid)*a.v;a.j3=.95*a.j3+sqr(4*a.treb)*a.v;a.n+=.0052*a.j1;a.n1+=.0052*a.j2;a.n2+=.0052*a.j3;a.q12=.01*a.n;a.q13=.01*a.n1;a.q14=.01*a.n2;a.k=.99*a.k+sqr(2*a.mid_att);a.q25=0*a.k;a.zoom=.995;a.warp=0;a.rot=-0;a.w=-.46;a.q21=Math.sin(a.w);a.q22=Math.cos(a.w);a.w=.001*-a.n;a.q23=Math.sin(a.w);a.q24=Math.cos(a.w);a.q29=.004*a.n1;a.q30=.004*a.n2;a.scale=3;a.angle=.0004*(a.n1-a.n2);a.translation_x=0;a.translation_y=.02;a.iscale=\n.2;a.iangle=.04*Math.sin(.1337*a.time);a.itranslation_u=0;a.itranslation_v=0;a.a_r=Math.cos(a.angle)*a.scale;a.a_i=Math.sin(a.angle)*a.scale;a.b_r=a.translation_x;a.b_i=a.translation_y;a.c_r=-Math.cos(a.iangle)*a.iscale;a.c_i=-Math.sin(a.iangle)*a.iscale;a.d_r=a.itranslation_u;a.d_i=a.itranslation_v;a.c_inv_r=div(a.c_r,a.c_r*a.c_r+a.c_i*a.c_i);a.c_inv_i=div(a.c_i,a.c_r*a.c_r+a.c_i*a.c_i);a.ac_r=a.a_r*a.c_inv_r-a.a_i*a.c_inv_i;a.ac_i=a.a_r*a.c_inv_i-a.a_i*a.c_inv_r;a.bcad_r=a.b_r*a.c_r-a.b_i*a.c_i-\n(a.a_r*a.d_r-a.a_i*a.d_i);a.bcad_i=a.b_r*a.c_i-a.b_i*a.c_r-(a.a_r*a.d_i-a.a_i*a.d_r);a.q3=a.bcad_r*a.c_inv_r-a.bcad_i*a.c_inv_i;a.q4=a.bcad_r*a.c_inv_i-a.bcad_i*a.c_inv_r;a.q1=a.ac_r;a.q2=a.ac_i;a.q5=a.c_r;a.q6=a.c_i;a.q7=a.d_r;a.q8=a.d_i;","pixel_eqs_str":"a.r=div(a.bass,4);a.cx1=.5+.2*Math.sin(.618*a.time);a.cy1=.5+.2*Math.cos(1.618*a.time);a.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));a.dir=a.bass*(a.r*a.r-a.d*a.d)*.3;a.x1=.00001<Math.abs(above(a.d,a.r))?0:Math.sin(a.y-a.cy1)*a.dir;a.y1=.00001<Math.abs(above(a.d,a.r))?0:-Math.sin(a.x-a.cx1)*a.dir;a.cx1=.5+.3*Math.sin(2.618*a.time);a.cy1=.5+.3*Math.cos(3.14*a.time);a.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));a.dir=-a.mid*(a.r*a.r-a.d*a.d)*.3;a.x2=.00001<\nMath.abs(above(a.d,a.r))?0:Math.sin(a.y-a.cy1)*a.dir;a.y2=.00001<Math.abs(above(a.d,a.r))?0:-Math.sin(a.x-a.cx1)*a.dir;a.cx1=.5+.4*Math.sin(2.618*-a.time);a.cy1=.5+.4*Math.cos(1.14*-a.time);a.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));a.dir=-a.treb*(a.r*a.r-a.d*a.d)*.3;a.x3=.00001<Math.abs(above(a.d,a.r))?0:Math.sin(a.y-a.cy1)*a.dir;a.y3=.00001<Math.abs(above(a.d,a.r))?0:-Math.sin(a.x-a.cx1)*a.dir;a.v=.4;a.dx=(a.x1+a.x2+a.x3)*a.v;a.dy=(a.y1+a.y2+a.y3)*a.v;","init_eqs_eel":"x1 = 0;\ny1 = 0;","frame_eqs_eel":"//q1 = 0;\nv = 0.8;\nj1 = j1*0.95 + sqr(bass*4)*v;\nj2 = j2*0.95 + sqr(mid*4)*v;\nj3 = j3*0.95 + sqr(treb*4)*v;\n\nn = n + j1*0.0052;\nn1 = n1 + j2*0.0052;\nn2 = n2 + j3*0.0052;\n\n\nq12 = n*0.01;\nq13 = n1*0.01;\nq14 = n2*0.01;\n\nk = k*0.99 + sqr(mid_att*2);\nq25 = k*0.00;\n\nzoom = 0.995;\nwarp = 0;\n\nrot = -0.00;\n\nw = -0.46;\nq21 = sin(w);\nq22 = cos(w);\n\nw = -n*0.001;\nq23 = sin(w);\nq24 = cos(w);\nq29 = n1*0.004;\nq30 = n2*0.004;\n\n//before inversion\nscale = 3;\nangle = (n1-n2)*0.0004;\ntranslation_x = 0;\ntranslation_y = 0.02;\n\n//complex inverted\niscale = 0.2;\niangle = sin(time*0.1337)*0.04;\nitranslation_u = 0;\nitranslation_v = 0;\n\n\n// the m?bius transformation\n// z -> (az+b)/(cz-d); where a,b,c,d are complex numbers and z will be the uv-vector\n// (az+b)/(cz-d) = a/c + mu/(cz+d), with mu = (bc-ad)/c\n// so a/c and mu can be calculated outside of the shader\n\na_r = cos(angle)*scale;\na_i = sin(angle)*scale;\nb_r = translation_x;\nb_i = translation_y;\n\nc_r = -cos(iangle)*iscale;\nc_i = -sin(iangle)*iscale;\nd_r = itranslation_u;\nd_i = itranslation_v;\n\n// c^(-1)\nc_inv_r = c_r/(c_r*c_r+c_i*c_i);\nc_inv_i = c_i/(c_r*c_r+c_i*c_i);\n\n// a*c^(-1)\nac_r = (a_r*c_inv_r - a_i*c_inv_i);\nac_i = (a_r*c_inv_i - a_i*c_inv_r);\n\n// (bc-ad)\nbcad_r = (b_r*c_r - b_i*c_i)-(a_r*d_r-a_i*d_i);\nbcad_i = (b_r*c_i - b_i*c_r)-(a_r*d_i-a_i*d_r);\n\n// mu*c^(-1)\nq3 = bcad_r*c_inv_r - bcad_i*c_inv_i;\nq4 = bcad_r*c_inv_i - bcad_i*c_inv_r;\n\nq1 = ac_r;\nq2 = ac_i;\n\nq5 = c_r;\nq6 = c_i;\nq7 = d_r;\nq8 = d_i;","pixel_eqs_eel":"r = bass/4;\ncx1 = 0.5+sin(time*0.618)*0.2;\ncy1 = 0.5+cos(time*1.618)*0.2;\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\ndir = (bass)*(r*r-d*d)*0.3;\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\n\n\ncx1 = 0.5+sin(time*2.618)*0.3;\ncy1 = 0.5+cos(time*3.14)*0.3;\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\ndir = -(mid)*(r*r-d*d)*0.3;\nx2 = if( above(d,r),0,  sin(y-cy1)*dir);\ny2 = if( above(d,r),0, -sin(x-cx1)*dir);\n\ncx1 = 0.5+sin(-time*2.618)*0.4;\ncy1 = 0.5+cos(-time*1.14)*0.4;\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\ndir = -(treb)*(r*r-d*d)*0.3;\nx3 = if( above(d,r),0,  sin(y-cy1)*dir);\ny3 = if( above(d,r),0, -sin(x-cx1)*dir);\n\nv = 0.4;\ndx = (x1+x2+x3)*v;\ndy = (y1+y2+y3)*v;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_fc_main, uv).xyz;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = ret_1;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 0.0;\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv - tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 0.0;\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \n    (tmpvar_2 * 2.0)\n  )) * 0.9)).xyz;\n  ret_1 = ((max (tmpvar_6, \n    (texture (sampler_main, (uv - (tmpvar_2 * 2.0))) * 0.9)\n  ).xyz - 0.005) * 0.98);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * treb_att))\n  ), pow (hue_shader.xzy, vec3(bass_att))));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz;\n    \n    // motion blur by Geiss\n    // 'v' points exactly one pixel, in the direction of motion\n    float2 v = normalize(uv-uv_orig)*texsize.zw;\n    float3 s;\n    ret = max(ret, tex2D(sampler_main, uv+v)*0.97);\n    ret = max(ret, tex2D(sampler_main, uv-v)*0.97);\n    ret = max(ret, tex2D(sampler_main, uv+v*2)*0.90);\n    ret = max(ret, tex2D(sampler_main, uv-v*2)*0.90);\n\n    // darken (decay) over time\n    ret = (ret-0.005)*0.98; //or try: ret -= 0.004;\n}","comp_hlsl":"// tribute to suksma!\n\nshader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)*treb_att),pow(hue_shader.xzy,bass_att));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}