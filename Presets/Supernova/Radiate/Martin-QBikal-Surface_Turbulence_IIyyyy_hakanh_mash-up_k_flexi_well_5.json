{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0.015,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.3,"b1ed":0},"shapes":[{"baseVals":{"additive":1,"textured":1,"rad":2.37185,"tex_ang":1.5708,"tex_zoom":0.93101,"r":0,"g":1,"b":1,"a":0.4,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":12,"additive":1,"textured":1,"x":0.3,"y":0.8,"rad":1.06345,"tex_ang":1.63363,"tex_zoom":0.46617,"g":1,"g2":0,"a2":1,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":13,"additive":1,"num_inst":5,"x":0.65,"y":0.38,"rad":0.57049,"tex_zoom":0.73678,"a":0.7,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":14,"additive":1,"thickoutline":1,"textured":1,"x":0.6,"y":0.55,"rad":0.97237,"ang":1.25664,"tex_zoom":0.34933,"g":0.6,"g2":0,"b2":1,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":506,"sep":116,"spectrum":1,"thick":1,"scaling":1.07408,"smoothing":0,"a":0.7},"init_eqs_str":"a.n=0;a.m=0;","frame_eqs_str":"","point_eqs_str":"a.n=Math.floor((a.reg00+.5)*a.sample);a.m=30001+div(a.n,div(a.reg00,a.reg01));a.gmegabuf[Math.floor(a.m)]=a.value1+a.value2;a.x=a.gmegabuf[Math.floor(1E4+a.n)];a.y=a.gmegabuf[Math.floor(15E3+a.n)];a.a=a.gmegabuf[Math.floor(2E4+a.n)];a.b=Math.min(Math.max(a.gmegabuf[Math.floor(25E3+a.n)],0),1);a.r=1-a.b;a.g=.5;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\nn = int((reg00+.5)*sample);\n\nm = 30001+n/(reg00/reg01);\ngmegabuf(m) = (value1+value2);\n\nx = gmegabuf(10000+n);\ny = gmegabuf(15000+n);\na = gmegabuf(20000+n);\n\nb = min(max(gmegabuf(25000+n),0),1);\nr = 1-b;  \ng = 0.5;"},{"baseVals":{"enabled":1,"samples":506,"thick":1,"scaling":0.89152,"smoothing":0.82},"init_eqs_str":"a.n=0;","frame_eqs_str":"","point_eqs_str":"a.n=Math.floor((a.reg00+.5)*a.sample)+a.reg00;a.x=a.gmegabuf[Math.floor(1E4+a.n)];a.y=a.gmegabuf[Math.floor(15E3+a.n)];a.a=a.gmegabuf[Math.floor(2E4+a.n)];a.b=Math.min(Math.max(a.gmegabuf[Math.floor(25E3+a.n)],0),1);a.r=1-a.b;a.g=.5;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n = int((reg00+.5)*sample) +reg00;\n\nx = gmegabuf(10000+n);\ny = gmegabuf(15000+n);\na = gmegabuf(20000+n);\n\nb = min(max(gmegabuf(25000+n),0),1);\nr = 1-b;  \ng = 0.5;\n"},{"baseVals":{"enabled":1,"samples":506,"thick":1,"scaling":0.89152,"smoothing":0.82},"init_eqs_str":"a.n=0;","frame_eqs_str":"","point_eqs_str":"a.n=Math.floor((a.reg00+.5)*a.sample)+2*a.reg00;a.x=a.gmegabuf[Math.floor(1E4+a.n)];a.y=a.gmegabuf[Math.floor(15E3+a.n)];a.a=a.gmegabuf[Math.floor(2E4+a.n)];a.b=Math.min(Math.max(a.gmegabuf[Math.floor(25E3+a.n)],0),1);a.r=1-a.b;a.g=.5;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n = int((reg00+.5)*sample)+2*reg00;\n\n\nx = gmegabuf(10000+n);\ny = gmegabuf(15000+n);\na = gmegabuf(20000+n);\n\nb = min(max(gmegabuf(25000+n),0),1);\nr = 1-b;  \ng = 0.5;\n"},{"baseVals":{"enabled":1,"samples":506,"spectrum":1,"thick":1},"init_eqs_str":"a.n=0;","frame_eqs_str":"","point_eqs_str":"a.n=Math.floor((a.reg00-.5)*a.sample)+3*a.reg00;a.x=a.gmegabuf[Math.floor(1E4+a.n)];a.y=a.gmegabuf[Math.floor(15E3+a.n)];a.a=a.gmegabuf[Math.floor(2E4+a.n)];a.b=Math.min(Math.max(a.gmegabuf[Math.floor(25E3+a.n)],0),1);a.r=1-a.b;a.g=.5;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n = int((reg00-.5)*sample)+3*reg00;\n\n\nx = gmegabuf(10000+n);\ny = gmegabuf(15000+n);\na = gmegabuf(20000+n);\n\nb = min(max(gmegabuf(25000+n),0),1);\nr = 1-b;  \ng = 0.5;"}],"init_eqs_str":"a.xang=0;a.fov=0;a.hell=0;a.cbeat=0;a.index2=0;a.bindex=0;a.ran4=0;a.index=0;a.yang=0;a.q29=0;a.q6=0;a.amp_=0;a.xlen=0;a.smooth=0;a.q1=0;a.dec_med=0;a.sum=0;a.q5=0;a.dec_f=0;a.trely=0;a.flen=0;a.reg01=0;a.my=0;a.oz=0;a.imag=0;a.is_beat=0;a.yind=0;a.oy0a=0;a.dec_slow=0;a.ran2=0;a.ind=0;a.z0=0;a.ylen=0;a.real=0;a.ran3=0;a.q4=0;a.mz=0;a.oy0=0;a.amp=0;a.tc0=0;a.oy=0;a.avg=0;a.mx=0;a.vol=0;a.peak=0;a.decc=0;a.q2=0;a.bd_bt=0;a.zang=0;a.q3=0;a.reg00=0;a.trelz=0;a.q32=0;a.q28=0;a.trelx=\n0;a.q30=0;a.ox=0;a.xind=0;for(var b=a.index=0;7E4>b;b++)a.megabuf[Math.floor(a.index)]=0,a.gmegabuf[Math.floor(a.index)]=0,a.index+=1;a.zang=1;a.yang=0;a.zang=2;","frame_eqs_str":"a.xlen=45;a.ylen=45;a.flen=20;a.reg00=div(a.xlen*a.ylen,4);a.reg01=div(a.reg00,4);a.dec_med=1-div(.06*30,a.fps);a.dec_slow=1-div(.6,a.fps);a.dec_f=pow(.8,div(30,a.fps));a.q30=a.dec_slow;a.smooth=Math.max(1,pow(6,div(a.fps,30))-2);a.cbeat=a.bass+a.mid+a.treb;a.decc=.00001<Math.abs(a.vol>a.cbeat?1:0)?.8:a.dec_med;a.vol=a.vol*a.decc+(1-a.decc)*a.cbeat;a.avg=a.avg*a.dec_slow+a.cbeat*(1-a.dec_slow);a.is_beat=above(a.cbeat,1.5*a.avg)*above(a.time,a.tc0+.2);a.tc0=.00001<Math.abs(bor(a.is_beat,\na.bd_bt))?a.time:a.tc0;a.peak=.00001<Math.abs(a.is_beat)?a.cbeat:a.peak*a.dec_med;a.ind=0;a.sum=0;a.amp=.01;for(var b=0;b<a.reg01;b++)a.sum+=div(a.gmegabuf[Math.floor(a.ind+3E4)],a.reg01),a.amp+=pow(a.gmegabuf[Math.floor(a.ind+3E4)],2),a.ind+=1;a.ind=0;a.amp_=a.amp_*a.dec_med+600*div((1-a.dec_med)*sqrt(a.amp),a.reg01);for(b=0;b<a.reg01;b++)a.megabuf[Math.floor(a.ind+3E4)]=div(a.gmegabuf[Math.floor(a.ind+3E4)]-a.sum,a.amp_),a.ind+=1;for(b=a.index2=0;b<a.flen;b++){a.index=0;a.real=0;for(var c=a.imag=\n0;c<a.flen;c++)a.real+=Math.cos(6.28*div(a.index,a.flen)*a.index2)*a.megabuf[Math.floor(div(a.index*a.reg01,8)+30002)],a.imag+=Math.sin(6.28*div(a.index,a.flen)*a.index2)*a.megabuf[Math.floor(div(a.index*a.reg01,8)+30002)],a.index+=1;a.megabuf[Math.floor(1E4+a.index2)]=a.megabuf[Math.floor(1E4+a.index2)]*a.dec_f+a.real;a.megabuf[Math.floor(15E3+a.index2)]=a.megabuf[Math.floor(15E3+a.index2)]*a.dec_f+a.imag;a.index2+=1}a.ind=1;for(b=0;b<div(a.flen,2);b++){a.cx=a.megabuf[Math.floor(1E4+a.ind)];a.cy=\na.megabuf[Math.floor(15E3+a.ind)];a.yind=-1;for(c=0;3>c;c++){a.xind=-1;for(var d=0;3>d;d++)a.ox=mod((a.cx+.5)*a.xlen+a.xind,a.xlen),a.oy=mod((a.cy+.5)*a.ylen+a.yind,a.ylen),a.amp=3*(a.cx*a.cx+a.cy*a.cy),a.megabuf[Math.floor(a.oy*a.ylen+a.ox)]-=div(div(60,a.fps)*sqrt(a.amp)*above(a.amp,.02),1+a.xind*a.xind+a.yind*a.yind),a.xind+=1;a.yind+=1}a.ind+=1}for(b=a.yind=0;b<a.ylen;b++){for(c=a.xind=0;c<a.xlen;c++)a.megabuf[Math.floor(a.yind*a.ylen+a.xind+5E3)]=a.dec_med*(div(a.gmegabuf[Math.floor(a.yind*a.ylen+\nmod(a.xind+1,a.xlen))]+a.gmegabuf[Math.floor(a.yind*a.ylen+mod(a.xlen+a.xind-1,a.xlen))]+a.gmegabuf[Math.floor(mod(a.yind+1,a.ylen)*a.ylen+a.xind)]+a.gmegabuf[Math.floor(mod(a.yind+a.ylen-1,a.ylen)*a.ylen+a.xind)]+a.gmegabuf[Math.floor(a.yind*a.ylen+a.xind)]*a.smooth*4,2+2*a.smooth)-a.megabuf[Math.floor(a.yind*a.ylen+a.xind)]),a.xind+=1;a.yind+=1}a.bindex+=a.is_beat;.00001<Math.abs(a.is_beat&&.00001>Math.abs(mod(a.bindex,4)-0)?1:0)?a.ran2=div(rand(100)-50,50):0;.00001<Math.abs(a.is_beat&&.00001>Math.abs(mod(a.bindex,\n4)-2)?1:0)?a.ran3=div(rand(100)-50,50):0;.00001<Math.abs(a.is_beat&&.00001>Math.abs(mod(a.bindex,6)-5)?1:0)?a.ran4=div(rand(100)-50,50):0;a.trelx+=div(div(a.ran2,a.fps),18);a.trely+=div(div(a.ran3,a.fps),2);a.trelz+=div(div(a.ran4,a.fps),6);a.zang=6*Math.sin(a.trelz);a.xang=6*Math.sin(div(a.zang,5)+a.trelx);a.yang=6*Math.sin(0*div(a.zang,3)+a.trely);a.q1=Math.cos(a.xang);a.q2=Math.sin(a.xang);a.q3=Math.cos(a.yang);a.q4=Math.sin(a.yang);a.q5=Math.cos(a.zang);a.q6=Math.sin(a.zang);a.fov=1;for(b=a.yind=\n0;b<a.ylen;b++){for(c=a.xind=0;c<a.xlen;c++)a.ind=a.yind*a.ylen+a.xind,a.megabuf[Math.floor(a.ind)]=a.gmegabuf[Math.floor(a.ind)],a.gmegabuf[Math.floor(a.ind)]=a.megabuf[Math.floor(a.ind+5E3)],a.oz=a.yind-div(a.ylen,2),a.ox=.00001<Math.abs(bnot(mod(a.yind,2)))?a.xind:a.xlen-a.xind-1,a.oy0a=div(a.oy0+a.oy0a,2.5),a.oy=a.gmegabuf[Math.floor(a.yind*a.ylen+a.ox)],a.oy0=a.oy,a.ox-=div(a.xlen,2),a.mx=a.ox*a.q5-a.oy*a.q6,a.my=a.ox*a.q6+a.oy*a.q5,a.ox=a.mx,a.oy=a.my,a.mx=a.ox*a.q3+a.oz*a.q4,a.mz=-a.ox*a.q4+\na.oz*a.q3,a.ox=a.mx,a.oz=a.mz,a.my=a.oy*a.q1-a.oz*a.q2,a.mz=a.oy*a.q2+a.oz*a.q1,a.z0=10*Math.sin(14*a.trelz),a.oy=a.my,a.oz=a.mz+a.z0,a.gmegabuf[Math.floor(1E4+a.ind)]=div(a.fov*a.ox,a.oz+60*a.fov)+.5,a.gmegabuf[Math.floor(15E3+a.ind)]=div(a.fov*a.oy,a.oz+60*a.fov)+.5,a.hell=Math.max(Math.min(.5+div(a.oy0,4),1),.2),a.gmegabuf[Math.floor(2E4+a.ind)]=Math.max(Math.min(a.hell*(.5+.1*(a.oy0a-a.oy0)),1),.1),a.gmegabuf[Math.floor(25E3+a.ind)]=div(a.oy0,16)+.5,a.xind+=1;a.yind+=1}a.q29=div(10,a.z0+15);a.q32=\na.aspecty;a.q28=Math.min(div(a.vol,3)-.25,1);a.monitor=a.q28;","pixel_eqs_str":"a.rot=0;a.zoom=1.1;a.warp=0;a.dy=.02;","init_eqs_eel":"index = 0;\nloop (70000,\n  megabuf(index) = 0;\n  gmegabuf(index) = 0;\n  index = index + 1;\n);\n\nzang = 1;\n\nyang = 0;\nzang = 2;","frame_eqs_eel":"xlen = 45; ylen = 45; flen = 20; reg00 = xlen*ylen/4; reg01=reg00/4;\ndec_med = 1-0.06*30/fps; dec_slow = 1-0.02*30/fps; dec_f = pow (0.8, 30/fps);\nq30 = dec_slow;\nsmooth = max(1,pow(6,fps/30)-2); // >= 0; Ausbreitungsgeschwindigkeit\n\n//\"Classic\" beat reaction\ncbeat = bass+mid+treb;\ndecc = if (vol>cbeat,0.8,dec_med);\nvol  = vol * decc + (1-decc)*cbeat;\navg = avg*dec_slow + cbeat*(1-dec_slow);\nis_beat = above(cbeat, 1.5*avg) * above (time, tc0+.2);\ntc0 = if (bor(is_beat, bd_bt),time,tc0);\npeak = if (is_beat,cbeat,peak*dec_med);\n\n\n//Gleichanteil entfernen und normalisieren\nind = 0; sum = 0; amp = 0.01;\nloop (reg01,\n  sum = sum + gmegabuf(ind+30000)/(reg01);\n  amp = amp + pow(gmegabuf(ind+30000),2);\n  ind = ind+1;\n); \nind = 0; amp_= amp_*dec_med + (1-dec_med)*sqrt(amp)/reg01*600;\nloop (reg01,\n  megabuf(ind+30000)= (gmegabuf(ind+30000)-sum)/amp_;\n  ind = ind+1;\n);\n \n// Spectrum of spectrum  !\nindex2 = 0;\nloop(flen, //Frequency step\n  index=0; real= 0; imag = 0;\n  loop (flen,\n    real = real + cos(index/flen*6.28*index2)*megabuf(index*reg01/8+30002);\n    imag = imag + sin(index/flen*6.28*index2)*megabuf(index*reg01/8+30002);\n    index=index+1;\n  );\n  megabuf(10000+index2)= megabuf(10000+index2) * dec_f + real;\n  megabuf(15000+index2)= megabuf(15000+index2) * dec_f + imag;\n  index2 = index2+1;\n );\n\n//Anregung\nind = 1;\nloop (flen/2,\n  cx = megabuf(10000+ind);\n  cy = megabuf(15000+ind);\n  yind = -1;\n  loop (3,\n    xind = -1;\n    loop (3,\n      ox = ((cx+.5)*xlen+xind)%xlen;\n      oy = ((cy+.5)*ylen+yind)%ylen;\n      amp = (cx*cx+cy*cy)*3;\n      megabuf (oy*ylen+ox) = megabuf (oy*ylen+ox) \n                           - 2*30/fps*sqrt(amp)*above(amp,.02)/(1+xind*xind+yind*yind);\n      xind = xind+1;\n    );\n    yind = yind+1;\n  );\n  ind = ind+1;\n);\n\n//Simulation\nyind = 0;\nloop (ylen,\n  xind = 0;\n  loop (xlen,\n    megabuf(yind*ylen+xind+5000) = //megabuf ab 5000 ist nur Zwischenspeicher\n    dec_med*((gmegabuf(yind*ylen+(xind+1)%xlen) +\n    gmegabuf(yind*ylen+(xlen+xind-1)%xlen) + \n    gmegabuf(((yind+1)%ylen)*ylen+xind) + \n    gmegabuf(((yind+ylen-1)%ylen)*ylen+xind)\n    +gmegabuf(yind*ylen+xind)*smooth*4)/(2+2*smooth) - megabuf(yind*ylen+xind)); \n    xind = xind+1;\n  );\n  yind = yind+1;\n);\n\n//Projektionsparameter\n\nbindex += is_beat;\n\nif (is_beat && (bindex%4==0), ran2 = (rand(100)-50)/50,0 );\nif (is_beat && (bindex%4==2), ran3 = (rand(100)-50)/50,0 );\nif (is_beat && (bindex%6==5), ran4 = (rand(100)-50)/50,0 );\n\ntrelx += ran2/fps/18;\ntrely += ran3/fps/2;\ntrelz += ran4/fps/6;\nzang = 6*sin(trelz);\nxang = 6*sin(zang/5+trelx);\nyang = 6*sin(zang/3*0+trely);\n\nq1 = cos(xang);q2 = sin(xang);q3 = cos(yang);\nq4 = sin(yang);q5 = cos(zang);q6 = sin(zang);\nfov = 1;\n\n//Umkopieren und Projektion\nyind = 0;\nloop (ylen,\n  xind = 0;\n  loop (xlen,\n    ind = yind*ylen+xind;\n    megabuf(ind) = gmegabuf(ind); \n    gmegabuf(ind) = megabuf(ind+5000); \n    oz = yind - ylen/2; //#\n    ox = if(bnot(yind%2),xind,xlen-xind-1);\n    oy0a = (oy0+oy0a)/2.5;\n    oy = gmegabuf(yind*ylen+ox); oy0 = oy;\n    ox = ox - xlen/2;  \n    mx = ox*q5 - oy*q6;  my = ox*q6 + oy*q5;\n    ox = mx; oy = my;  \n    mx = ox*q3 + oz*q4;  mz = - ox*q4 + oz*q3;\n    ox = mx; oz = mz;  \n    my = oy*q1 - oz*q2;  mz = oy*q2 + oz*q1;\n    z0 = (10*sin(trelz*14));\n    oy = my; oz = mz+z0;\n    gmegabuf(10000+ind) = fov*ox/(oz+60*fov)+.5;\n    gmegabuf(15000+ind) = fov*oy/(oz+60*fov)+.5;\n    hell= max(min(.5+oy0/4,1),0.2); //Helligkeit\n    gmegabuf(20000+ind) = max(min(hell* (.5+ (oy0a-oy0)*0.1),1),0.1);\n    gmegabuf(25000+ind) = oy0/16+.5;;\n    xind = xind+1;\n  );\n  yind = yind+1;\n);\n\nq29 = 10/(z0+15);\nq32 = aspecty;\nq28 = min (vol/3-0.25,1);\nmonitor = q28;","pixel_eqs_eel":"rot = 0; zoom = 1.1; warp = 0; dy = 0.02;","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur2, \n    (uv + vec2(0.005, 0.0))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - vec2(0.005, 0.0))\n  ).xyz * scale2) + bias2)).y;\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur2, \n    (uv + vec2(0.0, 0.005))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - vec2(0.0, 0.005))\n  ).xyz * scale2) + bias2)).y;\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3;\n  tmpvar_5.y = tmpvar_4;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - (tmpvar_5 * 0.01));\n  ret_2.y = texture (sampler_fc_main, (tmpvar_6 - floor(tmpvar_6))).y;\n  ret_2.y = (ret_2.y + ((ret_2.y - \n    ((texture (sampler_blur3, (tmpvar_6 - floor(tmpvar_6))).xyz * scale3) + bias3)\n  .y) * 0.1));\n  vec2 tmpvar_7;\n  tmpvar_7 = floor(uv);\n  ret_2.y = (ret_2.y + (0.006 - (\n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\n  .x * 5.0)));\n  ret_2.y = ret_2.y;\n  vec2 tmpvar_8;\n  tmpvar_8.x = -(tmpvar_4);\n  tmpvar_8.y = tmpvar_3;\n  my_uv_1 = (tmpvar_8 * 0.05);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (((texture (sampler_blur2, \n    (uv + vec2(0.01, 0.0))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - vec2(0.01, 0.0))\n  ).xyz * scale2) + bias2)).z;\n  tmpvar_9.y = (((texture (sampler_blur2, \n    (uv + vec2(0.0, 0.01))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - vec2(0.0, 0.01))\n  ).xyz * scale2) + bias2)).z;\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_9 * 0.005)));\n  ret_2.z = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).z;\n  ret_2.z = (ret_2.z + ((ret_2.z - \n    ((texture (sampler_blur3, (my_uv_1 - floor(my_uv_1))).xyz * scale3) + bias3)\n  .z) * 0.13));\n  ret_2.z = (ret_2.z * 0.95);\n  ret_2.z = (ret_2.z + ((0.03 - \n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\n  .x) - (texture (sampler_main, \n    (my_uv_1 - floor(my_uv_1))\n  ).y * 0.05)));\n  ret_2.x = (texture (sampler_main, uv_orig).x - 0.3);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_2;\n  ret = tmpvar_10.xyz;\n }","comp":"float xlat_mutablelamp;\nvec2 xlat_mutablers0;\nvec2 xlat_mutablerss;\nvec2 xlat_mutableuv1;\n shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1.x = q4;\n  tmpvar_1.y = q5;\n  tmpvar_1.z = q6;\n  mat3 tmpvar_2;\n  tmpvar_2[uint(0)].x = q20;\n  tmpvar_2[uint(0)].y = q23;\n  tmpvar_2[uint(0)].z = q26;\n  tmpvar_2[1u].x = q21;\n  tmpvar_2[1u].y = q24;\n  tmpvar_2[1u].z = q27;\n  tmpvar_2[2u].x = q22;\n  tmpvar_2[2u].y = q25;\n  tmpvar_2[2u].z = q28;\n  vec2 tmpvar_3;\n  tmpvar_3.x = q1;\n  tmpvar_3.y = q2;\n  vec2 uv_4;\n  vec3 dots_5;\n  vec3 ret_6;\n  vec2 tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv - 0.5);\n  tmpvar_7 = (0.5 + (tmpvar_8 * vec2(1.1, 0.81)));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.5, 0.5));\n  uv_4 = (tmpvar_8 * aspect.xy);\n  float tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = (min (abs(\n    (uv_4.y / uv_4.x)\n  ), 1.0) / max (abs(\n    (uv_4.y / uv_4.x)\n  ), 1.0));\n  float tmpvar_12;\n  tmpvar_12 = (tmpvar_11 * tmpvar_11);\n  tmpvar_12 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_12) + 0.05368138) * tmpvar_12) - 0.1173503)\n     * tmpvar_12) + 0.1938925) * tmpvar_12) - 0.3326756)\n   * tmpvar_12) + 0.9999793) * tmpvar_11);\n  tmpvar_12 = (tmpvar_12 + (float(\n    (abs((uv_4.y / uv_4.x)) > 1.0)\n  ) * (\n    (tmpvar_12 * -2.0)\n   + 1.570796)));\n  tmpvar_10 = (tmpvar_12 * sign((uv_4.y / uv_4.x)));\n  if ((abs(uv_4.x) > (1e-08 * abs(uv_4.y)))) {\n    if ((uv_4.x < 0.0)) {\n      if ((uv_4.y >= 0.0)) {\n        tmpvar_10 += 3.141593;\n      } else {\n        tmpvar_10 = (tmpvar_10 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_10 = (sign(uv_4.y) * 1.570796);\n  };\n  xlat_mutablers0.x = ((tmpvar_10 / 3.1416) * 2.0);\n  xlat_mutablers0.y = (0.02 / sqrt(dot (uv_4, uv_4)));\n  vec2 tmpvar_13;\n  tmpvar_13.x = xlat_mutablers0.x;\n  tmpvar_13.y = (xlat_mutablers0.y + time);\n  xlat_mutablerss = (tmpvar_13 * mat2(0.7, -0.7, 0.7, 0.7));\n  vec4 tmpvar_14;\n  tmpvar_14 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \n    (xlat_mutablerss / 32.0)\n  ) - 0.7), vec4(0.0, 0.0, 0.0, 0.0)));\n  vec2 tmpvar_15;\n  tmpvar_15 = abs((fract(\n    (xlat_mutablerss * 8.0)\n  ) - 0.5));\n  vec2 tmpvar_16;\n  tmpvar_16.x = (xlat_mutablers0.x * 2.0);\n  tmpvar_16.y = (xlat_mutablers0.y + (time / 2.0));\n  xlat_mutablerss = (tmpvar_16 * mat2(0.7, -0.7, 0.7, 0.7));\n  vec4 tmpvar_17;\n  tmpvar_17 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \n    (xlat_mutablerss / 32.0)\n  ) - 0.7), vec4(0.0, 0.0, 0.0, 0.0)));\n  vec2 tmpvar_18;\n  tmpvar_18 = abs((fract(\n    (xlat_mutablerss * 8.0)\n  ) - 0.5));\n  xlat_mutablerss = tmpvar_18;\n  dots_5 = (vec3((clamp (\n    (0.04 / sqrt(dot (tmpvar_15, tmpvar_15)))\n  , 0.0, 1.0) * tmpvar_14.x)) + (clamp (\n    (0.04 / sqrt(dot (tmpvar_18, tmpvar_18)))\n  , 0.0, 1.0) * tmpvar_17.x));\n  dots_5 = (dots_5 * clamp ((0.04 / \n    abs((0.01 / xlat_mutablers0.y))\n  ), 0.0, 1.0));\n  dots_5 = (dots_5 * (dots_5 * 2.0));\n  vec2 tmpvar_19;\n  tmpvar_19.x = -((tmpvar_9.y * -1024.0));\n  tmpvar_19.y = (tmpvar_9.x * -1024.0);\n  vec2 tmpvar_20;\n  tmpvar_20.x = tmpvar_19.x;\n  tmpvar_20.y = -(tmpvar_19.y);\n  uv_4 = (vec2(-100.0, 100.0) * (tmpvar_20 / (\n    (tmpvar_19.x * tmpvar_19.x)\n   + \n    (tmpvar_19.y * tmpvar_19.y)\n  )).yx);\n  uv_4 = (0.5 + ((\n    (1.0 - abs(((\n      fract((mix ((0.5 + \n        ((tmpvar_7 - 0.5) * 2.0)\n      ), (uv_4 + 0.5), vec2(0.5, 0.5)) * 0.5))\n     * 2.0) - 1.0)))\n   - 0.5) * 0.98));\n  uv_4 = (((uv_4 - 0.5) * 0.9) + 0.5);\n  xlat_mutableuv1 = ((uv_4 - tmpvar_3) * aspect.xy);\n  float tmpvar_21;\n  tmpvar_21 = min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - (\n    (texture (sampler_blur2, uv_4).xyz * scale2)\n   + bias2).z));\n  vec3 tmpvar_22;\n  tmpvar_22.xy = ((uv_4 - 0.5) * min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - \n    ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2)\n  .z)));\n  tmpvar_22.z = min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - (\n    (texture (sampler_blur2, uv_4).xyz * scale2)\n   + bias2).z));\n  float tmpvar_23;\n  tmpvar_23 = clamp ((abs(\n    ((1.0 - ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2).z) - clamp ((1.0 - (\n      (texture (sampler_blur2, tmpvar_3).xyz * scale2)\n     + bias2).z), 0.1, 0.4))\n  ) + 0.2), 0.0, 1.0);\n  vec3 tmpvar_24;\n  tmpvar_24 = mix (texture (sampler_main, uv_4).xyz, ((texture (sampler_blur1, uv_4).xyz * scale1) + bias1), vec3(tmpvar_23));\n  float tmpvar_25;\n  tmpvar_25 = clamp (((1.0 - \n    exp(-(((texture (sampler_blur1, uv_4).xyz * scale1) + bias1).x))\n  ) - 0.2), 0.0, 1.0);\n  ret_6 = ((tmpvar_24.x * (0.2 + \n    ((1.0 - tmpvar_23) * (1.0 - tmpvar_21))\n  )) * (1.0 + (0.5 * \n    sin((((tmpvar_22 / q7) * tmpvar_2) + tmpvar_1))\n  )));\n  vec3 tmpvar_26;\n  tmpvar_26.xy = vec2(0.0, 1.0);\n  tmpvar_26.z = (tmpvar_25 * 3.0);\n  vec3 tmpvar_27;\n  tmpvar_27 = mix (ret_6, tmpvar_26, vec3(tmpvar_25));\n  xlat_mutablelamp = (((\n    clamp ((1.0 - (4.0 * sqrt(\n      dot (xlat_mutableuv1, xlat_mutableuv1)\n    ))), 0.0, 1.0)\n   * tmpvar_24.x) * clamp (\n    (1.0 - (2.0 * mix (tmpvar_21, (1.0 - \n      ((texture (sampler_blur1, uv_4).xyz * scale1) + bias1)\n    .z), 0.2)))\n  , 0.0, 1.0)) * 1.8);\n  ret_6 = (tmpvar_27 + ((1.0 - \n    dot (tmpvar_27, vec3(0.32, 0.49, 0.29))\n  ) * xlat_mutablelamp));\n  ret_6 = (1.0 - exp((-2.0 * ret_6)));\n  ret_6 = (ret_6 + (dots_5 * (1.0 + ret_6)));\n  vec4 tmpvar_28;\n  tmpvar_28.w = 1.0;\n  tmpvar_28.xyz = ret_6;\n  ret = tmpvar_28.xyz;\n }","warp_hlsl":"shader_body\n{\n    float1 d = 0.005;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y;\n    float2 my_uv = uv - float2(dx,dy)*0.01;\n\n\n\n    float2 v = 0.01;\n    ret.y = tex2D( sampler_fc_main, my_uv-floor(my_uv)).y;\n\n    \n    ret.y += (ret.y - GetBlur3(my_uv-floor(my_uv)).y)*.1;\n    ret.y += 0.006-GetBlur3(uv-floor(uv)).x*5;\n\n    ret.y = lerp( ret.y, lum(ret).x, 0);\n\n//--------------------------------\n\n    d = 0.01;\n    my_uv = float2(-dy,dx)*0.05;\n\n    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).z;\n    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).z;\n    my_uv += uv - float2(dx,dy)*0.005;\n\n\n\n    v = 0.01;\n    ret.z =tex2D( sampler_fw_main, my_uv - floor(my_uv)).z;\n\n    \n    ret.z += (ret.z - GetBlur3(my_uv-floor(my_uv)).z)*0.13;\n    ret.z *= 0.95;\n    ret.z += 0.03-GetBlur3(uv-floor(uv)).x - tex2D( sampler_main, my_uv - floor(my_uv)).y*0.05;\n\n    ret.x = tex2D( sampler_main, uv_orig).x - 0.3;\n}","comp_hlsl":"#define sat saturate\nstatic const float2 pix = texsize.zw;\nfloat glow, tmp, lamp, dist, bdist, b2dist, dist_c;\nfloat2 dz, uv1, uv3;\nstatic const float3 CamPos = float3(q4,q5,q6);\nstatic const float myzoom = q7;\nstatic const float3x3 RotMat = float3x3(q20,q21,q22,q23,q24,q25,q26,q27,q28);\nstatic const float3 col_struc =  float3(1,.7,.3) + .2*(rand_preset.xyz-.5);\nstatic float2 center = float2 (q1,q2);\n\nfloat3 GetBlurX (float2 uvi, float x) {return lerp (GetPixel(uvi), GetBlur1(uvi), x);}\nfloat GetDist(float2 uvi)   {return 1-GetPixel(uvi).b;}\nfloat GetDistB(float2 uvi)  {return 1-GetBlur1(uvi).b;}\nfloat GetDistB2(float2 uvi) {return 1-GetBlur2(uvi).b;}\n\nfloat MinDistB (float2 uvi) {float tmp; float4 nb; //##nicht ideal\n  tmp = GetDist(uvi);\n  tmp = min(tmp,GetDistB2(uvi)*1) ;\n  return tmp;}\n\nsampler sampler_pw_noise_lq;\n\nfloat3 neu, ret1;\nfloat2 rs2,rs0,rss,uv2;\nfloat ang2,c,s;\nfloat2x2 rota = float2x2(.7,.7,-.7,.7);\nshader_body\n{\nfloat2 uvo = 0.5 + (uv-0.5)*float2(1.1,0.81);\nfloat2 factorA = uv-float2(1-0.5,0.5);\n\nuv -= 0.5;\nuv *= aspect.xy;    \n\nrs0.x = atan2(uv.y, uv.x)/3.1416*2;\nrs0.y = .02/(length (uv));\nrss = float2 (rs0.x,rs0.y+time);\nrss = mul(rss,float2x2(.7,.7,-.7,.7));\nfloat noise = (tex2D(sampler_pw_noise_lq,rss/32)-.7 >= 0);\nrss = abs(frac(rss*8)-.5);\nfloat3 dots = saturate(.04/length(rss)) *noise;\n\nrss = float2 (rs0.x*2,rs0.y+time/2);\nrss = mul(rss,float2x2(.7,.7,-.7,.7));\nnoise = (tex2D(sampler_pw_noise_lq,rss/32)-.7 >= 0);\nrss = abs(frac(rss*8)-.5);\ndots += saturate(.04/length(rss)) * noise;\n\ndots *= saturate(.04/abs(.01/rs0.y-q6*0))+.0;\ndots *= dots*2;\n\nfloat3 ret1 = 0;\nint anz = 2;\nint n = 0;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    neu = GetPixel(uv2+.5) + GetBlur1(uv2+.5);\n    ret1 = max(ret1,neu);\nn++;\n}\nret = ret1 + dots*(1+ret1);\n\nfloat2 factorB = float2(0,-1024+(treb_att-bass_att)*0);\nfloat2 product = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 numerator = float2(1,0);\nfloat2 denominator = product;\nfloat2 fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part\n                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part\n                   (denominator.x*denominator.x + denominator.y*denominator.y);\nuv = fraction.yx*float2(-1,1)*100;\nuv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);\nuv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.98; // Eo.S. mirror code with cutted borders\nuv = (uv-.5)*.9 + .5;\n\nuv1 = (uv-center)*aspect.xy;\n\ndist = MinDistB(uv);\nbdist = lerp(dist,GetDistB(uv),.2);\ndist_c = clamp(GetDistB2 (center),.1,.4); //center distance\n\nfloat3 uv2 = mul(float3((uv-.5)*MinDistB(uv),MinDistB(uv))/myzoom,RotMat)+CamPos;\nglow = pow (sat(tex2D (sampler_noise_hq,.02*uv2).r-.6)*2,2);\n//uv += .003*glow*(tex2D (sampler_noise_mq,uv*2+float2(0,time/4).xy-.5));\n\nfloat focus = sat(abs(GetDistB2(uv)-dist_c)*1+.2);\nfloat struc = GetBlurX(uv,focus).r;\n\nglow = sat(1-exp(-(GetBlur1(uv).r))-.2);\nq18 = 1;\nret = pow(struc,1) * (.2+(1-focus) *lerp(dist,1-dist,q18)) * (1+.5*sin(uv2));\nret = lerp(ret, float3(0,1,glow*3), glow);\n\n//distant light\n//ret += pow(1-GetBlurX(uv,.8).b,3)*(.5+.5*slow_roam_cos) *q19;\n\n//Lamp\nuv3 = uv1; \nlamp = saturate(1-4*length(uv3))*(struc)*saturate(1-2*bdist)*1.8;\nret += (1-lum(ret))*lamp;\nret = 1-exp((-2)*ret);\n//ret = GetPixel(uv).r;\n\n// laser\n\nret = ret + dots*(1+ret);\n}\n\n//-------------------------------------------\n//Written by martin\n"}