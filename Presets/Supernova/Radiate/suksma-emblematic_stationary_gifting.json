{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":4,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.3,"wave_scale":10.024,"wave_smoothing":0.9,"fshader":1,"wave_r":0.9,"wave_g":0.77,"wave_b":0.6,"ob_size":0.03,"ob_r":0.2,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q3=0;a.q2=0;a.q1=0;a.counter1=0;a.counter2=0;a.cdelay1=0;a.cdelay2=0;a.colorcounter=0;a.colorcounter=1;a.counter1=0;a.counter2=1;a.cdelay1=0;a.cdelay2=0;","frame_eqs_str":"a.warp=0;a.counter1=.00001<Math.abs(equal(a.counter2,1))?.00001<Math.abs(equal(a.counter1,1))?0:a.counter1+.02:1;a.counter2=.00001<Math.abs(equal(a.counter1,1))?.00001<Math.abs(equal(a.counter2,1))?0:a.counter2+.02:1;a.cdelay1=.00001<Math.abs(equal(a.cdelay2,1))?1:.00001<Math.abs(equal(mod(a.colorcounter,2),1))?.00001<Math.abs(equal(a.counter1,1))?2:0:.00001<Math.abs(equal(a.counter2,1))?2:0;a.cdelay2=.00001<Math.abs(equal(a.cdelay1,2))?1:0;a.colorcounter=.00001<Math.abs(above(a.colorcounter,\n7))?0:.00001<Math.abs(equal(a.cdelay1,1))?a.colorcounter+1:a.colorcounter;a.q1=a.counter1;a.q2=a.counter2;a.q3=a.colorcounter;a.monitor=a.colorcounter;a.wave_r=.4*a.bass;a.wave_g=.4*a.treb;a.wave_b=.4*a.mid;a.wave_a=a.bass;a.wave_mystery=-.5+.1*a.bass;","pixel_eqs_str":"a.zoom=.00001<Math.abs(equal(a.q3,0))?1+.4*Math.sin(a.q2)*a.rad:.00001<Math.abs(below(a.q3,6))?1+.4*a.rad:.00001<Math.abs(equal(a.q3,6))?1+.4*Math.sin(a.q2+2)*a.rad:1;a.rot=.00001<Math.abs(below(a.q3,4))?0:.00001<Math.abs(equal(a.q3,4))?.2*Math.sin(a.q2)*a.zoom:.00001<Math.abs(below(a.q3,7))?.2*a.zoom:.2*Math.sin(a.q1+2)*a.zoom;a.zoom+=.1*Math.sin(10*bitand(0,a.bass)*a.rad*a.treb);","init_eqs_eel":"colorcounter = 1;\ncounter1 = 0;\ncounter2 = 1;\ncdelay1 = 0;\ncdelay2 = 0;","frame_eqs_eel":"warp = 0;\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.02),1);\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.02),1);\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\ncdelay2 = if(equal(cdelay1,2),1,0);\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\nq1 = counter1;\nq2 = counter2;\nq3 = colorcounter;\nmonitor = colorcounter;\nwave_r = bass*.4;\nwave_g = treb*.4;\nwave_b = mid*.4;\nwave_a = bass;\nwave_mystery = -.5+bass*.1;","pixel_eqs_eel":"zoom = if(equal(q3,0),1+.4*sin(q2)*rad,if(below(q3,6),1+rad*.4,if(equal(q3,6),1+.4*sin(q2+2)*rad,1)));\nrot = if(below(q3,4),0,if(equal(q3,4),(.2*sin(q2)*zoom),if(below(q3,7),.2*zoom,(.2*sin(q1+2))*zoom)));\nzoom = zoom + sin((0&bass)*(rad*10*treb))*.1;","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz - (tmpvar_2.xyz * 0.5));\n  ret_1 = ((ret_1 * abs(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2) - 0.5)\n  )) * 5.0);\n  ret_1 = (ret_1 - 0.01);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (abs((\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\n  ret_2 = (ret_2 * 1.333);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    \n    // darken (decay) over time\n    ret = ret- (ret*.5);\n    ret = ret*(abs(GetBlur2(uv)-.5))*5;\n    ret = ret - .01;\n}","comp_hlsl":"\n\n\n\nshader_body\n{\n    uv = 0.05 + 0.9*uv;\n    ret = tex2D(sampler_main, uv).xyz;\n      // SUPER GLOW EDGES - looks awesome w/octopus\n      float3 avg_col = GetBlur3(uv);\n      ret = abs(avg_col - ret)*6;\n    ret *= 1.333; // a little bit of overbright\n}"}