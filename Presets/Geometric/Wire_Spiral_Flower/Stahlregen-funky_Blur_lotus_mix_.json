{"version":2,"baseVals":{"rating":5,"additivewave":1,"wave_thick":1,"wave_scale":0.331,"wave_smoothing":0,"wave_mystery":-0.4,"zoom":1.0303,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"r":0,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.fade=0;a.count=0;a.mc=0;a.is_beat=0;a.timp=0;a.reha=0;a.bimp=0;a.mimp=0;a.tc=0;a.bc=0;","frame_eqs_str":"a.warp=0;a.count+=1;a.bc+=a.bass;a.tc+=a.treb;a.mc+=a.mid;a.bimp=.00001<Math.abs(above(3.25*a.bass,a.bass+a.treb+a.mid))?1:0;a.timp=.00001<Math.abs(above(2.75*a.treb,a.bass+a.treb+a.mid))?1:0;a.mimp=.00001<Math.abs(above(2.75*a.mid,a.bass+a.treb+a.mid))?1:0;a.is_beat=.00001<Math.abs(above(.75*a.bass,div(a.bc,a.count)))?1*a.bimp:.00001<Math.abs(above(.75*a.treb,div(a.tc,a.count)))?1*a.timp:.00001<Math.abs(above(.75*a.mid,div(a.mc,a.count)))?1*a.mimp:0;a.is_beat=.00001<Math.abs(above(a.reha,\n0))?0:a.is_beat;a.reha=.00001<Math.abs(a.is_beat)?.25*a.fps:.00001<Math.abs(below(a.reha,1))?0:a.reha-1;a.fade=.00001<Math.abs(a.is_beat)?100+a.fade:.9*a.fade-1;a.fade=.00001<Math.abs(below(a.fade,1))?0:a.fade;a.zoom=1.01+.001*a.fade;a.wave_r=.5+.5*Math.sin(a.time);a.wave_g=.5+.5*Math.sin(1.53*a.time);a.wave_b=.5+.5*Math.sin(2.02*a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\n// <<-- Stahlregen's (off)beat detection \n// frame counter for average\ncount = count+1;\n// counters of the bass/treb/mid values for average\nbc = bc+bass;\ntc = tc+treb;\nmc = mc+mid;\n// checking for impact: highest of bass/mid/treb has impact\nbimp = if(above(3.25*bass,bass+treb+mid),1,0);\ntimp = if(above(2.75*treb,bass+treb+mid),1,0);\nmimp = if(above(2.75*mid,bass+treb+mid),1,0);\n// checking for beats: compare adjusted buffered \n// vs. average value and check for impact\nis_beat = if(above(.75*bass,bc/count),1*bimp,\nif(above(.75*treb,tc/count),1*timp,\nif(above(.75*mid,mc/count),1*mimp,\n0))); \n// restricting max number of beats per second (fraction of fps)\nis_beat = if(above(reha,0),0,is_beat);\nreha = if(is_beat,fps*.25,if(below(reha,1),0,reha-1));\n// end of (off)beat detection -->\n\nfade = if(is_beat,100+fade,.9*fade-1);\n\nfade = if(below(fade,1),0,fade);\n\nzoom = 1.01+.001*fade;\n\n\nwave_r = .5+.5*sin(time);\nwave_g = .5+.5*sin(time*1.53);\nwave_b = .5+.5*sin(time*2.02);","pixel_eqs_eel":"","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (mix (texture (sampler_main, uv).xyz, (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1), vec3((0.075 + \n    (0.09 * bass)\n  ))) - 0.001);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec3 ret2_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv);\n  ret_2 = (0.9 * tmpvar_3.xyz);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur1, uv);\n  ret_2 = (ret_2 + ((0.5 * \n    ((tmpvar_4.xyz * scale1) + bias1)\n  ) + (0.1 * \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  )));\n  float tmpvar_5;\n  tmpvar_5 = (rad * 4.5);\n  float tmpvar_6;\n  tmpvar_6 = (0.5 * time);\n  float tmpvar_7;\n  tmpvar_7 = (1.431 * ang);\n  vec2 tmpvar_8;\n  tmpvar_8 = ((0.5 - uv) + 0.5);\n  ret2_1 = ((0.9 * texture (sampler_main, tmpvar_8).xyz) + ((0.5 * \n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\n  ) + (0.1 * \n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\n  )));\n  vec3 tmpvar_9;\n  tmpvar_9 = mix (ret2_1, (0.8 - clamp (\n    (texture (sampler_main, tmpvar_8).xyz + (0.5 * ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)))\n  , 0.0, 1.0)), vec3(fract((\n    (tmpvar_5 + tmpvar_6)\n   + tmpvar_7))));\n  ret2_1 = tmpvar_9;\n  vec3 tmpvar_10;\n  tmpvar_10 = mix (mix (ret_2, (0.8 - \n    clamp ((tmpvar_3.xyz + (0.5 * (\n      (tmpvar_4.xyz * scale1)\n     + bias1))), 0.0, 1.0)\n  ), vec3(fract(\n    ((tmpvar_5 + tmpvar_6) - tmpvar_7)\n  ))), tmpvar_9, vec3(0.5, 0.5, 0.5));\n  float tmpvar_11;\n  tmpvar_11 = dot (tmpvar_10, vec3(0.32, 0.49, 0.29));\n  ret_2 = (((tmpvar_11 * tmpvar_11) * tmpvar_10) * 1.75);\n  ret_2 = (ret_2 * (1.5 - (2.0 * rad)));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_2;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = lerp(tex2D( sampler_main, uv ).xyz,GetBlur1(uv),.075+.09*bass);\n    \n    // darken (decay) over time\n    ret = ret-0.001;\n}","comp_hlsl":"shader_body\n{\n    ret = .9*tex2D(sampler_main, uv).xyz;\n    ret += .5*GetBlur1(uv)+.1*GetBlur3(uv);\n    ret = lerp(ret,.8-saturate(GetPixel(uv)+.5*GetBlur1(uv)),frac(rad*4.5+.5*time-.159*9*ang));\n \n float2 uve = (uv-.5)*float2(-1,-1)+.5;\n float3 ret2 = .9*tex2D(sampler_main, uve).xyz;\n    ret2 += .5*GetBlur1(uve)+.1*GetBlur3(uve);\n    ret2 = lerp(ret2,.8-saturate(GetPixel(uve)+.5*GetBlur1(uve)),frac(rad*4.5+.5*time+.159*9*ang));\n\nret = lerp(ret,ret2,.5);\n\n    ret = pow(lum(ret),2)*ret*1.75;\n\nret *= (1.5-2*rad);\n\n\n}"}