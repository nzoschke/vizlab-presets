{"version":2,"baseVals":{"rating":5,"wrap":0,"wave_a":0.001,"dx":0.00501,"dy":0.00001,"warp":0.01,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+\ndiv(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_b=\n.1*Math.floor(rand(a.q3))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+div(Math.floor(rand(Math.floor(a.q30))),\n15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_b=.1*Math.floor(rand(a.q3))+a.instance-\na.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"num_inst":33,"r":0.5,"r2":0.5,"g2":0,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;a.q3=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q30))),5)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.treb_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.treb_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+\ndiv(Math.floor(rand(Math.floor(a.q30))),15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_b=\n.1*Math.floor(rand(a.q3))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\ntrans2 = int(rand(int(q30)))/5+instance-instance;\ntrans3 = int(rand(int(q30)))/5+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.y1=0;a.w=0;a.dx2=0;a.x1=0;a.dy1=0;a.dy2=0;a.x2=0;a.y2=0;a.dx1=0;a.vol2=0;a.q3=0;a.q30=0;","frame_eqs_str":"a.wave_r=.5+.5*Math.sin(6*a.time);a.wave_g=.5+.5*Math.sin(4.1*a.time);a.wave_b=-1+(1-a.wave_r+1-a.wave_g);a.warp=0;a.vol2=a.bass+a.mid+a.treb;a.q30=4*a.vol2;a.q3=4*a.vol2;","pixel_eqs_str":"a.w=.4*-a.time;a.x2=a.x-.5;a.y2=a.y-.5;a.x1=Math.sin(a.w)*a.x2-Math.cos(a.w)*a.y2;a.y1=Math.cos(a.w)*a.x2+Math.sin(a.w)*a.y2;a.x=a.x1;a.y=a.y1;a.rad=2*sqrt(a.x*a.x+a.y*a.y);a.ang=Math.atan2(a.x,a.y);a.dx1=-.05*Math.sin(1.15+5*(2*a.rad-1))+div(a.mid,999);a.dy1=-.05*Math.sin(1+(2*a.ang-1));a.dx2=Math.sin(-a.w)*a.dx1-Math.cos(-a.w)*a.dy1;a.dy2=Math.cos(-a.w)*a.dx1+Math.sin(-a.w)*a.dy1;a.dx=a.dx2;a.dy=a.dy2;a.zoom=1555+150*Math.sin(div(a.time,20));","init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\nwave_g = 0.5 + 0.5*sin(4.1*time);\nwave_b = -1 + (1-wave_r + 1-wave_g);\nwarp = 0;\n//echo_zoom = echo_zoom + 0.2*sin(bass_att);\nvol2=bass+mid+treb;\nq30=vol2*4;\nq3=vol2*4;","pixel_eqs_eel":"w= -time*0.4; // direction (0: left; asin(1): top; (+/-)2*asin(1): right; -asin(1): bottom)\n\nX2 = x-0.5; // needed to rotate around center\nY2 = y-0.5; // (if you add a strong shift, it may appear not turning around the center, but find out yourself)\n\nX1 = sin(w)*X2 -cos(w)*Y2; // these 2 lines first rotate the x/y pane\nY1 = cos(w)*X2 +sin(w)*Y2;\n\nx = X1; // so you can use x and y as usually below\ny = Y1;\n\nrad = sqrt(x*x + y*y)*2; // had to replace rad and ang, because of the translation by -.5,-.5\nang = atan2(x,y);\n\ndx1=-0.05*sin(1.15+(rad*2-1)*5)+mid/999; // hey this is your code! ;-)\ndy1=-0.05*sin(1.+(ang*2-1)*1);\n\ndx2 = sin(-w)*dx1 - cos(-w)*dy1; // and finally the dx/dy pane is rotated to match the x/y pane\ndy2 = cos(-w)*dx1 + sin(-w)*dy1;\n\ndx = dx2;\ndy = dy2;\n\n\n\n\n\nzoom=1555+sin(time/20) *150;","warp":"vec3 xlat_mutablenoise;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv1;\n shader_body { \n  vec3 copy_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.5;\n  tmpvar_2.y = q5;\n  xlat_mutableuv1 = (uv - tmpvar_2);\n  float tmpvar_3;\n  tmpvar_3 = (1.0/(xlat_mutableuv1.y));\n  xlat_mutablers0.x = (xlat_mutableuv1.x * tmpvar_3);\n  xlat_mutablers0.y = tmpvar_3;\n  xlat_mutablers.x = xlat_mutablers0.x;\n  xlat_mutablers.y = (tmpvar_3 + (time * 0.3));\n  xlat_mutablenoise = (vec3(dot (texture (sampler_pw_noise_lq, (xlat_mutablers / 63.0)), vec4(0.32, 0.49, 0.29, 0.0))) * (dot (texture (sampler_pw_noise_lq, \n    (xlat_mutablers / 12.0)\n  ), vec4(0.32, 0.49, 0.29, 0.0)) + 0.5));\n  xlat_mutablenoise = (xlat_mutablenoise * (clamp (\n    ((10.0 * xlat_mutablenoise) - 8.0)\n  , 0.0, 1.0) * clamp (\n    (2.0 / tmpvar_3)\n  , 0.0, 1.0)));\n  vec2 tmpvar_4;\n  tmpvar_4.x = uv.x;\n  tmpvar_4.y = (uv.y - (0.024 / tmpvar_3));\n  vec2 tmpvar_5;\n  tmpvar_5.x = uv.x;\n  tmpvar_5.y = (uv.y - (0.012 / tmpvar_3));\n  copy_1 = (texture (sampler_main, tmpvar_4).xyz + texture (sampler_main, tmpvar_5).xyz);\n  vec2 tmpvar_6;\n  tmpvar_6.x = uv.x;\n  tmpvar_6.y = (uv.y - (0.006 / tmpvar_3));\n  copy_1 = (copy_1 + texture (sampler_main, tmpvar_6).xyz);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((xlat_mutablenoise + (\n    (((copy_1 / 3.0) * (1.0 + slow_roam_cos).xyz) / 2.0)\n   * 0.99)) - 0.005);\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret2_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv);\n  ret_2 = (0.9 * tmpvar_3.xyz);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur1, uv);\n  ret_2 = (ret_2 + ((0.5 * \n    ((tmpvar_4.xyz * scale1) + bias1)\n  ) + (0.1 * \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  )));\n  float tmpvar_5;\n  tmpvar_5 = (rad * 4.5);\n  float tmpvar_6;\n  tmpvar_6 = (0.5 * time);\n  float tmpvar_7;\n  tmpvar_7 = (1.431 * ang);\n  vec2 tmpvar_8;\n  tmpvar_8 = ((0.5 - uv) + 0.5);\n  ret2_1 = ((0.9 * texture (sampler_main, tmpvar_8).xyz) + ((0.5 * \n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\n  ) + (0.1 * \n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\n  )));\n  vec3 tmpvar_9;\n  tmpvar_9 = mix (ret2_1, (0.8 - clamp (\n    (texture (sampler_main, tmpvar_8).xyz + (0.5 * ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)))\n  , 0.0, 1.0)), vec3(fract((\n    (tmpvar_5 + tmpvar_6)\n   + tmpvar_7))));\n  ret2_1 = tmpvar_9;\n  vec3 tmpvar_10;\n  tmpvar_10 = mix (mix (ret_2, (0.8 - \n    clamp ((tmpvar_3.xyz + (0.5 * (\n      (tmpvar_4.xyz * scale1)\n     + bias1))), 0.0, 1.0)\n  ), vec3(fract(\n    ((tmpvar_5 + tmpvar_6) - tmpvar_7)\n  ))), tmpvar_9, vec3(0.5, 0.5, 0.5));\n  float tmpvar_11;\n  tmpvar_11 = dot (tmpvar_10, vec3(0.32, 0.49, 0.29));\n  ret_2 = (((tmpvar_11 * tmpvar_11) * tmpvar_10) * 1.75);\n  ret_2 = (ret_2 * (1.5 - (2.0 * rad)));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_2;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"sampler sampler_pw_noise_lq;\nfloat3 color, mus, neu, ret1, noise, noise2;\nfloat2 uv1, rs0, rs, uv2, uv3, dz, hor, ver;\nfloat dx,dy,speed;\nshader_body {\nspeed = .3;\nuv1 = uv-float2(0.5,q5);\nfloat z = 1/(uv1.y);\nrs0.x = (uv1.x)*z;\nrs0.y = z;\nrs.x = rs0.x *1;\nrs.y = rs0.y + time*speed;\n\n\n//Kacheln\nnoise = lum(tex2D(sampler_pw_noise_lq,rs/63 ));\nnoise *= lum(tex2D(sampler_pw_noise_lq,rs/12 ))+.5;\nnoise *= saturate(10*noise - 8) * saturate(2/z);\nnoise2 = saturate(8* (lum(tex2D(sampler_pw_noise_lq,uv))-.5));\n\nspeed *= 2;\nfloat3 copy = + GetPixel(float2(uv.x,uv.y-.04*speed/z));\ncopy +=GetPixel(float2(uv.x,uv.y-.02*speed/z));\ncopy +=GetPixel(float2(uv.x,uv.y-.01*speed/z));\n\nret = noise*1 + copy/3*(1+slow_roam_cos)/2*.99-.005;\n\n\n}","comp_hlsl":"shader_body\n{\n    ret = .9*tex2D(sampler_main, uv).xyz;\n    ret += .5*GetBlur1(uv)+.1*GetBlur3(uv);\n    ret = lerp(ret,.8-saturate(GetPixel(uv)+.5*GetBlur1(uv)),frac(rad*4.5+.5*time-.159*9*ang));\n \n float2 uve = (uv-.5)*float2(-1,-1)+.5;\n float3 ret2 = .9*tex2D(sampler_main, uve).xyz;\n    ret2 += .5*GetBlur1(uve)+.1*GetBlur3(uve);\n    ret2 = lerp(ret2,.8-saturate(GetPixel(uve)+.5*GetBlur1(uve)),frac(rad*4.5+.5*time+.159*9*ang));\n\nret = lerp(ret,ret2,.5);\n\n    ret = pow(lum(ret),2)*ret*1.75;\n\nret *= (1.5-2*rad);\n\n\n}"}