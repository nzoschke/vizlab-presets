{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_b":1,"ob_a":0.3,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":18,"textured":1,"rad":0.15416,"tex_ang":3.76991,"tex_zoom":5.27784,"g":1,"b":1,"a":0.7,"r2":1,"b2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_ang = 3+2*q1;","init_eqs_eel":"","frame_eqs_eel":"tex_ang = 3+2*q1;"},{"baseVals":{"sides":32,"rad":0.06892,"tex_zoom":1.8315,"g":1,"b":1,"a":0.9,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a = q24/2; a2 = 0;\n\nr = rand(10)/10;\ng = rand(10)/10;\nb = rand(10)/10;\n\nrad = .06*q22;","init_eqs_eel":"","frame_eqs_eel":"a = q24/2; a2 = 0;\n\nr = rand(10)/10;\ng = rand(10)/10;\nb = rand(10)/10;\n\nrad = .06*q22;"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5 + .1* sin (time*73);\ny = .5 + .1* sin (time*23);\n\nr = 0; g = 0; b = 0;\nr2 = 1; g2 = 1; b2 = 1;\n\nrad = mid_att/100;\na = .7;\na2 = a;","init_eqs_eel":"","frame_eqs_eel":"x = .5 + .1* sin (time*73);\ny = .5 + .1* sin (time*23);\n\nr = 0; g = 0; b = 0;\nr2 = 1; g2 = 1; b2 = 1;\n\nrad = mid_att/100;\na = .7;\na2 = a;"},{"baseVals":{"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":0.4,"a":0.7,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = 0.05 + rand(900)/1000;\ny = 0.05 + rand(900)/1000;\n ","init_eqs_eel":"","frame_eqs_eel":"x = 0.05 + rand(900)/1000;\ny = 0.05 + rand(900)/1000;\n "}],"waves":[{"baseVals":{"enabled":1,"samples":128,"additive":1,"scaling":0.89152,"smoothing":0,"g":0,"b":0},"init_eqs_str":"a.q24=0;a.q27=0;a.t1=1+.3*(.01*rand(101)-.01*rand(101));a.t2=1+.3*(.01*rand(101)-.01*rand(101));a.t3=1+.3*(.01*rand(101)-.01*rand(101));a.t4=1+.3*(.01*rand(101)-.01*rand(101));a.t5=1+.3*(.01*rand(101)-.01*rand(101));a.t6=1+.3*(.01*rand(101)-.01*rand(101));a.t7=1+.3*(.01*rand(101)-.01*rand(101));a.t8=1+.3*(.01*rand(101)-.01*rand(101));","frame_eqs_str":"","point_eqs_str":"a.x=a.sample;a.y=.5+.01*a.value2;a.a=1*a.q24*mod(a.q27+1,2);a.r=.5+.5*Math.sin(div(a.time,5));a.g=.5+.5*Math.sin(div(a.time,6));a.b=.5+.5*Math.sin(div(a.time,13));","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":"x = sample ;\ny = .5+ value2*.01;\n\na = 1*q24*((q27+1)%2);\n\nr = .5+.5*sin(time/5);\ng = .5+.5*sin(time/6);\nb = .5+.5*sin(time/13);"},{"baseVals":{"enabled":1,"samples":128,"thick":1,"scaling":0.89152,"smoothing":0,"r":0,"g":0,"a":0.1},"init_eqs_str":"a.q24=0;a.q27=0;a.t;","frame_eqs_str":"","point_eqs_str":"a.y=a.sample;a.x=.5+.01*a.value2;a.a=1*a.q24*mod(a.q27,2);a.r=.5+.5*Math.sin(div(a.time,7));a.g=.5+.5*Math.sin(div(a.time,9));a.b=.5+.5*Math.sin(div(a.time,11));","init_eqs_eel":"t","frame_eqs_eel":"","point_eqs_eel":"y = sample ;\nx = .5+ value2*0.01;\n\na = 1*q24*(q27%2);\n\nr = .5+.5*sin(time/7);\ng = .5+.5*sin(time/9);\nb = .5+.5*sin(time/11);"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.trig2=0;a.prox=0;a.p3z=0;a.index2=0;a.vtrig=0;a.index=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.hy=0;a.q13=0;a.q15=0;a.q6=0;a.rota1=0;a.q1=0;a.dec_med=0;a.q5=0;a.p2z=0;a.trel=0;a.q9=0;a.p1z=0;a.is_beat=0;a.q24=0;a.vx=0;a.dec_slow=0;a.q11=0;a.z0=0;a.q10=0;a.vy=0;a.q4=0;a.q16=0;a.q26=0;a.p2=0;a.avg=0;a.rota=0;a.movez=0;a.q19=0;a.beat=0;a.q17=0;a.vol=0;a.peak=0;a.trig1=0;a.q2=0;a.q27=0;a.q14=0;a.trig3=0;a.speed=0;a.q3=0;a.t0=0;a.hx=0;a.q32=0;a.q7=0;a.q28=0;a.q20=0;a.q8=0;a.prox=1;\n","frame_eqs_str":"a.dec_med=pow(.8,div(30,a.fps));a.dec_slow=pow(.95,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.2+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,32);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.q22=a.peak;a.q24=a.is_beat;a.q26=a.bass_att+a.mid_att+a.treb_att;a.vol=a.vol*\na.dec_med+(1-a.dec_med)*a.q26;a.q27=a.index+1;a.q28=a.index2+1;a.p2=.3*Math.sin(a.time)+.3*Math.cos(div(a.time,3));a.q1=Math.cos(div(3.1416*a.p2,4));a.q2=Math.sin(div(3.1416*a.p2,4));a.q3=-a.q2;a.q4=a.q1;a.vtrig=a.is_beat*bnot(mod(a.index,2));a.vx=a.vx*bnot(a.vtrig)+a.vtrig*(div(rand(100),100)-.5);a.vy=a.vy*bnot(a.vtrig)+a.vtrig*(div(rand(100),100)-.5);a.vx*=below(mod(a.index,15),5);a.vy*=below(mod(a.index,15),5);a.q5=10*a.vx;a.q6=12*a.vy;a.q21=div(1+Math.sin(div(a.time,12)),8)+.01;a.prox-=above(a.vy,\n.3)*a.prox*2;a.q32=.5+.2*a.prox;a.monitor=a.prox;a.rota+=30*div(.01*below(mod(a.index,16),8),a.fps);a.rota1=a.rota1*a.dec_med+(1-a.dec_med)*a.rota;a.q7=a.rota1;a.movez+=div(div(1.2,1+Math.abs(a.vx)+Math.abs(a.vy)),a.fps);a.q8=a.movez*(1+div(a.q21,4));a.trig1=a.q24*bnot(mod(a.index,12));a.trig2=a.q24*bnot(mod(a.index+4,12));a.trig3=a.q24*bnot(mod(a.index+8,12));a.trel+=div(a.vol,a.fps);a.z0=1;a.speed=div(a.vol,2);a.hx=Math.sin(a.trel);a.hy=Math.cos(a.trel);a.p1z=bnot(a.trig1)*(a.p1z+div((5+a.p1z)*\na.speed,a.fps))+a.trig1*a.z0;a.p1z=Math.max(a.p1z,.1);a.q9=div(a.hx,a.p1z);a.q10=div(a.hy,a.p1z);a.q11=a.p1z;a.q12=.1+.02*a.q26*bnot(mod(a.index+2,3))*a.p1z*Math.exp(div(-a.p1z,100));a.p2z=bnot(a.trig2)*(a.p2z+div((5+a.p2z)*a.speed,a.fps))+a.trig2*a.z0;a.p2z=Math.max(a.p2z,.1);a.q13=div(2*a.hx,a.p2z);a.q14=div(-.5*a.hy,a.p2z);a.q15=a.p2z;a.q16=.1+.02*a.q26*bnot(mod(a.index+2,3))*a.p2z*Math.exp(div(-a.p2z,100));a.p3z=bnot(a.trig3)*(a.p3z+div((5+a.p3z)*a.speed,a.fps))+a.trig3*a.z0;a.p3z=Math.max(a.p3z,\n.1);a.q17=div(-1.4*a.hx,a.p3z);a.q18=div(2*a.hy,a.p3z);a.q19=a.p3z;a.q20=.1+.02*a.q26*bnot(mod(a.index+2,3))*a.p3z*Math.exp(div(-a.p3z,100));","pixel_eqs_str":"","init_eqs_eel":"prox = 1;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\ndec_slow = pow (0.95, 30/fps);\n//dec_xlow = pow (0.999, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %32;\nindex2 = (index2 + is_beat*bnot(index))%4;\n\nq22 = peak;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att;\nvol = vol*dec_med + (1-dec_med)*q26;\nq27 = index + 1;\nq28 = index2 +1;\n\np2 = .3*sin(time) + .3*cos(time/3);\n//*****tunnel tilting\nq1 = cos(p2 * 3.1416/4);\nq2 = sin(p2 * 3.1416/4);\nq3 = -q2;\nq4 = q1;\n\n//****tunnel viewpoint x,y\nvtrig = is_beat * bnot(index%2);\nvx = vx * bnot(vtrig) + vtrig * (rand(100)/100-.5);\nvy = vy * bnot(vtrig) + vtrig * (rand(100)/100-.5);\nvx = vx* below(index%15,5); //###\nvy = vy* below(index%15,5);\nq5 = vx*10;\nq6 = vy*12;\n\n//***tunnel width\nq21 = (1+sin(time/12))/8+.01;\n\n//**floor proximity\nprox = prox - above(vy,.3)*prox*2;\nq32 = .5 + .2*prox;\nmonitor = prox;\n\n//****tunnel rotation\nrota = rota +.01*below(index%16,8)/fps*30;\nrota1 = rota1*dec_med + (1-dec_med)*rota;\nq7 = rota1;\n\n//****tunnel speed\nmovez = movez + 1.2/(1+abs(vx)+abs(vy))/fps;\nq8 = movez * (1+q21/4);\n//dyn. Aenderung von q21 bewirkt auch Richt.wechsel\n\n//***********************\ntrig1= q24*bnot(index%12);\ntrig2= q24*bnot((index+4)%12);\ntrig3= q24*bnot((index+8)%12);\ntrel = trel + vol/fps;\nz0 = 1;\nspeed = vol/2;\nhx = sin(trel);\nhy = cos(trel);\n\np1z = bnot(trig1)* (p1z + (5+p1z)*speed/fps)+trig1*z0;\np1z = max(p1z,.1);\nq9 = hx/(p1z); \nq10 = hy/(p1z); \nq11 = p1z;\nq12 = .1+.02*q26*bnot((index+2)%3)*p1z*exp(-p1z/100);\n\np2z = bnot(trig2)* (p2z + (5+p2z)*speed/fps)+trig2*z0;\np2z = max(p2z,.1);\nq13 = 2*hx/(p2z); \nq14 = -.5*hy/(p2z); \nq15 = p2z;\nq16 = .1+.02*q26*bnot((index+2)%3)*p2z*exp(-p2z/100);\n\n\np3z = bnot(trig3)* (p3z + (5+p3z)*speed/fps)+trig3*z0;\np3z = max(p3z,.1);\nq17 = -1.4*hx/(p3z); \nq18 = 2*hy/(p3z); \nq19 = p3z;\nq20 = .1+.02*q26*bnot((index+2)%3)*p3z*exp(-p3z/100);","pixel_eqs_eel":"","warp":"vec3 xlat_mutablenoise2;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv6;\n shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1 = vec3((dot ((\n    (texture (sampler_blur1, fract(uv)).xyz * scale1)\n   + bias1), vec3(0.32, 0.49, 0.29)) * q1));\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.0;\n  tmpvar_2.x = texsize.z;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((tmpvar_2 * 8.0) * tmpvar_1.xy);\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((tmpvar_4 * 8.0) * tmpvar_1.xy);\n  vec2 tmpvar_6;\n  tmpvar_6.x = dot ((texture (sampler_main, (uv + tmpvar_3)) - texture (sampler_main, (uv - tmpvar_3))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_6.y = dot ((texture (sampler_main, (uv + tmpvar_5)) - texture (sampler_main, (uv - tmpvar_5))), vec4(0.32, 0.49, 0.29, 0.0));\n  float tmpvar_7;\n  tmpvar_7 = abs((uv.x - 0.5));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (uv.y - 0.5);\n  vec2 x_9;\n  x_9 = (tmpvar_8 - vec2(0.1, -0.1));\n  float tmpvar_10;\n  tmpvar_10 = pow (clamp ((0.02 / \n    sqrt(dot (x_9, x_9))\n  ), 0.0, 1.0), 4.0);\n  float tmpvar_11;\n  float tmpvar_12;\n  tmpvar_12 = (tmpvar_8.y - q3);\n  tmpvar_11 = pow (clamp ((0.05 / \n    sqrt((((tmpvar_7 * tmpvar_7) * q2) + ((\n      ((0.05 / (0.01 + (q4 * tmpvar_7))) * (1.0 + q15))\n     / q16) * (tmpvar_12 * tmpvar_12))))\n  ), 0.0, 1.0), 3.0);\n  float tmpvar_13;\n  tmpvar_13 = max (tmpvar_10, tmpvar_11);\n  vec2 x_14;\n  x_14 = (tmpvar_8 - vec2(0.1, -0.1));\n  vec2 tmpvar_15;\n  tmpvar_15.x = 0.0;\n  tmpvar_15.y = (q10 - -0.1);\n  vec2 x_16;\n  x_16 = ((tmpvar_8 - vec2(0.1, -0.1)) - (0.02 * tmpvar_15));\n  xlat_mutableuv1 = (tmpvar_8 + (vec2((tmpvar_10 + \n    (tmpvar_11 * q16)\n  )) / 4.0));\n  xlat_mutableuv6 = (xlat_mutableuv1 + (xlat_mutableuv1 * (2.0 * texture (sampler_noise_hq, \n    ((xlat_mutableuv1 / 4.0) + (time / 180.0))\n  ).xy)));\n  xlat_mutablenoise2 = (vec3(((\n    (abs((cos(\n      (xlat_mutableuv6.y * 18.0)\n    ) + sin(\n      (xlat_mutableuv6.x * 18.0)\n    ))) / 6.0)\n   * \n    (1.0 + abs((q1 / 16.0)))\n  ) + 0.2)) * vec3(1.0, 0.9, 0.8));\n  vec3 tmpvar_17;\n  tmpvar_17 = mix (mix (xlat_mutablenoise2, vec3((\n    (sin(((tmpvar_7 * 142.0) + (1.5 * \n      sign((tmpvar_8.y - q3))\n    ))) - ((q16 * 0.008) / abs((tmpvar_8.y - q3))))\n   * tmpvar_11)), vec3(tmpvar_11)), ((\n    ((clamp (cos(\n      (70.0 * sqrt(dot (x_14, x_14)))\n    ), 0.0, 1.0) / 3.0) * roam_sin)\n   * 2.0).xyz - float(\n    (sqrt(dot (x_16, x_16)) < (0.01 * q15))\n  )), vec3(tmpvar_10));\n  xlat_mutablenoise2 = tmpvar_17;\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = (((\n    (texture (sampler_main, fract((uv + (tmpvar_6 * 0.003)))).xyz + vec3(-((sqrt(\n      dot (tmpvar_6, tmpvar_6)\n    ) * 0.1))))\n   * \n    (0.99 - (tmpvar_13 / 2.0))\n  ) - 0.01) + (tmpvar_17 * (0.045 + tmpvar_13)));\n  ret = tmpvar_18.xyz;\n }","comp":"vec2 xlat_mutableKugel1;\nvec2 xlat_mutableKugel2;\nfloat xlat_mutablerad1;\nfloat xlat_mutablerad2;\nfloat xlat_mutablerad3;\nvec3 xlat_mutableret2;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutablersk;\nvec2 xlat_mutablerss;\nvec2 xlat_mutablerss0;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv4;\n shader_body { \n  vec2 uv_1;\n  float z_2;\n  vec3 dots_3;\n  vec2 uv1_4;\n  vec3 ret_5;\n  mat2 tmpvar_6;\n  tmpvar_6[uint(0)] = _qa.xy;\n  tmpvar_6[1u] = _qa.zw;\n  uv_1 = ((uv * aspect.xy) * tmpvar_6);\n  vec2 tmpvar_7;\n  tmpvar_7.x = q5;\n  tmpvar_7.y = q6;\n  uv_1 = (uv_1 - (0.1 * tmpvar_7));\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv_1 - 0.5);\n  vec2 tmpvar_9;\n  tmpvar_9.x = q9;\n  tmpvar_9.y = q10;\n  xlat_mutablersk = (tmpvar_8 + tmpvar_9);\n  vec2 tmpvar_10;\n  tmpvar_10 = normalize(xlat_mutablersk);\n  xlat_mutablerad1 = (q11 * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * tmpvar_10);\n  xlat_mutableKugel1 = (xlat_mutableuv4 * clamp ((8.0 - \n    (8.0 * xlat_mutablerad1)\n  ), 0.0, 1.0));\n  vec2 tmpvar_11;\n  tmpvar_11.x = q13;\n  tmpvar_11.y = q14;\n  xlat_mutablersk = (tmpvar_8 + tmpvar_11);\n  vec2 tmpvar_12;\n  tmpvar_12 = normalize(xlat_mutablersk);\n  xlat_mutablerad2 = (q15 * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad2) / cos(xlat_mutablerad2)) * tmpvar_12);\n  xlat_mutableKugel2 = (xlat_mutableuv4 * clamp ((8.0 - \n    (8.0 * xlat_mutablerad2)\n  ), 0.0, 1.0));\n  vec2 tmpvar_13;\n  tmpvar_13.x = q17;\n  tmpvar_13.y = q18;\n  xlat_mutablersk = (tmpvar_8 + tmpvar_13);\n  vec2 tmpvar_14;\n  tmpvar_14 = normalize(xlat_mutablersk);\n  xlat_mutablerad3 = (q19 * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad3) / cos(xlat_mutablerad3)) * tmpvar_14);\n  uv1_4 = (tmpvar_8 + ((\n    (xlat_mutableKugel2 + xlat_mutableKugel1)\n   + \n    (xlat_mutableuv4 * clamp ((8.0 - (8.0 * xlat_mutablerad3)), 0.0, 1.0))\n  ) * 0.2));\n  float tmpvar_15;\n  float tmpvar_16;\n  tmpvar_16 = (min (abs(\n    (uv1_4.x / uv1_4.y)\n  ), 1.0) / max (abs(\n    (uv1_4.x / uv1_4.y)\n  ), 1.0));\n  float tmpvar_17;\n  tmpvar_17 = (tmpvar_16 * tmpvar_16);\n  tmpvar_17 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_17) + 0.05368138) * tmpvar_17) - 0.1173503)\n     * tmpvar_17) + 0.1938925) * tmpvar_17) - 0.3326756)\n   * tmpvar_17) + 0.9999793) * tmpvar_16);\n  tmpvar_17 = (tmpvar_17 + (float(\n    (abs((uv1_4.x / uv1_4.y)) > 1.0)\n  ) * (\n    (tmpvar_17 * -2.0)\n   + 1.570796)));\n  tmpvar_15 = (tmpvar_17 * sign((uv1_4.x / uv1_4.y)));\n  if ((abs(uv1_4.y) > (1e-08 * abs(uv1_4.x)))) {\n    if ((uv1_4.y < 0.0)) {\n      if ((uv1_4.x >= 0.0)) {\n        tmpvar_15 += 3.141593;\n      } else {\n        tmpvar_15 = (tmpvar_15 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_15 = (sign(uv1_4.x) * 1.570796);\n  };\n  xlat_mutablerss0.x = (tmpvar_15 / 3.1416);\n  xlat_mutablerss0.y = ((0.1 * q21) / sqrt(dot (uv1_4, uv1_4)));\n  vec2 tmpvar_18;\n  tmpvar_18.x = xlat_mutablerss0.x;\n  tmpvar_18.y = (xlat_mutablerss0.y + time);\n  xlat_mutablerss = (tmpvar_18 * mat2(0.7, -0.7, 0.7, 0.7));\n  vec4 tmpvar_19;\n  tmpvar_19 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \n    (xlat_mutablerss / 32.0)\n  ) - 0.5), vec4(0.0, 0.0, 0.0, 0.0)));\n  vec2 tmpvar_20;\n  tmpvar_20 = abs((fract(\n    (xlat_mutablerss * 8.0)\n  ) - 0.5));\n  vec2 tmpvar_21;\n  tmpvar_21.x = xlat_mutablerss0.x;\n  tmpvar_21.y = (xlat_mutablerss0.y + (time / 4.0));\n  xlat_mutablerss = (tmpvar_21 * mat2(0.7, -0.7, 0.7, 0.7));\n  vec2 tmpvar_22;\n  tmpvar_22 = abs((fract(\n    (xlat_mutablerss * 8.0)\n  ) - 0.5));\n  dots_3 = (vec3((clamp (\n    (0.04 / sqrt(dot (tmpvar_20, tmpvar_20)))\n  , 0.0, 1.0) * tmpvar_19.x)) + (clamp (\n    (0.02 / sqrt(dot (tmpvar_22, tmpvar_22)))\n  , 0.0, 1.0) * vec4(\n    greaterThanEqual ((texture (sampler_pw_noise_lq, (xlat_mutablerss / 32.0)) - 0.5), vec4(0.0, 0.0, 0.0, 0.0))\n  ).x));\n  dots_3 = (dots_3 * clamp ((0.2 / \n    abs(xlat_mutablerss0.y)\n  ), 0.0, 1.0));\n  dots_3 = (dots_3 * (dots_3 * 0.6));\n  float tmpvar_23;\n  tmpvar_23 = (q32 / (uv1_4.y - 0.02));\n  float tmpvar_24;\n  tmpvar_24 = clamp ((4.0 / tmpvar_23), 0.0, 1.0);\n  xlat_mutablers0.x = (uv1_4.x * tmpvar_23);\n  xlat_mutablers0.y = (tmpvar_23 / 4.0);\n  xlat_mutablers.x = xlat_mutablers0.x;\n  xlat_mutablers.y = (xlat_mutablers0.y + (q8 * 3.0));\n  vec3 tmpvar_25;\n  tmpvar_25 = vec3((dot (texture (sampler_pw_noise_lq, (0.02 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5));\n  z_2 = (0.2 / (sqrt(\n    dot (uv1_4, uv1_4)\n  ) - q21));\n  xlat_mutableuv2.y = (z_2 + q8);\n  xlat_mutableuv2.x = (xlat_mutablerss0.x + q7);\n  ret_5 = (max ((\n    (texture (sampler_main, fract(xlat_mutableuv2)) / z_2)\n  .xyz * \n    (1.0 - (0.5 * tmpvar_24))\n  ), (tmpvar_25 * tmpvar_24)) + dots_3);\n  ret_5 = (ret_5 + ((\n    abs((((\n      (inversesqrt(xlat_mutablerad1) * tmpvar_10.x)\n     * roam_sin).xyz + (\n      (inversesqrt(xlat_mutablerad2) * tmpvar_12.y)\n     * roam_sin.xzy)) + ((\n      inversesqrt(xlat_mutablerad3)\n     * tmpvar_14.x) * roam_sin.zyx)))\n   * \n    (0.2 + (tmpvar_25 * tmpvar_24))\n  ) * (q22 * 2.0)));\n  xlat_mutableret2 = (vec3(clamp ((\n    (((0.02 * q22) * q21) / sqrt(dot (uv1_4, uv1_4)))\n   * \n    dot (texture (sampler_main, (uv1_4 + 0.5)), vec4(0.32, 0.49, 0.29, 0.0))\n  ), 0.0, 1.0)) / (sqrt(\n    dot (uv1_4, uv1_4)\n  ) + 0.02));\n  float tmpvar_26;\n  tmpvar_26 = dot (xlat_mutableret2, vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_27;\n  tmpvar_27.x = 1.0;\n  tmpvar_27.y = tmpvar_26;\n  tmpvar_27.z = (tmpvar_26 / 2.0);\n  ret_5 = (ret_5 + (tmpvar_26 * tmpvar_27));\n  vec4 tmpvar_28;\n  tmpvar_28.w = 1.0;\n  tmpvar_28.xyz = ret_5;\n  ret = tmpvar_28.xyz;\n }","warp_hlsl":"sampler sampler_sampler_pw_noise_lq;\nfloat hole;\nfloat2 dz,uv1,uv2,uv3,uv4,uv6, mod;\nfloat3 blur, blur2, noise2, noise3;\nstatic float2 eyepos = float2(.1,-.1);\nstatic float eyerad = .02;\nstatic float mouth_y = q3;\nstatic float direct = 1;\nstatic float crumple = q1;\nstatic float mwidth = q2;\nstatic float mopen = q16;\nstatic float mshape= q4;\nstatic float dist = q11;\nshader_body {\n\nfloat3 blur = lum(GetBlur1(frac(uv)))*crumple;\nfloat2 hor = float2 (texsize.z,0)*8*blur;\nfloat2 ver = float2 (0,texsize.w)*8*blur;\nfloat dx = lum(tex2D(sampler_main,uv+hor) - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) - tex2D(sampler_main,uv-ver));\nfloat2 dz = float2 (dx + (uv.x-.5)*.0,dy+.0);\n\nuv1 = float2 (abs(uv.x-.5),uv.y-.5);\n//uv1 = float2(8*uv1.x*uv1.x,uv1.y*uv1.y*8);\n\nfloat teeth = sin((uv1.x)*142+1.5*sign(uv1.y-mouth_y))-mopen*.008/abs(uv1.y-mouth_y);\n\nfloat eyes = saturate(eyerad/length(uv1-eyepos));\neyes = pow(eyes,4);\nfloat mouth = saturate(.05/sqrt(uv1.x*uv1.x*mwidth + (.05/(.01+mshape*uv1.x))*(1+q15)/mopen*pow(uv1.y-mouth_y,2)));\nmouth = pow(mouth,3);\nmod = eyes + mouth*mopen;\nhole = pow(max(eyes,mouth),1);\n\nfloat3 eyeball = saturate(cos(1.4/eyerad*length(uv1-eyepos)))/3*(2-direct)*roam_sin*2;\neyeball = eyeball - (length(uv1-eyepos-.02*float2(q9*0,q10-eyepos.y)) < .01*q15);\n\nnoise3 = lum(tex2D(sampler_noise_lq,uv1))+.5;\nuv1 += mod/4;\nteeth *= (mouth);\n\nfloat2 ang2= tex2D (sampler_noise_hq,uv1/4+time/180).xy;\n//uv6 = mul(uv1,float2x2(ang2.y,-ang2.x,ang2.x,ang2.y));\nuv6 = uv1 + .5*(uv1*4*ang2);\nfloat mus = cos(uv6.y*18)+(sin(uv6.x*18));\nnoise2 = abs(mus)/6*(1+abs(crumple/16))+.2;\nnoise2 *= float3 (1,.9,.8);\nnoise2 = lerp(noise2,teeth,mouth);\nnoise2 = lerp(noise2,eyeball,eyes);\nblur2 = GetBlur2(frac(noise3));\n\nfloat3 crisp = GetPixel(frac(uv+dz*.003));\n//crisp = max(crisp, .8*float3(1,1,1)*GetPixel(uv*1+.3)*saturate(1-2*lum(GetPixel(uv+.31))));\ncrisp += -0.0*blur2 - length(dz)*.1;\n\n\nret = crisp * (.99-hole/2*direct) -  .01 + noise2*(.045+hole*direct)  ;\n//ret = hole;\n//ret = 1-eyes;\n//ret = tex2D (sampler_shub1,uv1);\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\n\nfloat k1, k2, mask1, mask2, mask3, rad1, rad2, rad3;\nfloat2 rs, rss, rss0, rs0, uv2, uv3,uv4, rsk, uvo;\nfloat2 dz1, dz2, dz3, Kugel1, Kugel2, Kugel3,tmp;\nfloat3 noise, ret1, ret2;\n\nshader_body {\nuvo = uv;\nuv = mul(uv*aspect.xy,float2x2(_qa));\n\nuv = uv + -.0- .1*float2(q5,q6);\nfloat2 uv1 = (uv-.5 );//*aspect.xy;\n\n//Kugel1\nrsk = (uv1 + float2 (q9,q10)) ;\ndz1 = normalize(rsk);\nrad1 = q11*length (rsk) ;\nuv4 =  tan(rad1)*dz1;\nmask1 = saturate(8-8*rad1);\nKugel1 = uv4*mask1;\n\n//Kugel2\nrsk = (uv1 + float2 (q13,q14)) ;\ndz2 = normalize(rsk);\nrad2 = q15*length (rsk) ;\nuv4 =  tan(rad2)*dz2;\nmask2 = saturate(8-8*rad2);\nKugel2 = uv4*mask2;\n\n//Kugel3\nrsk = (uv1 + float2 (q17,q18)) ;\ndz3 = normalize(rsk);\nrad3 = q19*length (rsk) ;\nuv4 =  tan(rad3)*dz3;\nmask3 = saturate(8-8*rad3);\nKugel3 = uv4*mask3;\n\nfloat2 dz = (Kugel2 + Kugel1 + Kugel3)*.2;\n//******************** STARS\nuv1 += dz;\nrss0.x = atan2(uv1.x, uv1.y)/3.1416;\nrss0.y = .1*q21/(length (uv1));\n\nrss = float2 (rss0.x,rss0.y+time);\nrss = mul(rss,float2x2(.7,.7,-.7,.7));\nfloat noise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);\ntmp = abs(frac(rss*8)-.5);\nfloat3 dots = saturate(.04/length(tmp)) *noise;\n\nrss = float2 (rss0.x,rss0.y+time/4);\nrss = mul(rss,float2x2(.7,.7,-.7,.7));\nnoise = (tex2D(sampler_pw_noise_lq,rss/32)-.5 >= 0);\ntmp = abs(frac(rss*8)-.5);\ndots += saturate(.02/length(tmp)) * noise;\n\ndots *= saturate(.2/abs(rss0.y));\ndots *= dots*.6;\n//*************************\n\nfloat z = q32/(uv1.y-.02);//floor proxy\nfloat mask = saturate(4/z);\nrs0.x = (uv1.x)*z;\nrs0.y = z/4;\nrs.x = rs0.x ;\nrs.y = rs0.y + q8*3;\nfloat3 mirror = lum(tex2D(sampler_pw_noise_lq,.02*rs))-.5;\nz = .2/(length(uv1)-q21);\nuv2.y = z + q8;\nuv2.x = rss0.x +q7;\nuv3 =frac(uv2 +.0*mask*mirror);\n\nret1 =  tex2D (sampler_main,uv3)/z;\nret = max(ret1*(1-0.5*mask),mirror*mask) +dots;\n\nfloat mod = q22*2;\nfloat3 blk = abs(rsqrt(rad1)*dz1.x*roam_sin\n+rsqrt(rad2)*dz2.y*roam_sin.rbg\n+rsqrt(rad3)*dz3.x*roam_sin.bgr)*(.2+mirror*mask)*mod; \nret += blk;\n\nret2 = saturate(.02*q22*q21/length (uv1)*\n (lum(tex2D (sampler_main,uv1+.5))));\nret2 /= (length(uv1)+.02);\nfloat k1 = lum(ret2);\nret += k1*float3(1,k1,k1/2)  ;\n}"}