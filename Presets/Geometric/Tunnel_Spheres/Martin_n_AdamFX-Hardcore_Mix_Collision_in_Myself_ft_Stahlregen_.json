{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_b":1,"ob_a":0.3,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":18,"textured":1,"rad":0.15416,"tex_ang":3.76991,"tex_zoom":5.27784,"g":1,"b":1,"a":0.7,"r2":1,"b2":1,"border_b":0,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.tex_ang=3+2*a.q1;","init_eqs_eel":"","frame_eqs_eel":"tex_ang = 3+2*q1;"},{"baseVals":{"enabled":1,"sides":32,"rad":0.06892,"tex_zoom":1.8315,"g":1,"b":1,"a":0.9,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"a.q24=0;a.q22=0;","frame_eqs_str":"a.a=div(a.q24,2);a.a2=0;a.r=div(Math.floor(rand(10)),10);a.g=div(Math.floor(rand(10)),10);a.b=div(Math.floor(rand(10)),10);a.rad=.06*a.q22;","init_eqs_eel":"","frame_eqs_eel":"a = q24/2; a2 = 0;\n\nr = int(rand(10))/10;\ng = int(rand(10))/10;\nb = int(rand(10))/10;\n\nrad = .06*q22;"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5 + .1* sin (time*73);\ny = .5 + .1* sin (time*23);\n\nr = 0; g = 0; b = 0;\nr2 = 1; g2 = 1; b2 = 1;\n\nrad = mid_att/100;\na = .7;\na2 = a;","init_eqs_eel":"","frame_eqs_eel":"x = .5 + .1* sin (time*73);\ny = .5 + .1* sin (time*23);\n\nr = 0; g = 0; b = 0;\nr2 = 1; g2 = 1; b2 = 1;\n\nrad = mid_att/100;\na = .7;\na2 = a;"},{"baseVals":{"enabled":1,"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":0.4,"a":0.7,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.05+div(Math.floor(rand(900)),1E3);a.y=.05+div(Math.floor(rand(900)),1E3);","init_eqs_eel":"","frame_eqs_eel":"x = 0.05 + int(rand(900))/1000;\ny = 0.05 + int(rand(900))/1000;\n "}],"waves":[{"baseVals":{"enabled":1,"samples":442,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0},"init_eqs_str":"a.q22=0;a.q24=0;a.q27=0;","frame_eqs_str":"","point_eqs_str":"a.x=.4+.2*a.sample;a.y=.5+.01*a.value2*a.q22;a.a=.5*a.q24*mod(a.q27+1,2);a.r=.2;a.b=1;a.g=.6;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .4+sample*.2 ;\ny = .5+ value2*.01*q22;\n\na = .5*q24*((q27+1)%2);\nr = 0.2;b=1; g =.6;"},{"baseVals":{"enabled":1,"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1},"init_eqs_str":"a.q22=0;a.q24=0;a.q27=0;","frame_eqs_str":"","point_eqs_str":"a.y=.4+.2*a.sample;a.x=.5+.01*a.value2*a.q22;a.a=.6*a.q24*mod(a.q27,2);a.r=.2;a.b=1;a.g=.6;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"y = .4+sample*.2 ;\nx = .5+ value2*.01*q22;\n\na = .6*q24*((q27)%2);\nr = 0.2;b=1; g =.6;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.prox=0;a.index2=0;a.vtrig=0;a.index=0;a.q12=0;a.q18=0;a.t1=0;a.q22=0;a.q21=0;a.q13=0;a.q15=0;a.q6=0;a.rota1=0;a.q1=0;a.dec_med=0;a.q5=0;a.index3=0;a.q9=0;a.p1z=0;a.is_beat=0;a.q24=0;a.vx=0;a.dec_slow=0;a.q11=0;a.z0=0;a.q10=0;a.vy=0;a.vz=0;a.q4=0;a.is_beat2=0;a.q16=0;a.q26=0;a.vzs=0;a.p2=0;a.avg=0;a.rota=0;a.movez=0;a.vys=0;a.q19=0;a.beat=0;a.q17=0;a.vol=0;a.peak=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.t0=0;a.vxs=0;a.q32=0;a.q7=0;a.q28=0;a.q20=0;a.q8=0;a.prox=1;","frame_eqs_str":"a.dec_med=pow(.4,div(30,a.fps));a.dec_slow=pow(.95,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,-.2+a.avg+a.peak)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,32);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.index3=mod(a.index2+a.index3+a.is_beat*bnot(a.index),4);a.is_beat2=above(a.time,\na.t1+.1);a.t1=a.is_beat*a.time+(1-a.is_beat)*a.t1;a.q22=a.peak;a.q24=a.is_beat;a.q26=a.bass_att+a.mid_att+a.treb_att;a.vol=a.vol*a.dec_med+(1-a.dec_med)*a.q26;a.q27=a.index+1.5;a.q28=a.index2+1;a.p2=.3*Math.sin(a.time)+.3*Math.cos(div(a.time,3));a.q1=Math.cos(div(3.1416*a.p2,4));a.q2=Math.sin(div(3.1416*a.p2,4));a.q3=-a.q2;a.q4=a.q1;a.vtrig=a.is_beat*bnot(mod(a.index,2));a.vx=a.vx*bnot(a.vtrig)+a.vtrig*(div(Math.floor(rand(100)),100)-.5);a.vy=a.vy*bnot(a.vtrig)+a.vtrig*(div(Math.floor(rand(100)),\n100)-.5);a.vz=a.vz*bnot(a.vtrig)+a.vtrig*(div(Math.floor(rand(100)),100)-.5);a.vx*=below(mod(a.index,32),24);a.vy*=above(mod(a.index,32),16);a.q5=5*a.vx;a.q6=5*a.vy;a.q21=div(1+Math.sin(a.time),4)+.05;a.prox-=above(a.vy,.3)*a.prox*2;a.q32=.5+.2*a.prox;a.monitor=a.prox;a.rota+=30*div(.02*below(mod(a.index,16),8),a.fps);a.rota1=a.rota1*a.dec_med+(1-a.dec_med)*a.rota;a.q7=a.rota1;a.movez+=div(div(.8,1+Math.abs(a.vx)+Math.abs(a.vy)),a.fps);a.q8=a.movez*(1+div(a.q21,400));a.q15=-1+8*above(a.index,26);\na.vxs=a.vxs*a.dec_med+(1-a.dec_med)*a.vx*20;a.vys=a.vys*a.dec_med+(1-a.dec_med)*a.vy*20;a.vzs=a.vzs*a.dec_med+(1-a.dec_med)*a.vz*20;a.z0=20+a.vzs;a.p1z=a.z0;a.q9=div(a.vxs,a.p1z);a.q10=div(a.vys,a.p1z);a.q11=a.p1z;a.q12=below(a.index,24);a.q13=above(a.index,16);a.q14=1;a.q16=0;a.q17=-1;a.q18=0;a.q20=a.q9;a.q19=5*a.q4;","pixel_eqs_str":"","init_eqs_eel":"prox = 1;","frame_eqs_eel":"dec_med = pow (.4, 30/fps);\ndec_slow = pow (0.95, 30/fps);\n//dec_xlow = pow (0.999, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, -.2+avg+peak) * above (time, t0+.1);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %32;\nindex2 = (index2 + is_beat*bnot(index))%4;\nindex3 = (index2 +index3 + is_beat*bnot(index))%4;\n\nis_beat2 = above (time, t1+.1);\nt1 = is_beat*time + (1-is_beat)*t1;\nq22 = peak;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att;\nvol = vol*dec_med + (1-dec_med)*q26;\nq27 = index + 1.5;\nq28 = index2 +1;\n\np2 = .3*sin(time) + .3*cos(time/3);\n//*****tunnel tilting\nq1 = cos(p2 * 3.1416/4);\nq2 = sin(p2 * 3.1416/4);\nq3 = -q2;\nq4 = q1;\n\n//****tunnel viewpoint x,y\nvtrig = is_beat * bnot(index%2);\nvx = vx * bnot(vtrig) + vtrig * (int(rand(100))/100-.5);\nvy = vy * bnot(vtrig) + vtrig * (int(rand(100))/100-.5);\nvz = vz * bnot(vtrig) + vtrig * (int(rand(100))/100-.5);\n\nvx = vx* below(index%32,24); //###\nvy = vy* above(index%32,16);\nq5 = vx*5;\nq6 = vy*5;\n\n//***tunnel width\nq21 = (1+sin(time))/4+.05;\n\n//**floor proximity\nprox = prox - above(vy,.3)*prox*2;\nq32 = .5 + .2*prox;\nmonitor = prox;\n\n//****tunnel rotation\nrota = rota +.02*below(index%16,8)/fps*30;\nrota1 = rota1*dec_med + (1-dec_med)*rota;\nq7 = rota1;\n\n//****tunnel speed\nmovez = movez + .8/(1+abs(vx)+abs(vy))/fps;\nq8 = movez * (1+q21/400);\n//dyn. Aenderung von q21 bewirkt auch Richt.wechsel\n\nq15 = -1+8*above(index,26);\n//***********************\nvxs = vxs * dec_med + (1-dec_med)*vx*20;\nvys = vys * dec_med + (1-dec_med)*vy*20;\nvzs = vzs * dec_med + (1-dec_med)*vz*20;\n\nz0 = 20+vzs;\n\np1z = z0;\nq9 = vxs/(p1z); \nq10 = vys/(p1z); \nq11 = p1z;\n\nq12 = below (index,24);\nq13 = above (index,16);\n\n\nq14 = 1; // x\nq16 = 0; // y\n\nq17 = -1;\nq18 = 0;\n\nq20 = q9;\nq19 = q4*5;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (((uv - vec2(0.5, 0.5)) * texsize.xy) * 0.015);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (((0.995 * texture (sampler_main, \n    (uv + (((\n      (clamp ((sin(tmpvar_1) / cos(tmpvar_1)), vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos(((4.0 * \n        (q2 + 1.0)\n      ) * tmpvar_1.yx)))\n     * texsize.zw) * 4.0) * (2.0 + q1)))\n  ).xyz) + vec3(0.01, 0.01, 0.01)) - 0.02);\n  ret = tmpvar_2.xyz;\n }","comp":"vec2 xlat_mutableKugel1;\nvec2 xlat_mutableKugel2;\nvec2 xlat_mutableKugel3;\nvec3 xlat_mutablefire;\nfloat xlat_mutablerad1;\nfloat xlat_mutablerad2;\nfloat xlat_mutablerad3;\nvec2 xlat_mutablersk;\nvec2 xlat_mutablerss;\nvec2 xlat_mutablerss0;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv4;\nvec2 xlat_mutableuvo;\n shader_body { \n  vec2 uv_1;\n  vec3 blk_2;\n  vec3 dots_3;\n  vec2 uv1_4;\n  vec3 ret_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv * aspect.xy);\n  xlat_mutableuvo = tmpvar_6;\n  mat2 tmpvar_7;\n  tmpvar_7[uint(0)] = _qa.xy;\n  tmpvar_7[1u] = _qa.zw;\n  uv_1 = (tmpvar_6 * tmpvar_7);\n  vec2 tmpvar_8;\n  tmpvar_8.x = q5;\n  tmpvar_8.y = q6;\n  uv_1 = (uv_1 - (0.2 * tmpvar_8));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv_1 - 0.5);\n  vec2 tmpvar_10;\n  tmpvar_10.x = q9;\n  tmpvar_10.y = q10;\n  xlat_mutablersk = (tmpvar_9 + tmpvar_10);\n  xlat_mutablerad1 = (q11 * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\n  float tmpvar_11;\n  tmpvar_11 = clamp ((8.0 - (8.0 * xlat_mutablerad1)), 0.0, 1.0);\n  xlat_mutableKugel1 = (((xlat_mutableuv4 * tmpvar_11) * 8.0) / q11);\n  uv1_4 = (tmpvar_9 + (xlat_mutableKugel1 * 0.1));\n  float tmpvar_12;\n  float tmpvar_13;\n  tmpvar_13 = (min (abs(\n    (uv1_4.x / uv1_4.y)\n  ), 1.0) / max (abs(\n    (uv1_4.x / uv1_4.y)\n  ), 1.0));\n  float tmpvar_14;\n  tmpvar_14 = (tmpvar_13 * tmpvar_13);\n  tmpvar_14 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_14) + 0.05368138) * tmpvar_14) - 0.1173503)\n     * tmpvar_14) + 0.1938925) * tmpvar_14) - 0.3326756)\n   * tmpvar_14) + 0.9999793) * tmpvar_13);\n  tmpvar_14 = (tmpvar_14 + (float(\n    (abs((uv1_4.x / uv1_4.y)) > 1.0)\n  ) * (\n    (tmpvar_14 * -2.0)\n   + 1.570796)));\n  tmpvar_12 = (tmpvar_14 * sign((uv1_4.x / uv1_4.y)));\n  if ((abs(uv1_4.y) > (1e-08 * abs(uv1_4.x)))) {\n    if ((uv1_4.y < 0.0)) {\n      if ((uv1_4.x >= 0.0)) {\n        tmpvar_12 += 3.141593;\n      } else {\n        tmpvar_12 = (tmpvar_12 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_12 = (sign(uv1_4.x) * 1.570796);\n  };\n  float tmpvar_15;\n  tmpvar_15 = sin(((q27 * tmpvar_12) / 2.0));\n  xlat_mutablerad2 = sqrt(dot (vec2(tmpvar_15), vec2(tmpvar_15)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad2) / cos(xlat_mutablerad2)) * normalize(vec2(tmpvar_15)));\n  float tmpvar_16;\n  tmpvar_16 = clamp ((8.0 - (8.0 * xlat_mutablerad2)), 0.0, 1.0);\n  xlat_mutableKugel2 = (xlat_mutableuv4 * tmpvar_16);\n  float tmpvar_17;\n  vec2 x_18;\n  x_18 = (uv1_4 + (q5 * uv1_4.y));\n  tmpvar_17 = sqrt(dot (x_18, x_18));\n  float tmpvar_19;\n  tmpvar_19 = sin(((0.1 * \n    (q27 - 8.0)\n  ) / tmpvar_17));\n  xlat_mutablersk = vec2(tmpvar_19);\n  xlat_mutablerad3 = sqrt(dot (vec2(tmpvar_19), vec2(tmpvar_19)));\n  float theta_20;\n  theta_20 = -(xlat_mutablerad3);\n  xlat_mutableuv4 = ((sin(theta_20) / cos(theta_20)) * normalize(vec2(tmpvar_19)));\n  float tmpvar_21;\n  tmpvar_21 = clamp ((8.0 - (8.0 * xlat_mutablerad3)), 0.0, 1.0);\n  xlat_mutableKugel3 = (xlat_mutableuv4 * tmpvar_21);\n  vec2 tmpvar_22;\n  tmpvar_22 = ((xlat_mutableKugel1 + (\n    (q12 * xlat_mutableKugel2)\n   * \n    sqrt(dot (uv1_4, uv1_4))\n  )) + ((q13 * xlat_mutableKugel3) * tmpvar_17));\n  float tmpvar_23;\n  float tmpvar_24;\n  tmpvar_24 = (min (abs(\n    (uv1_4.x / uv1_4.y)\n  ), 1.0) / max (abs(\n    (uv1_4.x / uv1_4.y)\n  ), 1.0));\n  float tmpvar_25;\n  tmpvar_25 = (tmpvar_24 * tmpvar_24);\n  tmpvar_25 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_25) + 0.05368138) * tmpvar_25) - 0.1173503)\n     * tmpvar_25) + 0.1938925) * tmpvar_25) - 0.3326756)\n   * tmpvar_25) + 0.9999793) * tmpvar_24);\n  tmpvar_25 = (tmpvar_25 + (float(\n    (abs((uv1_4.x / uv1_4.y)) > 1.0)\n  ) * (\n    (tmpvar_25 * -2.0)\n   + 1.570796)));\n  tmpvar_23 = (tmpvar_25 * sign((uv1_4.x / uv1_4.y)));\n  if ((abs(uv1_4.y) > (1e-08 * abs(uv1_4.x)))) {\n    if ((uv1_4.y < 0.0)) {\n      if ((uv1_4.x >= 0.0)) {\n        tmpvar_23 += 3.141593;\n      } else {\n        tmpvar_23 = (tmpvar_23 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_23 = (sign(uv1_4.x) * 1.570796);\n  };\n  xlat_mutablerss0.x = (tmpvar_23 / 3.1416);\n  xlat_mutablerss0.y = (0.01 / sqrt(dot (uv1_4, uv1_4)));\n  vec2 tmpvar_26;\n  tmpvar_26.x = xlat_mutablerss0.x;\n  tmpvar_26.y = (xlat_mutablerss0.y + (time / 2.0));\n  xlat_mutablerss = (tmpvar_26 + tmpvar_22);\n  xlat_mutablerss = (xlat_mutablerss * mat2(0.7, -0.7, 0.7, 0.7));\n  vec2 tmpvar_27;\n  tmpvar_27 = abs((fract(\n    (xlat_mutablerss * 8.0)\n  ) - 0.5));\n  uv1_4 = (uv1_4 - (tmpvar_22 * 0.5));\n  xlat_mutableuv2.y = ((0.2 / (\n    sqrt(dot (uv1_4, uv1_4))\n   + q21)) + q8);\n  xlat_mutableuv2.x = (xlat_mutablerss0.x + q7);\n  vec2 tmpvar_28;\n  tmpvar_28 = fract(xlat_mutableuv2);\n  xlat_mutablefire = (vec3(clamp ((\n    ((0.05 * q22) / sqrt(dot (uv1_4, uv1_4)))\n   * \n    dot (texture (sampler_main, tmpvar_28), vec4(0.32, 0.49, 0.29, 0.0))\n  ), 0.0, 1.0)) + (clamp (\n    (((0.02 * q22) / sqrt(dot (uv1_4, uv1_4))) * dot (texture (sampler_main, (uv1_4 + 0.5)), vec4(0.32, 0.49, 0.29, 0.0)))\n  , 0.0, 1.0) / sqrt(\n    dot (uv1_4, uv1_4)\n  )));\n  float tmpvar_29;\n  tmpvar_29 = dot (xlat_mutablefire, vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_30;\n  tmpvar_30.x = 1.0;\n  tmpvar_30.y = (tmpvar_29 * 0.8);\n  tmpvar_30.z = ((tmpvar_29 * tmpvar_29) / 3.0);\n  xlat_mutablefire = (tmpvar_29 * tmpvar_30);\n  xlat_mutableuvo = (tmpvar_6 + tmpvar_22);\n  vec2 x_31;\n  x_31 = (xlat_mutableuvo - 0.3);\n  vec3 tmpvar_32;\n  tmpvar_32 = vec3(clamp ((0.02 / sqrt(\n    dot (x_31, x_31)\n  )), 0.0, 1.0));\n  dots_3 = (vec3((clamp (\n    (0.04 / sqrt(dot (tmpvar_27, tmpvar_27)))\n  , 0.0, 1.0) * vec4(\n    greaterThanEqual ((texture (sampler_pw_noise_lq, (xlat_mutablerss / 32.0)) - 0.8), vec4(0.0, 0.0, 0.0, 0.0))\n  ).x)) * clamp ((0.2 / \n    abs(xlat_mutablerss0.y)\n  ), 0.0, 1.0));\n  float tmpvar_33;\n  tmpvar_33 = dot (vec3(clamp ((\n    dot (dots_3, vec3(0.32, 0.49, 0.29))\n   * \n    dot (dots_3, vec3(0.32, 0.49, 0.29))\n  ), 0.0, 1.0)), vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_34;\n  tmpvar_34.x = 1.0;\n  tmpvar_34.y = (tmpvar_33 * 0.8);\n  tmpvar_34.z = ((tmpvar_33 * tmpvar_33) / 3.0);\n  dots_3 = ((tmpvar_33 * tmpvar_34) * 2.0);\n  ret_5 = (ret_5 + (tmpvar_32 * clamp (\n    (1.0 - (16.0 * dot ((\n      (texture (sampler_blur1, fract(tmpvar_28)).xyz * scale1)\n     + bias1), vec3(0.32, 0.49, 0.29))))\n  , 0.0, 1.0)));\n  ret_5 = (ret_5 + (xlat_mutablefire + dots_3));\n  ret_5 = (ret_5 + ((tmpvar_32 * \n    (texture (sampler_main, (tmpvar_28 + (0.4 * tmpvar_22))) * 12.0)\n  .xyz) / 2.0));\n  float tmpvar_35;\n  tmpvar_35 = sqrt(dot (uv1_4, uv1_4));\n  float tmpvar_36;\n  tmpvar_36 = sin(((tmpvar_35 + time) * 12.0));\n  vec3 tmpvar_37;\n  tmpvar_37.x = tmpvar_36;\n  tmpvar_37.y = (1.0 - tmpvar_36);\n  tmpvar_37.z = (2.0 - tmpvar_35);\n  blk_2 = (((\n    ((q22 + 1.0) / 6.0)\n   * tmpvar_37) * tmpvar_35) * ((\n    (q12 * ((1.0/(xlat_mutablerad2)) + (q15 * tmpvar_16)))\n   + \n    (q13 * ((1.0/(xlat_mutablerad3)) + (q15 * tmpvar_21)))\n  ) / 2.0));\n  blk_2 = (blk_2 + ((\n    (q22 / xlat_mutablerad1)\n   * roam_cos) - (tmpvar_11 / 4.0)).xyz);\n  ret_5 = (ret_5 + blk_2);\n  vec4 tmpvar_38;\n  tmpvar_38.w = 1.0;\n  tmpvar_38.xyz = ret_5;\n  ret = tmpvar_38.xyz;\n }","warp_hlsl":"shader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;\n\nfloat3 noiseVal =.03*(tex2D(sampler_noise_lq, uv*.3+.01*rand_frame));\nnoiseVal = .01;\nfloat3 Feedback = GetBlur1(1-uv);\n\nfloat2 zz = uv1 *texsize.xy *.015;\n//zz =mul(zz,float2x2(_qa));\nzz = zz.yx;\nfloat2 h1 = clamp(tan(zz.yx),-12,12) * cos(4*(q2+1)*zz);\n\nuv.xy += h1*texsize.zw * 4*(2+q1);\n\n\nfloat r = tex2D (sampler_noise_hq,uv/14).x*12;\nfloat2 uv6 = uv1;\nuv6 = mul(uv6, float2x2(cos(r),sin(r),-sin(r),cos(r)));\nfloat3 mus = .1/(sqrt(uv6.y));\n\nfloat3 crisp = tex2D(sampler_main,uv);\n//crisp = lerp(crisp.bgr,crisp.rgb,2*crisp);\nret = .995*crisp+noiseVal-.02;\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\n\nfloat k1, k2, mask1, mask2, mask3, rad1, rad2, rad3;\nfloat2 rs, rss, rss0, rs0, uv2, uv3,uv4, rsk, uvo;\nfloat2 dz1, dz2, dz3, Kugel1, Kugel2, Kugel3,tmp;\nfloat3 noise, ret1, ret2, cathed, sky, fire;\n\nshader_body {\nuvo = uv*aspect.xy;\nuv = mul(uv*aspect.xy,float2x2(_qa));\nuv = uv + -.0- .2*float2(q5,q6);\nfloat2 uv1 = (uv-.5 );//*aspect.xy;\n\n//Kugel1\nrsk = (uv1 + float2 (q9,q10)) ;\ndz1 = normalize(rsk);\nrad1 = q11*length (rsk) ;\nuv4 =  tan(rad1)*dz1;\nmask1 = saturate(8-8*rad1);\nKugel1 = uv4*mask1*8/q11;\nuv1 += Kugel1*.1;\n\n//Kugel2\nrsk = (sin(q27*atan2(uv1.x,uv1.y)/2)) ;\ndz2 = normalize(rsk);\nrad2 = 1*length (rsk) ;\nuv4 =  tan(rad2)*dz2;\nmask2 = saturate(8-8*rad2);\nKugel2 = uv4*mask2;\n\n//Kugel3\nfloat argu = length(uv1+q5*uv1.y);\nrsk = (sin(.1*(q27-8)/ argu));\n//rsk = (sin(.5*q27*atan2(uv1.x,uv1.y))) ;\ndz3 = normalize(rsk);\nrad3 = 1*length (rsk) ;\nuv4 =  tan(-rad3)*dz3;\nmask3 = saturate(8-8*rad3);\nKugel3 = uv4*mask3;\n\nfloat2 dz = (Kugel1 + q12*Kugel2*length(uv1) + q13*Kugel3*argu);\n//******************** STARS\nrss0.x = atan2(uv1.x, uv1.y)/3.1416;\nrss0.y = .01/(length (uv1));\n\nrss = float2 (rss0.x,rss0.y+time/2)+dz;\nrss = mul(rss,float2x2(.7,.7,-.7,.7));\nfloat noise = (tex2D(sampler_pw_noise_lq,rss/32)-.8 >= 0);\ntmp = abs(frac(rss*8)-.5);\n\n//*************************\nuv1 -= dz*.5;\nfloat z = .2/(length(uv1)+q21);\nuv2.y = z + q8;\nuv2.x = rss0.x +q7;\nuv3 =frac(uv2);\ncathed =  tex2D (sampler_main,uv3+.4*dz)*12;\n\nfloat mod = (q22+1)/6;\n\n//Deckenbeleuchtung:\nfire = saturate(.05*q22/length (uv1)*\n (lum(tex2D (sampler_main,uv3+.0)))) ;\n\n//Tasaechl. Feuer; Problem: uv1 passt nicht zu uv3\nfire += saturate(.02*q22/length (uv1)*\n (lum(tex2D (sampler_main,uv1+.5))))/length(uv1);\n\nk1 = lum(fire);\nfire = k1*float3(1,k1*.8,k1*k1/3)  ;\n\nuvo+=dz;\nsky = saturate (.02/length(uvo-.3)) * 1;\n\nfloat3 dots = saturate(.04/length(tmp)) *noise;\ndots *= saturate(.2/abs(rss0.y));\ndots = saturate(lum(dots)*lum(dots)*1);\nk1 = lum(dots);\ndots= k1*float3(1,k1*.8,k1*k1/3) *2 ;\nfloat cmask = saturate(1-16*lum(GetBlur1(frac(uv3))));\nret += sky * cmask;\nret += fire+dots;\n\nret += sky*cathed/2;\nfloat dis = length(uv1);\nfloat crot = sin((dis+time)*12);\nfloat3 blk = mod * float3 (crot,1-crot,2-dis)*dis;\nblk *= (q12*(1/rad2+q15*mask2)+q13*(1/rad3+q15*mask3))/2 ;\nblk += q22/rad1*roam_cos-mask1/4 ;\nret += blk;\n\n}"}