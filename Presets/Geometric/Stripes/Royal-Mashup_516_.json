{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wave_a":100,"wave_scale":0.01,"wave_smoothing":0.5,"wave_mystery":-0.3,"modwavealphastart":0.5,"modwavealphaend":1,"warpscale":2.853,"zoom":1.064,"warp":0,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.5*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.5*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.wave_b+=.5*(.6*Math.sin(.91*a.time)+.4*Math.sin(.92*a.time));a.zoom+=.013*(.6*Math.sin(.339*a.time)+.4*Math.sin(.276*a.time));a.rot+=.04*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.decay-=.01*equal(mod(a.frame,50),0);a.zoom+=.2*(a.bass_att-1);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.500*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\nwave_g = wave_g + 0.500*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\nwave_b = wave_b + 0.500*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\nzoom = zoom + 0.013*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\ndecay = decay - 0.01*equal(frame%50,0);\nzoom=zoom+(bass_att-1)*0.2;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_fc_main, uv).xyz * (0.8 + (q3 * 0.1)));\n  ret_1 = (ret_1 * max (bass, max (mid, treb)));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  uv_1.y = uv.y;\n  vec2 uv2_2;\n  vec3 ret_3;\n  uv2_2 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_2).xyz + \n    (((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_2).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_2).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_2 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_2).xyz + \n    (((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_2).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_2).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_2 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_6;\n  tmpvar_6 = (((texture (sampler_main, uv2_2).xyz + \n    (((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_2).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_2).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_2 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.14;\n  tmpvar_7.x = (tmpvar_4 - tmpvar_5);\n  tmpvar_7.y = (tmpvar_6 - ((\n    (texture (sampler_main, uv2_2).xyz + (((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_2).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_2).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_3 = (0.5 + (0.5 * normalize(tmpvar_7)));\n  vec2 x_8;\n  x_8 = (ret_3.xy - 0.5);\n  ret_3 = (ret_3 * clamp ((\n    sqrt(dot (x_8, x_8))\n   * 5.0), 0.0, 1.0));\n  uv_1.x = 0.444;\n  ret_3 = texture (sampler_main, uv_1).xyz;\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_3;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz*(0.8 + q3*0.1);\n    \n    // darken (decay) over time\n    ret *= 1.00; //or try: ret -= 0.004;\n\nret *= max(bass,max(mid,treb));\n\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader.zxy,ret));\n    ret *= ret;\nuv.x = .444;\nret = GetPixel(uv);\n\n\n    //ret *= 1.5; //old gamma effect    \n}"}