{"version":2,"baseVals":{"rating":5,"gammaadj":1.94,"decay":0.9,"echo_zoom":1.001,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.037,"warpscale":0.015,"zoomexp":1.22019,"fshader":1,"warp":0.033,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0.09,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":5.3898,"tex_ang":1.19381,"tex_zoom":0.18923,"g":0.97,"b":1,"a":0.94,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"rad":3.99882,"tex_zoom":0.25005,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":18,"textured":1,"num_inst":10,"x":0.463,"rad":1.60089,"tex_zoom":0.67634,"g":1,"b":1,"r2":0.7,"g2":0.8,"b2":0.8,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":16,"num_inst":353,"x":0.503,"rad":0.0376,"tex_zoom":1.11234,"g":1,"b":1,"g2":0,"border_a":0.06},"init_eqs_str":"a.my_z=0;a.d=0;a.y3=0;a.z2=0;a.y1=0;a.w=0;a.w2=0;a.x1=0;a.zoom=0;a.p=0;a.q1=0;a.z3=0;a.w3=0;a.my_x=0;a.x3=0;a.my_y=0;a.q10=0;a.p2=0;a.w1=0;a.x2=0;a.l=0;a.p1=0;a.y2=0;a.q2=0;a.z1=0;a.q3=0;a.sample=0;","frame_eqs_str":"a.sample=div(a.instance,a.num_inst);a.rad=.05+.04*Math.sin(a.sample);a.q10=250*a.sample;a.my_x=-.22*Math.cos(a.q10)-1.28*Math.sin(a.q10)-.44*Math.cos(3*a.q10)-.78*Math.sin(3*a.q10);a.my_y=-.1*Math.cos(2*a.q10)-.27*Math.sin(2*a.q10)+.38*Math.cos(4*a.q10)+.46*Math.sin(4*a.q10);a.my_z=.7*Math.cos(3*a.q10)-.4*Math.sin(3*a.q10);a.d=.2;a.zoom=1;a.w3=a.q1;a.w2=a.q2;a.w1=a.q3;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*a.my_y;a.z1=a.my_z;\na.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*a.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*a.x3+a.y3*a.y3);a.w=Math.atan2(a.x3,a.y3);a.p=Math.tan(Math.asin(1)+Math.atan2(a.d+a.z3,a.l));a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.p1=.2*Math.sin(50*a.sample);a.p2=.2*Math.sin(80*a.sample);a.x=.5+a.my_x*a.p1;\na.y=.5+a.my_y*a.p2;a.r=.4*Math.sin(80*a.sample);a.b=.8*Math.sin(66*a.sample);a.g=.6*Math.sin(120*a.sample);","init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\nrad=.05+.04*sin(sample);\n\n/////  Knot\n\nq10=250*sample;\nmy_x = -.22*cos(q10)-1.28*sin(q10)-.44*cos(3*q10)-.78*sin(3*q10);\nmy_y= -.1*cos(2*q10)-.27*sin(2*q10)+.38*cos(4*q10)+.46*sin(4*q10);\nmy_z=.7*cos(3*q10)-.4*sin(3*q10);\n\n\n/////// rotations... by flexi\n\nd = .2; \nzoom = 1;\n\nw3 = q1;\nw2 = q2;\nw1 = q3;\n\nx1 = cos(w1)*my_x + sin(w1)*my_y;\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\nz1 = my_z;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\n// perspective calculation\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\np = tan(asin(1) + atan2(d+z3,l));\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\np1 = .2*sin(sample*50);\np2 = .2*sin(sample*80);\n\nx = .5+my_x*p1;\ny = .5+my_y*p2;\n\nr = .4*sin(sample*80);\nb = .8*sin(sample*66);\ng = .6*sin(sample*120);"}],"waves":[{"baseVals":{"spectrum":1,"additive":1,"smoothing":0,"r":0.4,"g":0.4,"b":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"r":0,"g":0,"b":0,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.vol=0;a.mtime=0;a.q1=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.decay=1;a.zoom=.95+.075*Math.max(a.treb_att,a.bass_att);a.warp=0;a.vol=.25*(a.bass_att+a.mid_att+a.treb_att);a.vol*=a.vol;a.mtime+=.1*a.vol;a.q1=.4*a.mtime-.05*a.time;","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"decay=1;\nzoom=0.95+.075*max(treb_att,bass_att);\n\nwarp = 0;\n\nvol=(bass_att+mid_att+treb_att)*0.25;\nvol=vol*vol;\nmtime=mtime+vol*0.1;\n\nq1=mtime*0.4-.05*time;","pixel_eqs_eel":"","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  float tmpvar_2;\n  tmpvar_2 = dot (texsize.zw, texsize.zw);\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  tmpvar_1.xyz = ((max (\n    max (texture (sampler_main, uv).xyz, texture (sampler_main, ((tmpvar_3 * (1.0 - \n      (8.0 * sqrt(tmpvar_2))\n    )) + 0.5)).xyz)\n  , texture (sampler_main, \n    ((tmpvar_3 * (1.0 + (8.0 * \n      sqrt(tmpvar_2)\n    ))) + 0.5)\n  ).xyz) - 0.03) * 0.98);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  uv_1.y = uv.y;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 8.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_4.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1)).y;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + (tmpvar_4 * 0.55));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (ret_2, (1.0 - ret_2), ((0.7 * \n    ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1)\n  ) + (0.2 * texture (sampler_main, uv).xyz)));\n  vec3 tmpvar_7;\n  tmpvar_7 = mix (tmpvar_6, ((\n    (tmpvar_6 - (0.1 * ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)))\n   + \n    (0.1 * ((texture (sampler_blur1, (\n      (tmpvar_5 * 1.25)\n     - 0.125)).xyz * scale1) + bias1))\n  ) + (0.42 * texture (sampler_main, tmpvar_5).xyz)), vec3(0.25, 0.25, 0.25));\n  vec3 x_8;\n  x_8 = (tmpvar_7 - 0.5);\n  ret_2 = (tmpvar_7 * clamp ((\n    sqrt(dot (x_8, x_8))\n   * 5.0), 0.0, 1.0));\n  ret_2 = (vec3(dot (ret_2, vec3(0.32, 0.49, 0.29))) + 1.25);\n  ret_2 = (ret_2 * (ret_2 * 0.45));\n  ret_2 = (ret_2 * mix (ret_2, (\n    (1.3 * ret_2)\n   * \n    ((((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1)) - (0.25 * ((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2)))\n  ), pow (hue_shader.zxy, \n    (1.0 - ret_2)\n  )));\n  uv_1.x = 0.4;\n  vec3 tmpvar_9;\n  tmpvar_9 = clamp ((texture (sampler_main, uv_1).xyz * 2.0), 0.0, 1.0);\n  ret_2 = tmpvar_9;\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = tmpvar_9;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // feather pen\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1-8*length(texsize.zw)) + 0.5 ).xyz);\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1+8*length(texsize.zw)) + 0.5 ).xyz);\n\n    // darken over time\n    ret = (ret-0.03)*0.98;\n}","comp_hlsl":"shader_body\n{\n\n//Code bits by Flexi and Geiss\n\n    float2 d = texsize.zw*8;\n    float1 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) ).y;\n    float1 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) ).y;\n    float2 uv_y = uv+float2(dx,dy)*0.55;  \n    float2 uv_y2 = (uv_y*1.25)-.125;  \n\n  \n    ret = lerp(ret,1-ret,.7*GetBlur1(uv_y)+.2*GetPixel(uv));\n    ret = lerp(ret,ret-.1*GetBlur3(uv_y)+.1*GetBlur1(uv_y2)+.42*GetPixel(uv_y),.25);\n    //ret *= .75;\n    ret *= saturate(length(ret-0.5)*5);\n    //ret = ret.xy;\n    ret = lum(ret);\n    ret += 1.25;\n    ret *= ret*.45;\n    float3 mask = GetBlur3(uv)-GetBlur1(uv)-.25*GetBlur2(uv_y);\n    ret *= lerp(ret,1.3*ret*mask,pow(hue_shader.zxy,1-ret));\n    ret += .05;\n    ret *= 1.1*ret;\n    ret *= (hue_shader*4)-2.75;\n    ret *= 3.5-.5*saturate(ret);\nuv.x = .4;\nret = GetPixel(uv);\nret = saturate(ret*2);\n}"}