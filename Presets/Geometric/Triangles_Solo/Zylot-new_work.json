{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.997,"echo_zoom":0.997,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"rad":0.34,"ang":0.53,"r":0.56,"g":0.36,"r2":0.9,"a2":0.5,"border_a":0},"init_eqs_str":"a.angle=0;a.bassspin=0;a.q1=0;a.q2=0;a.bassspin=0;a.angle=0;","frame_eqs_str":"a.ang=a.angle;a.bassspin=.00001<Math.abs(above(.05*a.bass,a.bassspin))?a.bassspin+.001:a.bassspin-.001;a.bassspin*=above(a.bassspin,0);a.angle+=a.bassspin;a.r=.3*a.bass;a.g=.3*a.treb;a.b=.3*a.mid;a.r2=.8+.2*Math.sin(1.2*a.time);a.g2=.8+.2*Math.sin(.9777*a.time);a.b2=.8+.2*Math.sin(.7005*a.time);a.border_a=1*above(a.bass+a.treb+a.mid,5);a.x=.5+a.q1;a.y=.5+a.q2;","init_eqs_eel":"bassspin = 0;\nangle = 0;","frame_eqs_eel":"ang = angle;\nbassspin = if(above(bass*.05,bassspin),bassspin+.001,bassspin-.001);\nbassspin = bassspin*above(bassspin,0);\nangle = angle + bassspin;\n\nr = bass*.3;\ng = treb*.3;\nb = mid*.3;\nr2 = .8+.2*sin(time*1.2);\ng2 = .8+.2*sin(time*.9777);\nb2 = .8+.2*sin(time*.7005);\n\nborder_a = 1*above(bass+treb+mid,5);\n\nx = .5 + q1;\ny = .5 + q2;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.10807,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.bassspin=0;a.xpos=0;a.ypos=0;a.q1=0;a.q2=0;a.bassspin=0;a.xpos=.25;a.ypos=.25;","frame_eqs_str":"a.bassspin=.00001<Math.abs(above(.05*a.bass,a.bassspin))?a.bassspin+.001:a.bassspin-.001;a.bassspin*=above(a.bassspin,0);a.xpos+=a.bassspin;a.ypos+=a.bassspin;a.x=.5+a.q1+.13*Math.sin(a.xpos);a.y=.5+a.q2+.18*Math.cos(a.ypos);","init_eqs_eel":"bassspin = 0;\nxpos = .25;\nypos = .25;","frame_eqs_eel":"bassspin = if(above(bass*.05,bassspin),bassspin+.001,bassspin-.001);\nbassspin = bassspin*above(bassspin,0);\nxpos = xpos + bassspin;\nypos = ypos + bassspin;\nx = .5 + q1 + .13*sin(xpos);\ny = .5 + q2 + .18*cos(ypos);"},{"baseVals":{"enabled":1,"sides":29,"additive":1,"textured":1,"rad":0.10569,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.bassspin=0;a.xpos=0;a.ypos=0;a.q1=0;a.q2=0;a.bassspin=0;a.xpos=2.3;a.ypos=2.3;","frame_eqs_str":"a.bassspin=.00001<Math.abs(above(.05*a.bass,a.bassspin))?a.bassspin+.001:a.bassspin-.001;a.bassspin*=above(a.bassspin,0);a.xpos+=a.bassspin;a.ypos+=a.bassspin;a.x=.5+a.q1+.13*Math.sin(a.xpos);a.y=.5+a.q2+.18*Math.cos(a.ypos);","init_eqs_eel":"bassspin = 0;\nxpos = 2.3;\nypos = 2.3;","frame_eqs_eel":"bassspin = if(above(bass*.05,bassspin),bassspin+.001,bassspin-.001);\nbassspin = bassspin*above(bassspin,0);\nxpos = xpos + bassspin;\nypos = ypos + bassspin;\nx = .5 + q1 +.13*sin(xpos);\ny = .5 + q2 + .18*cos(ypos);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.09143,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.bassspin=0;a.xpos=0;a.ypos=0;a.q1=0;a.q2=0;a.bassspin=0;a.xpos=4.5;a.ypos=4.5;","frame_eqs_str":"a.bassspin=.00001<Math.abs(above(.05*a.bass,a.bassspin))?a.bassspin+.001:a.bassspin-.001;a.bassspin*=above(a.bassspin,0);a.xpos+=a.bassspin;a.ypos+=a.bassspin;a.x=.5+a.q1+.13*Math.sin(a.xpos);a.y=.5+a.q2+.18*Math.cos(a.ypos);","init_eqs_eel":"bassspin = 0;\nxpos = 4.5;\nypos = 4.5;","frame_eqs_eel":"bassspin = if(above(bass*.05,bassspin),bassspin+.001,bassspin-.001);\nbassspin = bassspin*above(bassspin,0);\nxpos = xpos + bassspin;\nypos = ypos + bassspin;\nx = .5 + q1 + .13*sin(xpos);\ny = .5 + q2 + .18*cos(ypos);"}],"waves":[{"baseVals":{"scaling":0.01058,"enabled":0},"init_eqs_str":"pulse = 0;","frame_eqs_str":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\npulse = pulse*above(pulse,0);\nt1 = pulse;","point_eqs_str":"x = sqrt(sample*mid*.05);\ny = .5 + (.1+t1)*cos(sample*20);","init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\npulse = pulse*above(pulse,0);\nt1 = pulse;","point_eqs_eel":"x = sqrt(sample*mid*.05);\ny = .5 + (.1+t1)*cos(sample*20);"},{"baseVals":{"enabled":0},"init_eqs_str":"pulse = 0;","frame_eqs_str":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\npulse = pulse*above(pulse,0);\nt1 = pulse;","point_eqs_str":"x = sqrt(sample*mid*.05);\ny = .5 + -(.1+t1)*cos(sample*20);","init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\npulse = pulse*above(pulse,0);\nt1 = pulse;","point_eqs_eel":"x = sqrt(sample*mid*.05);\ny = .5 + -(.1+t1)*cos(sample*20);"},{"baseVals":{"enabled":0},"init_eqs_str":"pulse = 0;","frame_eqs_str":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\npulse = pulse*above(pulse,0);\nt1 = pulse;","point_eqs_str":"x = 1 - sqrt(sample*mid*.05);\ny = .5 + (.1+t1)*cos(sample*20);","init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\npulse = pulse*above(pulse,0);\nt1 = pulse;","point_eqs_eel":"x = 1 - sqrt(sample*mid*.05);\ny = .5 + (.1+t1)*cos(sample*20);"},{"baseVals":{"enabled":0},"init_eqs_str":"pulse = 0;","frame_eqs_str":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\npulse = pulse*above(pulse,0);\nt1 = pulse;","point_eqs_str":"x = 1 - sqrt(sample*mid*.05);\ny = .5 + -(.1+t1)*cos(sample*20);","init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\npulse = pulse*above(pulse,0);\nt1 = pulse;","point_eqs_eel":"x = 1 - sqrt(sample*mid*.05);\ny = .5 + -(.1+t1)*cos(sample*20);"}],"init_eqs_str":"a.xpos=0;a.yamptarg=0;a.ydir=0;a.q1=0;a.yaccel=0;a.xamptarg=0;a.xamp=0;a.xspeed=0;a.ypos=0;a.xaccel=0;a.att=0;a.vol=0;a.q2=0;a.yamp=0;a.xdir=0;a.yspeed=0;","frame_eqs_str":"a.vol=div(a.bass+a.mid+a.att,6);a.xamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.5*a.vol*a.bass_att,.5):a.xamptarg;a.xamp+=.5*(a.xamptarg-a.xamp);a.xdir=.00001<Math.abs(above(Math.abs(a.xpos),a.xamp))?-sign(a.xpos):.00001<Math.abs(below(Math.abs(a.xspeed),.1))?2*above(a.xpos,0)-1:a.xdir;a.xaccel=a.xdir*a.xamp-a.xpos-.055*a.xspeed*below(Math.abs(a.xpos),a.xamp);a.xspeed=a.xspeed+a.xdir*a.xamp-a.xpos-.055*a.xspeed*below(Math.abs(a.xpos),a.xamp);a.xpos+=.001*a.xspeed;\na.yamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.3*a.vol*a.treb_att,.5):a.yamptarg;a.yamp+=.5*(a.yamptarg-a.yamp);a.ydir=.00001<Math.abs(above(Math.abs(a.ypos),a.yamp))?-sign(a.ypos):.00001<Math.abs(below(Math.abs(a.yspeed),.1))?2*above(a.ypos,0)-1:a.ydir;a.yaccel=a.ydir*a.yamp-a.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.yspeed=a.yspeed+a.ydir*a.yamp-a.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.ypos+=.001*a.yspeed;a.q1=a.ypos;a.q2=a.xpos;","pixel_eqs_str":"a.zoom=1+.1*a.rad;","init_eqs_eel":"","frame_eqs_eel":"vol = (bass+mid+att)/6;\nxamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);\nxamp = xamp + 0.5*(xamptarg-xamp);\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\nxaccel = xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\nxpos = xpos + 0.001*xspeed;\nyamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);\nyamp = yamp + 0.5*(yamptarg-yamp);\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\nyaccel = ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\nypos = ypos + 0.001*yspeed;\n\nq1 = ypos;\nq2 = xpos;","pixel_eqs_eel":"zoom = 1+rad*.1;","warp":" shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1 = ((texture (sampler_blur2, uv).xyz * scale2) + bias2);\n  vec3 tmpvar_2;\n  tmpvar_2 = pow (texture (sampler_main, uv).xyz, vec3((1.0 + (treb_att * 0.01))));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (tmpvar_1, tmpvar_2, (tmpvar_1 * tmpvar_2));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (tmpvar_3 - (tmpvar_3 * 0.01));\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + (pow (ret_1, vec3(6.0, 6.0, 6.0)) * (\n    ((abs((q1 - 0.5)) + abs((q2 - 0.5))) * bass_att)\n   * texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\n  )).xyz));\n  ret_1 = (ret_1 * ret_1);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    float3 blurry = GetBlur2(uv);\n    ret = pow(ret,1+treb_att*.01);\n    ret = lerp(blurry,ret,blurry*ret);    \n\n    // darken (decay) over time\n    ret -= ret*.01;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret *= 1.00; //gamma\n    float2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    float4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n    ret = ret+((pow(ret,6))*((((abs(q1-.5)+abs(q2-.5))*bass_att)*noiseVal)));\n    ret *= ret; //darken\n}"}