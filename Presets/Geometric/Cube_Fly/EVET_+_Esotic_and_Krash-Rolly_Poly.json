{"version":2,"baseVals":{"rating":5,"gammaadj":2.98,"decay":0.9,"echo_zoom":1.001,"echo_alpha":0.5,"echo_orient":1,"wave_mode":4,"wave_brighten":0,"wave_a":1,"wave_scale":1.003,"wave_smoothing":0.9,"wave_mystery":0.563,"warpscale":1.35,"zoom":0.9699,"dx":0.001,"dy":0.005,"warp":1.5088,"sx":0.9999,"sy":0.9999,"wave_r":0.186,"wave_g":0.257,"wave_b":0.163,"wave_x":0.528,"wave_y":0.875,"ob_size":0.009,"ob_r":0.091,"ob_g":0.521,"ob_b":0.808,"ob_a":0.151,"ib_size":0.003,"ib_r":0.754,"ib_g":0.17,"ib_b":0.139,"ib_a":0.765,"mv_x":1,"mv_y":1,"mv_dx":0.045,"mv_dy":-0.984,"mv_l":1.663,"mv_r":0.031,"mv_g":0.652,"mv_b":0.437,"mv_a":0.574},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.meanbass_att=0;a.q1=0;a.lastbeat=0;a.beatrate=0;a.peakbass_att=0;a.att=0;a.volume=0;a.beat=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.volume=.3*(a.bass+a.mid+a.att);a.beatrate=.00001<Math.abs(equal(a.beatrate,0))?1:.00001<Math.abs(below(a.volume,.01))?1:a.beatrate;a.lastbeat=.00001<Math.abs(equal(a.lastbeat,0))?a.time:a.lastbeat;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.beat=.00001<Math.abs(above(a.volume,.8))?.00001<Math.abs(below(a.peakbass_att-a.bass_att,.05*a.peakbass_att))?.00001<Math.abs(above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1)))?1:0:0:0;a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<\nMath.abs(below(a.time-a.lastbeat,2*a.beatrate))?.5*(a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=.00001<Math.abs(equal(a.beat,0))?.00001<Math.abs(above(a.time-a.lastbeat,2*a.beatrate))?.95*a.peakbass_att:.995*a.peakbass_att:a.bass_att;a.lastbeat=.00001<Math.abs(a.beat)?a.time:a.lastbeat;a.peakbass_att=Math.max(.00001<Math.abs(a.beat)?a.bass_att:a.peakbass_att,1.1*a.meanbass_att);a.q1=a.beat;a.wave_y=1.39176798*Math.floor(-.68471563*Math.floor(1.67088366*sign(a.peakbass_att*\na.dy)));a.wave_x=a.beat*a.ib_r;a.wave_g=.02662969*Math.abs(bor(Math.min(a.ib_r*a.wave_y,a.ib_a*a.wave_mystery),a.rot*a.dx));a.warp=1.72149348*Math.floor(a.volume*a.ib_b);a.wave_mystery=Math.min(.97296047*Math.floor(a.mv_b-a.sx),a.decay+a.mv_b);a.wave_b=.89972925*log10(.64274526*sqrt(a.ib_a+a.sx));a.cx=a.beatrate+a.wave_x;a.warp=.00001<Math.abs(below(a.warp,.01))?.01:a.warp;a.warp=.00001<Math.abs(above(a.warp,100))?100:a.warp;a.cx=.00001<Math.abs(below(a.cx,-1))?-1:a.cx;a.cx=.00001<Math.abs(above(a.cx,\n2))?2:a.cx;a.wave_b=.00001<Math.abs(below(a.wave_b,0))?0:a.wave_b;a.wave_b=.00001<Math.abs(above(a.wave_b,1))?1:a.wave_b;a.wave_g=.00001<Math.abs(below(a.wave_g,0))?0:a.wave_g;a.wave_g=.00001<Math.abs(above(a.wave_g,1))?1:a.wave_g;a.wave_x=.00001<Math.abs(below(a.wave_x,0))?0:a.wave_x;a.wave_x=.00001<Math.abs(above(a.wave_x,1))?1:a.wave_x;a.wave_y=.00001<Math.abs(below(a.wave_y,0))?0:a.wave_y;a.wave_y=.00001<Math.abs(above(a.wave_y,1))?1:a.wave_y;a.wave_mystery=.00001<Math.abs(below(a.wave_mystery,\n-1))?-1:a.wave_mystery;a.wave_mystery=.00001<Math.abs(above(a.wave_mystery,1))?1:a.wave_mystery;","pixel_eqs_str":"a.rot=.00001<Math.abs(above(bnot(1*a.bass),bnot(1*a.treb)))?a.rot*Math.sin(a.rad*Math.sin(a.time)):-a.rot*Math.sin(a.rad*Math.cos(a.time));a.cy=sigmoid(a.x*a.q2,a.q3-a.x);a.rot=bor(sigmoid(a.rot*a.q1,a.x*a.x),a.rot*a.q3);a.rot=.00001<Math.abs(below(a.rot,-1))?-1:a.rot;a.rot=.00001<Math.abs(above(a.rot,1))?1:a.rot;a.cy=.00001<Math.abs(below(a.cy,-1))?-1:a.cy;a.cy=.00001<Math.abs(above(a.cy,2))?2:a.cy;","init_eqs_eel":"","frame_eqs_eel":"volume = 0.3*(bass+mid+att);\nbeatrate = if(equal(beatrate,0),1,if(below(volume,0.01),1,beatrate));\nlastbeat = if(equal(lastbeat,0),time,lastbeat);\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\nbeat = if(above(volume,0.8),if(below(peakbass_att - bass_att, 0.05*peakbass_att),if(above(time - lastbeat,0.1+0.5*(beatrate-0.1)),1,0),0),0);\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.5*(beatrate + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = if(equal(beat,0),if(above(time - lastbeat,2*beatrate),peakbass_att*0.95,peakbass_att*0.995),bass_att);\nlastbeat = if(beat,time,lastbeat);\npeakbass_att = max(if(beat,bass_att,peakbass_att),1.1*meanbass_att);\nq1=beat;\nwave_y = 1.39176798*int(-0.68471563*int(1.67088366*sign(peakbass_att * dy)));\nwave_x = beat * ib_r;\nwave_g = 0.02662969*abs(bor(min(ib_r * wave_y , ib_a * wave_mystery) , rot * dx));\nwarp = 1.72149348*int(volume * ib_b);\nwave_mystery = min(0.97296047*int(mv_b - sx) , decay + mv_b);\nwave_b = 0.89972925*log10(0.64274526*sqrt(ib_a + sx));\ncx = beatrate + wave_x;\nwarp=if(below(warp,0.01), 0.01, warp);\nwarp=if(above(warp,100.0), 100.0, warp);\ncx=if(below(cx,-1.0), -1.0, cx);\ncx=if(above(cx,2.0), 2.0, cx);\nwave_b=if(below(wave_b,0.0), 0.0, wave_b);\nwave_b=if(above(wave_b,1.0), 1.0, wave_b);\nwave_g=if(below(wave_g,0.0), 0.0, wave_g);\nwave_g=if(above(wave_g,1.0), 1.0, wave_g);\nwave_x=if(below(wave_x,0.0), 0.0, wave_x);\nwave_x=if(above(wave_x,1.0), 1.0, wave_x);\nwave_y=if(below(wave_y,0.0), 0.0, wave_y);\nwave_y=if(above(wave_y,1.0), 1.0, wave_y);\nwave_mystery=if(below(wave_mystery,-1.0), -1.0, wave_mystery);\nwave_mystery=if(above(wave_mystery,1.0), 1.0, wave_mystery);","pixel_eqs_eel":"rot=if(above(bnot(1*bass),bnot(1*treb)),rot*sin(rad*sin(time)),-rot*sin(rad*cos(time)));\ncy = sigmoid(x * q2 , q3 - x);\nrot = bor(sigmoid(rot * q1 , x * x) , rot * q3);\nrot=if(below(rot,-1.0), -1.0, rot);\nrot=if(above(rot,1.0), 1.0, rot);\ncy=if(below(cy,-1.0), -1.0, cy);\ncy=if(above(cy,2.0), 2.0, cy);","warp":"vec3 xlat_mutablenoise;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv1;\n shader_body { \n  vec3 copy_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.5;\n  tmpvar_2.y = q5;\n  xlat_mutableuv1 = (uv - tmpvar_2);\n  float tmpvar_3;\n  tmpvar_3 = (1.0/(xlat_mutableuv1.y));\n  xlat_mutablers0.x = (xlat_mutableuv1.x * tmpvar_3);\n  xlat_mutablers0.y = tmpvar_3;\n  xlat_mutablers.x = xlat_mutablers0.x;\n  xlat_mutablers.y = (tmpvar_3 + (time * 0.3));\n  xlat_mutablenoise = (vec3(dot (texture (sampler_pw_noise_lq, (xlat_mutablers / 63.0)), vec4(0.32, 0.49, 0.29, 0.0))) * (dot (texture (sampler_pw_noise_lq, \n    (xlat_mutablers / 12.0)\n  ), vec4(0.32, 0.49, 0.29, 0.0)) + 0.5));\n  xlat_mutablenoise = (xlat_mutablenoise * (clamp (\n    ((10.0 * xlat_mutablenoise) - 8.0)\n  , 0.0, 1.0) * clamp (\n    (2.0 / tmpvar_3)\n  , 0.0, 1.0)));\n  vec2 tmpvar_4;\n  tmpvar_4.x = uv.x;\n  tmpvar_4.y = (uv.y - (0.024 / tmpvar_3));\n  vec2 tmpvar_5;\n  tmpvar_5.x = uv.x;\n  tmpvar_5.y = (uv.y - (0.012 / tmpvar_3));\n  copy_1 = (texture (sampler_main, tmpvar_4).xyz + texture (sampler_main, tmpvar_5).xyz);\n  vec2 tmpvar_6;\n  tmpvar_6.x = uv.x;\n  tmpvar_6.y = (uv.y - (0.006 / tmpvar_3));\n  copy_1 = (copy_1 + texture (sampler_main, tmpvar_6).xyz);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((xlat_mutablenoise + (\n    (((copy_1 / 3.0) * (1.0 + slow_roam_cos).xyz) / 2.0)\n   * 0.99)) - 0.005);\n  ret = tmpvar_7.xyz;\n }","comp":"","warp_hlsl":"sampler sampler_pw_noise_lq;\nfloat3 color, mus, neu, ret1, noise, noise2;\nfloat2 uv1, rs0, rs, uv2, uv3, dz, hor, ver;\nfloat dx,dy,speed;\nshader_body {\nspeed = .3;\nuv1 = uv-float2(0.5,q5);\nfloat z = 1/(uv1.y);\nrs0.x = (uv1.x)*z;\nrs0.y = z;\nrs.x = rs0.x *1;\nrs.y = rs0.y + time*speed;\n\n\n//Kacheln\nnoise = lum(tex2D(sampler_pw_noise_lq,rs/63 ));\nnoise *= lum(tex2D(sampler_pw_noise_lq,rs/12 ))+.5;\nnoise *= saturate(10*noise - 8) * saturate(2/z);\nnoise2 = saturate(8* (lum(tex2D(sampler_pw_noise_lq,uv))-.5));\n\nspeed *= 2;\nfloat3 copy = + GetPixel(float2(uv.x,uv.y-.04*speed/z));\ncopy +=GetPixel(float2(uv.x,uv.y-.02*speed/z));\ncopy +=GetPixel(float2(uv.x,uv.y-.01*speed/z));\n\nret = noise*1 + copy/3*(1+slow_roam_cos)/2*.99-.005;\n\n\n}","comp_hlsl":""}