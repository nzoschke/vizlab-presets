{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":4,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_a":0.524,"wave_scale":2.718,"wave_smoothing":0.9,"wave_mystery":1,"warpscale":2.358,"zoom":1.005,"warp":0.683,"wave_r":0.13,"wave_g":0.5,"wave_y":0.6,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.zoom+=.013*(.6*Math.sin(.339*a.time)+.4*Math.sin(.276*a.time));a.rot+=.007*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.cx+=.11*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.11*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"zoom = zoom + 0.013*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\nrot = rot + 0.007*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );","pixel_eqs_eel":"","warp":"vec3 xlat_mutablenoise;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv1;\n shader_body { \n  vec3 copy_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.5;\n  tmpvar_2.y = q5;\n  xlat_mutableuv1 = (uv - tmpvar_2);\n  float tmpvar_3;\n  tmpvar_3 = (1.0/(xlat_mutableuv1.y));\n  xlat_mutablers0.x = (xlat_mutableuv1.x * tmpvar_3);\n  xlat_mutablers0.y = tmpvar_3;\n  xlat_mutablers.x = xlat_mutablers0.x;\n  xlat_mutablers.y = (tmpvar_3 + (time * 0.3));\n  xlat_mutablenoise = (vec3(dot (texture (sampler_pw_noise_lq, (xlat_mutablers / 63.0)), vec4(0.32, 0.49, 0.29, 0.0))) * (dot (texture (sampler_pw_noise_lq, \n    (xlat_mutablers / 12.0)\n  ), vec4(0.32, 0.49, 0.29, 0.0)) + 0.5));\n  xlat_mutablenoise = (xlat_mutablenoise * (clamp (\n    ((10.0 * xlat_mutablenoise) - 8.0)\n  , 0.0, 1.0) * clamp (\n    (2.0 / tmpvar_3)\n  , 0.0, 1.0)));\n  vec2 tmpvar_4;\n  tmpvar_4.x = uv.x;\n  tmpvar_4.y = (uv.y - (0.024 / tmpvar_3));\n  vec2 tmpvar_5;\n  tmpvar_5.x = uv.x;\n  tmpvar_5.y = (uv.y - (0.012 / tmpvar_3));\n  copy_1 = (texture (sampler_main, tmpvar_4).xyz + texture (sampler_main, tmpvar_5).xyz);\n  vec2 tmpvar_6;\n  tmpvar_6.x = uv.x;\n  tmpvar_6.y = (uv.y - (0.006 / tmpvar_3));\n  copy_1 = (copy_1 + texture (sampler_main, tmpvar_6).xyz);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((xlat_mutablenoise + (\n    (((copy_1 / 3.0) * (1.0 + slow_roam_cos).xyz) / 2.0)\n   * 0.99)) - 0.005);\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  tmpvar_2 = max (max (max (\n    max (max (max (max (\n      max (max (max (max (\n        max (max (max (max (\n          max (max (max (max (\n            max (max (max (max (\n              max (max (texture (sampler_main, ((tmpvar_3 * 1.2) + 0.5)).xyz, texture (sampler_main, ((tmpvar_3 * 1.175) + 0.5)).xyz), texture (sampler_main, ((tmpvar_3 * 1.15) + 0.5)).xyz)\n            , texture (sampler_main, \n              ((tmpvar_3 * 1.125) + 0.5)\n            ).xyz), texture (sampler_main, (\n              (tmpvar_3 * 1.1)\n             + 0.5)).xyz), texture (sampler_main, ((tmpvar_3 * 1.075) + 0.5)).xyz), texture (sampler_main, ((tmpvar_3 * 1.05) + 0.5)).xyz)\n          , texture (sampler_main, \n            ((tmpvar_3 * 1.025) + 0.5)\n          ).xyz), texture (sampler_main, uv).xyz), texture (sampler_main, ((tmpvar_3 * 0.975) + 0.5)).xyz), texture (sampler_main, ((tmpvar_3 * 0.95) + 0.5)).xyz)\n        , texture (sampler_main, \n          ((tmpvar_3 * 0.925) + 0.5)\n        ).xyz), texture (sampler_main, (\n          (tmpvar_3 * 0.9)\n         + 0.5)).xyz), texture (sampler_main, ((tmpvar_3 * 0.875) + 0.5)).xyz), texture (sampler_main, ((tmpvar_3 * 0.85) + 0.5)).xyz)\n      , texture (sampler_main, \n        ((tmpvar_3 * 0.825) + 0.5)\n      ).xyz), texture (sampler_main, (\n        (tmpvar_3 * 0.8)\n       + 0.5)).xyz), texture (sampler_main, ((tmpvar_3 * 0.775) + 0.5)).xyz), texture (sampler_main, ((tmpvar_3 * 0.75) + 0.5)).xyz)\n    , texture (sampler_main, \n      ((tmpvar_3 * 0.725) + 0.5)\n    ).xyz), texture (sampler_main, (\n      (tmpvar_3 * 0.7)\n     + 0.5)).xyz), texture (sampler_main, ((tmpvar_3 * 0.675) + 0.5)).xyz), texture (sampler_main, ((tmpvar_3 * 0.65) + 0.5)).xyz)\n  , texture (sampler_main, \n    ((tmpvar_3 * 0.625) + 0.5)\n  ).xyz), texture (sampler_main, (\n    (tmpvar_3 * 0.6)\n   + 0.5)).xyz), texture (sampler_main, ((tmpvar_3 * 0.575) + 0.5)).xyz);\n  ret_1 = (tmpvar_2 * tmpvar_2);\n  ret_1 = (ret_1 * 1.5);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"sampler sampler_pw_noise_lq;\nfloat3 color, mus, neu, ret1, noise, noise2;\nfloat2 uv1, rs0, rs, uv2, uv3, dz, hor, ver;\nfloat dx,dy,speed;\nshader_body {\nspeed = .3;\nuv1 = uv-float2(0.5,q5);\nfloat z = 1/(uv1.y);\nrs0.x = (uv1.x)*z;\nrs0.y = z;\nrs.x = rs0.x *1;\nrs.y = rs0.y + time*speed;\n\n\n//Kacheln\nnoise = lum(tex2D(sampler_pw_noise_lq,rs/63 ));\nnoise *= lum(tex2D(sampler_pw_noise_lq,rs/12 ))+.5;\nnoise *= saturate(10*noise - 8) * saturate(2/z);\nnoise2 = saturate(8* (lum(tex2D(sampler_pw_noise_lq,uv))-.5));\n\nspeed *= 2;\nfloat3 copy = + GetPixel(float2(uv.x,uv.y-.04*speed/z));\ncopy +=GetPixel(float2(uv.x,uv.y-.02*speed/z));\ncopy +=GetPixel(float2(uv.x,uv.y-.01*speed/z));\n\nret = noise*1 + copy/3*(1+slow_roam_cos)/2*.99-.005;\n\n\n}","comp_hlsl":"shader_body\n{\nret = tex2D(sampler_main, (uv-0.5)*1.2+0.5).xyz;\nret = max(ret, tex2D(sampler_main, (uv-0.5)*1.175+0.5).xyz);\nret = max(ret, tex2D(sampler_main, (uv-0.5)*1.15+0.5).xyz);\nret = max(ret, tex2D(sampler_main, (uv-0.5)*1.125+0.5).xyz);\nret = max(ret, tex2D(sampler_main, (uv-0.5)*1.1+0.5).xyz);\nret = max(ret, tex2D(sampler_main, (uv-0.5)*1.075+0.5).xyz);\nret = max(ret, tex2D(sampler_main, (uv-0.5)*1.05+0.5).xyz);\nret = max(ret, tex2D(sampler_main, (uv-0.5)*1.025+0.5).xyz); \n    ret = max(ret, tex2D(sampler_main, uv).xyz);\nret = max(ret, tex2D(sampler_main, (uv-0.5)*0.975+0.5).xyz); \n    ret = max(ret, tex2D(sampler_main, (uv-0.5)*0.95+0.5).xyz);\nret = max(ret, tex2D(sampler_main, (uv-0.5)*0.925+0.5).xyz); \n    ret = max(ret, tex2D(sampler_main, (uv-0.5)*0.9+0.5).xyz);\nret = max(ret, tex2D(sampler_main, (uv-0.5)*0.875+0.5).xyz); \n    ret = max(ret, tex2D(sampler_main, (uv-0.5)*0.85+0.5).xyz); \nret = max(ret, tex2D(sampler_main, (uv-0.5)*0.825+0.5).xyz); \n    ret = max(ret, tex2D(sampler_main, (uv-0.5)*0.8+0.5).xyz);\nret = max(ret, tex2D(sampler_main, (uv-0.5)*0.775+0.5).xyz); \nret = max(ret, tex2D(sampler_main, (uv-0.5)*0.75+0.5).xyz);\nret = max(ret, tex2D(sampler_main, (uv-0.5)*0.725+0.5).xyz);  \n    ret = max(ret, tex2D(sampler_main, (uv-0.5)*0.7+0.5).xyz);\nret = max(ret, tex2D(sampler_main, (uv-0.5)*0.675+0.5).xyz); \nret = max(ret, tex2D(sampler_main, (uv-0.5)*0.65+0.5).xyz);\nret = max(ret, tex2D(sampler_main, (uv-0.5)*0.625+0.5).xyz); \n    ret = max(ret, tex2D(sampler_main, (uv-0.5)*0.6+0.5).xyz);\nret = max(ret, tex2D(sampler_main, (uv-0.5)*0.575+0.5).xyz); \n        \nret *= ret;\nret *= 1.5;\n\n}"}