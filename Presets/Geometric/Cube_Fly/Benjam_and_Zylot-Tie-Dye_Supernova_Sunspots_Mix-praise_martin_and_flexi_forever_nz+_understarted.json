{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":4.1,"wave_scale":1.157,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":0.22705,"fshader":1,"zoom":1.01,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":0.44484,"tex_zoom":0.99999,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":1},"init_eqs_str":"a.bd=0;","frame_eqs_str":"a.bd=above(a.bass+a.treb+a.mid,6)+.975*a.bd;a.sides=20*Math.cos(.02*a.time+.1*a.bd)+20;a.border_r=.5*Math.sin(.331*a.time+.3)+.5;a.border_g=.5*Math.sin(.559*a.time+.3)+.5;a.border_b=.5*Math.sin(.772*a.time+.4)+.5;","init_eqs_eel":"","frame_eqs_eel":"bd=above(bass+treb+mid,6)+bd*.975;\nsides=cos(time*.02+(bd*.1))*20+20;\nborder_r=sin(time*.331+.3)*.5+.5;\nborder_g=sin(time*.559+.3)*.5+.5;\nborder_b=sin(time*.772+.4)*.5+.5;\n"},{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":0.44484,"ang":2.89026,"tex_zoom":1.22019,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":1},"init_eqs_str":"a.bd=0;","frame_eqs_str":"a.bd=above(a.bass+a.treb+a.mid,6)+.975*a.bd;a.sides=20*Math.cos(.02*a.time+.1*a.bd)+20;a.r=.5*Math.sin(.331*a.time)+.5;a.g=.5*Math.sin(.559*a.time)+.5;a.b=.5*Math.sin(.772*a.time)+.5;a.border_r=a.r;a.border_g=a.g;a.border_b=a.b;a.rad=.2*Math.sin(.4*a.time)+.5;","init_eqs_eel":"","frame_eqs_eel":"bd=above(bass+treb+mid,6)+bd*.975;\nsides=cos(time*.02+(bd*.1))*20+20;\nr=sin(time*.331)*.5+.5;\ng=sin(time*.559)*.5+.5;\nb=sin(time*.772)*.5+.5;\nborder_r=r;\nborder_g=g;\nborder_b=b;\nrad=sin(time*.4)*.2+.5;\n"},{"baseVals":{"enabled":1,"textured":1,"x":0.9,"y":0.88,"rad":1.97884,"ang":0.62832,"tex_ang":6.28319,"tex_zoom":0.51341,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.tex_ang=628*Math.sin(.0001*a.time)+628;a.y=.5*Math.cos(.003*a.time)+.5;","init_eqs_eel":"","frame_eqs_eel":"tex_ang=sin(time*.0001)*628+628;\ny=cos(time*.003)*.5+.5;"},{"baseVals":{"sides":100,"additive":1,"textured":1,"rad":0.89269,"g":1,"b":1,"a":0.07,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"scaling":0.04575,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"vol = (bass_att + mid_att + treb_att)*.333333;\nvol_avg = .1*(vol_avg*9 + vol);\nvg = vol_avg*.1;\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_str":"tm = q1;\nsp = sample*6.28*8*6;\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .5 + vol + .02;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nxang = tm*.132;\nsxang = 0;\nyang = tm*.153;\nayang = 0;\nzang = tm*.110;\nazang = 0;\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nr = 1;\ng = .25+.25*sin(sp);\nb = 0;\na = .5 + (oz+2)*.5;\na = a*below(z,2);\nminrgb = min(r,min(g,b));\nmaxrgb = max(r,max(g,b));\nl = (maxrgb-minrgb)*.5;\ndiff = maxrgb-minrgb;\nsum = maxrgb+minrgb;\ns = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));\nh = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));\nh = h*0.1666666;\nh = if(below(h,0),0,if(above(h,1),1,h));\n\nh = h + time*0.05*1.324 + .1;\nh = h - int(h);\n\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\ntmpa = 2*l - tmpb;\nhvr = h + .333333;\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\nhvg = h;\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\nhvb = h - .333333;\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\n\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));","init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\nvol_avg = .1*(vol_avg*9 + vol);\nvg = vol_avg*.1;\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6;\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .5 + vol + .02;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nxang = tm*.132;\nsxang = 0;\nyang = tm*.153;\nayang = 0;\nzang = tm*.110;\nazang = 0;\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nr = 1;\ng = .25+.25*sin(sp);\nb = 0;\na = .5 + (oz+2)*.5;\na = a*below(z,2);\nminrgb = min(r,min(g,b));\nmaxrgb = max(r,max(g,b));\nl = (maxrgb-minrgb)*.5;\ndiff = maxrgb-minrgb;\nsum = maxrgb+minrgb;\ns = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));\nh = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));\nh = h*0.1666666;\nh = if(below(h,0),0,if(above(h,1),1,h));\n\nh = h + time*0.05*1.324 + .1;\nh = h - int(h);\n\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\ntmpa = 2*l - tmpb;\nhvr = h + .333333;\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\nhvg = h;\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\nhvb = h - .333333;\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\n\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"vol = (bass_att + mid_att + treb_att)*.333333;\nvol_avg = .1*(vol_avg*9 + vol);\nvg = vol_avg*.1;\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_str":"tm = q1;\nsp = sample*6.28*8*6;\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .5 + vol + .01;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nxang = tm*.132;\nsxang = 0;\nyang = tm*.153;\nayang = 0;\nzang = tm*.110;\nazang = 0;\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nr = 1;\ng = .25+.25*sin(sp);\nb = 0;\na = .5 + (oz+2)*.5;\na = a*below(z,2);\nminrgb = min(r,min(g,b));\nmaxrgb = max(r,max(g,b));\nl = (maxrgb-minrgb)*.5;\ndiff = maxrgb-minrgb;\nsum = maxrgb+minrgb;\ns = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));\nh = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));\nh = h*0.1666666;\nh = if(below(h,0),0,if(above(h,1),1,h));\n\nh = h + time*0.05*1.324 + .05;\nh = h - int(h);\n\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\ntmpa = 2*l - tmpb;\nhvr = h + .333333;\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\nhvg = h;\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\nhvb = h - .333333;\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\n\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));","init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\nvol_avg = .1*(vol_avg*9 + vol);\nvg = vol_avg*.1;\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6;\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .5 + vol + .01;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nxang = tm*.132;\nsxang = 0;\nyang = tm*.153;\nayang = 0;\nzang = tm*.110;\nazang = 0;\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nr = 1;\ng = .25+.25*sin(sp);\nb = 0;\na = .5 + (oz+2)*.5;\na = a*below(z,2);\nminrgb = min(r,min(g,b));\nmaxrgb = max(r,max(g,b));\nl = (maxrgb-minrgb)*.5;\ndiff = maxrgb-minrgb;\nsum = maxrgb+minrgb;\ns = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));\nh = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));\nh = h*0.1666666;\nh = if(below(h,0),0,if(above(h,1),1,h));\n\nh = h + time*0.05*1.324 + .05;\nh = h - int(h);\n\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\ntmpa = 2*l - tmpb;\nhvr = h + .333333;\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\nhvg = h;\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\nhvb = h - .333333;\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\n\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"vol = (bass_att + mid_att + treb_att)*.333333;\nvol_avg = .1*(vol_avg*9 + vol);\nvg = vol_avg*.1;\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_str":"tm = q1;\nsp = sample*6.28*8*6;\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .5 + vol;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nxang = tm*.132;\nsxang = 0;\nyang = tm*.153;\nayang = 0;\nzang = tm*.110;\nazang = 0;\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nr = 1;\ng = .25+.25*sin(sp);\nb = 0;\na = .5 + (oz+2)*.5;\na = a*below(z,2);\nminrgb = min(r,min(g,b));\nmaxrgb = max(r,max(g,b));\nl = (maxrgb-minrgb)*.5;\ndiff = maxrgb-minrgb;\nsum = maxrgb+minrgb;\ns = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));\nh = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));\nh = h*0.1666666;\nh = if(below(h,0),0,if(above(h,1),1,h));\n\nh = h + time*0.05*1.324;\nh = h - int(h);\n\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\ntmpa = 2*l - tmpb;\nhvr = h + .333333;\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\nhvg = h;\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\nhvb = h - .333333;\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\n\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));","init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\nvol_avg = .1*(vol_avg*9 + vol);\nvg = vol_avg*.1;\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6;\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .5 + vol;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nxang = tm*.132;\nsxang = 0;\nyang = tm*.153;\nayang = 0;\nzang = tm*.110;\nazang = 0;\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nr = 1;\ng = .25+.25*sin(sp);\nb = 0;\na = .5 + (oz+2)*.5;\na = a*below(z,2);\nminrgb = min(r,min(g,b));\nmaxrgb = max(r,max(g,b));\nl = (maxrgb-minrgb)*.5;\ndiff = maxrgb-minrgb;\nsum = maxrgb+minrgb;\ns = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));\nh = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));\nh = h*0.1666666;\nh = if(below(h,0),0,if(above(h,1),1,h));\n\nh = h + time*0.05*1.324;\nh = h - int(h);\n\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\ntmpa = 2*l - tmpb;\nhvr = h + .333333;\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\nhvg = h;\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\nhvb = h - .333333;\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\n\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));"}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q1=0;a.mq31=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.atime=0;a.q26=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.q27=0;a.q28=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.wave_r+=\n.6*Math.sin(2.5*a.bass)+.4*Math.sin(.7*a.time);a.wave_b+=.6*Math.sin(2.5*a.treb)+.4*Math.sin(.89*a.time);a.wave_g+=.6*Math.sin(2.5*a.mid)+.4*Math.sin(.74*a.time);a.q1=a.rot+.005*Math.sin(.5*a.time);","pixel_eqs_str":"a.rot=2*a.q1*a.rad*pow(bitand(0,.1*(4+2*Math.sin(20*a.rad+a.time))),6);","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\nwave_r=wave_r+(0.6*sin(bass*2.500)+0.4*sin(time*0.70));\nwave_b=wave_b+(0.6*sin(treb*2.500)+0.4*sin(time*0.89));\nwave_g=wave_g+(0.6*sin(mid*2.500)+0.4*sin(time*0.74));\nq1=rot+0.005*sin(time*0.5);","pixel_eqs_eel":"rot=q1*2*rad*pow(0&(4+2*sin(rad*20+time))*.1,6);","warp":"vec3 xlat_mutablenoise;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv1;\n shader_body { \n  vec3 copy_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = 0.5;\n  tmpvar_3.y = q5;\n  xlat_mutableuv1 = (uv - tmpvar_3);\n  float tmpvar_4;\n  tmpvar_4 = (1.0/(xlat_mutableuv1.y));\n  xlat_mutablers0.x = (xlat_mutableuv1.x * tmpvar_4);\n  xlat_mutablers0.y = tmpvar_4;\n  xlat_mutablers.x = xlat_mutablers0.x;\n  xlat_mutablers.y = (tmpvar_4 + (time * 0.3));\n  xlat_mutablenoise = (vec3(dot (texture (sampler_pw_noise_lq, (xlat_mutablers / 63.0)), vec4(0.32, 0.49, 0.29, 0.0))) * (dot (texture (sampler_pw_noise_lq, \n    (xlat_mutablers / 12.0)\n  ), vec4(0.32, 0.49, 0.29, 0.0)) + 0.5));\n  xlat_mutablenoise = (xlat_mutablenoise * (clamp (\n    ((10.0 * xlat_mutablenoise) - 8.0)\n  , 0.0, 1.0) * clamp (\n    (2.0 / tmpvar_4)\n  , 0.0, 1.0)));\n  vec2 tmpvar_5;\n  tmpvar_5.x = uv.x;\n  tmpvar_5.y = (uv.y - (0.024 / tmpvar_4));\n  vec2 tmpvar_6;\n  tmpvar_6.x = uv.x;\n  tmpvar_6.y = (uv.y - (0.012 / tmpvar_4));\n  copy_1 = (texture (sampler_main, tmpvar_5).xyz + texture (sampler_main, tmpvar_6).xyz);\n  vec2 tmpvar_7;\n  tmpvar_7.x = uv.x;\n  tmpvar_7.y = (uv.y - (0.006 / tmpvar_4));\n  copy_1 = (copy_1 + texture (sampler_main, tmpvar_7).xyz);\n  ret_2 = ((xlat_mutablenoise + (\n    (((copy_1 / 3.0) * (1.0 + slow_roam_cos).xyz) / 2.0)\n   * 0.99)) - 0.005);\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * xlat_mutableuv1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\n    ret_2.y = (ret_2.y + (tmpvar_8.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (ret_2.z + (tmpvar_8.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (ret_2.x + (tmpvar_8.z * 0.5));\n  };\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (1.0 - uv.x);\n  tmpvar_2.y = uv.y;\n  vec3 tmpvar_3;\n  tmpvar_3 = vec3((texture (sampler_main, uv).x + texture (sampler_main, tmpvar_2).x));\n  vec2 tmpvar_4;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_blur1, uv);\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \n    ((tmpvar_5.xyz * scale1) + bias1)\n  .zzz).xy) + 0.5);\n  vec3 tmpvar_6;\n  tmpvar_6 = (tmpvar_3 + clamp ((\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    (1.0 - (tmpvar_3.x * 2.0))\n  ), 0.0, 1.0));\n  vec3 tmpvar_7;\n  tmpvar_7 = (tmpvar_6 + clamp ((\n    pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    (1.0 - (tmpvar_6.x * 2.0))\n  ), 0.0, 1.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = uv.x;\n  tmpvar_8.y = (1.0 - uv.y);\n  ret_1 = (pow (mix (\n    (vec3((((tmpvar_5.xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)) + (((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1).x + ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3).x))\n  , tmpvar_7, tmpvar_7), vec3(5.0, 1.0, 0.5)) + pow ((texture (sampler_main, tmpvar_8).yyy + texture (sampler_main, \n    (1.0 - uv)\n  ).yyy), vec3(0.6, 0.95, 5.0)));\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_4.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_1.x > (q26 * q13)) && (ret_1.x <= (q23 * q11)))) {\n    ret_1.z = (ret_1.z - (tmpvar_9.x * 0.5));\n  };\n  if (((ret_1.y > (q25 * q11)) && (ret_1.y <= (q22 * q12)))) {\n    ret_1.x = (ret_1.x - (tmpvar_9.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\n    ret_1.y = (ret_1.y - (tmpvar_9.z * 0.5));\n  };\n  ret_1 = (ret_1 - ((slow_roam_sin.xyz * roam_cos.zxy) * 0.5));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_1;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"sampler sampler_pw_noise_lq;\nfloat3 color, mus, neu, ret1, noise, noise2;\nfloat2 uv1, rs0, rs, uv2, uv3, dz, hor, ver;\nfloat dx,dy,speed;\nshader_body {\nspeed = .3;\nuv1 = uv-float2(0.5,q5);\nfloat z = 1/(uv1.y);\nrs0.x = (uv1.x)*z;\nrs0.y = z;\nrs.x = rs0.x *1;\nrs.y = rs0.y + time*speed;\n\n\n//Kacheln\nnoise = lum(tex2D(sampler_pw_noise_lq,rs/63 ));\nnoise *= lum(tex2D(sampler_pw_noise_lq,rs/12 ))+.5;\nnoise *= saturate(10*noise - 8) * saturate(2/z);\nnoise2 = saturate(8* (lum(tex2D(sampler_pw_noise_lq,uv))-.5));\n\nspeed *= 2;\nfloat3 copy = + GetPixel(float2(uv.x,uv.y-.04*speed/z));\ncopy +=GetPixel(float2(uv.x,uv.y-.02*speed/z));\ncopy +=GetPixel(float2(uv.x,uv.y-.01*speed/z));\n\nret = noise*1 + copy/3*(1+slow_roam_cos)/2*.99-.005;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv1.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n\n\n}","comp_hlsl":"shader_body\n{\n\n\n\nfloat2 uva = uv;\nfloat2 uvb = float2(1-uv.x,uv.y);\n\nret = tex2D(sampler_main, uva).x + tex2D(sampler_main, uvb).x;\n\nfloat3 blurs = GetBlur1(uva).x + GetBlur3(uva).x;\nblurs += GetBlur1(uvb).x + GetBlur3(uvb).x;\n\n\nfloat2 uv3 = (uv-.5)*(1-GetBlur1(uv).zzz)+.5;\nret += saturate(pow(tex2D(sampler_main, uv3).zzz,.5)*(1-ret.x*2)),\nret += saturate(pow(GetBlur1(uv3).zzz,.5)*(1-ret.x*2)),\n\n\nret = lerp (\nblurs,\nret,\npow(ret,1));\n\nret = pow(ret,float3(5,1,.5));\n\nret += pow(tex2D(sampler_main, float2(uv.x,1-uv.y)).yyy+tex2D(sampler_main, 1-uv).yyy,float3(.6,.95,5));\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv3.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \n\nret-=slow_roam_sin*roam_cos.zxy*.5;\n\n}"}