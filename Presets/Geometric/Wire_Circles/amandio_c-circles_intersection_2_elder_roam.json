{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":0.997,"echo_orient":3,"wave_mode":2,"wrap":0,"brighten":1,"wave_scale":0.01,"warp":0.01,"ob_size":0,"ob_a":1,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"rad":4.44951,"tex_ang":4.52389,"tex_zoom":0.40034,"r":0.2,"g":0.6,"b":0.7,"g2":0,"a2":1,"border_g":0.4,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.y=1.5;","init_eqs_eel":"","frame_eqs_eel":"y=1.5;"},{"baseVals":{"sides":60,"x":0.68,"rad":0.59125,"b":0.3,"a":0,"g2":0,"border_r":0.3,"border_g":0.4,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"num_inst":20,"rad":3.99407,"g":1,"b":1,"a":0,"g2":0,"border_a":0.5},"init_eqs_str":"a.i=0;a.q1=0;a.q6=0;","frame_eqs_str":"a.i=a.instance;a.x=.5+div(a.q1*a.gmegabuf[Math.floor(1E4+3*a.i)],a.q6);a.y=.5+a.q1*a.gmegabuf[Math.floor(10001+3*a.i)];a.rad=2*a.q1*a.gmegabuf[Math.floor(10002+3*a.i)];a.border_b=.5+.5*Math.sin(.2*a.i);","init_eqs_eel":"","frame_eqs_eel":"i=instance;\n\n/// circles\n\nx= .5+ q1*gmegabuf(10000+3*i)/q6;\ny= .5+ q1*gmegabuf(10001+3*i);\nrad=2*q1*gmegabuf(10002+3*i);\n\nborder_b=.5+.5*sin(.2*i);"},{"baseVals":{"enabled":1,"sides":12,"thickoutline":1,"num_inst":400,"x":0.3,"y":0.8,"rad":0.071,"tex_zoom":1.85319,"g":1,"g2":0,"a2":1,"border_r":0.1,"border_g":0.3,"border_b":0.7,"border_a":0},"init_eqs_str":"a.i=0;a.q1=0;a.q6=0;","frame_eqs_str":"a.i=a.instance;a.x=.5+div(a.q1*a.gmegabuf[Math.floor(3*a.i)],a.q6);a.y=.5+a.q1*a.gmegabuf[Math.floor(3*a.i+1)];a.a=a.gmegabuf[Math.floor(3*a.i+2)];a.a2=a.a;a.rad*=a.q1;a.b=.5+.5*Math.sin(.1*a.i);a.g=1;a.r=1;a.r2=.3*a.r;a.g2=.3*a.g;a.b2=.3*a.b;","init_eqs_eel":"","frame_eqs_eel":"\n//// intersection points\n\ni=instance;   \n\nx= .5+ q1*gmegabuf(3*i)/q6;\ny= .5+ q1*gmegabuf(3*i+1);\n\na=gmegabuf(3*i+2);   a2=a;\n\nrad=rad*q1;\n\nb=.5+.5*sin(.1*i);   g=1;       r=1;\nr2=.3*r;             g2=.3*g;   b2=.3*b;"}],"waves":[{"baseVals":{"usedots":1,"scaling":0.01,"smoothing":1,"r":0.4,"g":0.4,"a":0.12,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"scaling":0.20929,"smoothing":0,"r":0.3,"g":0.2,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"r":0.3,"g":0.2,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"smoothing":0.4,"g":0.6,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.d=0;a.q6=0;a.p=0;a.q1=0;a.ya=0;a.x=0;a.ind=0;a.yb=0;a.i1=0;a.a=0;a.instance=0;a.xb=0;a.y=0;a.ra=0;a.h=0;a.i2=0;a.xa=0;a.c=0;a.rb=0;for(var b=a.i=0;1E4>b;b++)a.gmegabuf[Math.floor(a.i)]=0,a.i+=1;","frame_eqs_str":"a.warp=0;a.wave_a=0;a.zoom=1;a.decay=0;a.q6=a.aspecty;a.q1=.3+.15*Math.sin(.2*a.time);a.ind=0;for(var b=a.i1=0;20>b;b++){a.xa=Math.sin(.3*a.time+.314*a.i1);a.ya=Math.cos(.3*a.time+.314*a.i1);a.ra=Math.abs(10*Math.sin(-.2*a.time+.314*a.i1))*a.q1;a.gmegabuf[Math.floor(1E4+3*a.i1)]=a.xa;a.gmegabuf[Math.floor(10001+3*a.i1)]=a.ya;a.gmegabuf[Math.floor(10002+3*a.i1)]=a.ra;for(var c=a.i2=0;20>c;c++)a.xb=Math.sin(.3*a.time+.314*a.i2),a.yb=Math.cos(.3*a.time+.314*a.i2),a.rb=Math.abs(10*\nMath.sin(-.2*a.time+.314*a.i2))*a.q1,a.d=sqrt(sqr(a.xa-a.xb)+sqr(a.ya-a.yb)),a.p=div(a.ra*a.ra-a.rb*a.rb+a.d*a.d,2*a.d),a.h=sqrt(a.ra*a.ra-a.p*a.p),a.c=pow(-1,a.instance),a.x=a.xa+div(a.p*(a.xb-a.xa),a.d),a.y=a.ya+div(a.p*(a.yb-a.ya),a.d),a.x-=div(a.c*a.h*(a.yb-a.ya),a.d),a.y+=div(a.c*a.h*(a.xb-a.xa),a.d),a.a=.00001<Math.abs(above(a.d,a.ra+a.rb))?0:1,a.a=.00001<Math.abs(below(a.d,Math.abs(a.ra-a.rb)))?0:a.a,a.a=.00001<Math.abs(equal(a.d,0))?0:a.a,a.gmegabuf[Math.floor(3*a.ind)]=a.x,a.gmegabuf[Math.floor(3*\na.ind+1)]=a.y,a.gmegabuf[Math.floor(3*a.ind+2)]=a.a,a.ind+=1,a.i2+=1;a.i1+=1}","pixel_eqs_str":"","init_eqs_eel":"i=0; loop(10000, gmegabuf(i)=0;  i=i+1;);","frame_eqs_eel":"warp=0;\nwave_a=0;\nzoom=1;\ndecay=0;\n\nq6=aspecty;\nq1=.3+.15*sin(.2*time);        //// zoom\n\n\n///// 2 circles intersection (n x n times) /////\n\nind=0;  i1=0;  loop(20, \nxa=sin(.3*time+.314*i1);    ya=cos(.3*time+.314*i1);                               /// circle A position\nra=abs(10*sin(-.2*time+.314*i1))*q1;                                               /// circle A radius\ngmegabuf(10000+3*i1)=xa;   gmegabuf(10001+3*i1)=ya;   gmegabuf(10002+3*i1)=ra;\n\ni2=0;  loop(20,\nxb=sin(.3*time+.314*i2);    yb=cos(.3*time+.314*i2);                               /// circle B position\nrb=abs(10*sin(-.2*time+.314*i2))*q1;                                               /// circle B radius\n\nd=sqrt(sqr(xa-xb)+sqr(ya-yb));     p=(ra*ra-rb*rb+d*d)/(2*d); \nh=sqrt(ra*ra-p*p);                 c=pow(-1,instance);\nx=xa+p*(xb-xa)/d;                  y=ya+p*(yb-ya)/d;\nx=x-c*h*(yb-ya)/d;                 y=y+c*h*(xb-xa)/d;               /// intersection points\na=if(above(d,ra+rb),0,1);                                           /// hide when one circle is outside other\na=if(below(d,abs(ra-rb)),0,a);                                      /// hide when one circle is inside other\na=if(equal(d,0),0,a);                                               /// hide when circles have the same center\n\n\ngmegabuf(3*ind)=x;      gmegabuf(3*ind+1)=y;   gmegabuf(3*ind+2)=a;\n\nind=ind+1;   i2=i2+1;);    i1=i1+1;);","pixel_eqs_eel":"","warp":"vec2 xlat_mutabledenominator;\nvec2 xlat_mutablefraction;\n shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = -(q5);\n  tmpvar_2.y = q6;\n  xlat_mutabledenominator = ((uv + tmpvar_2) - vec2(0.0, 1.0));\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((q13 * xlat_mutabledenominator.x) + (q14 * xlat_mutabledenominator.y));\n  tmpvar_3.y = ((q14 * xlat_mutabledenominator.x) - (q13 * xlat_mutabledenominator.y));\n  xlat_mutablefraction = (tmpvar_3 / ((xlat_mutabledenominator.x * xlat_mutabledenominator.x) + (xlat_mutabledenominator.y * xlat_mutabledenominator.y)));\n  xlat_mutablefraction = (xlat_mutablefraction * 0.002);\n  vec3 tmpvar_4;\n  tmpvar_4 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * \n    (texsize_noise_lq.zw * 2.0)\n  ) + rand_frame.xy)).xyz - 0.5);\n  vec2 tmpvar_5;\n  tmpvar_5 = (texsize.zw * 4.0);\n  vec3 tmpvar_6;\n  tmpvar_6 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_7;\n  tmpvar_7 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_6.x;\n  tmpvar_8.y = tmpvar_7.x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_6.y;\n  tmpvar_9.y = tmpvar_7.y;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_6.z;\n  tmpvar_10.y = tmpvar_7.z;\n  ret_1.x = texture (sampler_main, (uv + ((\n    (tmpvar_8 * 0.4)\n   + \n    (tmpvar_4 * 2.0)\n  .xy) * texsize.zw))).x;\n  ret_1.z = texture (sampler_main, (uv + ((\n    (tmpvar_10 * 0.5)\n   + \n    (tmpvar_4 * 2.0)\n  .xy) * texsize.zw))).z;\n  ret_1.y = texture (sampler_main, (mix ((0.5 + \n    ((uv - 0.5) * 2.0)\n  ), (xlat_mutablefraction + 0.5), vec2(0.5, 0.5)) + ((tmpvar_9 * texsize.zw) * 6.0))).y;\n  ret_1 = (ret_1 + ((tmpvar_4 * 0.04) - 0.0018));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n }","comp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 2.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_blur2, uv);\n  ret_2 = (((\n    (tmpvar_6.xyz * scale2)\n   + bias2).z * (\n    (tmpvar_6.xyz * scale2)\n   + bias2).y) * vec3(0.3, 0.0, 0.5));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.z;\n  tmpvar_7.y = tmpvar_5.z;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_4.y;\n  tmpvar_8.y = tmpvar_5.y;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_5.y;\n  tmpvar_9.y = tmpvar_4.y;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.y;\n  tmpvar_10.y = tmpvar_5.y;\n  my_uv_1 = ((uv + (\n    (tmpvar_9 * texsize.zw)\n   * 32.0)) + ((tmpvar_10 * texsize.zw) * 16.0));\n  vec3 tmpvar_11;\n  tmpvar_11 = mix (mix (ret_2, vec3(3.0, 3.0, 3.0), vec3((\n    ((texture (sampler_blur3, ((uv + \n      (tmpvar_7 * 0.4)\n    ) - tmpvar_8)).xyz * scale3) + bias3)\n  .x * 0.5))), vec3(1.0, 0.5, 0.2), vec3(((\n    ((texture (sampler_main, my_uv_1).xyz - ((texture (sampler_blur1, my_uv_1).xyz * scale1) + bias1)) + ((texture (sampler_blur2, my_uv_1).xyz * scale2) + bias2))\n  .z * \n    (1.0 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y)\n  ) * 1.1)));\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_4.x;\n  tmpvar_12.y = tmpvar_5.x;\n  my_uv_1 = (uv + ((tmpvar_12 * texsize.zw) * 6.0));\n  ret_2 = (mix (tmpvar_11, vec3(1.0, 1.0, 1.0), (\n    (texture (sampler_main, my_uv_1).xyz - ((texture (sampler_blur1, my_uv_1).xyz * scale1) + bias1))\n   + \n    (((texture (sampler_blur2, my_uv_1).xyz * scale2) + bias2) * 0.95)\n  ).xxx) - (roam_sin.xyz * roam_cos.zxy));\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_2;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"float2 numerator, denominator, fraction;\nshader_body\n{\nnumerator = float2(q13,q14);\ndenominator = uv+float2(-q5,q6)-float2(0,1);\nfraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part\n                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part\n                   (denominator.x*denominator.x + denominator.y*denominator.y);\nfraction *=.002;\nfloat2 inv = lerp(0.5+(uv-0.5)*2,fraction+0.5,0.5); //uv vector for the spinal fractal\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 2 + rand_frame.xy;\nfloat3 noise = tex2D(sampler_noise_lq, dither_uv).xyz-0.5;\nfloat2 d = texsize.zw*4;\nfloat3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\nfloat3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\nfloat2 uv1 = uv + (float2(dx.x, dy.x)*0.4+noise*2)*texsize.zw;\nfloat2 uv2 = float2(dx.y, dy.y)*texsize.zw*6;\nfloat2 uv3 = uv + (float2(dx.z, dy.z)*0.5+noise*2)*texsize.zw ;\nret.x = GetPixel(uv1).x;\nret.z = GetPixel(uv3).z;\nret.y = GetPixel(inv+uv2).y;\nret += noise*0.04-0.0018; // when using an error diffusion dither you can decay to black on a rate below 1 bit\n\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*2;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\n\nfloat2 my_uv = uv-float2(dx.z,dy.z)*texsize.zw*12*0;\nret = GetBlur2(my_uv).z*(GetBlur2(uv).y)*float3(0.3,0,0.5);\n\nret = lerp(ret,3,GetBlur3(uv+float2(dx.z,dy.z)*0.4-float2(dx.y,dy.y)).x*0.5);\n\nmy_uv = uv + float2(dy.y,dx.y)*texsize.zw*32 + float2(dx.y,dy.y)*texsize.zw*16;\nret = lerp(ret,float3(1,0.5,0.2),(GetPixel(my_uv)-GetBlur1(my_uv)+GetBlur2(my_uv)).z*(1-GetBlur1(uv).y)*1.1);\n\nmy_uv = uv+float2(dx.x,dy.x)*texsize.zw*6;\nret = lerp(ret,1,(GetPixel(my_uv)-GetBlur1(my_uv)+GetBlur2(my_uv)*0.95).x);\n\n\n//ret = GetPixel(uv);\nret-=roam_sin*roam_cos.zxy;\n}"}