{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.998,"wave_scale":0.01,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xv=0;a.yv=0;","frame_eqs_str":"","pixel_eqs_str":"a.xv=Math.sin(.333*a.time)*a.x-Math.cos(.667*a.time)*a.x;a.yv=Math.cos(.333*a.time)*a.y+Math.sin(.667*a.time)*a.y;a.x=a.xv;a.y=a.yv;a.sx+=.25*Math.sin(3*a.x);a.sy+=.25*Math.sin(3.1*a.y);","init_eqs_eel":"","frame_eqs_eel":"","pixel_eqs_eel":"//Have fun with the shaders kids!\n\n//xy transform code (Yes, it is based off of Flexi's from the previous collaboration)\nxv = sin(time*.333)*x -cos(time*.667)*x;\nyv = cos(time*.333)*y +sin(time*.667)*y;\nx = xv; y = yv;\n//end x/y transform code\n\nsx=sx+.25*sin(x*3);\nsy=sy+.25*sin(y*3.1);","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_fc_main, uv).xyz * 0.94);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz;\n    \n    // darken (decay) over time\n    ret *= 0.94; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret *= 1.00; //gamma\n}"}