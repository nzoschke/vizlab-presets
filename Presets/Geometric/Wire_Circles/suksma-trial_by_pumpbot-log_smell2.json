{"version":2,"baseVals":{"rating":5,"gammaadj":2.001,"decay":0.9,"echo_alpha":0.29,"wave_mode":7,"wave_brighten":0,"wave_a":0.001,"wave_smoothing":0,"modwavealphastart":0.5,"modwavealphaend":1,"zoomexp":1.00815,"fshader":1,"rot":0.02,"cx":0.56,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x=sample+0.1*sin(1.57+time*1.34+sample*5*(1+sin(time)));\ny=sample+0.1*cos(1.57+time*1.34+sample*5*(1+sin(time)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=sample+0.1*sin(1.57+time*1.34+sample*5*(1+sin(time)));\ny=sample+0.1*cos(1.57+time*1.34+sample*5*(1+sin(time)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x=sample+0.4*sin(time*(1+sample));\ny=1-(sample+0.4*cos(time*(1+sample)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=sample+0.4*sin(time*(1+sample));\ny=1-(sample+0.4*cos(time*(1+sample)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x=1-(sample+0.1*sin(1.57+time*1.34+sample*5*(1+sin(time))));\ny=sample+0.1*cos(1.57+time*1.34+sample*5*(1+sin(time)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=1-(sample+0.1*sin(1.57+time*1.34+sample*5*(1+sin(time))));\ny=sample+0.1*cos(1.57+time*1.34+sample*5*(1+sin(time)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"additive":1,"a":0.5},"init_eqs_str":"a.q30=0;","frame_eqs_str":"","point_eqs_str":"a.x=1-(a.sample+.4*Math.sin(a.q30*(1+a.sample)));a.y=1-(a.sample+.4*Math.cos(a.q30*(1+a.sample)));a.r=.5+.5*Math.sin(a.bass+3*a.sample);a.g=.5+.5*Math.sin(1.13*a.treb+3*a.sample);a.b=.5+.5*Math.sin(.97*a.mid+3*a.sample);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=1-(sample+0.4*sin(q30*(1+sample)));\ny=1-(sample+0.4*cos(q30*(1+sample)));\nr=0.5+0.5*sin(bass+sample*3);\ng=0.5+0.5*sin(treb*1.13+sample*3);\nb=0.5+0.5*sin(mid*0.97+sample*3);\n"}],"init_eqs_str":"a.runtreb=0;a.treb_effect=0;a.q1=0;a.bass_on=0;a.net_effect=0;a.treb_on=0;a.bass_effect=0;a.wave_size=0;a.state=0;a.runbass=0;a.initq30=0;a.q30=0;a.runmid=0;a.q20=0;a.initq30=Math.floor(rand(1E3));","frame_eqs_str":"a.warp=0;a.bass_on=.00001<Math.abs(above(a.bass_att,1))?1:0;a.treb_on=.00001<Math.abs(above(a.treb_att,1))?1:0;a.state=1+(.00001<Math.abs(equal(a.bass_on,1))?1:0)+(.00001<Math.abs(equal(a.treb_on,1))?2:0);a.wave_r+=.25*(.6*Math.sin(.784*a.time)+.4*Math.sin(.986*a.time))*a.state;a.wave_g+=.25*(.6*Math.sin(.671*a.time)+.4*Math.sin(1.164*a.time))*(4-a.state);a.wave_b+=.25*(.6*Math.sin(1.423*a.time)+.4*Math.sin(.687*a.time))*div(4,a.state);a.ob_r=a.wave_g;a.ob_g=a.wave_b;a.ob_b=\na.wave_r;a.ob_size=.005*a.mid_att;a.bass_effect=.00001<Math.abs(above(a.bass_att,1.4))?pow(1.1,a.bass_att):1;a.treb_effect=.00001<Math.abs(above(a.treb_att,1.4))?pow(.97,a.treb_att):1;a.net_effect=.00001<Math.abs(above(a.bass_att,.8*a.treb_att))?a.bass_effect:a.treb_effect;a.zoom=a.net_effect;a.wave_size+=.00001<Math.abs(equal(Math.abs(a.state-3),1))?2*a.wave_size:a.wave_size;a.q1=a.state;a.runbass+=a.bass;a.runtreb+=a.treb;a.runmid+=a.mid;a.q30=a.initq30+.05*(a.runbass+a.runtreb+a.runmid);a.monitor=\na.q30;a.q20=.3*(a.bass+a.mid+a.treb);","pixel_eqs_str":"a.rot+=.00001<Math.abs(below(Math.sin(a.ang),0))?-a.rot:.00001<Math.abs(equal(Math.abs(a.state-3),1))?.05:.1;a.zoom-=.00001<Math.abs(equal(Math.sin(a.ang),0))?0:Math.sin(a.ang*a.q1)*a.rad*.3;a.dx+=Math.sin(a.ang*a.q1*3-Math.abs(4*a.rad-1))*a.rad*.05;","init_eqs_eel":"initq30=int(rand(1000));","frame_eqs_eel":"warp=0;\nbass_on=if(above(bass_att,1),1,0);\ntreb_on=if(above(treb_att,1),1,0);\nstate=1+if(equal(bass_on,1),1,0)+if(equal(treb_on,1),2,0);\nwave_r = wave_r + 0.25*(0.6*sin(0.784*time) + 0.4*sin(0.986*time))*state;\nwave_g = wave_g + 0.25*(0.6*sin(0.671*time) + 0.4*sin(1.164*time))*(4-state);\nwave_b = wave_b + 0.25*(0.6*sin(1.423*time) + 0.4*sin(0.687*time))*(4/state);\nob_r=wave_g;\nob_g=wave_b;\nob_b=wave_r;\nob_size=0+mid_att*.005;\nbass_effect = if(above(bass_att,1.4),pow(1.1,bass_att),1);\ntreb_effect = if(above(treb_att,1.4),pow(0.97,treb_att),1);\nnet_effect = if(above(bass_att,0.8*treb_att),bass_effect,treb_effect);\nzoom = net_effect;\nwave_size=wave_size+if(equal(abs(state-3),1),wave_size*2,wave_size);\nq1=state;\nrunbass=runbass+bass;\nruntreb=runtreb+treb;\nrunmid=runmid+mid;\nq30=initq30+(runbass+runtreb+runmid)*.05;\nmonitor=q30;\nq20=(bass+mid+treb)*.3;","pixel_eqs_eel":"rot = rot + if(below(sin(ang), 0), -rot, if(equal(abs(state-3),1),0.05,.1));\nzoom=zoom-if(equal(sin(ang),0),0,sin(ang*q1)*rad*.3);\ndx=dx+sin(ang*q1*3-abs(rad*4-1))*rad*.05;","warp":" shader_body { \n  vec3 rsamp_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_pw_main, uv);\n  ret_2 = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.xy - 0.5)\n   * 12.0) * texsize.zw)));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  rsamp_1 = tmpvar_6;\n  float tmpvar_7;\n  vec2 x_8;\n  x_8 = (tmpvar_4.xy - uv);\n  tmpvar_7 = sqrt(dot (x_8, x_8));\n  float tmpvar_9;\n  vec2 x_10;\n  x_10 = (tmpvar_5.xy - uv);\n  tmpvar_9 = sqrt(dot (x_10, x_10));\n  if ((tmpvar_7 > tmpvar_9)) {\n    ret_2.xy = tmpvar_6.xy;\n  };\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.zw - 0.5)\n   * 48.0) * texsize.zw)));\n  rsamp_1 = tmpvar_11.xyz;\n  float tmpvar_12;\n  vec2 x_13;\n  x_13 = (ret_2.xy - uv);\n  tmpvar_12 = sqrt(dot (x_13, x_13));\n  float tmpvar_14;\n  vec2 x_15;\n  x_15 = (tmpvar_11.xy - uv);\n  tmpvar_14 = sqrt(dot (x_15, x_15));\n  if ((tmpvar_12 > tmpvar_14)) {\n    ret_2.xy = rsamp_1.xy;\n  };\n  ret_2.z = texture (sampler_fw_main, ret_2.xy).z;\n  ret_2.z = (ret_2.z - (q1 * 0.005));\n  if ((ret_2.z < 0.09)) {\n    ret_2 = vec3(0.0, 0.0, 0.0);\n  };\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_2;\n  ret = tmpvar_16.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\n  ret_1 = ((0.8 * (\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\n  ret_1 = (ret_1 + (0.6 * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 - ((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\n  )));\n  ret_1 = (ret_1 + 0.9);\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) - (0.15 * dot (texture (sampler_noise_hq, \n    (uv + (0.01 * time))\n  ), vec4(0.32, 0.49, 0.29, 0.0))));\n  ret_1 = (mix (ret_1, (\n    (0.75 * ret_1)\n   * \n    dot ((((0.6 * \n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\n     + bias1))), vec3(0.32, 0.49, 0.29))\n  ), pow (hue_shader, \n    (q20 * ret_1)\n  )) * 0.8);\n  ret_1 = (ret_1 * ret_1);\n  vec3 tmpvar_9;\n  tmpvar_9 = sqrt(ret_1);\n  ret_1 = tmpvar_9;\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = tmpvar_9;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));\nret.xyz = tex2D( sampler_pw_main,uvm).xyz;\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nrsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nret.z = tex2D(sampler_fw_main,ret.xy).z;\n\nret.z -= q1*.005;\n\nif (ret.z < .09) {\nret*=0;\n}\n\n\n}","comp_hlsl":"shader_body\n{\n\n//Code bits by Flexi and Geiss\n\n    float2 d = texsize.zw*8;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\nfloat2 uv_y = uv-.25*(float2(lum(dx),lum(dy)));\nfloat2 uv_y2 = uv+.25*(float2(lum(dx),lum(dy)));\n\n\nret = .8*GetBlur3(uv_y)-GetBlur1(uv_y);\nret += .6*GetBlur1(uv);\nret -= (GetBlur2(uv_y2)-GetBlur1(uv_y2));\nret += 1.2*GetPixel(uv_y2)+.15*GetBlur1(uv_y2);\nret += .9;\nret = lum(ret);\nret -= .15*lum(tex2d(sampler_noise_hq,(uv+.01*time)));\nret = lerp(ret,.75*ret*lum(.6*GetBlur3(uv_y)-.7*GetPixel(uv)-.3*GetBlur1(uv_y2)),pow(hue_shader,q20*ret));\nret *= .8;\nret *= ret;\nret = sqrt(ret);\n\n}"}