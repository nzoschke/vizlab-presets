{"version":2,"baseVals":{"rating":5,"gammaadj":2.001,"decay":0.9,"echo_alpha":0.29,"wave_mode":7,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_smoothing":0,"modwavealphastart":0.5,"modwavealphaend":1,"zoomexp":1.0017,"fshader":1,"zoom":0.9703,"cx":0.44,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ib_size":0,"ib_r":0.5,"ib_g":0.5,"ib_b":0.5,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x=sample+0.1*sin(1.57+time*1.34+sample*5*(1+sin(time)));\ny=sample+0.1*cos(1.57+time*1.34+sample*5*(1+sin(time)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=sample+0.1*sin(1.57+time*1.34+sample*5*(1+sin(time)));\ny=sample+0.1*cos(1.57+time*1.34+sample*5*(1+sin(time)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x=sample+0.4*sin(time*(1+sample));\ny=1-(sample+0.4*cos(time*(1+sample)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=sample+0.4*sin(time*(1+sample));\ny=1-(sample+0.4*cos(time*(1+sample)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x=1-(sample+0.1*sin(1.57+time*1.34+sample*5*(1+sin(time))));\ny=sample+0.1*cos(1.57+time*1.34+sample*5*(1+sin(time)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=1-(sample+0.1*sin(1.57+time*1.34+sample*5*(1+sin(time))));\ny=sample+0.1*cos(1.57+time*1.34+sample*5*(1+sin(time)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n"},{"baseVals":{"enabled":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=1-(a.sample+.4*Math.sin(a.time*(1+a.sample)));a.y=1-(a.sample+.4*Math.cos(a.time*(1+a.sample)));a.r=.5+.5*Math.sin(a.time+3*a.sample);a.g=.5+.5*Math.sin(1.13*a.time+3*a.sample);a.b=.5+.5*Math.sin(.97*a.time+3*a.sample);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=1-(sample+0.4*sin(time*(1+sample)));\ny=1-(sample+0.4*cos(time*(1+sample)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n"}],"init_eqs_str":"a.bass_residual=0;a.old_treb_flop=0;a.bass_flop=0;a.q1=0;a.q5=0;a.treb_flop=0;a.bass_thresh=0;a.old_bass_flop=0;a.treb_thresh=0;a.pulse=0;a.bass_changed=0;a.mid_thresh=0;a.q4=0;a.mid_changed=0;a.entropy=0;a.old_mid_flop=0;a.mid_residual=0;a.treb_residual=0;a.chaos=0;a.mid_flop=0;a.q2=0;a.treb_changed=0;a.q3=0;","frame_eqs_str":"a.warp=0;a.old_bass_flop=a.bass_flop;a.old_treb_flop=a.treb_flop;a.old_mid_flop=a.mid_flop;a.chaos=.9+.1*Math.sin(a.pulse);a.entropy=.00001<Math.abs(bnot(a.entropy))?2:.00001<Math.abs(equal(a.pulse,-20))?1+Math.floor(rand(3)):a.entropy;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*((a.bass_thresh-1.3)*a.chaos+1.3);a.bass_flop=Math.abs(a.bass_flop-equal(a.bass_thresh,2));a.treb_thresh=2*above(a.treb_att,a.treb_thresh)+(1-above(a.treb_att,\na.treb_thresh))*((a.treb_thresh-1.3)*a.chaos+1.3);a.treb_flop=Math.abs(a.treb_flop-equal(a.treb_thresh,2));a.mid_thresh=2*above(a.mid_att,a.mid_thresh)+(1-above(a.mid_att,a.mid_thresh))*((a.mid_thresh-1.3)*a.chaos+1.3);a.mid_flop=Math.abs(a.mid_flop-equal(a.mid_thresh,2));a.bass_changed=bnot(equal(a.old_bass_flop,a.bass_flop));a.mid_changed=bnot(equal(a.old_mid_flop,a.mid_flop));a.treb_changed=bnot(equal(a.old_treb_flop,a.treb_flop));a.bass_residual=a.bass_changed*Math.sin(a.time*(3-a.bass_thresh))+\nbnot(a.bass_changed)*a.bass_residual;a.treb_residual=a.treb_changed*Math.sin(a.time*(3-a.treb_thresh))+bnot(a.treb_changed)*a.treb_residual;a.mid_residual=a.mid_changed*Math.sin(a.time*(3-a.mid_thresh))+bnot(a.mid_changed)*a.mid_residual;a.pulse=.00001<Math.abs(above(Math.abs(a.pulse),20))?-20:a.pulse+.04*a.entropy*bor(bor(a.bass_changed*bnot(a.treb_changed),a.treb_changed*bnot(a.bass_changed))*bnot(a.mid_changed),a.mid_changed)+.025*(a.mid+a.bass+a.treb);a.q1=a.mid_residual;a.q2=a.bass_residual;\na.q3=a.treb_residual;a.q4=Math.sin(a.pulse);a.q5=Math.cos(a.pulse);a.wave_r+=.5*a.bass_residual;a.wave_r=a.wave_g+.5*a.mid_residual;a.wave_r=a.wave_b+.5*a.treb_residual;a.wave_mystery+=.23*a.mid_residual;a.ob_r=.00001<Math.abs(a.bass_flop)?a.treb_flop:a.wave_r;a.ob_b=.00001<Math.abs(a.treb_flop)?a.mid_flop:a.wave_b;a.ob_g=.00001<Math.abs(a.mid_flop)?a.bass_flop:a.wave_g;a.ob_a=.03+.02*a.wave_r;a.ob_size=.05+.04*a.wave_b;a.ib_r=.00001<Math.abs(a.bass_flop)?a.ob_b:a.ob_g;a.ib_b=.00001<Math.abs(a.treb_flop)?\na.ob_g:a.ob_r;a.ib_g=.00001<Math.abs(a.mid_flop)?a.ob_r:a.ob_b;a.ib_a=.03+.02*a.wave_g;a.ib_size=.05+.04*a.ob_g;a.zoom+=.08*a.mid_residual;","pixel_eqs_str":"a.rot=.00001<Math.abs(above(a.q1,0))?.4*Math.sin(a.rad+a.q3+a.q4):.4*Math.sin(a.rad+a.q2+a.q5);a.zoom-=div(a.rot,10);a.cx+=.3*Math.sin(7*a.x*a.q4);a.cy+=.3*Math.cos(5*a.y*a.q5);","init_eqs_eel":"","frame_eqs_eel":"warp=0;\nold_bass_flop=bass_flop;\nold_treb_flop=treb_flop;\nold_mid_flop=mid_flop;\nchaos=.9+.1*sin(pulse);\nentropy=if(bnot(entropy),2,if(equal(pulse,-20),1+int(rand(3)),entropy));\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);\nbass_flop=abs(bass_flop-equal(bass_thresh,2));\ntreb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);\ntreb_flop=abs(treb_flop-equal(treb_thresh,2));\nmid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);\nmid_flop=abs(mid_flop-equal(mid_thresh,2));\nbass_changed=bnot(equal(old_bass_flop,bass_flop));\nmid_changed=bnot(equal(old_mid_flop,mid_flop));\ntreb_changed=bnot(equal(old_treb_flop,treb_flop));\nbass_residual = bass_changed*sin(time*(3-bass_thresh)) + bnot(bass_changed)*bass_residual;\ntreb_residual = treb_changed*sin(time*(3-treb_thresh)) + bnot(treb_changed)*treb_residual;\nmid_residual = mid_changed*sin(time*(3-mid_thresh)) + bnot(mid_changed)*mid_residual;\npulse=if(above(abs(pulse),20),-20,pulse+.04*entropy*bor(bor(bass_changed*bnot(treb_changed),treb_changed*bnot(bass_changed))*bnot(mid_changed),mid_changed)+(mid+bass+treb)*.025);\nq1=mid_residual;\nq2=bass_residual;\nq3=treb_residual;\nq4=sin(pulse);\nq5=cos(pulse);\nwave_r=wave_r+.5*bass_residual;\nwave_r=wave_g+.5*mid_residual;\nwave_r=wave_b+.5*treb_residual;\nwave_mystery=wave_mystery+.23*mid_residual;\nob_r=if(bass_flop,treb_flop,wave_r);\nob_b=if(treb_flop,mid_flop,wave_b);\nob_g=if(mid_flop,bass_flop,wave_g);\nob_a=.03+.02*wave_r;\nob_size=.05+.04*wave_b;\nib_r=if(bass_flop,ob_b,ob_g);\nib_b=if(treb_flop,ob_g,ob_r);\nib_g=if(mid_flop,ob_r,ob_b);\nib_a=.03+.02*wave_g;\nib_size=.05+.04*ob_g;\nzoom=zoom+.08*mid_residual;","pixel_eqs_eel":"rot=if(above(q1,0),.4*sin(rad+q3+q4),.4*sin(rad+q2+q5));\nzoom=zoom-rot/10;\ncx=cx+.3*sin(x*7*q4);\ncy=cy+.3*cos(y*5*q5);","warp":" shader_body { \n  vec3 rsamp_1;\n  vec4 noiseVal_2;\n  vec3 ret_3;\n  noiseVal_2 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)) - (roam_sin * roam_cos.wzyx));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_pw_main, uv);\n  ret_3 = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, (uv + ((\n    (noiseVal_2.xy - 0.5)\n   * 12.0) * texsize.zw)));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  rsamp_1 = tmpvar_6;\n  float tmpvar_7;\n  vec2 x_8;\n  x_8 = (tmpvar_4.xy - uv);\n  tmpvar_7 = sqrt(dot (x_8, x_8));\n  float tmpvar_9;\n  vec2 x_10;\n  x_10 = (tmpvar_5.xy - uv);\n  tmpvar_9 = sqrt(dot (x_10, x_10));\n  if ((tmpvar_7 > tmpvar_9)) {\n    ret_3.xy = tmpvar_6.xy;\n  };\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_pw_main, (uv + ((\n    (noiseVal_2.zw - 0.5)\n   * 48.0) * texsize.zw)));\n  rsamp_1 = tmpvar_11.xyz;\n  float tmpvar_12;\n  vec2 x_13;\n  x_13 = (ret_3.xy - uv);\n  tmpvar_12 = sqrt(dot (x_13, x_13));\n  float tmpvar_14;\n  vec2 x_15;\n  x_15 = (tmpvar_11.xy - uv);\n  tmpvar_14 = sqrt(dot (x_15, x_15));\n  if ((tmpvar_12 > tmpvar_14)) {\n    ret_3.xy = rsamp_1.xy;\n  };\n  ret_3.z = texture (sampler_fw_main, ret_3.xy).z;\n  ret_3.z = (ret_3.z - (q1 * 0.005));\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_3;\n  ret = tmpvar_16.xyz;\n }","comp":" shader_body { \n  vec4 c_1;\n  vec2 uv2_2;\n  vec3 ret_3;\n  c_1 = (vec4(1.0, 0.4, 0.15, 0.1) - (roam_sin.wzyx * roam_cos));\n  uv2_2 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((\n    (texture (sampler_main, uv2_2).xyz * c_1.x)\n   + \n    (((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1) * c_1.y)\n  ) + (\n    ((texture (sampler_blur2, uv2_2).xyz * scale2) + bias2)\n   * c_1.z)) + ((\n    (texture (sampler_blur3, uv2_2).xyz * scale3)\n   + bias3) * c_1.w)).x;\n  uv2_2 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((\n    (texture (sampler_main, uv2_2).xyz * c_1.x)\n   + \n    (((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1) * c_1.y)\n  ) + (\n    ((texture (sampler_blur2, uv2_2).xyz * scale2) + bias2)\n   * c_1.z)) + ((\n    (texture (sampler_blur3, uv2_2).xyz * scale3)\n   + bias3) * c_1.w)).x;\n  uv2_2 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_6;\n  tmpvar_6 = (((\n    (texture (sampler_main, uv2_2).xyz * c_1.x)\n   + \n    (((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1) * c_1.y)\n  ) + (\n    ((texture (sampler_blur2, uv2_2).xyz * scale2) + bias2)\n   * c_1.z)) + ((\n    (texture (sampler_blur3, uv2_2).xyz * scale3)\n   + bias3) * c_1.w)).x;\n  uv2_2 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.14;\n  tmpvar_7.x = (tmpvar_4 - tmpvar_5);\n  tmpvar_7.y = (tmpvar_6 - ((\n    ((texture (sampler_main, uv2_2).xyz * c_1.x) + (((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1) * c_1.y))\n   + \n    (((texture (sampler_blur2, uv2_2).xyz * scale2) + bias2) * c_1.z)\n  ) + (\n    ((texture (sampler_blur3, uv2_2).xyz * scale3) + bias3)\n   * c_1.w)).x);\n  ret_3 = (0.5 + (0.5 * normalize(tmpvar_7)));\n  vec2 x_8;\n  x_8 = (ret_3.xy - 0.5);\n  ret_3 = (ret_3 * clamp ((\n    sqrt(dot (x_8, x_8))\n   * 5.0), 0.0, 1.0));\n  ret_3 = ret_3.xxy;\n  ret_3 = (ret_3 - 1.3);\n  ret_3 = (ret_3 + mix (ret_3, (ret_3 * \n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - (((texture (sampler_blur3, uv).xyz * scale3) + bias3) * 1.75))\n  ), pow (hue_shader.zxy, ret_3)));\n  ret_3 = (ret_3 * ret_3);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_3;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\nnoiseVal-=roam_sin*roam_cos.wzyx;\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));\nret.xyz = tex2D( sampler_pw_main,uvm).xyz;\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nrsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nret.z = tex2D(sampler_fw_main,ret.xy).z;\n\nret.z -= q1*.005;\n\n\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\nc-=roam_sin.wzyx*roam_cos;\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret -= 1.3;\n    ret += lerp(ret,ret*(GetBlur1(uv)-GetBlur3(uv)*1.75),pow(hue_shader.zxy,ret));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n} "}