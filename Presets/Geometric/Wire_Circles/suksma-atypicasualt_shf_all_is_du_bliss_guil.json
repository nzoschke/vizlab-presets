{"version":2,"baseVals":{"rating":5,"gammaadj":2.001,"decay":0.9,"echo_alpha":0.29,"wave_mode":7,"wave_brighten":0,"wave_a":0.001,"wave_smoothing":0,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":0.01,"fshader":1,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x=sample+0.1*sin(1.57+time*1.34+sample*5*(1+sin(time)));\ny=sample+0.1*cos(1.57+time*1.34+sample*5*(1+sin(time)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=sample+0.1*sin(1.57+time*1.34+sample*5*(1+sin(time)));\ny=sample+0.1*cos(1.57+time*1.34+sample*5*(1+sin(time)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x=sample+0.4*sin(time*(1+sample));\ny=1-(sample+0.4*cos(time*(1+sample)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=sample+0.4*sin(time*(1+sample));\ny=1-(sample+0.4*cos(time*(1+sample)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x=1-(sample+0.1*sin(1.57+time*1.34+sample*5*(1+sin(time))));\ny=sample+0.1*cos(1.57+time*1.34+sample*5*(1+sin(time)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=1-(sample+0.1*sin(1.57+time*1.34+sample*5*(1+sin(time))));\ny=sample+0.1*cos(1.57+time*1.34+sample*5*(1+sin(time)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n"},{"baseVals":{"enabled":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=1-(a.sample+.4*Math.sin(a.time*(1+a.sample)));a.y=1-(a.sample+.4*Math.cos(a.time*(1+a.sample)));a.r=.5+.5*Math.sin(a.time+3*a.sample);a.g=.5+.5*Math.sin(1.13*a.time+3*a.sample);a.b=.5+.5*Math.sin(.97*a.time+3*a.sample);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=1-(sample+0.4*sin(time*(1+sample)));\ny=1-(sample+0.4*cos(time*(1+sample)));\nr=0.5+0.5*sin(time+sample*3);\ng=0.5+0.5*sin(time*1.13+sample*3);\nb=0.5+0.5*sin(time*0.97+sample*3);\n"}],"init_eqs_str":"a.m2time=0;a.gamma=0;a.meanbass_att=0;a.q6=0;a.q1=0;a.flip=0;a.lastbeat=0;a.beatrate=0;a.mode=0;a.peakbass_att=0;a.beatcounter=0;a.q4=0;a.beatdrop=0;a.att=0;a.volume=0;a.beat=0;a.vol=0;a.q2=0;a.vol2=0;a.q3=0;a.q7=0;a.mtime=0;a.q8=0;a.mv_x=64;a.mv_y=48;a.dcsp=0;a.zoom=1;a.warp=0;a.rot=0;a.dx=0;a.dy=0;a.sx=1;a.sy=-1;a.cx=.5;a.cy=.5;","frame_eqs_str":"a.decay=1;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.mtime+=.01*a.vol*div(75,a.fps);a.q1=a.vol;a.q2=a.mtime;a.vol2=.33*(a.mid+a.treb);a.vol2*=a.vol2;a.m2time+=.01*a.vol2*div(75,a.fps);a.q3=a.vol2;a.q4=a.m2time;a.volume=.3*(a.bass+a.mid+a.att);a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,\na.peakbass_att);a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-a.beat)*a.peakbass_att*(.95*above(a.time-a.lastbeat,2*a.beatrate)+.995*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*\nabove(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatcounter+=a.beat;a.mode=.00001<Math.abs(a.beat*equal(mod(a.beatcounter,2),0))?1-a.mode:a.mode;a.flip=2*a.mode-1;a.beatdrop=.00001<Math.abs(equal(a.beatdrop,0))?a.beat:Math.max(a.beatdrop-.02*div(75,a.fps),0);a.q7=a.beatdrop;a.q8=a.flip;a.q6=1.005;a.zoom=1;a.sx=-a.q6;a.sy=a.q6;a.warp=0;a.cx=.5+a.dx;a.gamma=1+a.beatdrop*a.beatdrop;","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\ndcsp=0;\n\nzoom = 1.0;\nwarp = 0;\nrot = 0;\ndx = 0;\ndy = 0;\nsx = 1;\nsy = -1;\ncx = 0.5;\ncy = 0.5;","frame_eqs_eel":"decay = 1;\n\n//uncommenting this block will make decay start at 0 when preset begins, and rise to the \"max_decay\" value\n//max_decay = 0.97;\n//dcsp = dcsp + 0.007*(75/fps);\n//dcsp = min(dcsp , max_decay);\n//decay = dcsp;\n\n//volume, and volume based time. framerate adjusted\nvol = (bass+mid+treb)*0.25;\nvol = vol*vol;\n\nmtime = mtime + vol * 0.01 * (75/fps);\n\nq1 = vol;\nq2 = mtime;\n\n//non bass volume\nvol2 = (mid+treb)*0.33;\nvol2 = vol2*vol2;\n\nm2time = m2time + vol2 * 0.01 * (75/fps);\n\nq3 = vol2;\nq4 = m2time;\n\n\n//krash's beat detection code\nvolume = 0.3*(bass+mid+att);\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatcounter = beatcounter + beat;\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\nflip = 2*mode-1;\n\nbeatdrop = if( equal(beatdrop,0) , beat , max(beatdrop - 0.02*(75/fps) , 0) );\n\nq7 = beatdrop;\nq8 = flip;\n\n\n\n\nq6 = 1.0 + 0.005;//beatdrop*0.03;\n\nzoom = 1;\nsx = -q6;\nsy = q6;\n\nwarp=0;\n\n//dx = sin(time/4)*0.15;\ncx = 0.5 + dx ;\n\ngamma = 1 + beatdrop*beatdrop","pixel_eqs_eel":"","warp":" shader_body { \n  float conway_1;\n  vec3 ret_2;\n  ret_2 = ((texture (sampler_main, uv_orig).xyz * vec3(0.97, 1.0, 0.97)) - vec3(0.03, 0.0, 0.03));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_blur1, uv_orig);\n  ret_2.z = (ret_2.z + ((\n    (tmpvar_3.xyz * scale1)\n   + bias1).z * 0.4));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur3, uv_orig);\n  ret_2.x = (ret_2.x + ((\n    ((tmpvar_3.xyz * scale1) + bias1)\n  .z * 0.05) + (\n    ((tmpvar_4.xyz * scale3) + bias3)\n  .z * 0.05)));\n  ret_2.z = (ret_2.z - ret_2.x);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, uv_orig);\n  ret_2.y = clamp (tmpvar_5.y, 0.0, 1.0);\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).y + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(0.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).y);\n  float tmpvar_6;\n  tmpvar_6 = (((q5 * \n    (1.0 - ((tmpvar_3.xyz * scale1) + bias1).y)\n  ) * (1.0 - \n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\n  .y)) * (1.0 - (\n    (tmpvar_4.xyz * scale3)\n   + bias3).y));\n  conway_1 = (conway_1 - tmpvar_5.x);\n  if ((conway_1 > 0.0)) {\n    float tmpvar_7;\n    tmpvar_7 = clamp (ret_2.y, 0.0, 1.0);\n    if ((tmpvar_7 == 0.0)) {\n      ret_2.y = (floor((tmpvar_6 * 1.8)) * q1);\n    };\n  };\n  ret_2.y = (ret_2.y - ret_2.x);\n  vec2 tmpvar_8;\n  tmpvar_8 = (1.0 - uv);\n  ret_2.y = (ret_2.y * (1.0 - (\n    (((texture (sampler_blur2, tmpvar_8).xyz * scale2) + bias2).x + ((texture (sampler_blur2, tmpvar_8).xyz * scale2) + bias2).z)\n   * 16.0)));\n  ret_2 = (ret_2 - 0.3);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (1.0 - uv.x);\n  tmpvar_2.y = uv.y;\n  vec3 tmpvar_3;\n  tmpvar_3 = vec3((texture (sampler_main, uv).x + texture (sampler_main, tmpvar_2).x));\n  vec2 tmpvar_4;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_blur1, uv);\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \n    ((tmpvar_5.xyz * scale1) + bias1)\n  .zzz).xy) + 0.5);\n  vec3 tmpvar_6;\n  tmpvar_6 = (tmpvar_3 + clamp ((\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    (1.0 - (tmpvar_3.x * 2.0))\n  ), 0.0, 1.0));\n  vec3 tmpvar_7;\n  tmpvar_7 = (tmpvar_6 + clamp ((\n    pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    (1.0 - (tmpvar_6.x * 2.0))\n  ), 0.0, 1.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = uv.x;\n  tmpvar_8.y = (1.0 - uv.y);\n  ret_1 = (pow (mix (\n    (vec3((((tmpvar_5.xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)) + (((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1).x + ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3).x))\n  , tmpvar_7, tmpvar_7), vec3(5.0, 1.0, 0.5)) + pow ((texture (sampler_main, tmpvar_8).yyy + texture (sampler_main, \n    (1.0 - uv)\n  ).yyy), vec3(0.6, 0.95, 5.0)));\n  ret_1 = (ret_1 - (roam_sin.xyz * roam_cos.zxy));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_1;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"\nshader_body\n{\n\nret.xyz = tex2D(sampler_main, uv_orig).xyz*float3(.97,1,.97) - float3(.03,0,.03);\n\nret.z += GetBlur1(uv_orig).z*.4;\nret.x += GetBlur1(uv_orig).z*.05 + GetBlur3(uv_orig).z*.05;\nret.z -= ret.x;\n\nfloat2 pixelsize = texsize.zw;\nret.y = saturate(tex2D( sampler_pw_main,uv_orig).y);\n\nfloat1 conway = tex2D( sampler_pw_main, uv_orig + float2(-1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,1)*pixelsize).y;\n\nfloat1 test = q5*(1-GetBlur1(uv_orig).y)*(1-GetBlur2(uv_orig).y)*(1-GetBlur3(uv_orig).y);\n\nconway -= tex2D( sampler_pw_main, uv_orig).x;\n\n\nif (conway > 0) {\nif (saturate(ret.y) == 0) {\nret.y = floor(test*1.8)*q1;\n}\n}\n\nret.y -= ret.x;\n\nret.y *= (1-(GetBlur2(1-uv).x+GetBlur2(1-uv).z)*16);\n\n\nret.xyz -= .3;\n}","comp_hlsl":"shader_body\n{\n\n\n\nfloat2 uva = uv;\nfloat2 uvb = float2(1-uv.x,uv.y);\n\nret = tex2D(sampler_main, uva).x + tex2D(sampler_main, uvb).x;\n\nfloat3 blurs = GetBlur1(uva).x + GetBlur3(uva).x;\nblurs += GetBlur1(uvb).x + GetBlur3(uvb).x;\n\n\nfloat2 uv3 = (uv-.5)*(1-GetBlur1(uv).zzz)+.5;\nret += saturate(pow(tex2D(sampler_main, uv3).zzz,.5)*(1-ret.x*2)),\nret += saturate(pow(GetBlur1(uv3).zzz,.5)*(1-ret.x*2)),\n\n\nret = lerp (\nblurs,\nret,\npow(ret,1));\n\nret = pow(ret,float3(5,1,.5));\n\nret += pow(tex2D(sampler_main, float2(uv.x,1-uv.y)).yyy+tex2D(sampler_main, 1-uv).yyy,float3(.6,.95,5));\n\nret-=roam_sin*roam_cos.zxy;\n\n}"}