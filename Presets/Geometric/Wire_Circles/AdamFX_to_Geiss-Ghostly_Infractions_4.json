{"version":2,"baseVals":{"rating":5,"decay":0.99,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"zoom":1.05,"warp":0.00115,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":22,"additive":1,"textured":1,"rad":0.54822,"ang":1.44513,"r":0.3,"g":0.91,"b":1,"a":0.22,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":33,"rad":0.24979,"r":0.4,"g":0.2,"r2":0.1,"g2":0.2,"b2":0.3,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":3,"additive":1,"textured":1,"rad":0.36457,"ang":1.5708,"tex_zoom":1.4166,"g":1,"b":1,"r2":1,"b2":1,"border_a":0.18},"init_eqs_str":"","frame_eqs_str":"a.ang=div(a.time,4);","init_eqs_eel":"","frame_eqs_eel":"ang = time/4"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"g":1,"b":1,"r2":0.5,"g2":0.7,"b2":1},"init_eqs_str":"","frame_eqs_str":"a.ang=div(-a.time,3);","init_eqs_eel":"","frame_eqs_eel":"ang = - time/3"}],"waves":[{"baseVals":{"enabled":1,"additive":1,"r":0.1,"g":0.28,"a":0.2},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.cc_ad_a=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.cc_int=0;a.q1=0;a.cc_ramp=0;a.cc_b=0;a.xq=0;a.sang=0;a.t3=0;a.bias_i=0;a.ys=0;a.pi=0;a.ang2=0;a.zq=0;a.phs=0;a.cc_ad_b=0;a.ang=0;a.cc_a=0;a.t2=0;a.zp=0;a.bias=0;a.q2=0;a.t4=0;a.cc=0;a.pi2=0;a.t2=0;","frame_eqs_str":"a.t1=13*a.time;a.t2=.5*Math.sin(3*a.time)+.5;a.t2=.3*a.t2+.1;a.t2=.003*a.q2+.06;a.t3=a.q1;a.t4=div(a.time,8);a.t5=.5*Math.sin(div(a.time,4))+.5;a.t5=17*a.t5+2;","point_eqs_str":"a.n=6.283*a.sample;a.pi=3.1415;a.pi2=6.283;a.phs=a.t1+9*a.sample;a.bias=a.t5;a.bias_i=a.bias-1;a.cc=div(a.phs,3);a.cc_int=Math.floor(a.cc);a.cc_ramp=a.cc-a.cc_int;a.cc_ad_a=div(a.cc_ramp*a.bias-1,a.bias_i);a.cc_ad_a=.00001<Math.abs(below(a.cc_ad_a,0))?0:a.cc_ad_a;a.cc_ad_b=a.cc_ramp*a.bias;a.cc_ad_b=.00001<Math.abs(above(a.cc_ad_b,1))?1:a.cc_ad_b;a.cc_a=a.cc_ad_a+a.cc_int;a.cc_b=a.cc_ad_b+a.cc_int;a.xp=a.t2*above(a.cc_ad_a,0);a.yp=1;a.zp=0;a.ang=100.528*a.cc_a;a.sang=Math.sin(a.ang);\na.cang=Math.cos(a.ang);a.xq=a.sang*a.xp+a.cang*a.zp;a.yq=a.yp;a.zq=a.cang*a.xp-a.sang*a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang2=a.cc_b+a.t4;a.sang=Math.sin(a.ang2);a.cang=Math.cos(a.ang2);a.xq=a.xp;a.yq=a.sang*a.yp+a.cang*a.zp;a.zq=a.cang*a.yp-a.sang*a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang2=3.13*a.cc_b+a.t4;a.sang=Math.sin(a.ang2);a.cang=Math.cos(a.ang2);a.xq=a.sang*a.xp+a.cang*a.yp;a.yq=a.cang*a.xp-a.sang*a.yp;a.zq=a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang2=1.43*a.cc_b+a.t4;a.sang=Math.sin(a.ang2);\na.cang=Math.cos(a.ang2);a.xq=a.sang*a.xp+a.cang*a.zp;a.yq=a.yp;a.zq=a.cang*a.xp-a.sang*a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.zp+=3.1;a.xs=div(a.xp,a.zp)+.5;a.ys=1.333*div(a.yp,a.zp)+.5;a.x=a.xs;a.y=a.ys;","init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = time * 13;\n\nt2 = sin(time*3) * 0.5 + 0.5;\nt2 = t2 * 0.3 + 0.1; //size of circle;\n\nt2= q2 * 0.003 + 0.06;\n\nt3= q1;\n\nt4 = time/8;\n\nt5 = sin( time / 4 ) * 0.5 + 0.5; //bias value\nt5 = t5 * 17 + 2;","point_eqs_eel":"n = sample*6.283;\npi = 3.1415;\npi2 = 6.283;\n\nphs = t1 + sample*9;\n\nbias = t5;\nbias_i = bias - 1;\n\ncc = phs / 3;\ncc_int = int(cc);\ncc_ramp = cc - cc_int;\ncc_ad_a = (cc_ramp * bias - 1) / bias_i;\ncc_ad_a = if( below(cc_ad_a,0) , 0 , cc_ad_a );\n\ncc_ad_b = cc_ramp * bias;\ncc_ad_b = if( above(cc_ad_b,1) , 1 , cc_ad_b );\n\ncc_a = cc_ad_a + cc_int;\ncc_b = (cc_ad_b + cc_int) ;\n\nxp = t2 * above(cc_ad_a , 0);\nyp = 1;\nzp = 0;\n\nang = cc_a * 6.283 * 16;\nsang = sin(ang) ; cang = cos(ang);\nxq = sang*xp + cang*zp;\nyq = yp;\nzq = cang*xp - sang*zp;\nxp=xq;yp=yq;zp=zq;\n\nang2 = cc_b + t4;\nsang = sin(ang2) ; cang = cos(ang2);\nxq = xp;\nyq = sang*yp + cang*zp;\nzq = cang*yp - sang*zp;\nxp=xq;yp=yq;zp=zq;\n\nang2 = cc_b * 3.13 + t4;\nsang = sin(ang2) ; cang = cos(ang2);\nxq = sang*xp + cang*yp;\nyq = cang*xp - sang*yp;\nzq = zp;\nxp=xq;yp=yq;zp=zq;\n\nang2 = cc_b * 1.43 + t4;\nsang = sin(ang2) ; cang = cos(ang2);\nxq = sang*xp + cang*zp;\nyq = yp;\nzq = cang*xp - sang*zp;\nxp=xq;yp=yq;zp=zq;\n\n\nzp = zp+3.1;\nxs = xp/zp + 0.5;\nys = yp/zp * 1.333 + 0.5;\n\nx=xs;\ny=ys;\n\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.wave_r+=.6*Math.sin(1.517*a.time)+.4*Math.sin(1.58*a.time);a.wave_g+=.6*Math.sin(1.088*a.time)+.4*Math.sin(1.076*a.time);a.wave_b+=.6*Math.sin(1.037*a.time)+.4*Math.sin(.922*a.time);a.cx+=.11*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.11*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.q1=Math.cos(1.41*a.time);a.q2=a.time+.3*Math.sin(1.47*a.time);a.wave_mystery+=.2*Math.cos(.35*a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 1.000*( 0.60*sin(1.517*time) + 0.40*sin(1.580*time) );\nwave_g = wave_g + 1.000*( 0.60*sin(1.088*time) + 0.40*sin(1.076*time) );\nwave_b = wave_b + 1.000*( 0.60*sin(1.037*time) + 0.40*sin(0.922*time) );\n//rot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\nq1=cos(1.41*time);\nq2=time + 0.3*sin(time*1.47);\n\nwave_mystery = wave_mystery + 0.2*cos(time*0.35);","pixel_eqs_eel":"//rot=rot+0.05*sin(rad*13.5 + q2*1.3 + q*1.31);\n//zoom=zoom+0.05*sin(ang*10.0 + rad*7.5 + q2*1.63 + q);","warp":" shader_body { \n  vec2 uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = normalize((uv_orig - 0.5));\n  float tmpvar_3;\n  tmpvar_3 = (time * 7.0);\n  uv_1 = (mix (uv_orig, uv, vec2((\n    clamp ((((bass / bass_att) - 0.9) * 13.0), 0.0, 1.0)\n   * 0.3))) + ((\n    (tmpvar_2 * texsize.zw)\n   * \n    cos(((rad * 170.0) - tmpvar_3))\n  ) * 2.0));\n  uv_1 = (uv_1 + ((\n    (vec2(5.0, -5.0) * texsize.zw)\n   * \n    cos(((ang * 30.0) - tmpvar_3))\n  ) * tmpvar_2.yx));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ((texture (sampler_main, uv_1).xyz - 0.004) * 0.83);\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n    float t = saturate((bass/bass_att-0.9)*13);\n    uv = lerp(uv_orig, uv, t*0.3);\n\n    float2 v1 = normalize(uv_orig-0.5);\n    float2 v2 = v1.yx * float2(1,-1);\n    \n    float z = length(texsize.zw)*450;\n\n    uv.xy += v1*texsize.zw * cos(rad*170 - time*7)*2;\n    uv.xy += v2*texsize.zw * cos(ang*30 - time*7)*5;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    \n    \n    // darken (decay) over time\n    ret = (ret - 0.004)*0.83;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n\n    //ret *= 1.5; //old gamma effect    \n}"}