{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.99,"echo_zoom":1,"wave_mode":2,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.625,"wave_smoothing":0,"modwavealphastart":0.8,"modwavealphaend":1.2,"warpscale":2.853,"zoom":1.064,"warp":0,"sx":0.88027,"sy":0.01,"wave_r":0.5,"wave_y":0.47,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"textured":1,"rad":0.80814,"ang":0.75398,"tex_ang":1.3823,"tex_zoom":1.10462,"g":0.9,"b":0.7,"r2":1,"b2":0.8,"a2":1,"border_a":0.4},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.03*Math.cos(.69*a.time+2);a.y=.5+.02*Math.cos(.73*a.time+1);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.03*cos(time*0.69 + 2);\ny = 0.5 + 0.02*cos(time*0.73 + 1);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tmm=0;a.q1=0;a.oldq1=0;","frame_eqs_str":"a.ib_r=.5+5.499*(.6*Math.sin(div(.945*a.time,3))+.4*Math.sin(div(1.065*a.time,3)));a.ib_g=.5+5.499*(.6*Math.sin(div(.933*a.time,3))+.4*Math.sin(div(1.045*a.time,3)));a.ib_b=.5+5.499*(.6*Math.sin(div(.91*a.time,3))+.4*Math.sin(div(.92*a.time,3)));a.ob_g=a.ib_r;a.ob_r=a.ib_g;a.ob_b=a.ib_b;a.wave_a=0;a.decay=.99;a.warp=1.5;a.q1=a.oldq1+.005*(a.bass+a.bass_att+a.bass*a.bass_att-2);a.oldq1=below(a.q1,3E4)*a.q1;a.monitor=a.q1;","pixel_eqs_str":"a.tmm=a.time*a.rad*a.rad;a.rot=div(Math.sin(div(a.tmm,2))*a.x,div(div(Math.atan(2*a.tmm),a.ang),a.x));a.zoom=-1*div(a.x,a.y);a.sy=a.sx;","init_eqs_eel":"","frame_eqs_eel":"ib_r = 0.5 + (5.499*( 0.60*sin(0.945*time/3) + 0.40*sin(1.065*time/3) ));\nib_g = 0.5 + (5.499*( 0.60*sin(0.933*time/3) + 0.40*sin(1.045*time/3) ));\nib_b = 0.5 + (5.499*( 0.60*sin(0.910*time/3) + 0.40*sin(0.920*time/3) ));\nob_g = ib_r;\nob_r = ib_g;\nob_b = ib_b;\nwave_a=0;\ndecay =0.99;\nwarp=1.5;\nq1 = oldq1+0.005*(bass+bass_att+(bass*bass_att)-2);\noldq1 = below(q1,30000)*q1;\nmonitor =q1;","pixel_eqs_eel":"//dx=0.003*(bass*bass+bass_att)*sin((sin(sqrt(4)-rad))*5+(rad*5*sin(q1)))*y*ang;\n//dy=0.003*(bass*bass+bass_att)*cos((sin(sqrt(4)-rad))*5+(-rad*5*sin(q1)))*x*rad*ang;\n//tm=12 + sin(time/2)*0.7;\ntmm=time*rad*rad;\nrot=(sin(tmm/2)*x)/(atan(tmm*2)/ang/x);\n//rot=rot + (x/y)*0.1;\n\nzoom=-1.00* ( x  / y ) ;\n\nsy=sx","warp":" shader_body { \n  float final_noise_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)].x = q4;\n  tmpvar_2[uint(0)].y = -(q5);\n  tmpvar_2[1u].x = q5;\n  tmpvar_2[1u].y = q4;\n  vec3 tmpvar_3;\n  tmpvar_3.xy = uv;\n  tmpvar_3.z = (q2 * 10.0);\n  final_noise_1 = ((texture (sampler_noisevol_lq, tmpvar_3) * 2.0) - 1.0).x;\n  final_noise_1 = (final_noise_1 + (0.5 * (\n    (texture (sampler_noisevol_lq, (tmpvar_3 * 2.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.25 * (\n    (texture (sampler_noisevol_lq, (tmpvar_3 * 4.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.125 * (\n    (texture (sampler_noisevol_lq, (tmpvar_3 * 8.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = ((final_noise_1 + 1.0) * 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = texture (sampler_main, (((\n    ((uv - 0.5) * tmpvar_2)\n   * \n    (1.0 - (rad * 0.01))\n  ) * final_noise_1) + 0.5)).xyz;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2.z = 0.0;\n  tmpvar_2.xy = texsize.zw;\n  ret_1 = -(texture (sampler_main, uv).xyz);\n  ret_1 = (ret_1 + (clamp (\n    ((dot (texture (sampler_main, (uv + tmpvar_2.xz)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv - tmpvar_2.xz)).xyz, vec3(0.32, 0.49, 0.29))) * 64.0)\n  , 0.0, 1.0) * vec3(1.0, 0.6, 0.1)));\n  ret_1 = (ret_1 + (clamp (\n    ((dot (texture (sampler_main, (uv + tmpvar_2.zy)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv - tmpvar_2.zy)).xyz, vec3(0.32, 0.49, 0.29))) * 64.0)\n  , 0.0, 1.0) * vec3(0.2, 0.5, 0.7)));\n  ret_1 = (ret_1 - clamp ((\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * 4.0)\n   - 1.0), 0.0, 1.0));\n  ret_1 = (ret_1 * 1.5);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n    \n    float2x2 rot =  {  q4, q5,\n                       -q5, q4 };\n\n    float3 txr = float3(uv,q2*10);\n\n    float final_noise = 0;\n    final_noise += (1.0/pow(2,0))*(tex3D(sampler_noisevol_lq, txr*pow(2,0))*2-1);\n    final_noise += (1.0/pow(2,1))*(tex3D(sampler_noisevol_lq, txr*pow(2,1))*2-1);\n    final_noise += (1.0/pow(2,2))*(tex3D(sampler_noisevol_lq, txr*pow(2,2))*2-1);\n    final_noise += (1.0/pow(2,3))*(tex3D(sampler_noisevol_lq, txr*pow(2,3))*2-1);\n\n    final_noise =  (final_noise+1)*0.5;\n    \n\n    ret = tex2D( sampler_main, mul(uv-0.5,rot)*(1-rad*0.01)*final_noise + 0.5 ).xyz; \n   \n    // darken (decay) over time\n    ret = ret; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;    \n\n    float3 d = float3(texsize.zw, 0)*1.0;\n    float b1 = lum(GetPixel(uv + d.xz));\n    float b2 = lum(GetPixel(uv - d.xz));\n    float b3 = lum(GetPixel(uv + d.zy));\n    float b4 = lum(GetPixel(uv - d.zy));\n\n    //ret = 0;\n    ret *= -1; \n    ret += saturate((b1-b2)*64)*1.00*float3(1,0.6,0.1);\n    ret += saturate((b3-b4)*64)*1.00*float3(0.2,0.5,0.7);\n    ret -= saturate( GetBlur1(uv)*4 - 1 );\n\n    ret *= 1.5;\n}"}