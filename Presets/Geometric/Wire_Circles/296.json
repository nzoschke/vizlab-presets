{"version":2,"baseVals":{"rating":5,"gammaadj":0.16,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warp":0.1792,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0.3},"shapes":[{"baseVals":{"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"g":1,"b":1,"r2":0.5,"g2":0.7,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"additive":1,"r":0.1,"g":0.28,"a":0.2},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.cc_ad_a=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.cc_int=0;a.q1=0;a.cc_ramp=0;a.cc_b=0;a.xq=0;a.sang=0;a.t3=0;a.bias_i=0;a.ys=0;a.pi=0;a.ang2=0;a.zq=0;a.phs=0;a.cc_ad_b=0;a.ang=0;a.cc_a=0;a.t2=0;a.zp=0;a.bias=0;a.q2=0;a.t4=0;a.cc=0;a.pi2=0;a.t2=0;","frame_eqs_str":"a.t1=13*a.time;a.t2=.5*Math.sin(3*a.time)+.5;a.t2=.3*a.t2+.1;a.t2=.003*a.q2+.06;a.t3=a.q1;a.t4=div(a.time,8);a.t5=.5*Math.sin(div(a.time,4))+.5;a.t5=17*a.t5+1.3;","point_eqs_str":"a.n=6.283*a.sample;a.pi=3.1415;a.pi2=6.283;a.phs=a.t1+9*a.sample;a.bias=a.t5;a.bias_i=a.bias-1;a.cc=div(a.phs,3);a.cc_int=Math.floor(a.cc);a.cc_ramp=a.cc-a.cc_int;a.cc_ad_a=div(a.cc_ramp*a.bias-1,a.bias_i);a.cc_ad_a=.00001<Math.abs(below(a.cc_ad_a,0))?0:a.cc_ad_a;a.cc_ad_b=a.cc_ramp*a.bias;a.cc_ad_b=.00001<Math.abs(above(a.cc_ad_b,1))?1:a.cc_ad_b;a.cc_a=a.cc_ad_a+a.cc_int;a.cc_b=a.cc_ad_b+a.cc_int;a.xp=a.t2*above(a.cc_ad_a,0);a.yp=1;a.zp=0;a.ang=100.528*a.cc_a;a.sang=Math.sin(a.ang);\na.cang=Math.cos(a.ang);a.xq=a.sang*a.xp+a.cang*a.zp;a.yq=a.yp;a.zq=a.cang*a.xp-a.sang*a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang2=a.cc_b+a.t4;a.sang=Math.sin(a.ang2);a.cang=Math.cos(a.ang2);a.xq=a.xp;a.yq=a.sang*a.yp+a.cang*a.zp;a.zq=a.cang*a.yp-a.sang*a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang2=3.13*a.cc_b+a.t4;a.sang=Math.sin(a.ang2);a.cang=Math.cos(a.ang2);a.xq=a.sang*a.xp+a.cang*a.yp;a.yq=a.cang*a.xp-a.sang*a.yp;a.zq=a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang2=1.43*a.cc_b+a.t4;a.sang=Math.sin(a.ang2);\na.cang=Math.cos(a.ang2);a.xq=a.sang*a.xp+a.cang*a.zp;a.yq=a.yp;a.zq=a.cang*a.xp-a.sang*a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.zp+=3.1;a.xs=div(a.xp,a.zp)+.5;a.ys=1.333*div(a.yp,a.zp)+.5;a.x=a.xs;a.y=a.ys;","init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = time * 13;\n\nt2 = sin(time*3) * 0.5 + 0.5;\nt2 = t2 * 0.3 + 0.1; //size of circle;\n\nt2= q2 * 0.003 + 0.06;\n\nt3= q1;\n\nt4 = time/8;\n\nt5 = sin( time / 4 ) * 0.5 + 0.5; //bias value\nt5 = t5 * 17 + 1.3;","point_eqs_eel":"n = sample*6.283;\npi = 3.1415;\npi2 = 6.283;\n\nphs = t1 + sample*9;\n\nbias = t5;\nbias_i = bias - 1;\n\ncc = phs / 3;\ncc_int = int(cc);\ncc_ramp = cc - cc_int;\ncc_ad_a = (cc_ramp * bias - 1) / bias_i;\ncc_ad_a = if( below(cc_ad_a,0) , 0 , cc_ad_a );\n\ncc_ad_b = cc_ramp * bias;\ncc_ad_b = if( above(cc_ad_b,1) , 1 , cc_ad_b );\n\ncc_a = cc_ad_a + cc_int;\ncc_b = (cc_ad_b + cc_int) ;\n\nxp = t2 * above(cc_ad_a , 0);\nyp = 1;\nzp = 0;\n\nang = cc_a * 6.283 * 16;\nsang = sin(ang) ; cang = cos(ang);\nxq = sang*xp + cang*zp;\nyq = yp;\nzq = cang*xp - sang*zp;\nxp=xq;yp=yq;zp=zq;\n\nang2 = cc_b + t4;\nsang = sin(ang2) ; cang = cos(ang2);\nxq = xp;\nyq = sang*yp + cang*zp;\nzq = cang*yp - sang*zp;\nxp=xq;yp=yq;zp=zq;\n\nang2 = cc_b * 3.13 + t4;\nsang = sin(ang2) ; cang = cos(ang2);\nxq = sang*xp + cang*yp;\nyq = cang*xp - sang*yp;\nzq = zp;\nxp=xq;yp=yq;zp=zq;\n\nang2 = cc_b * 1.43 + t4;\nsang = sin(ang2) ; cang = cos(ang2);\nxq = sang*xp + cang*zp;\nyq = yp;\nzq = cang*xp - sang*zp;\nxp=xq;yp=yq;zp=zq;\n\n\nzp = zp+3.1;\nxs = xp/zp + 0.5;\nys = yp/zp * 1.333 + 0.5;\n\nx=xs;\ny=ys;\n\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.rg2=0;a.decay_rate=0;a.q12=0;a.q13=0;a.q15=0;a.q1=0;a.rg=0;a.q5=0;a.q9=0;a.prev_beat=0;a.is_beat=0;a.q11=0;a.q4=0;a.min_att=0;a.beat=0;a.decay_to=0;a.q2=0;a.q14=0;a.q3=0;a.beat_level=0;a.q7=0;a.q3=.5+.006*rand(100);a.q4=.01*rand(100);a.q5=.01*rand(100);","frame_eqs_str":"a.wave_r+=.2*(.6*Math.sin(1.517*a.time)+.4*Math.sin(1.58*a.time));a.wave_g+=.2*(.6*Math.sin(1.088*a.time)+.4*Math.sin(1.076*a.time));a.wave_b+=.2*(.6*Math.sin(1.037*a.time)+.4*Math.sin(.922*a.time));a.rot+=.01*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.zoom+=.037*(.38*Math.sin(.157*a.time+1)+.62*Math.sin(.1184*a.time+5));a.cx+=.11*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.11*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.q1=Math.cos(1.41*a.time);\na.q2=a.time+.3*Math.sin(1.47*a.time);a.rg=Math.max(.77*a.rg,1.2+1.2*Math.min(2,1.3*Math.max(0,a.mid_att-1)));a.q9=a.rg*above(a.rg,2*a.rg2);a.rg2=Math.max(a.rg,.8*a.rg2);a.monitor=a.q9;a.q11=a.aspectx;a.q12=a.aspecty;a.q13=a.wave_r;a.q14=a.wave_g;a.q15=a.wave_b;a.min_att=2.5;a.decay_to=.8;a.decay_rate=pow(.998,a.fps);a.beat=div(a.bass,Math.max(a.min_att,a.bass_att));a.beat=Math.max(a.beat,div(a.mid,Math.max(a.min_att,a.mid_att)));a.beat=Math.max(a.beat,div(a.treb,Math.max(a.min_att,a.treb_att)));a.beat=\nMath.max(a.beat,(a.prev_beat-a.decay_to)*a.decay_rate+a.decay_to);a.beat_level=24*(a.beat-a.prev_beat-.07);a.is_beat=above(a.beat_level,.5);a.warp=22*(a.beat-a.prev_beat);a.q7=32*(a.beat-a.prev_beat-.08);a.prev_beat=a.beat;","pixel_eqs_str":"a.dx=.02*Math.cos(a.x*a.pixelsx*a.aspectx*a.q3*.1+6.28*a.q4);a.dy=.02*Math.cos(a.y*a.pixelsy*a.aspecty*a.q3*.1+6.28*a.q5);","init_eqs_eel":"// determines the cell sizes: (see per-vertex eqs)\nq3 = 0.5  +  0.6 * rand(100)*0.01;\nq4 = rand(100)*0.01;\nq5 = rand(100)*0.01;","frame_eqs_eel":"wave_r = wave_r + 0.200*( 0.60*sin(1.517*time) + 0.40*sin(1.580*time) );\nwave_g = wave_g + 0.200*( 0.60*sin(1.088*time) + 0.40*sin(1.076*time) );\nwave_b = wave_b + 0.200*( 0.60*sin(1.037*time) + 0.40*sin(0.922*time) );\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\nzoom = zoom + 0.037*( 0.38*sin(0.157*time+1) + 0.62*sin(0.1184*time+5) );\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\nq1=cos(1.41*time);\nq2=time + 0.3*sin(time*1.47);\n\n// this is a great way to respond to beats:\n// once you get one, let it decay at a constant rate!!\nrg = max(rg*0.77, 1.2 + 1.2*min(2,max(0,mid_att-1)*1.3));\nq9 = rg * above(rg,rg2*2);\nrg2 = max(rg, rg2*0.8);\n\n//zoom = zoom + q9*0.1;\nmonitor = q9;\n\n// for custom shape 1:\nq11 = aspectx;\nq12 = aspecty;\nq13 = wave_r;\nq14 = wave_g;\nq15 = wave_b;\n\n// custom beat detection code: (fps-independent; quiet songs don't freak out)\nmin_att    = 2.5;               // lower # = quieter songs can declare beats\ndecay_to   = 0.8;               // lower # = more hasty to declare a beat\ndecay_rate = pow(0.9980, fps);  // lower # = more hasty to declare a beat\nbeat =           bass/max(min_att,bass_att);\nbeat = max(beat, mid /max(min_att,mid_att ));\nbeat = max(beat, treb/max(min_att,treb_att));\nbeat = max( beat, (prev_beat-decay_to)*decay_rate + decay_to );\nbeat_level     = (beat - prev_beat - 0.07)*24;\nis_beat = above(beat_level, 0.5);\n  // effects:\n  warp = (beat - prev_beat)*22;\n  q7 = (beat - prev_beat - 0.08)*32;\nprev_beat = beat;","pixel_eqs_eel":"// this creates squares of a certain size, in pixels, \n// no matter what the size of the screen, or its aspect ratio:\ndx = cos(x*pixelsx*aspectx*q3*0.1 + q4*6.28)*0.02;\ndy = cos(y*pixelsy*aspecty*q3*0.1 + q5*6.28)*0.02;","warp":" shader_body { \n  vec2 uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = normalize((uv_orig - 0.5));\n  float tmpvar_3;\n  tmpvar_3 = (time * 7.0);\n  uv_1 = (mix (uv_orig, uv, vec2((\n    clamp ((((bass / bass_att) - 0.9) * 13.0), 0.0, 1.0)\n   * 0.3))) + ((\n    (tmpvar_2 * texsize.zw)\n   * \n    cos(((rad * 170.0) - tmpvar_3))\n  ) * 2.0));\n  uv_1 = (uv_1 + ((\n    (vec2(5.0, -5.0) * texsize.zw)\n   * \n    cos(((ang * 30.0) - tmpvar_3))\n  ) * tmpvar_2.yx));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ((texture (sampler_main, uv_1).xyz - 0.004) * 0.83);\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) * 3.0));\n  ret_1 = (ret_1 + ((texture (sampler_blur2, \n    (((uv - 0.5) * 0.333) + 0.5)\n  ).xyz * scale2) + bias2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    float t = saturate((bass/bass_att-0.9)*13);\n    uv = lerp(uv_orig, uv, t*0.3);\n\n    float2 v1 = normalize(uv_orig-0.5);\n    float2 v2 = v1.yx * float2(1,-1);\n    \n    float z = length(texsize.zw)*450;\n\n    uv.xy += v1*texsize.zw * cos(rad*170 - time*7)*2;\n    uv.xy += v2*texsize.zw * cos(ang*30 - time*7)*5;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    \n    \n    // darken (decay) over time\n    ret = (ret - 0.004)*0.83;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz*1 +\n              GetBlur1(uv)*3 +\n              GetBlur2(uv)*0 +\n              GetBlur3(uv)*0 +\n              0;\n    ret += GetBlur2( (uv-0.5)*0.333 + 0.5);\n    ret *= 1;\n}"}