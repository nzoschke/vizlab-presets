{"version":2,"baseVals":{"rating":5,"gammaadj":0.16,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":2.233,"wave_smoothing":0.81,"wave_mystery":0.28,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpscale":1.331,"zoom":0.9995,"rot":0.1,"cx":2,"cy":2,"warp":0.01105,"wave_r":0.9,"wave_b":0.9,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0.3},"shapes":[{"baseVals":{"sides":100,"additive":1,"textured":1,"y":0.9,"rad":0.26913,"ang":1.5708,"tex_zoom":9.75346,"r":0.6,"g":0.6,"b":0.6,"a":0.4,"r2":0.29,"g2":0.3,"b2":0.3,"border_b":0,"border_a":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"textured = 1;\nrot0 = rot0 + 1/fps * q1;\n\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\n\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/300);\nrad = rad0;\n\n\nx =  posx;\ny =  posy;\nang = rot0;","init_eqs_eel":"","frame_eqs_eel":"textured = 1;\nrot0 = rot0 + 1/fps * q1;\n\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\n\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/300);\nrad = rad0;\n\n\nx =  posx;\ny =  posy;\nang = rot0;"},{"baseVals":{"sides":100,"rad":0.14451,"ang":1.13097,"tex_zoom":1.02315,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a = q24*1; a2 = 0;","init_eqs_eel":"","frame_eqs_eel":"a = q24*1; a2 = 0;"},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.9},"init_eqs_str":"a.xang=0;a.ampl=0;a.fov=0;a.t1=0;a.yang=0;a.my=0;a.oz=0;a.k1=0;a.t_rel=0;a.k2=0;a.mz=0;a.oy=0;a.mx=0;a.t2=0;a.zang=0;a.monitor=0;a.t_abs=0;a.ox=0;a.t1=1+.3*(.01*rand(101)-.01*rand(101));a.t2=1+.3*(.01*rand(101)-.01*rand(101));a.t3=1+.3*(.01*rand(101)-.01*rand(101));a.t4=1+.3*(.01*rand(101)-.01*rand(101));a.t5=1+.3*(.01*rand(101)-.01*rand(101));a.t6=1+.3*(.01*rand(101)-.01*rand(101));a.t7=1+.3*(.01*rand(101)-.01*rand(101));a.t8=1+.3*(.01*rand(101)-.01*rand(101));","frame_eqs_str":"a.t2+=a.bass_att;","point_eqs_str":"a.k1=Math.cos(div(a.time,3));a.k2=Math.sin(div(a.time,2));a.t_abs=a.sample;a.t_rel=a.sample-div(a.time,2.12);a.ampl=5*Math.cos(a.t_rel);a.ox=Math.sin(8*a.t_rel)+a.ampl*Math.sin(12*a.t_rel);a.oy=Math.cos(13*a.t_rel)+a.ampl*Math.cos(11*a.t_rel);a.oz=div(a.ampl,3);a.r=1;a.g=.5;a.b=0;a.a=.25*Math.cos(div(3.14*a.t_abs,2))+.2*below(Math.abs(1-a.t_abs-a.t1),0);a.a=.25*Math.cos(1.5*a.t_abs)+.7*below(Math.abs(a.t_abs),0);a.xang=3*a.k1;a.yang=1;a.zang=3*a.k1;a.fov=.22;a.monitor=a.t2;\na.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz-=6;a.x=div(a.ox*a.fov,a.oz)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"//Alle Funktionen muessen rel. zu t_rel sein\n\nk1 = cos(time/3);\nk2 = sin(time/2);\n\nt_abs = sample;\nt_rel = sample-time/2.12;\nampl =  cos(t_rel)*5; \n//ampl = 3;\n\nox = sin (t_rel*8) + ampl*sin (t_rel*12) ;\noy = cos (t_rel*13) + ampl*cos (t_rel*11);\noz =  ampl/3;\n\n\n\n\n//r = sqr(sin(t_rel*3.4));\n//g = sqr(sin(t_rel*2.3));\n//b = sqr (cos(t_rel*1.9));\n\nr = 1;\ng = 0.5;\nb = 0;\n\na=0.25*(cos(t_abs*3.14/2)) + 0.2 *below (abs(1-t_abs- t1),0.0);\n//a=0.25*(sin(t_abs*3.14)) + 0.4 *below (abs(1-t_abs-t1), bass_att/1);\na=0.25*(cos(t_abs*1.5)) + 0.7 *below (abs(t_abs),0.0);\n\nxang = k1*3;\nyang = 1;\nzang = 3*k1;\nfov = 0.22;\n\nmonitor = t2;\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.ysw=0;a.tic=0;a.yseg=0;a.ynum=0;a.vt=0;a.xnum=0;a.xseg=0;a.bt=0;a.q1=0;a.rc=0;a.mid_avg=0;a.xsw=0;a.tt=0;a.tin=0;a.ti=0;a.bass_avg=0;a.pi=0;a.vav=0;a.q4=0;a.rd=0;a.oy=0;a.mt=0;a.ra=0;a.treb_avg=0;a.vol=0;a.re=0;a.q2=0;a.q3=0;a.q7=0;a.rb=0;a.ox=0;a.q8=0;","frame_eqs_str":"a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.vol=.333333*(a.bass_att+a.treb_att+a.mid_att);a.ra=.25*div(1,a.tic);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;a.vt+=a.tic*a.vav;a.q1=1.8*a.tt;a.q2=3*a.mt;\na.q3=3*a.bt;a.q4=a.vt;a.rb=.00001<Math.abs(a.rb)?a.rb:.2+.0006*rand(1001);a.rc=.00001<Math.abs(a.rc)?a.rc:.2+.0006*rand(1001);a.rd=.00001<Math.abs(a.rd)?a.rd:.2+.0006*rand(1001);a.re=.00001<Math.abs(a.re)?a.re:.2+.0006*rand(1001);a.ti=2*a.vt;a.cx=.3+.1*Math.sin(a.ti*a.re)+.1*Math.cos(a.ti*a.rc);a.cy=.5+.2*Math.sin(a.ti*a.rb)+.1*Math.cos(a.ti*a.rd);a.q7=6;a.q8=2.8;","pixel_eqs_str":"a.xnum=a.q7;a.ynum=a.q8;a.pi=3.141592654;a.xseg=Math.floor(a.x*a.xnum);a.yseg=Math.floor(a.y*a.ynum);a.xsw=equal(mod(a.xseg+equal(mod(a.yseg,2),0),2),0);a.ysw=equal(mod(a.yseg+1,2),0);a.ox=a.x-a.xseg*div(1,a.xnum);a.ox=.00001<Math.abs(a.xsw)?div(1,a.xnum)-a.ox:a.ox;a.oy=a.y-a.yseg*div(1,a.ynum);a.oy=.00001<Math.abs(a.ysw)?div(1,a.ynum)-a.oy:a.oy;a.dx=above(a.xseg+a.yseg,0)*(a.x-a.ox);a.dy=above(a.xseg+a.yseg,0)*(a.y-a.oy);a.rot*=1-above(a.xseg+a.yseg,0);","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n//zoom = 1;\n\ntic = min(time-tin,.1);\ntin = time;\n\nvol = (bass_att + treb_att + mid_att)*.333333;\n\nra = 1/tic*.25;\n\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\nvt = vt + tic*vav;\n\nq1 = tt*1.8;// wave morph speeds\nq2 = mt*3;\nq3 = bt*3;\n\nq4 = vt; // wave colour cycle\n\nrb = if(rb,rb,.2 + rand(1001)*.001*.6);\nrc = if(rc,rc,.2 + rand(1001)*.001*.6);\nrd = if(rd,rd,.2 + rand(1001)*.001*.6);\nre = if(re,re,.2 + rand(1001)*.001*.6);\n\n\nti = vt*2;\ncx = .3 + .1*sin(ti*re) + .1*cos(ti*rc);\ncy = .5 + .2*sin(ti*rb) + .1*cos(ti*rd);\n\n\nq7 = 6;\nq8 = 2.8;","pixel_eqs_eel":"xnum = q7;\nynum = q8;\npi = 3.141592654;\n\nxseg = int(x*xnum);\nyseg = int(y*ynum);\n\nxsw = equal((xseg+equal(yseg%2,0))%2,0);\nysw = equal((yseg+1)%2,0);\n\n\nox = x - xseg*(1/xnum);\nox = if(xsw,1/xnum - ox,ox);\n\noy = y - yseg*(1/ynum);\noy = if(ysw,1/ynum - oy,oy);\n\ndx = above(xseg+yseg,0)*(x-ox);\ndy = above(xseg+yseg,0)*(y-oy);\n\nrot = rot*(1-above(xseg+yseg,0));\n\n//dx = equal(seg,1)*(x - .5)*2;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz * 0.85);\n  ret_1 = (ret_1 - 0.002);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = (tmpvar_5 * 2.5);\n  uv2_3.y = (tmpvar_6.y + (0.25 * time));\n  uv2_3.x = (tmpvar_7 + (time / 32.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (tmpvar_5 * 2.5);\n  uv3_2.x = tmpvar_8.x;\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\n  crisp_1 = ((texture (sampler_main, uv2_3).xyz + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.5 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (200.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz*.85;\n\n    // darken over time\n    ret -= 0.002;\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\n//float ang1 = atan2(uv1.y, uv1.x);\n//float rad1 = log(length(uv1)-0.1);\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1*2.5);\nuv2.y = uv2.y  +0.25*time;\n//uv2.x = uv2.x  +.0*time;\nuv2.x = uv2.x + time/32;\n\nfloat2 uv3 = float2 (ang/3.14, rad1*2.5);\nuv3.y = uv3.y  +0.08*time ;\n//uv3.x = uv3.x  + time/32;\n\nfloat3 crisp = 1*GetPixel(uv2) + GetPixel(uv3);\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3.5*crisp * pow(rad,1);\n\nfloat mask = saturate(1-200*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(uv);\n\n}"}