{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"g":1,"b":1,"r2":0.5,"g2":0.7,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"additive":1,"r":0.06,"g":0.04,"b":0.11},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.step1=0;a.pos=0;a.xs=0;a.yp=0;a.t1=0;a.scale=0;a.q1=0;a.points=0;a.t8=0;a.cycle=0;a.xq=0;a.third=0;a.sang=0;a.t3=0;a.ys=0;a.step2=0;a.zq=0;a.black=0;a.ang=0;a.t2=0;a.zp=0;a.q2=0;","frame_eqs_str":"a.t1=.5*a.time;a.t2=.33*a.time;a.t3=.23*a.time;a.t8=-1;","point_eqs_str":"a.scale=1+a.q1;a.n=25.132*a.sample;a.third=div(6.283,3);a.cycle=Math.floor(4*a.sample);a.pos=a.t8;a.pos=.00001<Math.abs(equal(a.pos,1))?-1:a.pos+1;a.pos=.00001<Math.abs(equal(4*a.sample-a.cycle,0))?0:a.pos;a.t8=a.pos;a.points=equal(a.pos,0);a.a=equal(a.pos,0)*a.q2;a.xp=.05*Math.sin(a.n)*a.points*a.scale;a.yp=a.pos;a.zp=.05*Math.cos(a.n)*a.points*a.scale;a.ang=div(3.1415,2)-above(a.cycle,.99)*a.third;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.yp*a.cang;\na.yq=a.xp*a.cang-a.yp*a.sang;a.zq=a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=div(3.1415,2);a.step1=equal(a.cycle,2)*a.third;a.step2=equal(a.cycle,3)*a.third*2;a.ang=a.ang+a.step1+a.step2;a.ang=a.ang;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=.23*a.time;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sang+a.zp*a.cang;a.zq=a.yp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;\na.ang=.6*a.time;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.zp+=4.1;a.xs=div(a.xp,a.zp)+.5;a.ys=1.333*div(a.yp,a.zp)+.5;a.x=a.xs;a.y=a.ys;a.black=1-equal(a.pos,0);a.r*=a.black;a.g*=a.black;a.b*=a.black;","init_eqs_eel":"","frame_eqs_eel":"t1=time*0.5;\nt2=time*0.33;\nt3=time*0.23;\nt8=-1","point_eqs_eel":"scale=1+q1;\n\nn=sample*6.283*4;\nthird=6.283/3;\ncycle=int(sample*4);\npos=t8;\npos=if( equal(pos,1) , -1 , pos+1 );\npos=if( equal(sample*4-cycle,0) , 0 , pos);\nt8=pos;\npoints= equal(pos,0);\na=equal(pos,0)*q2;\n\nxp=sin(n) * 0.05 *points *scale;\nyp=pos;\nzp=cos(n) * 0.05 *points *scale;\n\n//rot x\nang=3.1415/2 - above(cycle,0.99) * third;\n\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + yp*cang;\nyq=xp*cang - yp*sang;\nzq=zp;\nxp=xq;yp=yq;zp=zq;\n\n//rot y\nang=3.1415/2;\nstep1=equal(cycle,2)*third;\nstep2=equal(cycle,3)*third*2;\nang=ang+step1+step2;\nang=ang ;\n\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\nang=time*0.23;\nsang=sin(ang);cang=cos(ang);\nxq=xp;;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\nang=time*0.6;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp=zp+4.1;\nxs=xp/zp + 0.5;\nys=yp/zp *1.333 + 0.5;\n\nx=xs;y=ys;\n\n\nblack=1 - equal(pos,0);\nr=r*black;\ng=g*black;\nb=b*black;"},{"baseVals":{"enabled":1,"additive":1,"r":0.06,"g":0.04,"b":0.02},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.step1=0;a.pos=0;a.xs=0;a.yp=0;a.scale=0;a.q1=0;a.points=0;a.t8=0;a.cycle=0;a.xq=0;a.third=0;a.sang=0;a.ys=0;a.step2=0;a.zq=0;a.ang=0;a.zp=0;a.q2=0;","frame_eqs_str":"","point_eqs_str":"a.scale=1+a.q1;a.n=25.132*a.sample;a.third=div(6.283,3);a.cycle=Math.floor(4*a.sample);a.pos=a.t8;a.pos=.00001<Math.abs(equal(a.pos,1))?-1:a.pos+1;a.pos=.00001<Math.abs(equal(4*a.sample-a.cycle,0))?0:a.pos;a.t8=a.pos;a.points=equal(a.pos,0);a.a=equal(a.pos,0)*a.q2;a.xp=.05*Math.sin(a.n)*a.points*a.scale;a.yp=a.pos;a.zp=.05*Math.cos(a.n)*a.points*a.scale;a.ang=div(3.1415,2)-above(a.cycle,.99)*a.third;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.yp*a.cang;\na.yq=a.xp*a.cang-a.yp*a.sang;a.zq=a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=div(3.1415,2);a.step1=equal(a.cycle,2)*a.third;a.step2=equal(a.cycle,3)*a.third*2;a.ang=a.ang+a.step1+a.step2;a.ang=a.ang;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.yp=-a.yp;a.ang=.23*a.time;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sang+a.zp*a.cang;a.zq=a.yp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;\na.zp=a.zq;a.ang=.6*a.time;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.zp+=4.1;a.xs=div(a.xp,a.zp)+.5;a.ys=1.333*div(a.yp,a.zp)+.5;a.x=a.xs;a.y=a.ys;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"scale=1+q1;\n\nn=sample*6.283*4;\nthird=6.283/3;\ncycle=int(sample*4);\npos=t8;\npos=if( equal(pos,1) , -1 , pos+1 );\npos=if( equal(sample*4-cycle,0) , 0 , pos);\nt8=pos;\npoints= equal(pos,0);\na=equal(pos,0)*q2;\n\nxp=sin(n) * 0.05 *points *scale;\nyp=pos;\nzp=cos(n) * 0.05 *points *scale;\n\n//rot x\nang=3.1415/2 - above(cycle,0.99) * third;\n\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + yp*cang;\nyq=xp*cang - yp*sang;\nzq=zp;\nxp=xq;yp=yq;zp=zq;\n\n//rot y\nang=3.1415/2;\nstep1=equal(cycle,2)*third;\nstep2=equal(cycle,3)*third*2;\nang=ang+step1+step2;\nang=ang ;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\nyp=-yp;\nang=time*0.23;\nsang=sin(ang);cang=cos(ang);\nxq=xp;;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\nang=time*0.6;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp=zp+4.1;\nxs=xp/zp + 0.5;\nys=yp/zp *1.333 + 0.5;\n\nx=xs;y=ys;"},{"baseVals":{"enabled":1,"additive":1,"r":0.21,"g":0.12,"b":0.05},"init_eqs_str":"a.xp=0;a.s=0;a.yp=0;a.t1=0;a.advance=0;a.x_screen=0;a.y_screen=0;a.ag=0;a.zp=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(24.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(47.4*a.s)+Math.cos(27.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=1.333*div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.ag=Math.atan(div(a.y-.5,\na.x-.5));","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"\ns=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp*1.333 + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nag=atan( (y-0.5)/(x-0.5) );\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0.61,"g":0.72,"b":0.95},"init_eqs_str":"a.xp=0;a.s=0;a.yp=0;a.t1=0;a.advance=0;a.x_screen=0;a.y_screen=0;a.ag=0;a.zp=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(24.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(47.4*a.s)+Math.cos(27.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=1.333*div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.ag=Math.atan(div(a.y-.5,\na.x-.5));","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"\ns=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp*1.333 + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nag=atan( (y-0.5)/(x-0.5) );\n"}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.index2=0;a.q25=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.q1=0;a.dec_med=0;a.index3=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.rott=0;a.mq23=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.atime=0;a.mq30=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.mq27=0;a.mq25=0;a.mq22=0;a.beat=0;a.vol=0;a.p1=0;a.dx1=0;a.peak=0;a.mq26=0;a.q2=0;a.q27=0;a.p3=0;a.q3=0;a.t0=0;a.rot1=0;a.q28=0;a.q30=0;a.q20=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq30=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq30;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q30=a.mq30;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q1=.4+.4*Math.sin(.006*a.atime);a.q2=.4+.4*Math.cos(.00613828348*a.atime);a.q3=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q3;a.dec_med=pow(.96,\ndiv(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,4);a.index2=mod(a.index2+a.is_beat*bnot(a.index),8);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=\na.is_beat;a.q26=a.bass+a.mid+a.treb;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.rott=div(3.1416*a.p3,2);a.rot1+=a.q26;a.q25=.01*a.rot1;a.q27=8-a.index;a.q28=a.index3;a.dx1=a.dec_med*a.dx1+(1-a.dec_med)*bnot(a.index2);a.q29=a.dx1;a.monitor=a.q29;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;","pixel_eqs_str":"a.rot=0;a.dx=.02*a.q29;a.zoom=1;","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq30=if(above(chng,cthr),rand(1)*.3,mq30);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq1=.4+sin(atime*.006        )*.4;\nq2=.4+cos(atime*.00613828348)*.4;\nq3=.4+sin(atime*.00598593455)*.4;\nmonitor=q3;\ndec_med = pow (0.96, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %4;\nindex2 = (index2 + is_beat*bnot(index))%8;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\n//k1 =  is_beat*bnot(index)*bnot(index2);\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\np3 = dec_med * p3+ (1-dec_med)*p2;\nrott = p3*3.1416/2;\n\nrot1 = rot1 + q26;\nq25 = .01*rot1;\n\nq27 = 8-index;\nq28 = index3;\n\ndx1 = dec_med*dx1 + (1-dec_med)*bnot(index2);\nq29 = dx1;\nmonitor = q29;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;","pixel_eqs_eel":"rot = 0;\ndx = .02*q29;\nzoom = 1;","warp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - vec2(0.5, 0.5));\n  vec2 tmpvar_4;\n  tmpvar_4 = ((tmpvar_3 * texsize.xy) * 0.015);\n  uv_1 = (uv + ((\n    ((clamp ((\n      sin(tmpvar_4)\n     / \n      cos(tmpvar_4)\n    ), vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos((\n      (4.0 * (q2 + 1.0))\n     * tmpvar_4.yx))) * texsize.zw)\n   * 4.0) * (2.0 + q1)));\n  float tmpvar_5;\n  tmpvar_5 = (texture (sampler_noise_hq, (uv_1 / 14.0)).x * 12.0);\n  mat2 tmpvar_6;\n  tmpvar_6[uint(0)].x = cos(tmpvar_5);\n  tmpvar_6[uint(0)].y = -(sin(tmpvar_5));\n  tmpvar_6[1u].x = sin(tmpvar_5);\n  tmpvar_6[1u].y = cos(tmpvar_5);\n  ret_2 = (((0.995 * texture (sampler_main, uv_1).xyz) + vec3(0.01, 0.01, 0.01)) - 0.02);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\n    ((tmpvar_3 * tmpvar_6).xyy * q27)\n   * \n    (texsize.xyy * texsize_noisevol_hq.zww)\n  )) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * q3)) && (ret_2.x <= (q24 * q1)))) {\n    ret_2.y = (ret_2.y - (tmpvar_7.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q1)) && (ret_2.y <= (q25 * q2)))) {\n    ret_2.z = (ret_2.z - (tmpvar_7.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q2)) && (ret_2.z <= (q26 * q3)))) {\n    ret_2.x = (ret_2.x - (tmpvar_7.z * 0.5));\n  };\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_6;\n  tmpvar_6 = (0.1 / (sqrt(\n    dot (tmpvar_5, tmpvar_5)\n  ) + 0.1));\n  vec2 tmpvar_7;\n  float tmpvar_8;\n  tmpvar_8 = (ang / 3.14);\n  tmpvar_7.x = tmpvar_8;\n  tmpvar_7.y = tmpvar_6;\n  uv2_3.y = (tmpvar_6 + (0.1 * time));\n  uv2_3.x = tmpvar_7.x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_8;\n  tmpvar_9.y = (tmpvar_6 * 1.5);\n  uv3_2.y = (tmpvar_9.y + (0.08 * time));\n  uv3_2.x = (tmpvar_8 + (time / 32.0));\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.5 * crisp_1) * rad);\n  float tmpvar_10;\n  tmpvar_10 = clamp ((1.0 - (200.0 * rad)), 0.0, 1.0);\n  ret_4 = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_10)) + (tmpvar_10 * texture (sampler_main, uv).xyz));\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv3_2.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((ret_4.x > (q26 * q3)) && (ret_4.x <= (q23 * q1)))) {\n    ret_4.z = (ret_4.z - (tmpvar_11.x * 0.5));\n  };\n  if (((ret_4.y > (q25 * q1)) && (ret_4.y <= (q22 * q2)))) {\n    ret_4.x = (ret_4.x - (tmpvar_11.y * 0.5));\n  };\n  if (((ret_4.z > (q24 * q2)) && (ret_4.z <= (q21 * q3)))) {\n    ret_4.y = (ret_4.y - (tmpvar_11.z * 0.5));\n  };\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_4;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;\n\nfloat3 noiseVal =.03*(tex2D(sampler_noise_lq, uv*.3+.01*rand_frame));\nnoiseVal = .01;\nfloat3 Feedback = GetBlur1(1-uv);\n\nfloat2 zz = uv1 *texsize.xy *.015;\n//zz =mul(zz,float2x2(_qa));\nzz = zz.yx;\nfloat2 h1 = clamp(tan(zz.yx),-12,12) * cos(4*(q2+1)*zz);\n\nuv.xy += h1*texsize.zw * 4*(2+q1);\n\n\nfloat r = tex2D (sampler_noise_hq,uv/14).x*12;\nfloat2 uv6 = uv1;\nuv6 = mul(uv6, float2x2(cos(r),sin(r),-sin(r),cos(r)));\nfloat3 mus = .1/(sqrt(uv6.y));\n\nfloat3 crisp = tex2D(sampler_main,uv);\n//crisp = lerp(crisp.bgr,crisp.rgb,2*crisp);\nret = .995*crisp+noiseVal-.02;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv6.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q3         && ret.x<= q24*q1        )ret.y -= (noise9).x*.5; \nif(ret.y> q22*q1         && ret.y<= q25*q2        )ret.z -= (noise9).y*.5; \nif(ret.z> q23*q2         && ret.z<= q26*q3        )ret.x -= (noise9).z*.5; \n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\n//float ang1 = atan2(uv1.y, uv1.x);\n//float rad1 = log(length(uv1)-0.1);\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1);\nuv2.y = uv2.y  +0.1*time;\nuv2.x = uv2.x  +.0*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1*1.5);\nuv3.y = uv3.y  +0.08*time ;\nuv3.x = uv3.x  + time/32;\n\nfloat3 crisp = 2*GetPixel(uv2) + GetPixel(uv3);\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3.5*crisp * pow(rad,1);\n\nfloat mask = saturate(1-200*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(uv);\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv3.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q30 \n                     );\nif(ret.x> q26*q3         && ret.x<= q23*q1        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q1         && ret.y<= q22*q2        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q2         && ret.z<= q21*q3        )ret.y -= (noise9).z*.5; \n}"}