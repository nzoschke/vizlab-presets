{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"g":1,"b":1,"r2":0.5,"g2":0.7,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"additive":1,"r":0.06,"g":0.04,"b":0.11},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.step1=0;a.pos=0;a.xs=0;a.yp=0;a.t1=0;a.scale=0;a.q1=0;a.points=0;a.t8=0;a.cycle=0;a.xq=0;a.third=0;a.sang=0;a.t3=0;a.ys=0;a.step2=0;a.zq=0;a.black=0;a.ang=0;a.t2=0;a.zp=0;a.q2=0;","frame_eqs_str":"a.t1=.5*a.time;a.t2=.33*a.time;a.t3=.23*a.time;a.t8=-1;","point_eqs_str":"a.scale=1+a.q1;a.n=25.132*a.sample;a.third=div(6.283,3);a.cycle=Math.floor(4*a.sample);a.pos=a.t8;a.pos=.00001<Math.abs(equal(a.pos,1))?-1:a.pos+1;a.pos=.00001<Math.abs(equal(4*a.sample-a.cycle,0))?0:a.pos;a.t8=a.pos;a.points=equal(a.pos,0);a.a=equal(a.pos,0)*a.q2;a.xp=.05*Math.sin(a.n)*a.points*a.scale;a.yp=a.pos;a.zp=.05*Math.cos(a.n)*a.points*a.scale;a.ang=div(3.1415,2)-above(a.cycle,.99)*a.third;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.yp*a.cang;\na.yq=a.xp*a.cang-a.yp*a.sang;a.zq=a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=div(3.1415,2);a.step1=equal(a.cycle,2)*a.third;a.step2=equal(a.cycle,3)*a.third*2;a.ang=a.ang+a.step1+a.step2;a.ang=a.ang;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=.23*a.time;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sang+a.zp*a.cang;a.zq=a.yp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;\na.ang=.6*a.time;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.zp+=4.1;a.xs=div(a.xp,a.zp)+.5;a.ys=1.333*div(a.yp,a.zp)+.5;a.x=a.xs;a.y=a.ys;a.black=1-equal(a.pos,0);a.r*=a.black;a.g*=a.black;a.b*=a.black;","init_eqs_eel":"","frame_eqs_eel":"t1=time*0.5;\nt2=time*0.33;\nt3=time*0.23;\nt8=-1","point_eqs_eel":"scale=1+q1;\n\nn=sample*6.283*4;\nthird=6.283/3;\ncycle=int(sample*4);\npos=t8;\npos=if( equal(pos,1) , -1 , pos+1 );\npos=if( equal(sample*4-cycle,0) , 0 , pos);\nt8=pos;\npoints= equal(pos,0);\na=equal(pos,0)*q2;\n\nxp=sin(n) * 0.05 *points *scale;\nyp=pos;\nzp=cos(n) * 0.05 *points *scale;\n\n//rot x\nang=3.1415/2 - above(cycle,0.99) * third;\n\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + yp*cang;\nyq=xp*cang - yp*sang;\nzq=zp;\nxp=xq;yp=yq;zp=zq;\n\n//rot y\nang=3.1415/2;\nstep1=equal(cycle,2)*third;\nstep2=equal(cycle,3)*third*2;\nang=ang+step1+step2;\nang=ang ;\n\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\nang=time*0.23;\nsang=sin(ang);cang=cos(ang);\nxq=xp;;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\nang=time*0.6;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp=zp+4.1;\nxs=xp/zp + 0.5;\nys=yp/zp *1.333 + 0.5;\n\nx=xs;y=ys;\n\n\nblack=1 - equal(pos,0);\nr=r*black;\ng=g*black;\nb=b*black;"},{"baseVals":{"enabled":1,"additive":1,"r":0.06,"g":0.04,"b":0.02},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.step1=0;a.pos=0;a.xs=0;a.yp=0;a.scale=0;a.q1=0;a.points=0;a.t8=0;a.cycle=0;a.xq=0;a.third=0;a.sang=0;a.ys=0;a.step2=0;a.zq=0;a.ang=0;a.zp=0;a.q2=0;","frame_eqs_str":"","point_eqs_str":"a.scale=1+a.q1;a.n=25.132*a.sample;a.third=div(6.283,3);a.cycle=Math.floor(4*a.sample);a.pos=a.t8;a.pos=.00001<Math.abs(equal(a.pos,1))?-1:a.pos+1;a.pos=.00001<Math.abs(equal(4*a.sample-a.cycle,0))?0:a.pos;a.t8=a.pos;a.points=equal(a.pos,0);a.a=equal(a.pos,0)*a.q2;a.xp=.05*Math.sin(a.n)*a.points*a.scale;a.yp=a.pos;a.zp=.05*Math.cos(a.n)*a.points*a.scale;a.ang=div(3.1415,2)-above(a.cycle,.99)*a.third;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.yp*a.cang;\na.yq=a.xp*a.cang-a.yp*a.sang;a.zq=a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=div(3.1415,2);a.step1=equal(a.cycle,2)*a.third;a.step2=equal(a.cycle,3)*a.third*2;a.ang=a.ang+a.step1+a.step2;a.ang=a.ang;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.yp=-a.yp;a.ang=.23*a.time;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sang+a.zp*a.cang;a.zq=a.yp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;\na.zp=a.zq;a.ang=.6*a.time;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.zp+=4.1;a.xs=div(a.xp,a.zp)+.5;a.ys=1.333*div(a.yp,a.zp)+.5;a.x=a.xs;a.y=a.ys;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"scale=1+q1;\n\nn=sample*6.283*4;\nthird=6.283/3;\ncycle=int(sample*4);\npos=t8;\npos=if( equal(pos,1) , -1 , pos+1 );\npos=if( equal(sample*4-cycle,0) , 0 , pos);\nt8=pos;\npoints= equal(pos,0);\na=equal(pos,0)*q2;\n\nxp=sin(n) * 0.05 *points *scale;\nyp=pos;\nzp=cos(n) * 0.05 *points *scale;\n\n//rot x\nang=3.1415/2 - above(cycle,0.99) * third;\n\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + yp*cang;\nyq=xp*cang - yp*sang;\nzq=zp;\nxp=xq;yp=yq;zp=zq;\n\n//rot y\nang=3.1415/2;\nstep1=equal(cycle,2)*third;\nstep2=equal(cycle,3)*third*2;\nang=ang+step1+step2;\nang=ang ;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\nyp=-yp;\nang=time*0.23;\nsang=sin(ang);cang=cos(ang);\nxq=xp;;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\nang=time*0.6;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp=zp+4.1;\nxs=xp/zp + 0.5;\nys=yp/zp *1.333 + 0.5;\n\nx=xs;y=ys;"},{"baseVals":{"enabled":1,"additive":1,"r":0.21,"g":0.12,"b":0.05},"init_eqs_str":"a.xp=0;a.s=0;a.yp=0;a.t1=0;a.advance=0;a.x_screen=0;a.y_screen=0;a.ag=0;a.zp=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(24.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(47.4*a.s)+Math.cos(27.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=1.333*div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.ag=Math.atan(div(a.y-.5,\na.x-.5));","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"\ns=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp*1.333 + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nag=atan( (y-0.5)/(x-0.5) );\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0.61,"g":0.72,"b":0.95},"init_eqs_str":"a.xp=0;a.s=0;a.yp=0;a.t1=0;a.advance=0;a.x_screen=0;a.y_screen=0;a.ag=0;a.zp=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(24.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(47.4*a.s)+Math.cos(27.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=1.333*div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.ag=Math.atan(div(a.y-.5,\na.x-.5));","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"\ns=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp*1.333 + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nag=atan( (y-0.5)/(x-0.5) );\n"}],"init_eqs_str":"a.index2=0;a.q25=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.q1=0;a.dec_med=0;a.index3=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.beat=0;a.p1=0;a.dx1=0;a.peak=0;a.q2=0;a.q27=0;a.p3=0;a.q3=0;a.t0=0;a.rot1=0;a.q28=0;a.q20=0;","frame_eqs_str":"a.dec_med=pow(.96,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,4);a.index2=mod(a.index2+a.is_beat*bnot(a.index),8);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.q20=a.avg;a.q21=\na.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.rott=div(3.1416*a.p3,2);a.rot1+=a.q26;a.q25=.01*a.rot1;a.q27=8-a.index;a.q28=a.index3;a.dx1=a.dec_med*a.dx1+(1-a.dec_med)*bnot(a.index2);a.q29=a.dx1;a.monitor=a.q29;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;","pixel_eqs_str":"a.rot=0;a.dx=.02*a.q29;a.zoom=1;","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %4;\nindex2 = (index2 + is_beat*bnot(index))%8;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\n//k1 =  is_beat*bnot(index)*bnot(index2);\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\np3 = dec_med * p3+ (1-dec_med)*p2;\nrott = p3*3.1416/2;\n\nrot1 = rot1 + q26;\nq25 = .01*rot1;\n\nq27 = 8-index;\nq28 = index3;\n\ndx1 = dec_med*dx1 + (1-dec_med)*bnot(index2);\nq29 = dx1;\nmonitor = q29;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;","pixel_eqs_eel":"rot = 0;\ndx = .02*q29;\nzoom = 1;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) * exp(\n    (-2.0 * dot (((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29)))\n  )) - 0.003);\n  vec3 tmpvar_2;\n  tmpvar_2 = max (ret_1, (texture (sampler_main, uv).xyz * 0.3));\n  ret_1 = tmpvar_2;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = tmpvar_2;\n  ret = tmpvar_3.xyz;\n }","comp":"float sw1;\nvec2 xlat_mutableuv2;\n shader_body { \n  sw1 = float((rand_preset.x >= 0.4));\n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((0.2 / rad) + (time / 4.0));\n  tmpvar_3.y = (ang / 3.14);\n  xlat_mutableuv2 = (tmpvar_3 * 2.0);\n  vec2 tmpvar_4;\n  tmpvar_4 = sin(((\n    (xlat_mutableuv2 * 3.141)\n   / 2.0) + (time * 0.1)));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noise_hq, (xlat_mutableuv2 + sqrt(dot (tmpvar_4, tmpvar_4))));\n  vec2 tmpvar_6;\n  tmpvar_6.x = (1.0 - uv.x);\n  tmpvar_6.y = uv.y;\n  ret_2 = (texture (sampler_main, uv).xyz + texture (sampler_main, tmpvar_6).xyz);\n  uv_1 = (uv + ((\n    (((sw1 * rad) * (tmpvar_5.xy - 0.5)) / 2.0)\n   * \n    float((tmpvar_5.x <= rand_preset.y))\n  ) * sw1));\n  vec2 tmpvar_7;\n  tmpvar_7.x = (1.0 - uv_1.x);\n  tmpvar_7.y = uv_1.y;\n  ret_2 = (ret_2 + ((\n    ((((texture (sampler_blur2, uv_1).xyz * scale2) + bias2) + ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)) * min ((0.5 + (treb_att / 4.0)), 2.0))\n   * \n    (1.0 + sw1)\n  ) * clamp (\n    (1.0 - (dot (ret_2, vec3(0.32, 0.49, 0.29)) / 2.0))\n  , 0.0, 1.0)));\n  ret_2 = (ret_2 + (float(\n    !(bool(sw1))\n  ) * vec3((0.2 * \n    ((0.5 + ((uv.x - 0.5) * q1)) + ((uv.y - 0.5) * q2))\n  ))));\n  vec3 tmpvar_8;\n  tmpvar_8 = mix ((ret_2 * (\n    (hue_shader * 2.0)\n   - 1.0)), ret_2, vec3(dot (ret_2, vec3(0.32, 0.49, 0.29))));\n  ret_2 = tmpvar_8;\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = tmpvar_8;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"sampler sampler_pw_noise_lq;\nfloat dx,dy,rad1,mask1;\nfloat2 uv0, uv1,uv4,rsk, Kugel1,dz1;\n\nshader_body {\nuv0 = uv;\n\nfloat2 uv1 = float2(uv.x,uv.y+texsize.w*3);\nret = GetPixel(uv1);\n\nfloat fak = exp(-2*lum(GetBlur2(uv_orig)));\nret = (GetBlur2(uv))*fak-.003 ;\n\nfloat3 add = GetPixel(uv)*.3;\nret = max(ret,add);\n//ret = 0;\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\nfloat2 uv0, uv1, uv2,uv4,rsk,dz1,Kugel1;;\nstatic const float sw1 =  (rand_preset.x) >= .4;\nstatic const float sw2 =  (rand_preset.y);\n\nshader_body {\nuv0 = uv;\nuv2 = float2(.2/rad+time/4,ang/3.14)*2;\nfloat mod = length(sin(uv2*3.141/2+time*.1));\nfloat2 noise = tex2D (sampler_noise_hq,uv2+mod).rg;\nfloat mask = (noise.r <= sw2);\nfloat2 rohr = sw1*rad * (noise-.5) /2*mask;\n\nuv1 = float2(1-uv.x,uv.y);\nret =  GetPixel(uv)+GetPixel(uv1);\n\nfloat3 back = .2*(.5+(uv.x-.5)*q1+(uv.y-.5)*q2);\nuv+= rohr * sw1;\n\nuv1 = float2(1-uv.x,uv.y);\nret += (GetBlur2(uv) + GetBlur2(uv1)) *min(.5+treb_att/4,2) *(1+1*sw1) * saturate(1-lum(ret)/2);\nret += !sw1*back;\nret = lerp(ret*(hue_shader*2-1),ret,lum(ret));;\n//ret = GetPixel(uv);\n}"}