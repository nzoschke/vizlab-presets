{"version":2,"baseVals":{"rating":5,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":32.544,"warpscale":9.738,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.005,"ob_r":0.01,"ob_a":0.6,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1,"mv_r":0.39,"mv_g":0.44,"mv_b":0.9,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":15,"additive":1,"textured":1,"rad":0.13478,"tex_zoom":1.62835,"r":0.3,"g":0.8,"b":1,"a":0.08,"g2":0.5,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":11,"additive":1,"textured":1,"rad":0.1016,"r":0.3,"g":0.6,"b":1,"a":0.38,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":10,"additive":1,"rad":0.94761,"r":0.5,"g":0.2,"b":0.8,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.a=a.mid_att*a.mid_att*a.mid*.002;","init_eqs_eel":"","frame_eqs_eel":"a=mid_att*mid_att*mid*0.002"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.01,"tex_zoom":0.04027,"g":0.2,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.1*a.time;a.a=a.mid*a.mid_att;a.a=Math.min(a.a,1);a.a=1-.4*a.a*above(a.treb,.9);","init_eqs_eel":"","frame_eqs_eel":"ang=time*0.1;\na=mid*mid_att;\na=min(a,1);\na=1-a*0.4 * above(treb,0.9)"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0.3,"g":0.7},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.fade=0;a.spark=0;a.r1=0;a.g2=0;a.xq=0;a.flip=0;a.ys=0;a.zq=0;a.r2=0;a.ang=0;a.b2=0;a.zp=0;a.phase=0;a.g1=0;a.b1=0;","frame_eqs_str":"","point_eqs_str":"a.n=6.283*a.sample;a.flip+=1;a.flip*=below(a.flip,2);a.phase=Math.sin(3*a.n)*Math.sin(7.9*a.n)*Math.sin(16.7*a.n)*Math.sin(63.5*a.n)*6;a.xp=Math.sin(a.n+a.phase);a.yp=Math.cos(a.n+a.phase);a.zp=0;a.ang=2*a.n+a.phase;a.xq=a.xp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.r1=.1;a.g1=.3;a.b1=1;a.r2=.7;a.g2=.1;a.b2=1;a.fade=.5*a.xq+.5;a.r=a.r1*a.fade+a.r2*(1-a.fade);a.g=a.g1*a.fade+a.g2*(1-a.fade);a.b=a.b1*a.fade+a.b2*(1-a.fade);\na.ang=.1*a.time;a.xp=a.xq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);a.yp=a.yq;a.zp=a.xq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.ang=.17*a.time;a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.zq+=3.1;a.xs=div(a.xq,a.zq);a.ys=div(a.yq,a.zq);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=.3*pow(.5*Math.sin(4*a.n+a.time)+.5,2);a.spark=Math.sin(35*a.phase);a.r=.00001<Math.abs(above(a.spark,.93))?.6:a.r;a.g=.00001<Math.abs(above(a.spark,.93))?.8:a.g;a.b=.00001<Math.abs(above(a.spark,\n.93))?1:a.b;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\n\nxp=sin(n+phase);\nyp=cos(n+phase);\nzp=0;\n\n//rotate on y during draw\nang=n*2+phase;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\nr1=0.1;g1=0.3;b1=1;\nr2=0.7;g2=0.1;b2=1.0;\nfade=xq*0.5 + 0.5;\nr=r1*fade + r2*(1-fade);\ng=g1*fade + g2*(1-fade);\nb=b1*fade + b2*(1-fade);\n\n//rotation;\nang=time*0.1;\nxp=xq*sin(ang) + zq*cos(ang);\nyp=yq;\nzp=xq*cos(ang) - zq*sin(ang);\n\nang=time*0.17;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n\n//push into viewspace\nzq=zq+3.1;\n\n\n//project into screenspace\nxs=xq/zq;\nys=yq/zq;\n\n\nx=xs+0.5;\ny=ys*1.3+0.5;\na=(1)*0.3 * (pow(sin(n*4+time)*0.5+0.5,2));\n\nspark=sin(phase*35);\nr=if( above(spark,0.93) , 0.6 , r);\ng=if( above(spark,0.93) , 0.8 , g);\nb=if( above(spark,0.93) , 1.0 , b);\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":5.05344},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.fade=0;a.r1=0;a.g2=0;a.xq=0;a.flip=0;a.ys=0;a.zq=0;a.r2=0;a.ang=0;a.b2=0;a.wave=0;a.zp=0;a.phase=0;a.g1=0;a.b1=0;","frame_eqs_str":"","point_eqs_str":"a.n=.23*a.sample+.11*a.time;a.flip+=1;a.flip*=below(a.flip,2);a.phase=Math.sin(3*a.n)*Math.sin(7.9*a.n)*Math.sin(16.7*a.n)*Math.sin(63.5*a.n)*6;a.xp=Math.sin(a.n+a.phase);a.yp=Math.cos(a.n+a.phase);a.zp=0;a.ang=2*a.n+a.phase;a.xq=a.xp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.r1=.1;a.g1=.3;a.b1=1;a.r2=1;a.g2=.1;a.b2=.5;a.fade=.5*a.xq+.5;a.r=a.r1*a.fade+a.r2*(1-a.fade);a.g=a.g1*a.fade+a.g2*(1-a.fade);a.b=a.b1*a.fade+a.b2*\n(1-a.fade);a.ang=.1*a.time;a.xp=a.xq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);a.yp=a.yq;a.zp=a.xq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.ang=.17*a.time;a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.zq+=3.1;a.xs=div(a.xq,a.zq);a.ys=div(a.yq,a.zq);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.wave=Math.sin(8E3*a.n)*Math.sin(690*a.n)*Math.sin(17E3*a.n)*.5+.5;a.a=a.sample*a.wave*.4;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*0.23+time*0.11;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\n\nxp=sin(n+phase);\nyp=cos(n+phase);\nzp=0;\n\n//rotate on y during draw\nang=n*2+phase;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\nr1=0.1;g1=0.3;b1=1;\nr2=1.0;g2=0.1;b2=0.5;\nfade=xq*0.5 + 0.5;\nr=r1*fade + r2*(1-fade);\ng=g1*fade + g2*(1-fade);\nb=b1*fade + b2*(1-fade);\n\n//rotation;\nang=time*0.1;\nxp=xq*sin(ang) + zq*cos(ang);\nyp=yq;\nzp=xq*cos(ang) - zq*sin(ang);\n\nang=time*0.17;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n\n//push into viewspace\nzq=zq+3.1;\n\n\n//project into screenspace\nxs=xq/zq;\nys=yq/zq;\n\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\nwave=sin(n*8000)*sin(n*690)*sin(n*17000)*0.5+0.5;\n\na=sample*wave*0.4;\n\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.fade=0;a.r1=0;a.g2=0;a.xq=0;a.flip=0;a.ys=0;a.zq=0;a.r2=0;a.ang=0;a.b2=0;a.wave=0;a.zp=0;a.phase=0;a.g1=0;a.b1=0;","frame_eqs_str":"","point_eqs_str":"a.n=.03*a.sample+.01*a.time+2.1;a.flip+=1;a.flip*=below(a.flip,2);a.phase=Math.sin(3*a.n)*Math.sin(7.9*a.n)*Math.sin(16.7*a.n)*Math.sin(63.5*a.n)*6;a.xp=Math.sin(a.n+a.phase);a.yp=Math.cos(a.n+a.phase);a.zp=0;a.ang=2*a.n+a.phase;a.xq=a.xp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.r1=.1;a.g1=.3;a.b1=1;a.r2=1;a.g2=.1;a.b2=.5;a.fade=.5*a.xq+.5;a.r=a.r1*a.fade+a.r2*(1-a.fade);a.g=a.g1*a.fade+a.g2*(1-a.fade);a.b=a.b1*a.fade+a.b2*\n(1-a.fade);a.ang=.1*a.time;a.xp=a.xq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);a.yp=a.yq;a.zp=a.xq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.ang=.17*a.time;a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.zq+=3.1;a.xs=div(a.xq,a.zq);a.ys=div(a.yq,a.zq);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.wave=Math.sin(8E3*a.n)*Math.sin(690*a.n)*Math.sin(17E3*a.n)*.5+.5;a.a=a.sample*a.wave*.4;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*0.03+time*0.01+2.1;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\n\nxp=sin(n+phase);\nyp=cos(n+phase);\nzp=0;\n\n//rotate on y during draw\nang=n*2+phase;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\nr1=0.1;g1=0.3;b1=1;\nr2=1.0;g2=0.1;b2=0.5;\nfade=xq*0.5 + 0.5;\nr=r1*fade + r2*(1-fade);\ng=g1*fade + g2*(1-fade);\nb=b1*fade + b2*(1-fade);\n\n//rotation;\nang=time*0.1;\nxp=xq*sin(ang) + zq*cos(ang);\nyp=yq;\nzp=xq*cos(ang) - zq*sin(ang);\n\nang=time*0.17;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n\n//push into viewspace\nzq=zq+3.1;\n\n\n//project into screenspace\nxs=xq/zq;\nys=yq/zq;\n\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\nwave=sin(n*8000)*sin(n*690)*sin(n*17000)*0.5+0.5;\n\na=sample*wave*0.4;\n\n"},{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*0.03+time*0.01+4.2;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\n\nxp=sin(n+phase);\nyp=cos(n+phase);\nzp=0;\n\n//rotate on y during draw\nang=n*2+phase;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\nr1=0.1;g1=0.3;b1=1;\nr2=1.0;g2=0.1;b2=0.5;\nfade=xq*0.5 + 0.5;\nr=r1*fade + r2*(1-fade);\ng=g1*fade + g2*(1-fade);\nb=b1*fade + b2*(1-fade);\n\n//rotation;\nang=time*0.1;\nxp=xq*sin(ang) + zq*cos(ang);\nyp=yq;\nzp=xq*cos(ang) - zq*sin(ang);\n\nang=time*0.17;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n\n//push into viewspace\nzq=zq+3.1;\n\n\n//project into screenspace\nxs=xq/zq;\nys=yq/zq;\n\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\nwave=sin(n*8000)*sin(n*690)*sin(n*17000)*0.5+0.5;\n\na=sample*wave*0.4;\n\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*0.03+time*0.01+4.2;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\n\nxp=sin(n+phase);\nyp=cos(n+phase);\nzp=0;\n\n//rotate on y during draw\nang=n*2+phase;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\nr1=0.1;g1=0.3;b1=1;\nr2=1.0;g2=0.1;b2=0.5;\nfade=xq*0.5 + 0.5;\nr=r1*fade + r2*(1-fade);\ng=g1*fade + g2*(1-fade);\nb=b1*fade + b2*(1-fade);\n\n//rotation;\nang=time*0.1;\nxp=xq*sin(ang) + zq*cos(ang);\nyp=yq;\nzp=xq*cos(ang) - zq*sin(ang);\n\nang=time*0.17;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n\n//push into viewspace\nzq=zq+3.1;\n\n\n//project into screenspace\nxs=xq/zq;\nys=yq/zq;\n\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\nwave=sin(n*8000)*sin(n*690)*sin(n*17000)*0.5+0.5;\n\na=sample*wave*0.4;\n\n"}],"init_eqs_str":"a.red_rand=0;a.blue_rand=0;","frame_eqs_str":"a.dy-=.0085;a.red_rand=rand(100);a.blue_rand=rand(100);a.wave_r=.01*a.red_rand+.2*Math.sin(1.311*a.time);a.wave_b=.01*a.blue_rand-.2*Math.sin(1.46*a.time);a.wave_g=1-.5*(a.wave_r+a.wave_b)+.2*Math.cos(.789*a.time);","pixel_eqs_str":"","init_eqs_eel":"//decay = 0.94","frame_eqs_eel":"dy = dy -0.0085;\n//bass_effect = max(max(bass,bass_effect)-1.4,0);\n//warp = if(above(bass_effect,0),10,0);\nred_rand = rand(100);\nblue_rand = rand(100);\nwave_r = 0.01*red_rand + 0.2*sin(time*1.311);\nwave_b = 0.01*blue_rand - 0.2*sin(time*1.46);\nwave_g = 1-0.5*(wave_r+wave_b)+ 0.2*cos(time*0.789);","pixel_eqs_eel":"","warp":"","comp":"vec3 xlat_mutableneu;\nvec2 xlat_mutablers0;\nvec2 xlat_mutablerss;\nvec2 xlat_mutableuv2;\n shader_body { \n  vec2 uv_1;\n  vec3 ret1_2;\n  vec3 dots_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  float tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (min (abs(\n    (uv_1.y / uv_1.x)\n  ), 1.0) / max (abs(\n    (uv_1.y / uv_1.x)\n  ), 1.0));\n  float tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\n  tmpvar_6 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\n  tmpvar_6 = (tmpvar_6 + (float(\n    (abs((uv_1.y / uv_1.x)) > 1.0)\n  ) * (\n    (tmpvar_6 * -2.0)\n   + 1.570796)));\n  tmpvar_4 = (tmpvar_6 * sign((uv_1.y / uv_1.x)));\n  if ((abs(uv_1.x) > (1e-08 * abs(uv_1.y)))) {\n    if ((uv_1.x < 0.0)) {\n      if ((uv_1.y >= 0.0)) {\n        tmpvar_4 += 3.141593;\n      } else {\n        tmpvar_4 = (tmpvar_4 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_4 = (sign(uv_1.y) * 1.570796);\n  };\n  xlat_mutablers0.x = ((tmpvar_4 / 3.1416) * 2.0);\n  xlat_mutablers0.y = (0.02 / sqrt(dot (uv_1, uv_1)));\n  vec2 tmpvar_7;\n  tmpvar_7.x = xlat_mutablers0.x;\n  tmpvar_7.y = (xlat_mutablers0.y + time);\n  xlat_mutablerss = (tmpvar_7 * mat2(0.7, -0.7, 0.7, 0.7));\n  vec4 tmpvar_8;\n  tmpvar_8 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \n    (xlat_mutablerss / 32.0)\n  ) - 0.7), vec4(0.0, 0.0, 0.0, 0.0)));\n  vec2 tmpvar_9;\n  tmpvar_9 = abs((fract(\n    (xlat_mutablerss * 8.0)\n  ) - 0.5));\n  vec2 tmpvar_10;\n  tmpvar_10.x = (xlat_mutablers0.x * 2.0);\n  tmpvar_10.y = (xlat_mutablers0.y + (time / 2.0));\n  xlat_mutablerss = (tmpvar_10 * mat2(0.7, -0.7, 0.7, 0.7));\n  vec4 tmpvar_11;\n  tmpvar_11 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \n    (xlat_mutablerss / 32.0)\n  ) - 0.7), vec4(0.0, 0.0, 0.0, 0.0)));\n  vec2 tmpvar_12;\n  tmpvar_12 = abs((fract(\n    (xlat_mutablerss * 8.0)\n  ) - 0.5));\n  xlat_mutablerss = tmpvar_12;\n  dots_3 = (vec3((clamp (\n    (0.04 / sqrt(dot (tmpvar_9, tmpvar_9)))\n  , 0.0, 1.0) * tmpvar_8.x)) + (clamp (\n    (0.04 / sqrt(dot (tmpvar_12, tmpvar_12)))\n  , 0.0, 1.0) * tmpvar_11.x));\n  dots_3 = (dots_3 * clamp ((0.04 / \n    abs(((0.01 / xlat_mutablers0.y) - q6))\n  ), 0.0, 1.0));\n  dots_3 = (dots_3 * (dots_3 * 2.0));\n  xlat_mutableneu = (texture (sampler_main, (uv_1 + 0.5)).xyz + ((texture (sampler_blur1, \n    (uv_1 + 0.5)\n  ).xyz * scale1) + bias1));\n  ret1_2 = max (vec3(0.0, 0.0, 0.0), xlat_mutableneu);\n  xlat_mutableuv2.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\n  xlat_mutableuv2.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\n  xlat_mutableneu = (texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz + ((texture (sampler_blur1, \n    (xlat_mutableuv2 + 0.5)\n  ).xyz * scale1) + bias1));\n  ret1_2 = max (ret1_2, xlat_mutableneu);\n  xlat_mutableuv2.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  xlat_mutableuv2.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  xlat_mutableneu = (texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz + ((texture (sampler_blur1, \n    (xlat_mutableuv2 + 0.5)\n  ).xyz * scale1) + bias1));\n  ret1_2 = max (ret1_2, xlat_mutableneu);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = (ret1_2 + (dots_3 * (1.0 + ret1_2)));\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"","comp_hlsl":"sampler sampler_pw_noise_lq;\n\nfloat3 neu, ret1;\nfloat2 rs2,rs0,rss,uv1,uv2;\nfloat ang2,c,s;\nfloat2x2 rota = float2x2(.7,.7,-.7,.7);\nshader_body\n{\nuv -= 0.5;\nuv *= aspect.xy;    \n\nrs0.x = atan2(uv.y, uv.x)/3.1416*2;\nrs0.y = .02/(length (uv));\nrss = float2 (rs0.x,rs0.y+time);\nrss = mul(rss,float2x2(.7,.7,-.7,.7));\nfloat noise = (tex2D(sampler_pw_noise_lq,rss/32)-.7 >= 0);\nrss = abs(frac(rss*8)-.5);\nfloat3 dots = saturate(.04/length(rss)) *noise;\n\nrss = float2 (rs0.x*2,rs0.y+time/2);\nrss = mul(rss,float2x2(.7,.7,-.7,.7));\nnoise = (tex2D(sampler_pw_noise_lq,rss/32)-.7 >= 0);\nrss = abs(frac(rss*8)-.5);\ndots += saturate(.04/length(rss)) * noise;\n\ndots *= saturate(.04/abs(.01/rs0.y-q6))+.0;\ndots *= dots*2;\n\nfloat3 ret1 = 0;\nint anz = 2;\nint n = 0;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    neu = GetPixel(uv2+.5) + GetBlur1(uv2+.5);\n    ret1 = max(ret1,neu);\nn++;\n}\n\n\nret = ret1 + dots*(1+ret1);\n}\n\n"}