{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1.007,"echo_orient":1,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_a":100,"wave_scale":0.01,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"rot":0.002,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_y":0.12,"ob_size":0.05,"ob_r":0.01,"ib_size":0.26,"mv_x":6.4,"mv_y":18.6,"mv_l":2,"mv_r":0.6,"mv_g":0.59,"mv_b":0.5,"mv_a":0.06},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.bass_effect=0;a.decay=1.1;","frame_eqs_str":"a.wave_g=.35+.3*Math.sin(.325*a.time);a.wave_b=.5+.48*Math.sin(.984*a.time);a.mv_x=64;a.mv_y=48;a.mv_g=.35-.3*Math.sin(.325*a.time);a.mv_b=.5-.48*Math.sin(.984*a.time);a.wave_mystery=div(a.time,8);a.monitor=a.wave_mystery;a.bass_effect=Math.max(Math.max(a.bass,a.bass_att)-1.3,0);a.rot=.003+(.00001<Math.abs(above(a.bass_effect,0))?.8+a.bass_effect:0);a.zoom=1.16+a.bass_effect;","pixel_eqs_str":"a.sy=1+.05*(1-a.rad);a.sx=1+.05*(1-a.rad);","init_eqs_eel":"decay = 1.1;","frame_eqs_eel":"wave_g = 0.35 + 0.3*sin(time*0.325);\nwave_b = 0.5 + 0.48*sin(time*0.984);\nmv_x = 64;\nmv_y = 48;\nmv_g = 0.35 - 0.3*sin(time*0.325);\nmv_b = 0.5 - 0.48*sin(time*0.984);\nwave_mystery = time/8;\nmonitor = wave_mystery;\nbass_effect = max(max(bass,bass_att)-1.3,0);\nrot = 0.003 + if(above(bass_effect,0),0.8+bass_effect,0);\nzoom = 1.16+bass_effect;","pixel_eqs_eel":"sy = 1.0 + 0.05*(1-rad);\nsx = 1.0 + 0.05*(1-rad);","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_fc_main, fract(uv)).xyz;\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_3.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv + (tmpvar_3 * 0.55));\n  vec3 tmpvar_5;\n  tmpvar_5 = mix (ret_1, (1.0 - ret_1), ((0.7 * \n    ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1)\n  ) + (0.2 * texture (sampler_main, uv).xyz)));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (tmpvar_5, ((\n    (tmpvar_5 - (0.1 * ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3)))\n   + \n    (0.1 * ((texture (sampler_blur1, (\n      (tmpvar_4 * 1.25)\n     - 0.125)).xyz * scale1) + bias1))\n  ) + (0.42 * texture (sampler_main, tmpvar_4).xyz)), vec3(0.25, 0.25, 0.25));\n  vec3 x_7;\n  x_7 = (tmpvar_6 - 0.5);\n  ret_1 = (tmpvar_6 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) + 1.25);\n  ret_1 = (ret_1 * (ret_1 * 0.45));\n  ret_1 = (ret_1 * mix (ret_1, (\n    (1.3 * ret_1)\n   * \n    ((((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1)) - (0.25 * ((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2)))\n  ), pow (hue_shader.zxy, ret_1)));\n  ret_1 = (ret_1 + 0.03);\n  ret_1 = (ret_1 * (0.75 * ret_1));\n  ret_1 = (ret_1 * ((hue_shader.zxy * 3.5) - 2.25));\n  ret_1 = (ret_1 * (2.25 - ret_1));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_1;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, frac(uv) ).xyz;\n    \n    // darken (decay) over time\n    ret *= 1.00; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n\n//Code bits by Flexi and Geiss\n\n    float2 d = texsize.zw*8;\n    float1 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) ).y;\n    float1 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) ).y;\n    float2 uv_y = uv+float2(dx,dy)*0.55;  \n    float2 uv_y2 = (uv_y*1.25)-.125;  \n\n  \n    ret = lerp(ret,1-ret,.7*GetBlur1(uv_y)+.2*GetPixel(uv));\n    ret = lerp(ret,ret-.1*GetBlur3(uv_y)+.1*GetBlur1(uv_y2)+.42*GetPixel(uv_y),.25);\n    //ret *= .75;\n    ret *= saturate(length(ret-0.5)*5);\n    //ret = ret.xy;\n    ret = lum(ret);\n    ret += 1.25;\n    ret *= ret*.45;\n    float3 mask = GetBlur3(uv)-GetBlur1(uv)-.25*GetBlur2(uv_y);\n    ret *= lerp(ret,1.3*ret*mask,pow(hue_shader.zxy,ret));\n    ret += .03;\n    ret *= .75*ret;\n    ret *= (hue_shader.zxy*3.5)-2.25;\n    ret *= 2.25-ret;\n\n}"}