{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.504,"wave_mystery":1,"warpanimspeed":0.01,"warpscale":0.01,"fshader":1,"dx":-0.005,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"rad":0.61163,"tex_ang":0.50265,"tex_zoom":0.74192,"g":0.9,"b":0.84,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.004*Math.sin(.5*a.time);","init_eqs_eel":"","frame_eqs_eel":"ang=sin(time*0.5)*0.004"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"additive":1,"scaling":48.45442},"init_eqs_str":"a.s=0;a.xp=0;a.yp=0;a.zp=0;a.t1=0;a.x_screen=0;a.y_screen=0;a.advance=0;","frame_eqs_str":"a.advance+=a.bass_att*a.bass_att*.004;a.advance=.00001<Math.abs(above(a.advance,2))?a.advance-2:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(7.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(5.4*a.s)+Math.sin(17.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(14.4*a.s)+Math.cos(2.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.r=1;a.g=.7;a.b=.2;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ bass_att*bass_att*0.004;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4)+sin(s*17.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=0.7;\nb=0.2;\n\n"},{"baseVals":{"additive":1,"g":0.7,"b":0.02,"enabled":0},"init_eqs_str":"","frame_eqs_str":"advance=advance+mid_att*mid_att*0.003;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_str":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*5.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*7.4)+sin(s*17.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*14.4)+cos(s*1.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=-yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\n//r=0.6;\n//g=1.0;\n//b=0.2;\n\n","init_eqs_eel":"","frame_eqs_eel":"advance=advance+mid_att*mid_att*0.003;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*5.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*7.4)+sin(s*17.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*14.4)+cos(s*1.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=-yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\n//r=0.6;\n//g=1.0;\n//b=0.2;\n\n"},{"baseVals":{"scaling":0.01,"r":0,"g":0,"b":0,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_str":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.14)+cos(s*13.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*2.24)+cos(s*37.4)+cos(s*15.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.14)+cos(s*13.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*2.24)+cos(s*37.4)+cos(s*15.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"a.s=0;a.xp=0;a.yp=0;a.zp=0;a.t1=0;a.x_screen=0;a.y_screen=0;a.advance=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(14.3*a.s)+Math.sin(19.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.34*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(27.4*a.s)+Math.cos(14.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.r=1;a.g=1;a.b=1;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*14.3)+sin(s*19.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.34)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*27.4)+cos(s*14.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;"}],"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.decay=.99;a.zoom=1;a.q1=a.time;a.q2=a.time;a.q3=a.time;","pixel_eqs_str":"a.rot=div(a.ang,200)*a.ang*.5*a.bass;a.warp=div(a.rad,6)+a.treb;a.cx=a.bass*a.rad;a.cy=a.treb*a.rad;","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"decay=.99;\nzoom=1.000;\n\nq1=time;\nq2=time;\nq3=time;","pixel_eqs_eel":"rot=((ang/200)*ang)*(bass*0.5);\nwarp=(rad/6)+treb;\ncx=bass*rad;\ncy=treb*rad;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (clamp (max (vec3(0.0, 0.0, 0.0), \n    max (max (texture (sampler_main, (uv_orig + (vec2(0.0, 1.0) * texsize.zw))).xyz, texture (sampler_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).xyz), max (texture (sampler_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).xyz, texture (sampler_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).xyz))\n  ), 0.0, 1.0) - 0.028);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = mix (texture (sampler_main, uv).xyz, texture (sampler_main, ((vec2(-1.003, 1.003) * \n    (uv - 0.5)\n  ) + 0.5)).xyz, vec3(0.5, 0.5, 0.5));\n  ret_1 = (ret_1 * hue_shader);\n  ret_1 = (ret_1 * ret_1);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz*0;\nfloat3 C = GetPixel(uv_orig)*0;\nfloat2 d = texsize.zw*1;\nfloat3 N = GetPixel(uv_orig+float2(0,1)*d);\nfloat3 E = GetPixel(uv_orig+float2(1,0)*d);\nfloat3 S = GetPixel(uv_orig+float2(0,-1)*d);\nfloat3 W = GetPixel(uv_orig+float2(-1,0)*d);\n\nfloat3 max = max( C, max( max(N,E), max(S,W) ) );\n\nret = saturate(max*1) - 0.028;\n\n}","comp_hlsl":"shader_body\n{\n    float2 uv_echo = (uv - 0.5)*1.003*float2(-1,1) + 0.5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo).xyz, \n                0.50 \n              ); //video echo\n    ret *= 1.00; //gamma\n    ret *= hue_shader; //old hue shader effect\n    ret *= ret; //darken\n}"}