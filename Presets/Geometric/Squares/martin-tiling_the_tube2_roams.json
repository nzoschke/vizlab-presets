{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.354,"wave_scale":5.467,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":32,"mv_y":24,"mv_l":0.05,"mv_r":0.3,"mv_g":0.5,"mv_b":0.4,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"rad":0.08401,"tex_zoom":1.12519,"r":0.8,"b":0.8,"g2":0,"a2":0.1,"border_r":0.7,"border_g":0,"border_b":0,"border_a":1},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.5*Math.sin(div(a.time,1));a.y=.5+.5*Math.cos(div(a.time,1.5));a.r=.5+.3*Math.sin(div(a.time,3));a.g=.5+.3*Math.sin(div(a.time,4));a.b=.5+.3*Math.sin(div(a.time,7));a.rad=.2;","init_eqs_eel":"","frame_eqs_eel":"x = .5 + .5*sin(time/1);\ny = .5 + .5*cos(time/1.5);\n\nr = .5 + .3*sin(time/3);\ng = .5 + .3*sin(time/4);\nb = .5 + .3*sin(time/7);\n\nrad = .2;"},{"baseVals":{"sides":63,"textured":1,"x":0.6,"rad":0.65309,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"a2":0.48,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":14,"additive":1,"textured":1,"x":0.59,"y":0,"rad":1.21524,"ang":0.06283,"tex_ang":0.87965,"tex_zoom":0.51494,"r":0.6,"g":0.5,"b":0.7,"a":0.1,"r2":0.7,"g2":0.5,"b2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5+.3*cos(time/78);\ny = .5+.3*sin(time/78);\n\ntex_zoom = .2 / (sin(time/31)+1.1)\n\n","init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/78);\ny = .5+.3*sin(time/78);\n\ntex_zoom = .2 / (sin(time/31)+1.1)\n\n"},{"baseVals":{"sides":63,"additive":1,"textured":1,"x":0.76,"y":0.75,"rad":0.68636,"ang":0.43982,"tex_ang":0.50266,"tex_zoom":0.6159,"r":0.7,"g":0.7,"b":0.7,"a":0.15,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5+.3*cos(time/59);\ny = .5+.3 *sin(time/59);","init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/59);\ny = .5+.3 *sin(time/59);"}],"waves":[{"baseVals":{"samples":132,"sep":49,"usedots":1,"scaling":0.06708,"smoothing":0.82,"g":0.2,"b":0,"a":0.6,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"t2 = t2 + bass_att;","point_eqs_str":"k1 = (100*sample+time*2)%2;\nk2 = (100*sample+time*5)%2;\n\nx = .5 + .5*sin(sample*76+time/337);\ny = .5 + .5*sin(sample*126);\n\n\nr = .4;\ng = .8;\nb = 1*k2;\n\na = .3*k1;","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (100*sample+time*2)%2;\nk2 = (100*sample+time*5)%2;\n\nx = .5 + .5*sin(sample*76+time/337);\ny = .5 + .5*sin(sample*126);\n\n\nr = .4;\ng = .8;\nb = 1*k2;\n\na = .3*k1;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.q25=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.q5=0;a.vb=0;a.q9=0;a.v=0;a.mm=0;a.tt=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.q4=0;a.q16=0;a.q26=0;a.q19=0;a.q17=0;a.bb=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.vvm=0;a.q32=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.vvt=0;a.q8=0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(a.bass*a.treb*a.mid,2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(a.mid,2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(a.treb,2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=2*a.vvb;a.q2=2*a.vvm;a.q3=2*a.vvt;a.v=2;a.bb-=a.vvb*a.v;a.mm-=a.vvm*a.v;a.tt-=a.vvt*a.v;a.q4=-a.bb;a.q5=-a.mm;a.q6=-a.tt;a.q4=\n5*(a.q1+a.q2+a.q3);a.q5=5*(a.q1+a.q2+a.q3);a.q6=5*(a.q1+a.q2+a.q3);a.q7=5*(a.q1+a.q2+a.q3);a.q8=5*(a.q1+a.q2+a.q3);a.q9=5*(a.q1+a.q2+a.q3);a.q10=5*(a.q1+a.q2+a.q3);a.q11=5*(a.q1+a.q2+a.q3);a.q12=5*(a.q1+a.q2+a.q3);a.q13=5*(a.q1+a.q2+a.q3);a.q14=5*(a.q1+a.q2+a.q3);a.q15=5*(a.q1+a.q2+a.q3);a.q16=5*(a.q1+a.q2+a.q3);a.q17=5*(a.q1+a.q2+a.q3);a.q18=5*(a.q1+a.q2+a.q3);a.q19=5*(a.q1+a.q2+a.q3);a.q20=5*(a.q1+a.q2+a.q3);a.q21=5*(a.q1+a.q2+a.q3);a.q22=5*(a.q1+a.q2+a.q3);a.q23=5*(a.q1+a.q2+a.q3);a.q24=5*(a.q1+\na.q2+a.q3);a.q25=5*(a.q1+a.q2+a.q3);a.q26=5*(a.q1+a.q2+a.q3);a.q27=5*(a.q1+a.q2+a.q3);a.q28=5*(a.q1+a.q2+a.q3);a.q29=5*(a.q1+a.q2+a.q3);a.q30=5*(a.q1+a.q2+a.q3);a.q31=5*(a.q1+a.q2+a.q3);a.q32=5*(a.q1+a.q2+a.q3);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"vb = vb*0.95 + (1-vb)*pow(bass*treb*mid,2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(mid,2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(treb,2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = vvb*2;//0.5 + vb - vvb;\nq2 = vvm*2;//0.5 + vm - vvm;\nq3 = vvt*2;//0.5 + vt - vvt;\nv=2;\nbb = bb - vvb*v;\nmm = mm - vvm*v;\ntt = tt - vvt*v;\nq4 = -bb;\nq5 = -mm;\nq6 = -tt;\nq4=(q1+q2+q3)*5;\nq5=(q1+q2+q3)*5;\nq6=(q1+q2+q3)*5;\nq7=(q1+q2+q3)*5;\nq8=(q1+q2+q3)*5;\nq9=(q1+q2+q3)*5;\nq10=(q1+q2+q3)*5;\nq11=(q1+q2+q3)*5;\nq12=(q1+q2+q3)*5;\nq13=(q1+q2+q3)*5;\nq14=(q1+q2+q3)*5;\nq15=(q1+q2+q3)*5;\nq16=(q1+q2+q3)*5;\nq17=(q1+q2+q3)*5;\nq18=(q1+q2+q3)*5;\nq19=(q1+q2+q3)*5;\nq20=(q1+q2+q3)*5;\nq21=(q1+q2+q3)*5;\nq22=(q1+q2+q3)*5;\nq23=(q1+q2+q3)*5;\nq24=(q1+q2+q3)*5;\nq25=(q1+q2+q3)*5;\nq26=(q1+q2+q3)*5;\nq27=(q1+q2+q3)*5;\nq28=(q1+q2+q3)*5;\nq29=(q1+q2+q3)*5;\nq30=(q1+q2+q3)*5;\nq31=(q1+q2+q3)*5;\nq32=(q1+q2+q3)*5;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2.z = 0.0;\n  tmpvar_2.xy = clamp (((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) - 1.0), vec3(-0.1, -0.1, -0.1), vec3(0.1, 0.1, 0.1)).yx;\n  ret_1 = (clamp (texture (sampler_main, (uv - \n    ((dot (tmpvar_2, vec3(0.32, 0.49, 0.29)) * 0.4) * sin((vec2(0.1, 0.1) * sin(\n      (((uv - vec2(0.5, 0.5)) * aspect.xy) * vec2(127.0, 127.0))\n    ))))\n  )).xyz, 0.0, 1.0) * 0.99);\n  ret_1 = (ret_1 - 0.005);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":"vec2 xlat_mutablers;\n shader_body { \n  vec3 ret1_1;\n  vec2 uv1_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  xlat_mutablers.x = ((ang / 3.14) / 2.0);\n  xlat_mutablers.y = (((q28 * 0.01) / (0.05 + \n    sqrt(dot (tmpvar_3, tmpvar_3))\n  )) + (time / 3.0));\n  vec2 tmpvar_4;\n  tmpvar_4 = fract(xlat_mutablers);\n  vec2 tmpvar_5;\n  tmpvar_5.y = 0.0;\n  tmpvar_5.x = texsize.z;\n  vec2 tmpvar_6;\n  tmpvar_6.x = 0.0;\n  tmpvar_6.y = texsize.w;\n  vec2 tmpvar_7;\n  tmpvar_7.x = (texture (sampler_main, (tmpvar_4 - tmpvar_5)).xyz - texture (sampler_main, (tmpvar_4 + tmpvar_5)).xyz).x;\n  tmpvar_7.y = (texture (sampler_main, (tmpvar_4 - tmpvar_6)).xyz - texture (sampler_main, (tmpvar_4 + tmpvar_6)).xyz).x;\n  uv1_2 = ((0.2 * cos(\n    (fract(xlat_mutablers) * 16.0)\n  )) - (8.0 * tmpvar_7));\n  ret1_1 = (((q30 * \n    ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1)\n  ) * 2.0) + (0.04 / sqrt(\n    dot (uv1_2, uv1_2)\n  )));\n  ret1_1 = (ret1_1 - (roam_sin.zyx * roam_cos.ywx));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (0.8 * ret1_1);\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"sampler sampler_pw_noise_lq;\nsampler sampler_shub1;\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat4 ra = float4 (1,-1,1,1);\nra-=roam_sin*roam_cos.zxyw;\n//uv1 = mul (uv1,ra);\n\nfloat2 tmp = uv1;\n\ntmp.x = .1*sin(uv1.x*127) + .0;\ntmp.y = .1*sin(uv1.y*127) + .0;\nuv1 = tmp;\n\n\n\nfloat3 ret1 = clamp((GetBlur1(uv))-1,-.1,.1);\n\nfloat2 h1 = 1*uv1.xy + 0*uv1.yx;\nfloat3 crisp = tex2D(sampler_main, uv-lum(ret1.yx)*.4*(sin(h1)) ) ;\n\nfloat3 blur = GetBlur1 (uv+float2(1*ret1.x,ret1.y)*0) ;\n\nret = saturate( crisp);\n    \n ret *= 0.99 ; \n  ret -= 0.005;\n}","comp_hlsl":"float2 rs;\nshader_body\n{\n\nfloat2 uv1 = (uv-.5)*aspect.xy;\n\n//Rohr, 4-fach tapeziert\nrs.x = ang/3.14/2;\nrs.y = q28*.01/(.05+length (uv1))+time/3;\n\nuv = frac(rs);\nuv1 = frac(rs);\nfloat3 ret1 = GetBlur1(uv);\n\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nfloat dx = GetPixel (uv-hor) - GetPixel (uv+hor);\nfloat dy = GetPixel (uv-ver) - GetPixel (uv+ver);\nfloat2 dz = float2 (dx,dy);\n\nuv1 = .2*cos(uv1*16) - 8*dz;;\nfloat dots = (.04/length(uv1));\n\n\nret1 = q30*ret1*2 + dots + .0;\nret1-=roam_sin.zyx*roam_cos.ywx;\n\nret = .8*ret1;\n}"}