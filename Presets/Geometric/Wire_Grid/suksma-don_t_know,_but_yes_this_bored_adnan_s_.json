{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.96,"echo_zoom":1.007,"echo_orient":1,"wave_mode":6,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.827,"wave_scale":3.878,"wave_smoothing":0.09,"wave_mystery":0.98,"modwavealphastart":1.03,"modwavealphaend":1.27,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.1989,"dx":0.00001,"dy":0.00001,"warp":0.17914,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.72,"ob_size":0.005,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":5},"shapes":[{"baseVals":{"enabled":1,"sides":12,"num_inst":92,"x":0.8,"rad":0.03469,"ang":1.5707,"tex_ang":1.25664,"tex_zoom":3.0726,"g":1,"b":1,"g2":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.xang=0;a.ampl=0;a.fov=0;a.t1=0;a.yang=0;a.my=0;a.oz=0;a.k1=0;a.t_rel=0;a.k2=0;a.mz=0;a.oy=0;a.mx=0;a.vol=0;a.zang=0;a.sample=0;a.t_abs=0;a.ox=0;","frame_eqs_str":"a.t1=a.time-Math.floor(a.time);a.sample=div(a.instance,a.num_inst);a.t_abs=3*a.sample;a.t_rel=a.sample-div(a.time,5);a.vol=a.bass+a.mid+a.treb;a.ampl=div(2*a.t_abs,2)*a.vol*.5;a.k1=Math.sin(div(a.time,13));a.k2=Math.sin(div(a.time,12));a.ox=a.ampl*Math.sin(a.t_abs*(31+5*a.k1))+Math.sin(div(a.time,25))*(1-a.t_abs)*.4;a.oy=a.ampl*Math.cos(a.t_abs*(31+5*a.k2));a.oz=-1;a.r=sqr(Math.sin(3.4*a.t_rel));a.g=sqr(Math.sin(a.t_rel));a.b=sqr(Math.cos(1.8*a.t_rel));a.xang=div(a.time,9.5);\na.yang=div(0*a.time,7);a.zang=div(-a.time,22);a.fov=.5;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz-=6;a.x=div(a.ox*a.fov,a.oz)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;","init_eqs_eel":"","frame_eqs_eel":"t1 = time - int (time);\nsample = instance/num_inst;\nt_abs = sample*3;\nt_rel = sample-time/5;\nvol=bass+mid+treb;\nampl = 2*t_abs/2*vol*.5;\n\nk1=sin(time/13);\nk2=sin(time/12);\nox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;\noy = ampl*cos (t_abs*(31+5*k2));\noz = -1  ;\n\n\nr = sqr(sin(t_rel*3.4));\ng = sqr(sin(t_rel));\nb = sqr (cos(t_rel*1.8));\n\n//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;\n\nxang = time/9.5;\nyang = 0*time/7;\nzang = -time/22;\nfov = 0.5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":11,"rad":0.03333,"r":0,"g2":0,"border_a":1},"init_eqs_str":"a.vol=0;","frame_eqs_str":"a.x=.01*Math.floor(rand(100))+a.instance-a.instance;a.y=.01*Math.floor(rand(100))+a.instance-a.instance;a.a=1;a.a2=1;a.border_a=0;a.vol=a.bass+a.mid+a.treb;a.rad=div(Math.floor(rand(Math.floor(a.vol))),7)+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01+instance-instance;\ny = int(rand(100))*.01+instance-instance;\n\na = 1;\na2 = 1;\nborder_a = 0;\nvol=bass+mid+treb;\nrad = int(rand(int(vol)))/7+instance-instance;"},{"baseVals":{"sides":100,"textured":1,"rad":0.03333,"r":0,"g2":0,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = int(rand(100))*.01;\ny = int(rand(100))*.01;\n\na = if(above(frame%7,0),0,1);\na2 = if(above(frame%7,0),0,1);\nborder_a = 0;\nvol=bass+mid+treb;\nrad = vol*.1;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01;\ny = int(rand(100))*.01;\n\na = if(above(frame%7,0),0,1);\na2 = if(above(frame%7,0),0,1);\nborder_a = 0;\nvol=bass+mid+treb;\nrad = vol*.1;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"smoothing":0},"init_eqs_str":"a.sw=0;a.osa=0;a.mod=0;a.mo=0;a.q10=0;a.q19=0;a.q20=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*above(a.sample,0);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value1,2)*sign(a.value1)*.5;a.mod=a.value1;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:a.sample;a.y=a.sample;a.x=.5-.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q10;a.r=.5+.5*Math.sin(a.mo);a.g=.5+.5*Math.sin(a.mo+1.0472);a.b=.5+.5*Math.sin(a.mo+2.0944);a.a=1-12*Math.abs(a.mod);a.a=1-a.sw;a.a=Math.max(0,Math.min(a.a,1));a.x=(a.x-.5)*div(a.q19,a.q20)+.5;a.y=(a.y-.5)*div(a.q20,a.q19)+.5;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*above(sample,0);\n\nosa = sample*above(sample,0);\n\nmod = pow(value1*2,2)*sign(value1)*.5;\n\nmod = value1;\nmod = mod*sw;\n\ny = if(sw,osa,sample);\ny = sample;\nx = .5 - mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q10;\n\nr = .5 + sin(mo)*.5;\ng = .5 + sin(mo + 1.0472)*.5;\nb = .5 + sin(mo + 2.0944)*.5;\n\na = 1 - abs(mod)*12;\na = 1-sw;\na = max(0,min(a,1));\n\nx = (x-0.5)*(q19/q20) + 0.5;\ny = (y-0.5)*(q20/q19) + 0.5;\n"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"smoothing":0},"init_eqs_str":"a.sw=0;a.osa=0;a.mod=0;a.mo=0;a.q10=0;a.q19=0;a.q20=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*below(a.sample,1);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value2,2)*sign(a.value2)*.5;a.mod=a.value2;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:a.sample;a.y=a.sample;a.x=.5+.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q10;a.r=.5+.5*Math.sin(a.mo);a.g=.5+.5*Math.sin(a.mo+1.0472);a.b=.5+.5*Math.sin(a.mo+2.0944);a.a=1-12*Math.abs(a.mod);a.a=1-a.sw;a.a=Math.max(0,Math.min(a.a,1));a.x=(a.x-.5)*div(a.q19,a.q20)+.5;a.y=(a.y-.5)*div(a.q20,a.q19)+.5;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*below(sample,1);\n\nosa = sample*above(sample,0);\n\nmod = pow(value2*2,2)*sign(value2)*.5;\n\nmod = value2;\nmod = mod*sw;\n\ny = if(sw,osa,sample);\ny = sample;\nx = .5 + mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q10;\n\nr = .5 + sin(mo)*.5;\ng = .5 + sin(mo + 1.0472)*.5;\nb = .5 + sin(mo + 2.0944)*.5;\n\na = 1 - abs(mod)*12;\na = 1-sw;\na = max(0,min(a,1));\n\nx = (x-0.5)*(q19/q20) + 0.5;\ny = (y-0.5)*(q20/q19) + 0.5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.myvolume=0;","frame_eqs_str":"a.myvolume=div(a.bass+a.treb+a.mid,3);a.wave_r+=1.89*Math.sin(7*a.bass)*a.time;a.wave_b+=3.28*Math.sin(7*a.treb)*a.time;a.wave_g+=2.175*Math.sin(7*a.mid)*a.time;a.wave_x+=.1*Math.sin(.89*a.time);a.wave_y+=.1*Math.sin(.76*a.time);a.ob_r+=5.67*Math.sin(7*a.bass)*a.time;a.ob_b+=9.84*Math.sin(7*a.treb)*a.time;a.ob_g+=1.5*Math.sin(7*a.mid)*4.35*a.time;a.dy=-.008*Math.sin(.5*a.time);a.dx=-.008*Math.cos(.26*a.time);","pixel_eqs_str":"a.rot+=.00001<Math.abs(below(a.rad,.4+.2*Math.sin(div(a.bass,a.mid))))?Math.abs(.02*Math.abs(div(a.bass,a.treb))*Math.sin(a.time)+.01*Math.abs(div(div(a.mid,a.treb),a.bass)))*Math.cos(a.time):0;","init_eqs_eel":"","frame_eqs_eel":"myVolume = (bass+treb+mid)/3;\nwave_r = wave_r + 0.5*sin(7*bass)*3.78*time;\nwave_b = wave_b + 0.5*sin(7*treb)*6.56*time;\nwave_g = wave_g + 0.5*sin(7*mid)*4.35*time;\nwave_x = wave_x + 0.1*sin(0.89*time);\nwave_y = wave_y + 0.1*sin(0.76*time);\nob_r = ob_r + 1.5*sin(7*bass)*3.78*time;\nob_b = ob_b + 1.5*sin(7*treb)*6.56*time;\nob_g = ob_g + 1.5*sin(7*mid)*4.35*time;\ndy = -0.008 * sin(0.5*time);\ndx = -0.008*  cos(0.26*time);","pixel_eqs_eel":"rot = rot + if (below(rad,0.4+ 0.2*sin(bass/mid)), abs(0.02*abs(bass/treb)*sin(time)+ 0.01*abs(mid/treb/bass))*cos(time), 0);","warp":" shader_body { \n  float tmpvar_1;\n  tmpvar_1 = texture (sampler_noise_hq, (((\n    (uv_orig * aspect.xy)\n   * 0.5) + (0.1 * roam_cos).xy) + (0.1 * time))).x;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (mix (texture (sampler_fc_main, uv).xyz, vec3(tmpvar_1), vec3((\n    (1.0 - abs(((\n      dot (vec3(tmpvar_1), vec3(0.32, 0.49, 0.29))\n     + 0.25) - (0.5 + \n      (roam_cos.xy * 0.15)\n    ))).x)\n   - \n    (20.0 * texture (sampler_noise_hq, (tmpvar_1 - ((uv.yx * 8.0) + (time * 0.15)))).x)\n  ))).xxx * 0.95);\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = uv_orig.y;\n  tmpvar_1.y = rad;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 2.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_4.z;\n  tmpvar_5.y = -(tmpvar_3.z);\n  vec2 tmpvar_6;\n  tmpvar_6 = (tmpvar_1 + ((tmpvar_5 * texsize.zw) * 64.0));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.z;\n  tmpvar_7.y = -(tmpvar_3.z);\n  vec2 tmpvar_8;\n  tmpvar_8 = (tmpvar_1 - ((tmpvar_7 * texsize.zw) * 32.0));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = (mix (mix (\n    mix ((mix (mix (vec3(0.2, 0.2, 0.0), vec3(0.6, 0.6, 0.0), vec3(\n      (((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3).y * 8.0)\n    )), vec3(1.0, 1.0, 1.0), vec3((\n      ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1)\n    .y * 6.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_6).y * 2.0)))), vec3(0.0, 1.0, 0.0), vec3((((texture (sampler_blur2, tmpvar_1).xyz * scale2) + bias2).z * 1.2)))\n  , vec3(0.0, 0.0, -3.0), texture (sampler_main, tmpvar_1).zzz), vec3(1.4, 0.0, 0.0), vec3((\n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\n  .x * 2.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_8).x * 2.0))));\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz;\n\n    // mix in code based off of Geiss's\n    float pic = tex2D(sampler_noise_hq, uv_orig*aspect.xy*.5+.1*roam_cos+.1*time).xyz;\n    float lum = lum(pic);\n    float use_it = abs(lum+.25 - (0.5+roam_cos.xy*0.15));\n    float LFNoise = tex2D(sampler_noise_hq, pic-(uv.yx*8 + (time*.15)));\n    use_it = (1-use_it - (20*LFNoise));\n    float tex = lerp(ret, pic, use_it.xxx)*1;\n\nret=tex;\n    // darken (decay) over time\n    ret *= 0.95; //or try: ret -= 0.004;\n}","comp_hlsl":"sampler sampler_manyfish;\nshader_body\n{\n\n //shader by flexi, modified by goody, +uv morph by Phat... I think\n\n    uv = float2(uv_orig.y,rad);\n\n\n    float2 d = texsize.zw*2;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\n    float2 uv_dz = uv + float2(dy.z,-dx.z)*texsize.zw*64;\n    float2 uv_dy = uv - float2(dy.z,-dx.z)*texsize.zw*32;\n\nret = GetPixel(uv).y*0.2;\nret = lerp(float3(0.2,0.2,0),float3(0.6,0.6,0),GetBlur3(uv_dz).y*8); \nret = lerp(ret,float3(1,1,1),GetBlur1(uv_dz).y*6); \nret = lerp(ret,float3(0,0,0),GetPixel(uv_dz).y*2); \n\nret = lerp(ret,float3(0,1,0),GetBlur2(uv).z*1.2);\nret = lerp(ret,float3(0,0,-3),GetPixel(uv).z);\n\nret = lerp(ret,float3(1.4,0,0),GetBlur1(uv_dy).x*2);\nret = lerp(ret,0,GetPixel(uv_dy).x*2);\n\n}\n"}