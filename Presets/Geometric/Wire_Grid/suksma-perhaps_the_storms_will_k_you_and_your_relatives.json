{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.96,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.335,"warpscale":3.928,"zoomexp":2.1,"zoom":0.961,"warp":1.77101,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_a":0.5,"ib_size":0.03,"ib_r":0.34,"ib_g":0.34,"ib_b":0.34,"ib_a":0.1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":0.387,"tex_zoom":1.69447,"g":1,"b":1,"r2":0.8,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":5,"additive":1,"textured":1,"x":0.61,"y":0.41,"rad":0.4817,"ang":1.00531,"tex_zoom":1.10462,"g":1,"b":1,"a":0.4,"r2":0.4,"g2":0.6,"b2":1,"border_a":0},"init_eqs_str":"a.flip=0;a.q7=0;a.vol=0;a.flip=1;","frame_eqs_str":"a.flip=-a.flip;a.x=.2*Math.sin(a.q7)*a.flip+.5;a.y=.26*Math.cos(a.q7)+.5;a.ang=.5*-a.time;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.a*=Math.min(a.vol,1);","init_eqs_eel":"flip=1","frame_eqs_eel":"flip=-flip;\n\nx=sin(q7)*0.2*flip + 0.5;\ny=cos(q7)*0.2*1.3 + 0.5;\nang=-time*0.5;\n\nvol=(bass+mid+treb)*0.25;\nvol=vol*vol;\n\na=a*min(vol,1);"},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":0.28999,"tex_zoom":2.59927,"g":1,"b":1,"r2":1,"g2":0.5,"b2":0.7,"border_a":0},"init_eqs_str":"a.q8=0;a.q7=0;a.sang=0;a.cang=0;a.xn=0;a.yn=0;","frame_eqs_str":"a.x=.2*Math.sin(2*a.q8);a.y=.2*Math.cos(2*a.q8);a.x+=.2;a.ang=1*a.q7;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xn=a.x*a.sang+a.y*a.cang;a.yn=a.x*a.cang-a.y*a.sang;a.x=a.xn+.5;a.y=1.3*a.yn+.5;a.ang=2*-a.time;","init_eqs_eel":"","frame_eqs_eel":"x=sin(q8*2)*0.2;\ny=cos(q8*2)*0.2;\n\n\n\nx=x+0.2;\nang=q7*1;\nsang=sin(ang);cang=cos(ang);\nxn=x*sang + y*cang;\nyn=x*cang - y*sang;\nx=xn + 0.5;\ny=yn*1.3 + 0.5;\n\n\nang=-time*2;"},{"baseVals":{"enabled":1,"sides":15,"additive":1,"rad":0.17987,"g":0.6,"b":0.5,"g2":0.6,"b2":1,"border_a":0},"init_eqs_str":"a.vol=0;","frame_eqs_str":"a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.a=Math.min(a.vol,1);","init_eqs_eel":"","frame_eqs_eel":"vol=(bass+mid+treb)*0.25;\nvol=vol*vol;\n\na=min(vol,1);"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.45,"g":0.65},"init_eqs_str":"a.cang=0;a.n=0;a.xp=0;a.yp=0;a.t1=0;a.advance=0;a.q6=0;a.zn=0;a.q1=0;a.sang=0;a.step3=0;a.step2=0;a.xn=0;a.q4=0;a.tm=0;a.yn=0;a.zp=0;a.q2=0;a.q3=0;a.step=0;","frame_eqs_str":"a.advance+=.006*a.q6;a.advance=.00001<Math.abs(above(a.advance,1))?a.advance-1:a.advance;a.t1=a.advance;","point_eqs_str":"a.n=6.283*a.sample;a.step=128*a.sample;a.step2=6.283*div(Math.floor(a.step),128);a.step3=a.step-Math.floor(a.step);a.tm=6.283*a.t1-3.1415;a.xp=.4*Math.sin(a.step2);a.yp=.4*Math.cos(a.step2);a.zp=3.1415*Math.sin(19.3*a.step2)+.35*a.step3-a.tm;a.zp=.00001<Math.abs(below(a.zp,-3.1415))?a.zp+6.283:a.zp;a.a=.00001<Math.abs(below(a.step3,.36))?0:1;a.a=.00001<Math.abs(above(a.step3,.64))?0:a.a;a.a=.00001<Math.abs(below(a.zp,-3))?0:a.a;a.a=.00001<Math.abs(above(a.zp,3))?0:a.a;a.a*=\n1-a.step3;a.a=Math.min(Math.max(a.a,0),1);a.zp=2*a.zp-3.1415;a.a*=1-div(a.zp+2.1415,6.283);a.a=.00001<Math.abs(below(a.zp,-1.5))?0:a.a;a.a=.00001<Math.abs(above(a.zp,4))?0:a.a;a.zp-=2*a.q4;a.sang=Math.sin(a.q1);a.cang=Math.cos(a.q1);a.xn=a.xp*a.sang+a.yp*a.cang;a.yn=a.xp*a.cang-a.yp*a.sang;a.zn=a.zp;a.xp=a.xn;a.yp=a.yn;a.zp=a.zn;a.sang=Math.sin(a.q2);a.cang=Math.cos(a.q2);a.xn=a.xp*a.sang+a.zp*a.cang;a.yn=a.yp;a.zn=a.xp*a.cang-a.zp*a.sang;a.xp=a.xn;a.yp=a.yn;a.zp=a.zn;a.sang=Math.sin(a.q3);a.cang=\nMath.cos(a.q3);a.xn=a.xp;a.yn=a.yp*a.sang+a.zp*a.cang;a.zn=a.yp*a.cang-a.zp*a.sang;a.xp=a.xn;a.yp=a.yn;a.zp=a.zn;a.zp=2*a.zp+1.55;a.a*=above(a.zp,.75);a.x=div(a.xp,a.zp)+.5;a.y=1.3*div(a.yp,a.zp)+.5;a.a*=.5;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+0.006*q6;\nadvance=if(above(advance,1), advance-1, advance);\nt1=advance;","point_eqs_eel":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 0.4;\nyp=cos(step2) * 0.4;\nzp=sin(step2*19.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;\n\na=a*0.5"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.45,"g":0.65},"init_eqs_str":"a.cang=0;a.n=0;a.xp=0;a.yp=0;a.t1=0;a.advance=0;a.q6=0;a.zn=0;a.q1=0;a.sang=0;a.step3=0;a.step2=0;a.xn=0;a.q4=0;a.tm=0;a.yn=0;a.zp=0;a.q2=0;a.q3=0;a.step=0;","frame_eqs_str":"a.advance+=.005*a.q6;a.advance*=below(a.advance,1);a.t1=a.advance;","point_eqs_str":"a.n=6.283*a.sample;a.step=128*a.sample;a.step2=6.283*div(Math.floor(a.step),128);a.step3=a.step-Math.floor(a.step);a.tm=6.283*a.t1-3.1415;a.xp=.4*Math.sin(a.step2);a.yp=.4*Math.cos(a.step2);a.zp=3.1415*Math.sin(19.3*a.step2)+.35*a.step3-a.tm;a.zp=.00001<Math.abs(below(a.zp,-3.1415))?a.zp+6.283:a.zp;a.a=.00001<Math.abs(below(a.step3,.36))?0:1;a.a=.00001<Math.abs(above(a.step3,.64))?0:a.a;a.a=.00001<Math.abs(below(a.zp,-3))?0:a.a;a.a=.00001<Math.abs(above(a.zp,3))?0:a.a;a.a*=\n1-a.step3;a.a=Math.min(Math.max(a.a,0),1);a.zp=2*a.zp-3.1415;a.a*=1-div(a.zp+2.1415,6.283);a.a=.00001<Math.abs(below(a.zp,-1.5))?0:a.a;a.a=.00001<Math.abs(above(a.zp,4))?0:a.a;a.zp-=2*a.q4;a.sang=Math.sin(a.q1);a.cang=Math.cos(a.q1);a.xn=a.xp*a.sang+a.yp*a.cang;a.yn=a.xp*a.cang-a.yp*a.sang;a.zn=a.zp;a.xp=a.xn;a.yp=a.yn;a.zp=a.zn;a.sang=Math.sin(a.q2);a.cang=Math.cos(a.q2);a.xn=a.xp*a.sang+a.zp*a.cang;a.yn=a.yp;a.zn=a.xp*a.cang-a.zp*a.sang;a.xp=a.xn;a.yp=a.yn;a.zp=a.zn;a.sang=Math.sin(a.q3);a.cang=\nMath.cos(a.q3);a.xn=a.xp;a.yn=a.yp*a.sang+a.zp*a.cang;a.zn=a.yp*a.cang-a.zp*a.sang;a.xp=a.xn;a.yp=a.yn;a.zp=a.zn;a.zp=2*a.zp+1.55;a.a*=above(a.zp,.75);a.x=div(-a.xp,a.zp)+.5;a.y=1.3*div(a.yp,a.zp)+.5;a.a*=.5;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+0.005*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_eel":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 0.4;\nyp=cos(step2) * 0.4;\nzp=sin(step2*19.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=-xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;\na=a*0.5"},{"baseVals":{"thick":1,"additive":1,"r":0.3,"g":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"advance=advance+0.005*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_str":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 1.1;\nyp=cos(step2) * 1.1;\nzp=sin(step2*15.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+0.005*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_eel":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 1.1;\nyp=cos(step2) * 1.1;\nzp=sin(step2*15.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;"},{"baseVals":{"thick":1,"additive":1,"r":0,"g":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"advance=advance+0.004*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_str":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 1.6;\nyp=cos(step2) * 1.6;\nzp=sin(step2*11.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+0.004*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_eel":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 1.6;\nyp=cos(step2) * 1.6;\nzp=sin(step2*11.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;"}],"init_eqs_str":"","frame_eqs_str":"a.wave_x+=.29*(.6*Math.sin(2.121*a.time)+.4*Math.sin(1.621*a.time));a.wave_y+=.29*(.6*Math.sin(1.742*a.time)+.4*Math.sin(2.322*a.time));a.wave_r+=.35*(.6*Math.sin(.823*a.time)+.4*Math.sin(.916*a.time));a.wave_g+=.35*(.6*Math.sin(.9*a.time)+.4*Math.sin(1.023*a.time));a.wave_b+=.35*(.6*Math.sin(.808*a.time)+.4*Math.sin(.949*a.time));a.rot+=.35*(.6*Math.sin(.21*a.time)+.3*Math.sin(.339*a.time));a.cx+=.3*(.6*Math.sin(.374*a.time)+.14*Math.sin(.194*a.time));a.cy+=.37*(.6*Math.sin(.274*\na.time)+.1*Math.sin(.394*a.time));a.ib_r+=.2*Math.sin(.5413*a.time);a.ib_g+=.2*Math.sin(.6459*a.time);a.ib_b+=.2*Math.sin(.7354*a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_x = wave_x + 0.2900*( 0.60*sin(2.121*time) + 0.40*sin(1.621*time) );\nwave_y = wave_y + 0.2900*( 0.60*sin(1.742*time) + 0.40*sin(2.322*time) );\nwave_r = wave_r + 0.350*( 0.60*sin(0.823*time) + 0.40*sin(0.916*time) );\nwave_g = wave_g + 0.350*( 0.60*sin(0.900*time) + 0.40*sin(1.023*time) );\nwave_b = wave_b + 0.350*( 0.60*sin(0.808*time) + 0.40*sin(0.949*time) );\nrot = rot + 0.35*( 0.60*sin(0.21*time) + 0.30*sin(0.339*time) );\ncx = cx + 0.30*( 0.60*sin(0.374*time) + 0.14*sin(0.194*time) );\ncy = cy + 0.37*( 0.60*sin(0.274*time) + 0.10*sin(0.394*time) );\nib_r = ib_r + 0.2*sin(time*0.5413);\nib_g = ib_g + 0.2*sin(time*0.6459);\nib_b = ib_b + 0.2*sin(time*0.7354);","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_main, (uv - (\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((mix (tmpvar_2, \n    (1.0 - tmpvar_2.zyx)\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\n    (1.0 - rad)\n  , 18.0)));\n  ret = tmpvar_3.xyz;\n }","comp":"uniform sampler2D sampler_clouds2;\n shader_body { \n  vec2 uv_1;\n  vec2 uv1_2;\n  uv_1 = (uv * aspect.xy);\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (dot (texture (sampler_main, (uv_1 - tmpvar_3)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv_1 + tmpvar_3)).xyz, vec3(0.32, 0.49, 0.29)));\n  tmpvar_5.y = (dot (texture (sampler_main, (uv_1 - tmpvar_4)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv_1 + tmpvar_4)).xyz, vec3(0.32, 0.49, 0.29)));\n  uv1_2 = ((0.3 * sin(\n    ((uv_1 + (0.02 * time)) * 6.0)\n  )) + (0.2 * tmpvar_5));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_clouds2, (uv_orig + tmpvar_5));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((-2.0 * \n    (0.1 * texture (sampler_main, uv_1))\n  .xyz) + (\n    clamp (((0.004 * q26) / sqrt(dot (uv1_2, uv1_2))), 0.0, 1.0)\n   * vec3(1.0, 0.8, 0.4))) + (0.4 * (tmpvar_6.xyz + \n    (dot (tmpvar_6.xyz, vec3(0.32, 0.49, 0.29)) - 0.7)\n  )));\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\n\nfloat3 noiseVal =lum (tex2D(sampler_noise_lq, corr*uv*.02+ .1*rand_frame));\n\nfloat2 k1 = float2((uv.x), (uv.y));\n\nfloat3 ret1 = GetBlur1(uv) ;\n\nfloat k2 = (20*uv)%2;\n\nfloat2 zz = uv.xy * texsize.xy *.08;\nfloat h1 = (tan(zz.x));\nfloat h2 = (tan(zz.y));\n\nuv.xy -= float2(h1,h2)*texsize.zw * 3;\n\n\nfloat3 crisp = tex2D(sampler_main,uv) + noiseVal/30;\n\ncrisp = lerp (crisp, 1-crisp.zyx, 0.01);\n    \n ret = crisp -.03 - 0.2*pow(1-rad,18);\n}","comp_hlsl":"float2 rs;\nsampler sampler_clouds2;\nfloat4 texsize_clouds2;\nshader_body\n{\nuv *= aspect.xy;\nfloat2 uv1 = (uv-.5);\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nfloat dx = lum(GetPixel (uv-hor)) - lum(GetPixel (uv+hor));\nfloat dy = lum(GetPixel (uv-ver)) - lum(GetPixel (uv+ver));\nfloat2 dz = float2 (dx,dy);\n\nuv1 = .3*sin((uv+.02*time)*6) + .2*dz;\nfloat3 dots = saturate(.004*q26/length(uv1))*float3(1,.8,.4);\n\nfloat3 clouds = (tex2D (sampler_clouds2, uv_orig+dz));\nclouds += lum(clouds)-.7;\n\nfloat3 ret1 = .1*tex2D(sampler_main, uv) ;\n\nret = -2*ret1 + dots  + .4*clouds;\n\n}"}