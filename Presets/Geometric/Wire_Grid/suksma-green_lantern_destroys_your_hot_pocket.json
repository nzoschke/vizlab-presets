{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.51,"echo_zoom":1.813,"echo_alpha":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":2.853,"zoomexp":0.1,"zoom":0.94972,"cx":2,"warp":7.85808,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"mv_x":64,"mv_y":48,"mv_l":1,"mv_r":0.6,"mv_g":0.4,"mv_b":0.4,"mv_a":0.4},"shapes":[{"baseVals":{"x":0.74,"y":0.76,"rad":0.33004,"tex_zoom":1.0303,"r":0.9,"g":0.9,"b":0.9,"a":0.03,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"scale=0.1;\nrepeat=sin(time*0.3)*1+1;\n\nxp=sin(sample*6.283*repeat) * scale;\nyp=cos(sample*6.283*repeat) * scale;\nzp=0;\n\n//arrow shape\n//xp=xp* ( 1+ below(yp,0)*-0.9 );\nscale1=cos(sample*6.283*4*repeat)*0.03+0.97;\nscale1=1- pow(1-scale1,0.5);\nxp=xp*scale1;yp=yp*Scale1;\n\n//spin shape\nang=sample*3.1415*2.2;\nxp2=xp*cos(ang) - zp*sin(ang);\nyp2=yp;\nzp2=xp*sin(ang) + zp*cos(ang);\n\n//spin object\nang=time*2.4;\nxp3=xp2*cos(ang) - zp2*sin(ang);\nyp3=yp2;\nzp3=xp2*sin(ang) + zp2*cos(ang);\n\na=(atan(xp3/zp3))/6.28;\na=abs(a);\n\nzp3=zp3+2.1;\n\nxs=xp3/zp3;\nys=yp3/zp3;\n\nx=xs+0.5;\ny=ys*1.333+0.5","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"scale=0.1;\nrepeat=sin(time*0.3)*1+1;\n\nxp=sin(sample*6.283*repeat) * scale;\nyp=cos(sample*6.283*repeat) * scale;\nzp=0;\n\n//arrow shape\n//xp=xp* ( 1+ below(yp,0)*-0.9 );\nscale1=cos(sample*6.283*4*repeat)*0.03+0.97;\nscale1=1- pow(1-scale1,0.5);\nxp=xp*scale1;yp=yp*Scale1;\n\n//spin shape\nang=sample*3.1415*2.2;\nxp2=xp*cos(ang) - zp*sin(ang);\nyp2=yp;\nzp2=xp*sin(ang) + zp*cos(ang);\n\n//spin object\nang=time*2.4;\nxp3=xp2*cos(ang) - zp2*sin(ang);\nyp3=yp2;\nzp3=xp2*sin(ang) + zp2*cos(ang);\n\na=(atan(xp3/zp3))/6.28;\na=abs(a);\n\nzp3=zp3+2.1;\n\nxs=xp3/zp3;\nys=yp3/zp3;\n\nx=xs+0.5;\ny=ys*1.333+0.5"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.5*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.5*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.wave_b+=.5*(.6*Math.sin(.91*a.time)+.4*Math.sin(.92*a.time));a.zoom+=.013*(.6*Math.sin(.339*a.time)+.4*Math.sin(.276*a.time));a.rot+=.06*(.6*Math.sin(.381*a.time)+.6*Math.sin(.579*a.time));","pixel_eqs_str":"a.zoom+=.07*Math.cos(20*a.rad+2.5*a.time);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.500*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) ); \nwave_g = wave_g + 0.500*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) ); \nwave_b = wave_b + 0.500*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) ); \nzoom = zoom + 0.013*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) ); \nrot = rot + 0.060*( 0.60*sin(0.381*time) + 0.60*sin(0.579*time) );","pixel_eqs_eel":"zoom=zoom+0.07*cos(rad*20+time*2.5);","warp":" shader_body { \n  vec2 uv_1;\n  vec2 zz_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - vec2(0.5, 0.5));\n  mat2 tmpvar_4;\n  tmpvar_4[uint(0)] = _qb.xy;\n  tmpvar_4[1u] = _qb.zw;\n  zz_2 = (((tmpvar_3 * texsize.xy) * q28) * tmpvar_4);\n  uv_1 = (uv + ((\n    clamp ((sin(zz_2.yx) / cos(zz_2.yx)), vec2(-16.0, -16.0), vec2(16.0, 16.0))\n   * \n    cos(((zz_2 * 2.0) * q9))\n  ) * 0.01));\n  float tmpvar_5;\n  tmpvar_5 = (texture (sampler_noise_hq, ((uv_1 / 6.0) + (0.001 * time))).x * 16.0);\n  float tmpvar_6;\n  tmpvar_6 = sin(tmpvar_5);\n  float tmpvar_7;\n  tmpvar_7 = cos(tmpvar_5);\n  mat2 tmpvar_8;\n  tmpvar_8[uint(0)].x = tmpvar_7;\n  tmpvar_8[uint(0)].y = -(tmpvar_6);\n  tmpvar_8[1u].x = tmpvar_6;\n  tmpvar_8[1u].y = tmpvar_7;\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = (((texture (sampler_main, uv_1).xyz + \n    (0.02 * vec3((inversesqrt((tmpvar_3 * tmpvar_8).y) * ((0.5 - q30) + (0.03 * q26)))))\n  ) - (0.3 * \n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n  )) - (rad / 10.0));\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  float tmpvar_3;\n  tmpvar_3 = ((10.0 * bass) * ((bass * bass_att) * bass_att));\n  vec2 tmpvar_4;\n  tmpvar_4.x = roam_cos.x;\n  tmpvar_4.y = roam_sin.x;\n  uv_1 = (uv + ((\n    normalize((texture (sampler_noise_lq, ((\n      ((floor((uv * vec2(tmpvar_3))) / tmpvar_3) + rand_preset.xy)\n     * aspect.xy) + (tmpvar_4 * \n      (0.00023 * (bass * tmpvar_3))\n    ))) - 0.5).xy)\n   * 0.033) * (\n    (1.5 * bass)\n   * rad)));\n  ret_2.x = ((texture (sampler_main, uv_1).z * 1.4) - (bass * 0.04));\n  ret_2.z = ((texture (sampler_main, uv_1).y * 1.4) - (treb * 0.04));\n  ret_2.y = ((texture (sampler_main, uv_1).x * 1.4) - (mid * 0.04));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body {\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;\n\n\nfloat2 zz = uv1 *texsize.xy *q28;\n\nzz =mul(zz,float2x2(_qb));\n\nfloat2 h1 = clamp(tan(zz.yx),-16,16) * cos(zz*2*q9);\n\nuv.xy += h1 * .01;\n\nfloat r = tex2D (sampler_noise_hq,uv/6 + .001*time).x*16;\nfloat2 uv6 = uv1;\nfloat sr = sin(r); float cr = cos(r);\nuv6 = mul(uv6, float2x2(cr,sr,-sr,cr));\nfloat3 mus = 1/(sqrt(uv6.y)) * ((.5-q30)+.03*q26);\n\nfloat3 crisp = tex2D(sampler_main,uv) + .02*mus;\n//crisp = lerp(crisp, crisp.bgr, saturate(crisp));\nret = crisp-.0 -.3* GetBlur3(uv) - rad/10 ;\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\n\nshader_body\n{\n    float tiles = 10*((bass*bass*bass_att*bass_att));\n    //float tiles = 100;\n  \n    float2 uv2 = float2( floor(uv.x*tiles), floor(uv.y*tiles) )/tiles \n               + rand_preset.xy;\n    float2 delta = float2(roam_cos.x, roam_sin.x)*(0.00+0.00023*(bass*tiles));\n  \n//    float2 delta = float2(roam_cos.x, roam_sin.x)*(0.08+0.2*(bass+bass_att)*tiles);\n  \n    float4 N = tex2D( sampler_noise_lq, uv2 * aspect.xy + delta ) - 0.5;\n    uv += normalize(N.xy)*0.033*(1.5*bass*rad);\n\n    ret.x = tex2D(sampler_main, uv).z*1.4 - 0.4*(0.1*bass);    \n  ret.z = tex2D(sampler_main, uv).y*1.4 - 0.4*(0.1*treb);    \n  ret.y = tex2D(sampler_main, uv).x*1.4 - 0.4*(0.1*mid);    \n}"}