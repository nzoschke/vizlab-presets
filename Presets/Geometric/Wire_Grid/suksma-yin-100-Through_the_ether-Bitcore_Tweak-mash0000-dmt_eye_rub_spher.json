{"version":2,"baseVals":{"rating":5,"gammaadj":2.05,"decay":0.975,"echo_zoom":0.997,"echo_orient":3,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":100,"wave_scale":1.005,"wave_smoothing":0,"modwavealphastart":2,"modwavealphaend":2,"fshader":1,"zoom":0.9999,"warp":0.0783,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.5,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0.1},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.maxdbass=0;a.f=0;a.dbass=0;a.q1=0;a.cheat=0;a.lastbeat=0;a.interval=0;a.beat_avg=0;a.q4=0;a.pbass=0;a.t=0;a.b=0;a.trig=0;a.beat=0;a.q2=0;a.q3=0;a.m=0;a.max_bass=0;a.endframe=0;a.sure=0;a.max_bass=1.2;","frame_eqs_str":"a.wave_r=a.mv_b;a.wave_b=a.mv_g;a.wave_g=a.mv_r;a.b=Math.max(a.bass-1,0);a.m=Math.max(a.mid-1,0);a.t=Math.max(a.treb-1,0);a.mv_r=.6*Math.abs(Math.sin(2.6*a.time+1.23+Math.cos(4.87*a.time+2.145)))+div(a.b,30);a.mv_g=.6*Math.abs(Math.sin(4.451*a.time+2.89+Math.cos(3.74*a.time+.78)))+div(a.m,30);a.mv_b=.6*Math.abs(Math.sin(3.845*a.time+1.23+Math.cos(2.6*a.time+3)))+div(a.t,30);a.q1=3.14*Math.cos(1.45*a.time+1.54+Math.cos(.1*a.bass_att+a.time+3.22));a.q2=3.14*Math.cos(2.4*a.time+\n2.69+Math.cos(.1*a.bass_att+a.time+.65));a.q3=mod(a.time,50);a.f=.00001<Math.abs(equal(a.endframe,0))?1:0;a.beat_avg=.00001<Math.abs(equal(a.beat_avg,0))?a.bass:a.beat_avg;a.beat_avg=div(a.beat_avg+a.bass,2);a.max_bass=.00001<Math.abs(a.beat*above(a.f*a.bass_att,a.max_bass))?.99*a.bass_att:a.max_bass;a.max_bass=.00001<Math.abs(equal(mod(a.frame,3E3),0))?.8*a.max_bass:.9999*a.max_bass;a.max_bass=.00001<Math.abs(above(a.max_bass,10*a.beat_avg))?10*a.beat_avg:a.max_bass;a.trig=.00001<Math.abs(equal(a.beat,\n1)*above(a.bass_att,a.max_bass))?1:0;a.endframe=.00001<Math.abs(equal(a.trig,1)*equal(a.endframe,0))?a.frame+4*Math.min(a.interval,a.fps):a.endframe;a.trig=.00001<Math.abs(equal(a.frame,a.endframe))?0:a.trig;a.endframe=.00001<Math.abs(above(a.frame,a.endframe))?0:a.endframe;a.q4=.00001<Math.abs(above(a.endframe,0))?1:0;a.wave_a=0;a.rot=.1*Math.sin(1.53*a.time+Math.cos(4.676*a.time+3.43));a.rot*=1+.4*a.q4;a.ob_size=.3+.7*Math.abs(Math.cos(2.45*a.time+1.566+Math.sin(5*a.time+2.43)));a.ob_r=a.mv_r*div(Math.floor(rand(100)),\n100);a.ob_g=a.mv_g*div(Math.floor(rand(100)),100);a.ob_b=a.mv_b*div(Math.floor(rand(100)),100);a.ob_a=.05*Math.abs(Math.cos(2.45*a.time+1.566+Math.sin(a.time+2)));a.mv_x=.00001<Math.abs(equal(a.q4,1))?54+10*Math.cos(10*a.time):64;a.zoom=.00001<Math.abs(equal(Math.floor(rand(40+60*a.q4)),25))?1.6:a.zoom;a.sure=.00001<Math.abs(equal(a.sure,0))?.6:a.sure;a.interval=.00001<Math.abs(equal(a.interval,0))?40:a.interval;a.lastbeat=.00001<Math.abs(equal(a.lastbeat,0))?a.frame-a.fps:a.lastbeat;a.dbass=div(a.bass-\na.pbass,a.fps);a.beat=above(a.dbass,.6*a.maxdbass)*above(a.frame-a.lastbeat,div(a.fps,3));a.sure=.00001<Math.abs(a.beat*below(Math.abs(a.frame-(a.interval+a.lastbeat)),div(a.fps,5)))?Math.min(.095+a.sure,1):a.beat*(a.sure-.095)+(1-a.beat)*a.sure*.9996;a.sure=Math.max(.5,a.sure);a.cheat=.00001<Math.abs(above(a.frame,a.lastbeat+a.interval+Math.floor(div(a.fps,10)))*above(a.sure,.91))?1:a.cheat;a.beat=.00001<Math.abs(a.cheat)?1:a.beat;a.sure=.00001<Math.abs(a.cheat)?.95*a.sure:a.sure;a.maxdbass=Math.max(.999*\na.maxdbass,a.dbass);a.maxdbass=Math.max(.012,a.maxdbass);a.maxdbass=Math.min(.02,a.maxdbass);a.interval=.00001<Math.abs(a.beat)?a.frame-a.lastbeat:a.interval;a.lastbeat=.00001<Math.abs(a.beat)?a.frame-a.cheat*Math.floor(div(a.fps,10)):a.lastbeat;a.cheat=0;a.pbass=a.bass;a.zoom=.00001<Math.abs(equal(a.beat,1))?a.zoom+.7*a.bass:a.zoom;a.monitor=a.sx;","pixel_eqs_str":"a.dx=.00001<Math.abs(below(Math.abs(a.ang-a.q1),.4*sqrt(a.rad)))?a.dx+.02*(1-a.q4)*a.rad*Math.sin(a.q1):a.dx;a.dy=.00001<Math.abs(below(Math.abs(a.ang-a.q1),.4*sqrt(a.rad)))?a.dy+.02*(1-a.q4)*a.rad*Math.cos(a.q1):a.dy;a.zoom=.00001<Math.abs(below(Math.abs(a.ang-a.q1),.4*sqrt(a.rad)))?a.zoom+.2*(1-a.q4)*a.rad*a.bass:a.zoom;a.dx=.00001<Math.abs(below(Math.abs(a.ang-a.q2),.4*sqrt(a.rad)))?a.dx+.02*(1-a.q4)*a.rad*Math.sin(a.q2):a.dx;a.dy=.00001<Math.abs(below(Math.abs(a.ang-a.q2),\n.4*sqrt(a.rad)))?a.dy+.02*(1-a.q4)*a.rad*Math.cos(a.q2):a.dy;a.zoom=.00001<Math.abs(below(Math.abs(a.ang-a.q2),.4*sqrt(a.rad)))?a.zoom+.2*(1-a.q4)*a.rad*a.bass:a.zoom;a.zoom=a.zoom-.04*(1-a.q4)*a.rad+.1*a.q4;","init_eqs_eel":"max_bass = 1.2;","frame_eqs_eel":"wave_r = mv_b;\nwave_b = mv_g;\nwave_g = mv_r;\nb=max(bass-1,0);\nm=max(mid-1,0);\nt=max(treb-1,0);\nmv_r=.6*abs(sin(time*2.6+1.23+cos(time*4.87+2.145)))+(b/30);\nmv_g=.6*abs(sin(time*4.451+2.89+cos(time*3.74+.78)))+(m/30);\nmv_b=.6*abs(sin(time*3.845+1.23+cos(time*2.6+3)))+(t/30);\n\nq1=(3.14*cos(time*1.45 + 1.54 + cos((bass_att*.1)+time+ 3.22)));\nq2=(3.14*cos(time*2.4 + 2.69 + cos((bass_att*.1)+time+.65)));\nq3=time%50;\nf=if(equal(endframe,0),1,0);\nbeat_avg=if(equal(beat_avg,0),bass,beat_avg);\nbeat_avg=(beat_avg+bass)/2;\n\nmax_bass = if( beat*above(f*bass_att,max_bass),0.99*bass_att, max_bass );\nmax_bass = if( equal(frame%3000,0),0.8*max_bass,max_bass*.9999);\nmax_bass=if( above(max_bass,10*beat_avg),10*beat_avg,max_bass);\ntrig=if( equal(beat,1)*above(bass_att,max_bass),1,0);\nendframe=if(equal(trig,1)*equal(endframe,0), frame+4*min(interval,FPS),endframe);\ntrig=if(equal(frame,endframe),0,trig);\nendframe=if(above(frame,endframe),0,endframe);\nq4=if(above(endframe,0),1,0);\nwave_a=0;\nrot=.1*sin(time*1.53+cos(time*4.676+3.43));\nrot=rot*(1+.4*q4);\nob_size=.3+.7*abs(cos(time*2.45 + 1.566 +sin(time*5 +2.43)));\n\nob_r=mv_r*(int(rand(100))/100);\nob_g=mv_g*(int(rand(100))/100);\nob_b=mv_b*(int(rand(100))/100);\nob_a=.05*abs(cos(time*2.45 + 1.566 +sin(time+2)));\n\n\n\n\n\n\n\n\n\nmv_x=if(equal(q4,1),54+10*cos(time*10),64);\n\n\nzoom=if(equal(int(rand(40+60*(q4))),25),1.6,zoom);\n// -------------------------------- Beat Detective 007 ----------------------------------\nsure=if(equal(sure,0),.6,sure);\ninterval=if(equal(interval,0),40,interval);\nlastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);\ndbass=(bass-pbass)/FPS;\nbeat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);\nsure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),\nmin(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);\nsure=max(.5,sure);\ncheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);\nbeat=if(cheat,1,beat);\nsure=if(cheat,.95*sure,sure);\nmaxdbass=max(maxdbass*.999,dbass);\nmaxdbass=max(.012,maxdbass);\nmaxdbass=min(.02,maxdbass);\ninterval=if(beat, frame-lastbeat,interval);\nlastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);\ncheat=0;\npbass=bass;\n// ----------------------------------------------------------------------------------------------\n\nzoom = if(equal(beat,1),zoom+bass*.7,zoom);\nmonitor=sx;\n//monitor=60*FPS/interval;","pixel_eqs_eel":"dx= if( below( abs(ang-q1), .4*sqrt(rad)),dx+(1-q4)*(.02*rad*sin(q1)),dx);\ndy=if( below(abs(ang-q1),.4*sqrt(rad)),dy+(1-q4)*(.02*rad*cos(q1)),dy);\nzoom=if(below( abs(ang-q1),.4*sqrt(rad)),zoom+(1-q4)*(.2*rad*bass),zoom);\n\ndx= if( below( abs(ang-q2), .4*sqrt(rad)),dx+(1-q4)*(.02*rad*sin(q2)),dx);\ndy = if(below( abs(ang-q2),.4*sqrt(rad)),dy+(1-q4)*(.02*rad*cos(q2)),dy);\nzoom = if(below(abs(ang-q2),.4*sqrt(rad)),zoom+(1-q4)*(.2*rad*bass), zoom);\nzoom=zoom-(1-q4)*.04*rad +q4*.1;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) * exp(\n    (-2.0 * dot (((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29)))\n  )) - 0.003);\n  vec3 tmpvar_2;\n  tmpvar_2 = max (ret_1, (texture (sampler_main, uv).xyz * 0.3));\n  ret_1 = tmpvar_2;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = tmpvar_2;\n  ret = tmpvar_3.xyz;\n }","comp":"float sw1;\nvec2 xlat_mutableuv2;\n shader_body { \n  sw1 = float((rand_preset.x >= 0.4));\n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((0.2 / rad) + (time / 4.0));\n  tmpvar_3.y = (ang / 3.14);\n  xlat_mutableuv2 = (tmpvar_3 * 2.0);\n  vec2 tmpvar_4;\n  tmpvar_4 = sin(((\n    (xlat_mutableuv2 * 3.141)\n   / 2.0) + (time * 0.1)));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noise_hq, (xlat_mutableuv2 + sqrt(dot (tmpvar_4, tmpvar_4))));\n  vec2 tmpvar_6;\n  tmpvar_6.x = (1.0 - uv.x);\n  tmpvar_6.y = uv.y;\n  ret_2 = (texture (sampler_main, uv).xyz + texture (sampler_main, tmpvar_6).xyz);\n  uv_1 = (uv + ((\n    (((sw1 * rad) * (tmpvar_5.xy - 0.5)) / 2.0)\n   * \n    float((tmpvar_5.x <= rand_preset.y))\n  ) * sw1));\n  vec2 tmpvar_7;\n  tmpvar_7.x = (1.0 - uv_1.x);\n  tmpvar_7.y = uv_1.y;\n  ret_2 = (ret_2 + ((\n    ((((texture (sampler_blur2, uv_1).xyz * scale2) + bias2) + ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)) * min ((0.5 + (treb_att / 4.0)), 2.0))\n   * \n    (1.0 + sw1)\n  ) * clamp (\n    (1.0 - (dot (ret_2, vec3(0.32, 0.49, 0.29)) / 2.0))\n  , 0.0, 1.0)));\n  ret_2 = (ret_2 + (float(\n    !(bool(sw1))\n  ) * vec3((0.2 * \n    ((0.5 + ((uv.x - 0.5) * q1)) + ((uv.y - 0.5) * q2))\n  ))));\n  vec3 tmpvar_8;\n  tmpvar_8 = mix ((ret_2 * (\n    (hue_shader * 2.0)\n   - 1.0)), ret_2, vec3(dot (ret_2, vec3(0.32, 0.49, 0.29))));\n  ret_2 = tmpvar_8;\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = tmpvar_8;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"sampler sampler_pw_noise_lq;\nfloat dx,dy,rad1,mask1;\nfloat2 uv0, uv1,uv4,rsk, Kugel1,dz1;\n\nshader_body {\nuv0 = uv;\n\nfloat2 uv1 = float2(uv.x,uv.y+texsize.w*3);\nret = GetPixel(uv1);\n\nfloat fak = exp(-2*lum(GetBlur2(uv_orig)));\nret = (GetBlur2(uv))*fak-.003 ;\n\nfloat3 add = GetPixel(uv)*.3;\nret = max(ret,add);\n//ret = 0;\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\nfloat2 uv0, uv1, uv2,uv4,rsk,dz1,Kugel1;;\nstatic const float sw1 =  (rand_preset.x) >= .4;\nstatic const float sw2 =  (rand_preset.y);\n\nshader_body {\nuv0 = uv;\nuv2 = float2(.2/rad+time/4,ang/3.14)*2;\nfloat mod = length(sin(uv2*3.141/2+time*.1));\nfloat2 noise = tex2D (sampler_noise_hq,uv2+mod).rg;\nfloat mask = (noise.r <= sw2);\nfloat2 rohr = sw1*rad * (noise-.5) /2*mask;\n\nuv1 = float2(1-uv.x,uv.y);\nret =  GetPixel(uv)+GetPixel(uv1);\n\nfloat3 back = .2*(.5+(uv.x-.5)*q1+(uv.y-.5)*q2);\nuv+= rohr * sw1;\n\nuv1 = float2(1-uv.x,uv.y);\nret += (GetBlur2(uv) + GetBlur2(uv1)) *min(.5+treb_att/4,2) *(1+1*sw1) * saturate(1-lum(ret)/2);\nret += !sw1*back;\nret = lerp(ret*(hue_shader*2-1),ret,lum(ret));;\n//ret = GetPixel(uv);\n}"}