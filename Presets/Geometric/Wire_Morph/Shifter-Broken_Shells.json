{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":4.946,"echo_orient":3,"wave_mode":1,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"wave_a":4.1,"wave_scale":1.119,"wave_smoothing":0.09,"wave_mystery":-0.4,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.1842,"zoom":0.89588,"rot":-0.12,"warp":0.01,"wave_r":0,"wave_b":0,"ob_size":0.005,"ob_a":0.3,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"g":0,"b":0},"init_eqs_str":"a.t1=0;a.it=0;a.q1=0;a.q5=0;a.d1=0;a.t3=0;a.ti=0;a.m0=0;a.d0=0;a.trig=0;a.t2=0;a.sp=0;a.q2=0;a.m1=0;a.t4=0;a.pi2=0;","frame_eqs_str":"a.trig=a.q5+below(a.m0+a.m1,2);a.m0=.00001<Math.abs(a.trig)?Math.floor(rand(9*a.q2)):a.m0;a.m1=.00001<Math.abs(a.trig)?Math.floor(rand(9*a.q2)):a.m1;a.t3=0*(.00001<Math.abs(a.trig)?.001*rand(1001)*6.283185:a.d0);a.t4=0*(.00001<Math.abs(a.trig)?.001*rand(1001)*6.283185:a.d1);a.m0=.00001<Math.abs(a.m0)?a.m0:.0001;a.m1=.00001<Math.abs(a.m1)?a.m1:.0001;a.t1=a.m0;a.t2=a.m1;","point_eqs_str":"a.pi2=6.283185;a.sp=6.283185*a.sample;a.it+=1;a.it*=above(a.sample,0);a.ti=.1*a.q1;a.x=.5*(Math.sin(a.sp)+Math.sin((a.sp+a.t3+div(a.ti,a.t1))*a.t1)+Math.sin((a.sp+a.t4-a.ti)*a.t2));a.y=.5*(Math.cos(a.sp)+Math.cos((a.sp+a.t3+a.ti)*a.t1)+Math.cos((a.sp+a.t4-div(a.ti,a.t2))*a.t2));a.x=.2*a.x+.5;a.y=.2*a.y+.5;","init_eqs_eel":"","frame_eqs_eel":"trig = q5+below(m0+m1,2);\n\nm0 = if(trig,floor(rand(q2*9)),m0);\nm1 = if(trig,floor(rand(q2*9)),m1);\nt3 = if(trig,rand(1001)*.001*6.283185,d0)*0;\nt4 = if(trig,rand(1001)*.001*6.283185,d1)*0;\n\nm0 = if(m0,m0,.0001);\nm1 = if(m1,m1,.0001);\nt1=m0;t2=m1;","point_eqs_eel":"pi2 = 6.283185;\nsp = sample*6.283185;\nit = it+1;\nit = it*above(sample,0);\n\nti = q1*.05*2;\n\nx = .5*(sin(sp) + sin((sp+t3+ti/t1)*t1)+sin((sp+t4-ti)*t2));\ny = .5*(cos(sp) + cos((sp+t3+ti)*t1)+cos((sp+t4-ti/t2)*t2));\n\nx = x*.2+.5;\ny = y*.2+.5;\n"},{"baseVals":{"thick":1,"additive":1,"r":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tic = time - tin;\ntin = time;\nmod = .1*(mod*9 + mid_att);\ntt = tt + tic*((mod+1)*(mod+1)-1);\nt1 = tt;","point_eqs_str":"sp = sample*6.28*8*8*4;\nit = it+1;\nit = it*above(sample,0);\nsz = q1;\npi = 3.141592653;\nss = sample*6;\nox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);\noy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);\noz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);\nox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;\noy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));\noz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);\n\nang = t1;\nmx = ox*cos(ang) + oz*sin(ang);\nmz = - ox*sin(ang) + oz*cos(ang);\nox = mx;\noz = mz;\n\nsh = sz*.5;\nbr = (ang/pi) + .5;\nbr = br - int(br*.25)*4;\nbr = 4-int(br);\nbr = br - 4*equal(br,4);\nra = pow(sh*sh*2,.5);\nang = -ang;\nox = ox - (sh + ra*sin(-ang + pi*.25))*equal(br,0) - (-sh + ra*sin(ang + pi*.25))*equal(br,1) - (-sh - ra*sin(-ang + pi*.25))*equal(br,2) - (sh - ra*sin(ang + pi*.25))*equal(br,3);\noz = oz - (sh + ra*cos(-ang + pi*.25))*equal(br,0) - (sh - ra*cos(ang + pi*.25))*equal(br,1) - (-sh - ra*cos(-ang + pi*.25))*equal(br,2) - (-sh + ra*cos(ang + pi*.25))*equal(br,3);\n\nxang = q2;\naxang = 0;\nyang = q3;\nayang = 0;\nzang = q4;\nazang = 0;\nfov = .3;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\na = .05;\nmod = (oz+1)*.5;\na = a*max(min(mod,1),0);\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\ng = -sin(sp);\nb = 0.5 - 0.5*sin(sample*1.57);\nr = 0.5 - 0.5*cos(sample*1.57);","init_eqs_eel":"","frame_eqs_eel":"tic = time - tin;\ntin = time;\nmod = .1*(mod*9 + mid_att);\ntt = tt + tic*((mod+1)*(mod+1)-1);\nt1 = tt;","point_eqs_eel":"sp = sample*6.28*8*8*4;\nit = it+1;\nit = it*above(sample,0);\nsz = q1;\npi = 3.141592653;\nss = sample*6;\nox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);\noy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);\noz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);\nox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;\noy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));\noz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);\n\nang = t1;\nmx = ox*cos(ang) + oz*sin(ang);\nmz = - ox*sin(ang) + oz*cos(ang);\nox = mx;\noz = mz;\n\nsh = sz*.5;\nbr = (ang/pi) + .5;\nbr = br - int(br*.25)*4;\nbr = 4-int(br);\nbr = br - 4*equal(br,4);\nra = pow(sh*sh*2,.5);\nang = -ang;\nox = ox - (sh + ra*sin(-ang + pi*.25))*equal(br,0) - (-sh + ra*sin(ang + pi*.25))*equal(br,1) - (-sh - ra*sin(-ang + pi*.25))*equal(br,2) - (sh - ra*sin(ang + pi*.25))*equal(br,3);\noz = oz - (sh + ra*cos(-ang + pi*.25))*equal(br,0) - (sh - ra*cos(ang + pi*.25))*equal(br,1) - (-sh - ra*cos(-ang + pi*.25))*equal(br,2) - (-sh + ra*cos(ang + pi*.25))*equal(br,3);\n\nxang = q2;\naxang = 0;\nyang = q3;\nayang = 0;\nzang = q4;\nazang = 0;\nfov = .3;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\na = .05;\nmod = (oz+1)*.5;\na = a*max(min(mod,1),0);\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\ng = -sin(sp);\nb = 0.5 - 0.5*sin(sample*1.57);\nr = 0.5 - 0.5*cos(sample*1.57);"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tic = time - tin;\ntin = time;\nmod = .1*(mod*9 + treb_att);\ntt = tt + tic*((mod+1)*(mod+1)-1);\nt1 = tt;","point_eqs_str":"sp = sample*6.28*8*8*4;\nit = it+1;\nit = it*above(sample,0);\nsz = q1;\npi = 3.141592653;\nss = sample*6;\nox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);\noy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);\noz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);\nox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;\noy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));\noz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);\n\nzang = t1;\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\n\nsh = sz*.5;\nbr = (zang/pi) + .5;\nbr = br - int(br*.25)*4;\nbr = int(br);\nra = pow(sh*sh*2,.5);\n\nox = ox - (sh + ra*sin(-zang + pi*.25))*equal(br,0) - (-sh + ra*sin(zang + pi*.25))*equal(br,1) - (-sh - ra*sin(-zang + pi*.25))*equal(br,2) - (sh - ra*sin(zang + pi*.25))*equal(br,3);\noy = oy - (sh + ra*cos(-zang + pi*.25))*equal(br,0) - (sh - ra*cos(zang + pi*.25))*equal(br,1) - (-sh - ra*cos(-zang + pi*.25))*equal(br,2) - (-sh + ra*cos(zang + pi*.25))*equal(br,3);\n\nyang = pi*.5;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\n\nxang = q2;\naxang = 0;\nyang = q3;\nayang = 0;\nzang = q4;\nazang = 0;\nfov = .3;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\na = .05;\nmod = (oz+1)*.5;\na = a*max(min(mod,1),0);\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nb = -sin(sp);\nr = 0.5 - 0.5*sin(sample*1.57);\ng = 0.5 - 0.5*cos(sample*1.57);","init_eqs_eel":"","frame_eqs_eel":"tic = time - tin;\ntin = time;\nmod = .1*(mod*9 + treb_att);\ntt = tt + tic*((mod+1)*(mod+1)-1);\nt1 = tt;","point_eqs_eel":"sp = sample*6.28*8*8*4;\nit = it+1;\nit = it*above(sample,0);\nsz = q1;\npi = 3.141592653;\nss = sample*6;\nox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);\noy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);\noz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);\nox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;\noy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));\noz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);\n\nzang = t1;\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\n\nsh = sz*.5;\nbr = (zang/pi) + .5;\nbr = br - int(br*.25)*4;\nbr = int(br);\nra = pow(sh*sh*2,.5);\n\nox = ox - (sh + ra*sin(-zang + pi*.25))*equal(br,0) - (-sh + ra*sin(zang + pi*.25))*equal(br,1) - (-sh - ra*sin(-zang + pi*.25))*equal(br,2) - (sh - ra*sin(zang + pi*.25))*equal(br,3);\noy = oy - (sh + ra*cos(-zang + pi*.25))*equal(br,0) - (sh - ra*cos(zang + pi*.25))*equal(br,1) - (-sh - ra*cos(-zang + pi*.25))*equal(br,2) - (-sh + ra*cos(zang + pi*.25))*equal(br,3);\n\nyang = pi*.5;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\n\nxang = q2;\naxang = 0;\nyang = q3;\nayang = 0;\nzang = q4;\nazang = 0;\nfov = .3;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\na = .05;\nmod = (oz+1)*.5;\na = a*max(min(mod,1),0);\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nb = -sin(sp);\nr = 0.5 - 0.5*sin(sample*1.57);\ng = 0.5 - 0.5*cos(sample*1.57);"}],"init_eqs_str":"a.d=0;a.tic=0;a.mavg=0;a.it=0;a.bt=0;a.q1=0;a.q5=0;a.tin=0;a.q10=0;a.trig=0;a.m2=0;a.vol=0;a.sd=0;a.q2=0;a.mvar=0;a.lag=0;","frame_eqs_str":"a.wave_a=0;a.vol=.1*(9*a.vol+.333333*(a.bass_att+a.mid_att+a.treb_att));a.bt=a.bt*below(a.bt,5E3)+(a.mavg*a.mavg+a.bass*a.bass+a.mid*a.mid*a.mid+a.treb*a.treb*a.treb)*a.tic;a.q1=a.bt;a.tic=a.time-a.tin;a.tin=a.time;a.tic=Math.min(1,a.tic);a.sd=5;a.q5=above(a.it,a.sd);a.it=a.it*below(a.it,a.sd)+a.tic;a.mavg=div(a.bass*a.tic+a.mavg*(5-a.tic),5);a.mvar=div(pow(a.bass-a.mavg,2)*a.tic+a.mvar*(5-a.tic),5);a.d=div(a.bass-a.mavg,pow(a.mvar,.5));a.trig=above(a.d,3)*above(a.lag,.1);a.lag=\na.lag*(1-a.trig)+a.tic;a.q2=a.mavg;a.q5=a.trig;a.monitor=a.mvar;a.m2=.00001<Math.abs(a.trig)?1.25+div(Math.floor(rand(5)),2):a.m2;a.q10=a.m2;a.monitor=a.m2;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\nvol = .1*(vol*9 + (bass_att+mid_att+treb_att)*.333333);\n\n//bt = bt+(.1+bass*bass*bass)*tic;\n\nbt = bt*below(bt,5000)+(mavg*mavg+bass*bass+mid*mid*mid+treb*treb*treb)*tic;\n\nq1 = bt;\ntic = time-tin; tin = time; tic = min(1,tic);\n\nsd = 5;\nq5 = above(it,sd);\nit = it*below(it,sd) + tic;\n\nmavg = (bass*tic+mavg*(5-tic))/5;\nmvar = (pow(bass-mavg,2)*tic+mvar*(5-tic))/5;\nd = (bass-mavg)/pow(mvar,.5);\n\ntrig = above(d,3)*above(lag,.1);\nlag = lag*(1-trig) + tic;\n\nq2 = mavg;\nq5 = trig;\n\nmonitor=mvar;\nm2 = if(trig,1.25+floor(rand(5))/2,m2); q10=m2;\nmonitor = m2;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_fc_main, uv).xyz;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  ret_1.x = max (ret_1.xxxx, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).x;\n  ret_1.x = max (ret_1.xxxx, (texture (sampler_main, (uv - tmpvar_2)) * 0.97)).x;\n  ret_1.x = max (ret_1.xxxx, (texture (sampler_main, (uv + \n    (tmpvar_2 * 2.0)\n  )) * 0.9)).x;\n  ret_1.x = max (ret_1.xxxx, (texture (sampler_main, (uv - \n    (tmpvar_2 * 2.0)\n  )) * 0.9)).x;\n  ret_1.y = (((\n    (sin(((ang * 6.0) + time)) * sin((ang * 5.0)))\n   + \n    sin(((ang * 54.0) - time))\n  ) + sin(\n    ((rad * 20.0) - (10.0 * time))\n  )) * pow (rad, 5.0));\n  ret_1 = ((ret_1 - 0.005) * 0.98);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uvm_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  uvm_1 = ((tmpvar_3 * (1.0 - \n    (max (texture (sampler_main, ((1.0 - \n      (tmpvar_3 * q10)\n    ) + 0.5)).y, texture (sampler_main, uv).y) * 0.5)\n  )) + 0.5);\n  ret_2 = (texture (sampler_main, uvm_1).xxx + ((\n    (texture (sampler_blur1, uvm_1).xyz * scale1)\n   + bias1).xxx * 0.4));\n  ret_2 = (pow (ret_2, vec3(0.5, 0.8, 1.7)) * 2.0);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_2;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz;\n    \n    // motion blur by Geiss\n    // 'v' points exactly one pixel, in the direction of motion\n    float2 v = normalize(uv-uv_orig)*texsize.zw;\n    float3 s;\n    ret.x = max(ret.x, tex2D(sampler_main, uv+v)*0.97);\n    ret.x = max(ret.x, tex2D(sampler_main, uv-v)*0.97);\n    ret.x = max(ret.x, tex2D(sampler_main, uv+v*2)*0.90);\n    ret.x = max(ret.x, tex2D(sampler_main, uv-v*2)*0.90);\n\n    // darken (decay) over time\n\n//    ret =tex2D(sampler_main, uv_orig);\n//float2 uvm = uv_orig + (uv_orig-uv);\n    ret.y = (sin(ang*6+time)*sin(ang*5)+ sin(ang*54-time) + \nsin(rad*20 - 10*time))*pow(rad,5);\n\n    ret = (ret-0.005)*0.98; //or try: ret -= 0.004;\n\n}","comp_hlsl":"shader_body\n{\n\nfloat2 uvm = 1-(uv-.5)*q10+.5;\nfloat push = max(tex2D(sampler_main,uvm).y,tex2D(sampler_main, uv).y);\n\nuvm = (uv-.5)*(1- push*.5)+.5;\n    ret = tex2D(sampler_main, uvm).xxx;\n    ret += GetBlur1(uvm).xxx*0.4;\n    // palettize:\n    ret = pow(ret, float3(0.5, 0.8, 1.7));\n   \n    ret.xyz *= 2; // a little bit of overbright\n\n//    ret = tex2D(sampler_main, uv).xyz;\n\n}\n\n"}