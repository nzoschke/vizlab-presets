{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"fshader":1,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.35,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.98609,"tex_zoom":1.0303,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.q4=0;","frame_eqs_str":"a.x+=a.q3;a.y+=a.q4;","init_eqs_eel":"","frame_eqs_eel":"x = x + q3;\ny = y + q4"},{"baseVals":{"enabled":1,"sides":24,"textured":1,"rad":0.98609,"tex_ang":1.88496,"tex_zoom":1.0303,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.q4=0;","frame_eqs_str":"a.x+=a.q3;a.y+=a.q4;","init_eqs_eel":"","frame_eqs_eel":"x = x + q3;\ny = y + q4"},{"baseVals":{"r":0,"g2":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = x + q3;\ny = y + q4","init_eqs_eel":"","frame_eqs_eel":"x = x + q3;\ny = y + q4"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = x + q3;\ny = y + q4","init_eqs_eel":"","frame_eqs_eel":"x = x + q3;\ny = y + q4"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.2,"g":0.7},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.t1=0;a.ps=0;a.xq=0;a.sang=0;a.ys=0;a.zq=0;a.ang=0;a.spp=0;a.t2=0;a.zp=0;a.q2=0;","frame_eqs_str":"a.t1=1;a.t2=2*-Math.sin(a.time)+2;","point_eqs_str":"a.spp=2*Math.abs(a.sample-.5);a.n=6.283*a.spp*a.t2;a.ang=6.283*div(Math.floor(12*a.spp),12);a.ps=.1*a.time;a.t1=2*above(a.sample,.5)-1;a.xp=a.t1*(1-a.spp)*.3;a.yp=2.3;a.zp=0;a.ang=6*a.q2+div(a.n,3);a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.yp*a.cang;a.yq=a.xp*a.cang-a.yp*a.sang;a.zq=a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=9.5*a.q2+div(a.n,3);a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;\na.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=1.7*a.q2+div(a.n,3);a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sang+a.zp*a.cang;a.zq=a.yp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.zp+=8;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;","init_eqs_eel":"","frame_eqs_eel":"t1=1;\nt2 = -sin(time)*2+2","point_eqs_eel":"spp = abs( sample-0.5 )*2;\nn=spp*6.283*t2;\nang=int(spp*12)/12 * 6.283;\nps=time*0.1;\nt1= above(sample,0.5)*2 - 1;\n\n//circle;\nxp=t1 * (1-spp) * 0.3;\nyp=2.3;\nzp=0;\n\nang = q2*6 + n/3;\nsang = sin(ang);cang = cos(ang);\nxq = xp*sang + yp*cang;\nyq = xp*cang - yp*sang;\nzq = zp;\nxp=xq;yp=yq;zp=zq;\n\nang = q2*9.5 + n/3;\nsang = sin(ang);cang = cos(ang);\nxq = xp*sang + zp*cang;\nyq = yp;\nzq = xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\nang = q2*1.7 + n/3;\nsang = sin(ang);cang = cos(ang);\nxq = xp;\nyq = yp*sang + zp*cang;\nzq = yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp=zp+8;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;"},{"baseVals":{"usedots":1,"thick":1,"additive":1,"g":0.5,"b":0.2,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\nang=int(sample*12)/12 * 6.283;\nps=time*0.1;\n\n//circle;\nxp=sin(n*12+ps)*0.5;\nyp=cos(n*12+ps)*0.5;\nzp=2 + q1*0.03;\n\n//positions on x axis\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//rotate on x;\nxp=xq;\nyp=yq*sin(q2) + zq*cos(q2);\nzp=yq*cos(q2) - zq*sin(q2);\n\n//rotate on z;\nxq=xp*sin(q2) + yp*cos(q2);\nyq=xp*cos(q2) - yp*sin(q2);\nzq=zp;\n\n\nxp=xq ;\nyp=yq ;\nzp=zq;\n\nzp=zp+8;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5 + q3;\ny=ys*1.3+0.5 + q4;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nang=int(sample*12)/12 * 6.283;\nps=time*0.1;\n\n//circle;\nxp=sin(n*12+ps)*0.5;\nyp=cos(n*12+ps)*0.5;\nzp=2 + q1*0.03;\n\n//positions on x axis\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//rotate on x;\nxp=xq;\nyp=yq*sin(q2) + zq*cos(q2);\nzp=yq*cos(q2) - zq*sin(q2);\n\n//rotate on z;\nxq=xp*sin(q2) + yp*cos(q2);\nyq=xp*cos(q2) - yp*sin(q2);\nzq=zp;\n\n\nxp=xq ;\nyp=yq ;\nzp=zq;\n\nzp=zp+8;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5 + q3;\ny=ys*1.3+0.5 + q4;"},{"baseVals":{"usedots":1,"thick":1,"additive":1,"g":0.5,"b":0.2,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\nang=int(sample*12)/12 * 6.283;\nps=time*0.1;\n\n//circle;\nxp=sin(n*12+ps)*0.5;\nyp=cos(n*12+ps)*0.5;\nzp=2 + q1*0.03;\n\n//positions on x axis\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//rotate on x;\nxp=xq;\nyp=yq*sin(q2) + zq*cos(q2);\nzp=yq*cos(q2) - zq*sin(q2);\n\n//rotate on z;\nang = q2 + 1.61;\nxq=xp*sin(ang) + yp*cos(ang);\nyq=xp*cos(ang) - yp*sin(ang);\nzq=zp;\n\n\nxp=xq;\nyp=yq;\nzp=zq;\n\nzp=zp+8;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5 +q3;\ny=ys*1.3+0.5 +q4;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nang=int(sample*12)/12 * 6.283;\nps=time*0.1;\n\n//circle;\nxp=sin(n*12+ps)*0.5;\nyp=cos(n*12+ps)*0.5;\nzp=2 + q1*0.03;\n\n//positions on x axis\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//rotate on x;\nxp=xq;\nyp=yq*sin(q2) + zq*cos(q2);\nzp=yq*cos(q2) - zq*sin(q2);\n\n//rotate on z;\nang = q2 + 1.61;\nxq=xp*sin(ang) + yp*cos(ang);\nyq=xp*cos(ang) - yp*sin(ang);\nzq=zp;\n\n\nxp=xq;\nyp=yq;\nzp=zq;\n\nzp=zp+8;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5 +q3;\ny=ys*1.3+0.5 +q4;"},{"baseVals":{"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\n\nxp=sin(n+phase)*flip;\nyp=cos(n+phase)*flip;\nzp=0;\n\n//rotate on y during draw\nang=n*2+phase*0.2;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\nr1=0.1;g1=0.6;b1=1;\nr2=1.0;g2=0.7;b2=0.1;\nfade=xq*0.5 + 0.5;\nr=r1*fade + r2*(1-fade);\ng=g1*fade + g2*(1-fade);\nb=b1*fade + b2*(1-fade);\n\n//rotation;\nang=time*0.1;\nxp=xq*sin(ang) + zq*cos(ang);\nyp=yq;\nzp=xq*cos(ang) - zq*sin(ang);\n\nang=time*0.17;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n\n//push into viewspace\nzq=zq+3.1;\n\n\n//project into screenspace\nxs=xq/zq;\nys=yq/zq;\n\n\nx=xs+0.5;\ny=ys*1.3+0.5;\na=(1-flip)*0.03*q1;\n\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\n\nxp=sin(n+phase)*flip;\nyp=cos(n+phase)*flip;\nzp=0;\n\n//rotate on y during draw\nang=n*2+phase*0.2;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\nr1=0.1;g1=0.6;b1=1;\nr2=1.0;g2=0.7;b2=0.1;\nfade=xq*0.5 + 0.5;\nr=r1*fade + r2*(1-fade);\ng=g1*fade + g2*(1-fade);\nb=b1*fade + b2*(1-fade);\n\n//rotation;\nang=time*0.1;\nxp=xq*sin(ang) + zq*cos(ang);\nyp=yq;\nzp=xq*cos(ang) - zq*sin(ang);\n\nang=time*0.17;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n\n//push into viewspace\nzq=zq+3.1;\n\n\n//project into screenspace\nxs=xq/zq;\nys=yq/zq;\n\n\nx=xs+0.5;\ny=ys*1.3+0.5;\na=(1-flip)*0.03*q1;\n\n"}],"init_eqs_str":"a.vol=0;a.q1=0;a.mtime=0;a.q2=0;a.tm=0;a.q3=0;a.q4=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.decay=.98;a.zoom=1;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.q1=a.vol;a.mtime+=.01*a.vol;a.q2=.25*a.mtime;a.tm=a.mtime;a.q3=.1*Math.sin(a.tm);a.q4=.1333*Math.sin(3.5*a.tm);a.dx=-a.q3;a.dy=a.q4;","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"decay=0.98;\nzoom=1.0;\nvol=(bass+mid+treb)*0.25;\nvol=vol*vol;\nq1=vol;\n\nmtime=mtime+vol*0.01;\nq2=mtime*0.25;\n\ntm =mtime;\nq3 = sin(tm)*0.1;\nq4 = sin(tm*3.5)*0.1*1.333;\n\n//q3=0.0;\n//q4=0.1;\n\ndx=-q3;\ndy=q4","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 7.0));\n  ret_1 = (ret_1 - (roam_sin.zyx * roam_cos.ywx));\n  vec3 tmpvar_2;\n  tmpvar_2 = fract((ret_1 - (\n    (clamp (((vol / vol_att) - 1.1), 0.0, 1.0) * 0.5)\n   + 0.004)));\n  ret_1 = tmpvar_2;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = tmpvar_2;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.5 + ((uv - 0.5) * vec2(1.0, -1.0)));\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_4.y = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1)).y;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv_1 - (tmpvar_4 * 0.1));\n  ret_2 = (((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2).x * vec3(0.0, 0.0, 2.0));\n  ret_2 = (ret_2 - (roam_sin.wzy * roam_cos.zxy));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (ret_2, vec3(1.2, 1.2, 1.2), ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1).xxx);\n  ret_2 = tmpvar_6;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = tmpvar_6;\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body\n{\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*7;\n\n//ret-=roam_sin.wzy*roam_cos.zxy;\nret-=roam_sin.zyx*roam_cos.ywx;\n    // darken over time\n    //ret -= 0.004;\n    //ret *= 0.99;\n    //ret *= 0.97 + 0.03*saturate( length(uv - uv_orig)*200 );  // center only\n    float dec = saturate(vol/vol_att - 1.1)*0.5 + 0.004;\n    ret = frac(ret - dec);\n}","comp_hlsl":"shader_body\n{\nuv = 0.5 + (uv-0.5)*float2(1,-1);\n\n    float2 d = texsize.zw*4;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\n\nfloat2 uv_x = uv - float2(dx.y,dy.y)*0.1;\nret = GetBlur2(uv_x).x*float3(0,0,2);\nret-=roam_sin.wzy*roam_cos.zxy;\n//ret-=roam_sin.zyx*roam_cos.ywx;\nret = lerp(ret,1.2,GetBlur1(uv_x).x);\n\n}"}