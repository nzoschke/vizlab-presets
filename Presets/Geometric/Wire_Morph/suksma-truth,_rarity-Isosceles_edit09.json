{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":1.008,"wave_scale":1.032,"wave_smoothing":0.9,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":1.389,"warpscale":0.013,"zoomexp":0.95137,"fshader":0.97,"zoom":0.9327,"warp":0.535,"sx":0.8034,"wave_r":0.15,"wave_g":0.15,"wave_b":0.15,"ob_size":0,"ob_r":0.2,"ob_g":0.2,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0.2,"ib_g":0.2,"ib_b":0.2,"ib_a":1,"mv_x":64,"mv_y":1,"mv_l":0.7},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.1*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.05*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.wave_b+=.5*(.6*Math.sin(.7*a.time)+.4*Math.sin(.3*a.time));a.mv_r+=2*a.bass;a.mv_g+=2*a.treb;a.mv_b+=2*a.mid;a.mv_y=1.25;a.zoom+=.2*(a.bass_att-.8);","pixel_eqs_str":"a.rot=.1*a.bass-3*a.rad-2+(.5*a.rad-10-(.5*a.rad-3*a.time)-.2*a.bass_att);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.100*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\nwave_g = wave_g + 0.050*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\nwave_b = wave_b + 0.500*( 0.60*sin(0.700*time) + 0.40*sin(0.300*time) );\nmv_r = mv_r + bass*2;\nmv_g = mv_g + treb*2;\nmv_b = mv_b + mid*2;\nmv_y = 1.25;\nzoom = zoom+(bass_att-0.8)*0.2;","pixel_eqs_eel":"rot =(0.1*bass)-rad * 3-2+(0.5*rad-10-(0.5*rad-3*time)- 0.2*bass_att);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz - (tmpvar_2.xyz * 0.5));\n  ret_1 = ((ret_1 * abs(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2) - 0.5)\n  )) * 5.0);\n  ret_1 = (ret_1 - 0.01);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  ret_2 = ((texture (sampler_blur3, uv).xyz * scale3) + bias3);\n  uv_1 = (uv * (1.0 + (0.1 * \n    ((texture (sampler_blur1, clamp (ret_2, 0.0, 1.0).xy).xyz * scale1) + bias1)\n  )).xy);\n  uv_1 = (uv_1 - (0.05 * (\n    (texture (sampler_blur1, clamp (ret_2, 0.0, 1.0).xy).xyz * scale1)\n   + bias1)).xy);\n  ret_2 = (((texture (sampler_blur3, uv_1).xyz * scale3) + bias3).x * vec3(1.0, 0.0, 0.0));\n  ret_2 = (mix (mix (ret_2, vec3(1.0, 1.0, 1.0), \n    (((texture (sampler_blur2, uv_1).xyz * scale2) + bias2).x * vec3(0.1, 0.5, 0.0))\n  ), vec3(1.2, 0.3, 0.0), (\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1).xxx) * (texture (sampler_main, uv_1).x + 2.1));\n  ret_2 = (mix (ret_2, vec3(0.0, 1.0, 0.0), texture (sampler_main, uv_1).xxx) * normalize((\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\n   + 0.05)));\n  ret_2 = (0.5 + (0.5 * ret_2));\n  vec2 x_3;\n  x_3 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_3, x_3))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv_1).xyz * scale3) + bias3) - (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1) * treb_att))\n  ), pow (hue_shader.xzy, vec3(bass_att))));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_2;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    \n    // darken (decay) over time\n    ret = ret- (ret*.5);\n    ret = ret*(abs(GetBlur2(uv)-.5))*5;\n    ret = ret - .01;\n}","comp_hlsl":"float2 uv_dx, uv_dz;\nfloat2 d, uv_y;\nfloat3 dx, dy;\nshader_body\n{\n    float2 d = texsize.zw*4;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n    float2 uv_y = uv-float2(dx.y,dy.y)*0.4;\n\n    float2 uv_dx = uv - float2(dx.x,dy.x)*1;\n    float2 uv_dz = uv - float2(dx.z,dy.z)*1;\n\n    ret = tex2D(sampler_main, uv).xyz;\n    ret += GetBlur1(uv)*0.25;\n    ret = ret.yyy;\n    ret = pow(ret, float3(0.8,0.4,1.7))*1.9;\nret = GetBlur3(uv);\n\nuv *= (1+.1*GetBlur1(saturate(ret)));\nuv -= .05*GetBlur1(saturate(ret));\n\nret = tex2D(sampler_main,uv);\n\nret *= pow(hue_shader,3);\n    ret *= 1.50; //gamma\n    ret *= ret; //darken\n\nret = GetBlur3(uv).x*float3(1,0,0);\nret = lerp(ret,1,GetBlur2(uv).x*float3(0.1,0.5,0));\nret = lerp(ret, float3(1.2,0.3,0), GetBlur1(uv).x);\nret *= GetPixel(uv).x+2.1;\nret = lerp(ret,float3(0,1,0),GetPixel(uv).x);\n\n    // diffuse lighting:\n    \n    //ret *= float3(1.2,0.9,0.6);    \n    ret *= normalize( GetBlur3(uv_orig) + 0.05 );\n    //ret = 0;\n    ret = 0.5 + 0.5*ret;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)*treb_att),pow(hue_shader.xzy,bass_att));\n    ret *= ret;\n}"}