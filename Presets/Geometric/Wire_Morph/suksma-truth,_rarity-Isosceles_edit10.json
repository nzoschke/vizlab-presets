{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":1.008,"wave_scale":1.032,"wave_smoothing":0.9,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":1.389,"warpscale":0.013,"zoomexp":0.95137,"fshader":0.97,"zoom":0.9327,"warp":0.535,"sx":0.8034,"wave_r":0.15,"wave_g":0.15,"wave_b":0.15,"ob_size":0,"ob_r":0.2,"ob_g":0.2,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0.2,"ib_g":0.2,"ib_b":0.2,"ib_a":1,"mv_x":64,"mv_y":1,"mv_l":0.7},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.1*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.05*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.wave_b+=.5*(.6*Math.sin(.7*a.time)+.4*Math.sin(.3*a.time));a.mv_r+=2*a.bass;a.mv_g+=2*a.treb;a.mv_b+=2*a.mid;a.mv_y=1.25;a.zoom+=.2*(a.bass_att-.8);","pixel_eqs_str":"a.rot=.1*a.bass-3*a.rad-2+(.5*a.rad-10-(.5*a.rad-3*a.time)-.2*a.bass_att);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.100*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\nwave_g = wave_g + 0.050*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\nwave_b = wave_b + 0.500*( 0.60*sin(0.700*time) + 0.40*sin(0.300*time) );\nmv_r = mv_r + bass*2;\nmv_g = mv_g + treb*2;\nmv_b = mv_b + mid*2;\nmv_y = 1.25;\nzoom = zoom+(bass_att-0.8)*0.2;","pixel_eqs_eel":"rot =(0.1*bass)-rad * 3-2+(0.5*rad-10-(0.5*rad-3*time)- 0.2*bass_att);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz - (tmpvar_2.xyz * 0.5));\n  ret_1 = ((ret_1 * abs(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2) - 0.5)\n  )) * 5.0);\n  ret_1 = (ret_1 - 0.01);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":"vec3 xlat_mutableneu;\nvec2 xlat_mutablers0;\nvec2 xlat_mutablerss;\nvec2 xlat_mutableuv2;\n shader_body { \n  vec2 uv_1;\n  vec3 ret1_2;\n  vec3 dots_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  float tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (min (abs(\n    (uv_1.y / uv_1.x)\n  ), 1.0) / max (abs(\n    (uv_1.y / uv_1.x)\n  ), 1.0));\n  float tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\n  tmpvar_6 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\n  tmpvar_6 = (tmpvar_6 + (float(\n    (abs((uv_1.y / uv_1.x)) > 1.0)\n  ) * (\n    (tmpvar_6 * -2.0)\n   + 1.570796)));\n  tmpvar_4 = (tmpvar_6 * sign((uv_1.y / uv_1.x)));\n  if ((abs(uv_1.x) > (1e-08 * abs(uv_1.y)))) {\n    if ((uv_1.x < 0.0)) {\n      if ((uv_1.y >= 0.0)) {\n        tmpvar_4 += 3.141593;\n      } else {\n        tmpvar_4 = (tmpvar_4 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_4 = (sign(uv_1.y) * 1.570796);\n  };\n  xlat_mutablers0.x = ((tmpvar_4 / 3.1416) * 2.0);\n  xlat_mutablers0.y = (0.02 / sqrt(dot (uv_1, uv_1)));\n  vec2 tmpvar_7;\n  tmpvar_7.x = xlat_mutablers0.x;\n  tmpvar_7.y = (xlat_mutablers0.y + time);\n  xlat_mutablerss = (tmpvar_7 * mat2(0.7, -0.7, 0.7, 0.7));\n  vec4 tmpvar_8;\n  tmpvar_8 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \n    (xlat_mutablerss / 32.0)\n  ) - 0.7), vec4(0.0, 0.0, 0.0, 0.0)));\n  vec2 tmpvar_9;\n  tmpvar_9 = abs((fract(\n    (xlat_mutablerss * 8.0)\n  ) - 0.5));\n  vec2 tmpvar_10;\n  tmpvar_10.x = (xlat_mutablers0.x * 2.0);\n  tmpvar_10.y = (xlat_mutablers0.y + (time / 2.0));\n  xlat_mutablerss = (tmpvar_10 * mat2(0.7, -0.7, 0.7, 0.7));\n  vec4 tmpvar_11;\n  tmpvar_11 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \n    (xlat_mutablerss / 32.0)\n  ) - 0.7), vec4(0.0, 0.0, 0.0, 0.0)));\n  vec2 tmpvar_12;\n  tmpvar_12 = abs((fract(\n    (xlat_mutablerss * 8.0)\n  ) - 0.5));\n  xlat_mutablerss = tmpvar_12;\n  dots_3 = (vec3((clamp (\n    (0.04 / sqrt(dot (tmpvar_9, tmpvar_9)))\n  , 0.0, 1.0) * tmpvar_8.x)) + (clamp (\n    (0.04 / sqrt(dot (tmpvar_12, tmpvar_12)))\n  , 0.0, 1.0) * tmpvar_11.x));\n  dots_3 = (dots_3 * clamp ((0.04 / \n    abs(((0.01 / xlat_mutablers0.y) - q6))\n  ), 0.0, 1.0));\n  dots_3 = (dots_3 * (dots_3 * 2.0));\n  xlat_mutableneu = (texture (sampler_main, (uv_1 + 0.5)).xyz + ((texture (sampler_blur1, \n    (uv_1 + 0.5)\n  ).xyz * scale1) + bias1));\n  ret1_2 = max (vec3(0.0, 0.0, 0.0), xlat_mutableneu);\n  xlat_mutableuv2.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\n  xlat_mutableuv2.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\n  xlat_mutableneu = (texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz + ((texture (sampler_blur1, \n    (xlat_mutableuv2 + 0.5)\n  ).xyz * scale1) + bias1));\n  ret1_2 = max (ret1_2, xlat_mutableneu);\n  xlat_mutableuv2.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  xlat_mutableuv2.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  xlat_mutableneu = (texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz + ((texture (sampler_blur1, \n    (xlat_mutableuv2 + 0.5)\n  ).xyz * scale1) + bias1));\n  ret1_2 = max (ret1_2, xlat_mutableneu);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = (ret1_2 + (dots_3 * (1.0 + ret1_2)));\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    \n    // darken (decay) over time\n    ret = ret- (ret*.5);\n    ret = ret*(abs(GetBlur2(uv)-.5))*5;\n    ret = ret - .01;\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\n\nfloat3 neu, ret1;\nfloat2 rs2,rs0,rss,uv1,uv2;\nfloat ang2,c,s;\nfloat2x2 rota = float2x2(.7,.7,-.7,.7);\nshader_body\n{\nuv -= 0.5;\nuv *= aspect.xy;    \n\nrs0.x = atan2(uv.y, uv.x)/3.1416*2;\nrs0.y = .02/(length (uv));\nrss = float2 (rs0.x,rs0.y+time);\nrss = mul(rss,float2x2(.7,.7,-.7,.7));\nfloat noise = (tex2D(sampler_pw_noise_lq,rss/32)-.7 >= 0);\nrss = abs(frac(rss*8)-.5);\nfloat3 dots = saturate(.04/length(rss)) *noise;\n\nrss = float2 (rs0.x*2,rs0.y+time/2);\nrss = mul(rss,float2x2(.7,.7,-.7,.7));\nnoise = (tex2D(sampler_pw_noise_lq,rss/32)-.7 >= 0);\nrss = abs(frac(rss*8)-.5);\ndots += saturate(.04/length(rss)) * noise;\n\ndots *= saturate(.04/abs(.01/rs0.y-q6))+.0;\ndots *= dots*2;\n\nfloat3 ret1 = 0;\nint anz = 2;\nint n = 0;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    neu = GetPixel(uv2+.5) + GetBlur1(uv2+.5);\n    ret1 = max(ret1,neu);\nn++;\n}\n\n\nret = ret1 + dots*(1+ret1);\n}\n\n"}