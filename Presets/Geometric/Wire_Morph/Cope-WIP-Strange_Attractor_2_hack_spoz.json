{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_str":"a.t2=0;a.t3=0;a.q5=0;a.t1=0;a.q2=0;a.z=0;a.t1=.5;a.t2=.5;a.t3=.5;","frame_eqs_str":"","point_eqs_str":"a.x=Math.sin(.8*a.t2)-a.t3*Math.cos(a.q5*a.t1);a.y=a.t3*Math.sin(a.q2*a.t1)-Math.cos(-1.4*a.t2+.1);a.z=1.1*Math.sin(a.t1);a.t1=a.x;a.t2=a.y;a.t3=a.z;a.x=.5*a.x+.7;a.y=.5*a.y+.7;a.r=div(1,a.b)+div(1,a.y);a.b=div(1,a.g)-div(1,a.x);a.g=div(1,a.r)+div(1,a.z);","init_eqs_eel":"t1=0.5;\nt2=0.5;\nt3=0.5;","frame_eqs_eel":"","point_eqs_eel":"//x = a*sin(b*y) - z*cos(c*x); \n//x = 1.4*sin(q2*t2) - t3*cos(0.5*t1);\n//y = z*sin(d*x) - cos(e*y); \n//y = t3*sin(-q1*t1) - cos(-0.5*t2);\n//z = f*sin(x);\n//z = 1*sin(t1);\n\n\nx = sin(0.8*t2) - t3*cos(q5*t1);\ny = t3*sin(q2*t1)-cos(-1.4*t2+0.1);\nz = 1.1*sin(t1);\n\n\n//transmit the x,y,z positions to the next point\nt1=x;\nt2=y;\nt3=z;\n\n//adjust the scale and position of the entire attractor *after* we passed xyz to the next point\n\nx = (x*0.5+0.7);\ny = (y*0.5+0.7);\n\n\nr = 1/b+1/y;\nb = 1/g-1/x;\ng = 1/r+1/z;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"a":0.05},"init_eqs_str":"a.t2=0;a.t3=0;a.q5=0;a.t1=0;a.q2=0;a.z=0;a.t1=.5;a.t2=.5;a.t3=.5;","frame_eqs_str":"","point_eqs_str":"a.x=Math.sin(.8*a.t2)-a.t3*Math.cos(a.q5*a.t1);a.y=a.t3*Math.sin(a.q2*a.t1)-Math.cos(-1.4*a.t2+.1);a.z=1.1*Math.sin(a.t1);a.t1=a.x;a.t2=a.y;a.t3=a.z;a.x=.5*a.x+.7;a.y=.5*a.y+.7;a.r=div(1,a.b)+div(1,a.y);a.b=div(1,a.g)-div(1,a.x);a.g=div(1,a.r)+div(1,a.z);","init_eqs_eel":"t1=0.5;\nt2=0.5;\nt3=0.5;","frame_eqs_eel":"","point_eqs_eel":"\n\nx = sin(0.8*t2) - t3*cos(q5*t1);\ny = t3*sin(q2*t1)-cos(-1.4*t2+0.1);\nz = 1.1*sin(t1);\n\n//transmit the x,y,z positions to the next point\nt1=x;\nt2=y;\nt3=z;\n\n//adjust the scale and position of the entire attractor *after* we passed xyz to the next point\nx = x*0.5+0.7;\ny = y*0.5+0.7;\n\n\nr = 1/b+1/y;\nb = 1/g-1/x;\ng = 1/r+1/z;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;a.q4=0;a.q5=0;a.q8=0;a.q7=0;a.q6=0;","frame_eqs_str":"a.q1=.2*Math.sin(.3*a.time);a.q2=Math.abs(.8*Math.sin(.45*a.time));a.q3=Math.sin(.6*a.time);a.q4=.7*Math.sin(.51*a.time);a.q5=Math.cos(.45*a.time);a.monitor=a.q5;a.wave_r+=.45*(.6*Math.sin(1.3*a.time)+.4*Math.sin(.98*a.time));a.wave_b+=.45*(.6*Math.sin(1.1*a.time)+.4*Math.sin(.78*a.time));a.wave_g+=.45*(.6*Math.sin(1.2*a.time)+.4*Math.sin(.6*a.time));a.q8=1;a.q7=1;a.q6=1;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//keep q1 negative, that's where the interesting shape is\nq1= (0.2*sin(time*0.3));\nq2= abs(0.8*sin(time*0.45));\nq3= 1*sin(time*0.6);\nq4= 0.7*sin(time*0.51);\nq5= 1*cos(time*0.45);\n\nmonitor=q5;\nwave_r = wave_r + 0.45*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\nwave_b = wave_b + 0.45*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\nwave_g = wave_g + 0.45*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\n\n//q8=wave_r;\n//q7=wave_g;\n//q6=wave_b;\nq8=1;\nq7=1;\nq6=1;","pixel_eqs_eel":"","warp":"mat2 ofs;\nvec2 xlat_mutableuv2;\nfloat xlat_mutablezv;\n shader_body { \n  mat2 tmpvar_1;\n  tmpvar_1[uint(0)].x = texsize.z;\n  tmpvar_1[uint(0)].y = 0.0;\n  tmpvar_1[1u].x = 0.0;\n  tmpvar_1[1u].y = texsize.w;\n  ofs = (tmpvar_1 * 4.0);\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((uv.x - 0.5) + q19);\n  tmpvar_3.y = (uv.y - 0.5);\n  vec2 v_4;\n  v_4.x = ofs[0].x;\n  v_4.y = ofs[1].x;\n  vec2 v_5;\n  v_5.x = ofs[0].x;\n  v_5.y = ofs[1].x;\n  vec2 v_6;\n  v_6.x = ofs[0].y;\n  v_6.y = ofs[1].y;\n  vec2 v_7;\n  v_7.x = ofs[0].y;\n  v_7.y = ofs[1].y;\n  vec2 tmpvar_8;\n  tmpvar_8.x = (texture (sampler_main, (uv + v_4)) - texture (sampler_main, (uv - v_5))).z;\n  tmpvar_8.y = (texture (sampler_main, (uv + v_6)) - texture (sampler_main, (uv - v_7))).z;\n  xlat_mutablezv = (time * 0.08);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (0.02 * time);\n  tmpvar_9.y = (-0.05 * time);\n  xlat_mutableuv2 = ((3.0 * tmpvar_3) + tmpvar_9);\n  vec3 tmpvar_10;\n  tmpvar_10.xy = xlat_mutableuv2;\n  tmpvar_10.z = xlat_mutablezv;\n  vec3 tmpvar_11;\n  tmpvar_11.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\n  tmpvar_11.z = (xlat_mutablezv * 2.0);\n  vec3 tmpvar_12;\n  tmpvar_12.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\n  tmpvar_12.z = (xlat_mutablezv * 3.0);\n  vec3 tmpvar_13;\n  tmpvar_13.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\n  tmpvar_13.z = (xlat_mutablezv * 7.0);\n  xlat_mutableuv2 = (tmpvar_3 + ((\n    (((texture (sampler_noisevol_hq, tmpvar_10).z + (texture (sampler_noisevol_hq, tmpvar_11).z / 2.0)) + (texture (sampler_noisevol_hq, tmpvar_12).z / 4.0)) + (texture (sampler_noisevol_hq, tmpvar_13).z / 8.0))\n   - 1.0) * 0.1));\n  ret_2 = (((\n    (((0.2 + (\n      (((1.0 + bass_att) * 0.01) / sqrt(dot (xlat_mutableuv2, xlat_mutableuv2)))\n     * \n      (1.0 + normalize(slow_roam_cos))\n    .xyz)) + ((rand_preset.z - 0.5) * xlat_mutableuv2.y)) * 0.1)\n   / 2.0) + (texture (sampler_main, \n    (uv - (0.02 * tmpvar_8))\n  ).xyz * 0.9)) - 0.01);\n  vec4 tmpvar_14;\n  tmpvar_14 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\n    ret_2.y = (ret_2.y + (tmpvar_14.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (ret_2.z + (tmpvar_14.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (ret_2.x + (tmpvar_14.z * 0.5));\n  };\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = ret_2;\n  ret = tmpvar_15.xyz;\n }","comp":"","warp_hlsl":"sampler sampler_pw_noise_lq;\nfloat3 crisp,dx,dy,ret1;\nfloat2 zz, uv1,uv2;\nfloat  n1,n2,n3,n4,zv,z, noise, k1, wave;\nstatic float2 sunpos = float2 (0*sin(time/3),-.0);\nstatic float2x2 ofs = float2x2 (texsize.z,0,0,texsize.w)*4;\nstatic float3 suncol = 1+normalize(slow_roam_cos);\nfloat3 cloud (float2 uv_in) {\nreturn (.2+(1+bass_att)*.01/length(uv_in-sunpos)*suncol+(rand_preset.z-.5)*uv_in.y);} \n\nshader_body {\n\nfloat2 uv1 = float2(uv.x-0.5+q19,uv.y-0.5);//*aspect.xy;\n\ndx = tex2D(sampler_main,uv+ofs[0]) - tex2D(sampler_main,uv-ofs[0]);\ndy = tex2D(sampler_main,uv+ofs[1]) - tex2D(sampler_main,uv-ofs[1]);\nzz = float2(dx.b,dy.b);\n\n//clouds\nzv = time*.06 ;\nzv = time*.08+ .0*GetPixel(uv); //##\nuv2 = 3*uv1+ float2(0.02*time,-.05*time);\n\nn1 = tex3D(sampler_noisevol_hq,float3 (uv2.x,uv2.y,zv)).b;\nn2 = tex3D(sampler_noisevol_hq,float3 (uv2.x*2,uv2.y*2,zv*2)).b;\nn3 = tex3D(sampler_noisevol_hq,float3 (uv2.x*4,uv2.y*4,zv*3)).b;\nn4 = tex3D(sampler_noisevol_hq,float3 (uv2.x*8,uv2.y*8,zv*7)).b;\nnoise = n1 + n2/2 + n3/4 + n4/8 -1;\nnoise = pow(noise,1);\nuv2 = uv1+noise*.1;\n\n//*******************************\nret1 = cloud(uv2);\nfloat k1 = .1;\nret = ret1*k1/2 + GetPixel(uv-.02*zz)*(1-k1)-.01;\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n}","comp_hlsl":""}