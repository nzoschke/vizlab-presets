{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.96,"echo_zoom":1.007,"echo_orient":3,"wrap":0,"brighten":1,"darken":1,"wave_scale":0.01,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.52373,"g":1,"b":1,"a":0.09,"r2":1,"b2":1,"a2":0.3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"r":0.8,"g":0.8},"init_eqs_str":"a.t1=0;a.t2=0;a.ax=0;a.ay=0;a.q1=0;a.bx=0;a.by=0;a.q2=0;","frame_eqs_str":"","point_eqs_str":"a.t1=50*a.sample;a.t2=.5*a.sample;a.ax=.4*Math.sin(a.t1-a.t2)*Math.sin(a.t2-a.t1);a.ay=.3*Math.cos(a.t2+a.t1)*Math.cos(a.t2+a.q1);a.bx=.4*Math.sin(a.t1+a.t2)*Math.sin(3+a.t2+a.t1);a.by=.3*Math.cos(a.t2+a.t1-a.q2+a.q1);a.x=.5+.2*(a.ay+a.by)*(2+a.sample);a.y=.5+2*a.ax*a.bx;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t1=50*sample;\nt2=.5*sample;\n\nax= .4*sin(t1-t2)*sin(t2-t1);\nay= .3*cos(t2+t1)*cos(t2+q1);\n\nbx= .4*sin(t1+t2)*sin(3+t2+t1);\nby= .3*cos(t2+t1-q2+q1);\n\nx=.5 + .2*(ay+by)*(2+sample);\ny=.5 + 2*ax*bx;"},{"baseVals":{"enabled":1,"scaling":100,"smoothing":0,"r":0.8,"g":0.8},"init_eqs_str":"a.t1=0;a.t2=0;a.ax=0;a.ay=0;a.q1=0;a.bx=0;a.by=0;a.q2=0;","frame_eqs_str":"","point_eqs_str":"a.t1=50*a.sample;a.t2=.5*a.sample;a.ax=.4*Math.sin(a.t1-a.t2)*Math.sin(a.t2-a.t1);a.ay=.3*Math.cos(a.t2+a.t1)*Math.cos(a.t2+a.q1);a.bx=.4*Math.sin(a.t1+a.t2)*Math.sin(3+a.t2+a.t1);a.by=.3*Math.cos(a.t2+a.t1-a.q2-a.q1);a.x=.5+.2*(a.ay+a.by)*(2+a.sample);a.y=.5+2*a.ax*a.bx;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t1=50*sample;\nt2=.5*sample;\n\nax= .4*sin(t1-t2)*sin(t2-t1);\nay= .3*cos(t2+t1)*cos(t2+q1);\n\nbx= .4*sin(t1+t2)*sin(3+t2+t1);\nby= .3*cos(t2+t1-q2-q1);\n\nx=.5 + .2*(ay+by)*(2+sample);\ny=.5 + 2*ax*bx;\n"},{"baseVals":{"enabled":1,"r":0.8,"g":0.8},"init_eqs_str":"a.t1=0;a.t2=0;a.ax=0;a.ay=0;a.q1=0;a.bx=0;a.by=0;a.q2=0;","frame_eqs_str":"","point_eqs_str":"a.t1=50*a.sample;a.t2=.5*a.sample;a.ax=.4*Math.sin(a.t1-a.t2)*Math.sin(a.t2-a.t1);a.ay=.3*Math.cos(a.t2+a.t1)*Math.cos(a.t2+a.q1);a.bx=.4*Math.sin(a.t1+a.t2)*Math.sin(3+a.t2+a.t1);a.by=.3*Math.cos(a.t2+a.t1-a.q2+a.q1);a.x=.5+.2*(a.ay+a.by)*(2+a.sample);a.y=.5-2*a.ax*a.bx;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t1=50*sample;\nt2=.5*sample;\n\nax= .4*sin(t1-t2)*sin(t2-t1);\nay= .3*cos(t2+t1)*cos(t2+q1);\n\nbx= .4*sin(t1+t2)*sin(3+t2+t1);\nby= .3*cos(t2+t1-q2+q1);\n\nx=.5 + .2*(ay+by)*(2+sample);\ny=.5 - 2*ax*bx;"},{"baseVals":{"enabled":1,"r":0.8,"g":0.8},"init_eqs_str":"a.t1=0;a.t2=0;a.ax=0;a.ay=0;a.q1=0;a.bx=0;a.by=0;a.q2=0;","frame_eqs_str":"","point_eqs_str":"a.t1=50*a.sample;a.t2=.5*a.sample;a.ax=.4*Math.sin(a.t1-a.t2)*Math.sin(a.t2-a.t1);a.ay=.3*Math.cos(a.t2+a.t1)*Math.cos(a.t2+a.q1);a.bx=.4*Math.sin(a.t1+a.t2)*Math.sin(3+a.t2+a.t1);a.by=.3*Math.cos(a.t2+a.t1-a.q2-a.q1);a.x=.5+.2*(a.ay+a.by)*(2+a.sample);a.y=.5-2*a.ax*a.bx;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t1=50*sample;\nt2=.5*sample;\n\nax= .4*sin(t1-t2)*sin(t2-t1);\nay= .3*cos(t2+t1)*cos(t2+q1);\n\nbx= .4*sin(t1+t2)*sin(3+t2+t1);\nby= .3*cos(t2+t1-q2-q1);\n\nx=.5 + .2*(ay+by)*(2+sample);\ny=.5 - 2*ax*bx;\n"}],"init_eqs_str":"a.q1=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.decay=.98;a.zoom=1;a.q1=.4*a.time;","pixel_eqs_str":"a.dx=Math.sin(14*a.y)*Math.sin(34*a.y+a.time)*.002;a.dy=Math.cos(19*a.x+a.time)*Math.cos(34*a.x)*.002;a.dy=a.dy;","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"decay=0.98;\nzoom=1.000;\n\nq1=time*0.4;","pixel_eqs_eel":"dx=sin(y*14)*sin(y*34+time)*0.002;\ndy=cos(x*19+time)*cos(x*34)*0.002;\ndy=dy","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 12.0);\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.8)) + rand_frame.xy);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).x;\n  tmpvar_4.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).x;\n  vec2 tmpvar_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_orig - uv);\n  tmpvar_5 = (((uv_orig - \n    (tmpvar_6 * 0.4)\n  ) + (\n    (tmpvar_4 * texsize.zw)\n   * 2.0)) + ((\n    (texture (sampler_noise_lq, tmpvar_3).xy - 0.5)\n   * texsize.zw) * 4.0));\n  ret_1.x = (((texture (sampler_main, tmpvar_5).x - \n    ((texture (sampler_main, tmpvar_5).x - ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3).x) * 0.02)\n  ) - 0.008) + ((texture (sampler_noise_lq, tmpvar_3).x - 0.5) * 0.1));\n  ret_1.y = texture (sampler_main, uv).y;\n  ret_1.y = (ret_1.y + ((\n    (ret_1.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y)\n   * 0.1) - 0.015));\n  ret_1.z = ((texture (sampler_main, (uv_orig + \n    (tmpvar_6 * 0.8)\n  )).z * 0.94) - 0.004);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * treb_att))\n  ), pow (hue_shader.xzy, vec3(bass_att))));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*12;\n    float2 uv_y = uv;//0.5 + (uv_orig-0.5)*1.00 + float2(0,-0.8)*texsize.zw*0;\n    float3 dx = ( GetBlur1(uv_y + float2(1,0)*d) - GetBlur1(uv_y-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv_y + float2(0,1)*d) - GetBlur1(uv_y-float2(0,1)*d) );\n    uv_y = uv_y + float2(dx.y,dy.y)*texsize.zw*2;\n\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*0.8 + rand_frame.xy;\n    float2 uv_bg = uv_orig -(uv_orig-uv)*0.4 + float2(dx.x,dy.x)*texsize.zw*2 + (tex2D(sampler_noise_lq, dither_uv).xy-0.5)*texsize.zw*4;\n\nret.x = GetPixel(uv_bg).x - (GetPixel(uv_bg).x - GetBlur3(uv_bg).x)*0.02 - 0.008 + \n(tex2D(sampler_noise_lq, dither_uv).x-0.5)*0.1;\n\n\n   ret.y = tex2D( sampler_main, uv ).y;\n   ret.y += (ret.y - GetBlur1(uv).y)*0.1 - 0.015;\n   dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n\nuv_bg = uv_orig +(uv_orig-uv)*0.8 + (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)*texsize.zw*0;\nret.z = GetPixel(uv_bg).z*0.94 - 0.004;\n}","comp_hlsl":"// tribute to suksma!\n\nshader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)*treb_att),pow(hue_shader.xzy,bass_att));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}