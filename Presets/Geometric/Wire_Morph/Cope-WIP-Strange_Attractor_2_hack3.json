{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_str":"a.t2=0;a.t3=0;a.q5=0;a.t1=0;a.q2=0;a.z=0;a.t1=.5;a.t2=.5;a.t3=.5;","frame_eqs_str":"","point_eqs_str":"a.x=Math.sin(.8*a.t2)-a.t3*Math.cos(a.q5*a.t1);a.y=a.t3*Math.sin(a.q2*a.t1)-Math.cos(-1.4*a.t2+.1);a.z=1.1*Math.sin(a.t1);a.t1=a.x;a.t2=a.y;a.t3=a.z;a.x=.5*a.x+.7;a.y=.5*a.y+.7;a.r=div(1,a.b)+div(1,a.y);a.b=div(1,a.g)-div(1,a.x);a.g=div(1,a.r)+div(1,a.z);","init_eqs_eel":"t1=0.5;\nt2=0.5;\nt3=0.5;","frame_eqs_eel":"","point_eqs_eel":"//x = a*sin(b*y) - z*cos(c*x); \n//x = 1.4*sin(q2*t2) - t3*cos(0.5*t1);\n//y = z*sin(d*x) - cos(e*y); \n//y = t3*sin(-q1*t1) - cos(-0.5*t2);\n//z = f*sin(x);\n//z = 1*sin(t1);\n\n\nx = sin(0.8*t2) - t3*cos(q5*t1);\ny = t3*sin(q2*t1)-cos(-1.4*t2+0.1);\nz = 1.1*sin(t1);\n\n\n//transmit the x,y,z positions to the next point\nt1=x;\nt2=y;\nt3=z;\n\n//adjust the scale and position of the entire attractor *after* we passed xyz to the next point\n\nx = (x*0.5+0.7);\ny = (y*0.5+0.7);\n\n\nr = 1/b+1/y;\nb = 1/g-1/x;\ng = 1/r+1/z;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"a":0.05},"init_eqs_str":"a.t2=0;a.t3=0;a.q5=0;a.t1=0;a.q2=0;a.z=0;a.t1=.5;a.t2=.5;a.t3=.5;","frame_eqs_str":"","point_eqs_str":"a.x=Math.sin(.8*a.t2)-a.t3*Math.cos(a.q5*a.t1);a.y=a.t3*Math.sin(a.q2*a.t1)-Math.cos(-1.4*a.t2+.1);a.z=1.1*Math.sin(a.t1);a.t1=a.x;a.t2=a.y;a.t3=a.z;a.x=.5*a.x+.7;a.y=.5*a.y+.7;a.r=div(1,a.b)+div(1,a.y);a.b=div(1,a.g)-div(1,a.x);a.g=div(1,a.r)+div(1,a.z);","init_eqs_eel":"t1=0.5;\nt2=0.5;\nt3=0.5;","frame_eqs_eel":"","point_eqs_eel":"\n\nx = sin(0.8*t2) - t3*cos(q5*t1);\ny = t3*sin(q2*t1)-cos(-1.4*t2+0.1);\nz = 1.1*sin(t1);\n\n//transmit the x,y,z positions to the next point\nt1=x;\nt2=y;\nt3=z;\n\n//adjust the scale and position of the entire attractor *after* we passed xyz to the next point\nx = x*0.5+0.7;\ny = y*0.5+0.7;\n\n\nr = 1/b+1/y;\nb = 1/g-1/x;\ng = 1/r+1/z;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q6=0;a.q1=0;a.mq31=0;a.q5=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.atime=0;a.q4=0;a.q26=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.q2=0;a.q27=0;a.q3=0;a.q7=0;a.q28=0;a.q8=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.q1=.2*Math.sin(.3*\na.time);a.q2=Math.abs(.8*Math.sin(.45*a.time));a.q3=Math.sin(.6*a.time);a.q4=.7*Math.sin(.51*a.time);a.q5=Math.cos(.45*a.time);a.monitor=a.q5;a.wave_r+=.45*(.6*Math.sin(1.3*a.time)+.4*Math.sin(.98*a.time));a.wave_b+=.45*(.6*Math.sin(1.1*a.time)+.4*Math.sin(.78*a.time));a.wave_g+=.45*(.6*Math.sin(1.2*a.time)+.4*Math.sin(.6*a.time));a.q8=1;a.q7=1;a.q6=1;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n//keep q1 negative, that's where the interesting shape is\nq1= (0.2*sin(time*0.3));\nq2= abs(0.8*sin(time*0.45));\nq3= 1*sin(time*0.6);\nq4= 0.7*sin(time*0.51);\nq5= 1*cos(time*0.45);\n\nmonitor=q5;\nwave_r = wave_r + 0.45*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\nwave_b = wave_b + 0.45*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\nwave_g = wave_g + 0.45*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\n\n//q8=wave_r;\n//q7=wave_g;\n//q6=wave_b;\nq8=1;\nq7=1;\nq6=1;","pixel_eqs_eel":"","warp":"uniform sampler2D sampler_rand00;\n shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = tmpvar_2.xyz;\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((tmpvar_2.x > (q21 * q13)) && (tmpvar_2.x <= (q24 * q11)))) {\n    ret_1.y = (tmpvar_2.y + (tmpvar_4.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (tmpvar_2.z + (tmpvar_4.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (tmpvar_2.x + (tmpvar_4.z * 0.5));\n  };\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5) / 256.0));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_rand00, (uv_orig * aspect.xy));\n  vec2 x_6;\n  x_6 = (uv - uv_orig);\n  ret_1 = (mix (ret_1, tmpvar_5.xyz, vec3(clamp (\n    ((1.0 - (abs(\n      (((dot (tmpvar_5.xyz, vec3(0.32, 0.49, 0.29)) * 0.8) + 0.1) - (0.5 + (roam_cos.y * 0.25)))\n    ) * (3.0 + \n      (9.0 * rand_preset.x)\n    ))) - ((texture (sampler_noise_lq, (\n      (uv * 0.1)\n     + \n      (time * 0.01)\n    )).x * 6.0) - 2.0))\n  , 0.0, 1.0))) * (0.97 + (0.03 * \n    clamp ((sqrt(dot (x_6, x_6)) * 200.0), 0.0, 1.0)\n  )));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  ret_1 = (ret_1 + ((texture (sampler_blur1, \n    (uv + ret_1.xy)\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_2;\n  tmpvar_2.x = (uv.x - ret_1.y);\n  tmpvar_2.y = (uv.y - ret_1.y);\n  ret_1 = (ret_1 + ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_1.x > (q26 * q13)) && (ret_1.x <= (q23 * q11)))) {\n    ret_1.z = (ret_1.z - (tmpvar_3.x * 0.5));\n  };\n  if (((ret_1.y > (q25 * q11)) && (ret_1.y <= (q22 * q12)))) {\n    ret_1.x = (ret_1.x - (tmpvar_3.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\n    ret_1.y = (ret_1.y - (tmpvar_3.z * 0.5));\n  };\n  vec3 tmpvar_4;\n  tmpvar_4 = pow (((\n    sqrt(dot (ret_1, ret_1))\n   * ret_1) * 1.33), (0.89 - (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3)));\n  ret_1 = (tmpvar_4 * tmpvar_4.z);\n  ret_1 = (ret_1 - texture (sampler_main, uv).xyz);\n  ret_1 = (1.0 - ret_1);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"#define sampler_pic sampler_rand00\nsampler2D sampler_pic;\n\nshader_body\n{\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*1;\n\n    // mix in img...\n    float3 pic = tex2D(sampler_pic, uv_orig*aspect.xy).xyz;\n    float lum = lum(pic);\n    float use_it = abs(lum*0.8+0.1 - (0.5+roam_cos.y*0.25));\n    float LFNoise = tex2D(sampler_noise_lq, uv*0.1 + time*0.01).x*6-2;\n    use_it = saturate(1 - use_it*(3+9*rand_preset.x) - LFNoise);\n    ret = lerp(ret, pic, use_it.xxx);\n\n    // darken over time\n    ret *= 0.97 + 0.03*saturate( length(uv - uv_orig)*200 );  // center only\n}\n","comp_hlsl":"shader_body\n{\n\nret=GetBlur1(uv);\nret+=GetBlur1(float2(uv.x+ret.x,uv.y+ret.y));\nret+=GetBlur1(float2(uv.x-ret.y,uv.y-ret.y));\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret=pow(length(ret)*ret*1.33,0.89-GetBlur3(uv));\n//ret=saturate(ret);\n//ret*=tex2D(sampler_noise_lq,uv*ret.y);\nret*=ret.z;\nret=ret-GetPixel(uv);\nret=1-ret;\n}"}