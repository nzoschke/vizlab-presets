{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.9,"echo_zoom":1,"wrap":0,"brighten":1,"darken":1,"wave_a":0.001,"zoom":0.96,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"r":0.8,"g":0.7},"init_eqs_str":"a.bsize=0;a.bx=0;a.q1=0;a.by=0;a.bspeed=0;a.aspeed=0;a.ax=0;a.asize=0;a.ay=0;a.aturns=0;a.bturns=0;","frame_eqs_str":"","point_eqs_str":"a.aturns=a.q1*a.q1+a.sample;a.asize=.1;a.aspeed=.1;a.ax=(a.asize-a.asize*a.sample)*Math.sin(3.14*a.aspeed*a.time+6.28*a.sample*a.aturns);a.ay=(a.asize-a.asize*a.sample)*Math.cos(3.14*a.aspeed*a.time+6.28*a.sample*a.aturns);a.bturns=a.q1*a.q1;a.bsize=.3;a.bspeed=.1;a.bx=(a.bsize-a.bsize*a.sample)*Math.sin(3.14*a.bspeed*a.time+6.28*a.sample*a.bturns);a.by=(a.bsize-a.bsize*a.sample)*Math.cos(3.14*a.bspeed*a.time+6.28*a.sample*a.bturns);a.x=-a.ax-a.bx+.5;a.y=a.ax+a.by+.5;a.b=.9+\n.1*a.sample;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"aturns = q1*q1+sample;\nasize = .1;\naspeed = .1;\n\nax = (asize-asize*sample)*sin(aspeed*3.14*time+sample*6.28*aturns);\nay = (asize-asize*sample)*cos(aspeed*3.14*time+sample*6.28*aturns);\n\nbturns = q1*q1;\nbsize = .3;\nbspeed = .1;\n\nbx = (bsize-bsize*sample)*sin(bspeed*3.14*time+sample*6.28*bturns);\nby = (bsize-bsize*sample)*cos(bspeed*3.14*time+sample*6.28*bturns);\n\nx =  -ax - bx + 0.5;\ny =  ax +by + 0.5;\n\nb = 0.9 + .1*sample;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"scaling":0.01,"r":0.8,"g":0.7},"init_eqs_str":"a.bsize=0;a.bx=0;a.q1=0;a.by=0;a.bspeed=0;a.aspeed=0;a.ax=0;a.asize=0;a.ay=0;a.aturns=0;a.bturns=0;","frame_eqs_str":"","point_eqs_str":"a.aturns=a.q1*a.q1+a.sample;a.asize=.1;a.aspeed=.1;a.ax=(a.asize-a.asize*a.sample)*Math.sin(3.14*a.aspeed*a.time+6.28*a.sample*a.aturns);a.ay=(a.asize-a.asize*a.sample)*Math.cos(3.14*a.aspeed*a.time+6.28*a.sample*a.aturns);a.bturns=a.q1*a.q1;a.bsize=.3;a.bspeed=.1;a.bx=(a.bsize-a.bsize*a.sample)*Math.sin(3.14*a.bspeed*a.time+6.28*a.sample*a.bturns);a.by=(a.bsize-a.bsize*a.sample)*Math.cos(3.14*a.bspeed*a.time+6.28*a.sample*a.bturns);a.x=a.ax+a.bx+.5;a.y=a.ax+a.by+.5;a.b=.9+\n.1*a.sample;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"aturns = q1*q1+sample;\nasize = .1;\naspeed = .1;\n\nax = (asize-asize*sample)*sin(aspeed*3.14*time+sample*6.28*aturns);\nay = (asize-asize*sample)*cos(aspeed*3.14*time+sample*6.28*aturns);\n\nbturns = q1*q1;\nbsize = .3;\nbspeed = .1;\n\nbx = (bsize-bsize*sample)*sin(bspeed*3.14*time+sample*6.28*bturns);\nby = (bsize-bsize*sample)*cos(bspeed*3.14*time+sample*6.28*bturns);\n\nx =  ax + bx + 0.5;\ny =  ax + by + 0.5;\n\nb = 0.9 + .1*sample;"},{"baseVals":{"thick":1,"r":0.8,"g":0.7,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.t2=0;a.q1=0;","frame_eqs_str":"a.t2+=div(.4*sign(-20+mod(a.time,40))*a.bass,a.fps);a.q1=a.t2;a.monitor=a.q1;a.wave_a=0;a.warp=0;a.zoom=.995;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//t2=t2+ sign(-20+(time%40)) * .5/fps;\nt2=t2+ sign(-20+(time%40)) * .4*bass/fps ;\n\nq1=t2;\nmonitor=q1;\n\nwave_a=0;\nwarp=0;\nzoom=.995","pixel_eqs_eel":"","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  float tmpvar_2;\n  tmpvar_2 = dot (texsize.zw, texsize.zw);\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \n    ((tmpvar_3 * (1.0 - (8.0 * \n      sqrt(tmpvar_2)\n    ))) + 0.5)\n  ).xyz), texture (sampler_main, (\n    (tmpvar_3 * (1.0 + (8.0 * sqrt(tmpvar_2))))\n   + 0.5)).xyz) - 0.024);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\n  ), pow (hue_shader.zxy, ret_2)));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // feather pen\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1-8*length(texsize.zw)) + 0.5 ).xyz);\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1+8*length(texsize.zw)) + 0.5 ).xyz);\n\n    // darken over time\n    ret -= 0.024;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader.zxy,ret));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}