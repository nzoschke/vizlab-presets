{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":1.008,"wave_scale":1.032,"wave_smoothing":0.9,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":1.389,"warpscale":0.013,"zoomexp":0.95137,"fshader":0.97,"zoom":0.9327,"warp":0.535,"sx":0.8034,"wave_r":0.15,"wave_g":0.15,"wave_b":0.15,"ob_size":0,"ob_r":0.2,"ob_g":0.2,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0.2,"ib_g":0.2,"ib_b":0.2,"ib_a":1,"mv_x":64,"mv_y":1,"mv_l":0.7},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.1*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.05*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.wave_b+=.5*(.6*Math.sin(.7*a.time)+.4*Math.sin(.3*a.time));a.mv_r+=2*a.bass;a.mv_g+=2*a.treb;a.mv_b+=2*a.mid;a.mv_y=1.25;a.zoom+=.2*(a.bass_att-.8);","pixel_eqs_str":"a.rot=.1*a.bass-3*a.rad-2+(.5*a.rad-10-(.5*a.rad-3*a.time)-.2*a.bass_att);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.100*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\nwave_g = wave_g + 0.050*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\nwave_b = wave_b + 0.500*( 0.60*sin(0.700*time) + 0.40*sin(0.300*time) );\nmv_r = mv_r + bass*2;\nmv_g = mv_g + treb*2;\nmv_b = mv_b + mid*2;\nmv_y = 1.25;\nzoom = zoom+(bass_att-0.8)*0.2;","pixel_eqs_eel":"rot =(0.1*bass)-rad * 3-2+(0.5*rad-10-(0.5*rad-3*time)- 0.2*bass_att);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz - (tmpvar_2.xyz * 0.5));\n  ret_1 = ((ret_1 * abs(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2) - 0.5)\n  )) * 5.0);\n  ret_1 = (ret_1 - 0.01);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  float ang2_1;\n  vec2 uv2_2;\n  vec3 ret_3;\n  float tmpvar_4;\n  tmpvar_4 = ((rad * sqrt(\n    dot (texsize.xy, texsize.xy)\n  )) * 0.5);\n  ang2_1 = ((ang * 0.1591549) + ((time * 0.015) - (tmpvar_4 * 0.0002)));\n  ang2_1 = (fract((ang2_1 * 7.0)) / 7.0);\n  ang2_1 = (abs((ang2_1 - 0.07142857)) * 6.283185);\n  vec2 tmpvar_5;\n  tmpvar_5.x = cos(ang2_1);\n  tmpvar_5.y = sin(ang2_1);\n  uv2_2 = (0.5 + ((\n    (tmpvar_4 * 0.8)\n   * tmpvar_5) * texsize.zw));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, uv2_2);\n  ret_3 = tmpvar_6.xyz;\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv2_2.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_6.x > (q26 * q13)) && (tmpvar_6.x <= (q23 * q11)))) {\n    ret_3.z = (tmpvar_6.z - (tmpvar_7.x * 0.5));\n  };\n  if (((tmpvar_6.y > (q25 * q11)) && (tmpvar_6.y <= (q22 * q12)))) {\n    ret_3.x = (tmpvar_6.x - (tmpvar_7.y * 0.5));\n  };\n  if (((ret_3.z > (q24 * q12)) && (ret_3.z <= (q21 * q13)))) {\n    ret_3.y = (tmpvar_6.y - (tmpvar_7.z * 0.5));\n  };\n  ret_3 = (ret_3 * 1.333);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_3;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    \n    // darken (decay) over time\n    ret = ret- (ret*.5);\n    ret = ret*(abs(GetBlur2(uv)-.5))*5;\n    ret = ret - .01;\n}","comp_hlsl":"shader_body\n{\n    float rad_lq = rad * length(texsize.xy)*0.5;\n    float ang_lq = ang;\n\n    float2 uv2 = (uv - 0.5);\n    float rad2 = rad_lq*0.8;\n    float ang2 = ang_lq * M_INV_PI_2;\n\n        ang2 += time*0.015 - rad_lq*0.0002;\n        float fins = 7;\n          ang2 = frac(ang2*fins)/fins;\n          ang2 = abs(ang2 - 0.5/fins);\n\n    ang2 *= M_PI_2;\n    uv2 = 0.5 + rad2*float2(cos(ang2),sin(ang2))*texsize.zw;\n\n    ret = tex2D(sampler_main, uv2).xyz;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv2.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \n    ret *= 1.333; // a little bit of overbright\n}"}