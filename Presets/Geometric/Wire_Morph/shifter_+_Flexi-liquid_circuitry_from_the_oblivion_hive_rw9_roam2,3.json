{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":1,"wave_a":0.001,"warpanimspeed":0.037,"warpscale":0.015,"zoom":0.78752,"warp":0.033,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.035,"ob_r":1,"ob_g":1,"ob_b":1,"ib_r":1,"ib_g":1,"ib_b":0.96,"ib_a":1,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":2.66717,"a":0.4,"a2":0.4,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.r=Math.sin(a.q1);a.g=Math.sin(1.1*a.q1);a.b=Math.sin(1.4*a.q1);a.r2=Math.sin(1.25*a.q1);a.g2=Math.sin(1.45*a.q1);a.b2=Math.sin(1.12*a.q1);","init_eqs_eel":"","frame_eqs_eel":"r = sin(q1);\ng = sin(q1*1.1);\nb = sin(q1*1.4);\nr2 = sin(q1*1.25);\ng2 = sin(q1*1.45);\nb2 = sin(q1*1.12);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.88026,"smoothing":1,"a":0.2},"init_eqs_str":"a.xx=0;a.s=0;a.xs=0;a.ztor=0;a.xtor=0;a.ytor=0;a.ss=0;a.q1=0;a.q5=0;a.xd=0;a.zd=0;a.v=0;a.yx=0;a.angle2=0;a.zs=0;a.angle=0;a.ys=0;a.level=0;a.xn=0;a.yd=0;a.angle3=0;a.yn=0;a.peek1=0;a.u=0;a.zx=0;","frame_eqs_str":"","point_eqs_str":"a.u=3.14159*Math.abs(Math.cos(.1*a.q1));a.v=6.28318*Math.abs(Math.cos(.015*a.q1));a.s=314*a.sample;a.ss=6280*a.sample;a.xs=.5*Math.sin(a.s)*Math.cos(a.ss)*equal(a.q5,0)+(.6+.1*Math.cos(a.s))*Math.cos(a.ss)*equal(a.q5,1)+.5*Math.sin(a.s)*Math.cos(a.ss)*equal(a.q5,2);a.ys=.5*Math.sin(a.s)*Math.sin(a.ss)*equal(a.q5,0)+(.6+.1*Math.cos(a.s))*Math.sin(a.ss)*equal(a.q5,1)+.5*Math.sin(a.s)*Math.sin(a.ss)*equal(a.q5,2);a.zs=.5*Math.cos(a.s)*equal(a.q5,0)+.1*Math.sin(a.s)*equal(a.q5,\n1)+.5*Math.sin(a.s)*equal(a.q5,2);a.xtor=(.6+.1*Math.cos(a.s))*Math.cos(a.ss);a.ytor=(.6+.1*Math.cos(a.s))*Math.sin(a.ss);a.ztor=.1*Math.sin(a.s);a.angle=.3*a.q1;a.yx=a.ys*Math.cos(a.angle)-a.zs*Math.sin(a.angle);a.zx=a.ys*Math.sin(a.angle)+a.zs*Math.cos(a.angle);a.xx=a.xs;a.angle2=.5*a.q1;a.xd=a.xx*Math.cos(a.angle2)-a.zx*Math.sin(a.angle2);a.zd=a.xx*Math.sin(a.angle2)+a.zx*Math.cos(a.angle2);a.yd=a.yx;a.angle3=.41*a.q1;a.xn=a.xd*Math.cos(a.angle3)-a.yd*Math.sin(a.angle3);a.yn=a.xd*Math.sin(a.angle3)+\na.yd*Math.cos(a.angle3);a.zd+=2;a.peek1=10*(a.value1+a.value2);a.level=.00001<Math.abs(above(a.peek1,a.level))?a.peek1:a.level-.00025;a.level=.00001<Math.abs(below(a.level,0))?0:a.level;a.zd=a.zd+2+a.level;a.x=a.xn*a.zd*.05+.5;a.y=a.yn*a.zd*.06+.5;a.r=.5+.5*Math.sin(1.2*a.q1+a.x+a.x);a.g=.5+.5*Math.sin(1.5*a.q1+a.x+a.y);a.b=.5+.5*Math.sin(1.36*a.q1+a.y+a.y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = abs(cos(q1*0.1))*3.14159;\nv = abs(cos(q1*0.015))*3.14159*2;\ns = sample*3.14*100;\nss = sample*6.28*1000;\n\n//draw\nxs = 0.5*sin(s)*cos(ss)*equal(q5,0) +\n(0.6 + 0.1*cos(s))*cos(ss)*equal(q5,1) +\n0.5*sin(s)*cos(ss)*equal(q5,2);\nys = 0.5*sin(s)*sin(ss)*equal(q5,0) +\n(0.6 + 0.1*cos(s))*sin(ss)*equal(q5,1) +\n0.5*sin(s)*sin(ss)*equal(q5,2);\nzs = 0.5*cos(s)*equal(q5,0) +\n0.1*sin(s)*equal(q5,1) +\n0.5*sin(s)*equal(q5,2);\n\n\n\nxtor = (0.6 + 0.1*cos(s))*cos(ss);\nytor = (0.6 + 0.1*cos(s))*sin(ss);\nztor = 0.1*sin(s);\n\n\n//rotate x axis\nangle = q1*0.3;\nyx = ys*cos(angle) - zs*sin(angle);\nzx = ys*sin(angle) + zs*cos(angle);\nxx = xs;\n\n//rotate y axis\nangle2 = q1*0.5;\nxd = xx*cos(angle2) - zx*sin(angle2);\nzd = xx*sin(angle2) + zx*cos(angle2);\nyd = yx;\n\n//rotaye z axis\nangle3 = q1*0.41;\nxn = xd*cos(angle3) - yd*sin(angle3);\nyn = xd*sin(angle3) + yd*cos(angle3);\n\nzd = zd + 2;\n\n//do that falloff effect\npeek1 = (value1 + value2)*10;\n\n//if sample louder set that to level else decrement level\nlevel = if(above(peek1,level),peek1,level - 0.00025);\nlevel = if(below(level,0),0,level);\n\n//add to z\nzd = zd + 2  + level;\n\n\nx = xn*zd*0.05 + 0.5;\ny = yn*zd*0.05*1.2 + 0.5;\n\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.88026,"smoothing":1,"a":0.2},"init_eqs_str":"a.xx=0;a.s=0;a.xs=0;a.ztor=0;a.xtor=0;a.ytor=0;a.ss=0;a.q1=0;a.q5=0;a.xd=0;a.zd=0;a.v=0;a.yx=0;a.angle2=0;a.zs=0;a.angle=0;a.ys=0;a.level=0;a.xn=0;a.yd=0;a.angle3=0;a.yn=0;a.peek1=0;a.u=0;a.zx=0;","frame_eqs_str":"","point_eqs_str":"a.u=3.14159*Math.abs(Math.cos(.1*a.q1));a.v=6.28318*Math.abs(Math.cos(.015*a.q1));a.s=314*a.sample;a.ss=6280*a.sample;a.xs=.5*Math.sin(a.s)*Math.cos(a.ss)*equal(a.q5,2)+(.6+.1*Math.cos(a.s))*Math.cos(a.ss)*equal(a.q5,0)+.5*Math.sin(a.s)*Math.cos(a.ss)*equal(a.q5,1);a.ys=.5*Math.sin(a.s)*Math.sin(a.ss)*equal(a.q5,2)+(.6+.1*Math.cos(a.s))*Math.sin(a.ss)*equal(a.q5,0)+.5*Math.sin(a.s)*Math.sin(a.ss)*equal(a.q5,1);a.zs=.5*Math.cos(a.s)*equal(a.q5,2)+.1*Math.sin(a.s)*equal(a.q5,\n0)+.5*Math.sin(a.s)*equal(a.q5,1);a.xtor=(.6+.1*Math.cos(a.s))*Math.cos(a.ss);a.ytor=(.6+.1*Math.cos(a.s))*Math.sin(a.ss);a.ztor=.1*Math.sin(a.s);a.angle=.3*a.q1;a.yx=a.ys*Math.cos(a.angle)-a.zs*Math.sin(a.angle);a.zx=a.ys*Math.sin(a.angle)+a.zs*Math.cos(a.angle);a.xx=a.xs;a.angle2=.5*a.q1;a.xd=a.xx*Math.cos(a.angle2)-a.zx*Math.sin(a.angle2);a.zd=a.xx*Math.sin(a.angle2)+a.zx*Math.cos(a.angle2);a.yd=a.yx;a.angle3=.41*a.q1;a.xn=a.xd*Math.cos(a.angle3)-a.yd*Math.sin(a.angle3);a.yn=a.xd*Math.sin(a.angle3)+\na.yd*Math.cos(a.angle3);a.zd+=2;a.peek1=10*(a.value1+a.value2);a.level=.00001<Math.abs(above(a.peek1,a.level))?a.peek1:a.level-.00025;a.level=.00001<Math.abs(below(a.level,0))?0:a.level;a.zd=a.zd+2+a.level;a.x=a.xn*a.zd*.05+.5;a.y=a.yn*a.zd*.06+.5;a.r=.5+.5*Math.sin(1.2*a.q1+a.x+a.x);a.g=.5+.5*Math.sin(1.5*a.q1+a.x+a.y);a.b=.5+.5*Math.sin(1.16*a.q1+a.y+a.y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = abs(cos(q1*0.1))*3.14159;\nv = abs(cos(q1*0.015))*3.14159*2;\ns = sample*3.14*100;\nss = sample*6.28*1000;\n\n//draw\nxs = 0.5*sin(s)*cos(ss)*equal(q5,2) +\n(0.6 + 0.1*cos(s))*cos(ss)*equal(q5,0) +\n0.5*sin(s)*cos(ss)*equal(q5,1);\nys = 0.5*sin(s)*sin(ss)*equal(q5,2) +\n(0.6 + 0.1*cos(s))*sin(ss)*equal(q5,0) +\n0.5*sin(s)*sin(ss)*equal(q5,1);\nzs = 0.5*cos(s)*equal(q5,2) +\n0.1*sin(s)*equal(q5,0) +\n0.5*sin(s)*equal(q5,1);\n\n\nxtor = (0.6 + 0.1*cos(s))*cos(ss);\nytor = (0.6 + 0.1*cos(s))*sin(ss);\nztor = 0.1*sin(s);\n\n\n//rotate x axis\nangle = q1*0.3;\nyx = ys*cos(angle) - zs*sin(angle);\nzx = ys*sin(angle) + zs*cos(angle);\nxx = xs;\n\n//rotate y axis\nangle2 = q1*0.5;\nxd = xx*cos(angle2) - zx*sin(angle2);\nzd = xx*sin(angle2) + zx*cos(angle2);\nyd = yx;\n\n//rotaye z axis\nangle3 = q1*0.41;\nxn = xd*cos(angle3) - yd*sin(angle3);\nyn = xd*sin(angle3) + yd*cos(angle3);\n\nzd = zd + 2;\n\n//do that falloff effect\npeek1 = (value1 + value2)*10;\n\n//if sample louder set that to level else decrement level\nlevel = if(above(peek1,level),peek1,level - 0.00025);\nlevel = if(below(level,0),0,level);\n\n//add to z\nzd = zd + 2  + level;\n\n\nx = xn*zd*0.05 + 0.5;\ny = yn*zd*0.05*1.2 + 0.5;\n\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.16 + y + y);"},{"baseVals":{"spectrum":1,"additive":1,"a":0.5,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"u = abs(cos(q1*0.1))*3.14159;\nv = abs(cos(q1*0.015))*3.14159*2;\ns = sample*3.14;\nss = sample*6.28*100;\n\n//draw\nxs = 0.5*sin(s)*cos(ss);\nys = 0.5*sin(s)*sin(ss);\nzs = 0.5*sin(s);\n\n\n//plot x,y,z to point on circle\n//smp=sample*6.283;\n//xp=sin(smp )*0.30;\n//yp=cos(smp )*0.30;\n//zp=0;\n\n\n//alter shape;\n///angy=sin(sample*6.28*4 +t1 )*6.28;\n//xq=xp*cos(angy) - zp*sin(angy);\n//zq=xp*sin(angy) + zp*cos(angy);\n//xp=xq;\n//zp=zq;\n\n\n\n//rotate on y axis;\n//angy=t1*0.1;\n//xq=xp*cos(angy) - zp*sin(angy);\n//zq=xp*sin(angy) + zp*cos(angy);\n//xp=xq;\n//zp=zq;\n\n//rotate on x axis\n//axs1 = sin(t1*0.15) + 1.6;\n//yq= yp*cos(axs1) - zp*sin(axs1);\n//zq= yp*sin(axs1) + zp*cos(axs1);\n//yp=yq;\n//zp=zq;\n\n//rotate on y axis again\n//axs2 = sin(t1*0.1)*3.3;\n//xq=xp*cos(axs2) - zp*sin(axs2);\n//zq=xp*sin(axs2) + zp*cos(axs2);\n//xp=xq;\n//zp=zq;\n\n\n\n\n//rotate x axis\nangle = sin(q1*0.15 + 3.14);\nyx = ys*cos(angle) - zs*sin(angle);\nzx = ys*sin(angle) + zs*cos(angle);\nxx = xs;\n\n//rotate y axis\nangle2 = sin(q1*0.2 + 3.14);\nxd = xx*cos(angle2) - zx*sin(angle2);\nzd = xx*sin(angle2) + zx*cos(angle2);\nyd = yx;\n\nzd = zd + 2;\n\nx = xd*zd*0.3*1.2 + 0.5;\ny = yd*zd*0.3*1.2 + 0.5;\n\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = abs(cos(q1*0.1))*3.14159;\nv = abs(cos(q1*0.015))*3.14159*2;\ns = sample*3.14;\nss = sample*6.28*100;\n\n//draw\nxs = 0.5*sin(s)*cos(ss);\nys = 0.5*sin(s)*sin(ss);\nzs = 0.5*sin(s);\n\n\n//plot x,y,z to point on circle\n//smp=sample*6.283;\n//xp=sin(smp )*0.30;\n//yp=cos(smp )*0.30;\n//zp=0;\n\n\n//alter shape;\n///angy=sin(sample*6.28*4 +t1 )*6.28;\n//xq=xp*cos(angy) - zp*sin(angy);\n//zq=xp*sin(angy) + zp*cos(angy);\n//xp=xq;\n//zp=zq;\n\n\n\n//rotate on y axis;\n//angy=t1*0.1;\n//xq=xp*cos(angy) - zp*sin(angy);\n//zq=xp*sin(angy) + zp*cos(angy);\n//xp=xq;\n//zp=zq;\n\n//rotate on x axis\n//axs1 = sin(t1*0.15) + 1.6;\n//yq= yp*cos(axs1) - zp*sin(axs1);\n//zq= yp*sin(axs1) + zp*cos(axs1);\n//yp=yq;\n//zp=zq;\n\n//rotate on y axis again\n//axs2 = sin(t1*0.1)*3.3;\n//xq=xp*cos(axs2) - zp*sin(axs2);\n//zq=xp*sin(axs2) + zp*cos(axs2);\n//xp=xq;\n//zp=zq;\n\n\n\n\n//rotate x axis\nangle = sin(q1*0.15 + 3.14);\nyx = ys*cos(angle) - zs*sin(angle);\nzx = ys*sin(angle) + zs*cos(angle);\nxx = xs;\n\n//rotate y axis\nangle2 = sin(q1*0.2 + 3.14);\nxd = xx*cos(angle2) - zx*sin(angle2);\nzd = xx*sin(angle2) + zx*cos(angle2);\nyd = yx;\n\nzd = zd + 2;\n\nx = xd*zd*0.3*1.2 + 0.5;\ny = yd*zd*0.3*1.2 + 0.5;\n\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"a":0.5,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"u = abs(cos(q1*0.1))*3.14159;\nv = abs(cos(q1*0.015))*3.14159*2;\ns = sample*20;\n\n//draw\nxs = 0.5*sin(s)*cos(s*v);\nys = 0.5*sin(s)*sin(s*v);\nzs = 0.5*sin(u);\n\n\n//plot x,y,z to point on circle\n//smp=sample*6.283;\n//xp=sin(smp )*0.30;\n//yp=cos(smp )*0.30;\n//zp=0;\n\n\n//alter shape;\n///angy=sin(sample*6.28*4 +t1 )*6.28;\n//xq=xp*cos(angy) - zp*sin(angy);\n//zq=xp*sin(angy) + zp*cos(angy);\n//xp=xq;\n//zp=zq;\n\n\n\n//rotate on y axis;\n//angy=t1*0.1;\n//xq=xp*cos(angy) - zp*sin(angy);\n//zq=xp*sin(angy) + zp*cos(angy);\n//xp=xq;\n//zp=zq;\n\n//rotate on x axis\n//axs1 = sin(t1*0.15) + 1.6;\n//yq= yp*cos(axs1) - zp*sin(axs1);\n//zq= yp*sin(axs1) + zp*cos(axs1);\n//yp=yq;\n//zp=zq;\n\n//rotate on y axis again\n//axs2 = sin(t1*0.1)*3.3;\n//xq=xp*cos(axs2) - zp*sin(axs2);\n//zq=xp*sin(axs2) + zp*cos(axs2);\n//xp=xq;\n//zp=zq;\n\n\n\n\n//rotate x axis\nangle = sin(q1*0.15 - 1.57);\nyx = ys*cos(angle) - zs*sin(angle);\nzx = ys*sin(angle) + zs*cos(angle);\nxx = xs;\n\n//rotate y axis\n//angle2 = sin(q1*0.2 - 1.57);\nxd = xx*cos(angle2) - zx*sin(angle2);\nzd = xx*sin(angle2) + zx*cos(angle2);\nyd = yx;\n\n\nx = xd*zd + 0.5;\ny = yd*zd + 0.5;\n\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = abs(cos(q1*0.1))*3.14159;\nv = abs(cos(q1*0.015))*3.14159*2;\ns = sample*20;\n\n//draw\nxs = 0.5*sin(s)*cos(s*v);\nys = 0.5*sin(s)*sin(s*v);\nzs = 0.5*sin(u);\n\n\n//plot x,y,z to point on circle\n//smp=sample*6.283;\n//xp=sin(smp )*0.30;\n//yp=cos(smp )*0.30;\n//zp=0;\n\n\n//alter shape;\n///angy=sin(sample*6.28*4 +t1 )*6.28;\n//xq=xp*cos(angy) - zp*sin(angy);\n//zq=xp*sin(angy) + zp*cos(angy);\n//xp=xq;\n//zp=zq;\n\n\n\n//rotate on y axis;\n//angy=t1*0.1;\n//xq=xp*cos(angy) - zp*sin(angy);\n//zq=xp*sin(angy) + zp*cos(angy);\n//xp=xq;\n//zp=zq;\n\n//rotate on x axis\n//axs1 = sin(t1*0.15) + 1.6;\n//yq= yp*cos(axs1) - zp*sin(axs1);\n//zq= yp*sin(axs1) + zp*cos(axs1);\n//yp=yq;\n//zp=zq;\n\n//rotate on y axis again\n//axs2 = sin(t1*0.1)*3.3;\n//xq=xp*cos(axs2) - zp*sin(axs2);\n//zq=xp*sin(axs2) + zp*cos(axs2);\n//xp=xq;\n//zp=zq;\n\n\n\n\n//rotate x axis\nangle = sin(q1*0.15 - 1.57);\nyx = ys*cos(angle) - zs*sin(angle);\nzx = ys*sin(angle) + zs*cos(angle);\nxx = xs;\n\n//rotate y axis\n//angle2 = sin(q1*0.2 - 1.57);\nxd = xx*cos(angle2) - zx*sin(angle2);\nzd = xx*sin(angle2) + zx*cos(angle2);\nyd = yx;\n\n\nx = xd*zd + 0.5;\ny = yd*zd + 0.5;\n\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"}],"init_eqs_str":"a.pret=0;a.st=0;a.aba=0;a.br=0;a.avol=0;a.atr=0;a.spika=0;a.bash=0;a.abt=0;a.bt=0;a.q1=0;a.q5=0;a.calc=0;a.bt2=0;a.mvol=0;a.count=0;a.clr=0;a.abass=0;a.afps=0;a.q4=0;a.spik=0;a.vol=0;a.mba=0;a.q2=0;a.vol2=0;a.tresh=0;a.mtime=0;a.mtr=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.br=1;a.bt=a.time;a.bt2=a.time+1;a.abt=0;a.count=1;a.afps=a.fps;a.mvol=div(a.bass+a.mid+a.treb,3);a.st=a.time;a.abt=.1;","frame_eqs_str":"a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.vol2=.25*(a.bass_att+a.mid_att+a.treb_att);a.vol2*=a.vol2;a.q2=a.vol2;a.mtime+=.01*a.vol;a.q1=.5*a.time;a.pret=a.time-a.st;a.avol+=div(a.bass+a.mid+a.treb,3);a.aba+=a.bass;a.mba=div(div(a.aba,a.pret),a.fps);a.atr+=a.treb;a.mtr=div(div(a.atr,a.pret),a.fps);a.mvol=div(div(a.avol,a.pret),a.fps);a.tresh=a.mtr+.1;a.bash=a.mba+.1;a.clr=50;a.abass=.4*a.bass_att+a.abass;a.bt=a.time*above(a.spika,0)+a.bt*equal(a.spika,0);a.spika=above(a.treb_att,\na.tresh)*a.treb+above(a.bass_att,a.bash)*a.bass;a.spik+=.4*a.spika;a.bt2=a.time*above(a.spika,0)+a.bt*equal(a.spika,0);a.count+=above(a.bt2-a.bt,0);a.abt=Math.max(below(a.br,10),equal(a.br,10))*(a.abt+(.00001<Math.abs(a.bt2-a.bt)?a.bt2-a.bt:div(1,a.fps)))+above(a.br,10);a.br=div(a.abt,a.count);a.dx=a.dx-Math.cos(a.abass)*a.br*.02+.02*div(Math.sin(a.spik),a.br);a.dy=a.dy-Math.sin(a.abass)*a.br*.02+.02*div(Math.cos(a.spik),a.br);a.sx+=Math.sin(a.abass)*a.dx*2;a.sy-=Math.cos(a.spik)*a.dy*2;a.ib_a=pow(div(a.spika,\n5),5);a.calc=below(a.pret,a.clr);a.abass*=below(a.abass,9E3);a.avol=.00001<Math.abs(a.calc)?a.avol:div(a.bass+a.mid+a.treb,3);a.st=.00001<Math.abs(a.calc)?a.st:a.time-1;a.aba=.00001<Math.abs(a.calc)?a.aba:a.bass;a.atr=.00001<Math.abs(a.calc)?a.atr:a.treb;a.abt=above(a.pret,.2)*a.abt+.5*below(a.pret,.2);a.afps=div(a.fps+a.afps,2);a.zoom-=90*(div(a.fps,a.afps)-1);a.q4=mod(Math.floor(div(a.pret,a.br)),2);a.q5=above(a.spika,0);","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\nbr=1;\nbt=time;\nbt2=time+1;\nabt=0;\ncount=1;\nafps=fps;\nmvol=(bass+mid+treb)/3;\nst=time;\nabt=0.1;","frame_eqs_eel":"vol=(bass+mid+treb)*0.25;\nvol=vol*vol;\n\nvol2=(bass_att+mid_att+treb_att)*0.25;\nvol2=vol2*vol2;\n\nq2=vol2;\n\nmtime=mtime+vol*0.01;\nq1=time*0.5;\n//can be buggy; if doesn't work, run init code.\n//--------------------------------------\n//Fed's beat code:\n//\n//br - beat rate;\n//bt,bt2 - beat times;\n//spika - beat detector, power of the beat;\n//count - beat counter;\n//++++++++++++++++++++++++++++++++++++++\n//TRESH - power of treble to detect beat;\n//BASH - power of bass to detect beat;\n//beat detector works only if both of them \n//are less then treb & bass!\n//++++++++++++++++++++++++++++++++++++++\n//abt - summ of all beatrates;\n//Increases if no beat.\n//mvol - middle volume;\n//mba - middle bass;\n//mtr - middle treb;\n//pret - preset time;\n//clr - amount of seconds to recalculate volumes.\n//--------------------------------------\npret=time-st;\navol=avol+(bass+mid+treb)/3;\naba=aba+bass;\nmba=aba/pret/fps;\natr=atr+treb;\nmtr=atr/pret/fps;\nmvol=avol/pret/fps;\nTRESH=mtr+0.1;\nBASH=mba+0.1;\nclr=50;//----------HERE!!!!!! in seconds.\nabass=bass_att*0.4+abass;\nbt=time*above(spika,0)+bt*equal(spika,0);\nspika=above(treb_att,TRESH)*treb+above(bass_att,BASH)*bass;\nspik=spik+spika*0.4;\nbt2=time*above(spika,0)+bt*equal(spika,0);\ncount=count+above(bt2-bt,0);\nabt=max(below(br,10),equal(br,10))*(abt+if(bt2-bt, bt2-bt, 1/fps))+above(br,10); \nbr=abt/count;\ndx=dx-cos(abass)*br*0.02+sin(spik)/br*0.02;\ndy=dy-sin(abass)*br*0.02+cos(spik)/br*0.02;\nsx=sx+sin(abass)*dx*2;\nsy=sy-cos(spik)*dy*2;\nib_a=pow(spika/5,5);  //<--That's how we use it.\n//debugging\ncalc=below(pret,clr);\nabass=below(abass,9000)*abass;\navol=if(calc,avol,(bass+mid+treb)/3);\nst=if(calc,st,time-1);\naba=if(calc,aba,bass);\natr=if(calc,atr,treb);\nabt=above(pret,0.2)*abt+below(pret,0.2)*0.5;\n//fun\nafps=(fps+afps)/2;\nzoom=zoom-(fps/afps-1)*90;\nq4=int(pret/br)%2;\nq5=above(spika,0);\n//monitor=pow(spika,6)/3000;","pixel_eqs_eel":"","warp":" shader_body { \n  float conway_1;\n  vec3 ret_2;\n  ret_2 = ((texture (sampler_main, uv_orig).xyz * vec3(0.97, 1.0, 0.97)) - vec3(0.03, 0.0, 0.03));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_blur1, uv_orig);\n  ret_2.z = (ret_2.z + ((\n    (tmpvar_3.xyz * scale1)\n   + bias1).z * 0.45));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur3, uv_orig);\n  ret_2.x = (ret_2.x + ((\n    ((tmpvar_3.xyz * scale1) + bias1)\n  .z * 0.05) + (\n    ((tmpvar_4.xyz * scale3) + bias3)\n  .z * 0.05)));\n  ret_2.z = (ret_2.z - ret_2.x);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, uv_orig);\n  ret_2.y = clamp (tmpvar_5.y, 0.0, 1.0);\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).y + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(0.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).y);\n  float tmpvar_6;\n  tmpvar_6 = (((q5 * \n    (1.0 - ((tmpvar_3.xyz * scale1) + bias1).y)\n  ) * (1.0 - \n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\n  .y)) * (1.0 - (\n    (tmpvar_4.xyz * scale3)\n   + bias3).y));\n  conway_1 = (conway_1 - tmpvar_5.x);\n  if ((conway_1 > 0.0)) {\n    float tmpvar_7;\n    tmpvar_7 = clamp (ret_2.y, 0.0, 1.0);\n    if ((tmpvar_7 == 0.0)) {\n      ret_2.y = (floor((tmpvar_6 * 1.8)) * q1);\n    };\n  };\n  ret_2.y = (ret_2.y - ret_2.x);\n  ret_2 = (ret_2 - (1.0 - q2));\n  ret_2 = (ret_2 - (roam_sin.wzy * roam_cos.zxy));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec2 dz_1;\n  vec3 dy_2;\n  vec3 dx_3;\n  vec2 d_4;\n  vec3 ret_5;\n  vec2 tmpvar_6;\n  vec2 tmpvar_7;\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\n  d_4 = (texsize.zw * 2.0);\n  dx_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * d_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * d_4))\n  ).xyz * scale1) + bias1));\n  dy_2 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * d_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * d_4))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_9;\n  tmpvar_9.x = dx_3.y;\n  tmpvar_9.y = dy_2.y;\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\n  ret_5 = (vec3(((\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\n   * 2.0) + (\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  .y * 2.0))) * vec3(0.2, 0.3, 0.6));\n  vec2 tmpvar_10;\n  tmpvar_10.x = q19;\n  tmpvar_10.y = q20;\n  vec2 tmpvar_11;\n  tmpvar_11 = fract(((0.5 + \n    (uv - 0.5)\n  ) + (tmpvar_10 * vec2(-1.0, 1.0))));\n  vec2 tmpvar_12;\n  tmpvar_12.x = dx_3.y;\n  tmpvar_12.y = dy_2.y;\n  ret_5 = (((\n    mix (ret_5, vec3(3.0, 2.0, 1.0), ((texture (sampler_blur3, (tmpvar_11 - tmpvar_12)).xyz * scale3) + bias3).xxx)\n   * \n    (vec3(1.0, 1.0, 1.0) - ((texture (sampler_blur2, (tmpvar_11 - dz_1)).xyz * scale2) + bias2).xxx)\n  ) * (vec3(1.0, 1.0, 1.0) - vec3(\n    (1.5 * texture (sampler_main, tmpvar_11).x)\n  ))) - (roam_sin.wzy * roam_cos.zxy));\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_5;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"\nshader_body\n{\n\nret.xyz = tex2D(sampler_main, uv_orig).xyz*float3(.97,1,.97) - float3(.03,0,.03);\n\nret.z += GetBlur1(uv_orig).z*.45;\nret.x += GetBlur1(uv_orig).z*.05 + GetBlur3(uv_orig).z*.05;\nret.z -= ret.x;\n\nfloat2 pixelsize = texsize.zw;\nret.y = saturate(tex2D( sampler_pw_main,uv_orig).y);\n\nfloat1 conway = tex2D( sampler_pw_main, uv_orig + float2(-1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,1)*pixelsize).y;\n\nfloat1 test = q5*(1-GetBlur1(uv_orig).y)*(1-GetBlur2(uv_orig).y)*(1-GetBlur3(uv_orig).y);\n\nconway -= tex2D( sampler_pw_main, uv_orig).x;\n\n\nif (conway > 0) {\nif (saturate(ret.y) == 0) {\nret.y = floor(test*1.8)*q1;\n}\n}\n\nret.y -= ret.x;\n\nret.xyz -= 1-q2;\nret-=roam_sin.wzy*roam_cos.zxy;\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw;\n    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );\n    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );\nfloat2 dz = float2(dx.y,dy.y)*3;\n\nd = texsize.zw*2;\ndx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\ndy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\ndz +=float2(dx.y,dy.y);\n\nfloat3 bg = pow(length(dz)*0.8+0,0.7)*2 + GetBlur1(uv).y*2;\n\nret = bg*float3(0.2,0.3,0.6);\nfloat2 uv_swimmer =frac(0.5 + (uv-0.5)+float2(q19,q20)*float2(-1,1));\nret = lerp(ret,float3(3,2,1),GetBlur3(uv_swimmer -float2(dx.y,dy.y)).x);\nret = lerp(ret,0,GetBlur2(uv_swimmer-dz).x);\nret = lerp(ret,float3(0,0,0),1.5*GetPixel(uv_swimmer).x);\nret-=roam_sin.wzy*roam_cos.zxy;\n\n//ret = GetPixel(uv);\n}"}