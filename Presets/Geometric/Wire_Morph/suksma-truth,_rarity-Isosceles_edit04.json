{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":1.008,"wave_scale":1.032,"wave_smoothing":0.9,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":1.389,"warpscale":0.013,"zoomexp":0.95137,"fshader":0.97,"zoom":0.9327,"warp":0.535,"sx":0.8034,"wave_r":0.15,"wave_g":0.15,"wave_b":0.15,"ob_size":0,"ob_r":0.2,"ob_g":0.2,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0.2,"ib_g":0.2,"ib_b":0.2,"ib_a":1,"mv_x":64,"mv_y":1,"mv_l":0.7},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.1*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.05*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.wave_b+=.5*(.6*Math.sin(.7*a.time)+.4*Math.sin(.3*a.time));a.mv_r+=2*a.bass;a.mv_g+=2*a.treb;a.mv_b+=2*a.mid;a.mv_y=1.25;a.zoom+=.2*(a.bass_att-.8);","pixel_eqs_str":"a.rot=.1*a.bass-3*a.rad-2+(.5*a.rad-10-(.5*a.rad-3*a.time)-.2*a.bass_att);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.100*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\nwave_g = wave_g + 0.050*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\nwave_b = wave_b + 0.500*( 0.60*sin(0.700*time) + 0.40*sin(0.300*time) );\nmv_r = mv_r + bass*2;\nmv_g = mv_g + treb*2;\nmv_b = mv_b + mid*2;\nmv_y = 1.25;\nzoom = zoom+(bass_att-0.8)*0.2;","pixel_eqs_eel":"rot =(0.1*bass)-rad * 3-2+(0.5*rad-10-(0.5*rad-3*time)- 0.2*bass_att);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz - (tmpvar_2.xyz * 0.5));\n  ret_1 = ((ret_1 * abs(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2) - 0.5)\n  )) * 5.0);\n  ret_1 = (ret_1 - 0.01);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  float inten_3;\n  float dist_4;\n  float ang2_5;\n  vec2 uv2_6;\n  vec3 ret_7;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_4 = 1.0;\n  inten_3 = 1.0;\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\n  for (float n_2 = 1.0; n_2 <= 8.0; n_2 += 1.0) {\n    ang2_5 = (((6.28 * n_2) / 8.0) + (q5 * (n_2 - 1.0)));\n    float tmpvar_8;\n    tmpvar_8 = cos(ang2_5);\n    float tmpvar_9;\n    tmpvar_9 = sin(ang2_5);\n    uv2_6.x = ((uv_1.x * tmpvar_8) - (uv_1.y * tmpvar_9));\n    uv2_6.y = ((uv_1.x * tmpvar_9) + (uv_1.y * tmpvar_8));\n    uv2_6 = (uv2_6 * aspect.yx);\n    dist_4 = (1.0 - fract((\n      (0.25 * n_2)\n     + q29)));\n    dist_4 = (dist_4 * dist_4);\n    inten_3 = ((pow (dist_4, 0.2) * (1.0 - dist_4)) * 2.0);\n    vec2 tmpvar_10;\n    tmpvar_10.x = q18;\n    tmpvar_10.y = q19;\n    vec2 tmpvar_11;\n    tmpvar_11 = (((\n      (3.0 * uv2_6)\n     * dist_4) + 0.5) + ((0.5 * \n      (1.0 - (0.5 * q28))\n    ) * tmpvar_10));\n    xlat_mutableblur = ((texture (sampler_blur1, fract(tmpvar_11)).xyz * scale1) + bias1);\n    xlat_mutableneu = (texture (sampler_main, tmpvar_11).xyz + xlat_mutableblur);\n    xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_3));\n  };\n  uv2_6 = (0.5 * cos((uv_1 * 16.0)));\n  ret_7 = ((xlat_mutableret1 * 0.7) + ((\n    clamp ((0.04 / sqrt(dot (uv2_6, uv2_6))), 0.0, 1.0)\n   * vec3(1.0, 0.7, 0.0)) * q31));\n  float tmpvar_12;\n  tmpvar_12 = (0.5 / ((1.0 + uv_1.x) - (4.0 * \n    fract((time * 3.0))\n  )));\n  ret_7 = (ret_7 + (vec3((q17 * \n    clamp ((tmpvar_12 * tmpvar_12), 0.0, 1.0)\n  )) * vec3(0.0, 0.0, 0.7)));\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_7;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    \n    // darken (decay) over time\n    ret = ret- (ret*.5);\n    ret = ret*(abs(GetBlur2(uv)-.5))*5;\n    ret = ret - .01;\n}","comp_hlsl":"float3 ret1, neu, blur;\n\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nfloat dist = 1;\nfloat inten = 1;\nfloat mask = 0;\nret1 = 0;\nint anz = 8;\nfloat n = 1;\n//uv = mul(uv,float2x2(_qa));\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz + q5 * (n-1);\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    uv2 *= aspect.yx;\n    dist = 1-frac(.25 *n+q29); //evtl sqrt !\n    dist = dist*dist;\n    inten =  pow(dist,.2)*(1-dist)*2;\n    float2 uv3 = 3*uv2*dist + .5 + .5*(1-0.5*q28)* float2(q18,q19);;\n    neu =  GetPixel (uv3);\n    blur = GetBlur1 (frac(uv3));\n    neu += blur;\n    ret1 = ret1*.9+neu*inten;\n\nn++;\n}\n\nuv2 = .5*cos(uv*16);\nfloat3 dots = saturate(.04/length(uv2)) * float3 (1,.7,0);\n\n\nret = ret1*.7 + dots * q31;\nfloat3 pol = q17 * saturate (pow(.5/(1+uv.x-4*(frac(time*3))),2));\nret += pol*float3 (0,0,.7);\n\n}"}