{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":0.742,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":0.3,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;a.pi23=0;a.t1=0;","frame_eqs_str":"a.ma+=3.1415*above(a.bass,1)*.01*a.bass;a.ma-=3.1415*above(a.treb,1)*.01*a.treb;a.mx+=.0002*Math.cos(a.ma);a.my+=.0002*Math.tan(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=1-a.mx;a.y=1-a.my;a.ang=3*(Math.sin(.35*a.time)+1);a.pi23=1.333333332*Math.asin(1);a.t1=a.bass+a.mid+a.treb;","init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*tan(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=1-my;\n\nang=(sin(time*.35)+1)*3;\n//a=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nt1=bass+mid+treb;"},{"baseVals":{"enabled":1,"sides":34,"rad":0.88027,"tex_zoom":0.67032,"r":0,"b":0.5,"a":0.16,"g2":0,"b2":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.0015*Math.floor(rand(1001))-.25;a.y=.0015*Math.floor(rand(1001))-.25;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(1001))*.001*1.5 - .25;\ny = int(rand(1001))*.001*1.5 - .25;"},{"baseVals":{"enabled":1,"sides":34,"rad":0.88027,"tex_zoom":0.67032,"r":0,"g":0.5,"a":0.16,"g2":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.0015*Math.floor(rand(1001))-.25;a.y=.0015*Math.floor(rand(1001))-.25;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(1001))*.001*1.5 - .25;\ny = int(rand(1001))*.001*1.5 - .25;"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;","frame_eqs_str":"a.trans=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.trans2=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.trans3=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+div(rand(Math.floor(a.q30)),15)+\na.instance-a.instance;a.r=.1*rand(a.q30)+a.instance-a.instance;a.g=.1*rand(a.q30)+a.instance-a.instance;a.b=.1*rand(a.q30)+a.instance-a.instance;a.r2=.1*rand(a.q30)+a.instance-a.instance;a.g2=.1*rand(a.q30)+a.instance-a.instance;a.b2=.1*rand(a.q30)+a.instance-a.instance;a.border_r=.1*rand(a.q30)+a.instance-a.instance;a.border_g=.1*rand(a.q30)+a.instance-a.instance;a.border_b=.1*rand(a.q30)+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\ntrans2 = rand(int(q30))/15+instance-instance;\ntrans3 = rand(int(q30))/15+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + rand(int(q30))/15+instance-instance;\nr=rand(q30)*.1+instance-instance;\ng=rand(q30)*.1+instance-instance;\nb=rand(q30)*.1+instance-instance;\nr2=rand(q30)*.1+instance-instance;\ng2=rand(q30)*.1+instance-instance;\nb2=rand(q30)*.1+instance-instance;\nborder_r=rand(q30)*.1+instance-instance;\nborder_g=rand(q30)*.1+instance-instance;\nborder_b=rand(q30)*.1+instance-instance;"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"smoothing":0},"init_eqs_str":"a.sp=0;a.t1=0;a.ra=0;a.sz=0;a.q3=0;a.q4=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.t1=a.q1+2*a.q2;","point_eqs_str":"a.sp=20.73456*a.sample-a.t1;a.ra=.5*(.001*Math.floor(rand(1001))-.001*Math.floor(rand(1001)));a.sz=a.sample*(.05+.05*a.ra)+1.6*a.value1*a.sample;a.x=a.q3+a.sz*Math.sin(a.sp);a.y=1-a.q4+a.sz*Math.cos(a.sp);a.a=Math.min(4*a.value1,1);","init_eqs_eel":"","frame_eqs_eel":"t1 = (q1 + q2*2);\n","point_eqs_eel":"sp = sample*6.2832*3.3 - t1;\nra = .5*(int(rand(1001))*.001 - int(rand(1001))*.001);\nsz = sample*(.05 + ra*.05) + value1*1.6*sample;\nx = q3 + sz*sin(sp);\ny = 1-q4 + sz*cos(sp);\n\na = min(value1*4,1);"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"smoothing":0},"init_eqs_str":"a.sp=0;a.t1=0;a.ra=0;a.sz=0;a.q3=0;a.q4=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.t1=a.q1+2*a.q2;","point_eqs_str":"a.sp=20.73456*a.sample-a.t1+3.14;a.ra=.5*(.001*Math.floor(rand(1001))-.001*Math.floor(rand(1001)));a.sz=a.sample*(.05+.05*a.ra)+1.6*a.value2*a.sample;a.x=a.q3+a.sz*Math.sin(a.sp);a.y=1-a.q4+a.sz*Math.cos(a.sp);a.a=Math.min(4*a.value2,1);","init_eqs_eel":"","frame_eqs_eel":"t1 = (q1 + q2*2);","point_eqs_eel":"sp = sample*6.2832*3.3 - t1 + 3.14;\nra = .5*(int(rand(1001))*.001 - int(rand(1001))*.001);\nsz = sample*(.05 + ra*.05) + value2*1.6*sample;\nx = q3 + sz*sin(sp);\ny = 1-q4 + sz*cos(sp);\n\na = min(value2*4,1);\n"},{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x = q1;\ny = 1-q2;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = q1;\ny = 1-q2;"},{"baseVals":{"enabled":1,"samples":102,"spectrum":1,"thick":1,"smoothing":0,"r":0,"g":0,"b":0},"init_eqs_str":"a.xang=0;a.rad=0;a.fov=0;a.t1=0;a.yang=0;a.q6=0;a.it=0;a.q1=0;a.q5=0;a.vg=0;a.my=0;a.oz=0;a.q4=0;a.mz=0;a.vol_avg=0;a.oy=0;a.ra=0;a.tm=0;a.mx=0;a.vol=0;a.sp=0;a.zang=0;a.ox=0;","frame_eqs_str":"a.samples=256+50*Math.sin(.939493949*a.time);a.vol=.333333*(a.bass_att+a.mid_att+a.treb_att);a.vol_avg=.1*(9*a.vol_avg+a.vol);a.vg=.1*a.vol_avg;a.t1=.00001<Math.abs(above(a.vg,1.8))?1.8:a.vg;","point_eqs_str":"a.tm=a.q1;a.sp=301.44*a.sample*Math.sin(a.time)*100;a.vol=.5*(a.value1+a.value2);a.it*=above(a.sample,0);a.it+=1;a.rad=1;a.ra=a.rad*Math.sin(3.14*a.sample);a.ox=a.ra*Math.sin(a.sp);a.oy=Math.sin(3.14*a.sample-1.57)*a.rad;a.oz=a.ra*Math.cos(a.sp);a.xang=a.q4;a.yang=a.q5;a.zang=a.q6;a.fov=.5;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+\na.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.yang=0;a.oz+=5;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.oz-=5;a.oz-=2;a.x=div(a.ox*a.fov,a.oz)+.5;a.x=.75*(a.x-.5)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;","init_eqs_eel":"","frame_eqs_eel":"samples = 256 + 50*sin(time*.939493949);\nvol = (bass_att + mid_att + treb_att)*.333333;\nvol_avg = .1*(vol_avg*9 + vol);\nvg = vol_avg*.1;\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6*sin(time)*100;\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\n//rad = .5 + vol + .01;\nrad=1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nxang = q4;\nyang = q5;\nzang = q6;\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\nyang = 0;//q8;\noz = oz + 5;\n\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\n\noz = oz - 5;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.lbbtime=0;a.mq29=0;a.cthr=0;a.mq1=0;a.bbtime=0;a.rs=0;a.q25=0;a.beatb=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.avgbeatrate=0;a.q1=0;a.mq31=0;a.q5=0;a.fb=0;a.mq21=0;a.vb=0;a.mq24=0;a.drs=0;a.q9=0;a.fbr=0;a.v=0;a.fbc=0;a.chng=0;a.mq28=0;a.mm=0;a.tt=0;a.mq23=0;a.beatrate=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.atime=0;a.worp=0;a.q4=0;a.lbass=0;a.faketime=0;a.q16=0;a.q26=0;a.fakebeatb=0;a.avgbr=0;a.avgfbr=0;a.mq27=0;a.rawbeatb=0;a.mq25=0;a.q19=\n0;a.mq22=0;a.db=0;a.q17=0;a.vol=0;a.mq26=0;a.bc=0;a.bb=0;a.q2=0;a.q27=0;a.q14=0;a.maxdb=0;a.q3=0;a.vvm=0;a.lftime=0;a.q32=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.vvt=0;a.q8=0;a.avgdb=0;a.beatrate=1;a.avgbeatrate=1;a.bbtime=1;a.lbbtime=1;a.avgdb=1;a.fakebeatcount=0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(a.bass*a.treb*a.mid,2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(a.mid,2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(a.treb,2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=2*a.vvb;a.q2=2*a.vvm;a.q3=2*a.vvt;a.v=2;a.bb-=a.vvb*a.v;a.mm-=a.vvm*a.v;a.tt-=a.vvt*a.v;a.q4=-a.bb;a.q5=-a.mm;a.q6=-a.tt;a.q4=\n5*(a.q1+a.q2+a.q3);a.q5=5*(a.q1+a.q2+a.q3);a.q6=5*(a.q1+a.q2+a.q3);a.q7=5*(a.q1+a.q2+a.q3);a.q8=5*(a.q1+a.q2+a.q3);a.q9=5*(a.q1+a.q2+a.q3);a.q10=5*(a.q1+a.q2+a.q3);a.q11=5*(a.q1+a.q2+a.q3);a.q12=5*(a.q1+a.q2+a.q3);a.q13=5*(a.q1+a.q2+a.q3);a.q14=5*(a.q1+a.q2+a.q3);a.q15=5*(a.q1+a.q2+a.q3);a.q16=5*(a.q1+a.q2+a.q3);a.q17=5*(a.q1+a.q2+a.q3);a.q18=5*(a.q1+a.q2+a.q3);a.q19=5*(a.q1+a.q2+a.q3);a.q20=5*(a.q1+a.q2+a.q3);a.q21=5*(a.q1+a.q2+a.q3);a.q22=5*(a.q1+a.q2+a.q3);a.q23=5*(a.q1+a.q2+a.q3);a.q24=5*(a.q1+\na.q2+a.q3);a.q25=5*(a.q1+a.q2+a.q3);a.q26=5*(a.q1+a.q2+a.q3);a.q27=5*(a.q1+a.q2+a.q3);a.q28=5*(a.q1+a.q2+a.q3);a.q29=5*(a.q1+a.q2+a.q3);a.q30=5*(a.q1+a.q2+a.q3);a.q31=5*(a.q1+a.q2+a.q3);a.q32=5*(a.q1+a.q2+a.q3);a.db=a.bass-a.lbass;a.lbass=a.bass;a.vol=1+a.bass+a.mid+a.treb;a.rs=above(Math.abs(a.db),a.maxdb);a.drs=1-a.rs;a.beatrate=1*a.rs+a.beatrate*a.drs;a.avgbeatrate=1*a.rs+a.avgbeatrate*a.drs;a.bbtime=1*a.rs+a.bbtime*a.drs;a.lbbtime=1*a.rs+a.lbbtime*a.drs;a.avgdb=1*a.rs+a.avgdb*a.drs;a.fbc=a.fbc*\na.drs+1*a.rs;a.bc=a.bc*a.drs+1*a.rs;a.faketime=1*a.rs+a.faketime*a.drs;a.lftime=1*a.rs+a.lftime*a.drs;a.avgdb=.999*a.avgdb+.001*Math.abs(a.db);a.rawbeatb=above(a.db*a.fakebeatb,1.3*a.avgdb);a.beatb=a.rawbeatb*above(a.time-a.lbbtime,.1*a.avgbeatrate);a.maxdb=Math.max(.9999*a.maxdb,Math.abs(a.db));a.bbtime=a.time*a.beatb;a.beatrate=a.beatb*(a.bbtime-a.lbbtime)+(1-a.beatb)*a.beatrate;a.avgbeatrate=a.beatb*(.999*a.avgbeatrate+.001*a.beatrate)+(1-a.beatb)*a.avgbeatrate;a.lbbtime=a.time*a.beatb+(1-a.beatb)*\na.lbbtime;a.faketime+=.005*a.avgbeatrate;a.fakebeatb=.5*Math.cos(a.faketime)+.5;a.fb=above(a.fakebeatb,.9999)*above(a.faketime-a.lftime,.5*a.avgfbr);a.fbr=(1-a.fb)*a.fbr+a.fb*(.99*a.fbr+.01*(a.faketime-a.lftime));a.avgfbr=a.avgbr*(1-a.fb)+a.fb*(.99*a.avgfbr+.01*a.fbr);a.fbc+=a.fb;a.lftime=a.faketime*a.fb+(1-a.fb)*a.lftime;a.bc+=a.beatb;a.monitor=a.beatb;a.q1=a.beatb;a.q2=a.db;a.q3=a.fakebeatb;a.q4=a.avgbeatrate;a.q5=equal(mod(a.bc,4),0)*a.beatb;a.q6=equal(mod(a.bc,16),0)*a.beatb;a.q7=a.rawbeatb;a.decay=\n.99;a.warp=0;a.wrap=1;a.worp=0;a.dx=.005;a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;\na.mq28=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*\na.atime);a.monitor=a.q13;a.q4=Math.sin(.03*a.atime);a.q5=Math.cos(.030383824*a.atime);a.q6=Math.tan(.029384834*a.atime);a.q30=2*(a.bass+a.treb+a.mid);","pixel_eqs_str":"","init_eqs_eel":"beatrate=1;\navgbeatrate=1;\nbbtime=1;\nlbbtime=1;\navgdb=1;\nfakebeatcount=0;","frame_eqs_eel":"vb = vb*0.95 + (1-vb)*pow(bass*treb*mid,2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(mid,2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(treb,2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = vvb*2;//0.5 + vb - vvb;\nq2 = vvm*2;//0.5 + vm - vvm;\nq3 = vvt*2;//0.5 + vt - vvt;\nv=2;\nbb = bb - vvb*v;\nmm = mm - vvm*v;\ntt = tt - vvt*v;\nq4 = -bb;\nq5 = -mm;\nq6 = -tt;\nq4=(q1+q2+q3)*5;\nq5=(q1+q2+q3)*5;\nq6=(q1+q2+q3)*5;\nq7=(q1+q2+q3)*5;\nq8=(q1+q2+q3)*5;\nq9=(q1+q2+q3)*5;\nq10=(q1+q2+q3)*5;\nq11=(q1+q2+q3)*5;\nq12=(q1+q2+q3)*5;\nq13=(q1+q2+q3)*5;\nq14=(q1+q2+q3)*5;\nq15=(q1+q2+q3)*5;\nq16=(q1+q2+q3)*5;\nq17=(q1+q2+q3)*5;\nq18=(q1+q2+q3)*5;\nq19=(q1+q2+q3)*5;\nq20=(q1+q2+q3)*5;\nq21=(q1+q2+q3)*5;\nq22=(q1+q2+q3)*5;\nq23=(q1+q2+q3)*5;\nq24=(q1+q2+q3)*5;\nq25=(q1+q2+q3)*5;\nq26=(q1+q2+q3)*5;\nq27=(q1+q2+q3)*5;\nq28=(q1+q2+q3)*5;\nq29=(q1+q2+q3)*5;\nq30=(q1+q2+q3)*5;\nq31=(q1+q2+q3)*5;\nq32=(q1+q2+q3)*5;\ndb=bass-lbass;\nlbass=bass;\nvol=1+bass+mid+treb;\n\nrs=above(abs(db),maxdb);\ndrs=1-rs;\n\nbeatrate=1*rs+beatrate*drs;\navgbeatrate=1*rs+avgbeatrate*drs;\nbbtime=1*rs+bbtime*drs;\nlbbtime=1*rs+lbbtime*drs;\navgdb=1*rs+avgdb*drs;\nfbc=fbc*drs+1*rs;\nbc=bc*drs+1*rs;\nfaketime=1*rs+faketime*drs;\nlftime=1*rs+lftime*drs;\n\n\navgdb=avgdb*.999+abs(db)*.001;\n\nrawbeatb=above(db*fakebeatb,avgdb*1.3);\nbeatb=rawbeatb*above(time-lbbtime,.1*avgbeatrate);\nmaxdb=max(maxdb*.9999,abs(db));\n\nbbtime=time*beatb;\n\nbeatrate=beatb*(bbtime-lbbtime)+(1-beatb)*beatrate;\navgbeatrate=beatb*(avgbeatrate*.999+beatrate*.001)+(1-beatb)*avgbeatrate;\n\n\nlbbtime=time*beatb+(1-beatb)*lbbtime;\n\n\nfaketime=faketime+avgbeatrate*.005;\n//faketime=0;\nfakebeatb=cos(faketime)*.5+.5;\nfb=above(fakebeatb,.9999)*above(faketime-lftime,.5*avgfbr);\nfbr=(1-fb)*fbr+fb*(fbr*.99+(faketime-lftime)*.01);\navgfbr=avgbr*(1-fb)+fb*(avgfbr*.99+fbr*.01);\n\nfbc=fbc+fb;\nlftime=faketime*fb+(1-fb)*lftime;\n\n\n\nbc=bc+beatb;\n\nmonitor=beatb;\nq1=beatb;//equal((fbc-1)%4,0)*fb;\nq2=db;\nq3=fakebeatb;\nq4=avgbeatrate;\nq5=equal(bc%4,0)*beatb;\nq6=equal(bc%16,0)*beatb;\nq7=rawbeatb;\n\ndecay=.99;\nwarp=0;\nwrap=1;\nworp=0;\n\ndx=.005;\nchng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\nq4=sin(atime*.03);\nq5=cos(atime*.030383824);\nq6=tan(atime*.029384834);\nq30=(bass+treb+mid)*2;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec3 tmpvar_2;\n  tmpvar_2 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  ret_1 = (ret_1 + (mix (\n    (ret_1 - tmpvar_2)\n  , \n    ((((texture (sampler_blur2, uv).xyz * scale2) + bias2) - tmpvar_2) * 2.0)\n  , vec3(rad)) * 0.3));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y - (tmpvar_3.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z - (tmpvar_3.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x - (tmpvar_3.z * 0.5));\n  };\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (mix (ret_1, vec3(0.5, 0.5, 0.5), vec3(0.03, 0.03, 0.03)) + (19.52 * (\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0)));\n  ret_1 = mix (ret_1, ret_1.zxy, vec3(0.02, 0.02, 0.02));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":"vec2 xlat_mutabledz;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv2_1;\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.0;\n  tmpvar_2.x = texsize.z;\n  vec2 tmpvar_3;\n  tmpvar_3.x = 0.0;\n  tmpvar_3.y = texsize.w;\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_2)).xyz - texture (sampler_main, (uv - tmpvar_2)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\n  uv2_1 = (uv - 0.5);\n  vec2 tmpvar_4;\n  tmpvar_4.y = 0.0;\n  float tmpvar_5;\n  tmpvar_5 = (time / 8.0);\n  tmpvar_4.x = tmpvar_5;\n  float tmpvar_6;\n  tmpvar_6 = (q27 * 2.0);\n  xlat_mutableuv3 = (((tmpvar_6 * uv2_1) * 0.1) + tmpvar_4);\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\n  xlat_mutableuv3 = ((0.1 * cos(\n    (22.0 * xlat_mutableuv3)\n  )) + (18.0 * xlat_mutabledz));\n  float tmpvar_7;\n  tmpvar_7 = clamp ((0.02 / sqrt(\n    dot (xlat_mutableuv3, xlat_mutableuv3)\n  )), 0.0, 1.0);\n  vec4 tmpvar_8;\n  tmpvar_8 = (1.0 + roam_cos);\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_7)) + ((0.45 * \n    dot (vec3(tmpvar_7), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_8).xyz);\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\n  vec2 tmpvar_9;\n  tmpvar_9.y = 0.0;\n  tmpvar_9.x = tmpvar_5;\n  xlat_mutableuv3 = (((tmpvar_6 * uv2_1) * 0.1) + tmpvar_9);\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\n  xlat_mutableuv3 = ((0.1 * cos(\n    (22.0 * xlat_mutableuv3)\n  )) + (18.0 * xlat_mutabledz));\n  float tmpvar_10;\n  tmpvar_10 = clamp ((0.02 / sqrt(\n    dot (xlat_mutableuv3, xlat_mutableuv3)\n  )), 0.0, 1.0);\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_10)) + ((0.45 * \n    dot (vec3(tmpvar_10), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_8).xyz);\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = (xlat_mutableret1 + clamp ((\n    (texture (sampler_main, uv).xyz * 4.0)\n   * \n    (0.2 + xlat_mutableret1)\n  ), 0.0, 1.0));\n  ret = tmpvar_11.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret.xyz = tex2D( sampler_main, uv ).xyz;\n\n      // take the difference between the crisp and blurred images,\n      // then add it back into the image.  Creates spots and stripes over time.\n      float3 b0 = ret.xyz;\n      float3 b1 = GetBlur1(uv).xyz;\n      float3 b2 = GetBlur2(uv).xyz;\n      //float b3 = GetBlur3(uv).xyz;\n      float3 dc = b0-b1;\n      dc = lerp(dc, (b2-b1)*2, rad);\n      \n      ret.xyz += dc*0.3;\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; \n      ret.xyz *= 0.9;\n      ret = lerp(ret, 0.5, 0.03);\n\n\n      // add noise:\n      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1 + rand_frame.xy;\n      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 \n                    //* saturate(treb_att-1);\n                    *0.16;\n\n      // desaturate over time, to keep the globs white\n      //ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);\n      ret.xyz = lerp(ret.xyz, ret.zxy, 0.02);\n}","comp_hlsl":"float z;\nfloat3 ret1, neu, mus;\nfloat2 rs,rs2,uv1,uv2, uv3,uv4,uv6,dz,dz1;\nshader_body\n{\nfloat2 uv2;\n//uv = (uv-0.5) * aspect.xy + .5;    \ndz = 0;\n\nfloat2 hor = float2(texsize.z,0);\nfloat2 ver = float2(0,texsize.w);\n\nfloat dist = 1;\nfloat inten = 1;\nret1 = 0;\nfloat anz = 1;\nfloat n = 0;\nuv4 = (uv);\n    dz.x = lum(GetPixel(uv4+hor)- GetPixel (uv4-hor));\n    dz.y = lum(GetPixel(uv4+ver)- GetPixel (uv4-ver));\n\n\nmus = .5*GetPixel(uv4-0*dz)-0*dz.x;\n\nuv2 = uv-.5;\nwhile (n <= anz) {\n    dist = 1-frac(1.0/anz*n-.1); //evtl sqrt !;\n\n    inten =  sqrt(dist)*(1-dist*dist)*4;\n\n    uv3 = q27*2*uv2*dist + float2 (time/8,0);\n    uv3 = frac(uv3);\n    uv3 *= aspect.yx;\n    uv3 = .1 * cos(22*uv3) + 18 *dz ;\n    neu = saturate(.02/length(uv3));\n    neu = dist*neu + (1-dist)*lum(neu)* .5*(1+roam_cos);\n    ret1 = max(ret1,neu*inten);\nn++;\n}\n\nret = ret1  +  saturate(8*mus*(.2+ret1)) ;\n}"}