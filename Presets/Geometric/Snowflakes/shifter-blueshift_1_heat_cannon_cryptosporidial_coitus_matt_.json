{"version":2,"baseVals":{"rating":5,"gammaadj":3.87,"decay":1,"echo_zoom":1.484,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"solarize":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.044,"warpscale":2.418,"fshader":1,"zoom":0.99951,"warp":0.16217,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0.5,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":0.05,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":4.84545,"tex_zoom":0.12374,"g":1,"b":1,"a":0.2,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_zoom = 1/rad*.8;\n\na2 = a;","init_eqs_eel":"","frame_eqs_eel":"tex_zoom = 1/rad*.8;\n\na2 = a;"},{"baseVals":{"enabled":1,"textured":1,"rad":4.84545,"tex_zoom":0.12374,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.tex_zoom=div(1,a.rad);a.a2=a.a;","init_eqs_eel":"","frame_eqs_eel":"tex_zoom = 1/rad;\n\na2 = a;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"smoothing":0},"init_eqs_str":"a.lj=0;a.toll=0;a.ab=0;a.rep=0;a.aa=0;a.la=0;a.sw=0;a.ad=0;a.ld=0;a.t1=0;a.ac=0;a.it=0;a.t3=0;a.my=0;a.modx=0;a.tav=0;a.lg=0;a.af=0;a.spin=0;a.oy=0;a.lf=0;a.ai=0;a.mod=0;a.lc=0;a.lb=0;a.le=0;a.ae=0;a.aj=0;a.ag=0;a.ra=0;a.mx=0;a.t2=0;a.ud=0;a.mang=0;a.sp=0;a.ak=0;a.poi=0;a.seg=0;a.ita=0;a.mody=0;a.lev=0;a.li=0;a.ox=0;a.lk=0;","frame_eqs_str":"a.t1=.001*Math.floor(rand(1001));a.t2=.001*Math.floor(rand(1001));a.it=(a.it+1)*below(a.it,2E3);a.sw=1-a.sw;a.t3=a.sw;","point_eqs_str":"a.seg*=above(a.sample,0);a.it=(a.it+1)*above(a.sample,0);a.seg+=equal(a.ita,0);a.ita=(a.ita+1)*above(a.sample,0)*below(a.ita,50);a.ra=(.00001<Math.abs(a.ra)?a.ra:Math.floor(rand(2)))*below(a.sample,1);a.toll*=above(a.sample,0);a.toll=a.toll+a.value1+a.value2;a.tav=Math.min(.01*div(a.toll,50),.2);a.sp=6.2832*a.sample;a.mod=.001*Math.floor(rand(1001))*a.bass*.5-.001*Math.floor(rand(1001))*(a.mid+a.treb)*.125;a.mod=.00001<Math.abs(a.ra)?.5*a.bass*(.5+.5*Math.sin(a.sp))-.25*(a.mid+\na.treb)*(.5+.5*Math.cos(a.sp)):a.mod;a.toll*=1-equal(a.ita,50);a.la=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,1))?a.tav:a.la;a.lb=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,2))?a.tav:a.lb;a.lc=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,3))?a.tav:a.lc;a.ld=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,4))?a.tav:a.ld;a.le=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,5))?a.tav:a.le;a.lf=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,6))?a.tav:a.lf;\na.lg=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,7))?a.tav:a.lg;a.li=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,8))?a.tav:a.li;a.lj=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,9))?a.tav:a.lj;a.lk=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,10))?a.tav:a.lk;a.aa=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,1))?a.mod:a.aa;a.ab=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,2))?a.mod:a.ab;a.ac=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,3))?\na.mod:a.ac;a.ad=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,4))?a.mod:a.ad;a.ae=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,5))?a.mod:a.ae;a.af=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,6))?a.mod:a.af;a.ag=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,7))?a.mod:a.ag;a.ai=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,8))?a.mod:a.ai;a.aj=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,9))?a.mod:a.aj;a.ak=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,\n10))?a.mod:a.ak;a.lev*=above(a.sample,0);a.ud*=above(a.sample,0);a.rep*=above(a.sample,0);a.lev=.00001<Math.abs(a.ud)?a.lev-1:a.lev+1;a.rep+=equal(a.lev,0);a.ud=.00001<Math.abs(equal(a.lev,0))?0:.00001<Math.abs(equal(a.lev,10))?1:a.ud;a.mx=above(a.lev,0)*a.la*Math.sin(a.aa)+above(a.lev,1)*a.lb*Math.sin(a.ab)+above(a.lev,2)*a.lc*Math.sin(a.ac)+above(a.lev,3)*a.ld*Math.sin(a.ad);a.my=above(a.lev,0)*a.la*Math.cos(a.aa)+above(a.lev,1)*a.lb*Math.cos(a.ab)+above(a.lev,2)*a.lc*Math.cos(a.ac)+above(a.lev,\n3)*a.ld*Math.cos(a.ad);a.mx=a.mx+above(a.lev,4)*a.le*Math.sin(a.ae)+above(a.lev,5)*a.lf*Math.sin(a.af)+above(a.lev,6)*a.lg*Math.sin(a.ag);a.my=a.my+above(a.lev,4)*a.le*Math.cos(a.ae)+above(a.lev,5)*a.lf*Math.cos(a.af)+above(a.lev,6)*a.lg*Math.cos(a.ag);a.mx=a.mx+above(a.lev,7)*a.li*Math.sin(a.ai)+above(a.lev,8)*a.lj*Math.sin(a.aj);a.my=a.my+above(a.lev,7)*a.li*Math.cos(a.ai)+above(a.lev,8)*a.lj*Math.cos(a.aj)+above(a.lev,9)*a.lk*Math.cos(a.ak);a.mx=(1-2*equal(a.ud,1))*a.mx*(1-equal(a.lev,10));a.poi=\n(.00001<Math.abs(a.poi)?a.poi:3+Math.floor(rand(3))+Math.floor(rand(3)))*above(a.sample,0);a.modx=.00001<Math.abs(equal(a.lev,a.poi)*a.ud)?a.mx:a.modx;a.mody=.00001<Math.abs(equal(a.lev,a.poi)*a.ud)?a.my:a.mody;a.mang=(above(a.rep,7)*below(a.rep,14)-above(a.rep,15)*below(a.rep,22))*above(a.lev,a.poi);a.modx=0;a.mx-=a.modx;a.my-=a.mody;a.ox=a.mx*Math.cos(a.mang)-a.my*Math.sin(a.mang);a.oy=a.mx*Math.sin(a.mang)+a.my*Math.cos(a.mang);a.mx=a.ox+a.modx;a.my=a.oy+a.mody;a.spin=.00001<Math.abs(above(a.sample,\n0))?a.spin:.0062832*Math.floor(rand(1001));a.mang=above(a.rep,1)*a.rep*1.0472+a.spin;a.ox=a.mx*Math.cos(a.mang)-a.my*Math.sin(a.mang);a.oy=a.mx*Math.sin(a.mang)+a.my*Math.cos(a.mang);a.mx=a.ox;a.my=a.oy;a.x=.75*a.mx+a.t1;a.y=a.my+a.t2;a.a=a.t3;","init_eqs_eel":"","frame_eqs_eel":"t1 = int(rand(1001))*.001;\nt2 = int(rand(1001))*.001;\n\nit = (it + 1)*below(it,2000);\n\nsw = 1- sw;\n//sw = equal(it%20,0);\nt3 = sw;\n\n//t1 = .5;\n//t2 = .5;","point_eqs_eel":"seg = seg*above(sample,0);\nit = (it + 1)*above(sample,0);\nseg = seg + equal(ita,0);\nita = (ita + 1)*above(sample,0)*below(ita,50);\nra = if(ra,ra,int(rand(2)))*below(sample,1);\n\n\ntoll = toll*above(sample,0);\ntoll = toll + value1 + value2;\ntav = min(toll/50*.01,.2)*1;\n\nsp = sample*6.2832;\nmod = int(rand(1001))*.001*bass*.5 - int(rand(1001))*.001*(mid+treb)*.125;\nmod = if(ra,bass*.5*(.5 + .5*sin(sp)) - (mid+treb)*.25*(.5 + .5*cos(sp)),mod);\n\ntoll = toll*(1-equal(ita,50));\n\n\nla = if((1-t3)*equal(ita,50)*equal(seg,1),tav,la);\nlb = if((1-t3)*equal(ita,50)*equal(seg,2),tav,lb);\nlc = if((1-t3)*equal(ita,50)*equal(seg,3),tav,lc);\nld = if((1-t3)*equal(ita,50)*equal(seg,4),tav,ld);\nle = if((1-t3)*equal(ita,50)*equal(seg,5),tav,le);\nlf = if((1-t3)*equal(ita,50)*equal(seg,6),tav,lf);\nlg = if((1-t3)*equal(ita,50)*equal(seg,7),tav,lg);\nli = if((1-t3)*equal(ita,50)*equal(seg,8),tav,li);\nlj = if((1-t3)*equal(ita,50)*equal(seg,9),tav,lj);\nlk = if((1-t3)*equal(ita,50)*equal(seg,10),tav,lk);\n\naa = if((1-t3)*equal(ita,50)*equal(seg,1),mod,aa);\nab = if((1-t3)*equal(ita,50)*equal(seg,2),mod,ab);\nac = if((1-t3)*equal(ita,50)*equal(seg,3),mod,ac);\nad = if((1-t3)*equal(ita,50)*equal(seg,4),mod,ad);\nae = if((1-t3)*equal(ita,50)*equal(seg,5),mod,ae);\naf = if((1-t3)*equal(ita,50)*equal(seg,6),mod,af);\nag = if((1-t3)*equal(ita,50)*equal(seg,7),mod,ag);\nai = if((1-t3)*equal(ita,50)*equal(seg,8),mod,ai);\naj = if((1-t3)*equal(ita,50)*equal(seg,9),mod,aj);\nak = if((1-t3)*equal(ita,50)*equal(seg,10),mod,ak);\n\n\nlev = lev*above(sample,0);\nud = ud*above(sample,0);\nrep = rep*above(sample,0);\n\nlev = if(ud,lev-1,lev+1);\nrep = (rep + equal(lev,0));\nud = if(equal(lev,0),0,if(equal(lev,10),1,ud));\n\nmx = above(lev,0)*la*sin(aa) + above(lev,1)*lb*sin(ab) + above(lev,2)*lc*sin(ac) + above(lev,3)*ld*sin(ad);\nmy = above(lev,0)*la*cos(aa) + above(lev,1)*lb*cos(ab) + above(lev,2)*lc*cos(ac) + above(lev,3)*ld*cos(ad);\nmx = mx + above(lev,4)*le*sin(ae) + above(lev,5)*lf*sin(af) + above(lev,6)*lg*sin(ag);\nmy = my + above(lev,4)*le*cos(ae) + above(lev,5)*lf*cos(af) + above(lev,6)*lg*cos(ag);\nmx = mx + above(lev,7)*li*sin(ai) + above(lev,8)*lj*sin(aj);// + above(lev,9)*lk*sin(ak);\nmy = my + above(lev,7)*li*cos(ai) + above(lev,8)*lj*cos(aj) + above(lev,9)*lk*cos(ak);\nmx = (1-2*equal(ud,1))*mx*(1-equal(lev,10));\n\npoi = if(poi,poi,3 + int(rand(3)) + int(rand(3)))*above(sample,0);\nmodx = if(equal(lev,poi)*ud,mx,modx);\nmody = if(equal(lev,poi)*ud,my,mody);\nmang = (above(rep,7)*below(rep,14) - above(rep,15)*below(rep,22))*above(lev,poi);\nmodx = 0;\nmx = mx - modx;\nmy = my - mody;\nox = mx*cos(mang) - my*sin(mang);\noy = mx*sin(mang) + my*cos(mang);\nmx = ox + modx;\nmy = oy + mody;\n\nspin = if(above(sample,0),spin,int(rand(1001))*.001*6.2832);\nmang = above(rep,1)*rep*1.0472 + spin; // add branches via rotation\nox = mx*cos(mang) - my*sin(mang);\noy = mx*sin(mang) + my*cos(mang);\nmx = ox;\nmy = oy;\n\nx = mx*.75 + t1;\ny = my + t2;\n\na = t3; // drawn every 2nd frame, gets values in other one"},{"baseVals":{"enabled":1,"spectrum":1,"smoothing":0},"init_eqs_str":"a.lj=0;a.toll=0;a.ab=0;a.rep=0;a.aa=0;a.la=0;a.sw=0;a.ad=0;a.ld=0;a.t1=0;a.ac=0;a.it=0;a.t3=0;a.my=0;a.modx=0;a.tav=0;a.lg=0;a.af=0;a.spin=0;a.oy=0;a.lf=0;a.ai=0;a.mod=0;a.lc=0;a.lb=0;a.le=0;a.ae=0;a.aj=0;a.ag=0;a.ra=0;a.mx=0;a.t2=0;a.ud=0;a.mang=0;a.sp=0;a.ak=0;a.poi=0;a.seg=0;a.ita=0;a.mody=0;a.lev=0;a.li=0;a.ox=0;a.lk=0;","frame_eqs_str":"a.t1=.001*Math.floor(rand(1001));a.t2=.001*Math.floor(rand(1001));a.it=(a.it+1)*below(a.it,2E3);a.sw=1-a.sw;a.t3=a.sw;","point_eqs_str":"a.seg*=above(a.sample,0);a.it=(a.it+1)*above(a.sample,0);a.seg+=equal(a.ita,0);a.ita=(a.ita+1)*above(a.sample,0)*below(a.ita,50);a.ra=(.00001<Math.abs(a.ra)?a.ra:Math.floor(rand(2)))*below(a.sample,1);a.toll*=above(a.sample,0);a.toll=a.toll+a.value1+a.value2;a.tav=1.25*Math.min(.01*div(a.toll,50),.2);a.sp=6.2832*a.sample;a.mod=.001*Math.floor(rand(1001))*a.bass*.5-.001*Math.floor(rand(1001))*(a.mid+a.treb)*.125;a.mod=.00001<Math.abs(a.ra)?.5*a.bass*(.5+.5*Math.sin(a.sp))-.25*\n(a.mid+a.treb)*(.5+.5*Math.cos(a.sp)):a.mod;a.toll*=1-equal(a.ita,50);a.la=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,1))?a.tav:a.la;a.lb=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,2))?a.tav:a.lb;a.lc=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,3))?a.tav:a.lc;a.ld=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,4))?a.tav:a.ld;a.le=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,5))?a.tav:a.le;a.lf=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,6))?a.tav:\na.lf;a.lg=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,7))?a.tav:a.lg;a.li=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,8))?a.tav:a.li;a.lj=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,9))?a.tav:a.lj;a.lk=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,10))?a.tav:a.lk;a.aa=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,1))?a.mod:a.aa;a.ab=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,2))?a.mod:a.ab;a.ac=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,\n3))?a.mod:a.ac;a.ad=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,4))?a.mod:a.ad;a.ae=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,5))?a.mod:a.ae;a.af=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,6))?a.mod:a.af;a.ag=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,7))?a.mod:a.ag;a.ai=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,8))?a.mod:a.ai;a.aj=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,9))?a.mod:a.aj;a.ak=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,\n10))?a.mod:a.ak;a.lev*=above(a.sample,0);a.ud*=above(a.sample,0);a.rep*=above(a.sample,0);a.lev=.00001<Math.abs(a.ud)?a.lev-1:a.lev+1;a.rep+=equal(a.lev,0);a.ud=.00001<Math.abs(equal(a.lev,0))?0:.00001<Math.abs(equal(a.lev,10))?1:a.ud;a.mx=above(a.lev,0)*a.la*Math.sin(a.aa)+above(a.lev,1)*a.lb*Math.sin(a.ab)+above(a.lev,2)*a.lc*Math.sin(a.ac)+above(a.lev,3)*a.ld*Math.sin(a.ad);a.my=above(a.lev,0)*a.la*Math.cos(a.aa)+above(a.lev,1)*a.lb*Math.cos(a.ab)+above(a.lev,2)*a.lc*Math.cos(a.ac)+above(a.lev,\n3)*a.ld*Math.cos(a.ad);a.mx=a.mx+above(a.lev,4)*a.le*Math.sin(a.ae)+above(a.lev,5)*a.lf*Math.sin(a.af)+above(a.lev,6)*a.lg*Math.sin(a.ag);a.my=a.my+above(a.lev,4)*a.le*Math.cos(a.ae)+above(a.lev,5)*a.lf*Math.cos(a.af)+above(a.lev,6)*a.lg*Math.cos(a.ag);a.mx=a.mx+above(a.lev,7)*a.li*Math.sin(a.ai)+above(a.lev,8)*a.lj*Math.sin(a.aj);a.my=a.my+above(a.lev,7)*a.li*Math.cos(a.ai)+above(a.lev,8)*a.lj*Math.cos(a.aj)+above(a.lev,9)*a.lk*Math.cos(a.ak);a.mx=(1-2*equal(a.ud,1))*a.mx*(1-equal(a.lev,10));a.poi=\n(.00001<Math.abs(a.poi)?a.poi:3+Math.floor(rand(3))+Math.floor(rand(3)))*above(a.sample,0);a.modx=.00001<Math.abs(equal(a.lev,a.poi)*a.ud)?a.mx:a.modx;a.mody=.00001<Math.abs(equal(a.lev,a.poi)*a.ud)?a.my:a.mody;a.mang=(above(a.rep,7)*below(a.rep,14)-above(a.rep,15)*below(a.rep,22))*above(a.lev,a.poi);a.modx=0;a.mx-=a.modx;a.my-=a.mody;a.ox=a.mx*Math.cos(a.mang)-a.my*Math.sin(a.mang);a.oy=a.mx*Math.sin(a.mang)+a.my*Math.cos(a.mang);a.mx=a.ox+a.modx;a.my=a.oy+a.mody;a.spin=.00001<Math.abs(above(a.sample,\n0))?a.spin:.0062832*Math.floor(rand(1001));a.mang=above(a.rep,1)*a.rep*1.0472+a.spin;a.ox=a.mx*Math.cos(a.mang)-a.my*Math.sin(a.mang);a.oy=a.mx*Math.sin(a.mang)+a.my*Math.cos(a.mang);a.mx=a.ox;a.my=a.oy;a.x=.75*a.mx+a.t1;a.y=a.my+a.t2;a.a=a.t3;","init_eqs_eel":"","frame_eqs_eel":"t1 = int(rand(1001))*.001;\nt2 = int(rand(1001))*.001;\n\nit = (it + 1)*below(it,2000);\n\nsw = 1- sw;\n//sw = equal(it%20,0);\nt3 = sw;\n\n//t1 = .5;\n//t2 = .5;","point_eqs_eel":"seg = seg*above(sample,0);\nit = (it + 1)*above(sample,0);\nseg = seg + equal(ita,0);\nita = (ita + 1)*above(sample,0)*below(ita,50);\nra = if(ra,ra,int(rand(2)))*below(sample,1);\n\n\ntoll = toll*above(sample,0);\ntoll = toll + value1 + value2;\ntav = min(toll/50*.01,.2)*1.25;\n\nsp = sample*6.2832;\nmod = int(rand(1001))*.001*bass*.5 - int(rand(1001))*.001*(mid+treb)*.125;\nmod = if(ra,bass*.5*(.5 + .5*sin(sp)) - (mid+treb)*.25*(.5 + .5*cos(sp)),mod);\n\ntoll = toll*(1-equal(ita,50));\n\n\nla = if((1-t3)*equal(ita,50)*equal(seg,1),tav,la);\nlb = if((1-t3)*equal(ita,50)*equal(seg,2),tav,lb);\nlc = if((1-t3)*equal(ita,50)*equal(seg,3),tav,lc);\nld = if((1-t3)*equal(ita,50)*equal(seg,4),tav,ld);\nle = if((1-t3)*equal(ita,50)*equal(seg,5),tav,le);\nlf = if((1-t3)*equal(ita,50)*equal(seg,6),tav,lf);\nlg = if((1-t3)*equal(ita,50)*equal(seg,7),tav,lg);\nli = if((1-t3)*equal(ita,50)*equal(seg,8),tav,li);\nlj = if((1-t3)*equal(ita,50)*equal(seg,9),tav,lj);\nlk = if((1-t3)*equal(ita,50)*equal(seg,10),tav,lk);\n\naa = if((1-t3)*equal(ita,50)*equal(seg,1),mod,aa);\nab = if((1-t3)*equal(ita,50)*equal(seg,2),mod,ab);\nac = if((1-t3)*equal(ita,50)*equal(seg,3),mod,ac);\nad = if((1-t3)*equal(ita,50)*equal(seg,4),mod,ad);\nae = if((1-t3)*equal(ita,50)*equal(seg,5),mod,ae);\naf = if((1-t3)*equal(ita,50)*equal(seg,6),mod,af);\nag = if((1-t3)*equal(ita,50)*equal(seg,7),mod,ag);\nai = if((1-t3)*equal(ita,50)*equal(seg,8),mod,ai);\naj = if((1-t3)*equal(ita,50)*equal(seg,9),mod,aj);\nak = if((1-t3)*equal(ita,50)*equal(seg,10),mod,ak);\n\n\nlev = lev*above(sample,0);\nud = ud*above(sample,0);\nrep = rep*above(sample,0);\n\nlev = if(ud,lev-1,lev+1);\nrep = (rep + equal(lev,0));\nud = if(equal(lev,0),0,if(equal(lev,10),1,ud));\n\nmx = above(lev,0)*la*sin(aa) + above(lev,1)*lb*sin(ab) + above(lev,2)*lc*sin(ac) + above(lev,3)*ld*sin(ad);\nmy = above(lev,0)*la*cos(aa) + above(lev,1)*lb*cos(ab) + above(lev,2)*lc*cos(ac) + above(lev,3)*ld*cos(ad);\nmx = mx + above(lev,4)*le*sin(ae) + above(lev,5)*lf*sin(af) + above(lev,6)*lg*sin(ag);\nmy = my + above(lev,4)*le*cos(ae) + above(lev,5)*lf*cos(af) + above(lev,6)*lg*cos(ag);\nmx = mx + above(lev,7)*li*sin(ai) + above(lev,8)*lj*sin(aj);// + above(lev,9)*lk*sin(ak);\nmy = my + above(lev,7)*li*cos(ai) + above(lev,8)*lj*cos(aj) + above(lev,9)*lk*cos(ak);\nmx = (1-2*equal(ud,1))*mx*(1-equal(lev,10));\n\npoi = if(poi,poi,3 + int(rand(3)) + int(rand(3)))*above(sample,0);\nmodx = if(equal(lev,poi)*ud,mx,modx);\nmody = if(equal(lev,poi)*ud,my,mody);\nmang = (above(rep,7)*below(rep,14) - above(rep,15)*below(rep,22))*above(lev,poi);\nmodx = 0;\nmx = mx - modx;\nmy = my - mody;\nox = mx*cos(mang) - my*sin(mang);\noy = mx*sin(mang) + my*cos(mang);\nmx = ox + modx;\nmy = oy + mody;\n\nspin = if(above(sample,0),spin,int(rand(1001))*.001*6.2832);\nmang = above(rep,1)*rep*1.0472 + spin; // add branches via rotation\nox = mx*cos(mang) - my*sin(mang);\noy = mx*sin(mang) + my*cos(mang);\nmx = ox;\nmy = oy;\n\nx = mx*.75 + t1;\ny = my + t2;\n\na = t3; // drawn every 2nd frame, gets values in other one"},{"baseVals":{"enabled":1,"spectrum":1,"smoothing":0},"init_eqs_str":"a.lj=0;a.toll=0;a.ab=0;a.rep=0;a.aa=0;a.la=0;a.sw=0;a.ad=0;a.ld=0;a.t1=0;a.ac=0;a.it=0;a.t3=0;a.my=0;a.modx=0;a.tav=0;a.lg=0;a.af=0;a.spin=0;a.oy=0;a.lf=0;a.ai=0;a.mod=0;a.lc=0;a.lb=0;a.le=0;a.ae=0;a.aj=0;a.ag=0;a.ra=0;a.mx=0;a.t2=0;a.ud=0;a.mang=0;a.sp=0;a.ak=0;a.poi=0;a.seg=0;a.ita=0;a.mody=0;a.lev=0;a.li=0;a.ox=0;a.lk=0;","frame_eqs_str":"a.t1=.001*Math.floor(rand(1001));a.t2=.001*Math.floor(rand(1001));a.it=(a.it+1)*below(a.it,2E3);a.sw=1-a.sw;a.t3=1-a.sw;","point_eqs_str":"a.seg*=above(a.sample,0);a.it=(a.it+1)*above(a.sample,0);a.seg+=equal(a.ita,0);a.ita=(a.ita+1)*above(a.sample,0)*below(a.ita,50);a.ra=(.00001<Math.abs(a.ra)?a.ra:Math.floor(rand(2)))*below(a.sample,1);a.toll*=above(a.sample,0);a.toll=a.toll+a.value1+a.value2;a.tav=Math.min(.01*div(a.toll,50),.2);a.sp=6.2832*a.sample;a.mod=.001*Math.floor(rand(1001))*a.bass*.5-.001*Math.floor(rand(1001))*(a.mid+a.treb)*.125;a.mod=.00001<Math.abs(a.ra)?.5*a.bass*(.5+.5*Math.sin(a.sp))-.25*(a.mid+\na.treb)*(.5+.5*Math.cos(a.sp)):a.mod;a.toll*=1-equal(a.ita,50);a.la=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,1))?a.tav:a.la;a.lb=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,2))?a.tav:a.lb;a.lc=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,3))?a.tav:a.lc;a.ld=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,4))?a.tav:a.ld;a.le=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,5))?a.tav:a.le;a.lf=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,6))?a.tav:a.lf;\na.lg=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,7))?a.tav:a.lg;a.li=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,8))?a.tav:a.li;a.lj=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,9))?a.tav:a.lj;a.lk=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,10))?a.tav:a.lk;a.aa=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,1))?a.mod:a.aa;a.ab=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,2))?a.mod:a.ab;a.ac=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,3))?\na.mod:a.ac;a.ad=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,4))?a.mod:a.ad;a.ae=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,5))?a.mod:a.ae;a.af=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,6))?a.mod:a.af;a.ag=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,7))?a.mod:a.ag;a.ai=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,8))?a.mod:a.ai;a.aj=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,9))?a.mod:a.aj;a.ak=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,\n10))?a.mod:a.ak;a.lev*=above(a.sample,0);a.ud*=above(a.sample,0);a.rep*=above(a.sample,0);a.lev=.00001<Math.abs(a.ud)?a.lev-1:a.lev+1;a.rep+=equal(a.lev,0);a.ud=.00001<Math.abs(equal(a.lev,0))?0:.00001<Math.abs(equal(a.lev,10))?1:a.ud;a.mx=above(a.lev,0)*a.la*Math.sin(a.aa)+above(a.lev,1)*a.lb*Math.sin(a.ab)+above(a.lev,2)*a.lc*Math.sin(a.ac)+above(a.lev,3)*a.ld*Math.sin(a.ad);a.my=above(a.lev,0)*a.la*Math.cos(a.aa)+above(a.lev,1)*a.lb*Math.cos(a.ab)+above(a.lev,2)*a.lc*Math.cos(a.ac)+above(a.lev,\n3)*a.ld*Math.cos(a.ad);a.mx=a.mx+above(a.lev,4)*a.le*Math.sin(a.ae)+above(a.lev,5)*a.lf*Math.sin(a.af)+above(a.lev,6)*a.lg*Math.sin(a.ag);a.my=a.my+above(a.lev,4)*a.le*Math.cos(a.ae)+above(a.lev,5)*a.lf*Math.cos(a.af)+above(a.lev,6)*a.lg*Math.cos(a.ag);a.mx=a.mx+above(a.lev,7)*a.li*Math.sin(a.ai)+above(a.lev,8)*a.lj*Math.sin(a.aj);a.my=a.my+above(a.lev,7)*a.li*Math.cos(a.ai)+above(a.lev,8)*a.lj*Math.cos(a.aj)+above(a.lev,9)*a.lk*Math.cos(a.ak);a.mx=(1-2*equal(a.ud,1))*a.mx*(1-equal(a.lev,10));a.poi=\n(.00001<Math.abs(a.poi)?a.poi:3+Math.floor(rand(3))+Math.floor(rand(3)))*above(a.sample,0);a.modx=.00001<Math.abs(equal(a.lev,a.poi)*a.ud)?a.mx:a.modx;a.mody=.00001<Math.abs(equal(a.lev,a.poi)*a.ud)?a.my:a.mody;a.mang=(above(a.rep,7)*below(a.rep,14)-above(a.rep,15)*below(a.rep,22))*above(a.lev,a.poi);a.modx=0;a.mx-=a.modx;a.my-=a.mody;a.ox=a.mx*Math.cos(a.mang)-a.my*Math.sin(a.mang);a.oy=a.mx*Math.sin(a.mang)+a.my*Math.cos(a.mang);a.mx=a.ox+a.modx;a.my=a.oy+a.mody;a.spin=.00001<Math.abs(above(a.sample,\n0))?a.spin:.0062832*Math.floor(rand(1001));a.mang=above(a.rep,1)*a.rep*1.0472+a.spin;a.ox=a.mx*Math.cos(a.mang)-a.my*Math.sin(a.mang);a.oy=a.mx*Math.sin(a.mang)+a.my*Math.cos(a.mang);a.mx=a.ox;a.my=a.oy;a.x=.75*a.mx+a.t1;a.y=a.my+a.t2;a.a=a.t3;","init_eqs_eel":"","frame_eqs_eel":"t1 = int(rand(1001))*.001;\nt2 = int(rand(1001))*.001;\n\nit = (it + 1)*below(it,2000);\n\nsw = 1- sw;\n//sw = equal(it%20,0);\nt3 = 1-sw;\n\n//t1 = .5;\n//t2 = .5;","point_eqs_eel":"seg = seg*above(sample,0);\nit = (it + 1)*above(sample,0);\nseg = seg + equal(ita,0);\nita = (ita + 1)*above(sample,0)*below(ita,50);\nra = if(ra,ra,int(rand(2)))*below(sample,1);\n\n\ntoll = toll*above(sample,0);\ntoll = toll + value1 + value2;\ntav = min(toll/50*.01,.2)*1;\n\nsp = sample*6.2832;\nmod = int(rand(1001))*.001*bass*.5 - int(rand(1001))*.001*(mid+treb)*.125;\nmod = if(ra,bass*.5*(.5 + .5*sin(sp)) - (mid+treb)*.25*(.5 + .5*cos(sp)),mod);\n\ntoll = toll*(1-equal(ita,50));\n\n\nla = if((1-t3)*equal(ita,50)*equal(seg,1),tav,la);\nlb = if((1-t3)*equal(ita,50)*equal(seg,2),tav,lb);\nlc = if((1-t3)*equal(ita,50)*equal(seg,3),tav,lc);\nld = if((1-t3)*equal(ita,50)*equal(seg,4),tav,ld);\nle = if((1-t3)*equal(ita,50)*equal(seg,5),tav,le);\nlf = if((1-t3)*equal(ita,50)*equal(seg,6),tav,lf);\nlg = if((1-t3)*equal(ita,50)*equal(seg,7),tav,lg);\nli = if((1-t3)*equal(ita,50)*equal(seg,8),tav,li);\nlj = if((1-t3)*equal(ita,50)*equal(seg,9),tav,lj);\nlk = if((1-t3)*equal(ita,50)*equal(seg,10),tav,lk);\n\naa = if((1-t3)*equal(ita,50)*equal(seg,1),mod,aa);\nab = if((1-t3)*equal(ita,50)*equal(seg,2),mod,ab);\nac = if((1-t3)*equal(ita,50)*equal(seg,3),mod,ac);\nad = if((1-t3)*equal(ita,50)*equal(seg,4),mod,ad);\nae = if((1-t3)*equal(ita,50)*equal(seg,5),mod,ae);\naf = if((1-t3)*equal(ita,50)*equal(seg,6),mod,af);\nag = if((1-t3)*equal(ita,50)*equal(seg,7),mod,ag);\nai = if((1-t3)*equal(ita,50)*equal(seg,8),mod,ai);\naj = if((1-t3)*equal(ita,50)*equal(seg,9),mod,aj);\nak = if((1-t3)*equal(ita,50)*equal(seg,10),mod,ak);\n\n\nlev = lev*above(sample,0);\nud = ud*above(sample,0);\nrep = rep*above(sample,0);\n\nlev = if(ud,lev-1,lev+1);\nrep = (rep + equal(lev,0));\nud = if(equal(lev,0),0,if(equal(lev,10),1,ud));\n\nmx = above(lev,0)*la*sin(aa) + above(lev,1)*lb*sin(ab) + above(lev,2)*lc*sin(ac) + above(lev,3)*ld*sin(ad);\nmy = above(lev,0)*la*cos(aa) + above(lev,1)*lb*cos(ab) + above(lev,2)*lc*cos(ac) + above(lev,3)*ld*cos(ad);\nmx = mx + above(lev,4)*le*sin(ae) + above(lev,5)*lf*sin(af) + above(lev,6)*lg*sin(ag);\nmy = my + above(lev,4)*le*cos(ae) + above(lev,5)*lf*cos(af) + above(lev,6)*lg*cos(ag);\nmx = mx + above(lev,7)*li*sin(ai) + above(lev,8)*lj*sin(aj);// + above(lev,9)*lk*sin(ak);\nmy = my + above(lev,7)*li*cos(ai) + above(lev,8)*lj*cos(aj) + above(lev,9)*lk*cos(ak);\nmx = (1-2*equal(ud,1))*mx*(1-equal(lev,10));\n\npoi = if(poi,poi,3 + int(rand(3)) + int(rand(3)))*above(sample,0);\nmodx = if(equal(lev,poi)*ud,mx,modx);\nmody = if(equal(lev,poi)*ud,my,mody);\nmang = (above(rep,7)*below(rep,14) - above(rep,15)*below(rep,22))*above(lev,poi);\nmodx = 0;\nmx = mx - modx;\nmy = my - mody;\nox = mx*cos(mang) - my*sin(mang);\noy = mx*sin(mang) + my*cos(mang);\nmx = ox + modx;\nmy = oy + mody;\n\nspin = if(above(sample,0),spin,int(rand(1001))*.001*6.2832);\nmang = above(rep,1)*rep*1.0472 + spin; // add branches via rotation\nox = mx*cos(mang) - my*sin(mang);\noy = mx*sin(mang) + my*cos(mang);\nmx = ox;\nmy = oy;\n\nx = mx*.75 + t1;\ny = my + t2;\n\na = t3; // drawn every 2nd frame, gets values in other one"},{"baseVals":{"enabled":1,"spectrum":1,"smoothing":0},"init_eqs_str":"a.lj=0;a.toll=0;a.ab=0;a.rep=0;a.aa=0;a.la=0;a.sw=0;a.ad=0;a.ld=0;a.t1=0;a.ac=0;a.it=0;a.t3=0;a.my=0;a.modx=0;a.tav=0;a.lg=0;a.af=0;a.spin=0;a.oy=0;a.lf=0;a.ai=0;a.mod=0;a.lc=0;a.lb=0;a.le=0;a.ae=0;a.aj=0;a.ag=0;a.ra=0;a.mx=0;a.t2=0;a.ud=0;a.mang=0;a.sp=0;a.ak=0;a.poi=0;a.seg=0;a.ita=0;a.mody=0;a.lev=0;a.li=0;a.ox=0;a.lk=0;","frame_eqs_str":"a.t1=.001*Math.floor(rand(1001));a.t2=.001*Math.floor(rand(1001));a.it=(a.it+1)*below(a.it,2E3);a.sw=1-a.sw;a.t3=1-a.sw;","point_eqs_str":"a.seg*=above(a.sample,0);a.it=(a.it+1)*above(a.sample,0);a.seg+=equal(a.ita,0);a.ita=(a.ita+1)*above(a.sample,0)*below(a.ita,50);a.ra=(.00001<Math.abs(a.ra)?a.ra:Math.floor(rand(2)))*below(a.sample,1);a.toll*=above(a.sample,0);a.toll=a.toll+a.value1+a.value2;a.tav=1.5*Math.min(.01*div(a.toll,50),.2);a.sp=6.2832*a.sample;a.mod=.001*Math.floor(rand(1001))*a.bass*.5-.001*Math.floor(rand(1001))*(a.mid+a.treb)*.125;a.mod=.00001<Math.abs(a.ra)?.5*a.bass*(.5+.5*Math.sin(a.sp))-.25*\n(a.mid+a.treb)*(.5+.5*Math.cos(a.sp)):a.mod;a.toll*=1-equal(a.ita,50);a.la=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,1))?a.tav:a.la;a.lb=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,2))?a.tav:a.lb;a.lc=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,3))?a.tav:a.lc;a.ld=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,4))?a.tav:a.ld;a.le=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,5))?a.tav:a.le;a.lf=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,6))?a.tav:\na.lf;a.lg=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,7))?a.tav:a.lg;a.li=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,8))?a.tav:a.li;a.lj=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,9))?a.tav:a.lj;a.lk=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,10))?a.tav:a.lk;a.aa=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,1))?a.mod:a.aa;a.ab=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,2))?a.mod:a.ab;a.ac=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,\n3))?a.mod:a.ac;a.ad=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,4))?a.mod:a.ad;a.ae=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,5))?a.mod:a.ae;a.af=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,6))?a.mod:a.af;a.ag=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,7))?a.mod:a.ag;a.ai=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,8))?a.mod:a.ai;a.aj=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,9))?a.mod:a.aj;a.ak=.00001<Math.abs((1-a.t3)*equal(a.ita,50)*equal(a.seg,\n10))?a.mod:a.ak;a.lev*=above(a.sample,0);a.ud*=above(a.sample,0);a.rep*=above(a.sample,0);a.lev=.00001<Math.abs(a.ud)?a.lev-1:a.lev+1;a.rep+=equal(a.lev,0);a.ud=.00001<Math.abs(equal(a.lev,0))?0:.00001<Math.abs(equal(a.lev,10))?1:a.ud;a.mx=above(a.lev,0)*a.la*Math.sin(a.aa)+above(a.lev,1)*a.lb*Math.sin(a.ab)+above(a.lev,2)*a.lc*Math.sin(a.ac)+above(a.lev,3)*a.ld*Math.sin(a.ad);a.my=above(a.lev,0)*a.la*Math.cos(a.aa)+above(a.lev,1)*a.lb*Math.cos(a.ab)+above(a.lev,2)*a.lc*Math.cos(a.ac)+above(a.lev,\n3)*a.ld*Math.cos(a.ad);a.mx=a.mx+above(a.lev,4)*a.le*Math.sin(a.ae)+above(a.lev,5)*a.lf*Math.sin(a.af)+above(a.lev,6)*a.lg*Math.sin(a.ag);a.my=a.my+above(a.lev,4)*a.le*Math.cos(a.ae)+above(a.lev,5)*a.lf*Math.cos(a.af)+above(a.lev,6)*a.lg*Math.cos(a.ag);a.mx=a.mx+above(a.lev,7)*a.li*Math.sin(a.ai)+above(a.lev,8)*a.lj*Math.sin(a.aj);a.my=a.my+above(a.lev,7)*a.li*Math.cos(a.ai)+above(a.lev,8)*a.lj*Math.cos(a.aj)+above(a.lev,9)*a.lk*Math.cos(a.ak);a.mx=(1-2*equal(a.ud,1))*a.mx*(1-equal(a.lev,10));a.poi=\n(.00001<Math.abs(a.poi)?a.poi:3+Math.floor(rand(3))+Math.floor(rand(3)))*above(a.sample,0);a.modx=.00001<Math.abs(equal(a.lev,a.poi)*a.ud)?a.mx:a.modx;a.mody=.00001<Math.abs(equal(a.lev,a.poi)*a.ud)?a.my:a.mody;a.mang=(above(a.rep,7)*below(a.rep,14)-above(a.rep,15)*below(a.rep,22))*above(a.lev,a.poi);a.modx=0;a.mx-=a.modx;a.my-=a.mody;a.ox=a.mx*Math.cos(a.mang)-a.my*Math.sin(a.mang);a.oy=a.mx*Math.sin(a.mang)+a.my*Math.cos(a.mang);a.mx=a.ox+a.modx;a.my=a.oy+a.mody;a.spin=.00001<Math.abs(above(a.sample,\n0))?a.spin:.0062832*Math.floor(rand(1001));a.mang=above(a.rep,1)*a.rep*1.0472+a.spin;a.ox=a.mx*Math.cos(a.mang)-a.my*Math.sin(a.mang);a.oy=a.mx*Math.sin(a.mang)+a.my*Math.cos(a.mang);a.mx=a.ox;a.my=a.oy;a.x=.75*a.mx+a.t1;a.y=a.my+a.t2;a.a=a.t3;","init_eqs_eel":"","frame_eqs_eel":"t1 = int(rand(1001))*.001;\nt2 = int(rand(1001))*.001;\n\nit = (it + 1)*below(it,2000);\n\nsw = 1- sw;\n//sw = equal(it%20,0);\nt3 = 1-sw;\n\n//t1 = .5;\n//t2 = .5;","point_eqs_eel":"seg = seg*above(sample,0);\nit = (it + 1)*above(sample,0);\nseg = seg + equal(ita,0);\nita = (ita + 1)*above(sample,0)*below(ita,50);\nra = if(ra,ra,int(rand(2)))*below(sample,1);\n\n\ntoll = toll*above(sample,0);\ntoll = toll + value1 + value2;\ntav = min(toll/50*.01,.2)*1.5;\n\nsp = sample*6.2832;\nmod = int(rand(1001))*.001*bass*.5 - int(rand(1001))*.001*(mid+treb)*.125;\nmod = if(ra,bass*.5*(.5 + .5*sin(sp)) - (mid+treb)*.25*(.5 + .5*cos(sp)),mod);\n\ntoll = toll*(1-equal(ita,50));\n\n\nla = if((1-t3)*equal(ita,50)*equal(seg,1),tav,la);\nlb = if((1-t3)*equal(ita,50)*equal(seg,2),tav,lb);\nlc = if((1-t3)*equal(ita,50)*equal(seg,3),tav,lc);\nld = if((1-t3)*equal(ita,50)*equal(seg,4),tav,ld);\nle = if((1-t3)*equal(ita,50)*equal(seg,5),tav,le);\nlf = if((1-t3)*equal(ita,50)*equal(seg,6),tav,lf);\nlg = if((1-t3)*equal(ita,50)*equal(seg,7),tav,lg);\nli = if((1-t3)*equal(ita,50)*equal(seg,8),tav,li);\nlj = if((1-t3)*equal(ita,50)*equal(seg,9),tav,lj);\nlk = if((1-t3)*equal(ita,50)*equal(seg,10),tav,lk);\n\naa = if((1-t3)*equal(ita,50)*equal(seg,1),mod,aa);\nab = if((1-t3)*equal(ita,50)*equal(seg,2),mod,ab);\nac = if((1-t3)*equal(ita,50)*equal(seg,3),mod,ac);\nad = if((1-t3)*equal(ita,50)*equal(seg,4),mod,ad);\nae = if((1-t3)*equal(ita,50)*equal(seg,5),mod,ae);\naf = if((1-t3)*equal(ita,50)*equal(seg,6),mod,af);\nag = if((1-t3)*equal(ita,50)*equal(seg,7),mod,ag);\nai = if((1-t3)*equal(ita,50)*equal(seg,8),mod,ai);\naj = if((1-t3)*equal(ita,50)*equal(seg,9),mod,aj);\nak = if((1-t3)*equal(ita,50)*equal(seg,10),mod,ak);\n\n\nlev = lev*above(sample,0);\nud = ud*above(sample,0);\nrep = rep*above(sample,0);\n\nlev = if(ud,lev-1,lev+1);\nrep = (rep + equal(lev,0));\nud = if(equal(lev,0),0,if(equal(lev,10),1,ud));\n\nmx = above(lev,0)*la*sin(aa) + above(lev,1)*lb*sin(ab) + above(lev,2)*lc*sin(ac) + above(lev,3)*ld*sin(ad);\nmy = above(lev,0)*la*cos(aa) + above(lev,1)*lb*cos(ab) + above(lev,2)*lc*cos(ac) + above(lev,3)*ld*cos(ad);\nmx = mx + above(lev,4)*le*sin(ae) + above(lev,5)*lf*sin(af) + above(lev,6)*lg*sin(ag);\nmy = my + above(lev,4)*le*cos(ae) + above(lev,5)*lf*cos(af) + above(lev,6)*lg*cos(ag);\nmx = mx + above(lev,7)*li*sin(ai) + above(lev,8)*lj*sin(aj);// + above(lev,9)*lk*sin(ak);\nmy = my + above(lev,7)*li*cos(ai) + above(lev,8)*lj*cos(aj) + above(lev,9)*lk*cos(ak);\nmx = (1-2*equal(ud,1))*mx*(1-equal(lev,10));\n\npoi = if(poi,poi,3 + int(rand(3)) + int(rand(3)))*above(sample,0);\nmodx = if(equal(lev,poi)*ud,mx,modx);\nmody = if(equal(lev,poi)*ud,my,mody);\nmang = (above(rep,7)*below(rep,14) - above(rep,15)*below(rep,22))*above(lev,poi);\nmodx = 0;\nmx = mx - modx;\nmy = my - mody;\nox = mx*cos(mang) - my*sin(mang);\noy = mx*sin(mang) + my*cos(mang);\nmx = ox + modx;\nmy = oy + mody;\n\nspin = if(above(sample,0),spin,int(rand(1001))*.001*6.2832);\nmang = above(rep,1)*rep*1.0472 + spin; // add branches via rotation\nox = mx*cos(mang) - my*sin(mang);\noy = mx*sin(mang) + my*cos(mang);\nmx = ox;\nmy = oy;\n\nx = mx*.75 + t1;\ny = my + t2;\n\na = t3; // drawn every 2nd frame, gets values in other one"}],"init_eqs_str":"a.bl=0;a.mq29=0;a.cthr=0;a.mq1=0;a.tic=0;a.gamma=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.mq31=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.tin=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.vav=0;a.rate=0;a.atime=0;a.q26=0;a.cha=0;a.mq27=0;a.ra=0;a.mq25=0;a.ul=0;a.mq22=0;a.vol=0;a.gv=0;a.mq26=0;a.q27=0;a.q28=0;","frame_eqs_str":"a.bl=3.8;a.ul=7.9;a.rate=29;a.cha=.01;a.ib_size=1;a.ib_r=1;a.ib_g=0;a.ib_b=0;a.gv=.00001<Math.abs(above(a.gv,a.bl))?.00001<Math.abs(below(a.gv,a.ul))?.00001<Math.abs(above(a.fps,a.rate))?a.gv+a.cha:a.gv-a.cha:a.ul-.1:a.bl+.1;a.gamma=a.gv;a.monitor=a.gv;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.ra=.25*div(1,a.tic);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.dy=.004*(1.6+.4*a.vav);a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,\na.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;\na.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"bl = 3.8;\nul = 7.9;\nrate = 29;\ncha = .01;\nib_size = 1;\nib_r = 1;\nib_g = 0;\nib_b = 0;\n\n//warp = 0;\ngv = if(above(gv,bl),  if(below(gv,ul),  if(above(fps,rate),gv + cha,gv - cha),  ul-.1),bl+.1);\n\ngamma = gv;\n\nmonitor = gv;\n\n\ntic = min(time-tin,.1);\ntin = time;\n\nra = 1/tic*.25;\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ndy = .004*(1.6+vav*.4);\n\n//monitor = ra;\nchng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;","pixel_eqs_eel":"","warp":"uniform sampler2D sampler_lichen;\n shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + ((texture (sampler_main, \n    (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)\n  ).xy - 0.5) * q1));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv2_1);\n  ret_2 = tmpvar_3.xyz;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv2_1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((tmpvar_3.x > (q21 * q13)) && (tmpvar_3.x <= (q24 * q11)))) {\n    ret_2.y = (tmpvar_3.y - (tmpvar_4.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (tmpvar_3.z - (tmpvar_4.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (tmpvar_3.x - (tmpvar_4.z * 0.5));\n  };\n  ret_2 = (ret_2 - (vec3(0.001, 0.001, 0.0) * (\n    (clamp (((ret_2 - 0.5) * 99.0), 0.0, 1.0) * 2.0)\n   - 1.0)));\n  vec2 tmpvar_5;\n  tmpvar_5.x = slow_roam_cos.w;\n  tmpvar_5.y = slow_roam_sin.z;\n  ret_2 = (ret_2 * (0.998 - (0.1 * \n    clamp (((texture (sampler_lichen, (\n      (tmpvar_5 * 0.7)\n     + \n      (uv_orig * 0.2)\n    )).y * 5.0) - 3.7), 0.0, 1.0)\n  )));\n  ret_2 = (ret_2 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 15.0));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  float diff_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = fract(uv);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\n  vec2 x_5;\n  x_5 = (tmpvar_4.xy - ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1).xy);\n  vec2 x_6;\n  x_6 = (tmpvar_4.xy - ((texture (sampler_blur2, tmpvar_3).xyz * scale2) + bias2).xy);\n  diff_1 = ((1.0 - (\n    sqrt(dot (x_5, x_5))\n   * 3.5)) * (1.0 - sqrt(\n    dot (x_6, x_6)\n  )));\n  ret_2.xy = (tmpvar_4.xy * diff_1);\n  ret_2.z = pow (diff_1, (1.0/((1.0 - tmpvar_3.x))));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_3.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\n    ret_2.z = (ret_2.z - (tmpvar_7.x * 0.5));\n  };\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\n    ret_2.x = (ret_2.x - (tmpvar_7.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\n    ret_2.y = (ret_2.y - (tmpvar_7.z * 0.5));\n  };\n  ret_2 = (0.7 - ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"sampler sampler_lichen;\n\nshader_body\n{\n    // PAINTERLY EFFECT:\n    float2 uv2 = uv;\n    float2 delta2 = texsize.zw*float2(1,1);\n    float3 blurry_color = tex2D( sampler_main, \n        lerp(uv,uv_orig,-1) + delta2 ).xyz;\n    uv2.xy += (blurry_color.xy-0.5) * q1;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv2 ).xyz;\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv2.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; \n\n    // push all colors toward 0.5:\n    ret.xyz -= (saturate((ret.xyz-0.5)*99)*2-1)*float3(1,1,0)*0.001;\n\n    float2 uv3 = float2(slow_roam_cos.w,slow_roam_sin.z)*0.7 + uv_orig.xy*0.2;\n    ret.xyz *= 0.998 - 0.1*saturate(tex2D(sampler_lichen, uv3).y*5-3.7);\n\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*15;\n}","comp_hlsl":"sampler sampler_fw_sky;\nshader_body\n{\nfloat2 uvm = frac(uv + time*.0);\n\nret = tex2D(sampler_main,uvm);\nfloat diff = 1-length(ret.xy-GetBlur1(uvm).xy)*3.5;\ndiff *=1-length(ret.xy-GetBlur2(uvm).xy)*1;\nret.xy *= diff;\nret.z = pow(diff,1/(1-uvm.x));\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uvm.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret=.7-ret;\n}"}