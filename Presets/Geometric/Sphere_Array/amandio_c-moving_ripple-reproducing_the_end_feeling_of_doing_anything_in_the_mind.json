{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1.01,"echo_orient":2,"wave_mode":4,"wave_thick":1,"wrap":0,"brighten":1,"wave_a":100,"wave_scale":0.007,"wave_smoothing":0.5,"wave_mystery":-0.4,"modwavealphastart":0.5,"modwavealphaend":1,"zoom":1.0099,"cy":0.86,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":1,"ib_size":0.002,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"rad":6.63494,"tex_ang":6.28319,"tex_zoom":0.53426,"r":0,"b":0.2,"g2":0,"a2":1,"border_r":0.3,"border_g":0.3,"border_b":0.3,"border_a":0.03},"init_eqs_str":"","frame_eqs_str":"a.y=-1;","init_eqs_eel":"","frame_eqs_eel":"y=-1;"},{"baseVals":{"enabled":1,"sides":20,"num_inst":1024,"y":0.08,"rad":0.03059,"tex_zoom":0.50828,"g":0.6,"b":1,"g2":0,"b2":0.2,"a2":1,"border_a":0},"init_eqs_str":"a.i=0;a.ni=0;a.px=0;a.py=0;a.d1=0;a.zoom=0;a.q6=0;","frame_eqs_str":"a.i=a.instance;a.ni=a.num_inst;a.x=.5-div(mod(a.i,a.ni),a.ni);a.y=.5-div(mod(a.i,sqrt(a.ni)),sqrt(a.ni));a.px=a.x+.5*Math.sin(1*a.time);a.py=a.y+.5*Math.sin(-1.2*a.time);a.d1=sqrt(a.px*a.px+a.py*a.py);a.y=.5*a.y+.05*Math.sin(15*a.d1);a.zoom=1.5;a.x=.5+div(a.zoom*a.x,a.q6);a.y=.5+a.zoom*a.y;a.rad*=a.zoom;a.r=.6*a.d1;a.g=a.r;a.r2=.2*a.r;a.g2=.2*a.g;","init_eqs_eel":"","frame_eqs_eel":"i=instance;     ni=num_inst;\n\n////  ripple\n\nx =.5-(i%ni)/ni;       y =.5-(i%sqrt(ni))/sqrt(ni);\n\npx=x+.5*sin(1.*time);  py=y+.5*sin(-1.2*time);\n\nd1=sqrt(px*px+py*py);  y=.5*y+.05*sin(15*d1);\n\n\nzoom=1.5;\nx=.5 + zoom*x/q6;      y=.5 + zoom*y;    rad=rad*zoom;\n\nr=.6*d1;   g=r;    r2=.2*r;   g2=.2*g;\n"},{"baseVals":{"sides":20,"y":0.61,"rad":0.01596,"tex_zoom":0.50832,"g":1,"b":1,"g2":0,"border_a":0.02,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":20,"x":0.38,"y":0.28,"rad":0.03947,"g":1,"b":1,"a":0.8,"g2":0,"border_a":0.02,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":60.80387,"smoothing":0.7,"a":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"scaling":67.1652,"smoothing":0.7,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"r":0.7,"g":0.7,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q6=0;","frame_eqs_str":"a.wave_a=0;a.warp=0;a.decay=1;a.zoom=1;a.q6=a.aspecty;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_a=0;\nwarp=0;\ndecay=1;\nzoom=1;\n\n\nq6=aspecty;","pixel_eqs_eel":"","warp":"","comp":" shader_body { \n  vec2 uv3_1;\n  vec2 uv2_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = (q27 * tmpvar_5);\n  float tmpvar_8;\n  tmpvar_8 = (0.1 * q30);\n  uv2_2.y = (tmpvar_6.y + tmpvar_8);\n  uv2_2.x = (tmpvar_7 + (0.2 * time));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_7;\n  tmpvar_9.y = (4.0 * tmpvar_5);\n  uv3_1.x = tmpvar_9.x;\n  uv3_1.y = (tmpvar_9.y - tmpvar_8);\n  float tmpvar_10;\n  tmpvar_10 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  ret_3 = (((\n    (3.0 * max (((2.0 * texture (sampler_main, uv2_2).xyz) + texture (sampler_main, uv3_1).xyz), ((2.0 * \n      ((texture (sampler_blur2, fract(uv2_2)).xyz * scale2) + bias2)\n    ) + (\n      (texture (sampler_blur2, fract(uv3_1)).xyz * scale2)\n     + bias2))))\n   * rad) + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_10)) + ((tmpvar_10 * 2.0) * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  ret_3 = (ret_3 - (roam_sin.xyz * roam_cos.zxy));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_3;\n  ret = tmpvar_11.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, q27*rad1);\nuv2.y = uv2.y  +.1*q30;\nuv2.x = uv2.x  +.2*time;\n\nfloat2 uv3 = float2 (ang/3.14, 4*rad1);\nuv3.y = uv3.y  -.1*q30;\n\n\nfloat3 crisp = 2*GetPixel(uv2) + GetPixel(uv3);\ncrisp = max(crisp,2*GetBlur2(frac(uv2)) + GetBlur2(frac(uv3)));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * 2*GetBlur1(uv);\n\nret-=roam_sin*roam_cos.zxy;\n\n}"}