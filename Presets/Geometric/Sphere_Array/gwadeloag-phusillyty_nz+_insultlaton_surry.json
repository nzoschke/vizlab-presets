{"version":2,"baseVals":{"rating":5,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"wave_thick":1,"wrap":0,"darken":1,"wave_a":100,"wave_scale":0.007,"wave_smoothing":0.5,"wave_mystery":-0.4,"modwavealphastart":0.5,"modwavealphaend":1,"warpscale":2.853,"zoomexp":2.1,"zoom":1.025,"warp":1.29077,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"rad":6.63494,"tex_ang":6.28319,"tex_zoom":0.53426,"r":0,"b":0.2,"g2":0,"a2":1,"border_r":0.3,"border_g":0.3,"border_b":0.3,"border_a":0.03,"enabled":0},"init_eqs_str":"","frame_eqs_str":"y=-1;","init_eqs_eel":"","frame_eqs_eel":"y=-1;"},{"baseVals":{"enabled":1,"sides":20,"num_inst":1024,"y":0.08,"rad":0.03059,"tex_zoom":0.50828,"g":0.6,"b":1,"g2":0,"b2":0.2,"a2":1,"border_a":0},"init_eqs_str":"a.i=0;a.ni=0;a.px=0;a.py=0;a.d1=0;a.zoom=0;a.q6=0;","frame_eqs_str":"a.i=a.instance;a.ni=a.num_inst;a.x=.5-div(mod(a.i,a.ni),a.ni);a.y=.5-div(mod(a.i,sqrt(a.ni)),sqrt(a.ni));a.px=a.x+.5*Math.sin(1*a.time);a.py=a.y+.5*Math.sin(-1.2*a.time);a.d1=sqrt(a.px*a.px+a.py*a.py);a.y=.5*a.y+.05*Math.sin(15*a.d1);a.zoom=1.5;a.x=.5+div(a.zoom*a.x,a.q6);a.y=.5+a.zoom*a.y;a.rad*=a.zoom;a.r=.6*a.d1;a.g=a.r;a.r2=.2*a.r;a.g2=.2*a.g;","init_eqs_eel":"","frame_eqs_eel":"i=instance;     ni=num_inst;\n\n////  ripple\n\nx =.5-(i%ni)/ni;       y =.5-(i%sqrt(ni))/sqrt(ni);\n\npx=x+.5*sin(1.*time);  py=y+.5*sin(-1.2*time);\n\nd1=sqrt(px*px+py*py);  y=.5*y+.05*sin(15*d1);\n\n\nzoom=1.5;\nx=.5 + zoom*x/q6;      y=.5 + zoom*y;    rad=rad*zoom;\n\nr=.6*d1;   g=r;    r2=.2*r;   g2=.2*g;\n"},{"baseVals":{"sides":20,"y":0.61,"rad":0.01596,"tex_zoom":0.50832,"g":1,"b":1,"g2":0,"border_a":0.02,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":20,"x":0.38,"y":0.28,"rad":0.03947,"g":1,"b":1,"a":0.8,"g2":0,"border_a":0.02,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":60.80387,"smoothing":0.7,"a":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"scaling":67.1652,"smoothing":0.7,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"r":0.7,"g":0.7,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.myrad=0;a.q25=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.mq31=0;a.myx=0;a.q5=0;a.mq21=0;a.vb=0;a.mq24=0;a.q9=0;a.myy=0;a.oldq8=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.atime=0;a.q4=0;a.q16=0;a.mybass=0;a.q26=0;a.rd=0;a.mq27=0;a.mq25=0;a.q19=0;a.mq22=0;a.q17=0;a.vol=0;a.mq26=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.vvm=0;a.q32=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.vvt=0;a.q8=\n0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(a.bass_att,2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(a.mid_att,2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(a.treb_att,2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=2*a.vvb;a.q2=2*a.vvm;a.q3=2*a.vvt;a.q4=5*(a.q1+a.q2+a.q3);a.q5=5*(a.q1+a.q2+a.q3);a.q6=5*(a.q1+a.q2+a.q3);a.q7=5*(a.q1+a.q2+a.q3);\na.q8=5*(a.q1+a.q2+a.q3);a.q9=5*(a.q1+a.q2+a.q3);a.q10=5*(a.q1+a.q2+a.q3);a.q11=5*(a.q1+a.q2+a.q3);a.q12=5*(a.q1+a.q2+a.q3);a.q13=5*(a.q1+a.q2+a.q3);a.q14=5*(a.q1+a.q2+a.q3);a.q15=5*(a.q1+a.q2+a.q3);a.q16=5*(a.q1+a.q2+a.q3);a.q17=5*(a.q1+a.q2+a.q3);a.q18=5*(a.q1+a.q2+a.q3);a.q19=5*(a.q1+a.q2+a.q3);a.q20=5*(a.q1+a.q2+a.q3);a.q21=5*(a.q1+a.q2+a.q3);a.q22=5*(a.q1+a.q2+a.q3);a.q23=5*(a.q1+a.q2+a.q3);a.q24=5*(a.q1+a.q2+a.q3);a.q25=5*(a.q1+a.q2+a.q3);a.q26=5*(a.q1+a.q2+a.q3);a.q27=5*(a.q1+a.q2+a.q3);a.q28=\n5*(a.q1+a.q2+a.q3);a.q29=5*(a.q1+a.q2+a.q3);a.q30=5*(a.q1+a.q2+a.q3);a.q31=5*(a.q1+a.q2+a.q3);a.q32=5*(a.q1+a.q2+a.q3);a.warp=0;a.rot=0;a.cx=.5;a.cy=.5;a.q1=.5+.1*Math.sin(a.time);a.q2=.5-.1*Math.cos(a.time);a.wave_a=0;a.decay=.95;a.q1=-2+.1*Math.sin(a.time);a.q2=-2-.1*Math.cos(a.time);a.q8=a.oldq8+.003*div(pow(1+1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,6),a.fps);a.oldq8=a.q8;a.mybass+=.01*(a.bass+a.bass_att);a.zoom=1.09;a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=\n.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,\na.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;","pixel_eqs_str":"a.myx=1.1*(a.x-a.q1);a.myy=1.1*(a.y-a.q2);a.myrad=a.myx*a.myx+a.myy*a.myy;a.dx=(.5+.02*Math.sin(a.q8))*div(a.myy,a.myrad+1);a.dy=-(.5+.02*Math.sin(.897*a.q8))*div(a.myx,a.myrad+1);a.rd=a.bass*a.rad;a.rot=div(a.rd,10);a.sy=1.02+div(a.rad,10);a.sx=a.sy-a.myrad;","init_eqs_eel":"","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\nvb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = vvb*2;//0.5 + vb - vvb;\nq2 = vvm*2;//0.5 + vm - vvm;\nq3 = vvt*2;//0.5 + vt - vvt;\nq4=(q1+q2+q3)*5;\nq5=(q1+q2+q3)*5;\nq6=(q1+q2+q3)*5;\nq7=(q1+q2+q3)*5;\nq8=(q1+q2+q3)*5;\nq9=(q1+q2+q3)*5;\nq10=(q1+q2+q3)*5;\nq11=(q1+q2+q3)*5;\nq12=(q1+q2+q3)*5;\nq13=(q1+q2+q3)*5;\nq14=(q1+q2+q3)*5;\nq15=(q1+q2+q3)*5;\nq16=(q1+q2+q3)*5;\nq17=(q1+q2+q3)*5;\nq18=(q1+q2+q3)*5;\nq19=(q1+q2+q3)*5;\nq20=(q1+q2+q3)*5;\nq21=(q1+q2+q3)*5;\nq22=(q1+q2+q3)*5;\nq23=(q1+q2+q3)*5;\nq24=(q1+q2+q3)*5;\nq25=(q1+q2+q3)*5;\nq26=(q1+q2+q3)*5;\nq27=(q1+q2+q3)*5;\nq28=(q1+q2+q3)*5;\nq29=(q1+q2+q3)*5;\nq30=(q1+q2+q3)*5;\nq31=(q1+q2+q3)*5;\nq32=(q1+q2+q3)*5;\n\n//wave_r = 0.0 + 0.000*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\n//wave_g = 0.0 + 0.000*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\n//wave_b = 0.0 + 0.000*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\n//zoom = zoom + 0.01*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\n//rot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\n//decay = decay - 0.01*equal(frame%6,0);\nwarp=0;\n//zoom =1;\nrot =0;\ncx=0.5;\ncy=0.5;\nq1 = 0.5 + 0.1*sin(time);\nq2 = 0.5 - 0.1*cos(time);\nwave_a =0;\ndecay=.95;\nq1=-2+0.1*sin(time);;\nq2=-2-0.1*cos(time);;\n\n\nq8 = oldq8+ 0.003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\noldq8 =q8;\nmybass  = mybass + 0.01*(bass + bass_att);\n\n//rot =1 + 0.15*sin(mybass*0.1789);\n//zoom = 1.6 + 0.1*sin(mybass*0.786);\nzoom = 1.09;\n//rot =0.12;\n//cx = 0.4;\n//cy = 0.4;\nchng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;","pixel_eqs_eel":"myx = (x-q1)*1.1;\nmyy= (y-q2)*1.1;\nmyrad = (myx*myx) + (myy*myy);\ndx = (0.5+0.02*sin(q8))*(myy/(myrad+1));\ndy = -(0.5+0.02*sin(q8*0.897))*(myx/(myrad+1));\nrd=bass*rad;\nrot=rd/10;\n\nsy=1.02+(rad/10);\nsx=sy-myrad;","warp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = mix (uv_orig, uv, vec2(0.15, 0.15));\n  vec2 tmpvar_4;\n  tmpvar_4 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\n  uv_1 = (mix (uv_orig, tmpvar_3, vec2((\n    (dot (texture (sampler_main, mix (uv_orig, tmpvar_3, vec2(8.0, 8.0))).xyz, vec3(0.32, 0.49, 0.29)) - dot (((texture (sampler_blur1, \n      mix (uv_orig, tmpvar_3, vec2(-8.0, -8.0))\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\n   * 0.75))) + ((texture (sampler_noise_lq, tmpvar_4) - 0.5).xy * texsize.zw));\n  ret_2 = ((texture (sampler_main, uv_1).xyz + (\n    (texture (sampler_noise_lq, tmpvar_4) - 0.5)\n   * 0.004).xyz) + -0.0014);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\n    ret_2.y = (ret_2.y - (tmpvar_5.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (ret_2.z - (tmpvar_5.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (ret_2.x - (tmpvar_5.z * 0.5));\n  };\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv_1 - 0.5) * vec2(-1.0, 1.0)) + 0.5);\n  ret_2 = (abs((\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\n   - \n    mix (texture (sampler_main, uv_1).xyz, texture (sampler_main, tmpvar_3).xyz, vec3(0.5, 0.5, 0.5))\n  )) * 6.0);\n  ret_2 = (ret_2 * (0.1 + abs(\n    max (sin(bass_att), sin(treb_att))\n  )));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_3.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\n    ret_2.z = (ret_2.z - (tmpvar_4.x * 0.5));\n  };\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\n    ret_2.x = (ret_2.x - (tmpvar_4.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\n    ret_2.y = (ret_2.y - (tmpvar_4.z * 0.5));\n  };\n  ret_2 = (ret_2 * max ((\n    (texture (sampler_blur3, uv_1).xyz * scale3)\n   + bias3), (\n    (texture (sampler_blur3, tmpvar_3).xyz * scale3)\n   + bias3)));\n  ret_2 = (ret_2 * 1.5);\n  ret_2 = (0.7 - ret_2);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"float sigmoid(float t, float c){\n   return 1 / ( 1 + exp(t*c));\n}\n\nfloat2 vortex(float2 domain, float2 position, float2 motionVector, float4 domainAspect, float radius, float sharpness, float spin, float zoom){\n   domain -= position;\n   domain *= domainAspect.xy;\n   float sigmoidFilter = sigmoid( length(domain) - radius , sharpness );\n   domain +=  + motionVector*sigmoidFilter;\n   spin *= sigmoidFilter;\n   float s = sin(spin);\n   float c = cos(spin);\n   float2 uv_rot;\n   uv_rot.x = c*domain.x - s*domain.y;\n   uv_rot.y = s*domain.x + c*domain.y;\n   uv_rot *= domainAspect.zw;\n   uv_rot += position;\n   return saturate(position + (uv_rot-position)*lerp(1,zoom,sigmoidFilter));\n}\n\nshader_body\n{\n\n\nfloat2 domain = uv;\nfloat2 position = float2(q4,1-q8) + 0.5*0;\nfloat2 motionVector = float2(-q15,q16)*q13*aspect.wz;\nfloat4 domainAspect = aspect;\nfloat radius = 0.1;\nfloat sharpness = 30;\nfloat spin = -0;\nfloat zoom = 0.9;\n\nfloat2 uv_vortex = vortex( domain, position, motionVector, domainAspect, radius, sharpness, spin, zoom);\n\n//uv = uv_vortex + texsize.zw*float2(0,0.15)*0;\n\nuv = lerp(uv_orig,uv,.15);\n\nfloat error     = 1;        // maximum random pixel offset\nfloat diffusion = 0.004;      // dither strength\nfloat fadeout   = -0.0014;    // may be minor 1/256 due to the error diffusion dither;\n\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;\nfloat magic = lum(GetPixel(lerp(uv_orig,uv, 8))) - lum(GetBlur1(lerp(uv_orig,uv,-8)));\nuv = lerp(uv_orig,uv, magic*0.75 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;\nret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; \n}","comp_hlsl":"\n\n\n\nshader_body\n{\n    uv = 0.05 + 0.9*uv;\n\n\n    float2 uv_echo = (uv - 0.5)*float2(-1,1) + 0.5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo).xyz, \n                0.50 \n              ); //video echo\n    //ret = tex2D(sampler_main, uv).xyz;\n      // SUPER GLOW EDGES - looks awesome w/octopus\n      float3 avg_col = GetBlur1(uv);\n      ret = abs(avg_col - ret)*6;\n    \n    ret *= 0.1+abs(max(sin(bass_att),sin(treb_att)));\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv_echo.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \n    ret *= max(GetBlur3(uv),GetBlur3(uv_echo));\n\n    ret *= 1.5; // a little bit of overbright\n\n\nret=.7-ret;\n}"}