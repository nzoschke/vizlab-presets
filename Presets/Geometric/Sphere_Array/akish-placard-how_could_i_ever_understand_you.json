{"version":2,"baseVals":{"rating":5,"wave_mode":2,"wave_scale":0.01,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.24298,"zoom":0.9901,"warp":0.01,"ob_size":0,"ob_g":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":8,"num_inst":200,"rad":0.04061,"ang":0.37699,"tex_ang":0.87965,"tex_zoom":0.1995,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0.07},"init_eqs_str":"a.my_z=0;a.d=0;a.y3=0;a.px=0;a.z2=0;a.y1=0;a.w=0;a.w2=0;a.x1=0;a.q6=0;a.zoom=0;a.p=0;a.q1=0;a.r1=0;a.q5=0;a.py=0;a.sx=0;a.z3=0;a.w3=0;a.sy=0;a.my_x=0;a.x3=0;a.my_y=0;a.q11=0;a.q10=0;a.pz=0;a.w1=0;a.sz=0;a.x2=0;a.l=0;a.u=0;a.y2=0;a.z1=0;a.phi=0;a.the=0;a.q30=0;a.sample=0;a.q20=0;","frame_eqs_str":"a.sample=1-div(a.instance,a.num_inst);a.u=30*a.q20;a.r1=3.14*a.q20;a.phi=a.q20+Math.sin(3*a.u);a.the=Math.cos(3*a.u);a.px=a.r1*Math.cos(a.the)*Math.sin(a.phi);a.py=a.r1*Math.sin(a.the)*Math.sin(a.phi);a.pz=a.r1*Math.cos(a.phi);a.q10=-1+2*a.sample;a.q11=200*a.sample;a.sx=.4*sqrt(1-a.q10*a.q10)*Math.cos(a.q11)+8*(.6*Math.sin(.2*a.q30)+.4*Math.sin(.23*a.q30));a.sy=.4*sqrt(1-a.q10*a.q10)*Math.sin(a.q11)+8*(.6*Math.sin(.27*a.q30)+.4*Math.sin(.18*a.q30));a.sz=-2-.6*a.q10;a.sz=.00001<\nMath.abs(above(a.sample,.01))?a.sz:a.sz+.4*Math.abs(Math.sin(a.q1));a.my_x=a.sx+a.px;a.my_y=a.sy+a.py;a.my_z=-a.sz+a.pz;a.d=0;a.zoom=1;a.w1=1.6+Math.atan2(.1+a.py,.1+a.px);a.w2=3.14;a.w3=1.57;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*a.my_y;a.z1=a.my_z;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*a.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;\na.l=sqrt(a.x3*a.x3+a.y3*a.y3);a.w=Math.atan2(a.x3,a.y3);a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));a.p=Math.tan(Math.asin(1)+Math.atan2(a.d+a.z3,a.l));a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+div(a.my_x,a.q6);a.y=.5+div(a.my_y,a.q5);a.rad=div(a.rad,a.d);a.r=.5+.5*Math.sin(22*a.sample);a.g=.5+.5*Math.sin(25*a.sample);a.b=.5+.5*Math.sin(28*a.sample);a.r2=.1*a.r;a.g2=.1*a.g;a.b2=.1*a.b;","init_eqs_eel":"","frame_eqs_eel":"\nsample=1-instance/num_inst;\n\n///////POV\n\n///////POV\n\nu = 30*q20;\n\nr1  = 3.14*q20;\nphi = q20+sin(3*u);\nthe = cos(3*u) ;\n\npx = r1*cos(the)*sin(phi);\npy = r1*sin(the)*sin(phi);\npz = r1*cos(phi);\n\n\n/////// surface (sphere)\n\nq10= -1+2*sample;\nq11=200*sample;\n\nsx = .4*sqrt(1-q10*q10)*cos(q11)+8*(.6*sin(.20*q30)+.4*sin(.23*q30));\nsy = .4*sqrt(1-q10*q10)*sin(q11)+8*(.6*sin(.27*q30)+.4*sin(.18*q30));\nsz = -2- .6*q10;\n\nsz=if(above(sample,.01),sz,sz+.4*abs(sin(q1)));\n\n\nmy_x = sx+ px;\nmy_y = sy+ py;\nmy_z = -sz+ pz;\n\n/////// rotations ... by flexi\n\nd = 0; \nzoom = 1;\n\nw1 = 1.6+atan2(.1+py,.1+px);\nw2 = 3.14;\nw3 = 1.57;\n\nx1 = cos(w1)*my_x + sin(w1)*my_y;\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\nz1 = my_z;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\np = tan(asin(1) + atan2(d+z3,l));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x/q6;\ny = 0.5 + my_y/q5;\n\n////////\nrad=rad/d;\n\nr=.5+.5*sin(22*sample);\ng=.5+.5*sin(25*sample);\nb=.5+.5*sin(28*sample);\n\nr2=.1*r;\ng2=.1*g;\nb2=.1*b;"},{"baseVals":{"enabled":1,"sides":8,"num_inst":1024,"rad":0.24145,"ang":0.37699,"r":0,"r2":1,"b2":1,"a2":0.2},"init_eqs_str":"a.my_z=0;a.d=0;a.y3=0;a.px=0;a.z2=0;a.y1=0;a.w=0;a.w2=0;a.x1=0;a.q6=0;a.zoom=0;a.p=0;a.q1=0;a.r1=0;a.q5=0;a.py=0;a.sx=0;a.z3=0;a.w3=0;a.sy=0;a.my_x=0;a.x3=0;a.my_y=0;a.pz=0;a.w1=0;a.sz=0;a.x2=0;a.l=0;a.u=0;a.y2=0;a.q2=0;a.z1=0;a.q3=0;a.phi=0;a.the=0;a.sample=0;a.q20=0;","frame_eqs_str":"a.sample=1-div(a.instance,a.num_inst);a.u=30*a.q20;a.r1=3.14*a.q20;a.phi=a.q20+Math.sin(3*a.u);a.the=Math.cos(3*a.u);a.px=a.r1*Math.cos(a.the)*Math.sin(a.phi);a.py=a.r1*Math.sin(a.the)*Math.sin(a.phi);a.pz=a.r1*Math.cos(a.phi);a.u=30*a.sample;a.r1=3.14*a.sample;a.phi=a.sample+Math.sin(3*a.u);a.the=Math.cos(3*a.u);a.sx=a.r1*Math.cos(a.the)*Math.sin(a.phi);a.sy=a.r1*Math.sin(a.the)*Math.sin(a.phi);a.sz=a.r1*Math.cos(a.phi);a.my_x=a.sx+a.px;a.my_y=a.sy+a.py;a.my_z=-a.sz+a.pz;a.d=\n0;a.zoom=1;a.w1=1.4+Math.atan2(.1+a.py,.1+a.px);a.w2=3.14;a.w3=1.57;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*a.my_y;a.z1=a.my_z;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*a.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*a.x3+a.y3*a.y3);a.w=Math.atan2(a.x3,a.y3);a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));a.p=Math.tan(Math.asin(1)+\nMath.atan2(a.d+a.z3,a.l));a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+div(a.my_x,a.q6);a.y=.5+div(a.my_y,a.q5);a.rad=div(.3*a.rad,a.d+.1);a.border_a=.00001<Math.abs(equal(mod(1E3*a.sample,40),mod(.5*a.q1,40)))?.3:a.border_a;a.textured=.00001<Math.abs(equal(mod(1E3*a.sample,40),mod(.5*a.q1,40)))?1:0;a.tex_ang=4*a.q1;a.r=.5+.6*Math.sin(2*a.sample+.3*a.q1+a.x3);a.g=.5+.6*Math.sin(2*a.sample+.3*a.q2+a.y3);a.b=.5+.6*Math.sin(2*a.sample+.3*a.q3+a.z3);a.r2=.01*a.r;a.g2=.01*a.g;\na.b2=.01*a.b;","init_eqs_eel":"","frame_eqs_eel":"\nsample=1-instance/num_inst;\n\n///////POV\n\nu = 30*q20;\n\nr1  = 3.14*q20;\nphi = q20+sin(3*u);\nthe = cos(3*u) ;\n\npx = r1*cos(the)*sin(phi);\npy = r1*sin(the)*sin(phi);\npz = r1*cos(phi);\n\n/////// surface (cylinder to spherical coordinates)\n\nu = 30*sample;\n\nr1  = 3.14*sample;\nphi = sample+sin(3*u);\nthe = cos(3*u) ;\n\nsx = r1*cos(the)*sin(phi);\nsy = r1*sin(the)*sin(phi);\nsz = r1*cos(phi);\n\n\nmy_x = sx+ px;\nmy_y = sy+ py;\nmy_z = -sz+ pz;\n\n/////// rotations ... by flexi\n\nd = 0; \nzoom = 1;\n\nw1 = 1.4+atan2(.1+py,.1+px);\nw2 = 1*3.14;\nw3 = 1*1.57;\n\nx1 = cos(w1)*my_x + sin(w1)*my_y;\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\nz1 = my_z;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\np = tan(asin(1) + atan2(d+z3,l));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x/q6;\ny = 0.5 + my_y/q5;\n\n////////\n\nrad=.3*rad/(d+.1);\nborder_a=if(equal(1000*sample%40,.5*q1%40),.3,border_a);\ntextured=if(equal(1000*sample%40,.5*q1%40),1,0);\ntex_ang=4*q1;\n\nr=.5+.6*sin(2*sample+.3*q1+x3);\ng=.5+.6*sin(2*sample+.3*q2+y3);\nb=.5+.6*sin(2*sample+.3*q3+z3);\n\nr2=.01*r;\ng2=.01*g;\nb2=.01*b;"},{"baseVals":{"enabled":1,"sides":30,"thickoutline":1,"num_inst":150,"rad":0.02473,"g2":0,"a2":0.3,"border_a":0},"init_eqs_str":"a.my_z=0;a.d=0;a.y3=0;a.px=0;a.z2=0;a.y1=0;a.w=0;a.w2=0;a.x1=0;a.q21=0;a.q6=0;a.zoom=0;a.p=0;a.q1=0;a.r1=0;a.q5=0;a.py=0;a.sx=0;a.z3=0;a.w3=0;a.sy=0;a.my_x=0;a.x3=0;a.my_y=0;a.pz=0;a.w1=0;a.sz=0;a.x2=0;a.l=0;a.u=0;a.y2=0;a.q2=0;a.z1=0;a.q3=0;a.phi=0;a.the=0;a.sample=0;a.q20=0;","frame_eqs_str":"a.sample=1-div(a.instance,a.num_inst);a.u=30*a.q20;a.r1=3.14*a.q20;a.phi=a.q20+Math.sin(3*a.u);a.the=Math.cos(3*a.u);a.px=a.r1*Math.cos(a.the)*Math.sin(a.phi);a.py=a.r1*Math.sin(a.the)*Math.sin(a.phi);a.pz=a.r1*Math.cos(a.phi);a.u=30*a.sample*a.q21;a.r1=3.14*a.sample*a.q21;a.phi=a.sample*a.q21+Math.sin(3*a.u);a.the=Math.cos(3*a.u);a.sx=a.r1*Math.cos(a.the)*Math.sin(a.phi);a.sy=a.r1*Math.sin(a.the)*Math.sin(a.phi);a.sz=a.r1*Math.cos(a.phi);a.my_x=a.sx+a.px;a.my_y=a.sy+a.py;a.my_z=\n-a.sz+a.pz;a.d=0;a.zoom=1;a.w1=1.4+Math.atan2(.1+a.py,.1+a.px);a.w2=3.14;a.w3=1.57;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*a.my_y;a.z1=a.my_z;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*a.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*a.x3+a.y3*a.y3);a.w=Math.atan2(a.x3,a.y3);a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));\na.p=Math.tan(Math.asin(1)+Math.atan2(a.d+a.z3,a.l));a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+div(a.my_x,a.q6);a.y=.5+div(a.my_y,a.q5);a.rad=div(a.rad,a.d);a.r=.5+.6*Math.sin(2*a.sample+.3*a.q1+a.x3);a.g=.5+.6*Math.sin(2*a.sample+.3*a.q2+a.y3);a.b=.5+.6*Math.sin(2*a.sample+.3*a.q3+a.z3);","init_eqs_eel":"","frame_eqs_eel":"\nsample=1-instance/num_inst;\n\n///////POV\n\nu = 30*q20;\n\nr1  = 3.14*q20;\nphi = q20+sin(3*u);\nthe = cos(3*u) ;\n\npx = r1*cos(the)*sin(phi);\npy = r1*sin(the)*sin(phi);\npz = r1*cos(phi);\n\n/////// surface (cylinder to spherical coordinates)\n\nu = 30*sample*q21;\n\nr1  = 3.14*sample*q21;\nphi = sample*q21+sin(3*u);\nthe = cos(3*u) ;\n\nsx = r1*cos(the)*sin(phi);\nsy = r1*sin(the)*sin(phi);\nsz = r1*cos(phi);\n\nmy_x = sx+ px;\nmy_y = sy+ py;\nmy_z = -sz+ pz;\n\n/////// rotations ... by flexi\n\nd = 0; \nzoom = 1;\n\nw1 = 1.4+atan2(.1+py,.1+px);\nw2 = 1*3.14;\nw3 = 1*1.57;\n\nx1 = cos(w1)*my_x + sin(w1)*my_y;\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\nz1 = my_z;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\np = tan(asin(1) + atan2(d+z3,l));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x/q6;\ny = 0.5 + my_y/q5;\n\n////////\n\nrad=rad/d;\n\nr=.5+.6*sin(2*sample+.3*q1+x3);\ng=.5+.6*sin(2*sample+.3*q2+y3);\nb=.5+.6*sin(2*sample+.3*q3+z3);"},{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"num_inst":250,"rad":0.02508,"ang":0.31416,"tex_zoom":3.36668,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.my_z=0;a.d=0;a.y3=0;a.px=0;a.z2=0;a.y1=0;a.z=0;a.w=0;a.w2=0;a.x1=0;a.q6=0;a.zoom=0;a.p=0;a.r1=0;a.q5=0;a.py=0;a.sx=0;a.z3=0;a.w3=0;a.sy=0;a.my_x=0;a.x3=0;a.my_y=0;a.pz=0;a.t=0;a.p2=0;a.w1=0;a.sz=0;a.x2=0;a.l=0;a.p1=0;a.u=0;a.y2=0;a.z1=0;a.phi=0;a.the=0;a.q30=0;a.sample=0;a.q20=0;","frame_eqs_str":"a.sample=div(a.instance,a.num_inst);a.u=30*a.q20;a.r1=3.14*a.q20;a.phi=a.q20+Math.sin(3*a.u);a.the=Math.cos(3*a.u);a.px=a.r1*Math.cos(a.the)*Math.sin(a.phi);a.py=a.r1*Math.sin(a.the)*Math.sin(a.phi);a.pz=a.r1*Math.cos(a.phi);a.t=.05*a.q30;a.p1=71;a.p2=25;a.x1=20*a.rad*Math.sin(12.56*a.sample+2*a.t);a.y1=10*a.rad*Math.cos(12.56*a.sample+1.8*a.t);a.z1=0;a.x2=0;a.y2=a.y1;a.z2=-10*a.rad*Math.sin(12.56*a.sample+2*a.t)+20*a.rad*Math.sin(12.56*a.sample+2*a.t);a.x=.00001<Math.abs(above(a.sample,\n.5))?a.x2:a.x1;a.y=.00001<Math.abs(above(a.sample,.5))?a.y2:a.y1;a.z=.00001<Math.abs(above(a.sample,.5))?a.z2:a.z1;a.rad=.00001<Math.abs(equal(mod(a.instance,a.p2),0))?a.rad+2.5*a.rad*Math.sin(772*a.sample):a.rad;a.rad=.00001<Math.abs(equal(mod(a.instance,a.p1),0))?2*a.rad:a.rad;a.a=.00001<Math.abs(equal(mod(a.instance,a.p1),0))?1:a.a;a.a=.00001<Math.abs(equal(mod(a.instance,a.p2),0))?1:a.a;a.r=.8+.2*Math.sin(520*a.sample);a.g=.6+.2*Math.sin(330*a.sample);a.b=.8+.2*Math.sin(140*a.sample);a.x3=a.x-\n2*a.rad*Math.cos(12.56*a.sample+18*a.t);a.y3=a.y;a.z3=a.z-2*a.rad*Math.sin(12.56*a.sample+18*a.t);a.x=.00001<Math.abs(equal(mod(a.instance,a.p1),1))?a.x3:a.x;a.y=.00001<Math.abs(equal(mod(a.instance,a.p1),1))?a.y3:a.y;a.z=.00001<Math.abs(equal(mod(a.instance,a.p1),1))?a.z3:a.z;a.rad=.00001<Math.abs(equal(mod(a.instance,a.p1),1))?.5*a.rad:a.rad;a.a=.00001<Math.abs(equal(mod(a.instance,a.p1),1))?1:a.a;a.x=.00001<Math.abs(equal(a.sample,.5))?0:a.x;a.y=.00001<Math.abs(equal(a.sample,.5))?0:a.y;a.z=.00001<\nMath.abs(equal(a.sample,.5))?0:a.z;a.a=.00001<Math.abs(equal(a.sample,.5))?1:a.a;a.b=.00001<Math.abs(equal(a.sample,.5))?0:a.b;a.g=.00001<Math.abs(equal(a.sample,.5))?a.g-.3+.2*Math.sin(10*a.t):a.g;a.rad=.00001<Math.abs(equal(a.sample,.5))?.1:a.rad;a.sx=10*a.x;a.sy=10*a.y;a.sz=10*a.z;a.my_x=a.sx+a.px;a.my_y=a.sy+a.py;a.my_z=-a.sz+a.pz;a.d=0;a.zoom=1;a.w1=1.4+Math.atan2(.1+a.py,.1+a.px);a.w2=3.14;a.w3=1.57;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*\na.my_y;a.z1=a.my_z;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*a.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*a.x3+a.y3*a.y3);a.w=Math.atan2(a.x3,a.y3);a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));a.p=Math.tan(Math.asin(1)+Math.atan2(a.d+a.z3,a.l));a.rad=div(a.rad,a.d);a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+div(a.my_x,a.q6);a.y=.5+div(a.my_y,\na.q5);","init_eqs_eel":"","frame_eqs_eel":"\nsample=instance/num_inst;\n\n///////POV\n\nu = 30*q20;\n\nr1  = 3.14*q20;\nphi = q20+sin(3*u);\nthe = cos(3*u) ;\n\npx = r1*cos(the)*sin(phi);\npy = r1*sin(the)*sin(phi);\npz = r1*cos(phi);\n\n/////// surface \n\n/////// Planetary system \\\\\\\\\\\\\\\n\nt=.05*q30;\n\np1=71;\np2=25;\n\n/////// planets\nx1= 20*rad*sin(4*3.14*sample+2*t);\ny1= 10*rad*cos(4*3.14*sample+1.8*t);\nz1= 0;\n\nx2= 0;\ny2= y1;\nz2= -10*rad*sin(4*3.14*sample+2*t) + 20*rad*sin(4*3.14*sample+2*t);\n\n\nx=if(above(sample,.5), x2, x1);\ny=if(above(sample,.5), y2, y1);\nz=if(above(sample,.5), z2, z1);\n\nrad=if(equal(instance%p2,0), rad+2.5*rad*sin(772*sample),rad);\nrad=if(equal(instance%p1,0), 2*rad,rad);\na=if(equal(instance%p1,0),1,a);\na=if(equal(instance%p2,0),1,a);\nr=.8+.2*sin(520*sample);\ng=.6+.2*sin(330*sample);\nb=.8+.2*sin(140*sample);\n\n/////// satellites\nx3= x- 2*rad*cos(4*3.14*sample+18*t);\ny3= y;\nz3= z-2*rad*sin(4*3.14*sample+18*t);\n\nx=if(equal(instance%p1,1),x3,x);\ny=if(equal(instance%p1,1),y3,y);\nz=if(equal(instance%p1,1),z3,z);\n\nrad=if(equal(instance%p1,1),.5*rad,rad);\na=if(equal(instance%p1,1),1,a);\n\n\n///////sun\nx=if(equal(sample,.5),0,x);\ny=if(equal(sample,.5),0,y);\nz=if(equal(sample,.5),0,z);\n\na=if(equal(sample,.5),1,a);\nb=if(equal(sample,.5), 0,b);\ng=if(equal(sample,.5), g-.3+.2*sin(10*t),g);\nrad=if(equal(sample,.5), .1, rad);\n\n\n//////////\nsx = 10*x;\nsy = 10*y;\nsz = 10*z;\n\nmy_x = sx+ px;\nmy_y = sy+ py;\nmy_z = -sz+ pz;\n\n/////// rotations ... by flexi\n\nd = 0; \nzoom = 1;\n\nw1 = 1.4+atan2(.1+py,.1+px);\nw2 = 1*3.14;\nw3 = 1*1.57;\n\nx1 = cos(w1)*my_x + sin(w1)*my_y;\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\nz1 = my_z;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\np = tan(asin(1) + atan2(d+z3,l));\n\n\n//////////\n\nrad=rad/d;\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x/q6 ;\ny = 0.5 + my_y/q5 ;\n"}],"waves":[{"baseVals":{"enabled":1,"samples":442,"usedots":1,"scaling":0.01,"smoothing":1,"r":0.8,"g":0.8},"init_eqs_str":"a.q10=0;a.t=0;a.mx=0;a.my=0;a.p1=0;a.p2=0;","frame_eqs_str":"","point_eqs_str":"a.q10=123*a.sample;a.x=-.5+a.sample;a.y=-.5+Math.abs(Math.sin(a.q10));a.t=.02*a.time;a.mx=a.x*Math.cos(a.t)+a.y*Math.sin(a.t);a.my=a.y*Math.cos(a.t)-a.x*Math.sin(a.t);a.p1=.1*Math.sin(630*a.sample);a.p2=.1*Math.sin(530*a.sample);a.x=.5+a.p1+a.mx;a.y=.5+a.p2+a.my;a.a=.05+.2*a.p1;a.a=.00001<Math.abs(equal(mod(1E3*a.sample,128),0))?.4:a.a;a.a+=.03*Math.floor(rand(2));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//// stars\n\nq10=123*sample;\n\n///random factor\n\nx = -.5+sample;\ny = -.5+abs(sin(q10));\n\nt=.02*time;\nmx = x*cos(t)+y*sin(t);\nmy = y*cos(t)-x*sin(t);\n\np1=.1*sin(630*sample);\np2=.1*sin(530*sample);\n\nx= .5+p1+mx;\ny= .5+p2+my;\n\na=.05+.2*p1;\na=if(equal(1000*sample%128,0),.4,a);\na=a+.03*int(rand(2));\n\n"},{"baseVals":{"usedots":1,"scaling":0.20929,"smoothing":0,"r":0.3,"g":0.2,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"r":0.8,"g":0.8,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"smoothing":0.4,"g":0.6,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.w=0;a.q12=0;a.q18=0;a.q22=0;a.q13=0;a.scale=0;a.q15=0;a.q6=0;a.dt=0;a.q1=0;a.q5=0;a.dm=0;a.mm=0;a.tt=0;a.angle=0;a.q11=0;a.q4=0;a.q16=0;a.t=0;a.db=0;a.q17=0;a.bb=0;a.q2=0;a.q14=0;a.q3=0;a.q7=0;a.q8=0;a.x1=.9;a.y1=.5;a.x2=.5;a.y2=.5;a.x3=.5;a.y3=.5;a.x4=.5;a.y4=.5;","frame_eqs_str":"a.t+=div(2.5,a.fps);a.t=.00001<Math.abs(above(a.t,2))?a.t-2:a.t;a.q22=-a.t;a.db=.98*a.db+.2*a.bass_att;a.bb+=.1*a.db;a.dt=.98*a.dt+.2*a.treb_att;a.tt+=.1*a.dt;a.dm=.98*a.dm+.2*a.mid_att;a.mm+=.1*a.dm;a.q13=.5+.25*Math.sin(.1*(a.bb-a.mm));a.q14=.5+.25*Math.sin(.1*(a.tt-a.mm));a.w=.1*(a.bb-a.tt);a.q16=.8-.04*(a.db-a.dt);a.q11=Math.sin(a.w);a.q12=Math.cos(a.w);a.q17=Math.sin(-a.w);a.q18=Math.cos(-a.w);a.q15=div(1,a.q16);a.zoom=1;a.warp=0;a.scale=8;a.angle=.2*-a.time;a.q1=a.scale*\nMath.cos(a.angle);a.q2=a.scale*Math.sin(a.angle);a.q3=0;a.q4=.3;a.scale=.8;a.angle=.2*a.time;a.q5=a.scale*Math.cos(a.angle);a.q6=a.scale*Math.sin(a.angle);a.q7=-.25;a.q8=.2;a.q11=div(1,Math.asin(1));","pixel_eqs_str":"","init_eqs_eel":"x1 = 0.9;\ny1 = 0.5;\n\nx2 = 0.5; y2 = 0.5;\nx3 = 0.5; y3 = 0.5;\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"//spiral collide frame\nt = t + 2.5/fps;\nt = if(above(t,2),t-2,t);\nq22 = -t;\n// Flexis dampened sound response functions\ndb = db*0.98 + bass_att*0.2; // dampener\nbb = bb + db*0.1; // accumulation, replace time expressions with this ;)\ndt = dt*0.98 + treb_att*0.2;\ntt = tt + dt*0.1;\ndm = dm*0.98 + mid_att*0.2;\nmm = mm + dm*0.1;\n//***** [q11-q18] variables for Flexis caleidoscope shader code *****\n// change\nq13 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x\nq14 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y\nw = (bb-tt)*0.1;                   // angle\nq16 = 0.8 - (db-dt)*0.04;         // size\n//don't change\nq11 = sin(w);\nq12 = cos(w);\nq17 = sin(-w);\nq18 = cos(-w);\nq15 = 1/q16;\nzoom =1;// 0.999;\nwarp = 0;\n\n\n// a\nscale = 8;\nangle = -time*0.2;\n\nq1 = scale*cos(angle); // the real part\nq2 = scale*sin(angle); // the imaginary part\n\n// b\n\nq3 = 0; // the real part\nq4 = 0.3; // the imaginary part\n\n// c\nscale = 0.8;\nangle = time*0.2;\n\nq5 = scale*cos(angle); // the real part\nq6 = scale*sin(angle); // the imaginary part\n\n// d\nq7 = -0.25; // the real part\nq8 = 0.2; // the imaginary part\n\nq11 = 1/asin(1);","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\n  tmpvar_4 = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  float tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\n  tmpvar_7 = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4;\n  tmpvar_10.y = tmpvar_7;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  tmpvar_11.y = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x + 0.004);\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_7;\n  tmpvar_13.y = -(tmpvar_4);\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_14;\n  x_14 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\n   * 180.0) / sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )));\n  ret_2.z = (ret_2.z * 0.8);\n  ret_2.z = (ret_2.z + 0.004);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_7);\n  tmpvar_15.y = tmpvar_4;\n  my_uv_1 = (tmpvar_15 * 0.045);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_3.x);\n  tmpvar_16.y = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_3.y);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\n   * 0.1) + 0.01));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_2;\n  ret = tmpvar_17.xyz;\n }","comp":" shader_body { \n  vec2 uv3_1;\n  vec2 uv2_2;\n  uv2_2.y = uv.y;\n  uv2_2.x = (1.0 - uv.x);\n  uv3_1.x = uv.x;\n  uv3_1.y = (1.0 - uv.y);\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_4.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1)).y;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - (tmpvar_4 * 0.4));\n  vec2 tmpvar_6;\n  tmpvar_6.x = (((texture (sampler_blur1, \n    (uv2_2 + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv2_2 - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_6.y = (((texture (sampler_blur1, \n    (uv2_2 + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv2_2 - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1)).y;\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((texture (sampler_blur1, \n    (uv3_1 + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv3_1 - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_7.y = (((texture (sampler_blur1, \n    (uv3_1 + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv3_1 - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1)).y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv3_1 - (tmpvar_7 * 0.4));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = (mix (mix (\n    (vec3(0.5, 0.6, 0.9) * texture (sampler_fc_main, tmpvar_5).x)\n  , \n    (vec3(2.0, 2.0, 2.0) * (vec3(1.0, 1.0, 1.0) - texture (sampler_main, uv).zzz))\n  , vec3(\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).y * 0.5)\n  )), vec3(1.0, 0.0, 0.0), texture (sampler_main, tmpvar_5).zzz) + (mix (\n    mix ((vec3(0.5, 0.6, 0.9) * texture (sampler_fc_main, (uv2_2 - (tmpvar_6 * 0.4))).x), (vec3(2.0, 2.0, 2.0) * (vec3(1.0, 1.0, 1.0) - texture (sampler_main, uv2_2).zzz)), vec3((((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1).y * 0.5)))\n  , vec3(0.8, 0.1, 0.5), texture (sampler_main, tmpvar_5).zzz) - mix (\n    mix ((vec3(0.5, 0.6, 0.9) * texture (sampler_fc_main, tmpvar_8).x), (vec3(2.0, 2.0, 2.0) * (vec3(1.0, 1.0, 1.0) - texture (sampler_main, uv3_1).zzz)), vec3((((texture (sampler_blur1, uv3_1).xyz * scale1) + bias1).y * 0.5)))\n  , vec3(1.8, 0.4, 0.2), texture (sampler_main, tmpvar_8).zzz)));\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with\n    float1 d = 0.005;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float2 my_uv = uv - float2(dx,dy)*0.01 + float2(dxb,dyb)*0.003;\n\n\n\n    float2 v = 0.01;\n    ret.x = tex2D( sampler_fw_main, my_uv -floor(my_uv)*0).x;\n\n    \n    ret.x += (ret.x - GetBlur3(uv).x)*.1;\n    ret.x += 0.004;\n\n\n//--------------------------------\n\n    my_uv = uv + float2(dy,-dx)*0.05*(1.2-GetBlur3(uv).y);\n\n\n\n    v = 0.01;\n    ret.z = tex2D( sampler_fw_main, my_uv).z;\n    \n    ret.z += (ret.z - GetBlur1(uv).z)*length(my_uv-uv)*180/length(scale);\n    ret.z *= 0.8;\n    ret.z += 0.004;\n\n\n\n//--------------------------------\n\n    d = 0.01;\n    my_uv = float2(-dy,dx)*0.045;\n\n    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;\n    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;\n    my_uv += uv - float2(dx,dy)*0.03;\n\n\n\n    v = 0.01;\n    ret.y =tex2D( sampler_fw_main, my_uv).y;\n\n    \n    ret.y += (ret.y - GetBlur3(my_uv).y)*0.1 + 0.01;\n//ret = 0;\n}","comp_hlsl":"shader_body\n{\nfloat2 uv2=uv;\nuv2.x=1-uv2.x;\nfloat2 uv3=uv;\nuv3.y=1-uv3.y;\n\n    float2 d = texsize.zw*4;\n    float1 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) ).y;\n    float1 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) ).y;\n    float2 uv_y = uv-float2(dx,dy)*0.4;\n\n    float2 d2 = texsize.zw*4;\n    float1 dx2 = ( GetBlur1(uv2+float2(1,0)*d2)-GetBlur1(uv2-float2(1,0)*d2) ).y;\n    float1 dy2 = ( GetBlur1(uv2+float2(0,1)*d2)-GetBlur1(uv2-float2(0,1)*d2) ).y;\n    float2 uv2_y = uv2-float2(dx2,dy2)*0.4;\n\n    float2 d3 = texsize.zw*4;\n    float1 dx3 = ( GetBlur1(uv3+float2(1,0)*d3)-GetBlur1(uv3-float2(1,0)*d3) ).y;\n    float1 dy3 = ( GetBlur1(uv3+float2(0,1)*d3)-GetBlur1(uv3-float2(0,1)*d3) ).y;\n    float2 uv3_y = uv3-float2(dx3,dy3)*0.4;\n\nret = lerp(float3(0.5,0.6,0.9)*tex2D(sampler_fc_main, uv_y).x,\n           lerp(float3(2,2,2),float3(0,0,0),GetPixel(uv).z),\n           GetBlur1(uv).y*0.5);\nret = lerp( ret, float3(1,0,0), GetPixel(uv_y).z);\n\nfloat3 ret2= lerp(float3(0.5,0.6,0.9)*tex2D(sampler_fc_main, uv2_y).x,\n           lerp(float3(2,2,2),float3(0,0,0),GetPixel(uv2).z),\n           GetBlur1(uv2).y*0.5);\nret2= lerp( ret2, float3(.8,.1,.5), GetPixel(uv_y).z);\n\nfloat3 ret3= lerp(float3(0.5,0.6,0.9)*tex2D(sampler_fc_main, uv3_y).x,\n           lerp(float3(2,2,2),float3(0,0,0),GetPixel(uv3).z),\n           GetBlur1(uv3).y*0.5);\nret3= lerp( ret3, float3(1.8,.4,.2), GetPixel(uv3_y).z);\n\nret+=ret2-ret3;\n\n}\n"}