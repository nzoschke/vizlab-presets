{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.96,"echo_zoom":1.007,"echo_orient":3,"wave_mode":3,"additivewave":1,"wrap":0,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":0.01,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"num_inst":500,"rad":0.03646,"tex_zoom":1.00183,"r":0,"a":0.03,"g2":0,"b2":0.6,"a2":0.07,"border_a":0.18,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":30,"num_inst":300,"rad":0.18905,"g":1,"b":0.7,"a":0,"r2":0.9,"g2":0.7,"b2":0.1,"a2":0.6,"border_b":0,"border_a":0},"init_eqs_str":"a.my_z=0;a.d=0;a.y3=0;a.z2=0;a.y1=0;a.w=0;a.w2=0;a.x1=0;a.q6=0;a.zoom=0;a.p=0;a.q1=0;a.r1=0;a.q5=0;a.z3=0;a.w3=0;a.my_x=0;a.x3=0;a.my_y=0;a.q11=0;a.q10=0;a.w1=0;a.x2=0;a.l=0;a.y2=0;a.q2=0;a.z1=0;a.q3=0;a.sample=0;","frame_eqs_str":"a.sample=div(a.instance,a.num_inst);a.b=Math.sin(20*a.sample);a.g=a.b;a.r=a.b;a.r1=1;a.q10=-1+2*a.sample;a.q11=200*a.sample+10*a.q1;a.my_x=sqrt(a.r1*a.r1-a.q10*a.q10)*Math.cos(a.q11);a.my_y=sqrt(a.r1*a.r1-a.q10*a.q10)*Math.sin(a.q11);a.my_z=a.q10;a.rad=.2*a.my_x;a.d=1;a.zoom=.4;a.w3=a.q1;a.w2=a.q2;a.w1=a.q3;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*a.my_y;a.z1=a.my_z;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*\na.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*a.x3+a.y3*a.y3);a.w=Math.atan2(a.x3,a.y3);a.p=Math.tan(Math.asin(1)+Math.atan2(a.d+a.z3,a.l));a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+div(a.my_x,a.q6);a.y=.5+div(a.my_y,a.q5);","init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\nb=sin(20*sample);\ng=b;\nr=b;\n\n///// Sphere\nr1=1;\nq10= -1+2*sample;\nq11=200*sample+10*q1;\n\nmy_x = sqrt(r1*r1-q10*q10)*cos(q11);\nmy_y = sqrt(r1*r1-q10*q10)*sin(q11);\nmy_z = q10;\n\nrad=.2*my_x;\n\n/////// rotations... by flexi\n\nd = 1; \nzoom = .4;\n\nw3 = q1;\nw2 = q2;\nw1 = q3;\n\nx1 = cos(w1)*my_x + sin(w1)*my_y;\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\nz1 = my_z;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\n// perspective calculation\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\np = tan(asin(1) + atan2(d+z3,l));\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x/q6;\ny = 0.5 + my_y/q5;"},{"baseVals":{"enabled":1,"sides":30,"num_inst":300,"a":0.8,"r2":0.6,"g2":0.7,"b2":1,"a2":0.5,"border_a":0},"init_eqs_str":"a.my_z=0;a.d=0;a.y3=0;a.z2=0;a.y1=0;a.w=0;a.w2=0;a.x1=0;a.q6=0;a.zoom=0;a.p=0;a.q1=0;a.r1=0;a.q5=0;a.z3=0;a.w3=0;a.my_x=0;a.x3=0;a.my_y=0;a.q11=0;a.q10=0;a.w1=0;a.x2=0;a.l=0;a.y2=0;a.q2=0;a.z1=0;a.q3=0;a.sample=0;","frame_eqs_str":"a.sample=div(a.instance,a.num_inst);a.b=Math.sin(20*a.sample);a.g=a.b;a.r=a.b;a.r1=1;a.q10=-1+2*a.sample;a.q11=200*a.sample+10*a.q1;a.my_x=sqrt(a.r1*a.r1-a.q10*a.q10)*Math.cos(a.q11);a.my_y=sqrt(a.r1*a.r1-a.q10*a.q10)*Math.sin(a.q11);a.my_z=a.q10;a.rad=.3*(a.my_x-a.my_z);a.d=1;a.zoom=.4;a.w3=a.q3;a.w2=a.q1;a.w1=a.q2;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*a.my_y;a.z1=a.my_z;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=\n-Math.sin(a.w2)*a.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*a.x3+a.y3*a.y3);a.w=Math.atan2(a.x3,a.y3);a.p=Math.tan(Math.asin(1)+Math.atan2(a.d+a.z3,a.l));a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+div(a.my_x,a.q6);a.y=.5+div(a.my_y,a.q5);","init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\nb=sin(20*sample);\ng=b;\nr=b;\n\n///// Sphere\nr1=1;\nq10= -1+2*sample;\nq11=200*sample+10*q1;\n\nmy_x = sqrt(r1*r1-q10*q10)*cos(q11);\nmy_y = sqrt(r1*r1-q10*q10)*sin(q11);\nmy_z = q10;\n\nrad=.3*(my_x-my_z);\n\n/////// rotations... by flexi\n\nd = 1; \nzoom = .4;\n\nw3 = q3;\nw2 = q1;\nw1 = q2;\n\nx1 = cos(w1)*my_x + sin(w1)*my_y;\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\nz1 = my_z;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\n// perspective calculation\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\np = tan(asin(1) + atan2(d+z3,l));\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x/q6;\ny = 0.5 + my_y/q5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"r":0.8,"g":0.8,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.20929,"smoothing":0,"r":0.8,"g":0.8,"a":0.47,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"r":0.8,"g":0.7,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tt2=0;a.q12=0;a.q29=0;a.q6=0;a.q1=0;a.q5=0;a.tt1=0;a.bt2=0;a.mt1=0;a.q11=0;a.bt1=0;a.vol=0;a.mt2=0;a.q2=0;a.q3=0;a.q30=0;","frame_eqs_str":"a.warp=0;a.wave_a=0;a.zoom=.995;a.bt1=.95*a.bt1+div(30*sqr(5*a.bass),a.fps);a.mt1=.95*a.mt1+div(30*sqr(5*a.mid),a.fps);a.tt1=.95*a.tt1+div(30*sqr(5*a.treb),a.fps);a.bt2+=.003*a.bt1;a.mt2+=.003*a.mt1;a.tt2+=.003*a.tt1;a.q1=.02*a.bt2;a.q2=.02*a.mt2;a.q3=.02*a.tt2;a.q5=a.aspectx;a.q6=a.aspecty;a.vol=a.bass+a.treb+a.mid;a.q11=-2+.5*Math.sin(a.time)+a.vol;a.q12=-2+.5*Math.sin(a.time)+a.vol;a.q29=1*a.vol;a.q30=1.5*a.vol;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"warp=0;\nwave_a=0;\nzoom=.995;\n\n//// Flexi's beat counter\n\nbt1 = bt1*0.95 + sqr(bass*5)*30/fps;\nmt1 = mt1*0.95 + sqr(mid*5)*30/fps;\ntt1 = tt1*0.95 + sqr(treb*5)*30/fps;\nbt2 = bt2 + bt1*0.003;\nmt2 = mt2 + mt1*0.003;\ntt2 = tt2 + tt1*0.003;\n\nq1 = bt2 *0.02;\nq2 = mt2 *0.02;\nq3 = tt2 *0.02;\n\nq5=aspectx;\nq6=aspecty;\nvol=bass+treb+mid;\nq11=-2+sin(time)*.5+vol;\nq12=-2+sin(time)*.5+vol;\nq29=(vol)*1;\nq30=vol*1.5;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 rsamp_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_pw_main, uv);\n  ret_2 = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.xy - 0.5)\n   * 12.0) * texsize.zw)));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  rsamp_1 = tmpvar_6;\n  float tmpvar_7;\n  vec2 x_8;\n  x_8 = (tmpvar_4.xy - uv);\n  tmpvar_7 = sqrt(dot (x_8, x_8));\n  float tmpvar_9;\n  vec2 x_10;\n  x_10 = (tmpvar_5.xy - uv);\n  tmpvar_9 = sqrt(dot (x_10, x_10));\n  if ((tmpvar_7 > tmpvar_9)) {\n    ret_2.xy = tmpvar_6.xy;\n  };\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.zw - 0.5)\n   * 48.0) * texsize.zw)));\n  rsamp_1 = tmpvar_11.xyz;\n  float tmpvar_12;\n  vec2 x_13;\n  x_13 = (ret_2.xy - uv);\n  tmpvar_12 = sqrt(dot (x_13, x_13));\n  float tmpvar_14;\n  vec2 x_15;\n  x_15 = (tmpvar_11.xy - uv);\n  tmpvar_14 = sqrt(dot (x_15, x_15));\n  if ((tmpvar_12 > tmpvar_14)) {\n    ret_2.xy = rsamp_1.xy;\n  };\n  ret_2.z = texture (sampler_fw_main, ret_2.xy).z;\n  ret_2.z = (ret_2.z + (q29 * 0.005));\n  if ((((ret_2.z + ret_2.y) + ret_2.x) < 0.9)) {\n    ret_2 = (ret_2 * 0.1);\n  };\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_2;\n  ret = tmpvar_16.xyz;\n }","comp":" shader_body { \n  vec3 plastic_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = q11;\n  tmpvar_5.y = q12;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.x;\n  tmpvar_6.y = tmpvar_4.x;\n  vec2 x_7;\n  x_7 = ((uv - (tmpvar_6 * 4.0)) - tmpvar_5);\n  plastic_1.x = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_7, x_7)), 0.5)\n  )));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_3.y;\n  tmpvar_8.y = tmpvar_4.y;\n  vec2 x_9;\n  x_9 = ((uv - (tmpvar_8 * 4.0)) - tmpvar_5);\n  plastic_1.y = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_9, x_9)), 0.5)\n  )));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_3.z;\n  tmpvar_10.y = tmpvar_4.z;\n  vec2 x_11;\n  x_11 = ((uv - (tmpvar_10 * 4.0)) - tmpvar_5);\n  plastic_1.z = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_11, x_11)), 0.5)\n  )));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ((plastic_1 * texture (sampler_main, uv).xyz) * 1.5);\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv;\n\nfloat2 noise_uv = uv*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));\nret.xyz = tex2D( sampler_pw_main,uvm).xyz;\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nrsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nret.z = tex2D(sampler_fw_main,ret.xy).z;\n\nret.z += q29*.005;\nif(ret.z+ret.y+ret.x<.9)ret*=.1;\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*8;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n    float2 light_pos = float2(q11,q12);\n    float3 col = float3(4,4,4);\n    float c = 4;\n    float dd = 16;\n    float3 plastic;\n    plastic.x = col.x/(1+dd*pow(length( uv - float2(dx.x,dy.x)*c - light_pos),0.5));\n    plastic.y = col.y/(1+dd*pow(length( uv - float2(dx.y,dy.y)*c - light_pos),0.5));\n    plastic.z = col.z/(1+dd*pow(length( uv - float2(dx.z,dy.z)*c - light_pos),0.5));\n\n    ret = plastic*GetPixel(uv)*1.5;\n\n\n}"}