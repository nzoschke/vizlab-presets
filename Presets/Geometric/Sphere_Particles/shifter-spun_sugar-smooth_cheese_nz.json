{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.99,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.24146,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50105,"tex_zoom":0.71291,"g":1,"b":1,"a":0.3,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rad = q8*rad;\nang = int(rand(1001))*.001*6.2832;\n\ntex_ang = tex_ang + ang;\ntex_zoom = 1/rad*tex_zoom;\n\nti = time;\nborder_r = .5 + .5*sin(ti*1.123);\nborder_g = .5 + .5*sin(ti*1.456);\nborder_b = .5 + .5*sin(ti*1.789);\nti = time;\nr = .5 + .5*sin(ti*1.123);\ng = .5 + .5*sin(ti*1.456);\nb = .5 + .5*sin(ti*1.789);\nti = time - 1;\nr2 = .75 + .25*sin(ti*1.123);\ng2 = .75 + .25*sin(ti*1.456);\nb2 = .75 + .25*sin(ti*1.789);","init_eqs_eel":"","frame_eqs_eel":"rad = q8*rad;\nang = int(rand(1001))*.001*6.2832;\n\ntex_ang = tex_ang + ang;\ntex_zoom = 1/rad*tex_zoom;\n\nti = time;\nborder_r = .5 + .5*sin(ti*1.123);\nborder_g = .5 + .5*sin(ti*1.456);\nborder_b = .5 + .5*sin(ti*1.789);\nti = time;\nr = .5 + .5*sin(ti*1.123);\ng = .5 + .5*sin(ti*1.456);\nb = .5 + .5*sin(ti*1.789);\nti = time - 1;\nr2 = .75 + .25*sin(ti*1.123);\ng2 = .75 + .25*sin(ti*1.456);\nb2 = .75 + .25*sin(ti*1.789);"},{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.44466,"tex_zoom":0.99991,"g":1,"b":1,"r2":1,"b2":1,"a2":0.8,"border_a":0},"init_eqs_str":"a.q8=0;","frame_eqs_str":"a.rad*=a.q8;a.tex_ang+=a.ang;a.tex_zoom*=div(1,a.rad);a.x=.4996;a.y=.5004;","init_eqs_eel":"","frame_eqs_eel":"rad = q8*rad;\n//ang = int(rand(1001))*.001*6.2832;\n\ntex_ang = tex_ang + ang;\n\ntex_zoom = 1/rad*tex_zoom;\n\nx = .4996;\ny = .5004;"},{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.44466,"tex_zoom":0.99991,"r":0.98,"g":0.98,"b":0.98,"r2":0.95,"g2":0.9,"b2":0.9,"a2":0.3,"border_a":0},"init_eqs_str":"a.q8=0;","frame_eqs_str":"a.rad*=a.q8;a.tex_ang+=a.ang;a.tex_zoom*=div(1,a.rad);a.x=.4996;a.y=.5004;","init_eqs_eel":"","frame_eqs_eel":"rad = q8*rad;\n//ang = int(rand(1001))*.001*6.2832;\n\ntex_ang = tex_ang + ang;\n\ntex_zoom = 1/rad*tex_zoom;\n\nx = .4996;\ny = .5004;"},{"baseVals":{"sides":3,"textured":1,"rad":1.0892,"tex_ang":0.62832,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\nang = int(rand(1001))*.001*6.2832;\n\ntex_ang = tex_ang + ang;\ntex_zoom = 1/rad*tex_zoom;","init_eqs_eel":"","frame_eqs_eel":"\nang = int(rand(1001))*.001*6.2832;\n\ntex_ang = tex_ang + ang;\ntex_zoom = 1/rad*tex_zoom;"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"additive":1,"smoothing":0},"init_eqs_str":"a.rad=0;a.fov=0;a.z=0;a.t5=0;a.disc=0;a.t1=0;a.it=0;a.q1=0;a.t8=0;a.disa=0;a.t3=0;a.oz=0;a.t6=0;a.ti=0;a.vx=0;a.vy=0;a.vz=0;a.t7=0;a.oy=0;a.mod=0;a.disb=0;a.ra=0;a.tm=0;a.t2=0;a.vol=0;a.sp=0;a.q2=0;a.q3=0;a.t4=0;a.ox=0;a.t1=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));a.t2=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));a.t3=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));a.t4=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));\na.t5=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));a.t6=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));a.t7=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));a.t8=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));","frame_eqs_str":"","point_eqs_str":"a.tm=a.q1;a.sp=301.44*a.sample;a.sp=.30144*Math.floor(rand(1001));a.vol=.5*(a.value1+a.value2);a.it*=above(a.sample,0);a.it+=1;a.rad=.51+.1*pow(.001*Math.floor(rand(1001)),5);a.ra=a.rad*Math.sin(3.14*a.sample);a.ox=a.ra*Math.sin(a.sp);a.oy=Math.sin(3.14*a.sample-1.57)*a.rad;a.oz=a.ra*Math.cos(a.sp);a.fov=.6+.2*Math.sin(a.tm);a.fov=.5;a.ti=4*a.q2;a.vx=.1*Math.sin(a.ti*a.t1);a.vy=.1*Math.cos(a.ti*a.t2);a.vz=.1*Math.sin(a.ti*a.t3);a.vx=a.ox-a.vx;a.vy=a.oy-a.vy;a.vz=a.oz-a.vz;a.disa=\npow(a.vx*a.vx+a.vy*a.vy+a.vz*a.vz,.5);a.vx=.13*Math.sin(a.ti*a.t4);a.vy=.13*Math.cos(a.ti*a.t5);a.vz=.13*Math.sin(a.ti*a.t6);a.vx=a.ox-a.vx;a.vy=a.oy-a.vy;a.vz=a.oz-a.vz;a.disb=pow(a.vx*a.vx+a.vy*a.vy+a.vz*a.vz,.5);a.vx=.1*Math.sin(a.ti*a.t7);a.vy=.1*Math.cos(a.ti*a.t8);a.vz=.1*Math.sin(.478*a.ti);a.vx=a.ox-a.vx;a.vy=a.oy-a.vy;a.vz=a.oz-a.vz;a.disc=pow(a.vx*a.vx+a.vy*a.vy+a.vz*a.vz,.5);a.mod=(a.disa-a.rad)*above(a.disa,a.rad)+(a.disb-a.rad)*above(a.disb,a.rad)+(a.disc-a.rad)*above(a.disc,a.rad);a.a*=\nabove(a.mod,a.rad*(.5-.2*a.q3));a.a*=.5+.5*(a.oz+2);a.a*=below(a.z,2);a.oz-=2;a.x=div(a.ox*a.fov,a.oz)+.5;a.x=.75*(a.x-.5)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;a.ti=a.time-1;a.r=.75+.25*Math.sin(1.123*a.ti);a.g=.75+.25*Math.sin(1.456*a.ti);a.b=.75+.25*Math.sin(1.789*a.ti);","init_eqs_eel":"t1 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt2 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt3 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt4 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt5 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt6 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt7 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt8 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;","frame_eqs_eel":"","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6;\nsp = int(rand(1001))*.001*6.28*8*6;\n\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .51 + pow(int(rand(1001))*.001,5)*.1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nti = q2*4;\nvx = .1*sin(ti*t1);\nvy = .1*cos(ti*t2);\nvz = .1*sin(ti*t3);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisa = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .13*sin(ti*t4);\nvy = .13*cos(ti*t5);\nvz = .13*sin(ti*t6);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisb = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .1*sin(ti*t7);\nvy = .1*cos(ti*t8);\nvz = .1*sin(ti*.478);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisc = pow(vx*vx + vy*vy + vz*vz,.5);\n\nmod = (disa - rad)*above(disa,rad) + (disb - rad)*above(disb,rad) + (disc - rad)*above(disc,rad);\n\na = above(mod,rad*(.5 - q3*.2))*a;\n\na = (.5 + (oz+2)*.5)*a;\na = a*below(z,2);\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n\nti = time - 1;\nr = .75 + .25*sin(ti*1.123);\ng = .75 + .25*sin(ti*1.456);\nb = .75 + .25*sin(ti*1.789);\n\n"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"additive":1,"smoothing":0},"init_eqs_str":"a.rad=0;a.fov=0;a.z=0;a.t5=0;a.disc=0;a.t1=0;a.it=0;a.q1=0;a.q5=0;a.t8=0;a.disa=0;a.t3=0;a.oz=0;a.t6=0;a.ti=0;a.vx=0;a.vy=0;a.vz=0;a.t7=0;a.oy=0;a.mod=0;a.disb=0;a.ra=0;a.tm=0;a.t2=0;a.vol=0;a.sp=0;a.q2=0;a.t4=0;a.ox=0;a.t1=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));a.t2=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));a.t3=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));a.t4=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));\na.t5=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));a.t6=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));a.t7=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));a.t8=.2+.0003*Math.floor(rand(1001))+.0003*Math.floor(rand(1001));","frame_eqs_str":"","point_eqs_str":"a.tm=a.q1;a.sp=301.44*a.sample;a.sp=.30144*Math.floor(rand(1001));a.vol=.5*(a.value1+a.value2);a.it*=above(a.sample,0);a.it+=1;a.rad=.51+.1*pow(.001*Math.floor(rand(1001)),5);a.ra=a.rad*Math.sin(3.14*a.sample);a.ox=a.ra*Math.sin(a.sp);a.oy=Math.sin(3.14*a.sample-1.57)*a.rad;a.oz=a.ra*Math.cos(a.sp);a.fov=.6+.2*Math.sin(a.tm);a.fov=.5;a.ti=4*a.q2;a.vx=.1*Math.sin(a.ti*a.t1);a.vy=.1*Math.cos(a.ti*a.t2);a.vz=.1*Math.sin(a.ti*a.t3);a.vx=a.ox-a.vx;a.vy=a.oy-a.vy;a.vz=a.oz-a.vz;a.disa=\npow(a.vx*a.vx+a.vy*a.vy+a.vz*a.vz,.5);a.vx=.13*Math.sin(a.ti*a.t4);a.vy=.13*Math.cos(a.ti*a.t5);a.vz=.13*Math.sin(a.ti*a.t6);a.vx=a.ox-a.vx;a.vy=a.oy-a.vy;a.vz=a.oz-a.vz;a.disb=pow(a.vx*a.vx+a.vy*a.vy+a.vz*a.vz,.5);a.vx=.1*Math.sin(a.ti*a.t7);a.vy=.1*Math.cos(a.ti*a.t8);a.vz=.1*Math.sin(.478*a.ti);a.vx=a.ox-a.vx;a.vy=a.oy-a.vy;a.vz=a.oz-a.vz;a.disc=pow(a.vx*a.vx+a.vy*a.vy+a.vz*a.vz,.5);a.mod=(a.disa-a.rad)*above(a.disa,a.rad)+(a.disb-a.rad)*above(a.disb,a.rad)+(a.disc-a.rad)*above(a.disc,a.rad);a.a*=\nabove(a.mod,a.rad*(.5-.2*a.q5));a.a*=.5+.5*(a.oz+2);a.a*=below(a.z,2);a.oz-=2;a.x=div(a.ox*a.fov,a.oz)+.5;a.x=.75*(a.x-.5)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;a.ti=a.time-1;a.r=.75+.25*Math.sin(1.123*a.ti);a.g=.75+.25*Math.sin(1.456*a.ti);a.b=.75+.25*Math.sin(1.789*a.ti);","init_eqs_eel":"t1 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt2 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt3 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt4 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt5 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt6 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt7 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt8 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;","frame_eqs_eel":"","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6;\nsp = int(rand(1001))*.001*6.28*8*6;\n\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .51 + pow(int(rand(1001))*.001,5)*.1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nti = q2*4;\nvx = .1*sin(ti*t1);\nvy = .1*cos(ti*t2);\nvz = .1*sin(ti*t3);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisa = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .13*sin(ti*t4);\nvy = .13*cos(ti*t5);\nvz = .13*sin(ti*t6);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisb = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .1*sin(ti*t7);\nvy = .1*cos(ti*t8);\nvz = .1*sin(ti*.478);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisc = pow(vx*vx + vy*vy + vz*vz,.5);\n\nmod = (disa - rad)*above(disa,rad) + (disb - rad)*above(disb,rad) + (disc - rad)*above(disc,rad);\n\na = above(mod,rad*(.5 - q5*.2))*a;\n\na = (.5 + (oz+2)*.5)*a;\na = a*below(z,2);\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n\nti = time - 1;\nr = .75 + .25*sin(ti*1.123);\ng = .75 + .25*sin(ti*1.456);\nb = .75 + .25*sin(ti*1.789);\n\n"},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"enabled":0},"init_eqs_str":"t1 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt2 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt3 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt4 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt5 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt6 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt7 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt8 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;","frame_eqs_str":"","point_eqs_str":"tm = q1;\nsp = sample*6.28*8*6;\nsp = int(rand(1001))*.001*6.28*8*6;\n\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .51 + pow(int(rand(1001))*.001,5)*.1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nti = q2*4;\nvx = .1*sin(ti*t1);\nvy = .1*cos(ti*t2);\nvz = .1*sin(ti*t3);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisa = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .13*sin(ti*t4);\nvy = .13*cos(ti*t5);\nvz = .13*sin(ti*t6);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisb = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .1*sin(ti*t7);\nvy = .1*cos(ti*t8);\nvz = .1*sin(ti*.478);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisc = pow(vx*vx + vy*vy + vz*vz,.5);\n\nmod = (disa - rad)*above(disa,rad) + (disb - rad)*above(disb,rad) + (disc - rad)*above(disc,rad);\n\na = above(mod,rad*.3)*a;\n\na = (.5 + (oz+2)*.5)*a;\na = a*below(z,2);\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n\nti = time - 1;\nr = .75 + .25*sin(ti*1.123);\ng = .75 + .25*sin(ti*1.456);\nb = .75 + .25*sin(ti*1.789);\n\n","init_eqs_eel":"t1 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt2 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt3 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt4 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt5 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt6 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt7 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt8 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;","frame_eqs_eel":"","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6;\nsp = int(rand(1001))*.001*6.28*8*6;\n\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .51 + pow(int(rand(1001))*.001,5)*.1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nti = q2*4;\nvx = .1*sin(ti*t1);\nvy = .1*cos(ti*t2);\nvz = .1*sin(ti*t3);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisa = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .13*sin(ti*t4);\nvy = .13*cos(ti*t5);\nvz = .13*sin(ti*t6);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisb = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .1*sin(ti*t7);\nvy = .1*cos(ti*t8);\nvz = .1*sin(ti*.478);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisc = pow(vx*vx + vy*vy + vz*vz,.5);\n\nmod = (disa - rad)*above(disa,rad) + (disb - rad)*above(disb,rad) + (disc - rad)*above(disc,rad);\n\na = above(mod,rad*.3)*a;\n\na = (.5 + (oz+2)*.5)*a;\na = a*below(z,2);\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n\nti = time - 1;\nr = .75 + .25*sin(ti*1.123);\ng = .75 + .25*sin(ti*1.456);\nb = .75 + .25*sin(ti*1.789);\n\n"},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"enabled":0},"init_eqs_str":"t1 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt2 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt3 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt4 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt5 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt6 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt7 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt8 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;","frame_eqs_str":"","point_eqs_str":"tm = q1;\nsp = sample*6.28*8*6;\nsp = int(rand(1001))*.001*6.28*8*6;\n\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .51 + pow(int(rand(1001))*.001,5)*.1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nti = q2*4;\nvx = .1*sin(ti*t1);\nvy = .1*cos(ti*t2);\nvz = .1*sin(ti*t3);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisa = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .13*sin(ti*t4);\nvy = .13*cos(ti*t5);\nvz = .13*sin(ti*t6);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisb = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .1*sin(ti*t7);\nvy = .1*cos(ti*t8);\nvz = .1*sin(ti*.478);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisc = pow(vx*vx + vy*vy + vz*vz,.5);\n\nmod = (disa - rad)*above(disa,rad) + (disb - rad)*above(disb,rad) + (disc - rad)*above(disc,rad);\n\na = above(mod,rad*.3)*a;\n\na = (.5 + (oz+2)*.5)*a;\na = a*below(z,2);\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n\nti = time - 1;\nr = .75 + .25*sin(ti*1.123);\ng = .75 + .25*sin(ti*1.456);\nb = .75 + .25*sin(ti*1.789);\n\n","init_eqs_eel":"t1 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt2 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt3 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt4 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt5 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt6 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt7 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt8 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;","frame_eqs_eel":"","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6;\nsp = int(rand(1001))*.001*6.28*8*6;\n\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .51 + pow(int(rand(1001))*.001,5)*.1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nti = q2*4;\nvx = .1*sin(ti*t1);\nvy = .1*cos(ti*t2);\nvz = .1*sin(ti*t3);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisa = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .13*sin(ti*t4);\nvy = .13*cos(ti*t5);\nvz = .13*sin(ti*t6);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisb = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .1*sin(ti*t7);\nvy = .1*cos(ti*t8);\nvz = .1*sin(ti*.478);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisc = pow(vx*vx + vy*vy + vz*vz,.5);\n\nmod = (disa - rad)*above(disa,rad) + (disb - rad)*above(disb,rad) + (disc - rad)*above(disc,rad);\n\na = above(mod,rad*.3)*a;\n\na = (.5 + (oz+2)*.5)*a;\na = a*below(z,2);\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n\nti = time - 1;\nr = .75 + .25*sin(ti*1.123);\ng = .75 + .25*sin(ti*1.456);\nb = .75 + .25*sin(ti*1.789);\n\n"}],"init_eqs_str":"a.tic=0;a.sw=0;a.vt=0;a.q6=0;a.bt=0;a.q1=0;a.q5=0;a.mid_avg=0;a.tt=0;a.tin=0;a.bass_avg=0;a.vav=0;a.an=0;a.q4=0;a.mt=0;a.ra=0;a.treb_avg=0;a.vol=0;a.q2=0;a.q3=0;a.q7=0;a.q8=0;","frame_eqs_str":"a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.vol=.333333*(a.bass_att+a.treb_att+a.mid_att);a.ra=.1*div(1,a.tic);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;a.vt+=a.tic*a.vav;a.dy=.05*(a.treb_avg-a.mid_avg);\na.dx=.15*(a.bass_avg-.5*(a.treb_avg+a.mid_avg));a.dx=.01*(a.bass_avg+a.treb_avg+a.mid_avg);a.q1=a.vt;a.q2=a.bt;a.q3=a.bass_avg;a.q4=.5*(a.tt+a.mt);a.q5=.5*(a.treb_avg+a.mid_avg);a.q6=a.vt;a.q7=.8-.2*a.vav;a.monitor=a.q7;a.q8=.6;","pixel_eqs_str":"a.an=.00001<Math.abs(a.sw)?a.ang:3.1416-a.ang;a.zoom=1+.03*pow(Math.sin(5*a.an-a.q2),1)*a.bass;a.rot=.02*Math.sin(12.5664*a.ra-4*a.q4)*(a.mid+a.treb)*.5*(1-2*a.sw);a.dx=a.dx*pow(a.rad,3)*(-1+2*a.sw);a.dy*=pow(a.rad,1);","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\ntic = min(time-tin,.1);\ntin = time;\n\nvol = (bass_att + treb_att + mid_att)*.333333;\n\nra = 1/tic*.1;\n\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\nvt = vt + tic*vav;\n\ndy = (treb_avg - mid_avg)*.05;\ndx = (bass_avg - (treb_avg + mid_avg)*.5)*.15;\ndx = (bass_avg + treb_avg + mid_avg)*.01;\n\n\nq1 = vt;\nq2 = bt;\nq3 = bass_avg;\n\nq4 = (tt + mt)*.5;\nq5 = (treb_avg + mid_avg)*.5;\nq6 = vt;\nq7 = .8 - vav*.2;\n\nmonitor = q7;\nq8 = .6;","pixel_eqs_eel":"//sw = above(x,.5);\n\nan = if(sw,ang,3.1416 - ang);\nzoom = 1 + pow(sin(an*5 - q2),1)*.03*bass;\nrot = .02*sin(ra*6.2832*2 - q4*4)*(mid + treb)*.5*(1-2*sw);\n\n\n\n//sy = -1;\n\ndx = dx*pow(rad,3)*(-1+2*sw);\ndy = dy*pow(rad,1);","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_4);\n  tmpvar_5[uint(0)].y = sin(tmpvar_4);\n  tmpvar_5[1u].x = -(sin(tmpvar_4));\n  tmpvar_5[1u].y = cos(tmpvar_4);\n  uv6_2 = (tmpvar_3 * tmpvar_5);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_3)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_6;\n  tmpvar_6 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_7.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_7 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_7, tmpvar_7))\n   * tmpvar_6)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((crisp_1 - \n    (dot (tmpvar_6, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_8.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  float inten_3;\n  float dist_4;\n  float ang2_5;\n  vec2 uv2_6;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_4 = 1.0;\n  inten_3 = 1.0;\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\n  for (float n_2 = 1.0; n_2 <= 4.0; n_2 += 1.0) {\n    ang2_5 = ((6.28 * n_2) / 4.0);\n    float tmpvar_7;\n    tmpvar_7 = cos(ang2_5);\n    float tmpvar_8;\n    tmpvar_8 = sin(ang2_5);\n    uv2_6.x = ((uv_1.x * tmpvar_7) - (uv_1.y * tmpvar_8));\n    uv2_6.y = ((uv_1.x * tmpvar_8) + (uv_1.y * tmpvar_7));\n    dist_4 = (1.0 - fract((\n      (0.25 * n_2)\n     + time)));\n    inten_3 = ((pow (dist_4, 0.3) * (1.0 - dist_4)) * 2.0);\n    xlat_mutableblur = ((texture (sampler_blur1, (\n      ((2.0 * uv2_6) * dist_4)\n     + 0.54)).xyz * scale1) + bias1);\n    xlat_mutableneu = (texture (sampler_main, ((\n      (2.0 * uv2_6)\n     * dist_4) + 0.5)).xyz + xlat_mutableblur);\n    xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_3));\n    vec4 tmpvar_9;\n    tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv2_6.xyy) * (texsize.xyy * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.4) * time)));\n    if ((((xlat_mutableret1.x + xlat_mutableret1.y) + xlat_mutableret1.z) > 0.5)) {\n      xlat_mutableret1 = (xlat_mutableret1 * (tmpvar_9 * 1.3).xyz);\n    };\n  };\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = xlat_mutableret1;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"float3 color, mus;\nfloat dx,dy;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\n\nfloat2 uv1 = (uv-.5);\nfloat2 uv6 = uv1;\n\nfloat rota = lum(tex2D (sampler_noise_hq,uv/4))*q31;\n\nuv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));\nuv6 += sin(q32*uv1);\nmus = .2/(sqrt(uv6.x)+.2);\n\nmus *= float3 (1.1,1,.95);\nmus *= .9+.1*tex2D (sampler_noise_hq,uv);\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (0.005,0);\nfloat2 ver = float2 (0,.005);\n\nfloat dx = lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\n\nfloat2 zz = float2 (dx,dy);\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\nfloat3 crisp2 = tex2D(sampler_main,uv);\ncrisp += crisp2/2;\ncrisp *= .67;\ncrisp +=.08 * mus - length(zz)*blur;\n\nfloat3 ret1 = crisp - lum(blur)*.04;\nret = ret1 * .99 -  .04 ;\n}","comp_hlsl":"float3 ret1, neu, blur;\n\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nfloat dist = 1;\nfloat dista = 0;\nfloat inten = 1;\nfloat mask = 0;\nret1 = 0;\nint anz = 4;\nfloat n = 1;\n//uv = mul(uv,float2x2(_qa));\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    dist = 1-frac(.25*n+time/1); //evtl sqrt !\n    inten =  pow(dist,.3)*(1-dist)*2;\n//    inten =  (1-dist);\n\n    neu =  GetPixel (2*uv2*dist + 0.5 );\n    blur = GetBlur1 (2*uv2*dist + 0.54 );\n    neu += blur;\n    ret1 = ret1*.9+neu*inten;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv2.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nif(ret1.x+ret1.y+ret1.z>.5)ret1 *= (noise2)*1.3; \n    dista = dist;\nn++;\n}\n\nfloat dz = ret1/2;\nfloat2 rs1 = uv*8 + time;\n\nfloat scale = 64;\nrs1 = rs1 + dz*scale*.4;\n\nfloat lava = tex2D (sampler_noise_hq,rs1/scale).x;\nlava = saturate(-abs (lava) + 1);\nfloat3 lay1 = saturate(float3 (lava,lava*(lava-0.55)*2,(lava-1)*16));\n\nret = ret1*1 + 0*float3(0,0,.3)*rad + lay1*0;\n\n}"}