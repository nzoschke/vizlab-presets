{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":1.0003,"warp":0.01,"sy":1.1046,"ob_size":0,"ob_r":1,"ob_g":0.05,"ob_b":0.1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0,"b1x":0.5},"shapes":[{"baseVals":{"sides":54,"textured":1,"rad":0.5427,"tex_ang":2.51327,"tex_zoom":1.3476,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":34,"textured":1,"rad":0.27048,"tex_zoom":3.30038,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":34,"rad":0.24486,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.q1=25*Math.sin(.06*a.time);a.q2=25*Math.sin(.04*a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"q1=25*sin(.06*time);\nq2=25*sin(.04*time);","pixel_eqs_eel":"","warp":"vec2 par;\nfloat xlat_mutabled;\nvec2 xlat_mutableuv0;\nvec2 xlat_mutableuv1;\n shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = q1;\n  tmpvar_1.y = q2;\n  par = tmpvar_1;\n  xlat_mutableuv0 = (5.0 * uv);\n  xlat_mutableuv1 = xlat_mutableuv0;\n  xlat_mutabled = sqrt(dot (xlat_mutableuv0, xlat_mutableuv0));\n  for (int n_2 = 0; ((n_2 < 5) && (float(n_2) < (14.0 * xlat_mutabled))); n_2++) {\n    xlat_mutableuv1 = (xlat_mutableuv1 + ((\n      sin((xlat_mutableuv1.yx + par.yx))\n     + xlat_mutableuv0) - par));\n    xlat_mutabled = fract((0.1 * sqrt(\n      dot (xlat_mutableuv1, xlat_mutableuv1)\n    )));\n  };\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (xlat_mutabled * vec3(1.0, 1.0, 4.0));\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"float2 uv0, uv1;\nfloat d;\nstatic const float2 par = float2 (q1,q2);\n\nshader_body\n{\nuv0 = 5*uv;\nuv1 = uv0;\nd= length(uv1);\n\nfor ( int n=0; (n <5) && (n<14*d) ; n++ )\n{\nuv1 += sin(uv1.yx+par.yx) + uv0 - par;\nd=frac(.1*length (uv1));\n}\n\nret= d*float3 (1, 1, 4);\n}","comp_hlsl":"shader_body\n{\nret=GetPixel(uv);\n}"}