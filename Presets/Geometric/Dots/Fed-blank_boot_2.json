{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":1.22,"wave_scale":100,"wave_smoothing":0,"wave_mystery":1,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpscale":3.138,"zoomexp":0.70591,"zoom":14.36585,"warp":0.12262,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"sides":20,"textured":1,"rad":2.29737,"tex_zoom":0.43785,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.dx_residual=0;a.dy_residual=0;a.bass_thresh=0;a.q1=0;","frame_eqs_str":"a.rot+=.1*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.cx+=.41*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.41*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.dx+=.03*(.6*Math.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.dy+=.03*(.6*Math.sin(.284*a.time)+.4*Math.sin(.247*a.time));a.decay-=.01*equal(mod(a.frame,6),0);a.dx+=a.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-\n1.3)+1.3);a.dx_residual=.016*equal(a.bass_thresh,2.13)*Math.sin(7*a.time)+(1-equal(a.bass_thresh,2.13))*a.dx_residual;a.dy_residual=.012*equal(a.bass_thresh,2.13)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2.13))*a.dy_residual;a.wave_x-=7*a.dx_residual;a.wave_y-=7*a.dy_residual;a.q1=pow(10,a.zoom);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"rot = rot + 0.10*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\ncx = cx + 0.410*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.410*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\ndx = dx + 0.03*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\ndy = dy + 0.03*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\ndecay = decay - 0.01*equal(frame%6,0);\ndx = dx + dx_residual;\ndy = dy + dy_residual;\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\nwave_x = wave_x - dx_residual*7;\nwave_y = wave_y - dy_residual*7;\n//shader stuff\nq1=pow(10,zoom);","pixel_eqs_eel":"","warp":" shader_body { \n  int exist_count_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, ((uv_orig + (uv * 0.1)) * 0.9));\n  ret_2.xy = tmpvar_3.xy;\n  exist_count_1 = int((dot (texture (sampler_main, \n    (uv + vec2(0.005, 0.005))\n  ).xyz, vec3(0.32, 0.49, 0.29)) >= 0.7));\n  exist_count_1 = (exist_count_1 + int((\n    dot (texture (sampler_main, (uv + vec2(0.005, 0.0))).xyz, vec3(0.32, 0.49, 0.29))\n   >= 0.7)));\n  exist_count_1 = (exist_count_1 + int((\n    dot (texture (sampler_main, (uv + vec2(0.005, -0.005))).xyz, vec3(0.32, 0.49, 0.29))\n   >= 0.7)));\n  exist_count_1 = (exist_count_1 + int((\n    dot (texture (sampler_main, (uv + vec2(0.0, 0.005))).xyz, vec3(0.32, 0.49, 0.29))\n   >= 0.7)));\n  exist_count_1 = (exist_count_1 + int((\n    dot (texture (sampler_main, (uv + vec2(0.0, -0.005))).xyz, vec3(0.32, 0.49, 0.29))\n   >= 0.7)));\n  exist_count_1 = (exist_count_1 + int((\n    dot (texture (sampler_main, (uv + vec2(-0.005, 0.005))).xyz, vec3(0.32, 0.49, 0.29))\n   >= 0.7)));\n  exist_count_1 = (exist_count_1 + int((\n    dot (texture (sampler_main, (uv + vec2(-0.005, 0.0))).xyz, vec3(0.32, 0.49, 0.29))\n   >= 0.7)));\n  exist_count_1 = (exist_count_1 + int((\n    dot (texture (sampler_main, (uv + vec2(-0.005, -0.005))).xyz, vec3(0.32, 0.49, 0.29))\n   >= 0.7)));\n  ret_2.z = (tmpvar_3.z + (tmpvar_3.x * 0.1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (-0.5 * texture (sampler_noise_lq, (uv * rand_frame.xy))).xyz;\n  if ((ret_2.z >= 0.89)) {\n    ret_2.z = 0.0;\n    ret_2.x = (tmpvar_3.x + (tmpvar_4 * 1.5).x);\n  };\n  ret_2 = (ret_2 + float(exist_count_1));\n  ret_2.z = ((ret_2.z * 0.9) - 0.06);\n  ret_2.y = abs((uv - uv_orig)).x;\n  ret_2.x = (ret_2.x + (tmpvar_4 * 0.05).x);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1.x = texture (sampler_main, uv).x;\n  ret_1.yz = vec2(0.0, 0.0);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n//we do everything for the next pixel.\nfloat2 r_uv_orig=uv_orig;\nfloat2 r_uv=uv;\n//uv_orig=float2(uv_orig.x+0.005,uv_orig.y);\n//uv=float2(uv.x+0.005,uv.y);\nret=GetPixel((uv_orig+uv*0.1)*0.9);\n//1st stage\nfloat n_size = 0.005;\nint exist_count=0;\nexist_count += (lum(GetPixel(uv+n_size*float2( 1, 1)))>=0.7);\nexist_count += (lum(GetPixel(uv+n_size*float2( 1, 0)))>=0.7);\nexist_count += (lum(GetPixel(uv+n_size*float2( 1,-1)))>=0.7);\nexist_count += (lum(GetPixel(uv+n_size*float2( 0, 1)))>=0.7);\nexist_count += (lum(GetPixel(uv+n_size*float2( 0,-1)))>=0.7);\nexist_count += (lum(GetPixel(uv+n_size*float2(-1, 1)))>=0.7);\nexist_count += (lum(GetPixel(uv+n_size*float2(-1, 0)))>=0.7);\nexist_count += (lum(GetPixel(uv+n_size*float2(-1,-1)))>=0.7);\nret.z+=ret.x*0.1;\nfloat3 noise=-0.5*tex2D(sampler_noise_lq,uv*rand_frame.xy);\nif(ret.z>=0.89)\n{ret.z=0;\nret.x+=noise*1.5;\n};\nret+=exist_count;\nret.z=ret.z*0.9-0.06;\n//2nd stage\nret.y=abs(uv-uv_orig);\nret.x+=noise*0.05;\n}","comp_hlsl":"shader_body\n{\nret=GetPixel(uv);\nret.yz=0;\n}"}