{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":3.138,"zoomexp":1.6092,"zoom":0.907,"rot":0.14,"cx":0.53,"warp":0.238,"sx":1.0099,"sy":1.2571,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_a":0.01,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.01,"mv_x":24.16,"mv_y":48,"mv_l":0.05,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.smp=0;a.q1=0;a.xq=0;a.axs1=0;a.ys=0;a.axs2=0;a.zq=0;a.dark=0;a.tm=0;a.perspective=0;a.masterspeed=0;a.zp=0;a.pinch=0;a.angy=0;a.q8=0;","frame_eqs_str":"a.q8=1.5;","point_eqs_str":"a.masterspeed=30;a.tm=a.time*a.masterspeed*.1;a.perspective=.7;a.smp=6.283*a.sample;a.pinch=.3*Math.sin(6*a.smp+1.5)+.7;a.xp=.65*Math.sin(a.smp);a.xp*=a.pinch;a.yp=.65*Math.cos(a.smp);a.yp*=a.pinch;a.zp=0;a.angy=10*a.q1+0*a.sample;a.xq=a.xp*Math.cos(a.angy)-a.zp*Math.sin(a.angy);a.zq=a.xp*Math.sin(a.angy)+a.zp*Math.cos(a.angy);a.xp=a.xq;a.zp=a.zq;a.axs1=Math.sin(.9*a.time)+1.6;a.yq=a.yp*Math.cos(a.axs1)-a.zp*Math.sin(a.axs1);a.zq=a.yp*Math.sin(a.axs1)+a.zp*Math.cos(a.axs1);\na.yp=a.yq;a.zp=a.zq;a.axs2=3.3*Math.sin(.45*a.time);a.xq=a.xp*Math.cos(a.axs2)-a.zp*Math.sin(a.axs2);a.zq=a.xp*Math.sin(a.axs2)+a.zp*Math.cos(a.axs2);a.xp=a.xq;a.zp=a.zq;a.yp*=1.2;a.zp+=2.1;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=a.ys+.5;a.dark=1-(.5*Math.cos(6*a.smp+1.5)+.5);a.r=1*a.dark;a.g=.32*a.dark;a.b=.26*a.dark;","init_eqs_eel":"","frame_eqs_eel":"q8=1.5","point_eqs_eel":"masterspeed=30;\n\ntm=time*masterspeed*0.1;\nperspective=0.7;\n\n\n//plot x,y shape at z=0\nsmp=sample*6.283;\n\npinch=sin(smp*6 + 1.5)*0.3 + 0.7;\n\nxp=sin(smp )*0.65;\nxp=xp*pinch;\nyp=cos(smp )*0.65;\nyp=yp*pinch;\nzp=0;\n\n\n//rotate on y axis;\nangy=q1*10 + sample*0;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n//rotate on x axis\naxs1 = sin(time*0.9) + 1.6;\nyq= yp*cos(axs1) - zp*sin(axs1);\nzq= yp*sin(axs1) + zp*cos(axs1);\nyp=yq;\nzp=zq;\n\n//rotate on y axis again\naxs2 = sin(time*0.45)*3.3;\nxq=xp*cos(axs2) - zp*sin(axs2);\nzq=xp*sin(axs2) + zp*cos(axs2);\nxp=xq;\nzp=zq;\n\n//stretch y axis to compensate for aspect ratio\nyp=yp*1.2;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5;\ny=ys+0.5;\n\ndark=1 - (cos(smp*6 + 1.5)*0.5 + 0.5);\nr=1.00*dark;\ng=0.32*dark;\nb=0.26*dark;\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_str":"a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.smp=0;a.q1=0;a.xq=0;a.axs1=0;a.ys=0;a.axs2=0;a.zq=0;a.dark=0;a.tm=0;a.perspective=0;a.masterspeed=0;a.zp=0;a.pinch=0;a.angy=0;a.q8=0;","frame_eqs_str":"","point_eqs_str":"a.masterspeed=30;a.tm=a.time*a.masterspeed*.1;a.perspective=.7;a.smp=6.283*a.sample;a.pinch=.3*Math.cos(6*a.smp)+.7;a.xp=.65*Math.sin(a.smp);a.xp*=a.pinch;a.yp=.65*Math.cos(a.smp);a.yp*=a.pinch;a.zp=0;a.angy=33*a.time;a.angy=10*a.q1+0*a.sample;a.angy+=1.5;a.xq=a.xp*Math.cos(a.angy)-a.zp*Math.sin(a.angy);a.zq=a.xp*Math.sin(a.angy)+a.zp*Math.cos(a.angy);a.xp=a.xq;a.zp=a.zq;a.axs1=Math.sin(.9*a.time)+1.6;a.yq=a.yp*Math.cos(a.axs1)-a.zp*Math.sin(a.axs1);a.zq=a.yp*Math.sin(a.axs1)+\na.zp*Math.cos(a.axs1);a.yp=a.yq;a.zp=a.zq;a.axs2=3.3*Math.sin(.45*a.time);a.xq=a.xp*Math.cos(a.axs2)-a.zp*Math.sin(a.axs2);a.zq=a.xp*Math.sin(a.axs2)+a.zp*Math.cos(a.axs2);a.xp=a.xq;a.zp=a.zq;a.yp*=1.2;a.zp+=2.1;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=a.ys+.5;a.dark=1-(.5*Math.cos(6*a.smp+a.q8)+.5);a.r=1*a.dark;a.g=.22*a.dark;a.b=(.16+.1*a.bass)*a.dark;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"masterspeed=30;\n\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\nperspective=0.7;\n\n//plot x,y,z to point on sphere\nsmp=sample*6.283;\n\npinch=cos(smp*6 + 0)*0.3 + 0.7;\n\nxp=sin(smp )*0.65;\nxp=xp*pinch;\nyp=cos(smp )*0.65;\nyp=yp*pinch;\nzp=0;\n\n\n\n//rotate on y axis;\nangy=time*33;\nangy=q1*10 + sample*0;\nangy=angy+1.5;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n//rotate on x axis\naxs1 = sin(time*0.9) + 1.6;\nyq= yp*cos(axs1) - zp*sin(axs1);\nzq= yp*sin(axs1) + zp*cos(axs1);\nyp=yq;\nzp=zq;\n\n//rotate on y axis again\naxs2 = sin(time*0.45)*3.3;\nxq=xp*cos(axs2) - zp*sin(axs2);\nzq=xp*sin(axs2) + zp*cos(axs2);\nxp=xq;\nzp=zq;\n\n//stretch y axis to compensate for aspect ratio\nyp=yp*1.2;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5;\ny=ys+0.5;\n\ndark=1 - (cos(smp*6 + q8)*0.5 + 0.5);\nr=1.00*dark;\ng=0.22*dark;\nb=(0.16+(bass*0.1))*dark;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.smp=0;a.q1=0;a.xq=0;a.axs1=0;a.ys=0;a.axs2=0;a.zq=0;a.dark=0;a.tm=0;a.perspective=0;a.masterspeed=0;a.zp=0;a.pinch=0;a.angy=0;a.q8=0;","frame_eqs_str":"a.q8=1.5;","point_eqs_str":"a.masterspeed=30;a.tm=a.time*a.masterspeed*.1;a.perspective=.7;a.smp=6.283*a.sample;a.pinch=.3*Math.sin(6*a.smp+1.5)+.7;a.xp=.65*Math.sin(a.smp);a.xp*=a.pinch;a.yp=.65*Math.cos(a.smp);a.yp*=a.pinch;a.zp=0;a.angy=10*a.q1+0*a.sample;a.xq=a.xp*Math.cos(a.angy)-a.zp*Math.sin(a.angy);a.zq=a.xp*Math.sin(a.angy)+a.zp*Math.cos(a.angy);a.xp=a.xq;a.zp=a.zq;a.axs1=Math.sin(.9*a.time)+1.6;a.yq=a.yp*Math.cos(a.axs1)-a.zp*Math.sin(a.axs1);a.zq=a.yp*Math.sin(a.axs1)+a.zp*Math.cos(a.axs1);\na.yp=a.yq;a.zp=a.zq;a.axs2=3.3*Math.sin(.45*a.time);a.xq=a.xp*Math.cos(a.axs2)-a.zp*Math.sin(a.axs2);a.zq=a.xp*Math.sin(a.axs2)+a.zp*Math.cos(a.axs2);a.xp=a.xq;a.zp=a.zq;a.yp*=1.2;a.zp+=2.1;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=-1*a.xs+.5;a.y=a.ys+.5;a.dark=1-(.5*Math.cos(6*a.smp+1.5)+.5);a.r=1*a.dark;a.g=.32*a.dark;a.b=.36*a.dark;","init_eqs_eel":"","frame_eqs_eel":"q8=1.5","point_eqs_eel":"masterspeed=30;\n\ntm=time*masterspeed*0.1;\nperspective=0.7;\n\n\n//plot x,y shape at z=0\nsmp=sample*6.283;\n\npinch=sin(smp*6 + 1.5)*0.3 + 0.7;\n\nxp=sin(smp )*0.65;\nxp=xp*pinch;\nyp=cos(smp )*0.65;\nyp=yp*pinch;\nzp=0;\n\n\n//rotate on y axis;\nangy=q1*10 + sample*0;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n//rotate on x axis\naxs1 = sin(time*0.9) + 1.6;\nyq= yp*cos(axs1) - zp*sin(axs1);\nzq= yp*sin(axs1) + zp*cos(axs1);\nyp=yq;\nzp=zq;\n\n//rotate on y axis again\naxs2 = sin(time*0.45)*3.3;\nxq=xp*cos(axs2) - zp*sin(axs2);\nzq=xp*sin(axs2) + zp*cos(axs2);\nxp=xq;\nzp=zq;\n\n//stretch y axis to compensate for aspect ratio\nyp=yp*1.2;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=(-1*xs)+0.5;\ny=ys+0.5;\n\ndark=1 - (cos(smp*6 + 1.5)*0.5 + 0.5);\nr=1.00*dark;\ng=0.32*dark;\nb=0.36*dark;\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.smp=0;a.q1=0;a.xq=0;a.axs1=0;a.ys=0;a.axs2=0;a.zq=0;a.dark=0;a.tm=0;a.perspective=0;a.masterspeed=0;a.zp=0;a.pinch=0;a.angy=0;a.q8=0;","frame_eqs_str":"","point_eqs_str":"a.masterspeed=30;a.tm=a.time*a.masterspeed*.1;a.perspective=.7;a.smp=6.283*a.sample;a.pinch=.3*Math.cos(6*a.smp)+.7;a.xp=.65*Math.sin(a.smp);a.xp*=a.pinch;a.yp=.65*Math.cos(a.smp);a.yp*=a.pinch;a.zp=0;a.angy=33*a.time;a.angy=10*a.q1+0*a.sample;a.angy+=1.5;a.xq=a.xp*Math.cos(a.angy)-a.zp*Math.sin(a.angy);a.zq=a.xp*Math.sin(a.angy)+a.zp*Math.cos(a.angy);a.xp=a.xq;a.zp=a.zq;a.axs1=Math.sin(.9*a.time)+1.6;a.yq=a.yp*Math.cos(a.axs1)-a.zp*Math.sin(a.axs1);a.zq=a.yp*Math.sin(a.axs1)+\na.zp*Math.cos(a.axs1);a.yp=a.yq;a.zp=a.zq;a.axs2=3.3*Math.sin(.45*a.time);a.xq=a.xp*Math.cos(a.axs2)-a.zp*Math.sin(a.axs2);a.zq=a.xp*Math.sin(a.axs2)+a.zp*Math.cos(a.axs2);a.xp=a.xq;a.zp=a.zq;a.yp*=1.2;a.zp+=2.1;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=-a.xs+.5;a.y=a.ys+.5;a.dark=1-(.5*Math.cos(6*a.smp+a.q8)+.5);a.r=.82*a.dark;a.g=.02*a.dark;a.b=.26*a.dark;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"masterspeed=30;\n\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\nperspective=0.7;\n\n//plot x,y,z to point on sphere\nsmp=sample*6.283;\n\npinch=cos(smp*6 + 0)*0.3 + 0.7;\n\nxp=sin(smp )*0.65;\nxp=xp*pinch;\nyp=cos(smp )*0.65;\nyp=yp*pinch;\nzp=0;\n\n\n\n//rotate on y axis;\nangy=time*33;\nangy=q1*10 + sample*0;\nangy=angy+1.5;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n//rotate on x axis\naxs1 = sin(time*0.9) + 1.6;\nyq= yp*cos(axs1) - zp*sin(axs1);\nzq= yp*sin(axs1) + zp*cos(axs1);\nyp=yq;\nzp=zq;\n\n//rotate on y axis again\naxs2 = sin(time*0.45)*3.3;\nxq=xp*cos(axs2) - zp*sin(axs2);\nzq=xp*sin(axs2) + zp*cos(axs2);\nxp=xq;\nzp=zq;\n\n//stretch y axis to compensate for aspect ratio\nyp=yp*1.2;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=-xs+0.5;\ny=ys+0.5;\n\ndark=1 - (cos(smp*6 + q8)*0.5 + 0.5);\nr=0.82*dark;\ng=0.02*dark;\nb=0.26*dark;"}],"init_eqs_str":"","frame_eqs_str":"a.wave_r=a.wave_r+.4*Math.sin(3.14*a.time)+.2*a.mid;a.wave_b+=.2*Math.sin(1.5*a.time);a.wave_g+=.2*a.mid;a.cx+=.1*Math.sin(a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.4*sin(time*3.14) + (0.2*mid);\nwave_b = wave_b + 0.2*sin(time*1.5);\nwave_g = wave_g + 0.2*mid;\ncx = cx + 0.1*sin(time);","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 zz_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)] = _qa.xy;\n  tmpvar_2[1u] = _qa.zw;\n  zz_1 = (((\n    (uv - vec2(0.5, 0.5))\n   * texsize.xy) * 0.01) * tmpvar_2);\n  zz_1 = -(zz_1.yx);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((texture (sampler_main, (uv + \n    (((clamp (\n      (sin(zz_1.yx) / cos(zz_1.yx))\n    , vec2(-8.0, -8.0), vec2(8.0, 8.0)) * cos(\n      (4.0 * zz_1)\n    )) * texsize.zw) * 16.0)\n  )).xyz * 0.99) - 0.01);\n  ret = tmpvar_3.xyz;\n }","comp":"vec3 xlat_mutablemus;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv3;\n shader_body { \n  float inten_1;\n  float dist_2;\n  vec2 uv2_3;\n  xlat_mutablemus = texture (sampler_main, uv).xyz;\n  uv2_3 = (uv - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (time / 2.0);\n  dist_2 = (1.0 - fract(tmpvar_4));\n  inten_1 = ((sqrt(dist_2) * (1.0 - dist_2)) * 2.0);\n  xlat_mutableuv3 = (((2.0 * uv2_3) * dist_2) + 0.5);\n  vec2 tmpvar_5;\n  tmpvar_5 = fract(xlat_mutableuv3);\n  xlat_mutableneu = (texture (sampler_main, tmpvar_5).xyz + ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_1));\n  dist_2 = (1.0 - fract((0.3333333 + tmpvar_4)));\n  inten_1 = ((sqrt(dist_2) * (1.0 - dist_2)) * 2.0);\n  xlat_mutableuv3 = (((2.0 * uv2_3) * dist_2) + 0.5);\n  vec2 tmpvar_6;\n  tmpvar_6 = fract(xlat_mutableuv3);\n  xlat_mutableneu = (texture (sampler_main, tmpvar_6).xyz + ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_1));\n  dist_2 = (1.0 - fract((0.6666667 + tmpvar_4)));\n  inten_1 = ((sqrt(dist_2) * (1.0 - dist_2)) * 2.0);\n  xlat_mutableuv3 = (((2.0 * uv2_3) * dist_2) + 0.5);\n  vec2 tmpvar_7;\n  tmpvar_7 = fract(xlat_mutableuv3);\n  xlat_mutableneu = (texture (sampler_main, tmpvar_7).xyz + ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1));\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_1));\n  dist_2 = (1.0 - fract((1.0 + tmpvar_4)));\n  inten_1 = ((sqrt(dist_2) * (1.0 - dist_2)) * 2.0);\n  xlat_mutableuv3 = (((2.0 * uv2_3) * dist_2) + 0.5);\n  vec2 tmpvar_8;\n  tmpvar_8 = fract(xlat_mutableuv3);\n  xlat_mutableuv3 = tmpvar_8;\n  xlat_mutableneu = (texture (sampler_main, tmpvar_8).xyz + ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1));\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_1));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ((xlat_mutableret1.zyx * (0.5 + xlat_mutablemus)) + ((3.0 * xlat_mutablemus) * (0.1 + xlat_mutableret1)));\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;\n\n\nfloat2 zz = uv1 *texsize.xy *.01;\nzz =mul(zz,float2x2(_qa));\nzz = -zz.yx;\nfloat2 h1 = clamp(tan(zz.yx),-8,8) * cos(4*zz);\n\nuv += h1*texsize.zw * 16;\nfloat3 crisp = tex2D(sampler_main,uv);\n\nret = crisp*.99-.01;\n}","comp_hlsl":"float z;\nfloat3 ret1, neu, mus;\nfloat2 rs,rs2,uv1,uv2, uv3,uv4,uv6,dz,dz1;\nshader_body\n{\nfloat2 uv2;\n//uv = (uv-0.5) * aspect.xy;    \ndz = 0;\n\nfloat2 hor = float2(texsize.z,0);\nfloat2 ver = float2(0,texsize.w);\n\nfloat dist = 1;\nfloat inten = 1;\nret1 = 0;\nint anz = 3;\nint n = 0;\nuv4 = (uv+.01);\n    dz.x = lum(GetPixel(uv4+hor)- GetPixel (uv4-hor));\n    dz.y = lum(GetPixel(uv4+ver)- GetPixel (uv4-ver));\n\nmus = GetPixel(uv+.0*dz)+.0;\n\nuv2 = uv-.5;\ndz = 0;\nwhile (n <= anz) {\n    dist = 1-frac(1.0/anz*n+time/2); //evtl sqrt !;\n\n    inten =  sqrt(dist)*(1-dist)*2;\n    uv3 = 2*uv2*dist +.5;\n//    uv3 *= aspect.yx;\n    uv3 = frac (uv3);\n    neu = GetPixel(uv3)+GetBlur1(uv3);\n    ret1 = max(ret1,neu*inten);\nn++;\n}\n\n\nret = ret1.bgr*(.5+mus)  +  3*mus*(.1+ret1);\n//ret = GetPixel(uv_orig)*2;\n}"}