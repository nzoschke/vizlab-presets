{"version":2,"baseVals":{"rating":5,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"wave_scale":1.817,"wave_mystery":-0.6,"warpscale":0.01,"zoomexp":0.95146,"zoom":1.06151,"rot":0.02,"warp":0.01817,"sx":0.9901,"sy":0.9901,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.warp=0;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n//dy = 0.001;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.15, 0.15)));\n  ret_1.yz = tmpvar_2.yz;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv);\n  ret_1.x = (tmpvar_2.x + fract(texture (sampler_main, (uv + \n    ((vec2(1.0, 2.0) * texsize.zw) * tmpvar_3.x)\n  )).x));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur3, uv);\n  ret_1.x = (ret_1.x - ((tmpvar_4.xyz * scale3) + bias3).x);\n  ret_1.y = (tmpvar_2.y + fract(texture (sampler_main, (uv + \n    ((vec2(2.0, -2.0) * texsize.zw) * tmpvar_3.y)\n  )).y));\n  ret_1.y = (ret_1.y - ((tmpvar_4.xyz * scale3) + bias3).y);\n  ret_1.z = (tmpvar_2.z + fract(texture (sampler_main, (uv + \n    ((vec2(-2.0, -1.0) * texsize.zw) * tmpvar_3.z)\n  )).z));\n  ret_1.z = (ret_1.z - ((tmpvar_4.xyz * scale3) + bias3).z);\n  ret_1 = ((ret_1 * 0.95) - 0.002);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (0.9 * tmpvar_2.xyz);\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_blur1, uv);\n  ret_1 = (ret_1 + ((0.5 * \n    ((tmpvar_3.xyz * scale1) + bias1)\n  ) + (0.1 * \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  )));\n  vec3 tmpvar_4;\n  tmpvar_4 = mix (ret_1, (0.8 - clamp (\n    (tmpvar_2.xyz + (0.5 * ((tmpvar_3.xyz * scale1) + bias1)))\n  , 0.0, 1.0)), vec3(fract((\n    ((rad * 5.0) - (1.25 * time))\n   + \n    (0.477 * ang)\n  ))));\n  ret_1 = (tmpvar_4 * tmpvar_4);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body\n{\n\n   // sample previous frame\nret = tex2D( sampler_fc_main, lerp(uv,uv_orig,.15)).xyz;\n\nret.x += frac(GetPixel(uv+float2(1,2)*texsize.zw*GetPixel(uv).x).x);\nret.x -= GetBlur3(uv).x;\n\nret.y += frac(GetPixel(uv+float2(2,-2)*texsize.zw*GetPixel(uv).y).y);\nret.y -= GetBlur3(uv).y;\n\nret.z += frac(GetPixel(uv+float2(-2,-1)*texsize.zw*GetPixel(uv).z).z);\nret.z -= GetBlur3(uv).z;\n\n\n    // darken (decay) over time\n    ret = (ret*0.95)-.002; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    ret = .9*tex2D(sampler_main, uv).xyz;\n    ret += .5*GetBlur1(uv)+.1*GetBlur3(uv);\n    ret = lerp(ret,.8-saturate(GetPixel(uv)+.5*GetBlur1(uv)),frac(rad*5-1.25*time+.159*3*ang));\n    ret *= ret;\n}"}