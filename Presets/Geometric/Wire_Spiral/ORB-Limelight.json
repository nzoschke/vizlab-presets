{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"wrap":0,"darken":1,"wave_a":0.001,"zoom":0.96,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"additive":1,"textured":1,"rad":0.22612,"tex_ang":3.14159,"tex_zoom":1.25486,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = q1*0.1;\n\nr = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1);\ng = 0.5 +  0.5*sin(q1*sample*2*0.1)*sin(q1*sample*0.1);\nb = 0.5 + 0.5*cos(1);\nr2 =r;\ng2 =g;\nb2 =b;","init_eqs_eel":"","frame_eqs_eel":"ang = q1*0.1;\n\nr = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1);\ng = 0.5 +  0.5*sin(q1*sample*2*0.1)*sin(q1*sample*0.1);\nb = 0.5 + 0.5*cos(1);\nr2 =r;\ng2 =g;\nb2 =b;"},{"baseVals":{"sides":100,"additive":1,"textured":1,"rad":0.22612,"tex_ang":6.28319,"tex_zoom":0.93101,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = q1*0.1 + 1.57;\n\nr = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1);\ng = 0.5 +  0.5*sin(q1*sample*2*0.1)*sin(q1*sample*0.1);\nb = 0.5 + 0.5*cos(1);\nr2 =r;\ng2 =g;\nb2 =b;","init_eqs_eel":"","frame_eqs_eel":"ang = q1*0.1 + 1.57;\n\nr = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1);\ng = 0.5 +  0.5*sin(q1*sample*2*0.1)*sin(q1*sample*0.1);\nb = 0.5 + 0.5*cos(1);\nr2 =r;\ng2 =g;\nb2 =b;"},{"baseVals":{"sides":100,"additive":1,"textured":1,"rad":0.20067,"tex_ang":6.28319,"tex_zoom":74.19192,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":222,"usedots":1,"thick":1},"init_eqs_str":"a.zs=0;a.pi=0;a.samp=0;a.xx=0;a.q1=0;a.yy=0;a.zz=0;","frame_eqs_str":"","point_eqs_str":"a.zs=.00001<Math.abs(below(a.zs,100))?100:a.zs;a.zs=.00001<Math.abs(above(a.zs,10100))?100:a.zs;a.zs=.00001<Math.abs(above(a.zs,1100))?1:a.zs;a.pi=3.141592;a.samp=a.sample;a.xx=Math.cos(a.q1*a.samp+a.q1);a.yy=Math.sin(a.q1*a.samp+a.q1);a.zz=.25*a.samp;a.x=a.xx*a.zz*4;a.y=a.yy*a.zz*4;a.x+=.5;a.y+=.5;a.r=.5+.5*Math.cos(a.q1*a.sample*.2)*Math.sin(a.q1*a.sample*.1);a.g=.5+.5*Math.sin(a.q1*a.sample*.2)*Math.sin(a.q1*a.sample*.1);a.b=.5+.5*Math.cos(a.q1*a.sample*.2)*Math.sin(a.q1*\na.sample*.2);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,100),100,zs);\nzs = if(above(zs, 10100),100, zs);\n\nzs = if(above(zs, 1100),1, zs);\n\npi = 3.141592;\n\nsamp = sample;\n\nxx = cos(q1*samp+ q1)*1;\nyy = sin(q1*samp+ q1)*1;\n\nzz = 2.5*samp*0.1;\n\nx = xx*zz*4;\ny = yy*zz*4;\n\nx = x + 0.5;\ny = y + 0.5;\n\nr = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1);\ng = 0.5 +  0.5*sin(q1*sample*2*0.1)*sin(q1*sample*0.1);\nb = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1*2);\n"},{"baseVals":{"enabled":1,"samples":222,"usedots":1,"thick":1},"init_eqs_str":"a.zs=0;a.pi=0;a.samp=0;a.xx=0;a.q1=0;a.yy=0;a.zz=0;","frame_eqs_str":"","point_eqs_str":"a.zs=.00001<Math.abs(below(a.zs,100))?100:a.zs;a.zs=.00001<Math.abs(above(a.zs,10100))?100:a.zs;a.zs=.00001<Math.abs(above(a.zs,1100))?1:a.zs;a.pi=3.141592;a.samp=a.sample;a.xx=Math.cos(a.q1*a.samp+a.q1+1.57);a.yy=Math.sin(a.q1*a.samp+a.q1+1.57);a.zz=.25*a.samp;a.x=a.xx*a.zz*4;a.y=a.yy*a.zz*4;a.x+=.5;a.y+=.5;a.r=.5+.5*Math.cos(a.q1*a.sample*.2)*Math.sin(a.q1*a.sample*.1);a.g=.5+.5*Math.sin(a.q1*a.sample*.2)*Math.sin(a.q1*a.sample*.1);a.b=.5+.5*Math.cos(a.q1*a.sample*.2)*Math.sin(a.q1*\na.sample*.2);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,100),100,zs);\nzs = if(above(zs, 10100),100, zs);\n\nzs = if(above(zs, 1100),1, zs);\n\npi = 3.141592;\n\nsamp = sample;\n\nxx = cos(q1*samp+ q1 + 1.57)*1;\nyy = sin(q1*samp+ q1 + 1.57)*1;\n\nzz = 2.5*samp*0.1;\n\nx = xx*zz*4;\ny = yy*zz*4;\n\nx = x + 0.5;\ny = y + 0.5;\n\nr = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1);\ng = 0.5 +  0.5*sin(q1*sample*2*0.1)*sin(q1*sample*0.1);\nb = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1*2);"},{"baseVals":{"enabled":1,"samples":222,"usedots":1,"thick":1},"init_eqs_str":"a.zs=0;a.pi=0;a.samp=0;a.xx=0;a.q1=0;a.yy=0;a.zz=0;","frame_eqs_str":"","point_eqs_str":"a.zs=.00001<Math.abs(below(a.zs,100))?100:a.zs;a.zs=.00001<Math.abs(above(a.zs,10100))?100:a.zs;a.zs=.00001<Math.abs(above(a.zs,1100))?1:a.zs;a.pi=3.141592;a.samp=a.sample;a.xx=Math.cos(a.q1*a.samp+a.q1+3.14);a.yy=Math.sin(a.q1*a.samp+a.q1+3.14);a.zz=.25*a.samp;a.x=a.xx*a.zz*4;a.y=a.yy*a.zz*4;a.x+=.5;a.y+=.5;a.r=.5+.5*Math.cos(a.q1*a.sample*.2)*Math.sin(a.q1*a.sample*.1);a.g=.5+.5*Math.sin(a.q1*a.sample*.2)*Math.sin(a.q1*a.sample*.1);a.b=.5+.5*Math.cos(a.q1*a.sample*.2)*Math.sin(a.q1*\na.sample*.2);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,100),100,zs);\nzs = if(above(zs, 10100),100, zs);\n\nzs = if(above(zs, 1100),1, zs);\n\npi = 3.141592;\n\nsamp = sample;\n\nxx = cos(q1*samp+ q1 + 3.14)*1;\nyy = sin(q1*samp+ q1 + 3.14)*1;\n\nzz = 2.5*samp*0.1;\n\nx = xx*zz*4;\ny = yy*zz*4;\n\nx = x + 0.5;\ny = y + 0.5;\n\nr = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1);\ng = 0.5 +  0.5*sin(q1*sample*2*0.1)*sin(q1*sample*0.1);\nb = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1*2);\n"},{"baseVals":{"enabled":1,"samples":222,"usedots":1,"thick":1},"init_eqs_str":"a.zs=0;a.pi=0;a.samp=0;a.xx=0;a.q1=0;a.yy=0;a.zz=0;","frame_eqs_str":"","point_eqs_str":"a.zs=.00001<Math.abs(below(a.zs,100))?100:a.zs;a.zs=.00001<Math.abs(above(a.zs,10100))?100:a.zs;a.zs=.00001<Math.abs(above(a.zs,1100))?1:a.zs;a.pi=3.141592;a.samp=a.sample;a.xx=Math.cos(a.q1*a.samp+a.q1-1.57);a.yy=Math.sin(a.q1*a.samp+a.q1-1.57);a.zz=.25*a.samp;a.x=a.xx*a.zz*4;a.y=a.yy*a.zz*4;a.x+=.5;a.y+=.5;a.r=.5+.5*Math.cos(a.q1*a.sample*.2)*Math.sin(a.q1*a.sample*.1);a.g=.5+.5*Math.sin(a.q1*a.sample*.2)*Math.sin(a.q1*a.sample*.1);a.b=.5+.5*Math.cos(a.q1*a.sample*.2)*Math.sin(a.q1*\na.sample*.2);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,100),100,zs);\nzs = if(above(zs, 10100),100, zs);\n\nzs = if(above(zs, 1100),1, zs);\n\npi = 3.141592;\n\nsamp = sample;\n\nxx = cos(q1*samp+ q1 - 1.57)*1;\nyy = sin(q1*samp+ q1 - 1.57)*1;\n\nzz = 2.5*samp*0.1;\n\nx = xx*zz*4;\ny = yy*zz*4;\n\nx = x + 0.5;\ny = y + 0.5;\n\nr = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1);\ng = 0.5 +  0.5*sin(q1*sample*2*0.1)*sin(q1*sample*0.1);\nb = 0.5 + 0.5*cos(q1*sample*2*0.1)*sin(q1*sample*0.1*2);\n"}],"init_eqs_str":"a.basstime=0;a.stickybit=0;a.volavg2=0;a.q13=0;a.q1=0;a.sample1=0;a.difftime=0;a.diff=0;a.edge=0;a.q11=0;a.q10=0;a.basstime2=0;a.volavg=0;a.bit2=0;a.vol=0;a.q2=0;a.q3=0;a.basssum=0;a.sample2=0;","frame_eqs_str":"a.basstime+=.03*a.bass;a.basstime2=a.basstime+.03*a.bass;a.q1=a.basstime2;a.basstime=.00001<Math.abs(below(a.basstime,1E3))?1E3:a.basstime;a.basstime+=.03*a.bass_att;a.vol=pow(a.bass+a.mid+a.treb,2);a.basssum=a.vol;a.stickybit=mod(a.time,2);a.volavg+=a.vol*equal(a.stickybit,1);a.sample1+=equal(a.stickybit,1);a.volavg2+=a.vol*equal(a.stickybit,0);a.sample2+=equal(a.stickybit,0);a.edge=bnot(equal(a.bit2,a.stickybit));a.volavg-=a.volavg*a.edge*a.stickybit;a.volavg2-=a.volavg2*\na.edge*equal(a.stickybit,0);a.sample1-=a.sample1*a.edge*a.stickybit;a.sample2-=a.sample2*a.edge*equal(a.stickybit,0);a.diff=.00001<Math.abs(equal(a.stickybit,1))?div(a.basssum,div(a.volavg2,a.sample2)):0;a.diff=.00001<Math.abs(equal(a.stickybit,0))?div(a.basssum,div(a.volavg,a.sample1)):a.diff;a.q3=a.diff;a.bit2=mod(a.time,2);a.difftime+=.03*a.diff;a.q2=a.difftime;a.difftime=.00001<Math.abs(above(a.difftime,2E3))?0:a.difftime;a.q10=Math.cos(4e-7*a.q1);a.q11=Math.sin(.000004*a.q1);a.q13=1;","pixel_eqs_str":"a.zoom=1;","init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass*0.03;\nbasstime2 = basstime + bass*0.03;\nq1 = basstime2;\n\n//start in most active range\nbasstime = if(below(basstime,1000),1000,basstime);\n//basstime = if(above(basstime,495),450,basstime);\nbasstime = basstime + bass_att*0.03;\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\nstickybit = time%2;\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n//transision\nedge = bnot(equal(bit2,stickybit));\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\nq3 = diff;\nbit2 = time%2;\ndifftime = difftime + diff*0.03;\nq2 = difftime;\n//fix a strange error\ndifftime = if(above(difftime,2000),0, difftime);\n\n\nq10= cos(q1*0.0000004);\nq11 = sin(q1*0.000004);\nq13 = 1;\n\n//rot = 0.02;","pixel_eqs_eel":"zoom = 1;","warp":" shader_body { \n  mat2 tmpvar_1;\n  float tmpvar_2;\n  tmpvar_2 = (rad - 0.5);\n  float tmpvar_3;\n  tmpvar_3 = (rad * 10.0);\n  tmpvar_1[uint(0)].x = (q10 - (pow (tmpvar_2, tmpvar_3) * 0.02));\n  tmpvar_1[uint(0)].y = (-(q11) + (pow (tmpvar_2, tmpvar_3) * 0.02));\n  tmpvar_1[1u].x = (q11 + (pow (tmpvar_2, tmpvar_3) * 0.02));\n  tmpvar_1[1u].y = (q10 + (pow (tmpvar_2, tmpvar_3) * 0.02));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (texture (sampler_fc_main, ((\n    ((uv - 0.5) * tmpvar_1)\n   * 0.99) + 0.5)).xyz - 0.002);\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_blur1, uv);\n  ret_1 = (((\n    (texture (sampler_main, (((uv - 0.5) * 0.98) + 0.5)).xyz + (((tmpvar_2.xyz * scale1) + bias1) * 0.2))\n   + \n    (((tmpvar_2.xyz * scale1) + bias1) * 0.2)\n  ) + (\n    ((tmpvar_2.xyz * scale1) + bias1)\n   * 0.4)) + ((\n    (tmpvar_2.xyz * scale1)\n   + bias1) * 0.4));\n  ret_1 = (((ret_1 * \n    (1.0 - ret_1)\n  ) * ret_1) * 3.0);\n  ret_1 = (ret_1 * 2.0);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{  \n    float2x2 rot = { q10 - pow((rad-0.5),rad*10)*0.02 , q11 + pow((rad-0.5),rad*10)*0.02,\n                -q11  +pow((rad-0.5),rad*10)*0.02 , q10 + pow((rad-0.5),rad*10)*0.02};\n\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, mul((uv-0.5),rot)*0.99 + 0.5 ).xyz;\n    \n    // darken (decay) over time\n    ret -= 0.002; //or try: ret -= 0.004;\n}","comp_hlsl":"\nshader_body\n{\n    float small_rad =0.01;\n    float3 color = GetBlur1(uv);\n       float2x2 rot = { q10 + small_rad + color.x, q11,\n                -q11  + color.y, q10};\n    rot*=q13;\n    float2 uv_echo = (uv - 0.5)*float2(-1,1) + 0.5;\n    ret = lerp( tex2D(sampler_main, (uv-0.5)*0.98 + 0.5).xyz, \n                tex2D(sampler_main, (uv_echo-0.5)*0.98 + 0.5).xyz, \n                0 \n              ) \n + GetBlur1(uv)*0.2 + GetBlur1(uv)*0.2\n + GetBlur1(uv)*0.4 + GetBlur1(uv)*0.4;\n    //ret = ret*0.9; //gamma\n// ret = mul(ret.xy,rot).xyx;    \n    \n    ret =  ret*(1 - ret)*ret*3; //brighten\n  ret *= 2;\n}"}