{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.94,"echo_zoom":1.615,"echo_alpha":0.5,"echo_orient":2,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":34.956,"warpscale":4.142,"dx":0.00001,"dy":0.00001,"warp":0.01,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"rad":0.34,"ang":1.5708,"r":0,"g2":0,"b2":0.5,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = 1.55;\nrad = rad+.3*bass;\nr = if(above(bass,1.5),1,0);\ng = if(above(bass,1.5),1,0);\nb = if(above(bass,1.5),1,0);","init_eqs_eel":"","frame_eqs_eel":"ang = 1.55;\nrad = rad+.3*bass;\nr = if(above(bass,1.5),1,0);\ng = if(above(bass,1.5),1,0);\nb = if(above(bass,1.5),1,0);"},{"baseVals":{"sides":8,"rad":1.00394,"r":0,"a":0,"g2":0.4,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang - time*.333;\nborder_r = .5+.4*sin(time*1.4)+bass*.1;\nborder_g = .5+.4*sin(time*1.2)+treb*.1;\nborder_b = .5+.4*sin(time*1)+mid*.1;","init_eqs_eel":"","frame_eqs_eel":"ang = ang - time*.333;\nborder_r = .5+.4*sin(time*1.4)+bass*.1;\nborder_g = .5+.4*sin(time*1.2)+treb*.1;\nborder_b = .5+.4*sin(time*1)+mid*.1;"},{"baseVals":{"sides":3,"rad":0.21,"r":0.84,"r2":1,"g2":0.58,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + time*4;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + time*4;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"scaling":2.98779},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.5*a.sample*Math.sin(100*a.sample+10*a.time);a.y=.5+.5*a.sample*Math.cos(100*a.sample+10*a.time);a.r=.5+25*a.sample;a.b=.5+5*a.sample;a.g=.5+15*a.sample;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5+.25*(sample*2)*sin(sample*100+time*10);\ny = .5+.25*(sample*2)*cos(sample*100+time*10);\nr = .5+.5*(sample*50);\nb = .5+.5*(sample*10);\ng = .5+.5*(sample*30);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.tg3=0;a.rg2=0;a.pfdx_r=0;a.q25=0;a.pfthresh=0;a.q12=0;a.ocog=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.thresh=0;a.q1=0;a.mq31=0;a.mq21=0;a.mq24=0;a.cog=0;a.dy_r=0;a.chng=0;a.tg2=0;a.mq28=0;a.tg1=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.rg3=0;a.q11=0;a.pfdy_r=0;a.atime=0;a.rg1=0;a.q4=0;a.dx_r=0;a.q26=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.q2=0;a.q27=0;a.q3=0;a.q28=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.wave_r=.5+\n.5*Math.sin(1.6*a.time);a.wave_g=.5+.5*Math.sin(4.1*a.time);a.wave_b=-1+(1-a.wave_r+1-a.wave_g);a.warp=0;a.pfthresh=2*above(a.bass_att,a.pfthresh)+(1-above(a.bass_att,a.pfthresh))*(.96*(a.pfthresh-1.3)+1.3);a.pfdx_r=.015*equal(a.pfthresh,2)*Math.sin(5*a.time)+(1-equal(a.pfthresh,2))*a.pfdx_r;a.pfdy_r=.015*equal(a.pfthresh,2)*Math.sin(6*a.time)+(1-equal(a.pfthresh,2))*a.pfdy_r;a.rg1=Math.abs(Math.sin(a.time));a.rg2=0*above(a.rg1,.25)+1*below(a.rg1,.25);a.rg3=.00001<Math.abs(equal(a.pfthresh,2))?a.rg2:\na.rg3;a.q1=a.wave_r;a.q2=a.wave_g;a.q3=a.wave_b;a.invert=0;a.echo_alpha=Math.min(1,Math.max(.5,12*a.pfdy_r));a.echo_zoom=Math.min(2,Math.max(1,1+Math.abs(24*a.pfdx_r)));a.monitor=a.invert;a.cog=a.ocog+.005*(a.bass+a.bass_att+a.bass*a.bass_att-2);a.ocog=below(a.cog,3E4)*a.cog;a.q4=a.cog;a.warp=2*Math.sin(a.q4);a.q11=.15*(a.bass+a.treb+a.mid);a.q12=a.q11;","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.tg1=Math.abs(Math.sin(a.time));a.tg2=12*a.dx_r*above(a.tg1,.5)+12*a.dy_r*below(a.tg1,.5);a.tg3=.00001<Math.abs(equal(a.thresh,2))?a.tg2:a.tg3;a.zoom+=.1;","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\nwave_r = 0.5 + 0.5*sin(1.6*time);\nwave_g = 0.5 + 0.5*sin(4.1*time);\nwave_b = -1 + (1-wave_r + 1-wave_g);\nwarp = 0;\npfthresh = above(bass_att,pfthresh)*2+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);\npfdx_r = equal(pfthresh,2)*0.015*sin(5*time)+(1-equal(pfthresh,2))*pfdx_r;\npfdy_r = equal(pfthresh,2)*0.015*sin(6*time)+(1-equal(pfthresh,2))*pfdy_r;\nrg1 = abs(sin(time));\nrg2 = 0*above(rg1,0.25) + 1*below(rg1,0.25);\nrg3 = if(equal(pfthresh,2),rg2,rg3);\n\nq1 = wave_r;\nq2 = wave_g;\nq3 = wave_b;\n\ninvert = 0;\necho_alpha = min(1,max(0.5,12*pfdy_r));\n\n\necho_zoom = min(2,max(1,1+abs(24*pfdx_r)));\n\n\nmonitor = invert;\ncog = ocog+0.005*(bass+bass_att+(bass*bass_att)-2);\nocog = below(cog,30000)*cog;\nq4 = cog;\nwarp = 2*sin(q4);\nq11=(bass+treb+mid)*.15;\nq12=q11;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\ntg1 = abs(sin(time));\ntg2 = 12*dx_r*above(tg1,0.5) + 12*dy_r*below(tg1,0.5);\ntg3 = if(equal(thresh,2),tg2,tg3);\n\n\nzoom = zoom + 0.1;","warp":" shader_body { \n  vec4 len_1;\n  vec3 rsamp_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5.x = q11;\n  tmpvar_5.y = q12;\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  ret_4.xy = texture (sampler_pw_main, (((uv_orig - tmpvar_5) * q5) + tmpvar_5)).xy;\n  ret_4.xy = (((ret_4.xy - tmpvar_5) / q5) + tmpvar_5);\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv_orig + ((\n    (tmpvar_6.xy - 0.5)\n   * 12.0) * texsize.zw));\n  uv2_3 = tmpvar_7;\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_pw_main, fract(tmpvar_7));\n  rsamp_2.z = tmpvar_8.z;\n  rsamp_2.xy = (((tmpvar_8.xy - tmpvar_5) / q5) + tmpvar_5);\n  vec4 tmpvar_9;\n  tmpvar_9.xy = ret_4.xy;\n  tmpvar_9.zw = rsamp_2.xy;\n  vec4 tmpvar_10;\n  tmpvar_10 = (tmpvar_9 - uv_orig.xyxy);\n  len_1 = tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = sqrt(dot (tmpvar_10.xy, tmpvar_10.xy));\n  float tmpvar_12;\n  tmpvar_12 = sqrt(dot (tmpvar_10.zw, tmpvar_10.zw));\n  if ((tmpvar_11 > tmpvar_12)) {\n    ret_4.xy = rsamp_2.xy;\n  };\n  uv2_3 = (uv_orig + ((\n    (tmpvar_6.zw - 0.5)\n   * 48.0) * texsize.zw));\n  vec4 tmpvar_13;\n  tmpvar_13 = texture (sampler_pw_main, fract(uv2_3));\n  rsamp_2.z = tmpvar_13.z;\n  rsamp_2.xy = (((tmpvar_13.xy - tmpvar_5) / q5) + tmpvar_5);\n  len_1.zw = (rsamp_2.xy - uv_orig);\n  float tmpvar_14;\n  tmpvar_14 = sqrt(dot (len_1.zw, len_1.zw));\n  if ((tmpvar_11 > tmpvar_14)) {\n    ret_4.xy = rsamp_2.xy;\n  };\n  vec4 tmpvar_15;\n  tmpvar_15 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_4.x > (q21 * q13)) && (ret_4.x <= (q24 * q11)))) {\n    ret_4.y = (ret_4.y - (tmpvar_15.x * 0.5));\n  };\n  if (((ret_4.y > (q22 * q11)) && (ret_4.y <= (q25 * q12)))) {\n    ret_4.z = (ret_4.z + (tmpvar_15.y * 0.5));\n  };\n  if (((ret_4.z > (q23 * q12)) && (ret_4.z <= (q26 * q13)))) {\n    ret_4.x = (ret_4.x - (tmpvar_15.z * 0.5));\n  };\n  float tmpvar_16;\n  tmpvar_16 = sqrt(dot (len_1.zw, len_1.zw));\n  if (bool(tmpvar_16)) {\n    ret_4.z = (ret_4.z + (tmpvar_13.z * 3.0));\n  };\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_4;\n  ret = tmpvar_17.xyz;\n }","comp":" shader_body { \n  float diff_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = fract(uv);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\n  ret_2 = tmpvar_4.xyz;\n  vec2 x_5;\n  x_5 = (tmpvar_4.xy - ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1).xy);\n  vec2 x_6;\n  x_6 = (tmpvar_4.xy - ((texture (sampler_blur2, tmpvar_3).xyz * scale2) + bias2).xy);\n  diff_1 = ((1.0 - (\n    sqrt(dot (x_5, x_5))\n   * 3.5)) * (1.0 - sqrt(\n    dot (x_6, x_6)\n  )));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_4.x > (q26 * q13)) && (tmpvar_4.x <= (q23 * q11)))) {\n    ret_2.z = (tmpvar_4.z - (tmpvar_7.x * 0.5));\n  };\n  if (((tmpvar_4.y > (q25 * q11)) && (tmpvar_4.y <= (q22 * q12)))) {\n    ret_2.x = (tmpvar_4.x - (tmpvar_7.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\n    ret_2.y = (tmpvar_4.y - (tmpvar_7.z * 0.5));\n  };\n  ret_2.xy = (ret_2.xy * diff_1);\n  ret_2.z = pow (diff_1, (1.0/((1.0 - tmpvar_3.x))));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\n\nfloat zm = q5;\nfloat2 cen = float2(q11,q12);\nfloat2 uvo = (uv_orig-cen)*zm + cen;\n\nfloat2 uvm = uv_orig;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xy = tex2D( sampler_pw_main,uvo).xy;\nret.xy = (ret.xy-cen)/zm+cen;\n\nfloat2 uv2 = uv_orig  + (noiseVal.xy-.5)*12*pixelsize;\nfloat3 rsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;\n\nrsamp.xy = (rsamp.xy-cen)/zm+cen;\n\nfloat4 len = (float4(ret.xy,rsamp.xy) - uvm.xyxy);\nfloat l1 = length(len.xy);\nif (l1 > length(len.zw)) ret.xy = rsamp.xy;\n\nuv2 = uv_orig  + (noiseVal.zw-.5)*48*pixelsize;\nrsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;\nrsamp.xy = (rsamp.xy-cen)/zm+cen;\nlen.zw = rsamp.xy - uvm.xy;\nif (l1 > length(len.zw)) ret.xy = rsamp.xy;\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; \n\nif (l1 = length(len.zw)) ret.z += rsamp.z*3;\n\n\n}","comp_hlsl":"sampler sampler_fw_sky;\nshader_body\n{\nfloat2 uvm = frac(uv + time*.0);\n\nret = tex2D(sampler_main,uvm);\nfloat diff = 1-length(ret.xy-GetBlur1(uvm).xy)*3.5;\ndiff *=1-length(ret.xy-GetBlur2(uvm).xy)*1;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret.xy *= diff;\nret.z = pow(diff,1/(1-uvm.x));\n\n}"}