{"version":2,"baseVals":{"rating":5,"gammaadj":2.7,"echo_zoom":1,"echo_alpha":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":11.202,"wave_scale":0.976,"wave_smoothing":0.9,"wave_mystery":-0.5,"warpanimspeed":5.428,"warpscale":6.986,"fshader":20,"zoom":1.00034,"warp":2.15546,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.36457,"tex_zoom":3.64566,"r":0,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.q2=0;a.q1=0;","frame_eqs_str":"a.x+=.362*Math.cos(2.452*a.time);a.y+=.352*Math.sin(1.52*a.time);a.r=a.q3;a.b=a.q2;a.g=1-Math.abs(a.q1);","init_eqs_eel":"","frame_eqs_eel":"x = x + 0.362*cos(2.452*time);\ny = y + 0.352*sin(1.52*time);\nr = q3;\nb = q2;\ng = 1-abs(q1);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.33004,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.x+=.362*Math.sin(2.452*a.time);a.y+=.352*Math.cos(1.52*a.time);a.r=1-Math.abs(a.q3);a.g=a.q1;a.b=1-Math.abs(a.q2);","init_eqs_eel":"","frame_eqs_eel":"x = x + 0.362*sin(2.452*time);\ny = y + 0.352*cos(1.52*time);\nr = 1-abs(q3);\ng = q1;\nb = 1-abs(q2);"},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.02*a.bass*Math.sin(20*a.sample*a.time);a.y=.5+.02*a.bass*Math.cos(20*a.sample*a.time);a.r=1+.5*Math.sin(2*a.sample+10*a.time);a.g=1+.5*Math.sin(2*a.sample+50*a.time);a.b=1+.5*Math.sin(2*a.sample+20*a.time);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.02)*sin(sample*2*(time*10));\ny = .5 + (bass*.02)*cos(sample*2*(time*10));\nr = 1 + .5*sin(sample*2+(time*10));\ng = 1 + .5*sin(sample*2+(time*50));\nb = 1 + .5*sin(sample*2+(time*20));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tg3=0;a.rg2=0;a.pfdx_r=0;a.pfthresh=0;a.ocog=0;a.thresh=0;a.q1=0;a.cog=0;a.x=0;a.dy_r=0;a.tg2=0;a.tg1=0;a.rg3=0;a.pfdy_r=0;a.rg1=0;a.q4=0;a.xy1=0;a.dx_r=0;a.y=0;a.q2=0;a.xy2=0;","frame_eqs_str":"a.wave_r+=.5*(.6*Math.sin(1.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.5*(.6*Math.sin(.909*a.time)+.4*Math.sin(1.956*a.time));a.wave_b+=.5*(.6*Math.sin(2.91*a.time)+.4*Math.sin(.992*a.time));a.cog=a.ocog+.005*(a.bass+a.bass_att+a.bass*a.bass_att-2);a.ocog=below(a.cog,3E4)*a.cog;a.q4=a.cog;a.xy1=a.x*above(Math.sin(a.time),0)+a.y*below(Math.sin(a.time),0);a.xy2=a.x*below(Math.sin(a.time),0)+a.y*above(Math.sin(a.time),0);a.q1=a.xy1;a.q2=a.xy2;a.thresh=2*above(a.bass_att,\na.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.pfthresh=2*above(a.bass_att,a.pfthresh)+(1-above(a.bass_att,a.pfthresh))*(.96*(a.pfthresh-1.3)+1.3);a.pfdx_r=.015*equal(a.pfthresh,2)*Math.sin(5*a.time)+(1-equal(a.pfthresh,2))*a.pfdx_r;a.pfdy_r=.015*equal(a.pfthresh,2)*Math.sin(6*a.time)+(1-equal(a.pfthresh,2))*a.pfdy_r;a.rg1=\nMath.abs(Math.sin(1.2*a.q4));a.rg2=0*above(a.rg1,.5)+1*below(a.rg1,.5);a.rg3=.00001<Math.abs(equal(a.pfthresh,2))?a.rg2:a.rg3;a.invert=a.rg3;a.darken=1-a.invert;a.brighten=a.invert;","pixel_eqs_str":"a['thresh']=((above(a['bass_att'], a['thresh'])*2)+((1-above(a['bass_att'], a['thresh']))*(((a['thresh']-1.3)*0.96)+1.3))); a['dx_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((5*a['time'])))+((1-equal(a['thresh'], 2))*a['dx_r'])); a['dy_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((6*a['time'])))+((1-equal(a['thresh'], 2))*a['dy_r'])); a['zoom']=(a['zoom']+Math.abs((0.05*(((3*(0.5-a['rad']))*a['bass_att'])*4)))); a['zoom']=(a['zoom']+((Math.abs(above(a['bass_att'], 1.2))>0.00001)?((0.06*Math.sin((24*a['time'])))):(0))); a['thresh']=((above(a['bass_att'], a['thresh'])*2)+((1-above(a['bass_att'], a['thresh']))*(((a['thresh']-1.3)*0.96)+1.3))); a['dx_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((5*a['time'])))+((1-equal(a['thresh'], 2))*a['dx_r'])); a['dy_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((6*a['time'])))+((1-equal(a['thresh'], 2))*a['dy_r'])); a['tg1']=Math.abs(Math.sin(a['time'])); a['tg2']=(((8*above(a['tg1'], 0.75))+(12*below(a['tg1'], 0.25)))+((16*above(a['tg1'], 0.25))*below(a['tg1'], 0.5))); ((24*above(a['tg1'], 0.5))*below(a['tg1'], 0.75)) a['tg3']=((Math.abs(equal(a['thresh'], 2))>0.00001)?(a['tg2']):(a['tg3'])); a['zoom']=(a['zoom']+(0.5*Math.abs((18*a['dx_r'])))); a['dx']=(a['dx']+((a['dx_r']*Math.sin(Math.sin((3+(a['tg3']*a['y'])))))*Math.sin((3+(a['tg3']*a['x']))))); a['dy']=(a['dy']+((a['dy_r']*Math.sin(Math.sin((3+(a['tg3']*a['y'])))))*Math.sin((3+(a['tg3']+a['x']))))); a['zoom']=(a['zoom']+(0.05*Math.abs(Math.cos((3*a['q4']))))); a['rot']=(a['rot']+(((0.4*Math.sin(a['q4']))*12)*a['dx_r']));","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.500*(0.60*sin(1.933*time) + 0.40*sin(1.045*time));\nwave_g = wave_g + 0.500*(0.60*sin(0.909*time) + 0.40*sin(1.956*time));\nwave_b = wave_b + 0.500*(0.60*sin(2.910*time) + 0.40*sin(0.992*time));\n\n\ncog = ocog+0.005*(bass+bass_att+(bass*bass_att)-2);\nocog = below(cog,30000)*cog;\nq4 = cog;\n\nxy1 = x*above(sin(time),0)+y*below(sin(time),0);\nxy2 = x*below(sin(time),0)+y*above(sin(time),0);\nq1 = xy1;\nq2 = xy2;\n\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\n//echo_orient = echo_orient + 50*dy_r;\n//echo_alpha = echo_alpha + 50*dx_r;\n\n//decay = min(0.995+abs(0.05*sin(time)),1);\npfthresh = above(bass_att,pfthresh)*2+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);\npfdx_r = equal(pfthresh,2)*0.015*sin(5*time)+(1-equal(pfthresh,2))*pfdx_r;\npfdy_r = equal(pfthresh,2)*0.015*sin(6*time)+(1-equal(pfthresh,2))*pfdy_r;\nrg1 = abs(sin(1.2*q4));\nrg2 = 0*above(rg1,0.5) + 1*below(rg1,0.5);\nrg3 = if(equal(pfthresh,2),rg2,rg3);\ninvert = rg3;\ndarken = 1-invert;\nbrighten = invert;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\n\nzoom = zoom + abs(0.05*(3*(0.5-rad)*bass_att*4));\nzoom = zoom + if(above(bass_att,1.2),(0.06*sin(24*time)),0);\n\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\ntg1 = abs(sin(time));\ntg2 = 8*above(tg1,0.75) + 12*below(tg1,0.25) + 16*above(tg1,0.25)*below(tg1,0.5);\n24*above(tg1,0.5)*below(tg1,0.75);\ntg3 = if(equal(thresh,2),tg2,tg3);\n\nzoom = zoom + 0.5*abs(18*dx_r);\ndx = dx + dx_r*sin(sin(3+(tg3*y)))*(sin(3+(tg3*x)));\ndy = dy + dy_r*sin(sin(3+(tg3*y)))*(sin(3+(tg3+x)));\nzoom = zoom + 0.05*abs(cos(3*q4));\nrot = rot + 0.4*sin(q4)*12*dx_r;","warp":"vec3 xlat_mutablemus;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv6;\n shader_body { \n  xlat_mutableuv1 = (uv - 0.5);\n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_noise_hq, ((xlat_mutableuv1 / 3.0) + (0.006 * time)));\n  vec2 tmpvar_2;\n  tmpvar_2 = tmpvar_1.xy;\n  mat2 tmpvar_3;\n  tmpvar_3[uint(0)].x = tmpvar_2.y;\n  tmpvar_3[uint(0)].y = tmpvar_2.x;\n  tmpvar_3[1u].x = -(tmpvar_1.x);\n  tmpvar_3[1u].y = tmpvar_2.y;\n  xlat_mutableuv6 = (xlat_mutableuv1 * tmpvar_3);\n  xlat_mutablemus = (vec3(abs((\n    (0.5 * cos((xlat_mutableuv6.y * 14.0)))\n   - \n    cos((xlat_mutableuv6.x * 71.0))\n  ))) * vec3(0.04, 0.0384, 0.036));\n  xlat_mutableuv6 = (0.2 * sin((\n    (12.0 * uv)\n   + rand_frame.xy)));\n  xlat_mutablemus = (xlat_mutablemus - ((0.001 / \n    sqrt(dot (xlat_mutableuv6, xlat_mutableuv6))\n  ) * vec3(0.2, 1.0, 1.0)));\n  vec3 tmpvar_4;\n  tmpvar_4 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_5;\n  tmpvar_5.x = dot ((texture (sampler_main, (uv + vec2(0.004, 0.0))).xyz - texture (sampler_main, (uv - vec2(0.004, 0.0))).xyz), vec3(0.32, 0.49, 0.29));\n  tmpvar_5.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.004))).xyz - texture (sampler_main, (uv - vec2(0.0, 0.004))).xyz), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((\n    ((texture (sampler_main, (uv + (tmpvar_5 * 0.02))).xyz + (0.015 - (\n      (sqrt(dot (tmpvar_5, tmpvar_5)) * tmpvar_4)\n     / 1.5))) - (dot (tmpvar_4, vec3(0.32, 0.49, 0.29)) * 0.012))\n   + xlat_mutablemus) * 0.99) - 0.04);\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.0;\n  tmpvar_2.x = texsize.z;\n  vec2 tmpvar_3;\n  tmpvar_3 = (tmpvar_2 * 2.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5 = (tmpvar_4 * 2.0);\n  vec2 tmpvar_6;\n  tmpvar_6.x = (((texture (sampler_blur1, \n    (uv - tmpvar_3)\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv + tmpvar_3)\n  ).xyz * scale1) + bias1)).x;\n  tmpvar_6.y = (((texture (sampler_blur1, \n    (uv - tmpvar_5)\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv + tmpvar_5)\n  ).xyz * scale1) + bias1)).x;\n  vec2 tmpvar_7;\n  tmpvar_7 = (tmpvar_6 * 0.5);\n  vec3 tmpvar_8;\n  tmpvar_8 = ((texture (sampler_blur1, fract(\n    (uv + tmpvar_7)\n  )).xyz * scale1) + bias1);\n  vec2 tmpvar_9;\n  tmpvar_9 = (0.2 * cos((\n    (((uv - 0.5) + (tmpvar_7 / 4.0)) * 4.0)\n   + time)));\n  ret_1 = (((texture (sampler_main, \n    (uv + tmpvar_7)\n  ) * texture (sampler_main, \n    ((1.0 - uv) - tmpvar_7)\n  )).xyz + (tmpvar_8 * 2.0)) + ((q21 * vec3(\n    clamp ((0.01 / sqrt(dot (tmpvar_9, tmpvar_9))), 0.0, 1.0)\n  )) * (1.0 - tmpvar_8)));\n  ret_1 = (ret_1 * 0.7);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_1;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat2 uv1, uv6;\nfloat dx,dy;\n\nshader_body {\n\nuv1 = (uv-.5);\n\nfloat2 ang2= tex2D (sampler_noise_hq,uv1/3+.006*time).xy;\nuv6 = mul(uv1,float2x2(ang2.y,-ang2.x,ang2.x,ang2.y));\n\nmus = abs(.5*cos(uv6.y*14)-(cos(uv6.x*71)));\nmus *= float3 (1,.96,.9)/25;\n\nuv6 = .2*sin(12*uv+rand_frame);\nfloat3 dots = .001/length(uv6)* float3 (0.2,1,1);\n\n//dots = lum(tex2D (sampler_noise_hq,uv +rand_frame));\n//dots = (dots-.7) * (dots >= .7) * float3 (0.2,1,1);\n\nmus -= dots;\n\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nhor = float2 (.004,0);\nver = float2 (0,.004);\n\n\n\nfloat dx = lum(GetPixel(uv+hor)-GetPixel(uv-hor));\nfloat dy = lum(GetPixel(uv+ver)-GetPixel(uv-ver));\n\nfloat2 zz = float2 (dx,dy);\n\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\ncrisp +=.015 - length(zz)*blur/1.5;\n\nfloat3 ret1 = crisp - lum(blur)*.012 + mus;\n//ret1 = abs(mus)/2;\nret = ret1 * .99 -  .04 ;\n}","comp_hlsl":"shader_body\n{\n\n//uv = (uv-.5) * aspect.xy + .5;\n\n\nfloat2 hor = float2 (texsize.z,0)*2;\nfloat2 ver = float2 (0,texsize.w)*2;\nfloat dx = GetBlur1 (uv-hor) - GetBlur1 (uv+hor);\nfloat dy = GetBlur1 (uv-ver) - GetBlur1 (uv+ver);\nfloat2 dz = float2 (dx,dy)*0.5;\n\n\n\nfloat3 crisp = tex2D(sampler_main, uv + dz) * \n               tex2D(sampler_main, 1-uv - dz);\nfloat3 blur = GetBlur1(frac(uv + dz));\n\nfloat2 uv1 = uv-.5 + dz/4;\nfloat2 uv2 = uv1*0+.2*float2 (cos(uv1*4+time));;\nfloat3 dots = saturate(.01/(length(uv2))) * float3 (1,1,1);\n\n\nret = (crisp + blur*2) + q21*dots * (1-blur);\nret *= .7 ;\n}"}