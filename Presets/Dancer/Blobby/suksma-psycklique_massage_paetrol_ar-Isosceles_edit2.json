{"version":2,"baseVals":{"rating":5,"gammaadj":1.21,"decay":0.5,"echo_zoom":1.002,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"wave_brighten":0,"brighten":1,"invert":1,"wave_a":0.001,"wave_scale":0.1,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":6,"rad":0.01,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r = 1-(time*.56)*(k1*k1)*x/0.5;\nb = 1-(time*.99)*(k1*k1)*x/0.5;\ng = 1-(time*.30)*(k1*k1)*x/0.5;\nr2 = 1-(time*.56)*(k1*k1)*x/0.5;\nb2 = 1-(time*.99)*(k1*k1)*x/0.5;\ng2 = 1-(time*.30)*(k1*k1)*x/0.5;\n\nass = max(time+rad, 1);\nass1 = min(time+ass+rad, 2);\nass2 = ass + ass1;\nk1 = ass1;\n\nang = sin(2*bass);;\n\n\nx = ( .5);\ny = ( .5);\nrad = radd;\n\n\npoo1 = max(bass+(time*2), poo2);\npoo2 = max(bass-time, poo1);\npoo = (poo1+poo2)/10*.5;\nsides = 100;\n\n\n\nradd=sin(bass*0.05);\n","init_eqs_eel":"","frame_eqs_eel":"r = 1-(time*.56)*(k1*k1)*x/0.5;\nb = 1-(time*.99)*(k1*k1)*x/0.5;\ng = 1-(time*.30)*(k1*k1)*x/0.5;\nr2 = 1-(time*.56)*(k1*k1)*x/0.5;\nb2 = 1-(time*.99)*(k1*k1)*x/0.5;\ng2 = 1-(time*.30)*(k1*k1)*x/0.5;\n\nass = max(time+rad, 1);\nass1 = min(time+ass+rad, 2);\nass2 = ass + ass1;\nk1 = ass1;\n\nang = sin(2*bass);;\n\n\nx = ( .5);\ny = ( .5);\nrad = radd;\n\n\npoo1 = max(bass+(time*2), poo2);\npoo2 = max(bass-time, poo1);\npoo = (poo1+poo2)/10*.5;\nsides = 100;\n\n\n\nradd=sin(bass*0.05);\n"},{"baseVals":{"enabled":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.k1=0;a.bamx=0;a.boom=0;a.bom=0;a.poo1=0;a.poo2=0;a.poo=0;","frame_eqs_str":"a.r=1-div(.56*a.time*a.k1*a.k1*a.x,.5);a.b=1-div(.99*a.time*a.k1*a.k1*a.x,.5);a.g=1-div(.3*a.time*a.k1*a.k1*a.x,.5);a.r2=1-div(.56*a.time*a.k1*a.k1*a.x,.5);a.b2=1-div(.99*a.time*a.k1*a.k1*a.x,.5);a.g2=1-div(.3*a.time*a.k1*a.k1*a.x,.5);a.k1=1;a.sides=20;a.rad=.25;a.bamx=Math.sin(a.time-a.bass);a.boom=Math.sin(mod(a.bamx,a.boom)*a.bass*a.time);a.bom=2*rand(.1*(a.time-a.boom)*(a.time-a.bamx));a.x=.42*Math.sin(a.time)+.5;a.y=.42*Math.sin(div(a.time,2))+.5;a.poo1=Math.max(a.bass+\n2*a.time,a.poo2);a.poo2=Math.max(a.bass-a.time,a.poo1);a.poo=.5*div(a.poo1+a.poo2,10);","init_eqs_eel":"","frame_eqs_eel":"r = 1-(time*.56)*(k1*k1)*x/0.5;\nb = 1-(time*.99)*(k1*k1)*x/0.5;\ng = 1-(time*.30)*(k1*k1)*x/0.5;\nr2 = 1-(time*.56)*(k1*k1)*x/0.5;\nb2 = 1-(time*.99)*(k1*k1)*x/0.5;\ng2 = 1-(time*.30)*(k1*k1)*x/0.5;\n\nk1 = 1;;\n\nsides = 20;\n\nrad = 0.25;;\n\nbamx=sin(time-bass);\nboom=sin(((bamx%boom)*bass)*time);\nbom=(rand(0.1*(time-boom)*(time-bamx))*2);\n\nx = (sin(time)*0.420+0.5);\ny = (sin(time/2)*0.420+0.5);\n\npoo1 = max(bass+(time*2), poo2);\npoo2 = max(bass-time, poo1);\npoo = (poo1+poo2)/10*.5;"},{"baseVals":{"enabled":1,"border_a":0},"init_eqs_str":"a.k1=0;a.bamx=0;a.boom=0;a.bom=0;a.poo1=0;a.poo2=0;a.poo=0;","frame_eqs_str":"a.r=1-div(.56*a.time*a.k1*a.k1*a.x,.5);a.b=1-div(.99*a.time*a.k1*a.k1*a.x,.5);a.g=1-div(.3*a.time*a.k1*a.k1*a.x,.5);a.r2=1-div(.56*a.time*a.k1*a.k1*a.x,.5);a.b2=1-div(.99*a.time*a.k1*a.k1*a.x,.5);a.g2=1-div(.3*a.time*a.k1*a.k1*a.x,.5);a.k1=1;a.sides=20;a.rad=.25;a.bamx=Math.sin(a.time-a.bass);a.boom=Math.sin(mod(a.bamx,a.boom)*a.bass*a.time);a.bom=2*rand(.1*(a.time-a.boom)*(a.time-a.bamx));a.x=.42*Math.sin(div(a.time,2))+.5;a.y=.42*Math.sin(a.time)+.5;a.poo1=Math.max(a.bass+\n2*a.time,a.poo2);a.poo2=Math.max(a.bass-a.time,a.poo1);a.poo=.5*div(a.poo1+a.poo2,10);","init_eqs_eel":"","frame_eqs_eel":"r = 1-(time*.56)*(k1*k1)*x/0.5;\nb = 1-(time*.99)*(k1*k1)*x/0.5;\ng = 1-(time*.30)*(k1*k1)*x/0.5;\nr2 = 1-(time*.56)*(k1*k1)*x/0.5;\nb2 = 1-(time*.99)*(k1*k1)*x/0.5;\ng2 = 1-(time*.30)*(k1*k1)*x/0.5;\n\nk1 = 1;;\n\nsides = 20;\n\nrad = 0.25;;\n\nbamx=sin(time-bass);\nboom=sin(((bamx%boom)*bass)*time);\nbom=(rand(0.1*(time-boom)*(time-bamx))*2);\n\nx = (sin(time/2)*0.420+0.5);\ny = (sin(time)*0.420+0.5);\n\npoo1 = max(bass+(time*2), poo2);\npoo2 = max(bass-time, poo1);\npoo = (poo1+poo2)/10*.5;"},{"baseVals":{"textured":1,"rad":1.67089,"tex_ang":0.94248,"tex_zoom":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0.17,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"r = 1-(time*.56)*(k1*k1)*x/0.5;\nb = 1-(time*.99)*(k1*k1)*x/0.5;\ng = 1-(time*.30)*(k1*k1)*x/0.5;\n\n\nk1 = (x/y)* 0.5 + above(bass*time-rad, .420);\nk2 = (x*y)*sin(time*treb_thresh*rad*rad);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"r = 1-(time*.56)*(k1*k1)*x/0.5;\nb = 1-(time*.99)*(k1*k1)*x/0.5;\ng = 1-(time*.30)*(k1*k1)*x/0.5;\n\n\nk1 = (x/y)* 0.5 + above(bass*time-rad, .420);\nk2 = (x*y)*sin(time*treb_thresh*rad*rad);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.lbbtime=0;a.bbtime=0;a.rs=0;a.beatb=0;a.q6=0;a.avgbeatrate=0;a.beatt=0;a.q1=0;a.beatthard=0;a.q5=0;a.fb=0;a.drs=0;a.fbc=0;a.beatbhard=0;a.beatrate=0;a.worp=0;a.q4=0;a.lbass=0;a.faketime=0;a.fakebeatb=0;a.beatmhard=0;a.db=0;a.vol=0;a.bc=0;a.q2=0;a.maxdb=0;a.q3=0;a.lftime=0;a.avgdb=0;a.beatrate=1;a.avgbeatrate=1;a.bbtime=1;a.lbbtime=1;a.avgdb=1;a.fakebeatcount=0;","frame_eqs_str":"a.db=a.bass-a.lbass;a.lbass=a.bass;a.vol=1+a.bass+a.mid+a.treb;a.rs=equal(mod(a.fbc,64),0);a.drs=1-a.rs;a.beatrate=1*a.rs+a.beatrate*a.drs;a.avgbeatrate=1*a.rs+a.avgbeatrate*a.drs;a.bbtime=1*a.rs+a.bbtime*a.drs;a.lbbtime=1*a.rs+a.lbbtime*a.drs;a.avgdb=1*a.rs+a.avgdb*a.drs;a.fbc=a.fbc*a.drs+1*a.rs;a.bc=a.bc*a.drs+1*a.rs;a.faketime=1*a.rs+a.faketime*a.drs;a.lftime=1*a.rs+a.lftime*a.drs;a.avgdb=.99*a.avgdb+.01*Math.abs(a.db);a.beatb=above(a.db,a.avgdb)*above(a.time-a.lbbtime,.5*\na.avgbeatrate);a.maxdb=Math.max(.99999*a.maxdb,a.db);a.bbtime=a.time*a.beatb;a.beatrate=a.beatb*(a.bbtime-a.lbbtime)+(1-a.beatb)*a.beatrate;a.avgbeatrate=a.beatb*(.99*a.avgbeatrate+.01*a.beatrate)+(1-a.beatb)*a.avgbeatrate;a.lbbtime=a.time*a.beatb+(1-a.beatb)*a.lbbtime;a.faketime+=a.beatrate*a.avgbeatrate*.01;a.fakebeatb=.5*Math.sin(a.faketime*a.beatrate*2+3.14)+.5;a.fb=above(a.fakebeatb,.999)*above(a.faketime-a.lftime,.9*a.avgbeatrate);a.fbc+=a.fb;a.lftime=a.faketime*a.fb;a.bc+=a.fb;a.monitor=a.fbc;\na.q1=equal(mod(a.bc,16),0)*a.fb;a.q2=a.beatbhard;a.q3=equal(mod(a.bc,4),0)*a.fb;a.q4=a.beatmhard;a.q5=a.beatt;a.q6=a.beatthard;a.decay=.99;a.worp=0;a.dx=.005;","pixel_eqs_str":"","init_eqs_eel":"beatrate=1;\navgbeatrate=1;\nbbtime=1;\nlbbtime=1;\navgdb=1;\nfakebeatcount=0;","frame_eqs_eel":"db=bass-lbass;\nlbass=bass;\nvol=1+bass+mid+treb;\n\nrs=equal(fbc%64,0);\ndrs=1-rs;\nbeatrate=1*rs+beatrate*drs;\navgbeatrate=1*rs+avgbeatrate*drs;\nbbtime=1*rs+bbtime*drs;\nlbbtime=1*rs+lbbtime*drs;\navgdb=1*rs+avgdb*drs;\nfbc=fbc*drs+1*rs;\nbc=bc*drs+1*rs;\nfaketime=1*rs+faketime*drs;\nlftime=1*rs+lftime*drs;\n\n\navgdb=avgdb*.99+abs(db)*.01;\n\nbeatb=above(db,avgdb)*above(time-lbbtime,.5*avgbeatrate);\nmaxdb=max(maxdb*.99999,db);\n\nbbtime=time*beatb;\n\nbeatrate=beatb*(bbtime-lbbtime)+(1-beatb)*beatrate;\navgbeatrate=beatb*(avgbeatrate*.99+beatrate*.01)+(1-beatb)*avgbeatrate;\n\n\nlbbtime=time*beatb+(1-beatb)*lbbtime;\n\n\nfaketime=faketime+beatrate*avgbeatrate*.01;\nfakebeatb=sin(faketime*beatrate*2+3.14)*.5+.5;\n\n\n\nfb=above(fakebeatb,.999)*above(faketime-lftime,.9*avgbeatrate);\nfbc=fbc+fb;\nlftime=faketime*fb;\nbc=bc+fb;\nmonitor=fbc;\nq1=equal(bc%16,0)*fb;\nq2=beatbhard;\nq3=equal(bc%4,0)*fb;\nq4=beatmhard;\nq5=beatt;\nq6=beatthard;\ndecay=.99;\nworp=0;\n\ndx=.005;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\n  tmpvar_4 = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  float tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\n  tmpvar_7 = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4;\n  tmpvar_10.y = tmpvar_7;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  tmpvar_11.y = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x - 0.01);\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_7;\n  tmpvar_13.y = -(tmpvar_4);\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_14;\n  x_14 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\n   * 180.0) / sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )));\n  ret_2.z = (ret_2.z * 0.8);\n  ret_2.z = (ret_2.z - 0.01);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_7);\n  tmpvar_15.y = tmpvar_4;\n  my_uv_1 = (tmpvar_15 * 0.045);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_3.x);\n  tmpvar_16.y = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_3.y);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\n   * 0.1) - 0.01));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_2;\n  ret = tmpvar_17.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2.z = 0.0;\n  tmpvar_2.xy = texsize.zw;\n  ret_1 = -(texture (sampler_main, uv).xyz);\n  ret_1 = (ret_1 + (clamp (\n    ((dot (texture (sampler_main, (uv + tmpvar_2.xz)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv - tmpvar_2.xz)).xyz, vec3(0.32, 0.49, 0.29))) * 64.0)\n  , 0.0, 1.0) * vec3(1.0, 0.6, 0.1)));\n  ret_1 = (ret_1 + (clamp (\n    ((dot (texture (sampler_main, (uv + tmpvar_2.zy)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv - tmpvar_2.zy)).xyz, vec3(0.32, 0.49, 0.29))) * 64.0)\n  , 0.0, 1.0) * vec3(0.2, 0.5, 0.7)));\n  ret_1 = (ret_1 - clamp ((\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * 4.0)\n   - 1.0), 0.0, 1.0));\n  ret_1 = (ret_1 * 1.5);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with\n    float1 d = 0.005;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float2 my_uv = uv - float2(dx,dy)*0.01 + float2(dxb,dyb)*0.003;\n\n\n\n    float2 v = 0.01;\n    ret.x = tex2D( sampler_fw_main, my_uv -floor(my_uv)*0).x;\n\n    \n    ret.x += (ret.x - GetBlur3(uv).x)*.1;\n    ret.x -= 0.01;\n\n\n//--------------------------------\n\n    my_uv = uv + float2(dy,-dx)*0.05*(1.2-GetBlur3(uv).y);\n\n\n\n    v = 0.01;\n    ret.z = tex2D( sampler_fw_main, my_uv).z;\n    \n    ret.z += (ret.z - GetBlur1(uv).z)*length(my_uv-uv)*180/length(scale);\n    ret.z *= 0.8;\n    ret.z -= 0.01;\n\n\n\n//--------------------------------\n\n    d = 0.01;\n    my_uv = float2(-dy,dx)*0.045;\n\n    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;\n    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;\n    my_uv += uv - float2(dx,dy)*0.03;\n    v = 0.01;\n    ret.y =tex2D( sampler_fw_main, my_uv).y;\n    ret.y += (ret.y - GetBlur3(my_uv).y)*0.1 - 0.01;\n    \n    \n\n    \n    \n//ret = 0;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;    \n\n    float3 d = float3(texsize.zw, 0)*1.0;\n    float b1 = lum(GetPixel(uv + d.xz));\n    float b2 = lum(GetPixel(uv - d.xz));\n    float b3 = lum(GetPixel(uv + d.zy));\n    float b4 = lum(GetPixel(uv - d.zy));\n\n    //ret = 0;\n    ret *= -1; \n    ret += saturate((b1-b2)*64)*1.00*float3(1,0.6,0.1);\n    ret += saturate((b3-b4)*64)*1.00*float3(0.2,0.5,0.7);\n    ret -= saturate( GetBlur1(uv)*4 - 1 );\n\n    ret *= 1.5;\n}"}