{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.956,"echo_zoom":2.003,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"rad":0.2,"a":0.6,"border_a":0},"init_eqs_str":"a.q7=0;","frame_eqs_str":"a.ang=1.24*a.time;a.x=.5+.08*Math.cos(1.21*a.time)+.03*Math.cos(.64*a.time);a.y=.5+.08*Math.sin(1.41*a.time)+.03*Math.sin(.8*a.time);a.r=a.q7+.5*Math.sin(.713*a.time+1);a.g=.5+.5*Math.sin(.563*a.time+2);a.b=.5+.5*Math.sin(.654*a.time+5);a.r2=.5+.5*Math.sin(.885*a.time+4);a.g2=.5+.5*Math.sin(.556*a.time+1);a.b2=.5+.5*Math.sin(.638*a.time+3);","init_eqs_eel":"","frame_eqs_eel":"ang = time*1.24;\nx = 0.5 + 0.08*cos(time*1.21) + 0.03*cos(time*0.64);\ny = 0.5 + 0.08*sin(time*1.41) + 0.03*sin(time*0.8);\nr = q7 + 0.5*sin(time*0.713 + 1);\ng = 0.5 + 0.5*sin(time*0.563 + 2);\nb = 0.5 + 0.5*sin(time*0.654 + 5);\nr2 = 0.5 + 0.5*sin(time*0.885 + 4);\ng2 = 0.5 + 0.5*sin(time*0.556+ 1);\nb2 = 0.5 + 0.5*sin(time*0.638 + 3);"},{"baseVals":{"enabled":1,"sides":32,"rad":0.2},"init_eqs_str":"a.vol=0;a.q7=0;","frame_eqs_str":"a.ang=1.7*a.time;a.vol=a.bass+a.mid+a.treb;a.x=.5+.08*Math.cos(a.vol+1.1*a.time)+.03*Math.cos(.7*a.time);a.y=.5+.08*Math.sin(-a.vol+1.1*a.time)+.03*Math.sin(.7*a.time);a.r=a.q7+.5*Math.sin(a.vol*a.time*.713+1);a.g=.5+.5*Math.sin(div(1,a.vol)*a.time*.563+2);a.b=.5+.5*Math.sin((1-a.vol)*a.time*.654+5);a.r2=.5+.5*Math.sin(.885*a.time+4);a.g2=.5+.5*Math.sin(.556*a.time+1);a.b2=.5+.5*Math.sin(.638*a.time+3);","init_eqs_eel":"","frame_eqs_eel":"ang = time*1.7;\nvol=bass+mid+treb;\nx = 0.5 + 0.08*cos(vol+time*1.1) + 0.03*cos(time*0.7);\ny = 0.5 + 0.08*sin(-vol+time*1.1) + 0.03*sin(time*0.7);\nr = q7 + 0.5*sin(vol*time*0.713 + 1);\ng = 0.5 + 0.5*sin(1/vol*time*0.563 + 2);\nb = 0.5 + 0.5*sin((1-vol)*time*0.654 + 5);\nr2 = 0.5 + 0.5*sin(time*0.885 + 4);\ng2 = 0.5 + 0.5*sin(time*0.556+ 1);\nb2 = 0.5 + 0.5*sin(time*0.638 + 3);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.colour=0;","frame_eqs_str":"a.colour=div(Math.sin(1.2*a.time),2)+.5;a.wave_g=1-a.colour;a.wave_b=.9+div(Math.sin(div(a.time,3)),10);a.wave_r=a.colour;","pixel_eqs_str":"a.sy=.00001<Math.abs(below(a.y,.47))?.00001<Math.abs(above(a.y,.03))?div(pow(Math.log(a.ang*a.time),3),4):-4:1.1;a.zoom=1+div(Math.sin(a.rad),10);","init_eqs_eel":"","frame_eqs_eel":"colour = sin(time*1.2)/2 + 0.5;\nwave_g = 1-colour;\nwave_b =0.9 + sin(time/3)/10;\nwave_r = colour;","pixel_eqs_eel":"sy= if(below(y,0.47),if(above(y,0.03),pow(log(ang*time),3)/4,-4),1.1);\nzoom = 1 + sin(rad)/10;","warp":" shader_body { \n  vec3 z_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = mix (uv_orig, uv, vec2(0.2, 0.2));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\n  float tmpvar_5;\n  tmpvar_5 = ((tmpvar_4.x * tmpvar_4.y) * tmpvar_4.y);\n  z_1.x = (tmpvar_4.x + ((\n    (-(tmpvar_5) + (0.035 * (1.0 - tmpvar_4.x)))\n   + 0.0007) * 9.0));\n  z_1.y = (tmpvar_4.y + ((tmpvar_5 - \n    (0.095 * tmpvar_4.y)\n  ) * 9.0));\n  z_1.z = (tmpvar_4.z - 0.02);\n  vec2 tmpvar_6;\n  tmpvar_6 = (0.3 * texsize.zw);\n  z_1.x = (z_1.x + ((1.8 * \n    ((bass + mid) + treb)\n  ) * (\n    (0.25 * (((texture (sampler_main, \n      (tmpvar_3 + tmpvar_6)\n    ).xyz + texture (sampler_main, \n      (tmpvar_3 + (tmpvar_6 * vec2(-1.0, 1.0)))\n    ).xyz) + texture (sampler_main, (tmpvar_3 + \n      (tmpvar_6 * vec2(1.0, -1.0))\n    )).xyz) + texture (sampler_main, (tmpvar_3 - tmpvar_6)).xyz))\n   - texture (sampler_main, tmpvar_3).xyz)).x);\n  ret_2.yz = z_1.yz;\n  ret_2.x = (z_1.x + (0.09 * (\n    (texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz * 2.0)\n   - 1.0)).x);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_2;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (abs((\n    ((texture (sampler_blur3, (uv_1 + (0.01 * \n      ((bass + mid) + treb)\n    ))).xyz * scale3) + bias3)\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\n  ret_2 = (ret_2 * 1.333);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n  float2 uv2 = lerp(uv_orig, uv, 0.2);\n\n  // diffused version:\n  float ss = 0.3;\n  float3 blur = 0.25*(\n    tex2D(sampler_main, uv2+ss*texsize.zw*float2( 1, 1)).xyz +\n    tex2D(sampler_main, uv2+ss*texsize.zw*float2(-1, 1)).xyz +\n    tex2D(sampler_main, uv2+ss*texsize.zw*float2( 1,-1)).xyz +\n    tex2D(sampler_main, uv2+ss*texsize.zw*float2(-1,-1)).xyz\n  );\n\n  // diffusion:  \n  ret = tex2D(sampler_main,uv2);//blur;\n\n  float F2 = 0.035;\n  float k2 = 0.060;\n  float s = 0.025;\n  float scale = 9;\n\n  // reaction:\n  float3 z = ret;\n  float uvv = ret.x*ret.y*ret.y;\n  z.x += (-uvv + F2*(1-ret.x) + 0.0007)*scale;\n  z.y += (uvv - (F2+k2)*ret.y)*scale;\n  //z.x += s*(16-ret.x*ret.y);\n  //z.y += s*(ret.x*ret.y - ret.y - ret.z);\n  z.z -= 0.02;\n\n  // apply laplacian:\n  z.x += (blur - GetPixel(uv2))*0.2*(bass+mid+treb)*scale;\n\n  ret = z;  \n  //ret *= 0.98 + 0.02*saturate( (0.75 - rad )*10 );\n  //ret *= 0.99;\n\n  // add noise:\n  ret.x += 0.09*(tex2d(sampler_noise_lq, uv*texsize.xy*texsize_noise_lq.zw + rand_frame.xy).xyz*2-1);\n\n  // darken (decay) over time\n  //ret = (ret - 0.002)*0.99;\n}","comp_hlsl":"\n\n\n\nshader_body\n{\n    uv = 0.05 + 0.9*uv;\n    ret = tex2D(sampler_main, uv).xyz;\n      // SUPER GLOW EDGES - looks awesome w/octopus\n      float3 avg_col = GetBlur3(uv+.01*(bass+mid+treb));\n      ret = abs(avg_col - ret)*6;\n    ret *= 1.333; // a little bit of overbright\n}"}