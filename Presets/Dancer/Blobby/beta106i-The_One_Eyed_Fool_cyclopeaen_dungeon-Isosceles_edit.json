{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.95,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":5,"wave_brighten":0,"wrap":0,"wave_a":0.029,"wave_scale":0.721,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"a2":1,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;a.r=a.q1;a.g=a.q2;a.b=a.q3;a.r2=1-Math.abs(a.q1);a.g2=1-Math.abs(a.q2);a.b2=1-Math.abs(a.q3);","frame_eqs_str":"a.r=a.q1;a.g=a.q2;a.b=a.q3;a.r2=1-Math.abs(a.q1);a.g2=1-Math.abs(a.q2);a.b2=1-Math.abs(a.q3);a.rad+=.2*a.bass_att;a.x+=.23*Math.cos(3.21*Math.sin(1.32*a.time));a.y+=.23*Math.sin(1.42*Math.cos(1.73*a.time));","init_eqs_eel":"r = q1;\ng = q2;\nb = q3;\nr2 = 1-abs(q1);\ng2 = 1-abs(q2);\nb2 = 1-abs(q3);","frame_eqs_eel":"r = q1;\ng = q2;\nb = q3;\nr2 = 1-abs(q1);\ng2 = 1-abs(q2);\nb2 = 1-abs(q3);\n\nrad = rad + 0.2*bass_att;\nx = x + 0.23*cos(3.21*sin(1.32*time));\ny = y + 0.23*sin(1.42*cos(1.73*time));"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.06717,"tex_ang":4.39823,"tex_zoom":2.2167,"a2":1,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;a.r=a.q1;a.g=a.q2;a.b=a.q3;a.r2=1-Math.abs(a.q1);a.g2=1-Math.abs(a.q2);a.b2=1-Math.abs(a.q3);","frame_eqs_str":"a.r=a.q1;a.g=a.q2;a.b=a.q3;a.r2=1-Math.abs(a.q1);a.g2=1-Math.abs(a.q2);a.b2=1-Math.abs(a.q3);a.ang+=a.bass_att;a.rad+=.18*a.bass_att;a.x+=.23*Math.cos(3.21*Math.sin(1.32*a.time));a.y+=.23*Math.sin(1.42*Math.cos(1.73*a.time));","init_eqs_eel":"r = q1;\ng = q2;\nb = q3;\nr2 = 1-abs(q1);\ng2 = 1-abs(q2);\nb2 = 1-abs(q3);","frame_eqs_eel":"r = q1;\ng = q2;\nb = q3;\nr2 = 1-abs(q1);\ng2 = 1-abs(q2);\nb2 = 1-abs(q3);\nang = ang + bass_att;;\nrad = rad + 0.18*bass_att;\nx = x + 0.23*cos(3.21*sin(1.32*time));\ny = y + 0.23*sin(1.42*cos(1.73*time));"},{"baseVals":{"enabled":1,"sides":5,"rad":0.04983,"ang":6.28319,"a2":1,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.q3=0;a.q1=0;a.q2=0;a.r=a.q1;a.g=a.q2;a.b=a.q3;a.r2=1-Math.abs(a.q1);a.g2=1-Math.abs(a.q2);a.b2=1-Math.abs(a.q3);","frame_eqs_str":"a.r=a.q3;a.g=a.q1;a.b=a.q2;a.r2=1-Math.abs(a.q3);a.g2=1-Math.abs(a.q2);a.b2=1-Math.abs(a.q1);a.ang+=4*a.time;a.x+=.23*Math.cos(3.21*Math.sin(1.32*a.time));a.y+=.23*Math.sin(1.42*Math.cos(1.73*a.time));","init_eqs_eel":"r = q1;\ng = q2;\nb = q3;\nr2 = 1-abs(q1);\ng2 = 1-abs(q2);\nb2 = 1-abs(q3);","frame_eqs_eel":"r = q3;\ng = q1;\nb = q2;\nr2 = 1-abs(q3);\ng2 = 1-abs(q2);\nb2 = 1-abs(q1);\nang = ang + 4*time;\n\nx = x + 0.23*cos(3.21*sin(1.32*time));\ny = y + 0.23*sin(1.42*cos(1.73*time));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tg3=0;a.rg2=0;a.pfdx_r=0;a.pfthresh=0;a.q6=0;a.thresh=0;a.q1=0;a.dy_r=0;a.tg2=0;a.treb_thresh=0;a.tg1=0;a.rg3=0;a.pfdy_r=0;a.mid_thresh=0;a.rg1=0;a.dx_r=0;a.vol_thresh=0;a.mid_mid_att=0;a.q2=0;a.q3=0;a.q7=0;a.q8=0;","frame_eqs_str":"a.treb_thresh=2*above(a.treb_att,a.treb_thresh)+(1-above(a.treb_att,a.treb_thresh))*(.96*(a.treb_thresh-1.3)+1.3);a.mid_thresh=2*above(a.mid_att,a.mid_thresh)+(1-above(a.mid_mid_att,a.mid_thresh))*(.96*(a.mid_thresh-1.3)+1.3);a.vol_thresh=div(a.pfthresh+a.treb_thresh+a.mid_thresh,3);a.q6=a.vol_thresh;a.q7=a.treb_thresh;a.q8=a.mid_thresh;a.wave_r=.65+.5*Math.sin(1.13*a.time);a.wave_g=.65+.5*Math.sin(1.23*a.time);a.wave_b=.65+.5*Math.sin(1.33*a.time);a.warp=0;a.pfthresh=2*above(a.bass_att,\na.pfthresh)+(1-above(a.bass_att,a.pfthresh))*(.96*(a.pfthresh-1.3)+1.3);a.pfdx_r=.015*equal(a.pfthresh,2)*Math.sin(5*a.time)+(1-equal(a.pfthresh,2))*a.pfdx_r;a.pfdy_r=.015*equal(a.pfthresh,2)*Math.sin(6*a.time)+(1-equal(a.pfthresh,2))*a.pfdy_r;a.rg1=Math.abs(Math.sin(a.time));a.rg2=0*above(a.rg1,.75)+3*below(a.rg1,.25)+1*above(a.rg1,.25)*below(a.rg1,.5)+2*above(a.rg1,.5)*below(a.rg1,.75);a.rg3=.00001<Math.abs(equal(a.pfthresh,2))?a.rg2:a.rg3;a.q1=a.wave_r;a.q2=a.wave_g;a.q3=a.wave_b;","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.tg1=Math.abs(Math.sin(a.time));a.tg2=Math.abs(12*a.dx_r)*above(a.tg1,.5)-Math.abs(12*a.dy_r)*below(a.tg1,.5);a.tg3=.00001<Math.abs(equal(a.thresh,2))?a.tg2:a.tg3;","init_eqs_eel":"","frame_eqs_eel":"treb_thresh=above(treb_att,treb_thresh)*2+\n(1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*0.96+1.3);\nmid_thresh=above(mid_att,mid_thresh)*2+\n(1-above(mid_mid_att,mid_thresh))*((mid_thresh-1.3)*0.96+1.3);\nvol_thresh= (pfthresh+treb_thresh+mid_thresh)/3;\nq6 = vol_thresh;\nq7 = treb_thresh;\nq8 = mid_thresh;\nwave_r = 0.65 + 0.5*sin(time*1.13);\nwave_g = 0.65 + 0.5*sin(time*1.23);\nwave_b = 0.65 + 0.5*sin(time*1.33);\n\n//wave_r = 0.5 + 0.5*sin(1.6*time);\n//wave_g = 0.5 + 0.5*sin(4.1*time);\n//wave_b = -1 + (1-wave_r + 1-wave_g);\nwarp = 0;\npfthresh = above(bass_att,pfthresh)*2+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);\npfdx_r = equal(pfthresh,2)*0.015*sin(5*time)+(1-equal(pfthresh,2))*pfdx_r;\npfdy_r = equal(pfthresh,2)*0.015*sin(6*time)+(1-equal(pfthresh,2))*pfdy_r;\nrg1 = abs(sin(time));\nrg2 = 0*above(rg1,0.75) + 3*below(rg1,0.25) + 1*above(rg1,0.25)*below(rg1,0.5)+\n2*above(rg1,0.5)*below(rg1,0.75);\nrg3 = if(equal(pfthresh,2),rg2,rg3);\n\nq1 = wave_r;\nq2 = wave_g;\nq3 = wave_b;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\ntg1 = abs(sin(time));\ntg2 = abs(12*dx_r)*above(tg1,0.5) - abs(12*dy_r)*below(tg1,0.5);\ntg3 = if(equal(thresh,2),tg2,tg3);\n\n\n//dx = dx + 12*tg3*dx_r;\n//dy = dy + dy_r*tg3*24","warp":"","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (uv.x + 0.001);\n  tmpvar_3.y = uv.y;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\n  float tmpvar_5;\n  tmpvar_5 = abs(((\n    (((tmpvar_2.x + tmpvar_2.y) + tmpvar_2.z) - tmpvar_4.x)\n   - tmpvar_4.y) - tmpvar_4.z));\n  if ((tmpvar_5 > 0.1)) {\n    ret_1 = ((texture (sampler_blur2, uv).xyz * scale2) + bias2);\n  } else {\n    ret_1 = ((texture (sampler_blur3, uv).xyz * scale3) + bias3);\n  };\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_blur3, uv);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_blur1, uv);\n  ret_1 = (ret_1 + ((1.5 * \n    ((tmpvar_6.xyz * scale3) + bias3)\n  ) - (\n    (tmpvar_7.xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 * 2.15);\n  float tmpvar_8;\n  tmpvar_8 = dot (ret_1, vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_9;\n  tmpvar_9 = mix ((0.75 * vec3(tmpvar_8)), (vec3(tmpvar_8) * (\n    ((tmpvar_6.xyz * scale3) + bias3)\n   - \n    ((tmpvar_7.xyz * scale1) + bias1)\n  )), ((\n    ((0.1 * rand_preset).xyz + (0.5 * ((hue_shader * \n      (1.0 + treb_att)\n    ) - (treb_att - 1.75))))\n   + \n    (0.5 * _qa.xyz)\n  ) * vec3(tmpvar_8)));\n  ret_1 = (tmpvar_9 * tmpvar_9);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_1;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\n\nfloat3 orig=tex2D(sampler_main,uv);\nfloat3 nex=tex2D(sampler_main,float2(uv.x+0.001,uv.y));\n\nif(abs(orig.x+orig.y+orig.z-nex.x-nex.y-nex.z)>0.1)\n{ret=GetBlur2(uv);}\nelse{ret=GetBlur3(uv);}; \n\nret += 1.5*GetBlur3(uv)-GetBlur1(uv);\n\nret *= 2.15;\nret = lum(ret);\nfloat3 hue_shader_x = (hue_shader*(1+treb_att))-(treb_att-1.75);\nret = lerp(.75*ret,ret*(GetBlur3(uv)-GetBlur1(uv)),(0.1*rand_preset+0.5*hue_shader_x+0.5*_qa.xyz)*ret);\nret *= ret; //darken\n//ret *= ret;\n//ret *= sqrt(ret); //brighten\n//ret = 1-ret; //invert\n}"}