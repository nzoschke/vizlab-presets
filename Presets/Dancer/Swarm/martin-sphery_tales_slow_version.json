{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0,"ob_g":0.1,"ob_a":0.3,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1x":0.5,"b2x":0.5,"b1ed":0},"shapes":[{"baseVals":{"sides":14,"num_inst":32,"rad":0.03632,"tex_ang":1.00531,"tex_zoom":1.53117,"b":1,"a":0,"g2":0,"a2":0.6,"border_b":0,"border_a":0.3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"k1 = instance/num_inst;\nn = instance*4+2000;\nx = gmegabuf(n);\ny = gmegabuf(n+1);\nz = gmegabuf(n+2);\n\nrad = .02/z;\na = 0; a2 = 0;","init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst;\nn = instance*4+2000;\nx = gmegabuf(n);\ny = gmegabuf(n+1);\nz = gmegabuf(n+2);\n\nrad = .02/z;\na = 0; a2 = 0;"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"num_inst":48,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g":1,"b":0.6,"g2":0,"border_a":0},"init_eqs_str":"a.frac=0;a.n=0;a.z=0;a.q12=0;a.y0=0;a.x0=0;a.k1=0;a.z0=0;a.copies=0;a.q2=0;a.q32=0;","frame_eqs_str":"a.sides=a.q12;a.copies=Math.floor(div(a.num_inst,16));a.n=8*Math.floor(div(a.instance,a.copies))+1E3;a.frac=div(mod(a.instance,a.copies),a.copies);a.k1=1;a.x0=a.gmegabuf[Math.floor(a.n)]*a.frac+a.megabuf[Math.floor(a.n)]*(1-a.frac)*a.k1;a.y0=a.gmegabuf[Math.floor(a.n+1)]*a.frac+a.megabuf[Math.floor(a.n+1)]*(1-a.frac)*a.k1;a.z0=a.gmegabuf[Math.floor(a.n+2)]*a.frac+a.megabuf[Math.floor(a.n+2)]*(1-a.frac);a.ang=3.14*a.frac+Math.atan2(a.x0,a.y0);a.megabuf[Math.floor(a.n)]=a.x0;\na.megabuf[Math.floor(a.n+1)]=a.y0;a.megabuf[Math.floor(a.n+2)]=a.z0;a.x=a.x0+.5;a.y=a.y0*a.q32+.5;a.z=a.z0;a.a=Math.min(div(.4,a.z),1)*(0<=a.z?1:0);a.a2=0;a.rad=div(.02-.0006*a.sides,a.z);a.r=div(a.instance,a.num_inst);a.b=1-a.r;a.g=4*pow(a.r-.5*a.q2,2);a.r2=0;a.b2=0;a.g2=0;a.border_a=.04*(6<=a.sides?1:0);","init_eqs_eel":"","frame_eqs_eel":"sides = q12;\ncopies = int(num_inst/16);\n\nn = int(instance/copies)*8+1000;\nfrac = (instance%copies)/(copies);\n\nk1 = 1;\nx0 = gmegabuf(n)*frac + megabuf(n)*(1-frac)*k1;\ny0 = gmegabuf(n+1)*frac+ megabuf(n+1)*(1-frac)*k1;\nz0 = gmegabuf(n+2)*frac+ megabuf(n+2)*(1-frac);\nang = frac*3.14 + atan2(x0,y0);\n\nmegabuf(n) = x0;\nmegabuf(n+1) = y0;\nmegabuf(n+2) = z0;\n\nx = x0 + .5;\ny = y0*q32 + .5;\nz = z0;\n\na =  min(.4/z,1) * (z >= 0) ;\na2 = 0;\n\nrad = (.02-.0006*sides)/z;\nr = instance/num_inst;\nb = 1-r;\ng = pow(r-.5*q2,2)*4;\nr2 = 0; b2 = 0; g2 = 0;\n\nborder_a = .04*(sides >= 6);"},{"baseVals":{"enabled":1,"sides":8,"additive":1,"num_inst":192,"x":0.65,"y":0.38,"rad":0.76893,"tex_zoom":0.73678,"a":0.7,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0},"init_eqs_str":"a.frac=0;a.n=0;a.z=0;a.q22=0;a.tht=0;a.y0=0;a.x0=0;a.oz=0;a.q31=0;a.k1=0;a.pulse=0;a.q11=0;a.z0=0;a.copies=0;a.v0=0;a.oy=0;a.kt=0;a.dec=0;a.q32=0;a.phi=0;a.ox=0;","frame_eqs_str":"a.copies=Math.floor(div(a.num_inst,16));a.n=8*Math.floor(div(a.instance,a.copies))+1E3;a.frac=div(mod(a.instance,a.copies),a.copies);a.k1=1.1;a.x0=a.gmegabuf[Math.floor(a.n)]*a.frac+a.megabuf[Math.floor(a.n)]*(1-a.frac)*a.k1;a.y0=a.gmegabuf[Math.floor(a.n+1)]*a.frac+a.megabuf[Math.floor(a.n+1)]*(1-a.frac)*a.k1;a.z0=a.gmegabuf[Math.floor(a.n+2)]*a.frac+a.megabuf[Math.floor(a.n+2)]*(1-a.frac);a.ang=3.14*a.frac+Math.atan2(a.x0,a.y0);a.pulse=Math.min(a.q22+.2,1);a.tht=2221.7*a.instance;\na.phi=332.5*a.instance;a.kt=6*a.time+div(a.instance,a.num_inst)*a.copies;a.v0=div(.015*a.pulse,a.z0)*(a.kt-Math.floor(a.kt));a.ox=a.x0+a.v0*Math.sin(a.tht)*Math.cos(a.phi);a.oy=a.y0+a.v0*Math.cos(a.tht);a.oz=a.z0+a.v0*Math.sin(a.tht)*Math.sin(a.phi);a.x=a.ox+.5;a.y=a.oy*a.q32+.5;a.z=a.oz;a.a=Math.min(div(.4,a.oz),1)*(0<=a.oz?1:0)*a.q11;a.a2=0;a.rad=div(.004,a.z)*(1-a.frac)*a.pulse;a.border_a=0;a.r=1;a.b=1;a.g=1;a.r2=1;a.b2=1;a.g2=1;a.dec=a.q31;a.megabuf[Math.floor(a.n)]=a.megabuf[Math.floor(a.n)]*\na.dec+(1-a.dec)*a.gmegabuf[Math.floor(a.n)];a.megabuf[Math.floor(a.n+1)]=a.megabuf[Math.floor(a.n+1)]*a.dec+(1-a.dec)*a.gmegabuf[Math.floor(a.n+1)];a.megabuf[Math.floor(a.n+2)]=a.megabuf[Math.floor(a.n+2)]*a.dec+(1-a.dec)*a.gmegabuf[Math.floor(a.n+2)];","init_eqs_eel":"","frame_eqs_eel":"copies = int(num_inst/16);\n\nn = int(instance/copies)*8+1000;\nfrac = (instance%copies)/(copies);\n\nk1 =  1.1; \nx0 = gmegabuf(n)*frac + megabuf(n)*(1-frac)*k1;\ny0 = gmegabuf(n+1)*frac+ megabuf(n+1)*(1-frac)*k1;\nz0 = gmegabuf(n+2)*frac+ megabuf(n+2)*(1-frac);\nang = frac*3.14 + atan2(x0,y0);\n\n//x0 = 0; y0 = 0; z0 = 1;\npulse = min(q22+.2,1);\nTht = instance*2221.7;\nPhi = instance*332.5;\n\nkt = time*6+instance/num_inst*copies;\nv0 = pulse*.015/z0 * (kt-int(kt));\nox = x0+v0*sin(Tht) * cos(Phi);\noy = y0+v0*cos(Tht);\noz = z0+v0*sin(Tht)*sin(Phi); \n\n\nx = ox + .5;\ny = oy*q32 + .5;\nz = oz;\n\na = min(.4/oz,1)*(oz>=0) *q11;\na2 = 0;\n\nrad = .004/z*(1-frac)*pulse;\n\nborder_a = .00;\nr = 1; b = 1; g = 1;\nr2 = 1; b2 = 1; g2 = 1;\n\n\ndec = q31; //###!\nmegabuf(n) = megabuf(n)*dec + (1-dec)*gmegabuf(n);\nmegabuf(n+1) = megabuf(n+1)*dec + (1-dec)*gmegabuf(n+1);\nmegabuf(n+2) = megabuf(n+2)*dec + (1-dec)*gmegabuf(n+2);"},{"baseVals":{"sides":12,"additive":1,"thickoutline":1,"textured":1,"num_inst":32,"x":0.6,"y":0.55,"rad":0.97237,"ang":1.25664,"tex_zoom":0.34933,"g":0.6,"g2":0,"b2":1,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"copies = int(num_inst/16);\n\nn = int(instance/copies)*8+1000;\nfrac = (instance%copies)/(copies);\n\nk1 = 1;\nx0 = gmegabuf(n)*frac + megabuf(n)*(1-frac)*k1;\ny0 = gmegabuf(n+1)*frac+ megabuf(n+1)*(1-frac)*k1;\nz0 = gmegabuf(n+2)*frac+ megabuf(n+2)*(1-frac);\nang = frac*3.14 + atan2(x0,y0);\n\nmegabuf(n) = x0;\nmegabuf(n+1) = y0;\nmegabuf(n+2) = z0;\n\nx = x0 + .5;\ny = y0*q32 + .5;\nz = z0;\n\na =  0 ;\na2 = 0;\n\nrad = (.012)/z;\n\nborder_a = .02;","init_eqs_eel":"","frame_eqs_eel":"copies = int(num_inst/16);\n\nn = int(instance/copies)*8+1000;\nfrac = (instance%copies)/(copies);\n\nk1 = 1;\nx0 = gmegabuf(n)*frac + megabuf(n)*(1-frac)*k1;\ny0 = gmegabuf(n+1)*frac+ megabuf(n+1)*(1-frac)*k1;\nz0 = gmegabuf(n+2)*frac+ megabuf(n+2)*(1-frac);\nang = frac*3.14 + atan2(x0,y0);\n\nmegabuf(n) = x0;\nmegabuf(n+1) = y0;\nmegabuf(n+2) = z0;\n\nx = x0 + .5;\ny = y0*q32 + .5;\nz = z0;\n\na =  0 ;\na2 = 0;\n\nrad = (.012)/z;\n\nborder_a = .02;"}],"waves":[{"baseVals":{"enabled":1,"samples":128,"sep":201,"spectrum":1,"additive":1,"scaling":2.15542,"smoothing":0,"r":0,"a":0.7},"init_eqs_str":"a.n=0;","frame_eqs_str":"","point_eqs_str":"a.x=a.sample;a.n=Math.floor(128*a.sample);a.gmegabuf[Math.floor(a.n)]=.5*a.gmegabuf[Math.floor(a.n)]+.5*(a.value1+a.value2)*(1+.01*(rand(100)-50));a.y=.15*a.gmegabuf[Math.floor(a.n)]+.2;a.a=0;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = sample;\n\nn = int(sample*128);\ngmegabuf(n) = gmegabuf(n)*.5 + .5* (value1+value2) * (1+.01*(rand(100)-50));\n\n\ny = gmegabuf (n)*.15+.2;\na=0;"},{"baseVals":{"enabled":1,"scaling":0.89152,"smoothing":0,"a":0.9},"init_eqs_str":"a.sw=0;a.y0=0;a.x0=0;a.base=0;a.ind=0;a.z0=0;a.q10=0;a.p2=0;a.p1=0;a.dist=0;a.m=0;","frame_eqs_str":"","point_eqs_str":"a.m=Math.floor(512*a.sample);a.sw=mod(a.m,2);a.p1=mod(a.m+1,16);a.p2=Math.floor(div(a.m,32));a.base=1E3;a.x0=.00001<Math.abs(a.sw)?a.gmegabuf[Math.floor(8*a.p1+a.base)]:a.gmegabuf[Math.floor(8*a.p2+a.base)];a.y0=.00001<Math.abs(a.sw)?a.gmegabuf[Math.floor(8*a.p1+a.base+1)]:a.gmegabuf[Math.floor(8*a.p2+a.base+1)];a.z0=.00001<Math.abs(a.sw)?a.gmegabuf[Math.floor(8*a.p1+a.base+2)]:a.gmegabuf[Math.floor(8*a.p2+a.base+2)];a.x=a.x0+.5;a.y=a.y0+.5;a.ind=5E3+16*a.p2+a.p1;a.dist=a.z0;\na.a=Math.min(div(.008,a.dist),1)*(.001<=a.dist?1:0)*a.q10;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"m = int(sample*512+.0);\nsw = (m%2);\np1 = ((m+1)%16);\np2 = int(m/32);\n\n//p1 = 15; p2 = 0;\nbase = 1000;\nx0 = if(sw,gmegabuf(p1*8+base),gmegabuf(p2*8+base));\ny0 = if(sw,gmegabuf(p1*8+base+1),gmegabuf(p2*8+base+1));\nz0 = if(sw,gmegabuf(p1*8+base+2),gmegabuf(p2*8+base+2));\n\nx = x0+.5;\ny = y0+.5;\n\nind = 5000+ p2*16+p1;\ndist = z0;\na = min(.008/dist,1) * (dist >= .001) *q10;\n\n//a = .01/z0;"},{"baseVals":{"usedots":1,"scaling":0.89152,"smoothing":0.82,"a":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.n=0;a.z2=0;a.index=0;a.q22=0;a.q13=0;a.q1=0;a.trel=0;a.flen=0;a.dec_s=0;a.dec_xs=0;a.my=0;a.beat_=0;a.is_beat=0;a.q31=0;a.betr=0;a.value=0;a.dec_m=0;a.q4=0;a.shapes=0;a.k=0;a.trig=0;a.mx=0;a.beat=0;a.vol=0;a.peak=0;a.q2=0;a.bbase=0;a.q27=0;a.reduce=0;a.q14=0;a.dist=0;a.z1=0;a.q3=0;a.t0=0;a.vol_=0;a.dec=0;a.m=0;a.q32=0;for(var b=a.index=0;3E5>b;b++)a.megabuf[Math.floor(a.index)]=.1,a.gmegabuf[Math.floor(a.index)]=0,a.index+=1;a.vol_=1;a.q10=30<=rand(100)?1:0;a.q11=30<=rand(100)?\n1:0;a.q12=9*(30<=rand(100)?1:0)+3;a.q13=Math.min(Math.max(div(rand(100),50)-.5,.2),1);a.q14=0;","frame_eqs_str":"a.dec_m=pow(.9,div(30,a.fps));a.dec_s=pow(.98,div(30,a.fps));a.dec_xs=pow(.985,div(30,a.fps));a.flen=128;a.shapes=16;a.beat=div(a.bass+a.treb+a.mid,3);a.beat_=a.beat_*a.dec_m+(1-a.dec_m)*a.beat;a.is_beat=above(a.beat,8*a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_m;a.index=mod(a.index+a.is_beat,8);a.q22=a.peak;a.q27=a.index;a.n=0;a.vol=.5;a.bbase=5E3;for(var b=0;b<a.flen;b++)a.value=a.gmegabuf[Math.floor(a.n)]*\n(1+div(1,a.n+.5)),a.trig=a.value>=a.megabuf[Math.floor(a.n)]?1:0,a.dec=.00001<Math.abs(a.trig)?.2:pow(.98-div(.1*a.n,a.flen),div(30,a.fps)),a.megabuf[Math.floor(a.n)]=a.megabuf[Math.floor(a.n)]*a.dec+(1-a.dec)*a.value,a.vol+=pow(a.megabuf[Math.floor(a.n)],2),a.n+=1;a.vol=sqrt(a.vol);a.vol_=a.dec_m*a.vol_+(1-a.dec_m)*a.vol;for(b=a.n=0;b<a.flen;b++)a.value=a.megabuf[Math.floor(a.n)],a.dec=.00001<Math.abs(a.megabuf[Math.floor(1E3+a.n)]<=a.value?1:0)?.9:.95-div(.1*a.n,a.flen),a.dec=pow(a.dec,div(30,a.fps)),\na.megabuf[Math.floor(a.n+1E3)]=a.megabuf[Math.floor(a.n+1E3)]*a.dec+div((1-a.dec)*a.value,a.vol_),a.n+=1;a.dist=2;a.reduce=div(a.flen,a.shapes);a.n=2E3;a.m=1E3+a.dist;for(b=a.k=0;b<a.shapes;b++)a.betr=div(a.megabuf[Math.floor(a.m)]+a.megabuf[Math.floor(a.m-a.dist)]+a.megabuf[Math.floor(a.m+a.dist)],3),a.megabuf[Math.floor(a.n)]=a.megabuf[Math.floor(a.m)]-a.megabuf[Math.floor(a.m+a.dist)],a.megabuf[Math.floor(a.n+1)]=a.megabuf[Math.floor(a.m)]-a.megabuf[Math.floor(a.m-a.dist)],a.z1=Math.max(div(.03,\na.betr),.05),a.z2=div(mod(a.k+a.q22*a.q14+2*a.time,a.shapes),a.shapes)+.06,a.megabuf[Math.floor(a.n+2)]=a.q13*a.z1+(1-a.q13)*a.z2,a.m+=a.reduce,a.n+=8,a.k+=1;a.n=1E3;a.m=2E3;for(b=0;b<a.shapes;b++)a.gmegabuf[Math.floor(a.n)]=div(a.megabuf[Math.floor(a.m)],a.megabuf[Math.floor(a.m+2)]),a.gmegabuf[Math.floor(a.n+1)]=div(a.megabuf[Math.floor(a.m+1)],a.megabuf[Math.floor(a.m+2)]),a.gmegabuf[Math.floor(a.n+2)]=a.megabuf[Math.floor(a.m+2)],a.mx+=div(div(a.gmegabuf[Math.floor(a.n)],a.shapes),a.fps),a.my+=\ndiv(div(a.gmegabuf[Math.floor(a.n+1)],a.shapes),a.fps),a.n+=8,a.m+=8;a.q1=div(Math.sin(8*a.mx+.1*a.time),2);a.q2=Math.sin(-8*a.my+.03*a.time);a.q3=Math.atan2(a.gmegabuf[1008],a.gmegabuf[1009]);a.trel+=div(a.bass_att,a.fps);a.q4=a.trel;a.monitor=a.q13;a.q32=a.aspecty;a.q31=Math.min(.996,a.dec_xs);","pixel_eqs_str":"a.rot=0;a.zoom=1.04;a.warp=0;a.dx=0;a.dy=0;","init_eqs_eel":"index = 0;\nloop (300000,\n  megabuf(index) = .1;\n  gmegabuf(index) = 0;\n  index = index + 1;\n);\n\nvol_=1;\n\nq10 = rand(100) >= 30;\nq11 = rand(100) >= 30;\nq12 = (rand(100) >= 30)*9+3;\nq13 = min(max((rand(100)/50-.5),.2),1);\nq14 = 0;","frame_eqs_eel":"dec_m = pow(.9, 30/fps);dec_s = pow(.98, 30/fps);dec_xs = pow(.985, 30/fps);\n\nflen = 128; shapes = 16;\n\nbeat = (bass + treb + mid)/3;\nbeat_ = beat_*dec_m + (1-dec_m)*beat; \nis_beat = above(beat, peak*8) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_m;\nindex = (index + is_beat) %8;\nq22 = peak;\nq27 = index;\n\nn = 0; vol = .5; bbase = 5000;\nloop (flen,\n  value = gmegabuf(n) * (1+1/(n+.5));\n  trig = value >= megabuf(n);\n  dec = if(trig,0.2,pow(.98-.1*n/flen,30/fps));\n  megabuf(n) = megabuf(n)*dec + (1-dec)*value;\n  vol = vol + pow(megabuf(n),2);\n  n = n+1;\n);\nvol = sqrt(vol);\nvol_ = dec_m*vol_ + (1-dec_m)*vol;\n\n// post smoothing\nn = 0;\nloop (flen,\n  value = megabuf(n);\n  dec = if (megabuf(1000+n)<=value,.9,.95-0.1*n/flen);\n  dec = pow(dec,30/fps);\n//  dec = 1; //#\n    megabuf(n+1000) = megabuf(n+1000)*dec+ (1-dec)*value/vol_;\n  n = n+1;\n);\n\n\n// Berechnung Ortskoordinaten aus Spektrum\ndist = 2; reduce = flen/shapes;\nn = 2000; m = 1000+dist; k=0;\nloop (shapes,\n  betr = (megabuf(m)+megabuf(m-dist)+megabuf(m+dist))/3;\n  megabuf(n)   = megabuf(m) - megabuf(m+dist);\n  megabuf(n+1) = megabuf(m) - megabuf(m-dist);\n  z1 = max(.03/betr,.05);\n  z2 = ((k+q22*q14+time*2)%shapes)/shapes+.06;\n  megabuf(n+2) = q13*z1+(1-q13)*z2;\n  m = m + reduce; n = n+8; k= k+1;\n);\n\n\n//Projektion\nn = 1000; m = 2000;\nloop (shapes,\n  gmegabuf(n) = megabuf(m)/megabuf(m+2);\n  gmegabuf(n+1) = megabuf(m+1)/megabuf(m+2);\n  gmegabuf(n+2) = megabuf(m+2);\n  mx = mx + gmegabuf(n)/shapes/fps;\n  my = my + gmegabuf(n+1)/shapes/fps;\n  n = n+8; m = m+8;\n);\n\n\nq1 = sin(8*mx+time*.1)/2;\nq2 = sin(-8*my+time*.03);\nq3 = atan2(gmegabuf(1000+8),gmegabuf(1000+8+1));\n\ntrel = trel + bass_att/fps;\nq4 = trel;\n\nmonitor = q13;\n\nq32 = aspecty;\nq31 = min(.996,dec_xs);","pixel_eqs_eel":"rot = 0.0; zoom = 1.04; warp = 0; dx = 0; dy = 0;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) * exp(\n    (-2.0 * dot (((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29)))\n  )) - 0.003);\n  vec3 tmpvar_2;\n  tmpvar_2 = max (ret_1, (texture (sampler_main, uv).xyz * 0.3));\n  ret_1 = tmpvar_2;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = tmpvar_2;\n  ret = tmpvar_3.xyz;\n }","comp":"float sw1;\nvec2 xlat_mutableuv2;\n shader_body { \n  sw1 = float((rand_preset.x >= 0.4));\n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((0.2 / rad) + (time / 4.0));\n  tmpvar_3.y = (ang / 3.14);\n  xlat_mutableuv2 = (tmpvar_3 * 2.0);\n  vec2 tmpvar_4;\n  tmpvar_4 = sin(((\n    (xlat_mutableuv2 * 3.141)\n   / 2.0) + (time * 0.1)));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noise_hq, (xlat_mutableuv2 + sqrt(dot (tmpvar_4, tmpvar_4))));\n  vec2 tmpvar_6;\n  tmpvar_6.x = (1.0 - uv.x);\n  tmpvar_6.y = uv.y;\n  ret_2 = (texture (sampler_main, uv).xyz + texture (sampler_main, tmpvar_6).xyz);\n  uv_1 = (uv + ((\n    (((sw1 * rad) * (tmpvar_5.xy - 0.5)) / 2.0)\n   * \n    float((tmpvar_5.x <= rand_preset.y))\n  ) * sw1));\n  vec2 tmpvar_7;\n  tmpvar_7.x = (1.0 - uv_1.x);\n  tmpvar_7.y = uv_1.y;\n  ret_2 = (ret_2 + ((\n    ((((texture (sampler_blur2, uv_1).xyz * scale2) + bias2) + ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)) * min ((0.5 + (treb_att / 4.0)), 2.0))\n   * \n    (1.0 + sw1)\n  ) * clamp (\n    (1.0 - (dot (ret_2, vec3(0.32, 0.49, 0.29)) / 2.0))\n  , 0.0, 1.0)));\n  ret_2 = (ret_2 + (float(\n    !(bool(sw1))\n  ) * vec3((0.2 * \n    ((0.5 + ((uv.x - 0.5) * q1)) + ((uv.y - 0.5) * q2))\n  ))));\n  vec3 tmpvar_8;\n  tmpvar_8 = mix ((ret_2 * (\n    (hue_shader * 2.0)\n   - 1.0)), ret_2, vec3(dot (ret_2, vec3(0.32, 0.49, 0.29))));\n  ret_2 = tmpvar_8;\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = tmpvar_8;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"sampler sampler_pw_noise_lq;\nfloat dx,dy,rad1,mask1;\nfloat2 uv0, uv1,uv4,rsk, Kugel1,dz1;\n\nshader_body {\nuv0 = uv;\n\nfloat2 uv1 = float2(uv.x,uv.y+texsize.w*3);\nret = GetPixel(uv1);\n\nfloat fak = exp(-2*lum(GetBlur2(uv_orig)));\nret = (GetBlur2(uv))*fak-.003 ;\n\nfloat3 add = GetPixel(uv)*.3;\nret = max(ret,add);\n//ret = 0;\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\nfloat2 uv0, uv1, uv2,uv4,rsk,dz1,Kugel1;;\nstatic const float sw1 =  (rand_preset.x) >= .4;\nstatic const float sw2 =  (rand_preset.y);\n\nshader_body {\nuv0 = uv;\nuv2 = float2(.2/rad+time/4,ang/3.14)*2;\nfloat mod = length(sin(uv2*3.141/2+time*.1));\nfloat2 noise = tex2D (sampler_noise_hq,uv2+mod).rg;\nfloat mask = (noise.r <= sw2);\nfloat2 rohr = sw1*rad * (noise-.5) /2*mask;\n\nuv1 = float2(1-uv.x,uv.y);\nret =  GetPixel(uv)+GetPixel(uv1);\n\nfloat3 back = .2*(.5+(uv.x-.5)*q1+(uv.y-.5)*q2);\nuv+= rohr * sw1;\n\nuv1 = float2(1-uv.x,uv.y);\nret += (GetBlur2(uv) + GetBlur2(uv1)) *min(.5+treb_att/4,2) *(1+1*sw1) * saturate(1-lum(ret)/2);\nret += !sw1*back;\nret = lerp(ret*(hue_shader*2-1),ret,lum(ret));;\n//ret = GetPixel(uv);\n}"}