{"version":2,"baseVals":{"rating":5,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":1.331,"fshader":1,"zoom":1.00046,"dx":-0.001,"warp":0.01221,"sy":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.01,"ob_a":0.06,"ib_size":0,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":1.38615,"tex_zoom":1.14605,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.05,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.25*a.time;","init_eqs_eel":"","frame_eqs_eel":"ang = .25*time;"},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.0677,"ang":0.7539,"tex_zoom":0.7797,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.01,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.ang=Math.sin(.15*a.q1);a.x=.05*Math.sin(.5*a.q1+3.14)+.6;a.y=.05*Math.cos(.63*a.q1+3.14)+.6;","init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\nx=sin(q1*0.5+3.14) * 0.05 + 0.6;\ny=cos(q1*0.63+3.14)* 0.05 + 0.6"},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.0677,"ang":0.7539,"tex_zoom":0.7797,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.01,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.ang=Math.sin(.15*a.q1);a.x=.05*Math.sin(.5*a.q1)+.4;a.y=.05*Math.cos(.63*a.q1)+.4;","init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.4;\ny=cos(q1*0.63)* 0.05 + 0.4;"},{"baseVals":{"sides":5,"textured":1,"rad":1.0677,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.5;\ny=cos(q1*0.63)* 0.05 + 0.5","init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.5;\ny=cos(q1*0.63)* 0.05 + 0.5"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0.5,"b":0.1},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.q1=0;a.cosang=0;a.dz=0;a.dx=0;a.xq=0;a.t3=0;a.flip=0;a.t6=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.sinang=0;a.tm=0;a.dy=0;a.t2=0;a.zp=0;a.t4=0;","frame_eqs_str":"a.t1=a.bass_att*(.5*Math.sin(a.time)+.5);a.t2=a.bass_att*(.5*Math.sin(a.time+2.1)+.5);a.t3=a.treb_att*(.5*Math.sin(a.time+4.2)+.5);a.t4=a.treb_att*(.5*Math.sin(-a.time+1.1)+.5);a.t5=a.mid_att*(.5*Math.sin(-a.time+3.1)+.5);a.t6=a.mid_att*(.5*Math.sin(-a.time+5.2)+.5);","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip=(a.flip+1)*below(a.flip,1);a.xp=0;a.yp=.1*a.flip+.2*(.5*Math.sin(a.tm)+.5);a.zp=0;a.ang=.5*Math.sin(2*a.tm)+.5;a.xq=a.xp;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.yq=a.yp;a.zq=a.zp;a.ang=8*a.tm;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*\nMath.sin(2*a.tm-.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.ang=-1+Math.cos(3.1*a.tm+.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(2.3*a.tm)-1.05;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp*a.sinang+a.zp*a.cosang;a.yq=a.yp;a.zq=a.xp*a.cosang-a.zp*a.sinang;a.ang=.5*Math.cos(a.tm)-.5;\na.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq;a.yp=a.yq*a.cosang-a.zq*a.sinang;a.zp=a.yq*a.sinang+a.zq*a.cosang;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.dx=.00001<Math.abs(a.flip)?a.x:a.dx-a.x;a.dy=.00001<Math.abs(a.flip)?a.y:a.dy-a.y;a.dz=pow(a.dx*a.dx+a.dy*a.dy,.5);a.ang=Math.abs(Math.asin(div(a.dx,a.dz)));a.cang=.00001<Math.abs(a.flip)?a.cang:.00001<Math.abs(below(a.dx,0))?.00001<Math.abs(below(a.dy,0))?-a.ang:3.141592654+a.ang:.00001<Math.abs(below(a.dy,\n0))?a.ang:3.141592654-a.ang;a.r=.5+.5*Math.sin(a.cang);a.g=.5+.5*Math.sin(a.cang+1.047197);a.b=.5+.5*Math.sin(a.cang+2.094395);a.a=(1-a.sample)*above(a.sample,0);","init_eqs_eel":"","frame_eqs_eel":"t1=bass_att*(sin(time)*0.5+0.5);\nt2=bass_att*(sin(time+2.1)*0.5+0.5);\nt3=treb_att*(sin(time+4.2)*0.5+0.5);\n\nt4=treb_att*(sin(-time+1.1)*0.5+0.5);\nt5=mid_att*(sin(-time+3.1)*0.5+0.5);\nt6=mid_att*(sin(-time+5.2)*0.5+0.5);","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=(flip+1)*below(flip,1);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nsinang=sin(ang);cosang=cos(ang);\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\ndx = if(flip,x,dx-x);\ndy = if(flip,y,dy-y);\ndz = pow(dx*dx+dy*dy,.5);\nang = abs(asin(dx/dz));\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\nr = .5 + .5*sin(cang);\ng = .5 + .5*sin(cang + 1.047197);\nb = .5 + .5*sin(cang + 2.094395);\n\na=(1-sample)*above(sample,0);\n"},{"baseVals":{"enabled":1,"thick":1,"r":0.2,"b":0.6},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.q1=0;a.cosang=0;a.dz=0;a.dx=0;a.xq=0;a.t3=0;a.flip=0;a.t6=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.sinang=0;a.tm=0;a.dy=0;a.t2=0;a.zp=0;a.t4=0;","frame_eqs_str":"a.t1=a.mid_att*(.5*Math.sin(1.57+a.time)+.5);a.t2=a.treb_att*(.5*Math.sin(1.57+a.time+2.1)+.5);a.t3=a.mid_att*(.5*Math.sin(1.57+a.time+4.2)+.5);a.t4=a.bass_att*(.5*Math.sin(-a.time+1.1)+.5);a.t5=a.bass_att*(.5*Math.sin(-a.time+3.1)+.5);a.t6=a.treb_att*(.5*Math.sin(-a.time+5.2)+.5);","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=.1*a.flip+.2*(.5*Math.sin(a.tm)+.5)+.1;a.yp=-a.yp;a.zp=0;a.ang=.5*Math.sin(2*a.tm)+.5;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.yq=a.yp;a.zq=a.zp;a.ang=8*a.tm;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.3;\na.ang=3.14+1.5*Math.sin(2*a.tm-.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.ang=-1+Math.cos(3.1*a.tm+.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(2.3*a.tm)-1.05;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp*a.sinang+a.zp*a.cosang;a.yq=a.yp;a.zq=a.xp*a.cosang-a.zp*a.sinang;a.ang=.5*Math.cos(a.tm)-\n.5;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq;a.yp=a.yq*a.cosang-a.zq*a.sinang;a.zp=a.yq*a.sinang+a.zq*a.cosang;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.dx=.00001<Math.abs(a.flip)?a.x:a.dx-a.x;a.dy=.00001<Math.abs(a.flip)?a.y:a.dy-a.y;a.dz=pow(a.dx*a.dx+a.dy*a.dy,.5);a.ang=Math.abs(Math.asin(div(a.dx,a.dz)));a.cang=.00001<Math.abs(a.flip)?a.cang:.00001<Math.abs(below(a.dx,0))?.00001<Math.abs(below(a.dy,0))?-a.ang:3.141592654+a.ang:.00001<Math.abs(below(a.dy,\n0))?a.ang:3.141592654-a.ang;a.r=.5+.5*Math.sin(a.cang);a.g=.5+.5*Math.sin(a.cang+1.047197);a.b=.5+.5*Math.sin(a.cang+2.094395);a.a=(1-a.sample)*above(a.sample,0);","init_eqs_eel":"","frame_eqs_eel":"t1=mid_att*(sin(1.57+time)*0.5+0.5);\nt2=treb_att*(sin(1.57+time+2.1)*0.5+0.5);\nt3=mid_att*(sin(1.57+time+4.2)*0.5+0.5);\n\nt4=bass_att*(sin(-time+1.1)*0.5+0.5);\nt5=bass_att*(sin(-time+3.1)*0.5+0.5);\nt6=treb_att*(sin(-time+5.2)*0.5+0.5);","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\nyp=-yp;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\ndx = if(flip,x,dx-x);\ndy = if(flip,y,dy-y);\ndz = pow(dx*dx+dy*dy,.5);\nang = abs(asin(dx/dz));\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\nr = .5 + .5*sin(cang);\ng = .5 + .5*sin(cang + 1.047197);\nb = .5 + .5*sin(cang + 2.094395);\n\na=(1-sample)*above(sample,0);"},{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0.5,"b":0.1},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.q1=0;a.cosang=0;a.dz=0;a.dx=0;a.xq=0;a.t3=0;a.flip=0;a.t6=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.sinang=0;a.tm=0;a.dy=0;a.t2=0;a.zp=0;a.t4=0;","frame_eqs_str":"a.t1=a.treb_att*(.5*Math.sin(a.time+3.14)+.5);a.t2=a.mid_att*(.5*Math.sin(a.time+2.1+3.14)+.5);a.t3=a.bass_att*(.5*Math.sin(a.time+4.2+3.14)+.5);a.t4=a.bass_att*(.5*Math.sin(-a.time+4.24)+.5);a.t5=a.treb_att*(.5*Math.sin(-a.time+6.24)+.5);a.t6=a.mid_att*(.5*Math.sin(-a.time+8.34)+.5);","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip=(a.flip+1)*below(a.flip,1);a.xp=0;a.yp=.1*a.flip+.2*(.5*Math.sin(a.tm)+.5);a.zp=0;a.ang=.5*Math.sin(2*a.tm)+.5;a.xq=a.xp;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.yq=a.yp;a.zq=a.zp;a.ang=8*a.tm;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*\nMath.sin(2*a.tm-.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.ang=-1+Math.cos(3.1*a.tm+.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(2.3*a.tm)-1.05;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp*a.sinang+a.zp*a.cosang;a.yq=a.yp;a.zq=a.xp*a.cosang-a.zp*a.sinang;a.ang=.5*Math.cos(a.tm)-.5;\na.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq;a.yp=a.yq*a.cosang-a.zq*a.sinang;a.zp=a.yq*a.sinang+a.zq*a.cosang;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.dx=.00001<Math.abs(a.flip)?a.x:a.dx-a.x;a.dy=.00001<Math.abs(a.flip)?a.y:a.dy-a.y;a.dz=pow(a.dx*a.dx+a.dy*a.dy,.5);a.ang=Math.abs(Math.asin(div(a.dx,a.dz)));a.cang=.00001<Math.abs(a.flip)?a.cang:.00001<Math.abs(below(a.dx,0))?.00001<Math.abs(below(a.dy,0))?-a.ang:3.141592654+a.ang:.00001<Math.abs(below(a.dy,\n0))?a.ang:3.141592654-a.ang;a.g=.5+.5*Math.sin(a.cang);a.b=.5+.5*Math.sin(a.cang+1.047197);a.r=.5+.5*Math.sin(a.cang+2.094395);a.a=(1-a.sample)*above(a.sample,0);","init_eqs_eel":"","frame_eqs_eel":"t1=treb_att*(sin(time+3.14)*0.5+0.5);\nt2=mid_att*(sin(time+2.1+3.14)*0.5+0.5);\nt3=bass_att*(sin(time+4.2+3.14)*0.5+0.5);\n\nt4=bass_att*(sin(-time+1.1+3.14)*0.5+0.5);\nt5=treb_att*(sin(-time+3.1+3.14)*0.5+0.5);\nt6=mid_att*(sin(-time+5.2+3.14)*0.5+0.5);","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=(flip+1)*below(flip,1);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nsinang=sin(ang);cosang=cos(ang);\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\ndx = if(flip,x,dx-x);\ndy = if(flip,y,dy-y);\ndz = pow(dx*dx+dy*dy,.5);\nang = abs(asin(dx/dz));\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\ng = .5 + .5*sin(cang);\nb = .5 + .5*sin(cang + 1.047197);\nr = .5 + .5*sin(cang + 2.094395);\n\na=(1-sample)*above(sample,0);\n"},{"baseVals":{"thick":1,"additive":1,"g":0.3,"b":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\ntm=q1 ;\nphs=-sample*0.5;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\nang=cos(tm*2+phs-2)*1.5;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5 +phs);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2+phs)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm+phs)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=-xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample)*0.05;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\ntm=q1 ;\nphs=-sample*0.5;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\nang=cos(tm*2+phs-2)*1.5;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5 +phs);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2+phs)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm+phs)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=-xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample)*0.05;\n"}],"init_eqs_str":"a.ripple3r=0;a.ripple3y=0;a.ripple1s=0;a.ripple1y=0;a.q1=0;a.ripple2y=0;a.ripple3x=0;a.ripple2r=0;a.ripple3s=0;a.ripple1x=0;a.q2=0;a.q3=0;a.ripple2x=0;a.ripple1r=0;a.ripple2s=0;","frame_eqs_str":"a.warp=a.decay;a.dy=-.0015;a.dx=-.0015;a.ripple1x=.00001<Math.abs(equal(a.ripple1r,0))?1.01*Math.floor(rand(100)):a.ripple1x;a.ripple1y=.00001<Math.abs(equal(a.ripple1r,0))?1.01*Math.floor(rand(100)):a.ripple1y;a.ripple1s=.00001<Math.abs(equal(a.ripple1r,0))?1.0001*(25+Math.floor(rand(25))):a.ripple1s;a.ripple1r=(a.ripple1r+a.ripple1s)*below(a.ripple1r,2.7);a.ripple2x=.00001<Math.abs(equal(a.ripple2r,0))?1.01*Math.floor(rand(100)):a.ripple2x;a.ripple2y=.00001<Math.abs(equal(a.ripple2r,\n0))?1.01*Math.floor(rand(100)):a.ripple2y;a.ripple2s=.00001<Math.abs(equal(a.ripple2r,0))?1.0001*(25+Math.floor(rand(25))):a.ripple2s;a.ripple2r=(a.ripple2r+a.ripple2s)*below(a.ripple2r,2.7);a.ripple3x=.00001<Math.abs(equal(a.ripple3r,0))?1.01*Math.floor(rand(100)):a.ripple3x;a.ripple3y=.00001<Math.abs(equal(a.ripple3r,0))?1.01*Math.floor(rand(100)):a.ripple3y;a.ripple3s=.00001<Math.abs(equal(a.ripple3r,0))?1.0001*(25+Math.floor(rand(25))):a.ripple3s;a.ripple3r=(a.ripple3r+a.ripple3s)*below(a.ripple3r,\n2.7);a.q1=.00001<Math.abs(equal(mod(a.frame,3),0))?a.ripple1x:.00001<Math.abs(equal(mod(a.frame,3),1))?a.ripple2x:a.ripple3x;a.q2=.00001<Math.abs(equal(mod(a.frame,3),0))?a.ripple1y:.00001<Math.abs(equal(mod(a.frame,3),1))?a.ripple2y:a.ripple3y;a.q3=.00001<Math.abs(equal(mod(a.frame,3),0))?a.ripple1r:.00001<Math.abs(equal(mod(a.frame,3),1))?a.ripple2r:a.ripple3r;a.wave_r+=.35*(.6*Math.sin(.98*a.time)+.4*Math.sin(1.047*a.time));a.wave_g+=.35*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.wave_b+=\n.35*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.wave_y+=Math.cos(.2*a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"warp=decay;\ndy=-0.0015;\ndx=-0.0015;\nripple1x = if(equal(ripple1r,0),1.01*int(rand(100)),ripple1x);\nripple1y = if(equal(ripple1r,0),1.01*int(rand(100)),ripple1y);\nripple1s = if(equal(ripple1r,0),1.0001*(25+int(rand(25))),ripple1s);\nripple1r = (ripple1r + ripple1s)*below(ripple1r,2.7);\nripple2x = if(equal(ripple2r,0),1.01*int(rand(100)),ripple2x);\nripple2y = if(equal(ripple2r,0),1.01*int(rand(100)),ripple2y);\nripple2s = if(equal(ripple2r,0),1.0001*(25+int(rand(25))),ripple2s);\nripple2r = (ripple2r + ripple2s)*below(ripple2r,2.7);\nripple3x = if(equal(ripple3r,0),1.01*int(rand(100)),ripple3x);\nripple3y = if(equal(ripple3r,0),1.01*int(rand(100)),ripple3y);\nripple3s = if(equal(ripple3r,0),1.0001*(25+int(rand(25))),ripple3s);\nripple3r = (ripple3r + ripple3s)*below(ripple3r,2.7);\nq1 = if(equal(frame%3,0),ripple1x,if(equal(frame%3,1),ripple2x,ripple3x));\nq2 = if(equal(frame%3,0),ripple1y,if(equal(frame%3,1),ripple2y,ripple3y));\nq3 = if(equal(frame%3,0),ripple1r,if(equal(frame%3,1),ripple2r,ripple3r));\nwave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\nwave_y=wave_y+cos(time*.20);","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + ((0.004 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ).xy * vec2(0.0, 1.0)));\n  uv6_2 = (0.4 * sin((\n    (((uv - 0.5) * aspect.xy) * 18.0)\n   * rand_frame.xy)));\n  vec3 tmpvar_3;\n  tmpvar_3.x = (treb * 0.5);\n  tmpvar_3.y = (bass * 0.5);\n  tmpvar_3.z = (mid * 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.15 * (vec3((0.051 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * tmpvar_3))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (abs((\n    ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2)\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\n  ret_2 = (ret_2 * 0.85);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;\n\n\nuv6 = .4*sin(uv1*18*rand_frame);\nmus = .051/(length(uv6));\nmus *= float3 (treb*.5,bass*.5,mid*.5);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .15*mus;\nfloat2 uv2 = (uv_orig-.5)-float3(bass*.1,treb*.1+0.1*q25,mid*.1);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"\n\n\n\nshader_body\n{\n    uv = 0.05 + 0.9*uv;\n    ret = tex2D(sampler_main, uv).xyz;\n      // SUPER GLOW EDGES - looks awesome w/octopus\n      float3 avg_col = GetBlur2(uv);\n      ret = abs(avg_col - ret)*6;\n    ret *= .85; // a little bit of overbright\n}"}