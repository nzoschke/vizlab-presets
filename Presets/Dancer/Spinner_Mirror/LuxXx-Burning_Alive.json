{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"darken":1,"wave_a":0.001,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_r":0.8,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0.75,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.q1=0;a.tex_capture=0;a.q3=0;a.tex_saw=.4;","frame_eqs_str":"a.ang=.2*a.q1;a.tex_capture=above(a.q3,2);a.tex_zoom=.6;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n\ntex_capture = above(q3,2);\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"textured":1,"x":0.25,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.q1=0;a.tex_capture=0;a.q3=0;a.tex_saw=.4;","frame_eqs_str":"a.ang=.2*a.q1;a.tex_capture=above(a.q3,2);a.tex_zoom=.6;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n//x = 0.5 + 0.2*sin(q2);\n//y = 0.5 + (0.3*sin(q2));\n\ntex_capture = above(q3,2);\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"textured":1,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.q1=0;a.tex_capture=0;a.q3=0;a.tex_saw=.4;","frame_eqs_str":"a.ang=.2*a.q1;a.tex_capture=above(a.q3,2);a.tex_zoom=.6;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n//x = 0.5 + 0.2*sin(q2);\n//y = 0.5 + (0.3*sin(q2));\n\ntex_capture = above(q3,2);\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":2.41448,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q1=0;a.tex_capture=0;a.q3=0;","frame_eqs_str":"a.x=.5+.1*Math.sin(1.5*a.q1);a.y=.5+.1*Math.sin(1.7*a.q1);a.ang=.15*a.q1;a.tex_capture=above(a.q3,2);a.tex_zoom=.6;","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.1*sin(q1*1.5);\ny = 0.5 + 0.1*sin(q1*1.7);\nang = q1*0.15;\n\ntex_capture = above(q3,2);\ntex_zoom = 0.6;"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_str":"a.q1=0;a.speed=0;a.v=0;a.xs=0;a.ys=0;","frame_eqs_str":"","point_eqs_str":"a.q1=0;a.speed=.6*a.bass_att;a.v=1E6*a.sample+a.value2*a.bass*.1;a.xs+=Math.sin(a.v)*a.speed*Math.atan(1.51*a.v);a.ys+=Math.sin(a.v)*a.speed*Math.atan(a.v);a.x=.5+.5*Math.sin(.1*a.xs)*Math.cos(2*a.time+a.xs);a.y=.5+.5*Math.sin(.1*a.ys)*Math.cos(2.1*a.time+a.xs);a.x=.6*a.x+.3;a.y=a.y;a.y*=.8;a.r=.5*Math.sin(1.22*a.time)+.6+a.x;a.g=.4+.4*Math.sin(1.307*a.time+3*a.y);a.b=.4+.4*Math.sin(1.959*a.time+a.x*a.x*a.y);a.xs=.00001<Math.abs(above(a.xs,1E3))?0:a.xs;a.ys=.00001<Math.abs(above(a.ys,\n1E3))?0:a.ys;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.6;\nv = sample*1000000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v)*speed*atan(v*1.51);\nys = ys + sin(v)*speed*atan((v));\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = x*0.6 + 0.3;\ny = y;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*1.22) + 0.1 + x;\ng = 0.4 + 0.4*sin(time*1.307 + y*3);\nb = 0.4 + 0.4*sin(time*1.959 + x*x*y);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_str":"a.q1=0;a.speed=0;a.v=0;a.xs=0;a.ys=0;","frame_eqs_str":"","point_eqs_str":"a.q1=0;a.speed=.6*a.bass_att;a.v=1E6*a.sample+a.value2*a.bass*.1;a.xs+=Math.sin(a.v)*a.speed*Math.atan(1.51*a.v);a.ys+=Math.sin(a.v)*a.speed*Math.atan(a.v);a.x=.5+.5*Math.sin(.1*a.xs)*Math.cos(2*a.time+a.xs);a.y=.5+.5*Math.sin(.1*a.ys)*Math.cos(2.1*a.time+a.xs);a.x=.6*a.x+.3;a.x=-a.x+1;a.y=a.y;a.y*=.8;a.r=.5*Math.sin(1.22*a.time)+.6+a.x;a.g=.4+.4*Math.sin(1.307*a.time+3*a.y);a.b=.4+.4*Math.sin(1.959*a.time+a.x*a.x*a.y);a.xs=.00001<Math.abs(above(a.xs,1E3))?0:a.xs;a.ys=.00001<\nMath.abs(above(a.ys,1E3))?0:a.ys;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.6;\nv = sample*1000000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v)*speed*atan(v*1.51);\nys = ys + sin(v)*speed*atan((v));\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = x*0.6 + 0.3;\nx = -x + 1;\ny = y;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*1.22) + 0.1 + x;\ng = 0.4 + 0.4*sin(time*1.307 + y*3);\nb = 0.4 + 0.4*sin(time*1.959 + x*x*y);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = x*0.6;\ny = y*0.9 + 0.05 + bass*0.08;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\ng = 0.4 + 0.4*sin(time*1.478);\nb = 0.4 + 0.4*sin(time*1.125);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = x*0.6;\ny = y*0.9 + 0.05 + bass*0.08;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\ng = 0.4 + 0.4*sin(time*1.478);\nb = 0.4 + 0.4*sin(time*1.125);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = -x*0.6 + 1;\ny = y*0.9 + 0.05 + bass*0.08;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\ng = 0.4 + 0.4*sin(time*1.478);\nb = 0.4 + 0.4*sin(time*1.125);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = -x*0.6 + 1;\ny = y*0.9 + 0.05 + bass*0.08;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\ng = 0.4 + 0.4*sin(time*1.478);\nb = 0.4 + 0.4*sin(time*1.125);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_str":"a.index2=0;a.index=0;a.q18=0;a.q22=0;a.q21=0;a.q6=0;a.movex=0;a.q1=0;a.dec_med=0;a.q5=0;a.trel=0;a.q9=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.tran=0;a.spd=0;a.q4=0;a.ran=0;a.q26=0;a.p2=0;a.rott_=0;a.avg=0;a.movez=0;a.q19=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q32=0;a.q7=0;a.q28=0;a.q30=0;a.q20=0;a.q8=0;a.p1=2E3;a.p2=200;a.p3=50;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.9,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.1+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),5);a.monitor=a.index2;a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;\na.q26=a.bass+a.mid+a.treb;a.q27=a.index;a.q28=a.index2;a.k1=a.is_beat*equal(mod(a.index,2),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott_=div(3.1416*a.p2,4);a.rott+=div(6,a.fps)*a.q2;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.ran=bnot(a.q24)*a.ran+a.q24*(rand(50)-24);a.tran=Math.tan(a.ran);a.tran=Math.max(a.tran,-5);a.tran=Math.min(a.tran,5);a.trel=a.trel+div(.6,a.fps)*a.tran+a.q24;a.q5=Math.cos(a.trel);a.q6=Math.sin(a.trel);a.q7=-a.q6;a.q8=\na.q5;a.movex=a.movex*a.dec_slow+div(3*Math.sin(a.rott),a.fps);a.q9=a.movex;a.spd=a.spd*bnot(a.q24)+a.q26*a.q24;a.movez+=div(.15,a.fps)*a.spd;a.q30=a.movez;a.mv_x=20;a.mv_y=15;a.mv_a=.1;a.mv_l=0;a.q18=Math.sin(div(a.time,7));a.q19=Math.sin(div(a.time,11));a.q32=pow(.98,div(30,a.fps));","pixel_eqs_str":"a.zoom=1;a.warp=.1;","init_eqs_eel":"p1 = 2000; p2 = 200; p3=50;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .1+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%5;\nmonitor = index2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\nq27 = index;\nq28 = index2;\n\nk1 =  is_beat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott_ = p2 * 3.1416/4;\n\nrott =  rott +  .2*30/fps*q2;\n\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nran = bnot(q24)*ran + q24 * (rand(50)-24);\ntran = tan(ran);\ntran = max(tran,-5);\ntran = min(tran,5);\n\ntrel = trel + .02*30/fps*tran+q24;\nq5 = cos(trel);\nq6 = sin(trel);\nq7 = -q6;\nq8 = q5;\n\nmovex = movex*dec_slow + .1*sin(rott)*30/fps;\nq9 = movex;\n\nspd = spd*bnot(q24) + q26*q24;\nmovez = movez + .005*30/fps*spd;\nq30 = movez;\n//q30 = .3* (sin(time/45) + 1.5);\n\nmv_x = 20;\nmv_y = 15;\nmv_a = .1;\nmv_l = 0;\n\nq18 = sin(time/7);\nq19 = sin(time/11);\n\nq32 = pow(0.98, 30/fps); //fade","pixel_eqs_eel":"zoom = 1;\nwarp = .1;","warp":" shader_body { \n  vec3 z_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = mix (uv_orig, uv, vec2(0.2, 0.2));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\n  float tmpvar_5;\n  tmpvar_5 = ((tmpvar_4.x * tmpvar_4.y) * tmpvar_4.y);\n  z_1.x = (tmpvar_4.x + ((\n    (-(tmpvar_5) + (0.035 * (1.0 - tmpvar_4.x)))\n   + 0.0007) * 9.0));\n  z_1.y = (tmpvar_4.y + ((tmpvar_5 - \n    (0.095 * tmpvar_4.y)\n  ) * 9.0));\n  z_1.z = (tmpvar_4.z - 0.02);\n  vec2 tmpvar_6;\n  tmpvar_6 = (0.3 * texsize.zw);\n  z_1.x = (z_1.x + (1.8 * (\n    (0.25 * (((texture (sampler_main, \n      (tmpvar_3 + tmpvar_6)\n    ).xyz + texture (sampler_main, \n      (tmpvar_3 + (tmpvar_6 * vec2(-1.0, 1.0)))\n    ).xyz) + texture (sampler_main, (tmpvar_3 + \n      (tmpvar_6 * vec2(1.0, -1.0))\n    )).xyz) + texture (sampler_main, (tmpvar_3 - tmpvar_6)).xyz))\n   - texture (sampler_main, tmpvar_3).xyz)).x);\n  ret_2.yz = z_1.yz;\n  ret_2.x = (z_1.x + (0.09 * (\n    (texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz * 2.0)\n   - 1.0)).x);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_2;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (((uv - 0.5) * aspect.xy) + 0.5);\n  vec2 tmpvar_3;\n  tmpvar_3 = (1.0 - uv_1);\n  ret_2 = ((texture (sampler_main, uv_1).xyz + (2.0 * \n    ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2)\n  )) + (texture (sampler_main, tmpvar_3).xyz + (2.0 * \n    ((texture (sampler_blur2, tmpvar_3).xyz * scale2) + bias2)\n  )));\n  ret_2 = (ret_2 * 1.4);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_2;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n  float2 uv2 = lerp(uv_orig, uv, 0.2);\n\n  // diffused version:\n  float ss = 0.3;\n  float3 blur = 0.25*(\n    tex2D(sampler_main, uv2+ss*texsize.zw*float2( 1, 1)).xyz +\n    tex2D(sampler_main, uv2+ss*texsize.zw*float2(-1, 1)).xyz +\n    tex2D(sampler_main, uv2+ss*texsize.zw*float2( 1,-1)).xyz +\n    tex2D(sampler_main, uv2+ss*texsize.zw*float2(-1,-1)).xyz\n  );\n\n  // diffusion:  \n  ret = tex2D(sampler_main,uv2);//blur;\n\n  float F2 = 0.035;\n  float k2 = 0.060;\n  float s = 0.025;\n  float scale = 9;\n\n  // reaction:\n  float3 z = ret;\n  float uvv = ret.x*ret.y*ret.y;\n  z.x += (-uvv + F2*(1-ret.x) + 0.0007)*scale;\n  z.y += (uvv - (F2+k2)*ret.y)*scale;\n  //z.x += s*(16-ret.x*ret.y);\n  //z.y += s*(ret.x*ret.y - ret.y - ret.z);\n  z.z -= 0.02;\n\n  // apply laplacian:\n  z.x += (blur - GetPixel(uv2))*0.2*scale;\n\n  ret = z;  \n  //ret *= 0.98 + 0.02*saturate( (0.75 - rad )*10 );\n  //ret *= 0.99;\n\n  // add noise:\n  ret.x += 0.09*(tex2d(sampler_noise_lq, uv*texsize.xy*texsize_noise_lq.zw + rand_frame.xy).xyz*2-1);\n\n  // darken (decay) over time\n  //ret = (ret - 0.002)*0.99;\n}","comp_hlsl":"shader_body\n{\nuv = (uv-.5)* aspect.xy + .5;\nfloat2 uv1 = 1-uv;\n\nfloat3 ret0 = tex2D (sampler_main,uv) +2*GetBlur2 (uv);\nfloat3 ret1 = tex2D (sampler_main,uv1) + 2*GetBlur2 (uv1);\n\n\n\n\nret = ret0 + ret1  ;\n\n    ret *= 1.4; //gamma\n//    ret *= ret; //darken\n}"}