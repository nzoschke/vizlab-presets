{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":64,"thickoutline":1,"textured":1,"rad":0.35951,"tex_zoom":1.87512,"r":0,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"a2":1,"border_b":0,"border_a":0.5},"init_eqs_str":"a.vis=0;a.q28=0;","frame_eqs_str":"a.tex_ang=a.time;a.tex_zoom=2+Math.sin(div(a.time,3));a.vis=above(a.q28,2);a.a=a.vis;a.a2=.5*a.vis;a.border_a=a.vis;","init_eqs_eel":"","frame_eqs_eel":"tex_ang = time;\ntex_zoom = 2 + sin(time/3);\n\nvis = above(q28,2);\na = vis; a2 = vis*.5; border_a = vis;"},{"baseVals":{"enabled":1,"additive":1,"thickoutline":1,"num_inst":12,"x":0.6,"rad":0.02217,"tex_zoom":1.8315,"g":0.6,"a":0.9,"g2":0,"border_g":0.59,"border_b":0,"border_a":1},"init_eqs_str":"a.q30=0;a.vis=0;a.q28=0;","frame_eqs_str":"a.x=.5+.16*Math.cos(6.28*div(a.instance,12))*a.q30;a.y=.5+.16*Math.sin(6.28*div(a.instance,12));a.vis=above(a.q28,2);a.a=a.vis;a.a2=1*a.vis;a.border_a=a.vis;","init_eqs_eel":"","frame_eqs_eel":"x = .5 + .16*cos(instance/12*6.28)*q30;\ny = .5 + .16*sin(instance/12*6.28);\n//ang = time * (instance%2-.5)*q28;\nvis = above(q28,2); \na = vis; a2 = vis*1; border_a = vis;"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":0.4,"a":0.7,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":128,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=a.sample;a.y=.5;a.r=.5+.5*Math.sin(div(a.time,7));a.g=.5+.5*Math.sin(div(a.time,11));a.b=.5+.5*Math.sin(div(a.time,5));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = sample ;\ny = .5;\n\nr = .5 + .5 * sin(time/7);\ng = .5 + .5 * sin(time/11);\nb = .5 + .5 * sin(time/5);"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.index2=0;a.index=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q1=0;a.dec_med=0;a.rott=0;a.dray=0;a.divisor=0;a.is_beat=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q11=0;a.q10=0;a.q4=0;a.q26=0;a.trot=0;a.p2=0;a.avg=0;a.trig=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q7=0;a.q28=0;a.q30=0;a.radi=0;a.q20=0;a.q8=0;a.dirx=1;","frame_eqs_str":"a.dec_med=pow(.7,div(30,a.fps));a.dec_slow=pow(.9,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,-1+a.avg+a.peak)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;\na.k1=a.is_beat*equal(mod(a.index,4),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q27=a.index;a.q28=a.index2;a.divisor=mod(a.q28,2)+1;a.trot=div(div(6.28*(a.index+a.q28),a.divisor),2);a.q7=Math.cos(a.trot);a.q8=Math.sin(a.trot);a.q10=above(Math.sin(div(a.time,12)),.2);a.trig=bnot(a.q27+a.q28)*a.q24;a.radi=bnot(a.trig)*a.radi+a.trig*rand(100);a.q11=div(a.radi,220)+.05;a.trig=bnot(a.q27)*\na.q24;a.dray=bnot(a.trig)*a.dray+a.trig*rand(10);a.q12=.02;a.q13=div(Math.sin(div(a.time,12))+1,2);a.q30=div(a.aspectx,a.aspecty);","pixel_eqs_str":"","init_eqs_eel":"dirx = 1;","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, -1+avg+peak) * above (time, t0+.1);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%4;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\nk1 =  is_beat*equal(index%4,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n\nq27 = index;\nq28 = index2;\n\n//**************************\ndivisor = (q28%2)+1;\ntrot = (index+q28)*6.28/divisor/2;\n//trot = .2;\nq7 = cos(trot);\nq8 = sin(trot);\n\nq10 = above(sin(time/12),.2);\n\ntrig = bnot(q27+q28)*q24;\nradi = bnot(trig)*radi +  trig*rand(100);\nq11 = radi / 220 + .05;\n\ntrig = bnot(q27)*q24;\ndray = bnot(trig) * dray + trig * rand(10);\nq12 = .02;\nq13 = (sin(time/12)+1)/2;\n\nq30 = aspectx/aspecty;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 tmpvar_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv_orig - 0.5);\n  tmpvar_1 = (tmpvar_2 * aspect.xy);\n  float theta_3;\n  theta_3 = ((q1 * (\n    (16.0 * q2)\n   * \n    sqrt(dot (tmpvar_1, tmpvar_1))\n  )) + (q27 / 8.0));\n  vec2 tmpvar_4;\n  tmpvar_4.x = rad;\n  tmpvar_4.y = sqrt(dot (tmpvar_1, tmpvar_1));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ((q24 * (\n    (((texture (sampler_main, (uv + \n      ((clamp ((\n        (sin(theta_3) / cos(theta_3))\n       * \n        -(normalize((1.0/(tmpvar_1))))\n      ), vec2(-8.0, -8.0), vec2(8.0, 8.0)) * cos((\n        (tmpvar_1.yx * q27)\n       * 3.0))) / 32.0)\n    )) - (0.03 * rad)).xyz + ((0.02 * \n      (vec3(inversesqrt(((2.0 * tmpvar_4).y - (q27 / 18.0)))) * roam_cos.xyz)\n    ) * roam_cos.xyz)) * 0.99)\n   - 0.02)) + ((1.0 - q24) * texture (sampler_main, (tmpvar_2 + 0.5)).xyz));\n  ret = tmpvar_5.xyz;\n }","comp":"vec2 xlat_mutabledz;\nvec2 xlat_mutablesunpos1;\nvec2 xlat_mutablesunpos2;\nvec2 xlat_mutableuv5;\n shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4.y = 0.0;\n  tmpvar_4.x = texsize.z;\n  xlat_mutabledz.x = dot ((texture (sampler_main, (\n    ((uv + tmpvar_3) - 0.5)\n   + 0.5)).xyz - texture (sampler_main, (\n    ((uv - tmpvar_4) - 0.5)\n   + 0.5)).xyz), vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_5;\n  tmpvar_5.x = 0.0;\n  tmpvar_5.y = texsize.w;\n  vec2 tmpvar_6;\n  tmpvar_6.x = 0.0;\n  tmpvar_6.y = texsize.w;\n  xlat_mutabledz.y = dot ((texture (sampler_main, (\n    ((uv + tmpvar_5) - 0.5)\n   + 0.5)).xyz - texture (sampler_main, (\n    ((uv - tmpvar_6) - 0.5)\n   + 0.5)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutabledz = (xlat_mutabledz * 0.5);\n  vec4 tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv - 0.5);\n  tmpvar_7 = texture (sampler_main, (tmpvar_8 + 0.5));\n  vec3 tmpvar_9;\n  tmpvar_9 = mix (tmpvar_7.xyz, vec3(dot (tmpvar_7.xyz, vec3(0.32, 0.49, 0.29))), vec3(q13));\n  uv_1 = ((tmpvar_8 * aspect.xy) + 0.5);\n  vec2 tmpvar_10;\n  tmpvar_10.x = q7;\n  tmpvar_10.y = q8;\n  xlat_mutablesunpos1 = ((tmpvar_10 * q11) + 0.5);\n  xlat_mutableuv5 = ((normalize(\n    (uv_1 - xlat_mutablesunpos1)\n  ) * q12) + xlat_mutablesunpos1);\n  vec2 x_11;\n  x_11 = (uv_1 - xlat_mutablesunpos1);\n  vec3 tmpvar_12;\n  tmpvar_12 = clamp (((\n    (q22 * texture (sampler_main, ((xlat_mutableuv5 - 0.5) + 0.5)).xyz)\n   / \n    sqrt(dot (x_11, x_11))\n  ) / 12.0), 0.0, 1.0);\n  vec2 x_13;\n  x_13 = ((uv_1 - xlat_mutablesunpos1) + xlat_mutabledz);\n  float tmpvar_14;\n  tmpvar_14 = clamp ((0.01 / sqrt(\n    dot (x_13, x_13)\n  )), 0.0, 1.0);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(q7);\n  tmpvar_15.y = -(q8);\n  xlat_mutablesunpos2 = ((tmpvar_15 * q11) + 0.5);\n  xlat_mutableuv5 = ((normalize(\n    (uv_1 - xlat_mutablesunpos2)\n  ) * q12) + xlat_mutablesunpos2);\n  vec2 x_16;\n  x_16 = (uv_1 - xlat_mutablesunpos2);\n  vec2 x_17;\n  x_17 = ((uv_1 - xlat_mutablesunpos2) + xlat_mutabledz);\n  float tmpvar_18;\n  tmpvar_18 = clamp ((0.01 / sqrt(\n    dot (x_17, x_17)\n  )), 0.0, 1.0);\n  ret_2 = (((\n    (tmpvar_9 * vec3(tmpvar_14))\n   * \n    (8.0 - (4.0 * q10))\n  ) + (tmpvar_12 * \n    clamp ((1.0 - (vec3(tmpvar_14) * 4.0)), 0.0, 1.0)\n  )) + vec3(tmpvar_14));\n  ret_2 = (ret_2 + (q10 * (\n    (((tmpvar_9 * vec3(tmpvar_18)) * 4.0) + (clamp ((\n      ((q22 * texture (sampler_main, ((xlat_mutableuv5 - 0.5) + 0.5)).xyz) / sqrt(dot (x_16, x_16)))\n     / 12.0), 0.0, 1.0) * clamp ((1.0 - \n      (vec3(tmpvar_18) * 4.0)\n    ), 0.0, 1.0)))\n   + vec3(tmpvar_18))));\n  vec4 tmpvar_19;\n  tmpvar_19.w = 1.0;\n  tmpvar_19.xyz = ret_2;\n  ret = tmpvar_19.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv_orig-.5) * aspect.xy;\n\nfloat2 uv6 = uv1;\n\nfloat z = 16*q2*length(uv1) ;\nfloat2 d = -normalize(1/uv1);\n\nfloat2 rs = clamp(tan(q1*z+q27/8)*d,-8,8);\n\nrs *= cos(uv1.yx*q27*3) ;\n\nuv += rs/32;\n\nuv6 = 2*(float2(rad, length(uv1)));\n\n//uv6 = mul(uv6,float2x2(_qa));\n\nmus = (1/(sqrt(uv6.y-q27/18)));\n//mus = 1/(length(.1*sin(22*uv+rand_frame*6)));\n//mus *= float3 (1,.84,.5);\nmus *= roam_cos;\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv) - .03*rad;\n\nfloat3 ret1 = crisp - blur*.0 + .02*mus* roam_cos;\n//q24 *=1.1;\nret = q24*(ret1 * .99 -  .02) + (1-q24)*GetPixel((uv_orig-.5)+.5);\n\n\n}","comp_hlsl":"float z1;\nfloat2 dz, dz1, uv5, sunpos1, sunpos2;\nfloat3 sun1, sun2, ray1, ray2;\n\nfloat2 rs (float2 uv_in)\n{\nreturn ((uv_in-.5))+.5;\n}\n\nshader_body {\n\n    dz.x = lum(GetPixel(rs(uv+float2(texsize.z,0))) \n          - GetPixel (rs(uv-float2(texsize.z,0))));\n    dz.y = lum(GetPixel(rs(uv+float2(0,texsize.w))) \n          - GetPixel (rs(uv-float2(0,texsize.w))));\n\ndz *=.5;\n\nfloat3 ret1 = tex2D(sampler_main,rs(uv));\nret1 = lerp(ret1, lum(ret1), q13);\n\nuv = (uv-0.5)* aspect.xy+.5;    \n\nsunpos1 = float2(q7,q8)*q11+.5 ;\nuv5 = normalize(uv-sunpos1)*q12+sunpos1;\nray1 = saturate(q22*GetPixel(rs(uv5))/length(uv-sunpos1)/12);\nsun1 = saturate(.01/length(uv-sunpos1+dz));\n\nsunpos2 = float2(-q7,-q8)*q11+.5;\nuv5 = normalize(uv-sunpos2)*q12+sunpos2;\nray2 = saturate(q22*GetPixel(rs(uv5))/length(uv-sunpos2)/12);\nsun2 = saturate(.01/length(uv-sunpos2+dz));\n\n\nret = ret1*sun1*(8-4*q10) + ray1*saturate(1-sun1*4) + sun1;\nret += q10 * (ret1*sun2*4 + ray2*saturate(1-sun2*4) + sun2);\n\n\n//ret = GetPixel(uv_orig);\n}\n\n"}