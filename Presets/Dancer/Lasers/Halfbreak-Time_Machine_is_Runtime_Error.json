{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.236,"wave_smoothing":0,"wave_mystery":-0.64,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_b":0.6,"ob_size":0.015,"ob_b":0.2,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":18,"num_inst":4,"x":0.83,"rad":0.14349,"tex_ang":3.76991,"tex_zoom":5.27784,"r":0,"g":1,"b":1,"a":0.5,"r2":1,"g2":0.2,"b2":1,"border_b":0,"border_a":0},"init_eqs_str":"a.d=0;a.k1=0;a.q22=0;a.q27=0;a.r0=0;a.q24=0;a.g0=0;a.b0=0;","frame_eqs_str":"a.d=.3+.2*div(mod(a.frame,8),8);a.k1=6.28*div(a.instance,a.num_inst);a.d=.3+div(a.q22,8);a.x=.5+a.d*Math.cos(a.k1);a.y=.5+a.d*Math.sin(a.k1);a.a=Math.min(1,.2+div(.8*a.q22,2)*mod(a.q27,2));a.a2=0;a.r=.6+.4*Math.sin(div(a.time,4)+1.56);a.b=.6+.4*Math.sin(div(a.time,4)+3.14);a.g=.6+.4*Math.sin(div(a.time,4));a.r0=a.r0*bnot(a.q24)+(.5+.5*Math.sin(a.time))*a.q24;a.g0=a.g0*bnot(a.q24)+(.5+.5*Math.sin(1.7*a.time))*a.q24;a.b0=div(2-a.r0-a.g0,2);a.r=a.r0;a.b=a.b0;a.g=a.g0;a.r2=1-a.g;\na.g2=1-a.b;a.b2=1-a.r;","init_eqs_eel":"","frame_eqs_eel":"d = .3+(frame%8)/8*.2;\n//d = .3;\nk1 = instance/num_inst*6.28;\nd = .3 + q22/8 ;\n\nx = .5 + d*cos(k1);\ny = .5 + d*sin(k1);\n\na = min(1, .2+ .8*q22/2*((q27)%2));\na2 = 0;\nr = .6 + .4*sin(time/4+1.56);\nb = .6 + .4*sin(time/4+3.14);\ng = .6 + .4*sin(time/4);\n\nr0 = r0 * bnot(q24) + (.5+.5*sin(time))*q24;\ng0 = g0 * bnot(q24) + (.5+.5*sin(time*1.7))*q24;\nb0 = (2-r0-g0)/2;\n\nr = r0;\nb = b0;\ng = g0;\n\nr2 = 1-g;\ng2 = 1-b;\nb2 = 1-r;"},{"baseVals":{"sides":32,"num_inst":4,"rad":0.16218,"tex_zoom":1.8315,"g":1,"b":1,"a":0.9,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a = q24/2; a2 = 0;\na = min(1, .2+ .8*q22/2*((q27)%2));\n\nr = int(rand(10))/10;\ng = int(rand(10))/10;\nb = int(rand(10))/10;\n\nrad = .06*q22;\n\n\n\n\nd = .3+(frame%8)/8*.2;\nd = .3 + q22/12;\n\nx = .5 + d*cos(6.28*instance/num_inst);\ny = .5 + d*sin(6.28*instance/num_inst);\na = min(1, .2+ .8*q22/2*((q27)%2));\nb = 1; g = 1; ","init_eqs_eel":"","frame_eqs_eel":"a = q24/2; a2 = 0;\na = min(1, .2+ .8*q22/2*((q27)%2));\n\nr = int(rand(10))/10;\ng = int(rand(10))/10;\nb = int(rand(10))/10;\n\nrad = .06*q22;\n\n\n\n\nd = .3+(frame%8)/8*.2;\nd = .3 + q22/12;\n\nx = .5 + d*cos(6.28*instance/num_inst);\ny = .5 + d*sin(6.28*instance/num_inst);\na = min(1, .2+ .8*q22/2*((q27)%2));\nb = 1; g = 1; "},{"baseVals":{"sides":63,"textured":1,"rad":8.85459,"tex_zoom":0.03204,"g":1,"b":1,"a":0.4,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"x":0.4,"rad":0.14741,"tex_zoom":1.59918,"g":0.4,"r2":1,"g2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a = q24*.3;","init_eqs_eel":"","frame_eqs_eel":"a = q24*.3;"}],"waves":[{"baseVals":{"enabled":1,"samples":128,"scaling":0.89152,"smoothing":0},"init_eqs_str":"a.q22=0;a.q27=0;a.q24=0;a.t1=0;a.t2=0;a.r0=0;a.g0=0;","frame_eqs_str":"a.t1=a.t1*bnot(a.q24)+(.5+.5*Math.sin(a.time))*a.q24;a.t2=a.t2*bnot(a.q24)+(.5+.5*Math.sin(1.7*a.time))*a.q24;","point_eqs_str":"a.x=a.sample;a.y=.5;a.a=a.q22*mod(a.q27+1,2);a.a=div(a.q24*mod(a.q27+1,2),2)+0;a.r=a.t1;a.b=a.t2;a.g=div(2-a.r0-a.g0,2);","init_eqs_eel":"","frame_eqs_eel":"t1 = t1 * bnot(q24) + (.5+.5*sin(time))*q24;\nt2 = t2 * bnot(q24) + (.5+.5*sin(time*1.7))*q24;","point_eqs_eel":"x = sample ;\ny = .5;\n\na = q22*((q27+1)%2);\n//a = 1;\na = q24*((q27+1)%2)/2+.0;\n\nr = t1; b = t2; g = (2-r0-g0)/2;\n;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.index2=0;a.pos=0;a.index=0;a.q22=0;a.q21=0;a.q15=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.movz=0;a.trel=0;a.q9=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.mox=0;a.q16=0;a.q26=0;a.p2=0;a.avg=0;a.trig=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.moy=0;a.p3=0;a.speed=0;a.q3=0;a.t0=0;a.q7=0;a.q28=0;a.q30=0;a.q20=0;a.q8=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,4);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.monitor=a.index2;a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;\na.q26=div(a.bass+a.mid+a.treb,16);a.k1=a.is_beat*bnot(a.index)*bnot(a.index2);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.rott=div(3.1416*a.p3,4);a.pos+=div(a.q20,140);a.q28=a.pos;a.q27=a.index+1;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.trel=div(a.time,10);a.q5=Math.cos(a.trel);a.q6=Math.sin(a.trel);a.q7=-a.q6;a.q8=a.q5;a.trig=a.q24*mod(a.index,4);a.mox=bnot(a.trig)*a.mox+a.trig*(div(rand(100),100)-.5);\na.moy=bnot(a.trig)*a.moy+a.trig*(div(rand(100),100)-.5);a.q15=div(a.mox,2);a.q16=div(a.moy,2);a.speed=a.speed*bnot(a.trig)+a.trig*a.q26;a.movz+=div(a.speed,a.fps);a.q9=a.movz;a.q30=3*(1.2+Math.sin(div(a.time,7)));a.zoom=1;a.rot=-0;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %4;\nindex2 = (index2 + is_beat*bnot(index))%4;\nmonitor = index2;\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = (bass + mid + treb)/16;\n\nk1 =  is_beat*bnot(index)*bnot(index2);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\np3 = dec_med * p3+ (1-dec_med)*p2;\nrott = p3 * 3.1416/4;\n\npos = pos + q20/140;\nq28 = pos;\nq27 = index+1;\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\ntrel = time/10;\nq5 = cos(trel);\nq6 = sin(trel);\nq7 = -q6;\nq8 = q5;\n\ntrig = q24 * (index%4);\nmox = bnot(trig)*mox + trig * (rand (100)/100-.5);\nmoy = bnot(trig)*moy + trig * (rand (100)/100-.5);\nq15 = mox/2;\nq16 = moy/2;\n\n//speed\nspeed = speed * bnot(trig) + trig * q26;\nmovz = movz + speed/fps;\nq9 = movz;\n\n\nq30 = (1.2 + sin(time/7))*3;\n\nzoom = 1;\nrot = -0.00;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2.z = 0.0;\n  tmpvar_2.xy = clamp (((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) - 1.0), vec3(-0.1, -0.1, -0.1), vec3(0.1, 0.1, 0.1)).yx;\n  ret_1 = (clamp (texture (sampler_main, (uv - \n    ((dot (tmpvar_2, vec3(0.32, 0.49, 0.29)) * 0.4) * sin((vec2(0.1, 0.1) * sin(\n      (((uv - vec2(0.5, 0.5)) * aspect.xy) * vec2(127.0, 127.0))\n    ))))\n  )).xyz, 0.0, 1.0) * 0.99);\n  ret_1 = (ret_1 - 0.005);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":"vec3 xlat_mutableneu;\nvec3 xlat_mutableret2;\nvec2 xlat_mutablers0;\nvec2 xlat_mutablerss;\nvec2 xlat_mutableuv2;\n shader_body { \n  vec2 uv_1;\n  vec2 ofs_2;\n  vec3 ret1_3;\n  vec2 uv5_4;\n  uv_1 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_5;\n  tmpvar_5.x = q5;\n  tmpvar_5.y = q6;\n  uv_1 = (uv_1 + (tmpvar_5 / 4.0));\n  uv5_4 = uv_1;\n  mat2 tmpvar_6;\n  tmpvar_6[uint(0)] = _qb.xy;\n  tmpvar_6[1u] = _qb.zw;\n  uv_1 = (uv_1 * tmpvar_6);\n  float tmpvar_7;\n  float tmpvar_8;\n  tmpvar_8 = (min (abs(\n    (uv5_4.y / uv5_4.x)\n  ), 1.0) / max (abs(\n    (uv5_4.y / uv5_4.x)\n  ), 1.0));\n  float tmpvar_9;\n  tmpvar_9 = (tmpvar_8 * tmpvar_8);\n  tmpvar_9 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_9) + 0.05368138) * tmpvar_9) - 0.1173503)\n     * tmpvar_9) + 0.1938925) * tmpvar_9) - 0.3326756)\n   * tmpvar_9) + 0.9999793) * tmpvar_8);\n  tmpvar_9 = (tmpvar_9 + (float(\n    (abs((uv5_4.y / uv5_4.x)) > 1.0)\n  ) * (\n    (tmpvar_9 * -2.0)\n   + 1.570796)));\n  tmpvar_7 = (tmpvar_9 * sign((uv5_4.y / uv5_4.x)));\n  if ((abs(uv5_4.x) > (1e-08 * abs(uv5_4.y)))) {\n    if ((uv5_4.x < 0.0)) {\n      if ((uv5_4.y >= 0.0)) {\n        tmpvar_7 += 3.141593;\n      } else {\n        tmpvar_7 = (tmpvar_7 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_7 = (sign(uv5_4.y) * 1.570796);\n  };\n  xlat_mutablers0.x = (((tmpvar_7 / 3.1416) * 6.0) * q28);\n  float tmpvar_10;\n  tmpvar_10 = (1.5 / sqrt(dot (uv_1, uv_1)));\n  xlat_mutablers0.y = tmpvar_10;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (xlat_mutablers0.x + (q9 * 4.0));\n  tmpvar_11.y = (tmpvar_10 + ((q9 * q28) * 4.0));\n  xlat_mutablerss = (tmpvar_11 / 12.0);\n  vec2 tmpvar_12;\n  tmpvar_12.x = q5;\n  tmpvar_12.y = q6;\n  ofs_2 = (0.1 * tmpvar_12.yx);\n  float tmpvar_13;\n  float tmpvar_14;\n  tmpvar_14 = -(q9);\n  tmpvar_13 = fract(tmpvar_14);\n  mat2 tmpvar_15;\n  tmpvar_15[uint(0)].x = 1.0;\n  tmpvar_15[uint(0)].y = -0.0;\n  tmpvar_15[1u].x = 0.0;\n  tmpvar_15[1u].y = 1.0;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_13)\n   * tmpvar_15)) * aspect.yx);\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\n    (xlat_mutableuv2 + 0.5)\n   + ofs_2)))).xyz;\n  ret1_3 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * (1.0 - \n    (tmpvar_13 * tmpvar_13)\n  )));\n  float tmpvar_16;\n  tmpvar_16 = fract((tmpvar_14 + 0.3333333));\n  mat2 tmpvar_17;\n  tmpvar_17[uint(0)].x = -0.4990803;\n  tmpvar_17[uint(0)].y = -0.8665558;\n  tmpvar_17[1u].x = 0.8665558;\n  tmpvar_17[1u].y = -0.4990803;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_16)\n   * tmpvar_17)) * aspect.yx);\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\n    (xlat_mutableuv2 + 0.5)\n   + ofs_2)))).xyz;\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \n    (tmpvar_16 * tmpvar_16)\n  )));\n  float tmpvar_18;\n  tmpvar_18 = fract((tmpvar_14 + 0.6666667));\n  mat2 tmpvar_19;\n  tmpvar_19[uint(0)].x = -0.5018377;\n  tmpvar_19[uint(0)].y = 0.8649619;\n  tmpvar_19[1u].x = -0.8649619;\n  tmpvar_19[1u].y = -0.5018377;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_18)\n   * tmpvar_19)) * aspect.yx);\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\n    (xlat_mutableuv2 + 0.5)\n   + ofs_2)))).xyz;\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \n    (tmpvar_18 * tmpvar_18)\n  )));\n  float tmpvar_20;\n  tmpvar_20 = fract((tmpvar_14 + 1.0));\n  mat2 tmpvar_21;\n  tmpvar_21[uint(0)].x = 0.9999949;\n  tmpvar_21[uint(0)].y = 0.003185092;\n  tmpvar_21[1u].x = -0.003185092;\n  tmpvar_21[1u].y = 0.9999949;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_20)\n   * tmpvar_21)) * aspect.yx);\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\n    (xlat_mutableuv2 + 0.5)\n   + ofs_2)))).xyz;\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \n    (tmpvar_20 * tmpvar_20)\n  )));\n  vec2 tmpvar_22;\n  tmpvar_22.x = (ret1_3.x + ret1_3.z);\n  tmpvar_22.y = (ret1_3.x - ret1_3.y);\n  xlat_mutableret2 = (((\n    (texture (sampler_blur1, fract((xlat_mutablerss + (tmpvar_22 / 2.0)))).xyz * scale1)\n   + bias1) / tmpvar_10) * 12.0);\n  vec4 tmpvar_23;\n  tmpvar_23.w = 1.0;\n  tmpvar_23.xyz = ((ret1_3 + (\n    ((bass_att * 0.004) / sqrt(dot (uv_1, uv_1)))\n   * roam_sin).xyz) + (sqrt(xlat_mutableret2.zxy) * clamp (\n    (1.0 - (ret1_3 * 4.0))\n  , 0.0, 1.0)));\n  ret = tmpvar_23.xyz;\n }","warp_hlsl":"sampler sampler_pw_noise_lq;\nsampler sampler_shub1;\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat4 ra = float4 (1,-1,1,1);\n//uv1 = mul (uv1,ra);\n\nfloat2 tmp = uv1;\n\ntmp.x = .1*sin(uv1.x*127) + .0;\ntmp.y = .1*sin(uv1.y*127) + .0;\nuv1 = tmp;\n\n\n\nfloat3 ret1 = clamp((GetBlur1(uv))-1,-.1,.1);\n\nfloat2 h1 = 1*uv1.xy + 0*uv1.yx;\nfloat3 crisp = tex2D(sampler_main, uv-lum(ret1.yx)*.4*(sin(h1)) ) ;\n\nfloat3 blur = GetBlur1 (uv+float2(1*ret1.x,ret1.y)*0) ;\n\nret = saturate( crisp);\n    \n ret *= 0.99 ; \n  ret -= 0.005;\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\n\nfloat3 neu, ret1, ret2;\nfloat2 rs2,rs0,rss,uv1,uv2, uv3, uv0;\nfloat ang2,c,s;\nfloat2x2 rota = float2x2(.7,.7,-.7,.7);\nshader_body\n{\nuv0 = uv;\nfloat2 uv5 = (uv-.5)*aspect.xy;\n\nuv -= 0.5;\nuv *= aspect.xy;    \nuv += float2 (q5,q6)/4;\nuv5 = uv;\nuv = mul(uv,float2x2(_qb));\n\nrs0.x = atan2(uv5.y, uv5.x)/3.1416*6*q28;\nfloat k1 = 1.5/(length (uv));\nrs0.y = k1;\n//rs0.y = q5* k1 + q6 * 1/k1 ;\nrss = float2 (rs0.x+q9*4,rs0.y+q9*q28*4)/12;\n\n\nfloat3 ret1 = 0;\nint anz = 3;\nint n = 0;\nfloat2 ofs = .1*float2(q5,q6).yx;\nwhile (n <= anz) {\n    float dist = frac(-q9+1.0*n/anz);\n\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2 = mul(uv,q13*dist*float2x2(c,s,-s,c))*aspect.yx;\n    uv3 = frac(uv2+.5+ofs) ; \n    neu = 3*tex2D(sampler_main,uv3)+ GetBlur1(uv3)*0;\n    ret1 = max(ret1,neu* (1-dist*dist));\nn++;\n}\n\nfloat2 dz = float2 (ret1.r+ret1.b, ret1.r-ret1.g)/2;\nret2 = GetBlur1(frac(rss+dz))/k1*12;\nret = ret1 + bass_att*.004/length(uv)*roam_sin\n+ sqrt(ret2.brg)*saturate(1-ret1*4);\n//ret = GetPixel(uv0)*2;\n}\n"}