{"version":2,"baseVals":{"rating":5,"wave_a":1.959,"wave_scale":0.01,"wave_smoothing":0.54,"wave_mystery":0.08,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"r":0,"g2":0,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.trebc=0;a.trebc=0;","frame_eqs_str":"a.x=.5;a.y=.5;a.trebc+=.3*a.treb;a.x=.5+.1*a.bass*Math.sin(a.time+a.trebc);a.y=.5+.1*a.mid*Math.cos(a.time+a.trebc);a.r=a.bass;","init_eqs_eel":"trebc = 0;","frame_eqs_eel":"x = .5;\ny = .5;\n\ntrebc = trebc+treb*.3;\n\nx = .5+((bass*.1)*sin(time+trebc));\ny = .5+((mid*.1)*cos(time+trebc));\n\nr = bass;"},{"baseVals":{"enabled":1,"sides":100,"r":0,"g2":0,"border_a":0},"init_eqs_str":"a.trebc=0;","frame_eqs_str":"a.x=.5;a.y=.5;a.trebc+=.3*a.mid;a.x=.5+.1*a.treb*Math.sin(a.time+a.trebc);a.y=.5+.1*a.bass*Math.cos(a.time+a.trebc);a.g=a.treb;","init_eqs_eel":"","frame_eqs_eel":"x = .5;\ny = .5;\n\ntrebc = trebc+mid*.3;\n\nx = .5+((treb*.1)*sin(time+trebc));\ny = .5+((bass*.1)*cos(time+trebc));\n\ng = treb;"},{"baseVals":{"enabled":1,"sides":100,"r":0,"g2":0,"border_a":0},"init_eqs_str":"a.trebc=0;","frame_eqs_str":"a.x=.5;a.y=.5;a.trebc+=.3*a.bass;a.x=.5+.1*a.mid*Math.sin(a.time+a.trebc);a.y=.5+.1*a.treb*Math.cos(a.time+a.trebc);a.b=a.mid;","init_eqs_eel":"","frame_eqs_eel":"x = .5;\ny = .5;\n\ntrebc = trebc+bass*.3;\n\nx = .5+((mid*.1)*sin(time+trebc));\ny = .5+((treb*.1)*cos(time+trebc));\n\nb = mid;"},{"baseVals":{"enabled":1,"textured":1,"rad":2.58873,"tex_zoom":0.39245,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.4995;a.y=.5005;a.tex_zoom=.4+.02*Math.sin(a.time);","init_eqs_eel":"","frame_eqs_eel":"x = .4995;\ny = .5005;\n\ntex_zoom = .4+.02*sin(time);"}],"waves":[{"baseVals":{"enabled":1,"usedots":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.1*Math.sin(bitand(0,60*a.sample)+a.time);a.y=.5+.13*Math.cos(bitand(0,60*a.sample)+a.time);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5+sin((0&sample*60)+time)*.1;\ny = .5+1.3*cos((0&sample*60)+time)*.1;"},{"baseVals":{"enabled":1,"usedots":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.9*Math.sin(bitand(0,60*a.sample)-a.time)*.1;a.y=.5+.12*Math.cos(bitand(0,60*a.sample)-a.time);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5+.9*sin((0&sample*60)-time)*.1;\ny = .5+1.2*cos((0&sample*60)-time)*.1;"},{"baseVals":{"enabled":1,"usedots":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+3*Math.sin(bitand(0,60*a.sample)-a.time)*.1;a.y=.5+.39*Math.cos(bitand(0,60*a.sample)-a.time);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5+3*sin((0&sample*60)-time)*.1;\ny = .5+3.9*cos((0&sample*60)-time)*.1;"},{"baseVals":{"enabled":1,"usedots":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+3.5*Math.sin(bitand(0,60*a.sample)+a.time)*.1;a.y=.5+.41*Math.cos(bitand(0,60*a.sample)+a.time);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5+3.5*sin((0&sample*60)+time)*.1;\ny = .5+4.1*cos((0&sample*60)+time)*.1;"}],"init_eqs_str":"","frame_eqs_str":"a.dx+=.01*Math.sin(.2*a.time);a.dy+=.01*Math.cos(.2*a.time);a.wave_g-=div(a.bass,6);","pixel_eqs_str":"a.zoom+=div(a.rad*a.ang,10);a.rot-=div(a.rad,a.x+a.y);","init_eqs_eel":"","frame_eqs_eel":"dx = dx + .01*sin(time*.2); \ndy = dy + .01*cos(time*.2); \nwave_g = wave_g - bass/6","pixel_eqs_eel":"zoom = (zoom + rad*(ang)/10); \nrot = rot - rad/(x+y)","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  ret_1.x = texture (sampler_main, (tmpvar_2 + 0.5)).x;\n  ret_1.y = texture (sampler_main, ((tmpvar_2 * 0.98) + 0.5)).y;\n  ret_1.z = texture (sampler_main, ((tmpvar_2 * 0.96) + 0.5)).z;\n  ret_1 = (ret_1 - (ret_1 * 0.5));\n  ret_1 = ((ret_1 * abs(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2) - 0.5)\n  )) * 5.0);\n  ret_1 = (ret_1 - 0.01);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv3_1;\n  vec2 uv2_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = (0.1 / (sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  ) + 0.1));\n  vec2 tmpvar_5;\n  float tmpvar_6;\n  tmpvar_6 = (ang / 3.14);\n  tmpvar_5.x = tmpvar_6;\n  tmpvar_5.y = (q27 * tmpvar_4);\n  float tmpvar_7;\n  tmpvar_7 = (0.1 * q30);\n  uv2_2.y = (tmpvar_5.y + tmpvar_7);\n  uv2_2.x = (tmpvar_6 + (0.2 * time));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_6;\n  tmpvar_8.y = (4.0 * tmpvar_4);\n  uv3_1.x = tmpvar_8.x;\n  uv3_1.y = (tmpvar_8.y - tmpvar_7);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = (((\n    (3.0 * max (((2.0 * texture (sampler_main, uv2_2).xyz) + texture (sampler_main, uv3_1).xyz), ((2.0 * \n      ((texture (sampler_blur2, fract(uv2_2)).xyz * scale2) + bias2)\n    ) + (\n      (texture (sampler_blur2, fract(uv3_1)).xyz * scale2)\n     + bias2))))\n   * rad) + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + ((tmpvar_9 * 2.0) * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    float3 ret2 = tex2D( sampler_fc_main, uv ).xyz;\n    \n    ret.x = tex2D( sampler_main, (uv-0.5)*1.00+0.5 ).x;\n    ret.y = tex2D( sampler_main, (uv-0.5)*0.98+0.5 ).y;\n    ret.z = tex2D( sampler_main, (uv-0.5)*0.96+0.5 ).z;   \n    \n    // darken (decay) over time\n    ret = ret- (ret*.5);\n    ret = ret*(abs(GetBlur2(uv)-.5))*5;\n    ret = ret - .01;\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, q27*rad1);\nuv2.y = uv2.y  +.1*q30;\nuv2.x = uv2.x  +.2*time;\n\nfloat2 uv3 = float2 (ang/3.14, 4*rad1);\nuv3.y = uv3.y  -.1*q30;\n\n\nfloat3 crisp = 2*GetPixel(uv2) + GetPixel(uv3);\ncrisp = max(crisp,2*GetBlur2(frac(uv2)) + GetBlur2(frac(uv3)));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * 2*GetBlur1(uv);\n\n}"}