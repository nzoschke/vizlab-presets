{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":4.616,"wave_smoothing":0.81,"modwavealphastart":0.47,"modwavealphaend":1.32,"zoomexp":1.00016,"zoom":1.00022,"warp":0,"wave_r":0.45,"wave_g":0.4,"wave_b":0.5,"ob_size":0.1,"ib_size":0.035,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.15,"mv_r":0.6,"mv_g":0.2,"mv_b":0.7,"mv_a":0.3,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"x":0.53,"rad":0.0882,"tex_zoom":0.4928,"g":1,"b":0.7,"a":0.7,"r2":0.6,"g2":0,"b2":0.7,"a2":1,"border_r":0.3,"border_g":0,"border_b":0.6,"border_a":0},"init_eqs_str":"a.trig=0;a.q28=0;a.q24=0;a.seed=0;a.rr1=0;","frame_eqs_str":"a.trig=equal(mod(a.q28,2),1)*a.q24;a.seed=sqr(a.time-Math.floor(a.time));a.rr1=a.rr1*(1-a.trig)+a.seed*a.trig;a.textured=bnot(a.q24);a.ang=div(3.1416,4)*a.q28;a.ang=0;a.x=.5;a.y=a.x;a.border_a=.5;a.a=.8;a.a2=.5;a.rad=.4*a.rr1;a.rad=.35;a.tex_zoom=div(.8,a.rad);a.tex_zoom=2;","init_eqs_eel":"","frame_eqs_eel":"trig = equal(q28%2,1)*q24;\n\nseed = sqr(time - int(time));\nrr1 = rr1 * (1-trig) + seed*trig;\n\ntextured = bnot(q24);\nang = 3.1416 /4 * q28;\nang = 0;\nx = .5; y = x;\nborder_a = .5;\n\na = .8; a2 = .5;\nrad = 0.4*rr1+.0;//MUSS HIER STEHEN - MIST\nrad = .35;\ntex_zoom = .8/rad;\ntex_zoom = 2; \n"},{"baseVals":{"x":0.46,"rad":0.15962,"tex_zoom":0.02846,"g":1,"b":1,"a":0.03,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = int(rand(10))/10;\ny = int(rand(10))/10;\n\nr = int(rand(4))/3;\ng = int(rand(4))/3;\nb = int(rand(4))/3;\n\n\nis_beat = above(time, t0+.03);\nt0 = is_beat*time + (1-is_beat)*t0;\n\n\na = min(q21/2 ,.9) * is_beat;\nrad = a*a/3 ;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(10))/10;\ny = int(rand(10))/10;\n\nr = int(rand(4))/3;\ng = int(rand(4))/3;\nb = int(rand(4))/3;\n\n\nis_beat = above(time, t0+.03);\nt0 = is_beat*time + (1-is_beat)*t0;\n\n\na = min(q21/2 ,.9) * is_beat;\nrad = a*a/3 ;"},{"baseVals":{"enabled":1,"x":0.553,"y":0.6,"rad":0.04914,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"a.q24=0;","frame_eqs_str":"a.textured=bnot(a.q24);","init_eqs_eel":"","frame_eqs_eel":"textured = bnot(q24);"},{"baseVals":{"enabled":1,"x":0.45,"rad":0.20268,"tex_ang":0.62832,"tex_zoom":4.46172,"r":0.5,"b":1,"a":0.5,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0.4},"init_eqs_str":"a.dx=0;a.dy=0;a.q22=0;a.q24=0;","frame_eqs_str":"a.dx=div(Math.floor(rand(1E3)),1E3)-.5;a.dy=div(Math.floor(rand(1E3)),1E3)-.5;a.x=.5+a.dx*(1-div(a.q22,4));a.y=.5+a.dy*(1-div(a.q22,4));a.ang=div(Math.floor(rand(320)),100);a.a=1;a.rad=.1*a.q24+.08+div(a.q22,40);","init_eqs_eel":"","frame_eqs_eel":"dx =  int(rand(1000))/1000-.5;\ndy =  int(rand(1000))/1000-.5;\n\nx = .5 + dx*(1-q22/4);\ny = .5 + dy*(1-q22/4);\n\nang = int(rand(320))/100;\n\na = 1;\nrad = .1*q24+0.08 +q22/40; "}],"waves":[{"baseVals":{"enabled":1,"samples":102,"sep":10,"scaling":0.89152,"smoothing":0,"g":0.5,"b":0.5,"a":0.6},"init_eqs_str":"a.dx=0;a.iy=0;a.k1=0;a.ix=0;a.k2=0;a.q26=0;a.oy=0;a.dy=0;a.t2=0;a.sp=0;a.k0=0;a.ox=0;","frame_eqs_str":"a.t2+=a.bass_att;","point_eqs_str":"a.k0=Math.floor(100*a.sample);a.k2=Math.floor(100*a.sample+1);a.k1=equal(mod(a.k0,2),0);a.k2=equal(mod(a.k0,2),1);a.ix=mod(100*a.value1,7)-3;a.iy=mod(100*a.value2,7)-3;a.sp=a.bass_att+a.treb_att;a.sp=div(a.sp,3E3);a.dx=.99*(a.dx+a.sp*a.ix);a.dy=.99*(a.dy+a.sp*a.iy);a.ox=a.k1*a.dx+(1-a.k1)*a.ox;a.oy=a.k2*a.dy+(1-a.k2)*a.oy;a.x=a.ox+.5;a.y=a.oy+.5;a.r=.6;a.g=.8;a.b=.9;a.a=.1+div(a.q26,8);a.a=div(Math.max(a.a,1),4);","init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k0 = int(100.0*sample);\nk2 = int(100.0*sample+1);\nk1 = equal(k0%2,0);\nk2 = equal(k0%2,1);\n\n\nix = (100*value1)%7-3;\niy = (100*value2)%7-3;\n\nsp = bass_att + treb_att;\nsp = sp /3000;\n\n\ndx = (dx+sp*ix) * .99;\ndy = (dy+sp*iy) * .99 ;\n\n\nox = k1*dx + (1-k1)*ox;\noy = k2*dy + (1-k2)*oy;\n\n\n\n//ox = 0; oy = 0;\n\nx = ox+.5;\ny = oy+.5;\n\nr = .6;\ng = .8;\nb = .9;\na = .1 + q26/8;\na = max(a,1) / 4;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.fxzone=0;a.q6=0;a.q1=0;a.block=0;a.pulse=0;a.mvx=0;a.aty=0;a.q4=0;a.boxzone=0;a.mvy=0;a.atx=0;a.le=0;a.thavg=0;a.q2=0;a.levccl=0;a.q3=0;a.arad=0;a.th=0;a.pcl=0;a.aang=0;","frame_eqs_str":"a.le=1.4*a.bass_att+.1*a.bass+.5*a.treb;a.pulse=band(above(a.le,a.th),above(a.le-a.th,a.block));a.block=a.le-a.th;a.th=.00001<Math.abs(above(a.le,a.th))?a.le+div(114,a.le+10)-7.407:a.th+div(.07*a.th,a.th-12)+.1*below(a.th,2.7)*(2.7-a.th);a.th=.00001<Math.abs(above(a.th,6))?6:a.th;a.pcl=.00001<Math.abs(a.pulse)?a.pcl+1:a.pcl;a.q1=a.pcl;a.ib_r=.5+.5*Math.sin(a.pcl)+.3*Math.sin(2.2*a.time);a.ib_g=.5+.5*Math.sin(1.1*a.pcl)+.3*Math.sin(2.1*a.time);a.ib_b=.5+.5*Math.sin(1.2*a.pcl)+\n.3*Math.sin(2*a.time);a.mv_r=a.ib_g;a.mv_g=a.ib_b;a.mv_b=a.ib_r;a.wave_r=1-a.ib_r;a.wave_g=1-a.ib_g;a.wave_b=1-a.ib_b;a.levccl+=a.le;a.q2=.1*a.levccl;a.mvx=.00001<Math.abs(a.pulse)?Math.floor(rand(2))*Math.floor(rand(25)):a.mvx;a.mv_x=a.mvx;a.mvy=.00001<Math.abs(a.pulse)?Math.floor(rand(2))*Math.floor(rand(19)):a.mvy;a.mv_y=a.mvy;a.q3=.5+.2*Math.sin(23*a.pcl)+.2*Math.sin(.023*a.levccl);a.wave_x=a.q3;a.q4=.5+.2*Math.sin(24*a.pcl)+.2*Math.sin(.02*a.levccl);a.wave_y=1-a.q4;a.thavg=.5*a.thavg+.5*a.th;\na.q6=.2*a.thavg;","pixel_eqs_str":"a.aang=Math.atan2(a.y-a.q4,a.x-a.q3);a.arad=sqrt(sqr(a.y-a.q4)+sqr(a.x-a.q3))*a.q6;a.atx=Math.cos(a.aang)*a.arad;a.aty=Math.sin(a.aang)*a.arad;a.boxzone=below(a.arad,.1);a.fxzone=band(band(above(a.x,.1),below(a.x,.9)),band(above(a.y,.1),below(a.y,9)));a.zoom+=(1-a.boxzone)*(.00001<Math.abs(a.fxzone)?-.2+.3*Math.sin(3*a.q1):-.2);a.rot=(1-a.boxzone)*a.fxzone*3.142*Math.sin(12*a.q1);a.dx=.01*bor(band(above(a.x,.05),below(a.x,.1)),above(a.x,.95))-.01*bor(below(a.x,.05),band(above(a.x,\n.9),below(a.x,.95)));a.dy=.01*bor(band(above(a.y,.05),below(a.y,.1)),above(a.y,.95))-.01*bor(below(a.y,.05),band(above(a.y,.9),below(a.y,.95)));a.dx=.00001<Math.abs(a.boxzone)?.1*a.atx:a.dx+a.fxzone*(.05*Math.sin(a.q1+(9+4*Math.sin(2.3*a.q1))*a.x+(6+3*Math.sin(2.4*a.q1))*a.y+a.q2)+Math.sin(13*a.q1));a.dy=.00001<Math.abs(a.boxzone)?.1*a.aty:a.dy+a.fxzone*(.05*Math.sin(a.q1+(8+4*Math.sin(2.2*a.q1))*a.x+(5+3*Math.sin(2.1*a.q1))*a.y+1.2*a.q2)+Math.sin(14*a.q1));","init_eqs_eel":"","frame_eqs_eel":"// sensor - alpha\n// le = signal level; desired average value = 2\n// th = threshold\nle=1.4*bass_att+.1*bass+.5*treb;\npulse=band(above(le,th),above(le-th,block));\nblock=le-th;\nth=if(above(le,th),le+114/(le+10)-7.407,\nth+th*.07/(th-12)+below(th,2.7)*.1*(2.7-th));\nth=if(above(th,6),6,th);\n\n// pulse cycler\npcl=if(pulse,pcl+1,pcl);\nq1=pcl;\n\nib_r=.5+.5*sin(pcl)+.3*sin(time*2.2);\nib_g=.5+.5*sin(pcl*1.1)+.3*sin(time*2.1);\nib_b=.5+.5*sin(pcl*1.2)+.3*sin(time*2);\nmv_r=ib_g;\nmv_g=ib_b;\nmv_b=ib_r;\nwave_r=1-ib_r;\nwave_g=1-ib_g;\nwave_b=1-ib_b;\n\n// level cycler\nlevccl=levccl+le;\nq2=.1*levccl;\n\nmvx=if(pulse,int(rand(2))*int(rand(25)),mvx);mv_x=mvx;\nmvy=if(pulse,int(rand(2))*int(rand(19)),mvy);mv_y=mvy;\n\nq3=.5+.2*sin(23*pcl)+.2*sin(.023*levccl);\nwave_x=q3;\nq4=.5+.2*sin(24*pcl)+.2*sin(.02*levccl);\nwave_y=1-q4;\nthavg=.5*thavg+.5*th;\nq6=.2*thavg;","pixel_eqs_eel":"// coordinates transfomation\n// q3,q4 = position; q6 = 1/size;\naang=atan2(y-q4,x-q3);\narad=sqrt(sqr(y-q4)+sqr(x-q3))*q6;\natx=cos(aang)*arad;\naty=sin(aang)*arad;\n\nboxzone=below(arad,.1);\n\nfxzone=band(band(above(x,.1),below(x,.9)),\nband(above(y,.1),below(y,9)));\n\n\nzoom=zoom+(1-boxzone)*if(fxzone,(-.2+.3*sin(3*q1)),-.2);\nrot=(1-boxzone)*fxzone*(3.142*sin(12*q1));\n\ndx=.01*bor(band(above(x,.05),below(x,.1)),above\n(x,.95))-.01*bor(below(x,.05),band(above(x,.9),below(x,.95)));\ndy=.01*bor(band(above(y,.05),below(y,.1)),above\n(y,.95))-.01*bor(below(y,.05),band(above(y,.9),below(y,.95)));\n\ndx=if(boxzone,.1*atx,dx+fxzone*(.05*sin(q1+(9+4*sin(q1*2.3))*x+\n(6+3*sin(q1*2.4))*y+q2)+sin(q1*13)));\ndy=if(boxzone,.1*aty,dy+fxzone*(.05*sin(q1+(8+4*sin(q1*2.2))*x+\n(5+3*sin(q1*2.1))*y+q2*1.2)+sin(q1*14)));","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  vec2 rs_2;\n  vec2 uv6_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv_orig - 0.5) * aspect.xy);\n  uv6_3 = tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (q30 + ((0.5 * q27) * sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  )));\n  mat2 tmpvar_6;\n  tmpvar_6[uint(0)] = _qa.xy;\n  tmpvar_6[1u] = _qa.zw;\n  rs_2 = ((clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * normalize(tmpvar_4))\n  , vec2(-8.0, -8.0), vec2(8.0, 8.0)) + 0.1) * tmpvar_6);\n  if ((q28 == 1.0)) {\n    rs_2 = (rs_2 * cos((tmpvar_4.yx * 11.0)));\n  };\n  uv_1 = (uv + (rs_2 / 30.0));\n  uv6_3 = (uv_1 - 0.5);\n  mat2 tmpvar_7;\n  tmpvar_7[uint(0)] = _qa.xy;\n  tmpvar_7[1u] = _qa.zw;\n  uv6_3 = (uv6_3 * tmpvar_7);\n  xlat_mutablemus = (abs(vec3((0.2 / \n    sqrt((uv6_3.y - (0.1 * q27)))\n  ))) * vec3(1.0, 0.8, 0.5));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur1, \n      fract(uv_1)\n    ).xyz * scale1) + bias1) * 0.05))\n   + \n    (0.06 * xlat_mutablemus)\n  ) * 0.98) - 0.01);\n  ret = tmpvar_8.xyz;\n }","comp":"vec2 xlat_mutableKugel1;\nvec2 xlat_mutableKugel2;\nfloat xlat_mutablerad1;\nfloat xlat_mutablerad2;\nfloat xlat_mutablerad3;\nvec3 xlat_mutableret1;\nvec3 xlat_mutableret2;\nvec2 xlat_mutablers0;\nvec2 xlat_mutablersk;\nvec2 xlat_mutableuv4;\n shader_body { \n  vec2 uv1_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)] = _qb.xy;\n  tmpvar_2[1u] = _qb.zw;\n  uv1_1 = (((uv - 0.5) * aspect.xy) * tmpvar_2);\n  vec2 tmpvar_3;\n  tmpvar_3.x = q11;\n  tmpvar_3.y = q12;\n  xlat_mutablersk = (uv1_1 + tmpvar_3);\n  xlat_mutablerad1 = ((8.0 * q13) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\n  xlat_mutableKugel1 = (((xlat_mutableuv4 * \n    clamp ((10.0 - (7.0 * xlat_mutablerad1)), 0.0, 1.0)\n  ) / (1.0 + \n    (q13 * q13)\n  )) * q13);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q14;\n  tmpvar_4.y = q15;\n  xlat_mutablersk = (uv1_1 + tmpvar_4);\n  xlat_mutablerad2 = ((2.0 * (1.0 + q16)) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad2) / cos(xlat_mutablerad2)) * normalize(xlat_mutablersk));\n  xlat_mutableKugel2 = (((xlat_mutableuv4 * \n    clamp ((10.0 - (7.0 * xlat_mutablerad2)), 0.0, 1.0)\n  ) / (1.0 + \n    (q16 * q16)\n  )) * q16);\n  vec2 tmpvar_5;\n  tmpvar_5.x = q17;\n  tmpvar_5.y = q18;\n  xlat_mutablersk = (uv1_1 + tmpvar_5);\n  xlat_mutablerad3 = ((4.0 * (1.0 + q19)) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad3) / cos(xlat_mutablerad3)) * normalize(xlat_mutablersk));\n  float tmpvar_6;\n  tmpvar_6 = (0.1 / abs((\n    (uv1_1.y * rad)\n   * rad)));\n  xlat_mutablers0.y = tmpvar_6;\n  xlat_mutablers0.x = ((uv1_1.x * tmpvar_6) * 4.0);\n  mat2 tmpvar_7;\n  tmpvar_7[uint(0)] = _qa.xy;\n  tmpvar_7[1u] = _qa.zw;\n  xlat_mutablers0 = (xlat_mutablers0 * tmpvar_7);\n  vec2 tmpvar_8;\n  tmpvar_8.x = 0.0;\n  tmpvar_8.y = q30;\n  xlat_mutableret2 = (((texture (sampler_blur1, \n    fract((xlat_mutablers0 + tmpvar_8))\n  ).xyz * scale1) + bias1) / tmpvar_6);\n  uv1_1 = (uv1_1 + ((\n    ((xlat_mutableKugel1 + xlat_mutableKugel2) + (((xlat_mutableuv4 * \n      clamp ((10.0 - (7.0 * xlat_mutablerad3)), 0.0, 1.0)\n    ) / (1.0 + \n      (q19 * q19)\n    )) * q19))\n   * 0.25) + (xlat_mutableret2 / 4.0).xy));\n  xlat_mutableret1 = (((\n    (xlat_mutableret2 + texture (sampler_main, ((uv1_1 / 2.0) + 0.5)).xyz)\n   + \n    ((((0.4 / xlat_mutablerad1) * (0.5 - \n      ((texture (sampler_blur1, vec2(0.1, 0.1)).xyz * scale1) + bias1)\n    )) * q22) * (float(mod (q27, 4.0))))\n  ) + (\n    (((0.3 / xlat_mutablerad2) * (0.5 - (\n      (texture (sampler_blur1, vec2(0.2, 0.2)).xyz * scale1)\n     + bias1))) * q22)\n   * \n    (float(mod ((q27 + 1.0), 4.0)))\n  )) + ((\n    ((0.2 / xlat_mutablerad3) * (0.5 - ((texture (sampler_blur1, vec2(0.0, 0.0)).xyz * scale1) + bias1)))\n   * q22) * (float(mod (\n    (q27 + 2.0)\n  , 4.0)))));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = clamp ((xlat_mutableret1 * (1.0 + xlat_mutableret1)), 0.0, 1.0);\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\nfloat2 uv1 = (uv_orig-.5) * aspect.xy;\n\nfloat2 uv6 = uv1;\nfloat z = q30 +.5*q27*length(uv1);\nfloat2 d = normalize(uv1);\n\nfloat2 rs = clamp(tan(z)*d,-8,8);\nrs = mul(rs+.1,float2x2(_qa));\n\nif (q28 ==1) {rs *= cos(uv1.yx*11) ;}\n\nuv += rs/30;\n\n\nuv6 = (uv-.5);\nuv6 = mul(uv6,float2x2(_qa));\n\nmus = .2/(sqrt(uv6.y-.1*q27));\nmus = abs(mus);\nmus *= float3 (1,.8,.5);\n\n\n\n\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.05 + .06*mus;\nret = ret1 * .98 -  .01;\n\n\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\nfloat mask1, mask2, mask3, rad1, rad2, rad3;\nfloat2 rs0, rs, rs1,dz, rsk, dz1, uv4, \n       Kugel1, Kugel2, Kugel3;\nfloat3 noise, ret1, ret2;\n\nshader_body {\nfloat2 uv1 = (uv-.5 )*aspect.xy;\n\nuv1 = mul(uv1,float2x2(_qb));\n\n//Kugel1\nrsk = (uv1 + float2 (q11,q12)) ;\ndz1 = normalize(rsk);\nrad1 = 8*(q13)*length (rsk) ;\nuv4 =  tan(rad1)*dz1;\nmask1 = saturate(10-7*rad1);\nKugel1 = uv4*mask1/(1+q13*q13)*q13;\n\n//Kugel2\nrsk = (uv1 + float2 (q14,q15)) ;\ndz1 = normalize(rsk);\nrad2 = 2*(1+q16)*length (rsk) ;\nuv4 =  tan(rad2)*dz1;\nmask2 = saturate(10-7*rad2);\nKugel2 = uv4*mask2/(1+q16*q16)*q16;\n\n//Kugel3\nrsk = (uv1 + float2 (q17,q18)) ;\ndz1 = normalize(rsk);\nrad3 = 4*(1+q19)*length (rsk) ;\nuv4 =  tan(rad3)*dz1;\nmask3 = saturate(10-7*rad3);\nKugel3 = uv4*mask3/(1+q19*q19)*q19;\n\nfloat z = .1/abs(uv1.y*rad*rad);\nrs0.y =  z ;\nrs0.x = uv1.x*z*4;\n\nrs0 = mul(rs0, float2x2(_qa));\nrs = rs0 + float2 (0,q30);\nret2 = GetBlur1(frac(rs))/z;\n\nuv1 += (Kugel1 + Kugel2 + Kugel3)*.25 + ret2/4;\nret1 = ret2 + (GetPixel(uv1/2+.5))\n+ .4/rad1 * (.5-GetBlur1(0.1))*q22*(q27%4)\n+ .3/rad2 * (.5-GetBlur1(0.2))*q22*((q27+1)%4)\n+ .2/rad3 * (.5-GetBlur1(0))*q22*((q27+2)%4);\n\nret = saturate(ret1*(1+ret1));\n}   \n"}