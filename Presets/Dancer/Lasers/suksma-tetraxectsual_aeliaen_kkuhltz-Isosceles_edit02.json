{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.99,"echo_zoom":1,"wave_mode":3,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.088,"wave_scale":13.5,"wave_smoothing":0,"modwavealphastart":0.9,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0.005,"ib_a":1,"mv_x":23.52,"mv_y":17.832,"mv_dx":0.006,"mv_dy":0.04,"mv_l":5,"mv_r":0.83,"mv_g":0.59},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xpos=0;a.star=0;a.cdelay1=0;a.cdelay2=0;a.q1=0;a.q5=0;a.counter2=0;a.musictime=0;a.q4=0;a.ypos=0;a.colorcounter=0;a.zm=0;a.rd=0;a.ag=0;a.q2=0;a.counter1=0;a.q3=0;","frame_eqs_str":"a.wave_a=0;a.counter1=.00001<Math.abs(equal(a.counter2,1))?.00001<Math.abs(equal(a.counter1,1))?0:a.counter1+.2:1;a.counter2=.00001<Math.abs(equal(a.counter1,1))?.00001<Math.abs(equal(a.counter2,1))?0:a.counter2+.2:1;a.cdelay1=.00001<Math.abs(equal(a.cdelay2,1))?1:.00001<Math.abs(equal(mod(a.colorcounter,2),1))?.00001<Math.abs(equal(a.counter1,1))?2:0:.00001<Math.abs(equal(a.counter2,1))?2:0;a.cdelay2=.00001<Math.abs(equal(a.cdelay1,2))?1:0;a.colorcounter=.00001<Math.abs(above(a.colorcounter,\n7))?0:.00001<Math.abs(equal(a.cdelay1,1))?a.colorcounter+1:a.colorcounter;a.ib_r=.5*(.00001<Math.abs(equal(a.colorcounter,1))?1:.00001<Math.abs(equal(a.colorcounter,2))?1:.00001<Math.abs(equal(a.colorcounter,3))?1:.00001<Math.abs(equal(a.colorcounter,4))?Math.sin(a.counter2+2.1):.00001<Math.abs(equal(a.colorcounter,5))?0:.00001<Math.abs(equal(a.colorcounter,6))?0:Math.sin(a.counter1));a.ib_g=.5*(.00001<Math.abs(equal(a.colorcounter,1))?0:.00001<Math.abs(equal(a.colorcounter,2))?Math.sin(.5*a.counter2):\n.00001<Math.abs(equal(a.colorcounter,3))?Math.sin(.4*(a.counter1+1.75)):.00001<Math.abs(equal(a.colorcounter,4))?1:.00001<Math.abs(equal(a.colorcounter,5))?1:.00001<Math.abs(equal(a.colorcounter,6))?Math.sin(a.counter2+2):0);a.ib_b=.00001<Math.abs(equal(a.colorcounter,1))?Math.sin(a.counter1+2.1):.00001<Math.abs(equal(a.colorcounter,2))?0:.00001<Math.abs(equal(a.colorcounter,3))?0:.00001<Math.abs(equal(a.colorcounter,4))?0:.00001<Math.abs(equal(a.colorcounter,5))?Math.sin(a.counter1):(equal(a.colorcounter,\n6),1);a.ob_r=a.ib_r-.5;a.ob_g=a.ib_g-.5;a.ob_b=a.ib_b-.5;a.q1=a.ib_r;a.q2=a.ib_g;a.q3=a.ib_b;a.decay=1;a.musictime+=a.mid*a.mid*a.mid*.02*div(75,a.fps);a.xpos=.6*Math.cos(.6*a.musictime);a.ypos=.6*Math.sin(.4*a.musictime);a.q4=a.xpos;a.q5=a.ypos;","pixel_eqs_str":"a.sx=-1+.2*a.bass;a.sy=-1-.2*a.treb;a.cx=.5+a.q4;a.cy=.5-a.q5;a.rd=sqrt(sqr(2*(a.x-.5-a.q4))+sqr(1.5*(a.y-.5+a.q5)));a.zm=1;a.ag=Math.atan(div(a.y-.5+a.q5,a.x-.5-a.q4));a.star=div(Math.sin(6*a.ag+a.time)*(2-a.rd-a.ag),5);a.zm+=div(a.star,20);a.sx=a.zm*a.rd;a.sy=a.zm*a.rd;","init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\n\n\n\n//Thanks to Zylot for rainbow generator\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\ncdelay2 = if(equal(cdelay1,2),1,0);\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\nib_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\nib_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\nib_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\n\n\n\nob_r=ib_r-0.5;\nob_g=ib_g-0.5;\nob_b=ib_b-0.5;\nq1=ib_r;\nq2=ib_g;\nq3=ib_b;\n\n\n\ndecay =1;\n\n\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\n//solarize=above(0.5,bass);\n//darken=above(0.4,treb);\n\nmusictime=musictime+(mid*mid*mid)*0.02*(75/fps);\n\nxpos=cos(musictime*0.6)*0.6;\nypos=sin(musictime*0.4)*0.6;\nq4=xpos;\nq5=ypos","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\n//var=(bass+mid+treb)/3;\n//rot=((ang&rad/rad)/(var*20))/10;\n//sx=.99-(var*0.01);\n//cx=var*0.1*(ang/12);\n//sy=sx;\n\n//zoom=-1;\nsx=-1+(bass*0.2);\nsy=-1-(treb*0.2);\n\ncx=0.5+q4;\ncy=0.5-q5;\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\n//zm=(1.1-(rd/4));\nzm=1;\n\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\nstar=sin(ag*6+time)*((2-rd)-ag)/5;\nzm=zm+star/20;\nsx=zm*rd;\nsy=zm*rd;\n//rot=above(rd,0.7)*(rd-0.7)*sin(time*0.3)","warp":" shader_body { \n  vec2 uv_z_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (1.0 - abs((\n    (fract((uv * 0.5)) * 2.0)\n   - 1.0)));\n  ret_2.x = (texture (sampler_fc_main, tmpvar_3).y * 0.65);\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 6.0);\n  vec2 tmpvar_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_orig - 0.5);\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  tmpvar_7.y = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\n  ret_2.z = max (((\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\n   * 3.0) * clamp (\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\n  .z) * 0.02));\n  ret_2.y = (max (texture (sampler_fc_main, mix (uv, uv_orig, vec2(1.0004, 1.0004))).y, texture (sampler_fc_main, uv_orig).z) - 0.008);\n  ret_2.z = (ret_2.z * (1.0 + (ret_2.y * 0.024)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * treb_att))\n  ), pow (hue_shader.xzy, vec3(bass_att))));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 uv_m = 1.0 - abs( frac( uv * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code\nret.x = tex2D( sampler_fc_main, uv_m ).y*0.65;\n\n\nfloat2 d = texsize.zw*6;\nfloat2 uv_z = (uv_orig-0.5)*0.996 + 0.5; // a small dose of zoom-in\nfloat3 dx = ( GetBlur1(uv_z + float2(1,0)*d) - GetBlur1(uv_z-float2(1,0)*d) );\nfloat3 dy = ( GetBlur1(uv_z + float2(0,1)*d) - GetBlur1(uv_z-float2(0,1)*d) );\nuv_z -=float2(dx.z,dy.z)*texsize.zw*2; //shortening of the nebulous matter\nret.z = max((tex2d(sampler_fc_main,uv_m).x-0.5)*3*saturate(1-length(uv_orig-0.5)*3.2), // feeded by the inner of the red channel\n             tex2d(sampler_fc_main,uv_z).z);\nret.z += (tex2d(sampler_fc_main,uv_z).z - GetBlur1(saturate(uv_z)).z)*0.02; // sort of geiss' skin dot code\n\n\nfloat2 uv_y = lerp(uv,uv_orig,1.0004); // pushing the glassy stuff a little bit\nret.y =max(tex2d(sampler_fc_main,uv_y).y ,tex2d(sampler_fc_main,uv_orig).z)-0.008; // feeded by the green channel and fade-out\n\nret.z *=1+ret.y*0.024;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)*treb_att),pow(hue_shader.xzy,bass_att));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}