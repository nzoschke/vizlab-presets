{"version":2,"baseVals":{"rating":5,"gammaadj":1.77,"decay":0.925,"echo_zoom":1.006,"echo_alpha":0.7,"echo_orient":3,"wave_mode":5,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.533,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.9995,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"g2":0,"border_r":0.4,"border_g":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r = if(above(bass, 1.2), .5*cos(time*1.8), .5*sin(time*1.8));\ng = if(above(bass, 1.2), .5*cos(time*2.3), .5*sin(time*2.3));\nb = if(above(bass, 1.2), .5*cos(time*3.2), .5*sin(time*3.2));\nborder_a = .25*sin(time);\n\nang = ang + .67*sin(time);\nrad = rad + bass*.2;\n\nframetest = equal(frame%2, 0);\n\n//x = if(frametest, x - .25*sin(time), x + .25*sin(time);\nx = x - .1*tan(time*3.14);\ny = y - .1*sin(time*3.14);\nx = if(frametest, x, 1-x);\ny = if(frametest, y, 1-y);\nr = if(frametest, r, b);\nb = if(frametest, b, g);\n\nmonitor = frametest;","init_eqs_eel":"","frame_eqs_eel":"r = if(above(bass, 1.2), .5*cos(time*1.8), .5*sin(time*1.8));\ng = if(above(bass, 1.2), .5*cos(time*2.3), .5*sin(time*2.3));\nb = if(above(bass, 1.2), .5*cos(time*3.2), .5*sin(time*3.2));\nborder_a = .25*sin(time);\n\nang = ang + .67*sin(time);\nrad = rad + bass*.2;\n\nframetest = equal(frame%2, 0);\n\n//x = if(frametest, x - .25*sin(time), x + .25*sin(time);\nx = x - .1*tan(time*3.14);\ny = y - .1*sin(time*3.14);\nx = if(frametest, x, 1-x);\ny = if(frametest, y, 1-y);\nr = if(frametest, r, b);\nb = if(frametest, b, g);\n\nmonitor = frametest;"},{"baseVals":{"enabled":1,"additive":1,"rad":2.41456,"g2":0,"border_r":0.4,"border_g":0.5},"init_eqs_str":"a.frametest=0;a.monitor=0;","frame_eqs_str":"a.r=.5*Math.sin(2.234*a.time);a.g=.5*Math.sin(2.345*a.time);a.b=.5*Math.sin(2.456*a.time);a.border_a=.25*Math.sin(a.time);a.ang+=.67*Math.sin(a.time);a.rad+=.1*a.bass;a.frametest=equal(mod(a.frame,2),0);a.x-=.2*Math.sin(2*a.time);a.y-=.2*Math.tan(2*a.time);a.x=.00001<Math.abs(a.frametest)?a.x:1-a.x;a.y=.00001<Math.abs(a.frametest)?a.y:1-a.y;a.r=.00001<Math.abs(a.frametest)?a.r:a.b;a.b=.00001<Math.abs(a.frametest)?a.b:a.g;a.monitor=a.frametest;","init_eqs_eel":"","frame_eqs_eel":"r = .5*sin(time*2.234);\ng = .5*sin(time*2.345);\nb = .5*sin(time*2.456);\nborder_a = .25*sin(time);\n\nang = ang + .67*sin(time);\nrad = rad + bass*.1;\n\nframetest = equal(frame%2, 0);\n\n//x = if(frametest, x - .25*sin(time), x + .25*sin(time);\nx = x - .2*sin(time*2);\ny = y - .2*tan(time*2);\nx = if(frametest, x, 1-x);\ny = if(frametest, y, 1-y);\nr = if(frametest, r, b);\nb = if(frametest, b, g);\n\nmonitor = frametest;"},{"baseVals":{"sides":30,"additive":1,"textured":1,"rad":0.44484,"r":0,"a2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r2 = if(above(bass, 1.2), 0.5*sin(time*1.523), 1);\ng2 = if(above(bass, 1.2), 0.5*sin(time*1.983), 1);\nb2 = if(above(bass, 1.2), 0.75+.5*sin(time*1.194), 1);\nrad = rad - .4*bass_att;\n\nx = x +.5*sin(time);\ny = y -.2*cos(time);","init_eqs_eel":"","frame_eqs_eel":"r2 = if(above(bass, 1.2), 0.5*sin(time*1.523), 1);\ng2 = if(above(bass, 1.2), 0.5*sin(time*1.983), 1);\nb2 = if(above(bass, 1.2), 0.75+.5*sin(time*1.194), 1);\nrad = rad - .4*bass_att;\n\nx = x +.5*sin(time);\ny = y -.2*cos(time);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.bass_thresh=0;a.old_orient=0;a.wave_size=0;a.q1=0;","frame_eqs_str":"a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.echo_orient=a.old_orient+equal(a.bass_thresh,2);a.echo_orient=.00001<Math.abs(equal(a.echo_orient,4))?1:a.echo_orient;a.old_orient=a.echo_orient;a.wave_r+=.5*Math.sin(2.2*a.time);a.wave_g+=.5*Math.sin(3*a.time);a.wave_b+=.5*Math.sin(4*a.time);a.wave_size+=a.bass;a.cx+=Math.sin(2*a.time);a.cy+=Math.cos(3*a.time);","pixel_eqs_str":"a.rot+=a.ang;a.warp+=.3*a.rad;","init_eqs_eel":"q1 = 0;","frame_eqs_eel":"bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh)) * ((bass_thresh-1.3)*0.96+1.3);\necho_orient = old_orient + equal(bass_thresh, 2);\necho_orient = if(equal(echo_orient,4), 1, echo_orient);\nold_orient = echo_orient;\n//echo_alpha = echo_alpha + .5*sin(time);\n//dy = dy + .2*cos(time);\n//dx = dx + .3*sin(time*1.234);\n\nwave_r = wave_r + .5*sin(time*2.2);\nwave_g = wave_g + .5*sin(time*3);\nwave_b = wave_b + .5*sin(time*4);\nwave_size = wave_size + bass;\n\ncx = cx + sin(time*2);\ncy = cy + cos(time*3);","pixel_eqs_eel":"//dx = if(above(y, .5), dx + .2*sin(time/2), dx - .2*sin(time/2));\n//dy = if(above(x, .5), dy + .1*sin(time/2), dy - .1*sin(time/2));\n\nrot = rot + ang;\nwarp = warp + .3*rad;","warp":" shader_body { \n  float n_1;\n  vec3 ret_2;\n  ret_2 = (texture (sampler_pw_main, uv).xyz - (roam_sin.xyz * roam_cos.wzy));\n  n_1 = (clamp ((texture (sampler_pw_main, \n    (uv + texsize.zw)\n  ).x * 999.0), 0.0, 1.0) + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(1.0, 0.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(1.0, -1.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(0.0, 1.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(0.0, -1.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(-1.0, 1.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(-1.0, 0.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv - texsize.zw)\n  ).x * 999.0), 0.0, 1.0));\n  if ((n_1 < 1.9)) {\n    ret_2 = (ret_2 - 0.4);\n  };\n  if ((n_1 > 3.1)) {\n    ret_2 = (ret_2 - 0.4);\n  };\n  bool tmpvar_3;\n  if ((ret_2.x < 0.1)) {\n    tmpvar_3 = (abs((n_1 - 3.0)) < 0.5);\n  } else {\n    tmpvar_3 = bool(0);\n  };\n  if (tmpvar_3) {\n    ret_2 = (ret_2 + 0.4);\n  };\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_2;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, ((texture (sampler_blur1, uv).xyz * scale1) + bias1).xy).xyz * 2.0);\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"shader_body\n{\n  // sample previous frame\n  ret = tex2D( sampler_pw_main, uv ).xyz;\nret-=roam_sin*roam_cos.wzy;\n\n  float n;\n  float2 d = texsize.zw*1;\n  n  = saturate(tex2D(sampler_pw_main, uv+d*float2( 1, 1)).x*999);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 1, 0)).x*999);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 1,-1)).x*999);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 0, 1)).x*999);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 0,-1)).x*999);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2(-1, 1)).x*999);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2(-1, 0)).x*999);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2(-1,-1)).x*999);\n  \nfloat t = 0.4;\n  if (n < 1.9)\n    ret -= t;\n  if (n > 3.1)\n    ret -= t;\n  if (ret.x < 0.1 && abs(n-3) < 0.5)\n    ret += t;\n\n  //ret *= saturate(6 - 19*(GetBlur1(uv_orig).x));\n  \n  //float dist_from_bar = abs(uv_orig.y - frac(time*0.23));\n  //ret *= saturate( 24*dist_from_bar - 0.5 );  \n\n  // darken (decay) over time\n  //ret = (ret - 0.016)*0.985;\n}","comp_hlsl":"shader_body\n{\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    float3 output =  tex2D(sampler_main, uv).xyz;\noutput-=roam_sin.wzy*roam_cos;\n    float3 blur =  tex2D(sampler_main, GetBlur1(uv)).xyz;\n    \n   ret = blur;\n\n    ret *= 2.00; //gamma\n    ret = ret;\n}"}