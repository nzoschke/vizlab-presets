{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_mode":7,"wave_brighten":0,"wave_a":0.005,"wave_scale":0.167,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_x":0.95,"wave_y":1,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0.005,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":34,"thickoutline":1,"textured":1,"x":0.75,"rad":0.30478,"tex_ang":1.5708,"tex_zoom":0.82773,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"vx = 0;\nvy = 0;","frame_eqs_str":"rad = .3;\ntex_zoom = .28;\ntex_zoom = 1/rad*tex_zoom;\n\nx = .5 + sin(time*.957)*.1;","init_eqs_eel":"vx = 0;\nvy = 0;","frame_eqs_eel":"rad = .3;\ntex_zoom = .28;\ntex_zoom = 1/rad*tex_zoom;\n\nx = .5 + sin(time*.957)*.1;"},{"baseVals":{"sides":74,"thickoutline":1,"textured":1,"x":0.25,"rad":0.45378,"tex_zoom":0.5033,"g":1,"b":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rad = .3;\ntex_zoom = .3;\ntex_zoom = 1/rad*tex_zoom;\n\nx = .5 + sin(time)*.15;","init_eqs_eel":"","frame_eqs_eel":"rad = .3;\ntex_zoom = .3;\ntex_zoom = 1/rad*tex_zoom;\n\nx = .5 + sin(time)*.15;"},{"baseVals":{"enabled":1,"sides":84,"additive":1,"thickoutline":1,"rad":0.16777,"tex_zoom":0.5033,"r":0,"b":0.2,"a":0.6,"g2":0,"border_a":0},"init_eqs_str":"a.ti=0;a.vx=0;a.vy=0;","frame_eqs_str":"a.ti=.3*a.time;a.x=.5+.34*Math.sin(a.ti);a.y=.5+.34*Math.cos(a.ti);a.rad+=a.bass;a.ti=2.3*a.time;a.x+=.1*Math.sin(a.ti);a.y+=.1*Math.cos(a.ti);","init_eqs_eel":"vx = 0;\nvy = 0;","frame_eqs_eel":"ti = time*.3;\nx = .5 + .34*sin(ti);\ny = .5 + .34*cos(ti);\n\nrad = rad + bass;\n\nti = time*2.3;\nx = x + .1*sin(ti);\ny = y + .1*cos(ti);"},{"baseVals":{"sides":74,"additive":1,"rad":0.16777,"r2":1,"g2":0,"a2":1,"border_b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ti = -time*.3;\nx = .5 + .3*sin(ti);\ny = .5 + .3*cos(ti);\n\nti = -time*2.3;\nx = x + .2*sin(ti);\ny = y + .2*cos(ti);","init_eqs_eel":"","frame_eqs_eel":"ti = -time*.3;\nx = .5 + .3*sin(ti);\ny = .5 + .3*cos(ti);\n\nti = -time*2.3;\nx = x + .2*sin(ti);\ny = y + .2*cos(ti);"}],"waves":[{"baseVals":{"enabled":1,"samples":41,"usedots":1,"additive":1,"scaling":0.01,"smoothing":0,"g":0},"init_eqs_str":"a.t8=1;a.t1=a.q5;","frame_eqs_str":"","point_eqs_str":"a.x=.001*Math.floor(rand(1001));a.y=.001*Math.floor(rand(1001));a.g=.5*above(.001*Math.floor(rand(1001)),.9);a.b=0;a.r=0;","init_eqs_eel":"t8 = 1;\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\n//r = int(rand(1001))*.001;\ng=above(int(rand(1001))*.001,.9)*.5;\nb = 0;\nr = 0;\n"},{"baseVals":{"samples":61,"additive":1,"scaling":0.0124,"smoothing":0,"b":0,"enabled":0},"init_eqs_str":"t8 = 1;\nt1 = q5;","frame_eqs_str":"","point_eqs_str":"x = (sample-.5)*.02 + .2;\ny = .5;\nr = 1;\ng = 1;\nb = 1;","init_eqs_eel":"t8 = 1;\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = (sample-.5)*.02 + .2;\ny = .5;\nr = 1;\ng = 1;\nb = 1;"},{"baseVals":{"samples":31,"usedots":1,"thick":1,"scaling":0.01303,"smoothing":0,"enabled":0},"init_eqs_str":"t8 = 1;\nt1 = q5;","frame_eqs_str":"t1 = q5;\nt2 = q4;\nt3 = q6;","point_eqs_str":"t8 = -t8;\nd1 = 0.15 + t8*0.01 - value1*0.1*(t8+1);\ndir1 = t2;\ndir2 = t2*0.5 + t1*3/2 - t3*3;\ndir3 = sample*asin(1)*4 + t3 - t2*5/6 + t1*3/2;\n\nx = 0.5 + sin(dir1)*0.1 + sin(dir2)*0.05 + sin(dir3)*d1;\ny = 0.5 + cos(dir1)*0.1 + cos(dir2)*0.05 + cos(dir3)*d1;\ny = (y-0.5)*1.2 + 0.5;","init_eqs_eel":"t8 = 1;\nt1 = q5;","frame_eqs_eel":"t1 = q5;\nt2 = q4;\nt3 = q6;","point_eqs_eel":"t8 = -t8;\nd1 = 0.15 + t8*0.01 - value1*0.1*(t8+1);\ndir1 = t2;\ndir2 = t2*0.5 + t1*3/2 - t3*3;\ndir3 = sample*asin(1)*4 + t3 - t2*5/6 + t1*3/2;\n\nx = 0.5 + sin(dir1)*0.1 + sin(dir2)*0.05 + sin(dir3)*d1;\ny = 0.5 + cos(dir1)*0.1 + cos(dir2)*0.05 + cos(dir3)*d1;\ny = (y-0.5)*1.2 + 0.5;"},{"baseVals":{"samples":511,"sep":4,"thick":1,"additive":1,"scaling":0.02345,"smoothing":0,"a":0.99,"enabled":0},"init_eqs_str":"t2 = 0;\nt3 = 0;\nt4 = 0;\nab = 1;","frame_eqs_str":"t1 = q4*0.75;\nt2 = q5*0.75;\nt3 = q6*0.75;\nt4 = q4*0.75;\nt5 = q5*0.75;\nt6 = q6*0.75;\nt8 = 1;","point_eqs_str":"\npi = asin(1);\nn = 80;\nt8 = -t8;\nrd = 0.075+0.02*(t8+1)/2;\nxx = sin(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\nyy = cos(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\nzz = sin(sample*pi*n)*rd;\n\nd = sqrt( xx*xx + yy*yy + zz*zz)*0.004;\nd1 = 1;\nxx = xx*d1;\nyy = yy*d1;\nzz = zz*d1;\n\n\n\n\nw1 = d*t4;\nw2 = d*t5;\nw3 = d*t6;\n\ns1 = sin(t1*1+w1);\ns2 = sin(t2*1+w2);\ns3 = sin(t3*1+w3);\nc1 = cos(t1*1+w1);\nc2 = cos(t2*1+w2);\nc3 = cos(t3*1+w3);\n\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\n\na = 0.5;\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\nx = 0.5 + zoom*x1;\ny = 0.5 + zoom*y1;\n\npi3 = 3.1415*2*0.3333;\nt = -z*2 - time*0.8;//sample*pi*4-0*time +t4*3;\nc=2;\nr = sin(t)*c;\n\ng = sin(t+pi3)*c;\n\nb = sin(t-pi3)*c;\n\nj = 0.71;\n//r = 0.5+xx*j;\n//g = 0.5+yy*j;\n//b = 0.5+zz*j;\n\nr = if(above(r,1),1,r);\nr = if(below(r,0),0,r);\ng = if(above(g,1),1,g);\ng = if(below(g,0),0,g);\nb = if(above(b,1),1,b);\nb = if(below(b,0),0,b);\n\na = sigmoid(-z,7)+0.;\n","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\nab = 1;","frame_eqs_eel":"t1 = q4*0.75;\nt2 = q5*0.75;\nt3 = q6*0.75;\nt4 = q4*0.75;\nt5 = q5*0.75;\nt6 = q6*0.75;\nt8 = 1;","point_eqs_eel":"\npi = asin(1);\nn = 80;\nt8 = -t8;\nrd = 0.075+0.02*(t8+1)/2;\nxx = sin(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\nyy = cos(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\nzz = sin(sample*pi*n)*rd;\n\nd = sqrt( xx*xx + yy*yy + zz*zz)*0.004;\nd1 = 1;\nxx = xx*d1;\nyy = yy*d1;\nzz = zz*d1;\n\n\n\n\nw1 = d*t4;\nw2 = d*t5;\nw3 = d*t6;\n\ns1 = sin(t1*1+w1);\ns2 = sin(t2*1+w2);\ns3 = sin(t3*1+w3);\nc1 = cos(t1*1+w1);\nc2 = cos(t2*1+w2);\nc3 = cos(t3*1+w3);\n\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\n\na = 0.5;\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\nx = 0.5 + zoom*x1;\ny = 0.5 + zoom*y1;\n\npi3 = 3.1415*2*0.3333;\nt = -z*2 - time*0.8;//sample*pi*4-0*time +t4*3;\nc=2;\nr = sin(t)*c;\n\ng = sin(t+pi3)*c;\n\nb = sin(t-pi3)*c;\n\nj = 0.71;\n//r = 0.5+xx*j;\n//g = 0.5+yy*j;\n//b = 0.5+zz*j;\n\nr = if(above(r,1),1,r);\nr = if(below(r,0),0,r);\ng = if(above(g,1),1,g);\ng = if(below(g,0),0,g);\nb = if(above(b,1),1,b);\nb = if(below(b,0),0,b);\n\na = sigmoid(-z,7)+0.;\n"}],"init_eqs_str":"a.xpos=0;a.star=0;a.cdelay1=0;a.cdelay2=0;a.q1=0;a.q5=0;a.counter2=0;a.musictime=0;a.q4=0;a.ypos=0;a.colorcounter=0;a.zm=0;a.rd=0;a.ag=0;a.q2=0;a.counter1=0;a.q3=0;","frame_eqs_str":"a.wave_a=0;a.counter1=.00001<Math.abs(equal(a.counter2,1))?.00001<Math.abs(equal(a.counter1,1))?0:a.counter1+.2:1;a.counter2=.00001<Math.abs(equal(a.counter1,1))?.00001<Math.abs(equal(a.counter2,1))?0:a.counter2+.2:1;a.cdelay1=.00001<Math.abs(equal(a.cdelay2,1))?1:.00001<Math.abs(equal(mod(a.colorcounter,2),1))?.00001<Math.abs(equal(a.counter1,1))?2:0:.00001<Math.abs(equal(a.counter2,1))?2:0;a.cdelay2=.00001<Math.abs(equal(a.cdelay1,2))?1:0;a.colorcounter=.00001<Math.abs(above(a.colorcounter,\n7))?0:.00001<Math.abs(equal(a.cdelay1,1))?a.colorcounter+1:a.colorcounter;a.ib_r=.5*(.00001<Math.abs(equal(a.colorcounter,1))?1:.00001<Math.abs(equal(a.colorcounter,2))?1:.00001<Math.abs(equal(a.colorcounter,3))?1:.00001<Math.abs(equal(a.colorcounter,4))?Math.sin(a.counter2+2.1):.00001<Math.abs(equal(a.colorcounter,5))?0:.00001<Math.abs(equal(a.colorcounter,6))?0:Math.sin(a.counter1));a.ib_g=.5*(.00001<Math.abs(equal(a.colorcounter,1))?0:.00001<Math.abs(equal(a.colorcounter,2))?Math.sin(.5*a.counter2):\n.00001<Math.abs(equal(a.colorcounter,3))?Math.sin(.4*(a.counter1+1.75)):.00001<Math.abs(equal(a.colorcounter,4))?1:.00001<Math.abs(equal(a.colorcounter,5))?1:.00001<Math.abs(equal(a.colorcounter,6))?Math.sin(a.counter2+2):0);a.ib_b=.00001<Math.abs(equal(a.colorcounter,1))?Math.sin(a.counter1+2.1):.00001<Math.abs(equal(a.colorcounter,2))?0:.00001<Math.abs(equal(a.colorcounter,3))?0:.00001<Math.abs(equal(a.colorcounter,4))?0:.00001<Math.abs(equal(a.colorcounter,5))?Math.sin(a.counter1):(equal(a.colorcounter,\n6),1);a.ob_r=a.ib_r-.5;a.ob_g=a.ib_g-.5;a.ob_b=a.ib_b-.5;a.q1=a.ib_r;a.q2=a.ib_g;a.q3=a.ib_b;a.decay=1;a.musictime+=a.mid*a.mid*a.mid*.02*div(75,a.fps);a.xpos=.6*Math.cos(.6*a.musictime);a.ypos=.6*Math.sin(.4*a.musictime);a.q4=a.xpos;a.q5=a.ypos;","pixel_eqs_str":"a.sx=-1+.2*a.bass;a.sy=-1-.2*a.treb;a.cx=.5+a.q4;a.cy=.5-a.q5;a.rd=sqrt(sqr(2*(a.x-.5-a.q4))+sqr(1.5*(a.y-.5+a.q5)));a.zm=1;a.ag=Math.atan(div(a.y-.5+a.q5,a.x-.5-a.q4));a.star=div(Math.sin(6*a.ag+a.time)*(2-a.rd-a.ag),5);a.zm+=div(a.star,20);a.sx=a.zm*a.rd;a.sy=a.zm*a.rd;","init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\n\n\n\n//Thanks to Zylot for rainbow generator\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\ncdelay2 = if(equal(cdelay1,2),1,0);\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\nib_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\nib_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\nib_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\n\n\n\nob_r=ib_r-0.5;\nob_g=ib_g-0.5;\nob_b=ib_b-0.5;\nq1=ib_r;\nq2=ib_g;\nq3=ib_b;\n\n\n\ndecay =1;\n\n\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\n//solarize=above(0.5,bass);\n//darken=above(0.4,treb);\n\nmusictime=musictime+(mid*mid*mid)*0.02*(75/fps);\n\nxpos=cos(musictime*0.6)*0.6;\nypos=sin(musictime*0.4)*0.6;\nq4=xpos;\nq5=ypos","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\n//var=(bass+mid+treb)/3;\n//rot=((ang&rad/rad)/(var*20))/10;\n//sx=.99-(var*0.01);\n//cx=var*0.1*(ang/12);\n//sy=sx;\n\n//zoom=-1;\nsx=-1+(bass*0.2);\nsy=-1-(treb*0.2);\n\ncx=0.5+q4;\ncy=0.5-q5;\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\n//zm=(1.1-(rd/4));\nzm=1;\n\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\nstar=sin(ag*6+time)*((2-rd)-ag)/5;\nzm=zm+star/20;\nsx=zm*rd;\nsy=zm*rd;\n//rot=above(rd,0.7)*(rd-0.7)*sin(time*0.3)","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\n   * 0.01))).xyz + ((\n    (texture (sampler_noise_lq, ((uv_orig * 4.0) + rand_frame.xy)) * 2.0)\n   - 1.0) * 0.02).xyz);\n  float vec_y_2;\n  vec_y_2 = (uv_orig.y - 0.5);\n  float vec_x_3;\n  vec_x_3 = (uv_orig.x - 0.5);\n  float tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (min (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0) / max (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0));\n  float tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\n  tmpvar_6 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\n  tmpvar_6 = (tmpvar_6 + (float(\n    (abs((vec_y_2 / vec_x_3)) > 1.0)\n  ) * (\n    (tmpvar_6 * -2.0)\n   + 1.570796)));\n  tmpvar_4 = (tmpvar_6 * sign((vec_y_2 / vec_x_3)));\n  if ((abs(vec_x_3) > (1e-08 * abs(vec_y_2)))) {\n    if ((vec_x_3 < 0.0)) {\n      if ((vec_y_2 >= 0.0)) {\n        tmpvar_4 += 3.141593;\n      } else {\n        tmpvar_4 = (tmpvar_4 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_4 = (sign(vec_y_2) * 1.570796);\n  };\n  ret_1 = (ret_1 + (cos(\n    ((tmpvar_4 * 17.0) + (time * 12.0))\n  ) * 0.15));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 0.0;\n  tmpvar_2.xyz = ret_1;\n  vec2 tmpvar_3;\n  tmpvar_3.x = (1.0 - uv.x);\n  tmpvar_3.y = uv.y;\n  ret_1 = max (tmpvar_2, texture (sampler_main, tmpvar_3)).xyz;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // PAINTERLY EFFECT:\n    float2 uv2 = uv;\n    const float mipbias = 0;\n    float2 delta2 = texsize.zw*float2(1,1);\n    float3 blurry_color = tex2D( sampler_main, uv2 + delta2 ).xyz;\n    uv2.xy += (blurry_color.xy-0.37) * 0.01;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv2 ).xyz;\n\n    ret += (tex2D(sampler_noise_lq, uv_orig*4 + rand_frame.xy)*2-1)*0.02;\n\n    float ang2 = atan2(uv_orig.y-0.5,uv_orig.x-0.5);\n    ret += (  cos(ang2*17 + time*12 + lum(ret)*0) )*0.15;\n\n    // darken over time\n    //ret -= 0.004;    \n}","comp_hlsl":"// to access a texture on disk: make a sampler.  This example loads \"lichen.{tga/jpg/etc}\".\nsampler2D sampler_fw_lichen;  // _FW = filtering + wrap; _PC = point sampling + edge clamp; etc.\nfloat4    texsize_lichen;     // auto-binds; .xy = (w,h); .zw = (1/w,1/h)\n\n\nshader_body      \n\n\n\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret = max(ret, tex2D(sampler_main, float2(1-uv.x,uv.y)));\n    ret *= 1.00; //old gamma effect\n    \n}"}