{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.951,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"rad":0.2548,"tex_zoom":0.11657,"r":0,"r2":0.7,"b2":1,"a2":0.2,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang  = -q1;","init_eqs_eel":"","frame_eqs_eel":"ang  = -q1;"},{"baseVals":{"sides":3,"rad":0.20676,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = -q1;","init_eqs_eel":"","frame_eqs_eel":"ang = -q1;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"scaling":0.5503,"smoothing":0,"a":0.03},"init_eqs_str":"a.width=0;a.t5=0;a.q9=0;a.pi23=0;a.angle2=0;a.t3=0;a.angle=0;a.t6=0;a.t7=0;a.dist2=0;a.pty=0;a.otest=0;a.dist=0;a.t4=0;a.ptx=0;a.q8=0;","frame_eqs_str":"a.angle=1;a.dist=.049;a.t4=a.angle;a.dist2=.4;a.a=.08*(a.bass-a.bass_att);a.angle2=-1;a.width=10.2;a.t3=a.dist;a.t4=a.angle;a.t5=a.dist2;a.t6=.05*a.width;a.t7=a.angle2;","point_eqs_str":"a.pi23=4*Math.asin(-1);a.r=.1+.5*Math.cos(6.2832*(3.2*a.q9+a.sample+0*a.pi23));a.g=.1+.5*Math.cos(6.2832*(3.1*a.q9+a.sample+1*a.pi23));a.b=.1+.5*Math.cos(3*a.q9+a.sample+2*a.pi23);a.angle=a.sample;a.ptx=.5+Math.cos(a.angle*Math.tan(3.9*a.q9)*4+a.value1-a.t7)*a.t3;a.pty=.5+Math.sin(a.angle*Math.sin(4*a.q9)*4+a.value2-a.t7)*a.t3;a.otest=mod(512*a.sample,2);a.x=.00001<Math.abs(equal(a.otest,0))?a.ptx:a.x;a.y=.00001<Math.abs(equal(a.otest,0))?a.pty:a.y;a.ptx=.5+Math.cos(a.angle*\nMath.cos(4.1*a.q9)*4+a.t7)*a.t5;a.pty=.5+Math.sin(a.angle*Math.atan(4.2*a.q9)*4+a.t7)*a.t5*a.q8;a.x=.00001<Math.abs(equal(a.otest,1))?a.ptx:a.x;a.y=.00001<Math.abs(equal(a.otest,1))?a.pty:a.y;a.a=1;","init_eqs_eel":"","frame_eqs_eel":"\n// Ray startpoint\nangle = 1;//2 + q1 + bass * 0.1;\ndist = 0.049;\nt4 = angle;\n\n// Ray\ndist2 = 0.4;// * bass_att;\na = (bass-bass_att) * 0.08;\nangle2 = -1;//a* 100 - 1;\nwidth =  10 + 0.2;\n\nt3 = dist;\nt4 = angle;\nt5 = dist2;\nt6 = width  * 0.05;\nt7 = angle2;","point_eqs_eel":"pi23=asin(-1)*4;\nr = 0.1 + 0.5 * cos((q9*3.2+sample+0*pi23) * 6.2832);\ng = 0.1 + 0.5 * cos((q9*3.1+sample+1*pi23) * 6.2832);\nb = 0.1 + 0.5 * cos( q9*3.0+sample+2*pi23);\n\nangle = sample;//t4 + (t6 * (sample-0.5));\nptx = 0.5 + cos(angle*tan(q9*3.9)*4+value1-t7)*t3 ;\npty = 0.5 + sin(angle*sin(q9*4)*4+value2-t7)*t3 ;\n\notest = (sample*512)%2;\nx = if(equal(otest,0),ptx,x);\ny = if(equal(otest,0),pty,y);\n\nptx = 0.5 + cos(angle*cos(q9*4.1)*4 + t7)*t5;\npty = 0.5 + sin(angle*atan(q9*4.2)*4 + t7)*t5*q8;\n\nx = if(equal(otest,1),ptx,x);\ny = if(equal(otest,1),pty,y);\n\na=1;"},{"baseVals":{"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\n// Ray startpoint\nangle = 4.4 + q1 ;\ndist = 0.049;\n\n// Ray\ndist2 = bass_att * 0.5;\nofac = bass_att * 0.03;\nangle2 = bass_att * 0.3 + 0.6;\nwidth = bass * 5;\n\nt1 = ofac;\nt3 = dist;\nt4 = angle;\nt5 = dist2;\nt6 = width  * 0.01953125;\nt7 = angle2;","point_eqs_str":"a = t1 * sin(sample * 3.1415);\n\nangle = t4 + (t6 * (sample-0.5));\nptx = 0.5 + cos(angle)*t3;\npty = 0.5 + sin(angle)*t3*q8;\n\notest = (sample*512)%2;\nx = if(equal(otest,0),ptx,x);\ny = if(equal(otest,0),pty,y);\n\nptx = 0.5 + cos(angle + t7)*t5;\npty = 0.5 + sin(angle + t7)*t5*q8;\n\nx = if(equal(otest,1),ptx,x);\ny = if(equal(otest,1),pty,y);","init_eqs_eel":"","frame_eqs_eel":"\n// Ray startpoint\nangle = 4.4 + q1 ;\ndist = 0.049;\n\n// Ray\ndist2 = bass_att * 0.5;\nofac = bass_att * 0.03;\nangle2 = bass_att * 0.3 + 0.6;\nwidth = bass * 5;\n\nt1 = ofac;\nt3 = dist;\nt4 = angle;\nt5 = dist2;\nt6 = width  * 0.01953125;\nt7 = angle2;","point_eqs_eel":"a = t1 * sin(sample * 3.1415);\n\nangle = t4 + (t6 * (sample-0.5));\nptx = 0.5 + cos(angle)*t3;\npty = 0.5 + sin(angle)*t3*q8;\n\notest = (sample*512)%2;\nx = if(equal(otest,0),ptx,x);\ny = if(equal(otest,0),pty,y);\n\nptx = 0.5 + cos(angle + t7)*t5;\npty = 0.5 + sin(angle + t7)*t5*q8;\n\nx = if(equal(otest,1),ptx,x);\ny = if(equal(otest,1),pty,y);"},{"baseVals":{"scaling":37.78329,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\n// Ray startpoint\nangle = 4.4 + q1 ;\ndist = 0.049;\nwidth = bass * 5;\n\n// Ray 2 startpoint\nangle2 = 2 + q1 + bass * 0.1;\ndist2 = 0.049;\nwidth2 = bass * 10 + 0.2;\n\nofac = bass_att * 0.03;\n\n\nt1 = ofac;\nt2 = width2 * 0.01953125;\nt3 = dist;\nt4 = angle;\nt5 = dist2;\nt6 = width  * 0.01953125;\nt7 = angle2;","point_eqs_str":"r = 0.5 + 0.5 * cos((sample+0.125) * 6.2832);\ng = 0.5 + 0.5 * cos((sample+0.375) * 6.2832);\nb = 0.5 + 0.5 * cos(sample * 3.1415);\na = t1 * sin(sample * 3.1415);\n\nangle = t4 + (t6 * (0.5 - sample));\nptx = 0.5 + cos(angle)*t3;\npty = 0.5 + sin(angle)*t3*q8 ;\n\notest = (sample*512)%2;\nx = if(equal(otest,0),ptx,x);\ny = if(equal(otest,0),pty,y);\nr = if(equal(otest,0),1,r);\ng = if(equal(otest,0),1,g);\nb = if(equal(otest,0),1,b);\n\n\nangle = t7 + (t2 * (sample-0.5));\nptx = 0.5 + cos(angle)*t5;\npty = 0.5 + sin(angle)*t5*q8;\n\nx = if(equal(otest,1),ptx,x);\ny = if(equal(otest,1),pty,y);\n","init_eqs_eel":"","frame_eqs_eel":"\n// Ray startpoint\nangle = 4.4 + q1 ;\ndist = 0.049;\nwidth = bass * 5;\n\n// Ray 2 startpoint\nangle2 = 2 + q1 + bass * 0.1;\ndist2 = 0.049;\nwidth2 = bass * 10 + 0.2;\n\nofac = bass_att * 0.03;\n\n\nt1 = ofac;\nt2 = width2 * 0.01953125;\nt3 = dist;\nt4 = angle;\nt5 = dist2;\nt6 = width  * 0.01953125;\nt7 = angle2;","point_eqs_eel":"r = 0.5 + 0.5 * cos((sample+0.125) * 6.2832);\ng = 0.5 + 0.5 * cos((sample+0.375) * 6.2832);\nb = 0.5 + 0.5 * cos(sample * 3.1415);\na = t1 * sin(sample * 3.1415);\n\nangle = t4 + (t6 * (0.5 - sample));\nptx = 0.5 + cos(angle)*t3;\npty = 0.5 + sin(angle)*t3*q8 ;\n\notest = (sample*512)%2;\nx = if(equal(otest,0),ptx,x);\ny = if(equal(otest,0),pty,y);\nr = if(equal(otest,0),1,r);\ng = if(equal(otest,0),1,g);\nb = if(equal(otest,0),1,b);\n\n\nangle = t7 + (t2 * (sample-0.5));\nptx = 0.5 + cos(angle)*t5;\npty = 0.5 + sin(angle)*t5*q8;\n\nx = if(equal(otest,1),ptx,x);\ny = if(equal(otest,1),pty,y);\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.runtreb=0;a.index2=0;a.q25=0;a.index=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.movex=0;a.q1=0;a.dec_med=0;a.q5=0;a.vb=0;a.trel=0;a.q9=0;a.pi23=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.angle=0;a.dec_slow=0;a.q11=0;a.q10=0;a.tran=0;a.atime=0;a.spd=0;a.q4=0;a.ran=0;a.q16=0;a.q26=0;a.p2=0;a.rott_=0;a.avg=0;a.movez=0;a.runbass=0;a.q19=0;a.beat=0;a.q17=0;a.p1=0;a.peak=0;a.runmids=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.t0=0;a.vvm=0;a.q32=\n0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.vvt=0;a.q8=0;a.p1=2E3;a.p2=200;a.p3=50;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(Math.abs(a.bass-a.bass_att),2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(Math.abs(a.mid-a.mid_att),2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(Math.abs(a.treb-a.treb_att),2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.runbass+=a.vvb;a.runmids+=a.vvm;a.runtreb+=a.vvt;a.pi23=1.33333333333332*Math.asin(-1);\na.atime=1.85*(a.runtreb+a.runmids+a.runbass);a.q8=.4*(Math.sin(a.atime-0*a.pi23)+1);a.q9=.4*(Math.sin(a.atime-1*a.pi23)+1);a.q10=.4*(Math.sin(a.atime-2*a.pi23)+1);a.vb=.95*a.vb+(1-a.vb)*pow(Math.abs(a.bass-a.bass_att),2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(Math.abs(a.mid-a.mid_att),2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(Math.abs(a.treb-a.treb_att),2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,\nMath.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=100*(a.vvt+a.vvm+a.vvb);a.q2=100*(a.vvt+a.vvm+a.vvb);a.q3=100*(a.vvt+a.vvm+a.vvb);a.q4=100*(a.vvt+a.vvm+a.vvb);a.q5=100*(a.vvt+a.vvm+a.vvb);a.q6=100*(a.vvt+a.vvm+a.vvb);a.q4=100*(a.vvt+a.vvm+a.vvb);a.q5=100*(a.vvt+a.vvm+a.vvb);a.q6=100*(a.vvt+a.vvm+a.vvb);a.q7=100*(a.vvt+a.vvm+a.vvb);a.q11=100*(a.vvt+a.vvm+a.vvb);a.q12=100*(a.vvt+a.vvm+a.vvb);a.q13=100*(a.vvt+a.vvm+a.vvb);a.q14=100*(a.vvt+a.vvm+a.vvb);a.q15=100*(a.vvt+a.vvm+a.vvb);a.q16=\n100*(a.vvt+a.vvm+a.vvb);a.q17=100*(a.vvt+a.vvm+a.vvb);a.q18=100*(a.vvt+a.vvm+a.vvb);a.q19=100*(a.vvt+a.vvm+a.vvb);a.q20=100*(a.vvt+a.vvm+a.vvb);a.q21=100*(a.vvt+a.vvm+a.vvb);a.q22=100*(a.vvt+a.vvm+a.vvb);a.q23=100*(a.vvt+a.vvm+a.vvb);a.q24=100*(a.vvt+a.vvm+a.vvb);a.q25=100*(a.vvt+a.vvm+a.vvb);a.q26=100*(a.vvt+a.vvm+a.vvb);a.q27=100*(a.vvt+a.vvm+a.vvb);a.q28=100*(a.vvt+a.vvm+a.vvb);a.q29=100*(a.vvt+a.vvm+a.vvb);a.q30=100*(a.vvt+a.vvm+a.vvb);a.q31=100*(a.vvt+a.vvm+a.vvb);a.q32=100*(a.vvt+a.vvm+a.vvb);\na.angle=4.38+.1*a.bass;a.q1=a.angle;a.q8=div(a.meshx,a.meshy);a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.9,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.1+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),5);a.monitor=a.index2;a.q20=a.avg;a.q21=a.beat;\na.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;a.q27=a.index;a.q28=a.index2;a.k1=a.is_beat*equal(mod(a.index,2),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott_=div(3.1416*a.p2,4);a.rott+=div(6,a.fps)*a.q2;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.ran=bnot(a.q24)*a.ran+a.q24*(Math.floor(rand(50))-24);a.tran=Math.tan(a.ran);a.tran=Math.max(a.tran,-5);a.tran=Math.min(a.tran,5);a.trel=a.trel+div(.6,a.fps)*a.tran+a.q24;a.q5=\nMath.cos(a.trel);a.q6=Math.sin(a.trel);a.q7=-a.q6;a.q8=a.q5;a.movex=a.movex*a.dec_slow+div(3*Math.sin(a.rott),a.fps);a.q9=a.movex;a.spd=a.spd*bnot(a.q24)+a.q26*a.q24;a.movez+=div(.15,a.fps)*a.spd;a.q30=a.movez;a.mv_x=20;a.mv_y=15;a.mv_a=.1;a.mv_l=0;a.q18=Math.sin(div(a.time,7));a.q19=Math.sin(div(a.time,11));a.q32=pow(.98,div(30,a.fps));a.q10=0;a.q11=-.5;a.q12=0;a.q13=.5;a.q14=div(.5,Math.asin(1));a.q15=.1*a.time;a.q16=.1*-a.time;","pixel_eqs_str":"a.zoom=1;a.warp=.1;","init_eqs_eel":"p1 = 2000; p2 = 200; p3=50;","frame_eqs_eel":"//martin no religion / my omniversal absence for changing the background light\nvb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nrunbass=runbass+vvb;\nrunmids=runmids+vvm ;\nruntreb=runtreb+vvt;\npi23=4*asin(-1)*.33333333333333;\natime=(runtreb+runmids+runbass)*1.85;\nq8= (sin(atime-0*pi23)+1)*.4;\nq9= (sin(atime-1*pi23)+1)*.4;\nq10=(sin(atime-2*pi23)+1)*.4;\n\nvb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = (vvt+vvm+vvb)*100;\nq2 = (vvt+vvm+vvb)*100;\nq3 = (vvt+vvm+vvb)*100;\nq4 =(vvt+vvm+vvb)*100;\nq5 =(vvt+vvm+vvb)*100;\nq6 =(vvt+vvm+vvb)*100;\nq4 =(vvt+vvm+vvb)*100;\nq5 =(vvt+vvm+vvb)*100;\nq6 =(vvt+vvm+vvb)*100;\nq7 =(vvt+vvm+vvb)*100;\nq11=(vvt+vvm+vvb)*100;\nq12=(vvt+vvm+vvb)*100;\nq13=(vvt+vvm+vvb)*100;\nq14=(vvt+vvm+vvb)*100;\nq15=(vvt+vvm+vvb)*100;\nq16=(vvt+vvm+vvb)*100;\nq17=(vvt+vvm+vvb)*100;\nq18=(vvt+vvm+vvb)*100;\nq19=(vvt+vvm+vvb)*100;\nq20=(vvt+vvm+vvb)*100;\nq21=(vvt+vvm+vvb)*100;\nq22=(vvt+vvm+vvb)*100;\nq23=(vvt+vvm+vvb)*100;\nq24=(vvt+vvm+vvb)*100;\nq25=(vvt+vvm+vvb)*100;\nq26=(vvt+vvm+vvb)*100;\nq27=(vvt+vvm+vvb)*100;\nq28=(vvt+vvm+vvb)*100;\nq29=(vvt+vvm+vvb)*100;\nq30=(vvt+vvm+vvb)*100;\nq31=(vvt+vvm+vvb)*100;\nq32=(vvt+vvm+vvb)*100;\n\n// Dark side of the moon\n// 2007.01.23 raron\n\nangle = 4.38 + bass * 0.1;\nq1 = angle;\nq8 =  meshx/meshy;\n\n\ndec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .1+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%5;\nmonitor = index2;\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\nq27 = index;\nq28 = index2;\nk1 =  is_beat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott_ = p2 * 3.1416/4;\nrott =  rott +  .2*30/fps*q2;\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\nran = bnot(q24)*ran + q24 * (int(rand(50))-24);\ntran = tan(ran);\ntran = max(tran,-5);\ntran = min(tran,5);\ntrel = trel + .02*30/fps*tran+q24;\nq5 = cos(trel);\nq6 = sin(trel);\nq7 = -q6;\nq8 = q5;\nmovex = movex*dec_slow + .1*sin(rott)*30/fps;\nq9 = movex;\nspd = spd*bnot(q24) + q26*q24;\nmovez = movez + .005*30/fps*spd;\nq30 = movez;\n//q30 = .3* (sin(time/45) + 1.5);\nmv_x = 20;\nmv_y = 15;\nmv_a = .1;\nmv_l = 0;\nq18 = sin(time/7);\nq19 = sin(time/11);\nq32 = pow(0.98, 30/fps); //fade\n\n// coordinates spiral 1\nq10 = 0; // X\nq11 = -0.5; // Y\n\n// coordinates spiral 2\nq12 = 0;\nq13 = 0.5;\n\nq14 = 0.5/asin(1); // pi/4\n\nq15 = time*0.1; // rotation\nq16 = -time*0.1; // growth","pixel_eqs_eel":"zoom = 1;\nwarp = .1;","warp":"float xlat_mutableq25;\n shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = (((0.2 * q28) * sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )) + (rand_frame * 64.0)).x;\n  float tmpvar_5;\n  tmpvar_5 = (0.5 + (rand_preset * 10.0)).x;\n  uv_1 = (uv + (clamp (\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\n  , vec2(\n    -(tmpvar_5)\n  ), vec2(tmpvar_5)) / 20.0));\n  uv6_2 = (0.4 * sin((\n    (tmpvar_3 * 2.0)\n   * \n    (4.0 + q28)\n  )));\n  xlat_mutableq25 = (q24 + 0.01);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((xlat_mutableq25 * \n    (((texture (sampler_main, uv_1).xyz - (\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\n     * 0.04)) + (0.15 * (vec3(\n      (0.06 / sqrt(dot (uv6_2, uv6_2)))\n    ) * roam_cos.xyz))) - 0.362)\n  ) * 0.428) + ((1.0 - xlat_mutableq25) * (texture (sampler_main, uv_orig).xyz - 0.0015)));\n  ret = tmpvar_6.xyz;\n }","comp":"vec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  float inten_3;\n  float dist_4;\n  float ang2_5;\n  vec2 uv2_6;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  mat2 tmpvar_7;\n  tmpvar_7[uint(0)] = _qb.xy;\n  tmpvar_7[1u] = _qb.zw;\n  uv_1 = (uv_1 * tmpvar_7);\n  dist_4 = 1.0;\n  inten_3 = 1.0;\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\n  for (float n_2 = 4.0; n_2 >= 0.0; n_2 = (n_2 - 1.0)) {\n    vec2 spiral_8;\n    vec2 c_1_9;\n    vec2 denominator_10;\n    vec2 numerator_11;\n    ang2_5 = (n_2 / 4.0);\n    float tmpvar_12;\n    tmpvar_12 = cos(ang2_5);\n    float tmpvar_13;\n    tmpvar_13 = sin(ang2_5);\n    uv2_6.x = ((uv_1.x * tmpvar_12) - (uv_1.y * tmpvar_13));\n    uv2_6.y = ((uv_1.x * tmpvar_13) + (uv_1.y * tmpvar_12));\n    dist_4 = (1.0 - fract((\n      (0.25 * n_2)\n     + q30)));\n    inten_3 = ((sqrt(dist_4) * (1.0 - dist_4)) * 2.0);\n    vec2 tmpvar_14;\n    tmpvar_14.x = (q18 * n_2);\n    tmpvar_14.y = q19;\n    vec2 tmpvar_15;\n    tmpvar_15 = (((\n      ((((\n        (3.0 * uv2_6)\n       * dist_4) * (1.0 + \n        (q5 * uv_1.x)\n      )) + 0.5) + tmpvar_14)\n     - 0.5) * 2.0) * aspect.wz);\n    vec2 tmpvar_16;\n    tmpvar_16.x = q10;\n    tmpvar_16.y = q11;\n    numerator_11 = ((tmpvar_15 + tmpvar_16) * 64.0);\n    vec2 tmpvar_17;\n    tmpvar_17.x = q12;\n    tmpvar_17.y = q13;\n    denominator_10 = (tmpvar_15 + tmpvar_17);\n    vec2 tmpvar_18;\n    tmpvar_18.x = ((numerator_11.x * denominator_10.x) + (numerator_11.y * denominator_10.y));\n    tmpvar_18.y = ((numerator_11.y * denominator_10.x) - (numerator_11.x * denominator_10.y));\n    c_1_9 = ((tmpvar_18 / (\n      (denominator_10.x * denominator_10.x)\n     + \n      (denominator_10.y * denominator_10.y)\n    )) - 0.5);\n    float tmpvar_19;\n    float tmpvar_20;\n    tmpvar_20 = (min (abs(\n      (c_1_9.x / c_1_9.y)\n    ), 1.0) / max (abs(\n      (c_1_9.x / c_1_9.y)\n    ), 1.0));\n    float tmpvar_21;\n    tmpvar_21 = (tmpvar_20 * tmpvar_20);\n    tmpvar_21 = (((\n      ((((\n        ((((-0.01213232 * tmpvar_21) + 0.05368138) * tmpvar_21) - 0.1173503)\n       * tmpvar_21) + 0.1938925) * tmpvar_21) - 0.3326756)\n     * tmpvar_21) + 0.9999793) * tmpvar_20);\n    tmpvar_21 = (tmpvar_21 + (float(\n      (abs((c_1_9.x / c_1_9.y)) > 1.0)\n    ) * (\n      (tmpvar_21 * -2.0)\n     + 1.570796)));\n    tmpvar_19 = (tmpvar_21 * sign((c_1_9.x / c_1_9.y)));\n    if ((abs(c_1_9.y) > (1e-08 * abs(c_1_9.x)))) {\n      if ((c_1_9.y < 0.0)) {\n        if ((c_1_9.x >= 0.0)) {\n          tmpvar_19 += 3.141593;\n        } else {\n          tmpvar_19 = (tmpvar_19 - 3.141593);\n        };\n      };\n    } else {\n      tmpvar_19 = (sign(c_1_9.x) * 1.570796);\n    };\n    float tmpvar_22;\n    tmpvar_22 = (-(n_2) * tmpvar_19);\n    vec2 tmpvar_23;\n    tmpvar_23.x = ((n_2 + (tmpvar_22 * q14)) + q15);\n    tmpvar_23.y = (((n_2 + \n      ((0.5 * aspect.w) * log(sqrt(dot (c_1_9, c_1_9))))\n    ) + (tmpvar_22 * q14)) + q16);\n    spiral_8 = (0.5 + ((0.5 - \n      abs(((fract(\n        (tmpvar_23 * 0.5)\n      ) * 2.0) - 1.0))\n    ) * 0.97));\n    xlat_mutableneu = (texture (sampler_main, spiral_8).xyz + (q6 * (\n      (texture (sampler_blur1, fract((spiral_8 * 1.04))).xyz * scale1)\n     + bias1).zyx));\n    xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_3));\n  };\n  vec3 tmpvar_24;\n  tmpvar_24 = mix (xlat_mutableret1, xlat_mutableret1.yzx, vec3((q26 / 6.0)));\n  xlat_mutableret1 = tmpvar_24;\n  vec4 tmpvar_25;\n  tmpvar_25.w = 1.0;\n  tmpvar_25.xyz = ((tmpvar_24 * 2.0) + ((\n    ((1.0 - rad) * q26)\n   / 99.0) * texture (sampler_main, (\n    (q5 / 99.0)\n   + \n    (uv_1 * (2.0 - rad))\n  )).xyz));\n  ret = tmpvar_25.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\nfloat2 uv6 = uv1;\nfloat z = .2*q28*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat clp = .5+rand_preset*10;\nfloat2 rs = clamp(tan(z)*d,-clp,clp);\nuv += rs/20;\n\nuv6 = .4*sin(uv1*2*(4+q28));\nmus = .06/(length(uv6));\nmus *= roam_cos;\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.04 + .15*mus;\n\n//ret1 = lerp(ret1,ret1.gbr,lum(ret1));\nq25 = q24+.01;\nret = q25*(ret1-.362)*.428 + (1-q25)* (GetPixel(uv_orig)-.0015);\n}","comp_hlsl":"float3 ret1, neu;\nfloat2 uv2,uv3;\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nuv = mul(uv, float2x2(_qb));\n\nfloat dist = 1;\nfloat inten = 1;\nret1 = 0;\nint anz = 4;\nfloat n = anz;\nwhile (n >= 0) {\n    ang2 = 1*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n//uv2 = uv;\n    dist = 1-frac(1.0/anz*n+q30); //evtl sqrt !\n    inten =  sqrt(dist)*(1-dist)*2;\nfloat2 uv3 = 3*uv2*dist*(1+q5*uv.x) + 0.5 +float2(q18*n,q19) ;\n\nfloat2 numerator, denominator, fraction;\n\n/*** Flexis cleaned up Moebius spiral code ***/\n\nfloat cutoff = 0.97;\nint n1 = -1;\nfloat s = .5;\n\n   float2 c = (uv3-0.5)*2*aspect.wz;\n   numerator = (c + float2(q10,q11))*64;\n   denominator = c + float2(q12,q13);\n   fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,\n                      numerator.y*denominator.x - numerator.x*denominator.y)/\n                      (denominator.x*denominator.x + denominator.y*denominator.y);\n   c = fraction-0.5;\n   float1 ang_hq = n*n1*atan2(c.x,c.y);\n   float2 spiral = float2(n+ang_hq*q14+q15,n+s*aspect.w*log(length(c))+ang_hq*q14+q16);\n   spiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*cutoff; // mirror\n\n/**********************************************/\nfloat3 cmul = float3(dist,1-dist,1-(dist-.5)*(dist-.5)*4);\n    neu = tex2D(sampler_main,spiral) +q6*GetBlur1(frac(spiral*1.04)).bgr*1; \n    \n//    neu = neu*cmul;\n     ret1 = max(ret1,neu*inten);\nn--;    \n}\n\nret1 = lerp(ret1,ret1.gbr,q26/6);\nret = ret1*2 + (1-rad)*q26/99*GetPixel(q5/99+uv*(2-rad));\n\n}"}