{"version":2,"baseVals":{"rating":5,"decay":0.96,"wave_mode":5,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.533,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":2.594,"fshader":1,"zoom":1.00496,"dy":-0.01,"warp":0.27803,"sx":0.99967,"sy":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_a":0},"shapes":[{"baseVals":{"g2":0,"border_r":0.4,"border_g":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r = if(above(bass, 1.2), .5*cos(time*1.8), .5*sin(time*1.8));\ng = if(above(bass, 1.2), .5*cos(time*2.3), .5*sin(time*2.3));\nb = if(above(bass, 1.2), .5*cos(time*3.2), .5*sin(time*3.2));\nborder_a = .25*sin(time);\n\nang = ang + .67*sin(time);\nrad = rad + bass*.2;\n\nframetest = equal(frame%2, 0);\n\n//x = if(frametest, x - .25*sin(time), x + .25*sin(time);\nx = x - .1*tan(time*3.14);\ny = y - .1*sin(time*3.14);\nx = if(frametest, x, 1-x);\ny = if(frametest, y, 1-y);\nr = if(frametest, r, b);\nb = if(frametest, b, g);\n\nmonitor = frametest;","init_eqs_eel":"","frame_eqs_eel":"r = if(above(bass, 1.2), .5*cos(time*1.8), .5*sin(time*1.8));\ng = if(above(bass, 1.2), .5*cos(time*2.3), .5*sin(time*2.3));\nb = if(above(bass, 1.2), .5*cos(time*3.2), .5*sin(time*3.2));\nborder_a = .25*sin(time);\n\nang = ang + .67*sin(time);\nrad = rad + bass*.2;\n\nframetest = equal(frame%2, 0);\n\n//x = if(frametest, x - .25*sin(time), x + .25*sin(time);\nx = x - .1*tan(time*3.14);\ny = y - .1*sin(time*3.14);\nx = if(frametest, x, 1-x);\ny = if(frametest, y, 1-y);\nr = if(frametest, r, b);\nb = if(frametest, b, g);\n\nmonitor = frametest;"},{"baseVals":{"enabled":1,"rad":2.41456,"g2":0,"border_r":0.4,"border_g":0.5},"init_eqs_str":"a.frametest=0;a.oldr=0;a.monitor=0;","frame_eqs_str":"a.r=.5*Math.sin(2.234*a.time);a.g=.5*Math.sin(2.345*a.time);a.b=.5*Math.sin(2.456*a.time);a.border_a=.25*Math.sin(a.time);a.ang+=.67*Math.sin(a.time);a.rad+=.1*a.bass;a.frametest=equal(mod(a.frame,2),0);a.x-=.2*Math.sin(2*a.time);a.y-=.2*Math.tan(2*a.time);a.x=.00001<Math.abs(a.frametest)?a.x:1-a.x;a.y=.00001<Math.abs(a.frametest)?a.y:1-a.y;a.oldr=a.r;a.r=.00001<Math.abs(a.frametest)?a.r:a.b;a.b=.00001<Math.abs(a.frametest)?a.b:a.oldr;a.monitor=a.frametest;","init_eqs_eel":"","frame_eqs_eel":"r = .5*sin(time*2.234);\ng = .5*sin(time*2.345);\nb = .5*sin(time*2.456);\nborder_a = .25*sin(time);\n\nang = ang + .67*sin(time);\nrad = rad + bass*.1;\n\nframetest = equal(frame%2, 0);\n\n//x = if(frametest, x - .25*sin(time), x + .25*sin(time);\nx = x - .2*sin(time*2);\ny = y - .2*tan(time*2);\nx = if(frametest, x, 1-x);\ny = if(frametest, y, 1-y);\noldr = r;\nr = if(frametest, r, b);\nb = if(frametest, b, oldr);\n\nmonitor = frametest;"},{"baseVals":{"sides":30,"additive":1,"textured":1,"rad":0.44484,"r":0,"a2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r2 = if(above(bass, 1.2), 0.5*sin(time*1.523), 1);\ng2 = if(above(bass, 1.2), 0.5*sin(time*1.983), 1);\nb2 = if(above(bass, 1.2), 0.75+.5*sin(time*1.194), 1);\nrad = rad - .4*bass_att;\n\nx = x +.5*sin(time);\ny = y -.2*cos(time);","init_eqs_eel":"","frame_eqs_eel":"r2 = if(above(bass, 1.2), 0.5*sin(time*1.523), 1);\ng2 = if(above(bass, 1.2), 0.5*sin(time*1.983), 1);\nb2 = if(above(bass, 1.2), 0.75+.5*sin(time*1.194), 1);\nrad = rad - .4*bass_att;\n\nx = x +.5*sin(time);\ny = y -.2*cos(time);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.du=0;a.q1=0;a.mult=0;a.ang2=0;a.dv=0;a.q4=0;a.q2=0;a.dist=0;a.q3=0;","frame_eqs_str":"a.wave_r+=.35*(.6*Math.sin(.98*a.time)+.4*Math.sin(1.047*a.time));a.wave_g+=.35*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.wave_b+=.35*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.q1=2*a.cx-1+.62*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.q2=2*a.cy-1+.62*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.q3=2*a.cx-1+.62*(.6*Math.sin(.174*-a.time)+.4*Math.sin(.364*a.time));a.q4=2*a.cy-1+.62*(.6*Math.sin(.234*a.time)+.4*Math.sin(.271*-a.time));\na.decay-=.01*equal(mod(a.frame,5),0);","pixel_eqs_str":"a.du=2*a.x-1-a.q1;a.dv=2*a.y-1-a.q2;a.dist=sqrt(a.du*a.du+a.dv*a.dv);a.ang2=Math.atan2(a.du,a.dv);a.mult=div(.008,a.dist+.4);a.dx+=a.mult*Math.sin(a.ang2-1.5);a.dy+=a.mult*Math.cos(a.ang2-1.5);a.du=2*a.x-1-a.q3;a.dv=2*a.y-1-a.q4;a.dist=sqrt(a.du*a.du+a.dv*a.dv);a.ang2=Math.atan2(a.du,a.dv);a.mult=div(.008,a.dist+.4);a.dx+=a.mult*Math.sin(a.ang2+1.5);a.dy+=a.mult*Math.cos(a.ang2+1.5);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\nq1 = (cx*2-1) + 0.62*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\nq2 = (cy*2-1) + 0.62*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\nq3 = (cx*2-1) + 0.62*( 0.60*sin(0.174*-time) + 0.40*sin(0.364*time) );\nq4 = (cy*2-1) + 0.62*( 0.60*sin(0.234*time) + 0.40*sin(0.271*-time) );\ndecay = decay - 0.01*equal(frame%5,0);","pixel_eqs_eel":"du = x*2-1 - q1;\ndv = y*2-1 - q2;\ndist = sqrt(du*du+dv*dv);\nang2 = atan2(du,dv);\nmult = 0.008/(dist+0.4);\ndx = dx + mult*sin(ang2-1.5);\ndy = dy + mult*cos(ang2-1.5);\ndu = x*2-1 - q3;\ndv = y*2-1 - q4;\ndist = sqrt(du*du+dv*dv);\nang2 = atan2(du,dv);\nmult = 0.008/(dist+0.4);\ndx = dx + mult*sin(ang2+1.5);\ndy = dy + mult*cos(ang2+1.5);","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (((\n    ((texture (sampler_blur2, (uv + vec2(0.024, 0.0))).xyz * scale2) + bias2)\n   - \n    ((texture (sampler_blur2, (uv - vec2(0.024, 0.0))).xyz * scale2) + bias2)\n  ).y * 1280.0) * texsize.z);\n  tmpvar_2.y = (((\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.024))).xyz * scale2) + bias2)\n   - \n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.024))).xyz * scale2) + bias2)\n  ).y * 1024.0) * texsize.w);\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - (tmpvar_2 * 0.085));\n  ret_1.y = texture (sampler_fc_main, (tmpvar_3 - floor(tmpvar_3))).y;\n  ret_1.y = (ret_1.y + ((\n    ((ret_1.y - ((texture (sampler_blur1, \n      (tmpvar_3 - floor(tmpvar_3))\n    ).xyz * scale1) + bias1).y) - 0.1)\n   * 0.1) + 0.02));\n  ret_1.z = (((texture (sampler_main, uv_orig).y - ret_1.y) * 4.0) + 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (uv.x + 0.001);\n  tmpvar_3.y = uv.y;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\n  float tmpvar_5;\n  tmpvar_5 = abs(((\n    (((tmpvar_2.x + tmpvar_2.y) + tmpvar_2.z) - tmpvar_4.x)\n   - tmpvar_4.y) - tmpvar_4.z));\n  if ((tmpvar_5 > 0.1)) {\n    ret_1 = ((texture (sampler_blur2, uv).xyz * scale2) + bias2);\n  } else {\n    ret_1 = ((texture (sampler_blur3, uv).xyz * scale3) + bias3);\n  };\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_blur3, uv);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_blur1, uv);\n  ret_1 = (ret_1 + ((1.5 * \n    ((tmpvar_6.xyz * scale3) + bias3)\n  ) - (\n    (tmpvar_7.xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 * 2.25);\n  float tmpvar_8;\n  tmpvar_8 = dot (ret_1, vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_9;\n  tmpvar_9 = mix ((0.75 * vec3(tmpvar_8)), (vec3(tmpvar_8) * (\n    ((tmpvar_6.xyz * scale3) + bias3)\n   - \n    ((tmpvar_7.xyz * scale1) + bias1)\n  )), ((\n    ((0.1 * rand_preset).xyz + (0.5 * ((hue_shader * \n      (1.0 + treb_att)\n    ) - (treb_att - 1.75))))\n   + \n    (0.5 * _qa.xyz)\n  ) * vec3(tmpvar_8)));\n  ret_1 = (tmpvar_9 * tmpvar_9);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_1;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n\n   uv = uv - float2(0,1)*texsize.zw*0;\n\n    float1 d = 0.024;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*1280*texsize.z;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*1024*texsize.w;\n    float2 my_uv = uv - float2(dx,dy)*0.085;\n\n\n\n    ret.y = tex2D( sampler_fc_main, my_uv - floor(my_uv)).y;\n    ret.y += (ret.y - GetBlur1(my_uv - floor(my_uv)).y - 0.1)*.1 +0.02;\n    ret.z = (tex2D(sampler_main, uv_orig).y - ret.y)*4 + 0.5;\n//ret = 0;\n\n}","comp_hlsl":"shader_body\n{\n\nfloat3 orig=tex2D(sampler_main,uv);\nfloat3 nex=tex2D(sampler_main,float2(uv.x+0.001,uv.y));\n\nif(abs(orig.x+orig.y+orig.z-nex.x-nex.y-nex.z)>0.1)\n{ret=GetBlur2(uv);}\nelse{ret=GetBlur3(uv);}; \n\nret += 1.5*GetBlur3(uv)-GetBlur1(uv);\n\nret *= 2.25;\nret = lum(ret);\nfloat3 hue_shader_x = (hue_shader*(1+treb_att))-(treb_att-1.75);\nret = lerp(.75*ret,ret*(GetBlur3(uv)-GetBlur1(uv)),(0.1*rand_preset+0.5*hue_shader_x+0.5*_qa.xyz)*ret);\nret *= ret; //darken\n//ret *= ret;\n//ret *= sqrt(ret); //brighten\n//ret = 1-ret; //invert\n}"}