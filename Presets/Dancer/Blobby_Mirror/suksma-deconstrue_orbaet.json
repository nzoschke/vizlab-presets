{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":59.13256,"zoom":0.99951,"warp":0.16217,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_a":1,"ib_size":0.26,"mv_x":32,"mv_y":24,"mv_l":2.5,"mv_a":0.2},"shapes":[{"baseVals":{"enabled":1,"sides":54,"textured":1,"rad":0.49138,"tex_ang":3.14159,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"r":0,"g":1,"g2":0,"border_a":0},"init_eqs_str":"a.q3=0;a.q4=0;a.q7=0;","frame_eqs_str":"a.x=a.q3;a.y=1-a.q4;a.r=1;a.g=.4+.4*Math.sin(1.342*a.time);a.b=0;a.rad=.1*a.mid;a.a=a.q7;","init_eqs_eel":"","frame_eqs_eel":"x=q3;\ny=1-q4;\n\nr = 1;\ng = .4 + .4*sin(time*1.342);\nb = 0;\n\nrad = .1*mid;\na = q7;"},{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"r":0,"g2":0,"border_a":0},"init_eqs_str":"a.q5=0;a.q6=0;a.q7=0;","frame_eqs_str":"a.x=a.q5;a.y=1-a.q6;a.rad=.2*a.bass;a.a=a.q7;","init_eqs_eel":"","frame_eqs_eel":"x=q5;\ny=1-q6;\n\nrad = .2*bass;\n\na = q7;"},{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;a.q7=0;","frame_eqs_str":"a.x=a.q1;a.y=1-a.q2;a.rad=.1*a.treb;a.a=a.q7;","init_eqs_eel":"","frame_eqs_eel":"x=q1;\ny=1-q2;\n\n\nrad = treb*.1;\n\na = q7;"}],"waves":[{"baseVals":{"sep":51,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"sep":51,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"sep":51,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"sep":51,"usedots":1,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);"}],"init_eqs_str":"a.tic=0;a.sw=0;a.vt=0;a.des=0;a.q6=0;a.tim=0;a.bt=0;a.q1=0;a.q5=0;a.xd=0;a.mid_avg=0;a.dis=0;a.tt=0;a.tin=0;a.bass_avg=0;a.vav=0;a.yd=0;a.an=0;a.q4=0;a.mt=0;a.sz=0;a.ra=0;a.treb_avg=0;a.q2=0;a.q3=0;a.q7=0;a.rb=0;","frame_eqs_str":"a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.ra=10;a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.rb=1;a.vav=a.tic*(a.vav*(div(1,a.tic)-a.rb)+a.rb*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb_avg;a.mt+=a.tic*a.mid_avg;a.bt+=a.tic*a.bass_avg;a.vt+=a.tic*(a.treb_avg+a.mid_avg+a.bass_avg)*.33333;a.sz=.15;a.q1=.5+a.sz*Math.sin(.629*\na.tt)-a.sz*Math.sin(.107*a.tt);a.q2=.5+a.sz*Math.sin(.987*a.tt)-a.sz*Math.sin(.456*a.tt);a.q3=.5+a.sz*Math.sin(.654*a.mt)-a.sz*Math.sin(.355*a.mt);a.q4=.5+a.sz*Math.sin(.548*a.mt)-a.sz*Math.sin(.875*a.mt);a.q5=.5+a.sz*Math.sin(.687*a.bt)-a.sz*Math.sin(.318*a.bt);a.q6=.5+a.sz*Math.sin(.465*a.bt)-a.sz*Math.sin(.526*a.bt);a.sw=above(a.tim,.067);a.tim=.00001<Math.abs(a.sw)?a.tim-.067:a.tim;a.tim+=a.tic;a.zoom=1-.01*a.sw;a.sx=1+.105*a.sw;a.monitor=a.tim;a.q7=a.sw;","pixel_eqs_str":"a.xd=a.q1-a.x;a.yd=a.q2-a.y;a.dis=pow(a.xd*a.xd+a.yd*a.yd,.5);a.des=1-.7071068*a.dis;a.des=pow(a.des,8)*-a.treb;a.an=Math.acos(div(Math.abs(a.xd),a.dis));a.dx=.07*sign(a.xd)*Math.cos(a.an)*a.des;a.dy=.07*sign(a.yd)*Math.sin(a.an)*a.des;a.dy+=sign(a.xd)*a.treb*.05*Math.cos(a.an)*a.des;a.dx+=sign(a.yd)*a.treb*.05*Math.sin(a.an)*a.des*-1;a.xd=a.q3-a.x;a.yd=a.q4-a.y;a.dis=pow(a.xd*a.xd+a.yd*a.yd,.5);a.des=1-.7071068*a.dis;a.des=pow(a.des,8)*-a.mid;a.an=Math.acos(div(Math.abs(a.xd),\na.dis));a.dx+=.07*sign(a.xd)*Math.cos(a.an)*a.des;a.dy+=.07*sign(a.yd)*Math.sin(a.an)*a.des;a.dy+=sign(a.xd)*a.mid*.05*Math.cos(a.an)*a.des;a.dx+=sign(a.yd)*a.mid*.05*Math.sin(a.an)*a.des*-1;a.xd=a.q5-a.x;a.yd=a.q6-a.y;a.dis=pow(a.xd*a.xd+a.yd*a.yd,.5);a.des=1-.7071068*a.dis;a.des=pow(a.des,8)*-a.bass;a.an=Math.acos(div(Math.abs(a.xd),a.dis));a.dx+=.07*sign(a.xd)*Math.cos(a.an)*a.des;a.dy+=.07*sign(a.yd)*Math.sin(a.an)*a.des;a.dy+=sign(a.xd)*a.bass*.05*Math.cos(a.an)*a.des;a.dx+=sign(a.yd)*a.bass*\n.05*Math.sin(a.an)*a.des*-1;a.dx*=a.q7;a.dy*=a.q7;","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\ntic = min(time - tin,.1);\ntin = time;\n\nra = 10;\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\n\nrb = 1;\nvav = tic*(vav*(1/tic - rb) + rb*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb_avg;\nmt = mt + tic*mid_avg;\nbt = bt + tic*bass_avg;\nvt = vt + tic*(treb_avg+mid_avg+bass_avg)*.33333;\n\nsz = .15;\n\nq1 = .5 + sz*sin(tt*.629) - sz*sin(tt*.107);\nq2 = .5 + sz*sin(tt*.987) - sz*sin(tt*.456);\n\nq3 = .5 + sz*sin(mt*.654) - sz*sin(mt*.355);\nq4 = .5 + sz*sin(mt*.548) - sz*sin(mt*.875);\n\nq5 = .5 + sz*sin(bt*.687) - sz*sin(bt*.318);\nq6 = .5 + sz*sin(bt*.465) - sz*sin(bt*.526);\n\nsw = above(tim,.067);\ntim = if(sw,tim-.067,tim);\ntim = tim + tic;\n\nzoom = 1 - .01*sw;\nsx = 1 + .105*sw;\n\nmonitor = tim;\n\nq7 = sw;","pixel_eqs_eel":"xd = q1-x;\nyd = q2-y;\n\ndis = pow(xd*xd+yd*yd,.5);\ndes = 1 - dis*.7071068;\ndes = pow(des,8)*-treb;\nan = acos(abs(xd)/dis);\n\ndx = sign(xd)*.07*cos(an)*des;\ndy = sign(yd)*.07*sin(an)*des;\n\ndy = dy + sign(xd)*treb*.05*cos(an)*des;\ndx = dx + sign(yd)*treb*.05*sin(an)*des*-1;\n\nxd = q3-x;\nyd = q4-y;\n\ndis = pow(xd*xd+yd*yd,.5);\ndes = 1 - dis*.7071068;\ndes = pow(des,8)*-mid;\nan = acos(abs(xd)/dis);\n\ndx = dx + sign(xd)*.07*cos(an)*des;\ndy = dy + sign(yd)*.07*sin(an)*des;\n\ndy = dy + sign(xd)*mid*.05*cos(an)*des;\ndx = dx + sign(yd)*mid*.05*sin(an)*des*-1;\n\nxd = q5-x;\nyd = q6-y;\n\ndis = pow(xd*xd+yd*yd,.5);\ndes = 1 - dis*.7071068;\ndes = pow(des,8)*-bass;\nan = acos(abs(xd)/dis);\n\ndx = dx + sign(xd)*.07*cos(an)*des;\ndy = dy + sign(yd)*.07*sin(an)*des;\n\ndy = dy + sign(xd)*bass*.05*cos(an)*des;\ndx = dx + sign(yd)*bass*.05*sin(an)*des*-1;\n\ndx = dx*q7;\ndy = dy*q7;","warp":" shader_body { \n  float final_noise_1;\n  vec3 tmpvar_2;\n  tmpvar_2.xy = uv;\n  tmpvar_2.z = (q2 * 10.0);\n  final_noise_1 = ((texture (sampler_noisevol_hq, tmpvar_2) * 2.0) - 1.0).x;\n  final_noise_1 = (final_noise_1 + (0.5 * (\n    (texture (sampler_noisevol_hq, (tmpvar_2 * 2.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.25 * (\n    (texture (sampler_noisevol_hq, (tmpvar_2 * 4.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.125 * (\n    (texture (sampler_noisevol_hq, (tmpvar_2 * 8.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = ((final_noise_1 + 1.0) * 0.5);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (texture (sampler_main, ((\n    ((uv - 0.5) * final_noise_1)\n   * 2.0) + 0.5)).xyz - 0.1);\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv1_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    (((uv - 0.5) * 2.0) + 1.7)\n  )) - (2.0 * tmpvar_5));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\n  )) * (-0.08 + tmpvar_2)));\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    float3 txr = float3(uv,q2*10);\n\n    float final_noise = 0;\n    \n    \n    final_noise += ((1.0/pow(2,0))*((tex3D(sampler_noisevol_hq, txr*pow(2,0))*2)-1)); \n    final_noise += ((1.0/pow(2,1))*((tex3D(sampler_noisevol_hq, txr*pow(2,1))*2)-1)); \n    final_noise += ((1.0/pow(2,2))*((tex3D(sampler_noisevol_hq, txr*pow(2,2))*2)-1)); \n    final_noise += ((1.0/pow(2,3))*((tex3D(sampler_noisevol_hq, txr*pow(2,3))*2)-1)); \n        \n    final_noise =  (final_noise+1)*0.5;\n    \n\n    ret = tex2D( sampler_main, (uv-0.5)*final_noise*2 + 0.5 ).xyz; \n   \n    // darken (decay) over time\n    ret = ret - 0.1; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n\nfloat2 uv1 = uv-.5;\n\nfloat3 ret1 = tex2D(sampler_main, uv) +tex2D(sampler_main, 1-uv)*0;\n\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nfloat dx = GetPixel (uv-hor) - GetPixel (uv+hor);\nfloat dy = GetPixel (uv-ver) - GetPixel (uv+ver);\nfloat2 dz = float2 (dx,dy);\n\nuv1 = .3*cos(uv1*2+1.7) -2*dz;;\nfloat3 dots = saturate(.03/length(uv1));\n\n\nret1 = (-ret1/4) + 6*dots*(-0.08+ret1);\n\nret = ret1;\n}"}