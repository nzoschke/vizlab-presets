{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.95,"echo_zoom":1.448,"echo_alpha":0.8,"wave_mode":5,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"modwavealphastart":2,"modwavealphaend":2,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.00909,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":20.16,"mv_l":0.4,"mv_g":0.4,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"r":0.9,"g":0.7,"b":0.9,"a":0.7,"r2":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5*(Math.sin(a.time)+1);a.y=.5*a.bass_att+.2*Math.sin(.5*a.time);a.ang=a.time;a.rad=.5*a.bass;","init_eqs_eel":"","frame_eqs_eel":"x=(sin(time)+1)*.5;\ny=(bass_att*.5)+(sin(time*.5)*.2);\n\nang=time;\nrad=bass*.5;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.80814,"tex_zoom":1.22018,"a":0.5,"r2":0.9,"b2":0.8,"a2":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.7316,"tex_ang":5.02655,"tex_zoom":0.24832,"r":0.8,"g":0.3,"b":0.8,"a2":0.1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.rad=.9*a.bass;a.ang=a.time;","init_eqs_eel":"","frame_eqs_eel":"rad=bass*.9;\nang=time;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"g":0.2,"b":0.3,"g2":0,"b2":0.1,"border_r":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5*(Math.cos(.2*(a.time+.233))+1);a.y=.5*(Math.sin(.1*a.time)+1)+.5*Math.sin(.13*a.time);a.rad=.2*a.treb;","init_eqs_eel":"","frame_eqs_eel":"x=(cos((time+.233)*.2)+1)*.5;\ny=(sin(time*.1)+1)*.5+(sin(time*.13)*.5);\n\nrad=treb*.2;"}],"waves":[{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x=int(rand(1));\ny=int(rand(1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=int(rand(1));\ny=int(rand(1));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.d=0;a.res=0;a.q1=0;a.x=0;a.v=0;a.diff=0;a.r=0;a.y=0;a.beat=0;a.vol=0;a.q2=0;a.m=0;","frame_eqs_str":"a.vol=8*a.bass+5*a.mid+3*a.treb;a.m=.97*a.m+.08*a.vol;a.monitor=a.vol;a.beat=above(a.vol,a.res)*above(a.vol,a.m)*above(a.vol,16);a.diff=(1-a.beat)*a.diff+a.beat*(a.vol-a.res);a.res=a.beat*(a.vol+.1*a.m)+(1-a.beat)*(a.res-div(60*(.1+.02*a.diff),a.fps));a.res=Math.max(0,a.res);a.x=.00001<Math.abs(a.beat)?.01*Math.floor(rand(60))+.2:a.x;a.y=.00001<Math.abs(a.beat)?.01*Math.floor(rand(60))+.2:a.y;a.q1=a.x;a.q2=a.y;a.wave_x=a.q1;a.wave_y=1-a.q2;","pixel_eqs_str":"a.cx=a.q1;a.cy=a.q2;a.d=pow(sqrt(sqr(a.x-a.cx)+sqr(a.y-a.cy)),.8);a.r=.2;a.v=.2;a.dx=(a.x-a.cx)*a.v*(a.d-a.r);a.dy=(a.y-a.cy)*a.v*(a.d-a.r);","init_eqs_eel":"","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\nm = m*0.97 + vol*0.08;\nmonitor = vol;\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\ndiff = (1-beat)*diff + beat*(vol-res);\nres = beat*(vol + m*0.1) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\nres = max(0,res);\n\n\nx = if(beat,int(rand(60))*0.01 + 0.2,x);\ny = if(beat,int(rand(60))*0.01 + 0.2,y);\nq1 = x;\nq2 = y;\n\nwave_x = q1;\nwave_y = 1-q2;","pixel_eqs_eel":"cx = q1;\ncy = q2;\n\nd = pow(sqrt(sqr(x-cx)+sqr(y-cy)),0.8);\nr = 0.2;\nv = 0.2;\n\ndx = (x - cx)*v*(d-r);\ndy = (y - cy)*v*(d-r);","warp":" shader_body { \n  vec3 rsamp_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_pw_main, uv);\n  ret_2 = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.xy - 0.5)\n   * 12.0) * texsize.zw)));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  rsamp_1 = tmpvar_6;\n  float tmpvar_7;\n  vec2 x_8;\n  x_8 = (tmpvar_4.xy - uv);\n  tmpvar_7 = sqrt(dot (x_8, x_8));\n  float tmpvar_9;\n  vec2 x_10;\n  x_10 = (tmpvar_5.xy - uv);\n  tmpvar_9 = sqrt(dot (x_10, x_10));\n  if ((tmpvar_7 > tmpvar_9)) {\n    ret_2.xy = tmpvar_6.xy;\n  };\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.zw - 0.5)\n   * 48.0) * texsize.zw)));\n  rsamp_1 = tmpvar_11.xyz;\n  float tmpvar_12;\n  vec2 x_13;\n  x_13 = (ret_2.xy - uv);\n  tmpvar_12 = sqrt(dot (x_13, x_13));\n  float tmpvar_14;\n  vec2 x_15;\n  x_15 = (tmpvar_11.xy - uv);\n  tmpvar_14 = sqrt(dot (x_15, x_15));\n  if ((tmpvar_12 > tmpvar_14)) {\n    ret_2.xy = rsamp_1.xy;\n  };\n  ret_2.z = texture (sampler_fw_main, ret_2.xy).z;\n  ret_2.z = (ret_2.z - (q1 * 0.005));\n  if ((ret_2.z < 0.09)) {\n    ret_2 = vec3(0.0, 0.0, 0.0);\n  };\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_2;\n  ret = tmpvar_16.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (1.0 - uv.x);\n  tmpvar_2.y = uv.y;\n  ret_1 = (texture (sampler_main, uv).xyz + texture (sampler_main, tmpvar_2).zyx);\n  ret_1 = ((ret_1 * 2.0) - 0.3);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));\nret.xyz = tex2D( sampler_pw_main,uvm).xyz;\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nrsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nret.z = tex2D(sampler_fw_main,ret.xy).z;\n\nret.z -= q1*.005;\n\nif (ret.z < .09) {\nret*=0;\n}\n\n\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret += tex2D(sampler_main, float2(1-uv.x,uv.y)).zyx;\n    ret = ret*2-0.3; //old gamma effect\n}"}