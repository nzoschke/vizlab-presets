{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":6,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wave_a":4.1,"wave_scale":0.01,"wave_smoothing":0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":2.853,"zoom":1.04,"dx":0.03,"warp":0.47402,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"rad":0.03347,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.xs=0;a.xm=0;a.ys=0;a.ym=0;a.fran=1;a.xs=1;a.ys=1;a.xm=.5;a.ym=.5;","frame_eqs_str":"a.xs*=1-2*above(a.xm,.99)-2*below(a.xm,.01);a.ys*=1-2*above(a.ym,.99)-2*below(a.ym,.01);a.xm+=.03*a.xs*(.4*Math.sin(.53*a.time)+.6*Math.cos(.62*a.time));a.ym+=.03*a.ys*(.5*Math.sin(.29*a.time)+.5*Math.cos(.78*a.time));a.x=a.xm;a.y=a.ym;a.r=.5+.25*Math.sin(12*a.x)+.25*Math.sin(3*a.y);a.g=.5+.25*Math.sin(7*a.x)+.25*Math.sin(32*a.y);a.b=.5+.25*Math.sin(21*a.x)+.25*Math.sin(16*a.y);a.r2=a.r;a.g2=a.g;a.b2=a.b;a.rad=div(.2*(a.bass_att+a.mid_att+a.treb_att),3);","init_eqs_eel":"fran = 1;\nxs = 1;\nys = 1;\nxm = 0.5;\nym = 0.5;","frame_eqs_eel":"xs = xs*(1 - 2*above(xm,0.99) - 2*below(xm,0.01));\nys = ys*(1 - 2*above(ym,0.99) - 2*below(ym,0.01));\n\nxm = xm + 0.03*xs*(sin(time*0.53)*0.4 + 0.6*cos(time*0.62));\nym = ym + 0.03*ys*(sin(time*0.29)*0.5 + 0.5*cos(time*0.78));\n\nx = xm;\ny = ym;\n\nr = 0.5 + 0.25*sin(x*12) + 0.25*sin(y*3);\ng = 0.5 + 0.25*sin(x*7) + 0.25*sin(y*32);\nb = 0.5 + 0.25*sin(x*21) + 0.25*sin(y*16);\nr2 = r; g2 = g; b2 = b;\nrad = 0.2*(bass_att + mid_att + treb_att)/3;"},{"baseVals":{"enabled":1,"sides":44,"rad":0.03347,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.xs=0;a.xm=0;a.ys=0;a.ym=0;a.fran=1;a.xs=1;a.ys=1;a.xm=.5;a.ym=.5;","frame_eqs_str":"a.xs*=1-2*above(a.xm,.99)-2*below(a.xm,.01);a.ys*=1-2*above(a.ym,.99)-2*below(a.ym,.01);a.xm+=.03*a.xs*(.6*Math.sin(.53*a.time)+.4*Math.cos(.62*a.time));a.ym+=.03*a.ys*(.7*Math.sin(.29*a.time)+.3*Math.cos(.78*a.time));a.x=a.xm;a.y=a.ym;a.r=.5+.25*Math.sin(12*a.x)+.25*Math.sin(3*a.y);a.g=.5+.25*Math.sin(7*a.x)+.25*Math.sin(32*a.y);a.b=.5+.25*Math.sin(21*a.x)+.25*Math.sin(16*a.y);a.r2=a.r;a.g2=a.g;a.b2=a.b;a.rad=div(.2*(a.bass_att+a.mid_att+a.treb_att),3);","init_eqs_eel":"fran = 1;\nxs = 1;\nys = 1;\nxm = 0.5;\nym = 0.5;","frame_eqs_eel":"xs = xs*(1 - 2*above(xm,0.99) - 2*below(xm,0.01));\nys = ys*(1 - 2*above(ym,0.99) - 2*below(ym,0.01));\n\nxm = xm + 0.03*xs*(sin(time*0.53)*0.6 + 0.4*cos(time*0.62));\nym = ym + 0.03*ys*(sin(time*0.29)*0.7 + 0.3*cos(time*0.78));\n\nx = xm;\ny = ym;\n\nr = 0.5 + 0.25*sin(x*12) + 0.25*sin(y*3);\ng = 0.5 + 0.25*sin(x*7) + 0.25*sin(y*32);\nb = 0.5 + 0.25*sin(x*21) + 0.25*sin(y*16);\nr2 = r; g2 = g; b2 = b;\nrad = 0.2*(bass_att + mid_att + treb_att)/3;"},{"baseVals":{"sides":44,"rad":0.03347,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"fran = 1;\nxs = 1;\nys = 1;\nxm = 0.5;\nym = 0.5;","frame_eqs_str":"xs = xs*(1 - 2*above(xm,0.99) - 2*below(xm,0.01));\nys = ys*(1 - 2*above(ym,0.99) - 2*below(ym,0.01));\n\nxm = xm + 0.03*xs*(sin(time*0.35)*0.5 + 0.5*cos(time*0.87));\nym = ym + 0.03*ys*(sin(time*0.92)*0.3 + 0.7*cos(time*0.26));\n\nx = xm;\ny = ym;\n\nr = 0.5 + 0.5*sin(time*0.25);\ng = 0.5 + abs(r)*sin(time*0.5);\nb = 0.5 + abs(g)*sin(time);\nr2 = r; g2 = g; b2 = b;\nrad = 1.6*(bass_att + mid_att + treb_att)/3;","init_eqs_eel":"fran = 1;\nxs = 1;\nys = 1;\nxm = 0.5;\nym = 0.5;","frame_eqs_eel":"xs = xs*(1 - 2*above(xm,0.99) - 2*below(xm,0.01));\nys = ys*(1 - 2*above(ym,0.99) - 2*below(ym,0.01));\n\nxm = xm + 0.03*xs*(sin(time*0.35)*0.5 + 0.5*cos(time*0.87));\nym = ym + 0.03*ys*(sin(time*0.92)*0.3 + 0.7*cos(time*0.26));\n\nx = xm;\ny = ym;\n\nr = 0.5 + 0.5*sin(time*0.25);\ng = 0.5 + abs(r)*sin(time*0.5);\nb = 0.5 + abs(g)*sin(time);\nr2 = r; g2 = g; b2 = b;\nrad = 1.6*(bass_att + mid_att + treb_att)/3;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.7*(.2*Math.sin(.933*a.time)+.3*Math.sin(1.045*a.time));a.wave_g+=.7*(.2*Math.sin(.9*a.time)+.3*Math.sin(.956*a.time));a.wave_b+=.2*(.2*Math.sin(.91*a.time)+.3*Math.sin(.92*a.time));a.zoom+=.02*Math.cos(1.713*a.time+2);a.zoom+=.02*Math.cos(2.319*a.time+4);a.zoom+=.02*Math.cos(1.522*a.time+1);","pixel_eqs_str":"a.dx=.002*Math.cos(a.ang+1.57);a.dy=-.002*Math.sin(a.ang+1.57);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.700*( 0.20*sin(0.933*time) + 0.30*sin(1.045*time) );\nwave_g = wave_g + 0.700*( 0.20*sin(0.900*time) + 0.30*sin(0.956*time) );\nwave_b = wave_b + 0.200*( 0.20*sin(0.910*time) + 0.30*sin(0.920*time) );\n\nzoom = zoom + 0.02*cos(time*1.713+2);\nzoom = zoom + 0.02*cos(time*2.319+4);\nzoom = zoom + 0.02*cos(time*1.522+1);","pixel_eqs_eel":"dx= 0.002*cos(ang+1.57);\ndy=-0.002*sin(ang+1.57);","warp":" shader_body { \n  vec3 z_1;\n  vec3 tmpvar_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (0.1 * texsize.zw);\n  tmpvar_2 = (0.25 * ((\n    (texture (sampler_main, (uv + tmpvar_3)).xyz + texture (sampler_main, (uv + (tmpvar_3 * vec2(-1.0, 1.0)))).xyz)\n   + texture (sampler_main, \n    (uv + (tmpvar_3 * vec2(1.0, -1.0)))\n  ).xyz) + texture (sampler_main, (uv - tmpvar_3)).xyz));\n  float tmpvar_4;\n  tmpvar_4 = ((tmpvar_2.x * tmpvar_2.y) * tmpvar_2.y);\n  z_1.x = (tmpvar_2.x + ((\n    -(tmpvar_4)\n   + \n    (0.035 * (1.0 - tmpvar_2.x))\n  ) * 4.0));\n  z_1.y = (tmpvar_2.y + ((tmpvar_4 - \n    (0.095 * tmpvar_2.y)\n  ) * 4.0));\n  z_1.z = tmpvar_2.z;\n  z_1.x = (z_1.x + (0.4 * (\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n   - texture (sampler_main, uv).xyz)).x);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (z_1 + (0.09 * (\n    (texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz * 2.0)\n   - 1.0)));\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  float ang2_1;\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\n  float tmpvar_2;\n  tmpvar_2 = (3.0 + floor((rand_preset.z * 5.95)));\n  ang2_1 = (fract((ang2_1 * tmpvar_2)) / tmpvar_2);\n  ang2_1 = (abs((ang2_1 - \n    (0.5 / tmpvar_2)\n  )) * 6.283185);\n  vec2 tmpvar_3;\n  tmpvar_3.x = cos(ang2_1);\n  tmpvar_3.y = sin(ang2_1);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (texture (sampler_main, (0.5 + (\n    ((0.4 * (rad * sqrt(\n      dot (texsize.xy, texsize.xy)\n    ))) * tmpvar_3)\n   * texsize.zw))).xyz * 1.333);\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n  float2 uv2 = uv;\n\n  // diffused version:\n  float ss = 0.1;\n  float3 blur = 0.25*(\n    tex2D(sampler_main, uv2+ss*texsize.zw*float2( 1, 1)).xyz +\n    tex2D(sampler_main, uv2+ss*texsize.zw*float2(-1, 1)).xyz +\n    tex2D(sampler_main, uv2+ss*texsize.zw*float2( 1,-1)).xyz +\n    tex2D(sampler_main, uv2+ss*texsize.zw*float2(-1,-1)).xyz\n  );\n\n  // diffusion:  \n  ret = blur;\n\n  float F2 = 0.035;\n  float k2 = 0.060;\n  float s = 0.025;\n  float scale = 4;\n\n  // reaction:\n  float3 z = ret;\n  float uvv = ret.x*ret.y*ret.y;\n  z.x += (-uvv + F2*(1-ret.x))*scale;\n  z.y += (uvv - (F2+k2)*ret.y)*scale;\n  //z.x += s*(16-ret.x*ret.y);\n  //z.y += s*(ret.x*ret.y - ret.y - ret.z);\n  z.z += 0;\n\n  // apply laplacian:\n  z.x += (GetBlur2(uv2) - GetPixel(uv2))*0.1*scale;\n\n  ret = z;  \n\n  // add noise:\n  ret += 0.09*(tex2d(sampler_noise_lq, uv*texsize.xy*texsize_noise_lq.zw + rand_frame.xy).xyz*2-1);\n\n  // darken (decay) over time\n  //ret = (ret - 0.002)*0.99;\n}","comp_hlsl":"shader_body\n{\n    float rad_lq = rad * length(texsize.xy)*0.5;\n    float ang_lq = ang;\n    float2 uv_temp1 = (uv - 0.5) * texsize.xy;\n    float rad_hq = length(uv_temp1);\n    float ang_hq = atan2(-uv_temp1.y, uv_temp1.x);\n\n    float2 uv2 = (uv - 0.5);\n    float rad2 = rad_lq*0.8;\n    float ang2 = ang_lq * M_INV_PI_2;\n\n        // ROTATION OVER TIME\n        #if 1\n          ang2 += time*0.025;   //rotate over time\n        #endif\n\n        // FIN TYPE\n        float fins = 3 + floor(rand_preset.z*5.95);\n        #if 1     // SHARP FINS\n          ang2 = frac(ang2*fins)/fins;\n              // ENABLE THIS TO MAKE THE FINS ALTERNATE: (seamless!)\n              ang2 = abs(ang2 - 0.5/fins);\n        #else     // COSINE FINS - a bit slow\n          ang2 = cos(ang2*M_PI_2*fins) * 0.023;\n        #endif\n\n        // RADIAL KALEIDOSCOPING?\n        #if 0\n          rad2 *= g_fTexSize.z;\n            // choose one:\n            //rad2 = lerp(rad2, frac(rad2*3)/3.0, 0.5);\n            rad2 = cos(rad2*5);\n            //rad2 = sqrt(rad2)*0.5;\n            //rad2 += abs(frac(rad2*7)-0.5)/7.0 * 1.15;  // stepifier\n            //rad2 += cos(rad2*61)*0.02;\n          rad2 *= g_fTexSize.x;\n        #endif\n\n    ang2 *= M_PI_2;\n    uv2 = 0.5 + rad2*float2(cos(ang2),sin(ang2))*texsize.zw;\n\n    ret = tex2D(sampler_main, uv2).xyz;\n    ret *= 1.333; // a little bit of overbright\n}"}