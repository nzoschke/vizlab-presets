{"version":2,"baseVals":{"rating":5,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"solarize":1,"wave_a":0.001,"warpanimspeed":0.037,"warpscale":0.015,"zoomexp":1.22019,"warp":0.033,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.09,"ib_r":0,"ib_g":0,"ib_b":0,"mv_r":0.8,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"x":0.75,"y":0.75,"rad":0.7417,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"a2":0.1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_str":"tex_saw = 0.4;","frame_eqs_str":"ang = q1*0.2;\n\ntex_capture = above(q3,1);\ntex_zoom = 0.6;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n\ntex_capture = above(q3,1);\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"textured":1,"x":0.25,"y":0.75,"rad":4.44708,"tex_zoom":0.22746,"r":0,"a":0.1,"g2":0,"a2":0.2,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.q1=0;a.tex_capture=0;a.q3=0;a.tex_saw=.4;","frame_eqs_str":"a.ang=.2*a.q1;a.tex_capture=above(a.q3,1);a.tex_zoom=.6;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n//x = 0.5 + 0.2*sin(q2);\n//y = 0.5 + (0.3*sin(q2));\n\ntex_capture = above(q3,1);\ntex_zoom = 0.6;"},{"baseVals":{"textured":1,"rad":6.621,"tex_zoom":0.22746,"g":1,"b":1,"a":0.2,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_str":"tex_saw = 0.4;","frame_eqs_str":"ang = q1*0.2;\n//x = 0.5 + 0.2*sin(q2);\n//y = 0.5 + (0.3*sin(q2));\n\ntex_capture = above(q3,2);\ntex_zoom = 0.6;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n//x = 0.5 + 0.2*sin(q2);\n//y = 0.5 + (0.3*sin(q2));\n\ntex_capture = above(q3,2);\ntex_zoom = 0.6;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_str":"a.q1=0;a.speed=0;a.v=0;a.xs=0;a.ys=0;","frame_eqs_str":"","point_eqs_str":"a.q1=0;a.speed=.8*a.bass_att;a.v=1E6*a.sample+a.value2*a.bass*.1;a.xs+=Math.sin(a.v)*a.speed*Math.atan(1.51*a.v);a.ys+=Math.sin(a.v)*a.speed*Math.atan(10*a.v);a.x=.5+.5*Math.sin(.1*a.xs)*Math.cos(.2*a.time+a.xs);a.y=.5+.5*Math.sin(.12*a.ys)*Math.cos(.1*a.time+a.xs);a.x=.8*a.x+.1;a.y=.8*a.y+.1;a.r=.5*Math.sin(1.22*a.time)+.6;a.g=.4+.4*Math.sin(1.307*a.time+2*a.y);a.b=.4+.4*Math.sin(1.959*a.time+2*a.x);a.xs=.00001<Math.abs(above(a.xs,1E3))?0:a.xs;a.ys=.00001<Math.abs(above(a.ys,\n1E3))?0:a.ys;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.8;\nv = sample*1000000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v)*speed*atan(v*1.51);\nys = ys + sin(v)*speed*atan((v*10));\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\ny = 0.5 + 0.5*sin(ys*0.12)*cos(time*0.1 + xs);\n\nx = x*0.8 + 0.1;\ny = y*0.8 + 0.1;\n\nr = 0.5 + 0.5*sin(time*1.22) + 0.1;\ng = 0.4 + 0.4*sin(time*1.307 + 2*y);\nb = 0.4 + 0.4*sin(time*1.959 + x*2);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_str":"a.q1=0;a.speed=0;a.v=0;a.xs=0;a.ys=0;","frame_eqs_str":"","point_eqs_str":"a.q1=0;a.speed=.8*a.bass_att;a.v=1E6*a.sample+a.value2*a.bass*.1;a.xs+=Math.sin(a.v)*a.speed*Math.atan(1.51*a.v);a.ys+=Math.sin(a.v)*a.speed*Math.atan(10*a.v);a.x=.5+.5*Math.sin(.1*a.xs)*Math.cos(.2*a.time+a.xs);a.y=.5+.5*Math.sin(.14*a.ys)*Math.cos(.1*a.time+a.xs);a.x=.8*a.x+.1;a.y=.8*a.y+.1;a.x=.6*a.x+.2;a.y=.6*a.y+.2;a.r=.5*Math.sin(1.322*a.time)+.6;a.g=.4+.4*Math.sin(1.5407*a.time+2*a.y);a.b=.4+.4*Math.sin(1.759*a.time+2*a.x);a.xs=.00001<Math.abs(above(a.xs,1E3))?0:a.xs;\na.ys=.00001<Math.abs(above(a.ys,1E3))?0:a.ys;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.8;\nv = sample*1000000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v)*speed*atan(v*1.51);\nys = ys + sin(v)*speed*atan((v*10));\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\ny = 0.5 + 0.5*sin(ys*0.14)*cos(time*0.1 + xs);\n\nx = x*0.8 + 0.1;\ny = y*0.8 + 0.1;\nx = x*0.6 + 0.2;\ny = y*0.6 + 0.2;\n\nr = 0.5 + 0.5*sin(time*1.322) + 0.1;\ng = 0.4 + 0.4*sin(time*1.5407 + 2*y);\nb = 0.4 + 0.4*sin(time*1.759 + x*2);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_str":"a.q1=0;a.speed=0;a.v=0;a.xs=0;a.ys=0;","frame_eqs_str":"","point_eqs_str":"a.q1=0;a.speed=.8*a.bass_att;a.v=1E6*a.sample+a.value2*a.bass*.1;a.xs+=Math.sin(a.v)*a.speed*Math.atan(1.51*a.v);a.ys+=Math.sin(a.v)*a.speed*Math.atan(10*a.v);a.x=.5+.5*Math.sin(.1*a.xs)*Math.cos(.2*a.time+a.xs);a.y=.5+.5*Math.sin(.14*a.ys)*Math.cos(.1*a.time+a.xs);a.x=.8*a.x+.1;a.y=.8*a.y+.1;a.x=.25*a.x+.375;a.y=.25*a.y+.375;a.r=.5*Math.sin(1.622*a.time)+.6;a.g=.4+.4*Math.sin(1.2407*a.time+2*a.y);a.b=.4+.4*Math.sin(1.359*a.time+2*a.x);a.xs=.00001<Math.abs(above(a.xs,1E3))?\n0:a.xs;a.ys=.00001<Math.abs(above(a.ys,1E3))?0:a.ys;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.8;\nv = sample*1000000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v)*speed*atan(v*1.51);\nys = ys + sin(v)*speed*atan((v*10));\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\ny = 0.5 + 0.5*sin(ys*0.14)*cos(time*0.1 + xs);\n\nx = x*0.8 + 0.1;\ny = y*0.8 + 0.1;\nx = x*0.25 + 0.375;\ny = y*0.25 + 0.375;\n\nr = 0.5 + 0.5*sin(time*1.622) + 0.1;\ng = 0.4 + 0.4*sin(time*1.2407 + 2*y);\nb = 0.4 + 0.4*sin(time*1.359 + x*2);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = -x*0.6 + 1;\ny = y*0.9 + 0.05 + bass*0.08;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\ng = 0.4 + 0.4*sin(time*1.478);\nb = 0.4 + 0.4*sin(time*1.125);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = -x*0.6 + 1;\ny = y*0.9 + 0.05 + bass*0.08;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\ng = 0.4 + 0.4*sin(time*1.478);\nb = 0.4 + 0.4*sin(time*1.125);\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_str":"a.vol=0;a.mtime=0;a.q1=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.decay=1;a.zoom=.95+.075*Math.max(a.treb_att,a.bass_att);a.warp=0;a.vol=.25*(a.bass_att+a.mid_att+a.treb_att);a.vol*=a.vol;a.mtime+=.1*a.vol;a.q1=.4*a.mtime-.05*a.time;","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"decay=1;\nzoom=0.95+.075*max(treb_att,bass_att);\n\nwarp = 0;\n\nvol=(bass_att+mid_att+treb_att)*0.25;\nvol=vol*vol;\nmtime=mtime+vol*0.1;\n\nq1=mtime*0.4-.05*time;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1.z = texture (sampler_fc_main, uv).z;\n  ret_1.x = (texture (sampler_main, uv).x * 0.97);\n  ret_1.y = (texture (sampler_main, mix (uv_orig, uv, vec2(0.2, 0.2))).y * 0.98);\n  ret_1.z = ((texture (sampler_main, mix (uv_orig, uv, vec2(0.4, 0.4))).z * 0.96) + (ret_1.xy * 0.25)).x;\n  ret_1 = (ret_1 - (0.0085 + (0.005 * ret_1)));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  float ang2_1;\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\n  ang2_1 = (cos((50.26548 * ang2_1)) * 0.023);\n  ang2_1 = (ang2_1 * 6.283185);\n  vec2 tmpvar_2;\n  tmpvar_2.x = cos(ang2_1);\n  tmpvar_2.y = sin(ang2_1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = texture (sampler_main, (0.5 + ((\n    (0.375 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\n   * tmpvar_2) * texsize.zw))).xyz;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv);\n\n    //Layer code - Thanks to flexi.    \n    float2 uv1 = lerp(uv_orig,uv,1); //equals uv\n    float2 uv2 = lerp(uv_orig,uv,0.2); // 20% of uv\n    float2 uv3 = lerp(uv_orig,uv,0.4); //20% of uv but in the opposite direction\n\n    ret.x = GetPixel(uv1).x*0.97;\n    ret.y = GetPixel(uv2).y*0.98;\n    ret.z = GetPixel(uv3).z*0.96+ret.xy*.25;\n    \n    // darken (decay) over time\n    ret -= .0085+.005*ret ; \n}","comp_hlsl":"shader_body\n{\n    float rad_lq = rad * length(texsize.xy)*0.5;\n    float ang_lq = ang;\n    float2 uv_temp1 = (uv - 0.5) * texsize.xy;\n    float rad_hq = length(uv_temp1);\n    float ang_hq = atan2(-uv_temp1.y, uv_temp1.x);\n\n    float2 uv2 = (uv - 0.5);\n    float rad2 = rad_lq*0.75;\n    float ang2 = ang_lq * M_INV_PI_2;\n\n        // ROTATION OVER TIME\n        ang2 += time*0.025;   //rotate over time\n\n        // FIN TYPE\n        float fins = 8;//3 + floor(rand_preset.z*5.95);\n        ang2 = cos(ang2*M_PI_2*fins) * 0.023;\n\n\n    ang2 *= M_PI_2;\n    uv2 = 0.5 + rad2*float2(cos(ang2),sin(ang2))*texsize.zw;\n\n    ret = tex2D(sampler_main, uv2).xyz;\n    ret *= 1.0; // a little bit of overbright\n}"}