{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.95,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"invert":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_str":"a.xang=0;a.fov=0;a.yang=0;a.my=0;a.oz=0;a.ayang=0;a.mz=0;a.oy=0;a.mod=0;a.azang=0;a.mx=0;a.vol=0;a.sp=0;a.zang=0;a.axang=0;a.ox=0;","frame_eqs_str":"","point_eqs_str":"a.sp=1607.68*a.sample;a.vol=.33*(a.bass_att+a.mid_att+a.treb_att);a.vol=.2+.5*(a.value1+a.value2);a.vol=.2;a.mod=.00001<Math.abs(below(a.mid_att,1.8))?a.mid_att+.2:2;a.ox=.5*Math.sin(a.sp)*Math.sin(3.14*a.sample)*a.vol;a.oy=(a.sample-0)*a.mod;a.oz=.5*Math.cos(a.sp)*Math.sin(3.14*a.sample)*a.vol;a.xang=.672*a.time;a.axang=0;a.yang=-1.351*a.time;a.ayang=0;a.zang=-.401*a.time;a.azang=0;a.fov=.6+.2*Math.sin(a.time);a.fov=.5;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=\na.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz=Math.abs(a.oz)-2;a.x=div(a.ox*a.fov,a.oz)+.5;a.x=.75*(a.x-.5)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;a.r=1+Math.sin(a.sp);a.b=.5+.5*Math.sin(1.57*a.sample);a.g=.5+.5*Math.cos(1.57*a.sample);a.a=.5+.25*(a.oz+\n2);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\nvol = (bass_att + mid_att + treb_att)*0.33;\nvol = 0.2 + 0.5*(value1 + value2);\nvol = .2;\n\nmod = if(below(mid_att,1.8),mid_att+.2,2);\n\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\noy = (sample - 0)*mod;\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\n\nxang = time*0.672;\naxang = 0;\nyang = time*-1.351;\nayang = 0;\nzang = time*-0.401;\nazang = 0;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = abs(oz) - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nr = 1 + sin(sp);\nb = 0.5 + 0.5*sin(sample*1.57);\ng = 0.5 + 0.5*cos(sample*1.57);\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_str":"a.xang=0;a.fov=0;a.yang=0;a.my=0;a.oz=0;a.ayang=0;a.mz=0;a.oy=0;a.mod=0;a.azang=0;a.mx=0;a.vol=0;a.sp=0;a.zang=0;a.axang=0;a.ox=0;","frame_eqs_str":"","point_eqs_str":"a.sp=1607.68*a.sample;a.vol=.33*(a.bass_att+a.mid_att+a.treb_att);a.vol=.2+.5*(a.value1+a.value2);a.vol=.2;a.mod=.00001<Math.abs(below(a.bass_att,1.8))?a.bass_att+.2:2;a.ox=.5*Math.sin(a.sp)*Math.sin(3.14*a.sample)*a.vol;a.oy=(a.sample-0)*a.mod;a.oz=.5*Math.cos(a.sp)*Math.sin(3.14*a.sample)*a.vol;a.xang=-.321*a.time;a.axang=0;a.yang=1.531*a.time;a.ayang=0;a.zang=-.101*a.time;a.azang=0;a.fov=.6+.2*Math.sin(a.time);a.fov=.5;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=\na.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz=Math.abs(a.oz)-2;a.x=div(a.ox*a.fov,a.oz)+.5;a.x=.75*(a.x-.5)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;a.g=1+Math.sin(a.sp);a.r=.5+.5*Math.sin(1.57*a.sample);a.b=.5+.5*Math.cos(1.57*a.sample);a.a=.5+.25*(a.oz+\n2);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\nvol = (bass_att + mid_att + treb_att)*0.33;\nvol = 0.2 + 0.5*(value1 + value2);\nvol = .2;\n\nmod = if(below(bass_att,1.8),bass_att+.2,2);\n\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\noy = (sample - 0)*mod;\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\n\nxang = time*-0.321;\naxang = 0;\nyang = time*1.531;\nayang = 0;\nzang = time*-0.101;\nazang = 0;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = abs(oz) - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\ng = 1 + sin(sp);\nr = 0.5 + 0.5*sin(sample*1.57);\nb = 0.5 + 0.5*cos(sample*1.57);\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_str":"a.xang=0;a.fov=0;a.yang=0;a.my=0;a.oz=0;a.ayang=0;a.mz=0;a.oy=0;a.mod=0;a.azang=0;a.mx=0;a.vol=0;a.sp=0;a.zang=0;a.axang=0;a.ox=0;","frame_eqs_str":"","point_eqs_str":"a.sp=1607.68*a.sample;a.vol=.33*(a.bass_att+a.mid_att+a.treb_att);a.vol=.2+.5*(a.value1+a.value2);a.vol=.2;a.mod=.00001<Math.abs(below(a.treb_att,1.8))?a.treb_att+.2:2;a.ox=.5*Math.sin(a.sp)*Math.sin(3.14*a.sample)*a.vol;a.oy=(a.sample-0)*a.mod;a.oz=.5*Math.cos(a.sp)*Math.sin(3.14*a.sample)*a.vol;a.xang=.221*a.time;a.axang=0;a.yang=-.411*a.time;a.ayang=0;a.zang=1.201*a.time;a.azang=0;a.fov=.6+.2*Math.sin(a.time);a.fov=.5;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=\na.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz=Math.abs(a.oz)-2;a.x=div(a.ox*a.fov,a.oz)+.5;a.x=.75*(a.x-.5)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;a.b=1+Math.sin(a.sp);a.g=.5+.5*Math.sin(1.57*a.sample);a.r=.5+.5*Math.cos(1.57*a.sample);a.a=.5+.25*(a.oz+\n2);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\nvol = (bass_att + mid_att + treb_att)*0.33;\nvol = 0.2 + 0.5*(value1 + value2);\nvol = .2;\n\nmod = if(below(treb_att,1.8),treb_att+.2,2);\n\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\noy = (sample - 0)*mod;\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\n\nxang = time*0.221;\naxang = 0;\nyang = time*-0.411;\nayang = 0;\nzang = time*1.201;\nazang = 0;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = abs(oz) - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nb = 1+sin(sp);\ng = 0.5 + 0.5*sin(sample*1.57);\nr = 0.5 + 0.5*cos(sample*1.57);\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.it=0;a.radm=0;a.mod=0;","frame_eqs_str":"a.wave_a=0;","pixel_eqs_str":"a.it=.3*Math.sin(.2*a.time);a.radm=.5*a.rad;a.rot=.02*Math.sin(20*(a.radm+a.it));a.mod=Math.sin(5*a.ang);a.mod*=a.mod*a.mod*a.mod*a.mod;a.zoom=1+Math.abs(.01*a.mod);","init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;","pixel_eqs_eel":"it = 0.3*sin(time*0.2);\nradm = rad*0.5;\nrot = 0.02*sin((radm+it)*20);\nmod = sin(ang*5);\nmod = mod*mod*mod*mod*mod;\nzoom = 1 + abs(0.01*mod);","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  ret_1.x = texture (sampler_main, (tmpvar_2 + 0.5)).x;\n  ret_1.y = texture (sampler_main, ((tmpvar_2 * 0.98) + 0.5)).y;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_3.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_3.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_3.z * 0.5));\n  };\n  ret_1.z = texture (sampler_main, (((uv - 0.5) * 0.95) + 0.5)).z;\n  vec3 tmpvar_4;\n  tmpvar_4.x = -(ret_1.x);\n  tmpvar_4.y = (ret_1.x - ret_1.y);\n  tmpvar_4.z = (ret_1.y - ret_1.z);\n  ret_1 = ((ret_1 + (tmpvar_4 * 0.03)) + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 3.0));\n  ret_1 = (ret_1 * (0.95 + (\n    sin(mid)\n   * 0.05)));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  float ang2_1;\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\n  ang2_1 = (cos((50.26548 * ang2_1)) * 0.023);\n  ang2_1 = (ang2_1 * 6.283185);\n  vec2 tmpvar_2;\n  tmpvar_2.x = cos(ang2_1);\n  tmpvar_2.y = sin(ang2_1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = texture (sampler_main, (0.5 + ((\n    (0.375 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\n   * tmpvar_2) * texsize.zw))).xyz;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n    ret.x = tex2D( sampler_main, (uv-0.5)*1.00+0.5 ).x;\n    ret.y = tex2D( sampler_main, (uv-0.5)*0.98+0.5 ).y;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n    ret.z = tex2D( sampler_main, (uv-0.5)*0.95+0.5 ).z;\n    \n    // .x = fastest layer, .z = slowest\n    // slowly shift stuff toward the front, over time:\n    ret += float3(-ret.x,ret.x-ret.y,ret.y-ret.z)*0.03, (bass_att-1)*0.1;\n     \n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*3;\n\n    // darken over time\n//    ret -= 0.003;\n    //ret *= 0.99;\n    //ret *= 0.97*saturate( length(uv - uv_orig)*200 );  // center only\nret = ret * (0.95 + (sin(mid)*0.05));\n}","comp_hlsl":"shader_body\n{\n    float rad_lq = rad * length(texsize.xy)*0.5;\n    float ang_lq = ang;\n    float2 uv_temp1 = (uv - 0.5) * texsize.xy;\n    float rad_hq = length(uv_temp1);\n    float ang_hq = atan2(-uv_temp1.y, uv_temp1.x);\n\n    float2 uv2 = (uv - 0.5);\n    float rad2 = rad_lq*0.75;\n    float ang2 = ang_lq * M_INV_PI_2;\n\n        // ROTATION OVER TIME\n        ang2 += time*0.025;   //rotate over time\n\n        // FIN TYPE\n        float fins = 8;//3 + floor(rand_preset.z*5.95);\n        ang2 = cos(ang2*M_PI_2*fins) * 0.023;\n\n\n    ang2 *= M_PI_2;\n    uv2 = 0.5 + rad2*float2(cos(ang2),sin(ang2))*texsize.zw;\n\n    ret = tex2D(sampler_main, uv2).xyz;\n    ret *= 1.0; // a little bit of overbright\n\n\n}"}