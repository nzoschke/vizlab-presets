{"version":2,"baseVals":{"rating":5,"gammaadj":2.4,"decay":0.88,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wrap":0,"wave_a":0.001,"wave_scale":1.605,"wave_smoothing":0.5,"warpscale":2.853,"fshader":1,"zoom":1.00034,"warp":0,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":3.2,"mv_y":3,"mv_l":3.95,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":6,"thickoutline":1,"x":0.2,"y":0.1,"rad":0.19988,"g":1,"b":1,"r2":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.y+=.1*a.bass_att;","init_eqs_eel":"","frame_eqs_eel":"y = y + 0.1*bass_att;"},{"baseVals":{"enabled":1,"sides":6,"thickoutline":1,"y":0.1,"rad":0.20028,"b":1,"b2":1,"border_g":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.y+=.1*a.mid_att;","init_eqs_eel":"","frame_eqs_eel":"y = y + 0.1*mid_att;"},{"baseVals":{"enabled":1,"sides":6,"thickoutline":1,"x":0.8,"y":0.1,"rad":0.20048,"g":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.y+=.1*a.treb_att;","init_eqs_eel":"","frame_eqs_eel":"y = y + 0.1*treb_att;"},{"baseVals":{"enabled":1,"sides":12,"g":0.5,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.rad+=.1*Math.sin(2*a.bass_att);a.x+=.4*Math.cos(5*a.time);","init_eqs_eel":"","frame_eqs_eel":"rad = rad + 0.1*sin(2*bass_att);\nx = x + 0.4*cos(5*time);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q6=0;a.thresh=0;a.q1=0;a.q5=0;a.dy_r=0;a.q4=0;a.dx_r=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.wave_r+=.502*(.61*Math.sin(.933*a.time)+.401*Math.sin(1.045*a.time));a.wave_g+=.504*(.605*Math.sin(.909*a.time)+.41*Math.sin(.956*a.time));a.wave_b+=.501*(.6*Math.sin(.91*a.time)+.4*Math.sin(.992*a.time));a.q1=a.wave_r;a.q2=a.wave_g;a.q3=a.wave_b;a.q4=Math.abs(1-a.wave_r);a.q5=Math.abs(1-a.wave_g);a.q6=Math.abs(1-a.wave_b);","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.rot=a.rot+.05+Math.abs(Math.min(8*a.dx_r,8*a.dy_r));a.zoom+=3*Math.abs(22*a.dx_r)*a.rad;a.dx+=a.dx_r;a.dy+=a.dy_r;a.zoom-=.04*Math.sin(3*a.dx_r-1.5*Math.cos(6*a.ang)-a.rad);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.502*(0.61*sin(0.933*time) + 0.401*sin(1.045*time));\nwave_g = wave_g + 0.504*(0.605*sin(0.909*time) + 0.41*sin(0.956*time));\nwave_b = wave_b + 0.501*(0.60*sin(0.910*time) + 0.40*sin(0.992*time));\n\nq1 = wave_r;\nq2 = wave_g;\nq3 = wave_b;\nq4 = abs(1-wave_r);\nq5 = abs(1-wave_g);\nq6 = abs(1-wave_b);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\nrot = rot + 0.05+ abs(min(8*dx_r,8*dy_r));\nzoom = zoom + abs(22*dx_r)*(3*rad);\ndx = dx + dx_r;\ndy = dy+ dy_r;\n\nzoom = zoom - 0.04*sin(3*dx_r-3*cos(6*ang)*0.5-rad);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv);\n  ret_1.z = tmpvar_3.z;\n  ret_1.x = ((tmpvar_3.x - (1.4 * q6)) * (1.0 - (q6 * 2.5)));\n  vec4 tmpvar_4;\n  tmpvar_4 = clamp (((\n    (texture (sampler_blur1, ((uv + (0.005 * tmpvar_2).xy) + (vec2(-1.1, -1.5) * texsize.zw))).xyz * scale1)\n   + bias1).x + (\n    (0.5 - tmpvar_2)\n   * 0.15)), 0.0, 1.0);\n  ret_1.y = 0.0;\n  if ((tmpvar_4.x > 0.1)) {\n    ret_1.x = ((tmpvar_3.z * q6) * 60.0);\n    ret_1.z = (tmpvar_3.z - ((tmpvar_3.z * q6) * 120.0));\n  } else {\n    ret_1.z = (ret_1.z + (1.3 * q6));\n  };\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv).xxx;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = pow (mix (vec3((\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  .x + \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  .x)), tmpvar_1, tmpvar_1), vec3(5.0, 1.0, 0.5));\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    float4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nfloat2 adj = texsize.zw;\n//float2 adj = 0;\n\nfloat2 uvn = uv + .005*noiseVal + float2(-1.1,-1.5)*adj;\n\n// sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n// darken (decay) over time\n    ret.x = (ret.x-1.4*q6)*(1-q6*2.5); //or try: ret -= 0.004;\n\n\nfloat burn = saturate(GetBlur1(uvn).x + (0.5-noiseVal)*.15);\nfloat fuel = pow(ret.z*1 + GetBlur1(uv).z*.0,1);\n\nret.y = 0;\n\nif (burn > 0.1)\n{\nret.x = fuel*q6*60;\nret.z -= ret.z*q6*120;\n}\n\nelse {ret.z += 1.3*q6;\n//ret.x = 0;\n}\n\n}","comp_hlsl":"shader_body\n{\nret = tex2D(sampler_main, uv).x,\n\nret = lerp (\nGetBlur1(uv).x + GetBlur3(uv).x,\nret,\npow(ret,1));\n  \n//  ret = tex2D(sampler_main, uv).x - GetBlur1(uv).x;\n    ret = pow(ret,float3(5,1,.5));\n    ret *= 1.0; //gamma\n \n}"}