{"version":2,"baseVals":{"rating":5,"gammaadj":1.14,"echo_zoom":1.002,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":5.582,"warpscale":2.189,"zoomexp":1.00183,"fshader":1,"zoom":1.00951,"warp":0.01,"sx":0.9999,"sy":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.02,"ob_r":0.9,"ob_g":0.7,"ob_b":0.1,"ob_a":0.3,"ib_r":0.7,"ib_g":0.45,"ib_b":0.05,"ib_a":0.3,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_a":0.03},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":0.50627,"tex_zoom":0.51341,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=a.time;","init_eqs_eel":"","frame_eqs_eel":"ang=time;"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"textured":1,"y":0.65,"rad":0.32033,"tex_zoom":2.00675,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.05*Math.sin(a.time)+.5;a.ang=.25*a.time;a.rad+=a.treb_att*a.treb_att*.1;a.r=Math.sin(.1*a.time);a.g=Math.sin(.25*a.time);a.b=Math.sin(.75*a.time);a.r2=.65*a.bass_att;a.g2=.65*a.mid_att;a.b2=.65*a.treb_att;","init_eqs_eel":"","frame_eqs_eel":"x=(sin(time)*.05)+.5;\n\nang=time*.25;\nrad=rad+(treb_att*treb_att*.1);\n\nr=sin(time*.1);\ng=sin(time*.25);\nb=sin(time*.75);\n\nr2=bass_att*.65;\ng2=mid_att*.65;\nb2=treb_att*.65;"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"x":0.32,"y":0.34,"rad":0.36457,"tex_zoom":0.60803,"g":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=a.time;a.rad+=a.bass*a.bass*.1;a.r=Math.sin(.2*a.time);a.g=Math.sin(.5*a.time);a.b=Math.sin(1.25*a.time);a.r2=.65*a.bass_att;a.g2=.65*a.mid_att;a.b2=.65*a.treb_att;","init_eqs_eel":"","frame_eqs_eel":"ang=time;\n\nrad=rad+(bass*bass*.1);\n\nr=sin(time*.2);\ng=sin(time*.5);\nb=sin(time*1.25);\n\nr2=bass_att*.65;\ng2=mid_att*.65;\nb2=treb_att*.65;"},{"baseVals":{"sides":100,"textured":1,"y":0.7,"rad":0.50126,"ang":0.1885,"g":1,"b":1,"r2":1,"g2":0.4,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0.4,"b":0.3},"init_eqs_str":"a.d=0;a.la=0;a.wx=0;a.branch=0;a.sc=0;a.wa=0;a.wy=0;a.ra=0;a.wainc=0;","frame_eqs_str":"","point_eqs_str":"a.la=.25+.09*a.treb_att+.2*Math.sin(a.time);a.ra=-.25-.09*a.treb+.2*Math.cos(a.time);a.branch=Math.floor(rand(2));a.wx=.00001<Math.abs(equal(a.sc,0))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,0))?.1:a.wy;a.wx=.00001<Math.abs(equal(a.sc,1))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,1))?.4:a.wy;a.d=.00001<Math.abs(below(a.sc,2))?.3:.7*a.d+.003*a.bass_att;a.wainc=.00001<Math.abs(equal(a.branch,1))?a.la:a.ra;a.wa=.00001<Math.abs(below(a.sc,2))?1.57079635:a.wa+a.wainc;a.wx=.00001<Math.abs(above(a.sc,\n2))?a.wx+Math.cos(a.wa)*a.d:a.wx;a.wy=.00001<Math.abs(above(a.sc,2))?a.wy+Math.sin(a.wa)*a.d:a.wy;a.sc=.00001<Math.abs(equal(a.sc,10))?0:a.sc+1;a.a=.00001<Math.abs(below(a.sc,2))?0:.1;a.x=a.wx;a.y=a.wy;a.r=.65*a.treb_att;a.g=.65*a.mid_att;a.b=Math.abs(Math.sin(.6*a.time));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//left and right angles\nla=.25+(treb_att*.09)+(.2*sin(time));\nra=-.25-(treb*.09)+(.2*cos(time));\n\n//left or right?\nbranch=int(rand(2));\n\n//base\nwx=if(equal(sc,0),.5,wx);\nwy=if(equal(sc,0),.1,wy);\n\nwx=if(equal(sc,1),.5,wx);\nwy=if(equal(sc,1),.4,wy);\n\n//calculate previous branch length\nd=if(below(sc,2),.3,.7*d+(bass_att*.003));\n\n//angle\nwainc=if(equal(branch,1),la,ra);\n\nwa=if(below(sc,2),3.1415927*.5,wa+wainc);\n\n//branches\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\n\n//sample count\nsc=if(equal(sc,10),0,sc+1); //depth setting\n\na=if(below(sc,2),0,.1);\n\nx=wx;\ny=wy;\n\nr=treb_att*.65;\ng=mid_att*.65;\nb=abs(sin(time*.6));"},{"baseVals":{"enabled":1,"additive":1,"a":0.02},"init_eqs_str":"a.d=0;a.la=0;a.wx=0;a.branch=0;a.sc=0;a.wa=0;a.wy=0;a.ra=0;a.wainc=0;","frame_eqs_str":"","point_eqs_str":"a.la=.15+.09*a.treb_att+.2*Math.sin(a.time);a.ra=-.15-.09*a.treb+.2*Math.cos(a.time);a.branch=Math.floor(rand(2));a.wx=.00001<Math.abs(equal(a.sc,0))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,0))?.35:a.wy;a.wx=.00001<Math.abs(equal(a.sc,1))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,1))?.4:a.wy;a.d=.00001<Math.abs(below(a.sc,2))?.3:.7*a.d+.003*a.treb_att;a.wainc=.00001<Math.abs(equal(a.branch,1))?a.la:a.ra;a.wa=.00001<Math.abs(below(a.sc,2))?1.57079635:a.wa+a.wainc;a.wx=.00001<Math.abs(above(a.sc,\n2))?a.wx+Math.cos(a.wa)*a.d:a.wx;a.wy=.00001<Math.abs(above(a.sc,2))?a.wy+Math.sin(a.wa)*a.d:a.wy;a.sc=.00001<Math.abs(equal(a.sc,10))?0:a.sc+1;a.a=.00001<Math.abs(below(a.sc,2))?0:.04;a.x=a.wx;a.y=a.wy;a.r=Math.sin(a.time);a.g=Math.sin(a.time+.23);a.b=Math.sin(.6*a.time);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//left and right angles\nla=.15+(treb_att*.09)+(.2*sin(time));\nra=-.15-(treb*.09)+(.2*cos(time));\n\n//left or right?\nbranch=int(rand(2));\n\n//base\nwx=if(equal(sc,0),.5,wx);\nwy=if(equal(sc,0),.35,wy);\n\nwx=if(equal(sc,1),.5,wx);\nwy=if(equal(sc,1),.4,wy);\n\n//calculate previous branch length\nd=if(below(sc,2),.3,.7*d+(treb_att*.003));\n\n//angle\nwainc=if(equal(branch,1),la,ra);\n\nwa=if(below(sc,2),3.1415927*.5,wa+wainc);\n\n//branches\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\n\n//sample count\nsc=if(equal(sc,10),0,sc+1); //depth setting\n\na=if(below(sc,2),0,.04);\n\nx=wx;\ny=wy;\n\nr=sin(time);\ng=sin(time+.23);\nb=sin(time*.6);"},{"baseVals":{"enabled":1,"usedots":1,"additive":1,"a":0},"init_eqs_str":"a.d=0;a.la=0;a.wx=0;a.branch=0;a.sc=0;a.wa=0;a.wy=0;a.ra=0;a.wainc=0;","frame_eqs_str":"","point_eqs_str":"a.la=.2+.09*a.treb_att+.2*Math.sin(a.time);a.ra=-.2-.09*a.treb+.2*Math.cos(a.time);a.branch=Math.floor(rand(2));a.wx=.00001<Math.abs(equal(a.sc,0))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,0))?.1:a.wy;a.wx=.00001<Math.abs(equal(a.sc,1))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,1))?.4:a.wy;a.d=.00001<Math.abs(below(a.sc,2))?.3:.7*a.d;a.wainc=.00001<Math.abs(equal(a.branch,1))?a.la:a.ra;a.wa=.00001<Math.abs(below(a.sc,2))?1.57079635:a.wa+a.wainc;a.wx=.00001<Math.abs(above(a.sc,\n2))?a.wx+Math.cos(a.wa)*a.d:a.wx;a.wy=.00001<Math.abs(above(a.sc,2))?a.wy+Math.sin(a.wa)*a.d:a.wy;a.sc=.00001<Math.abs(equal(a.sc,10))?0:a.sc+1;a.a=.00001<Math.abs(below(a.sc,2))?0:.1;a.x=a.wx;a.y=a.wy;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//left and right angles\nla=.2+(treb_att*.09)+(.2*sin(time));\nra=-.2-(treb*.09)+(.2*cos(time));\n\n//left or right?\nbranch=int(rand(2));\n\n//base\nwx=if(equal(sc,0),.5,wx);\nwy=if(equal(sc,0),.1,wy);\n\nwx=if(equal(sc,1),.5,wx);\nwy=if(equal(sc,1),.4,wy);\n\n//calculate previous branch length\nd=if(below(sc,2),.3,.7*d);\n\n//angle\nwainc=if(equal(branch,1),la,ra);\n\nwa=if(below(sc,2),3.1415927*.5,wa+wainc);\n\n//branches\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\n\n//sample count\nsc=if(equal(sc,10),0,sc+1); //depth setting\n\na=if(below(sc,2),0,.1);\n\nx=wx;\ny=wy;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.7,"g":0.7},"init_eqs_str":"a.d=0;a.la=0;a.wx=0;a.branch=0;a.sc=0;a.wa=0;a.wy=0;a.ra=0;a.wainc=0;","frame_eqs_str":"","point_eqs_str":"a.la=.5+.09*a.treb_att+.2*Math.sin(a.time);a.ra=-.5-.09*a.treb+.2*Math.cos(a.time);a.branch=Math.floor(rand(2));a.wx=.00001<Math.abs(equal(a.sc,0))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,0))?.1:a.wy;a.wx=.00001<Math.abs(equal(a.sc,1))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,1))?.45:a.wy;a.d=.00001<Math.abs(below(a.sc,2))?.3:.4*a.d+.003*a.treb_att;a.wainc=.00001<Math.abs(equal(a.branch,1))?a.la:a.ra;a.wa=.00001<Math.abs(below(a.sc,2))?-1.57079635:a.wa+a.wainc;a.wx=.00001<Math.abs(above(a.sc,\n2))?a.wx+Math.cos(a.wa)*a.d:a.wx;a.wy=.00001<Math.abs(above(a.sc,2))?a.wy+Math.sin(a.wa)*a.d:a.wy;a.sc=.00001<Math.abs(equal(a.sc,10))?0:a.sc+1;a.a=.00001<Math.abs(below(a.sc,2))?0:.02;a.x=a.wx;a.y=a.wy;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//left and right angles\nla=.5+(treb_att*.09)+(.2*sin(time));\nra=-.5-(treb*.09)+(.2*cos(time));\n\n//left or right?\nbranch=int(rand(2));\n\n//base\nwx=if(equal(sc,0),.5,wx);\nwy=if(equal(sc,0),.1,wy);\n\nwx=if(equal(sc,1),.5,wx);\nwy=if(equal(sc,1),.45,wy);\n\n//calculate previous branch length\nd=if(below(sc,2),.3,.4*d+(treb_att*.003));\n\n//angle\nwainc=if(equal(branch,1),la,ra);\n\nwa=if(below(sc,2),3.1415927*-.5,wa+wainc);\n\n//branches\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\n\n//sample count\nsc=if(equal(sc,10),0,sc+1); //depth setting\n\na=if(below(sc,2),0,.02);\n\nx=wx;\ny=wy;"}],"init_eqs_str":"a.rb=0;a.ra=0;a.zb=0;a.za=0;","frame_eqs_str":"a.ob_r=Math.abs(Math.sin(a.time));a.ob_g=Math.abs(Math.sin(.05*a.time));","pixel_eqs_str":"a.rb=above(a.treb,.7)*a.rad*Math.sin(3*a.time)*3;a.ra=.00001<Math.abs(above(a.rb,0))?1:a.ra-.05;a.ra=.00001<Math.abs(above(a.ra,1))?1:a.ra;a.ra=.00001<Math.abs(below(a.ra,0))?0:a.ra;a.rot+=a.rb*a.ra*a.ra*.1;a.zb=above(a.bass,.7)*a.rad*Math.sin(2*a.time)*2;a.za=.00001<Math.abs(above(a.zb,0))?1:a.za-.05;a.za=.00001<Math.abs(above(a.za,1))?1:a.za;a.za=.00001<Math.abs(below(a.za,0))?0:a.za;a.zoom+=a.zb*a.za*a.za*.1;a.dx+=a.zb*a.za*a.za*(1-a.rad)*.23*above(a.ra,0);a.dy+=a.y*Math.sin(a.time)*\n.01*a.ang;","init_eqs_eel":"","frame_eqs_eel":"ob_r=abs(sin(time));\nob_g=abs(sin(time*.05));","pixel_eqs_eel":"//rotation\nrb=(above(treb,.7)*rad*sin(time*3)*3);\nra=if(above(rb,0),1,ra-.05);\n\nra=if(above(ra,1),1,ra);\nra=if(below(ra,0),0,ra);\n\nrot=rot+(rb*ra*ra*.1);\n\n//zoom\nzb=(above(bass,.7)*rad*sin(time*2)*2);\nza=if(above(zb,0),1,za-.05);\n\nza=if(above(za,1),1,za);\nza=if(below(za,0),0,za);\n\nzoom=zoom+(zb*za*za*.1);\n\ndx=dx+(zb*za*za*(1-rad)*.23*above(ra,0));\ndy=dy+(y*sin(time)*.01*ang);","warp":"","comp":" shader_body { \n  vec3 ret2_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 6.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = dot (((\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_4.y = dot (((\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_blur3, uv);\n  ret_2 = (0.5 * ((tmpvar_6.xyz * scale3) + bias3));\n  ret_2 = (ret_2 - ((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) - 0.01));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_blur1, uv);\n  ret_2 = (ret_2 + ((texture (sampler_main, uv).xyz + \n    (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\n  ) - 0.01));\n  ret_2 = (ret_2 + 0.75);\n  float tmpvar_8;\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_9;\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * (\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\n   - \n    ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1)\n  )), pow (hue_shader, vec3(tmpvar_8)));\n  ret2_1 = ((-0.5 * (\n    (texture (sampler_blur3, tmpvar_5).xyz * scale3)\n   + bias3)) + ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1));\n  ret2_1 = (ret2_1 - texture (sampler_main, tmpvar_5).xyz);\n  ret2_1 = (ret2_1 - 0.75);\n  vec3 tmpvar_10;\n  tmpvar_10 = mix (ret2_1, (ret2_1 * (\n    ((tmpvar_6.xyz * scale3) + bias3)\n   - \n    ((tmpvar_7.xyz * scale1) + bias1)\n  )), pow (hue_shader, tmpvar_9));\n  ret2_1 = tmpvar_10;\n  vec3 tmpvar_11;\n  tmpvar_11 = abs((tmpvar_9 - (2.0 * tmpvar_10)));\n  ret_2 = (tmpvar_11 - (0.25 * sqrt(tmpvar_11)));\n  ret_2 = (ret_2 * (ret_2 + (\n    ((bass + mid) + treb)\n   * 0.4)));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_2;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\n\n//Code bits by Flexi and Geiss\n\n    float2 d = texsize.zw*6;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\nfloat2 uv_y = uv-0.25*(float2(lum(dx),lum(dy)));\n\nret = .5*GetBlur3(uv);\nret -= (GetBlur2(uv)-.01);\nret += GetPixel(uv)+GetBlur1(uv)*.15-.01;\nret += .75;\nret = lum(ret);\nret = lerp(ret,ret*(GetBlur3(uv_y)-GetBlur1(uv_y)),pow(hue_shader,ret));\n\nfloat3 ret2 = -.5*GetBlur3(uv_y);\nret2 += GetBlur1(uv_y);\nret2 -= GetPixel(uv_y);\nret2 -= .75;\n//ret2 = lum(ret2);\nret2 = lerp(ret2,ret2*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader.xyz,ret));\n\nret = abs(ret-2*ret2);\n//ret = ret2;\n\nret -= .25*sqrt(ret);\nret *= ret+(bass+mid+treb)*.4;\n}"}