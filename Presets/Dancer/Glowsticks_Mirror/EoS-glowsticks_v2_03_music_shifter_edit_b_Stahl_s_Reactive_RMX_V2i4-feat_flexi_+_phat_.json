{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.96,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.037,"warpscale":0.015,"zoomexp":1.22019,"warp":0.033,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_a":1,"ib_size":0.09,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":1.38615,"tex_zoom":1.14605,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.05,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.25*a.time;","init_eqs_eel":"","frame_eqs_eel":"ang = .25*time;"},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.0677,"ang":0.7539,"tex_zoom":0.7797,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.01,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.ang=Math.sin(.15*a.q1);a.x=.05*Math.sin(.5*a.q1+3.14)+.6;a.y=.05*Math.cos(.63*a.q1+3.14)+.6;","init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\nx=sin(q1*0.5+3.14) * 0.05 + 0.6;\ny=cos(q1*0.63+3.14)* 0.05 + 0.6"},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.0677,"ang":0.7539,"tex_zoom":0.7797,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.01,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.ang=Math.sin(.15*a.q1);a.x=.05*Math.sin(.5*a.q1)+.4;a.y=.05*Math.cos(.63*a.q1)+.4;","init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.4;\ny=cos(q1*0.63)* 0.05 + 0.4;"},{"baseVals":{"sides":5,"textured":1,"rad":1.0677,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.5;\ny=cos(q1*0.63)* 0.05 + 0.5","init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.5;\ny=cos(q1*0.63)* 0.05 + 0.5"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0.5,"b":0.1},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.q1=0;a.cosang=0;a.dz=0;a.dx=0;a.xq=0;a.t3=0;a.flip=0;a.t6=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.sinang=0;a.tm=0;a.dy=0;a.t2=0;a.zp=0;a.t4=0;","frame_eqs_str":"a.t1=a.bass_att*(.5*Math.sin(a.time)+.5);a.t2=a.bass_att*(.5*Math.sin(a.time+2.1)+.5);a.t3=a.treb_att*(.5*Math.sin(a.time+4.2)+.5);a.t4=a.treb_att*(.5*Math.sin(-a.time+1.1)+.5);a.t5=a.mid_att*(.5*Math.sin(-a.time+3.1)+.5);a.t6=a.mid_att*(.5*Math.sin(-a.time+5.2)+.5);","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip=(a.flip+1)*below(a.flip,1);a.xp=0;a.yp=.1*a.flip+.2*(.5*Math.sin(a.tm)+.5);a.zp=0;a.ang=.5*Math.sin(2*a.tm)+.5;a.xq=a.xp;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.yq=a.yp;a.zq=a.zp;a.ang=8*a.tm;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*\nMath.sin(2*a.tm-.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.ang=-1+Math.cos(3.1*a.tm+.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(2.3*a.tm)-1.05;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp*a.sinang+a.zp*a.cosang;a.yq=a.yp;a.zq=a.xp*a.cosang-a.zp*a.sinang;a.ang=.5*Math.cos(a.tm)-.5;\na.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq;a.yp=a.yq*a.cosang-a.zq*a.sinang;a.zp=a.yq*a.sinang+a.zq*a.cosang;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.dx=.00001<Math.abs(a.flip)?a.x:a.dx-a.x;a.dy=.00001<Math.abs(a.flip)?a.y:a.dy-a.y;a.dz=pow(a.dx*a.dx+a.dy*a.dy,.5);a.ang=Math.abs(Math.asin(div(a.dx,a.dz)));a.cang=.00001<Math.abs(a.flip)?a.cang:.00001<Math.abs(below(a.dx,0))?.00001<Math.abs(below(a.dy,0))?-a.ang:3.141592654+a.ang:.00001<Math.abs(below(a.dy,\n0))?a.ang:3.141592654-a.ang;a.g=.5+.5*Math.sin(a.cang);a.b=.5+.5*Math.sin(a.cang+1.047197);a.r=.5+.5*Math.sin(a.cang+2.094395);a.a=(1-a.sample)*above(a.sample,0);","init_eqs_eel":"","frame_eqs_eel":"t1=bass_att*(sin(time)*0.5+0.5);\nt2=bass_att*(sin(time+2.1)*0.5+0.5);\nt3=treb_att*(sin(time+4.2)*0.5+0.5);\n\nt4=treb_att*(sin(-time+1.1)*0.5+0.5);\nt5=mid_att*(sin(-time+3.1)*0.5+0.5);\nt6=mid_att*(sin(-time+5.2)*0.5+0.5);","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=(flip+1)*below(flip,1);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nsinang=sin(ang);cosang=cos(ang);\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\ndx = if(flip,x,dx-x);\ndy = if(flip,y,dy-y);\ndz = pow(dx*dx+dy*dy,.5);\nang = abs(asin(dx/dz));\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\ng = .5 + .5*sin(cang);\nb = .5 + .5*sin(cang + 1.047197);\nr = .5 + .5*sin(cang + 2.094395);\n\na=(1-sample)*above(sample,0);\n"},{"baseVals":{"enabled":1,"thick":1,"r":0.2,"b":0.6},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.q1=0;a.cosang=0;a.dz=0;a.dx=0;a.xq=0;a.t3=0;a.flip=0;a.t6=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.sinang=0;a.tm=0;a.dy=0;a.t2=0;a.zp=0;a.t4=0;","frame_eqs_str":"a.t1=a.mid_att*(.5*Math.sin(1.57+a.time)+.5);a.t2=a.treb_att*(.5*Math.sin(1.57+a.time+2.1)+.5);a.t3=a.mid_att*(.5*Math.sin(1.57+a.time+4.2)+.5);a.t4=a.bass_att*(.5*Math.sin(-a.time+1.1)+.5);a.t5=a.bass_att*(.5*Math.sin(-a.time+3.1)+.5);a.t6=a.treb_att*(.5*Math.sin(-a.time+5.2)+.5);","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=.1*a.flip+.2*(.5*Math.sin(a.tm)+.5)+.1;a.yp=-a.yp;a.zp=0;a.ang=.5*Math.sin(2*a.tm)+.5;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.yq=a.yp;a.zq=a.zp;a.ang=8*a.tm;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.3;\na.ang=3.14+1.5*Math.sin(2*a.tm-.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.ang=-1+Math.cos(3.1*a.tm+.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(2.3*a.tm)-1.05;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp*a.sinang+a.zp*a.cosang;a.yq=a.yp;a.zq=a.xp*a.cosang-a.zp*a.sinang;a.ang=.5*Math.cos(a.tm)-\n.5;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq;a.yp=a.yq*a.cosang-a.zq*a.sinang;a.zp=a.yq*a.sinang+a.zq*a.cosang;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.dx=.00001<Math.abs(a.flip)?a.x:a.dx-a.x;a.dy=.00001<Math.abs(a.flip)?a.y:a.dy-a.y;a.dz=pow(a.dx*a.dx+a.dy*a.dy,.5);a.ang=Math.abs(Math.asin(div(a.dx,a.dz)));a.cang=.00001<Math.abs(a.flip)?a.cang:.00001<Math.abs(below(a.dx,0))?.00001<Math.abs(below(a.dy,0))?-a.ang:3.141592654+a.ang:.00001<Math.abs(below(a.dy,\n0))?a.ang:3.141592654-a.ang;a.b=.5+.5*Math.sin(a.cang);a.g=.5+.5*Math.sin(a.cang+1.047197);a.r=.5+.5*Math.sin(a.cang+2.094395);a.a=(1-a.sample)*above(a.sample,0);","init_eqs_eel":"","frame_eqs_eel":"t1=mid_att*(sin(1.57+time)*0.5+0.5);\nt2=treb_att*(sin(1.57+time+2.1)*0.5+0.5);\nt3=mid_att*(sin(1.57+time+4.2)*0.5+0.5);\n\nt4=bass_att*(sin(-time+1.1)*0.5+0.5);\nt5=bass_att*(sin(-time+3.1)*0.5+0.5);\nt6=treb_att*(sin(-time+5.2)*0.5+0.5);","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\nyp=-yp;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\ndx = if(flip,x,dx-x);\ndy = if(flip,y,dy-y);\ndz = pow(dx*dx+dy*dy,.5);\nang = abs(asin(dx/dz));\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\nb = .5 + .5*sin(cang);\ng = .5 + .5*sin(cang + 1.047197);\nr = .5 + .5*sin(cang + 2.094395);\n\na=(1-sample)*above(sample,0);"},{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0.5,"b":0.1},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.q1=0;a.cosang=0;a.dz=0;a.dx=0;a.xq=0;a.t3=0;a.flip=0;a.t6=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.sinang=0;a.tm=0;a.dy=0;a.t2=0;a.zp=0;a.t4=0;","frame_eqs_str":"a.t1=a.treb_att*(.5*Math.sin(a.time+3.14)+.5);a.t2=a.mid_att*(.5*Math.sin(a.time+2.1+3.14)+.5);a.t3=a.bass_att*(.5*Math.sin(a.time+4.2+3.14)+.5);a.t4=a.bass_att*(.5*Math.sin(-a.time+4.24)+.5);a.t5=a.treb_att*(.5*Math.sin(-a.time+6.24)+.5);a.t6=a.mid_att*(.5*Math.sin(-a.time+8.34)+.5);","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip=(a.flip+1)*below(a.flip,1);a.xp=0;a.yp=.1*a.flip+.2*(.5*Math.sin(a.tm)+.5);a.zp=0;a.ang=.5*Math.sin(2*a.tm)+.5;a.xq=a.xp;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.yq=a.yp;a.zq=a.zp;a.ang=8*a.tm;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*\nMath.sin(2*a.tm-.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.ang=-1+Math.cos(3.1*a.tm+.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(2.3*a.tm)-1.05;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp*a.sinang+a.zp*a.cosang;a.yq=a.yp;a.zq=a.xp*a.cosang-a.zp*a.sinang;a.ang=.5*Math.cos(a.tm)-.5;\na.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq;a.yp=a.yq*a.cosang-a.zq*a.sinang;a.zp=a.yq*a.sinang+a.zq*a.cosang;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.dx=.00001<Math.abs(a.flip)?a.x:a.dx-a.x;a.dy=.00001<Math.abs(a.flip)?a.y:a.dy-a.y;a.dz=pow(a.dx*a.dx+a.dy*a.dy,.5);a.ang=Math.abs(Math.asin(div(a.dx,a.dz)));a.cang=.00001<Math.abs(a.flip)?a.cang:.00001<Math.abs(below(a.dx,0))?.00001<Math.abs(below(a.dy,0))?-a.ang:3.141592654+a.ang:.00001<Math.abs(below(a.dy,\n0))?a.ang:3.141592654-a.ang;a.g=.5+.5*Math.sin(a.cang);a.b=.5+.5*Math.sin(a.cang+1.047197);a.r=.5+.5*Math.sin(a.cang+2.094395);a.a=(1-a.sample)*above(a.sample,0);","init_eqs_eel":"","frame_eqs_eel":"t1=treb_att*(sin(time+3.14)*0.5+0.5);\nt2=mid_att*(sin(time+2.1+3.14)*0.5+0.5);\nt3=bass_att*(sin(time+4.2+3.14)*0.5+0.5);\n\nt4=bass_att*(sin(-time+1.1+3.14)*0.5+0.5);\nt5=treb_att*(sin(-time+3.1+3.14)*0.5+0.5);\nt6=mid_att*(sin(-time+5.2+3.14)*0.5+0.5);","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=(flip+1)*below(flip,1);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nsinang=sin(ang);cosang=cos(ang);\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\ndx = if(flip,x,dx-x);\ndy = if(flip,y,dy-y);\ndz = pow(dx*dx+dy*dy,.5);\nang = abs(asin(dx/dz));\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\ng = .5 + .5*sin(cang);\nb = .5 + .5*sin(cang + 1.047197);\nr = .5 + .5*sin(cang + 2.094395);\n\na=(1-sample)*above(sample,0);\n"},{"baseVals":{"thick":1,"additive":1,"g":0.3,"b":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\ntm=q1 ;\nphs=-sample*0.5;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\nang=cos(tm*2+phs-2)*1.5;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5 +phs);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2+phs)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm+phs)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=-xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample)*0.05;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\ntm=q1 ;\nphs=-sample*0.5;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\nang=cos(tm*2+phs-2)*1.5;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5 +phs);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2+phs)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm+phs)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=-xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample)*0.05;\n"}],"init_eqs_str":"a.vol=0;a.mtime=0;a.q1=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.decay=1;a.zoom=.95+.075*Math.max(a.treb_att,a.bass_att);a.warp=0;a.vol=.25*(a.bass_att+a.mid_att+a.treb_att);a.vol*=a.vol;a.mtime+=.1*a.vol;a.q1=.4*a.mtime-.05*a.time;","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"decay=1;\nzoom=0.95+.075*max(treb_att,bass_att);\n\nwarp = 0;\n\nvol=(bass_att+mid_att+treb_att)*0.25;\nvol=vol*vol;\nmtime=mtime+vol*0.1;\n\nq1=mtime*0.4-.05*time;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 tmpvar_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  tmpvar_1 = normalize(tmpvar_2);\n  vec2 tmpvar_3;\n  tmpvar_3 = ((tmpvar_2 * vec2(1.0, -1.0)) + 0.5);\n  vec2 tmpvar_4;\n  tmpvar_4 = normalize((tmpvar_3 - 0.5));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (mix ((\n    ((((texture (sampler_main, \n      (uv + (texsize.zw * (tmpvar_1 * -4.5)))\n    ) * 0.19) + (texture (sampler_main, \n      (uv + (texsize.zw * (tmpvar_1 * -1.5)))\n    ) * 0.31)) + (texture (sampler_main, (uv + \n      (texsize.zw * (tmpvar_1 * 1.5))\n    )) * 0.31)) + (texture (sampler_main, (uv + (texsize.zw * \n      (tmpvar_1 * 4.5)\n    ))) * 0.19))\n   - 0.003).xyz, (\n    ((((texture (sampler_main, \n      (tmpvar_3 + (texsize.zw * (tmpvar_4 * -4.5)))\n    ) * 0.19) + (texture (sampler_main, \n      (tmpvar_3 + (texsize.zw * (tmpvar_4 * -1.5)))\n    ) * 0.31)) + (texture (sampler_main, (tmpvar_3 + \n      (texsize.zw * (tmpvar_4 * 1.5))\n    )) * 0.31)) + (texture (sampler_main, (tmpvar_3 + (texsize.zw * \n      (tmpvar_4 * 4.5)\n    ))) * 0.19))\n   - 0.003).xyz, vec3(0.5, 0.5, 0.5)) - 0.01);\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec3 ret3_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv - 0.5) * vec2(-1.0, 1.0)) + 0.5);\n  vec3 tmpvar_4;\n  tmpvar_4 = mix ((texture (sampler_main, uv).xyz * clamp (\n    ((((texture (sampler_blur2, uv).xyz * scale2) + bias2) * 2.8) - 0.13)\n  , 0.0, 1.0)), (texture (sampler_main, tmpvar_3).xyz * clamp (\n    ((((texture (sampler_blur2, tmpvar_3).xyz * scale2) + bias2) * 2.8) - 0.13)\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\n  ret3_1 = (tmpvar_4 * tmpvar_4);\n  ret3_1 = (ret3_1 * vec3(0.9, 1.6, 2.3));\n  ret3_1 = (ret3_1 * 2.0);\n  vec2 tmpvar_5;\n  tmpvar_5.x = rad;\n  tmpvar_5.y = uv_orig.y;\n  vec2 tmpvar_6;\n  tmpvar_6 = ((0.5 - tmpvar_5) + 0.5);\n  ret_2 = (texture (sampler_main, tmpvar_5).xyz * clamp ((\n    (((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2) * 2.8)\n   - 0.13), 0.0, 1.0));\n  vec3 tmpvar_7;\n  tmpvar_7 = mix (ret_2, (texture (sampler_main, tmpvar_6).xyz * clamp (\n    ((((texture (sampler_blur2, tmpvar_6).xyz * scale2) + bias2) * 2.8) - 0.13)\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\n  ret_2 = (tmpvar_7 * tmpvar_7);\n  ret_2 = (ret_2 * vec3(0.9, 1.6, 2.3));\n  ret_2 = (ret_2 * 3.0);\n  vec3 tmpvar_8;\n  tmpvar_8 = mix ((dot (ret3_1, vec3(0.32, 0.49, 0.29)) * rand_preset.xyz), (dot (ret_2, vec3(0.32, 0.49, 0.29)) * rand_preset.yzx), vec3(0.25, 0.25, 0.25));\n  ret_2 = tmpvar_8;\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = tmpvar_8;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{  \n\n//Geiss's work again, I think...\n\n    // Really smooth RADIAL BLUR:\n    float2 v1 = normalize(uv - 0.5);\n    ret   = (  tex2D( sampler_main, uv + texsize.zw*(v1*-4.5) )*0.19\n                 + tex2D( sampler_main, uv + texsize.zw*(v1*-1.5) )*0.31\n                 + tex2D( sampler_main, uv + texsize.zw*(v1* 1.5) )*0.31\n                 + tex2D( sampler_main, uv + texsize.zw*(v1* 4.5) )*0.19\n                ) - 0.003;            \n\nfloat2 uv_echo = (uv - 0.5)*float2(1,-1) + 0.5;\n\n    float2 v2 = normalize(uv_echo - 0.5);\n    float3 ret2   = (  tex2D( sampler_main, uv_echo + texsize.zw*(v2*-4.5) )*0.19\n                 + tex2D( sampler_main, uv_echo + texsize.zw*(v2*-1.5) )*0.31\n                 + tex2D( sampler_main, uv_echo + texsize.zw*(v2* 1.5) )*0.31\n                 + tex2D( sampler_main, uv_echo + texsize.zw*(v2* 4.5) )*0.19\n                ) - 0.003;            \n\n   ret = lerp(ret,ret2,.5);\n   ret -= .01;\n}\n ","comp_hlsl":"shader_body\n{\n\n\n    float2 uv_echo2 = (uv - 0.5)*1.000*float2(-1,1) + 0.5;\n    float3 ret3 = tex2D(sampler_main, uv).xyz*+saturate(GetBlur2(uv)*2.8 - 0.13); \n    float3 ret4 = tex2D(sampler_main, uv_echo2).xyz*+saturate(GetBlur2(uv_echo2)*2.8 - 0.13);\n    ret3 = lerp(ret3,ret4,.5);\n    ret3 *= ret3; //darken\n    ret3 *= float3(.9,1.6,2.3);\n    ret3 *= 2; //gamma\n    //ret3 = pow(ret3,1-ret3);\n   \n\nuv =(6+2*sin(q1))*uv-sin(q1);\nfloat2 m = floor(frac(uv*0.5)*2);\nuv = frac(uv)*(1-m) + (m)*frac(1-uv);\n    uv = float2(rad,uv_orig.y);\n\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = tex2D(sampler_main, uv).xyz*+saturate(GetBlur2(uv)*2.8 - 0.13); \n    float3 ret2 = tex2D(sampler_main, uv_echo).xyz*+saturate(GetBlur2(uv_echo)*2.8 - 0.13);\n    ret = lerp(ret,ret2,.5);\n    ret *= ret; //darken\n    ret *= float3(.9,1.6,2.3);\n    ret *= 3; //gamma\n    //ret -= lum(ret3); \n    //ret *= 2;\n    //ret = pow(ret,5);\n    //ret = ret;\n    ret = lerp(lum(ret3)*rand_preset.xyz,lum(ret)*rand_preset.yzx,.25);\n}"}