{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":0.97,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":1.331,"zoom":0.99951,"rot":0.2599,"cx":0.32,"cy":0.29,"warp":0.01105,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.1,"b":0.7},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.q1=0;a.xq=0;a.flip=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.tm=0;a.zp=0;","frame_eqs_str":"","point_eqs_str":"a.n=6.283*a.sample;a.tm=a.q1;a.phs=.5*-a.sample;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=.1*a.flip;a.zp=0;a.ang=.5*Math.sin(2*a.tm+a.phs)+.5;a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=1.5*Math.cos(2*a.tm+a.phs);a.xp=a.xq*Math.sin(a.ang)+a.yq*Math.cos(a.ang);a.yp=a.xq*Math.cos(a.ang)-a.yq*Math.sin(a.ang);a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*Math.sin(2*a.tm+a.phs-.5);a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+a.zp*\nMath.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=-1+Math.cos(3*a.tm+.5+a.phs);a.xp=a.xq*Math.sin(a.ang)+a.yq*Math.cos(a.ang);a.yp=a.xq*Math.cos(a.ang)-a.yq*Math.sin(a.ang);a.zp=a.zq;a.zp-=.35;a.ang=.75*Math.cos(2*a.tm+a.phs)-1.05;a.xq=a.xp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=.5*Math.cos(a.tm+a.phs)-.5;a.xp=a.xq;a.yp=a.yq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.zp=a.yq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);a.zp+=2;a.xs=\ndiv(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=.03*(1-a.sample);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\ntm=q1;\nphs=-sample*0.5;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2+phs)*0.5 +0.5;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\nang=cos(tm*2+phs)*1.5;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2+phs - 0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5 +phs);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2+phs)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm+phs)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample)*0.03;\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.2,"b":0.6},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.q1=0;a.xq=0;a.flip=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.tm=0;a.zp=0;","frame_eqs_str":"","point_eqs_str":"a.n=6.283*a.sample;a.tm=a.q1;a.phs=.5*-a.sample;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=.1*a.flip;a.zp=0;a.ang=.5*Math.sin(2*a.tm+a.phs)+.5;a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=1.5*Math.cos(2*a.tm+a.phs);a.xp=a.xq*Math.sin(a.ang)+a.yq*Math.cos(a.ang);a.yp=a.xq*Math.cos(a.ang)-a.yq*Math.sin(a.ang);a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*Math.sin(2*a.tm+a.phs+.5);a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+a.zp*\nMath.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=-1+Math.cos(3*a.tm+.5+a.phs);a.xp=a.xq*Math.sin(a.ang)+a.yq*Math.cos(a.ang);a.yp=a.xq*Math.cos(a.ang)-a.yq*Math.sin(a.ang);a.zp=a.zq;a.zp-=.35;a.ang=.75*Math.cos(2*a.tm+a.phs)-1.05;a.xq=a.xp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=.5*Math.cos(a.tm+a.phs)-.5;a.xp=a.xq;a.yp=a.yq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.zp=a.yq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);a.zp+=2;a.xs=\ndiv(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=-a.xs+.5;a.y=1.3*a.ys+.5;a.a=.03*(1-a.sample);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\ntm=q1 ;\nphs=-sample*0.5;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2+phs)*0.5 +0.5;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\nang=cos(tm*2+phs)*1.5;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2+phs+0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5 +phs);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2+phs)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm+phs)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=-xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample)*0.03;\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"g":0.6,"b":0.1},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.q1=0;a.xq=0;a.flip=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.tm=0;a.zp=0;","frame_eqs_str":"","point_eqs_str":"a.n=6.283*a.sample;a.tm=a.q1;a.phs=.5*-a.sample;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=.1*a.flip;a.zp=0;a.ang=.5*Math.sin(2*a.tm+a.phs-2)+2.5;a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=1.5*Math.cos(2*a.tm+a.phs-2);a.xp=a.xq*Math.sin(a.ang)+a.yq*Math.cos(a.ang);a.yp=a.xq*Math.cos(a.ang)-a.yq*Math.sin(a.ang);a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*Math.sin(2*a.tm+a.phs-.5);a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+\na.zp*Math.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=-1+Math.cos(3*a.tm+.5+a.phs+.5);a.xp=a.xq*Math.sin(a.ang)+a.yq*Math.cos(a.ang);a.yp=a.xq*Math.cos(a.ang)-a.yq*Math.sin(a.ang);a.zp=a.zq;a.zp-=.35;a.ang=.75*Math.cos(2*a.tm+a.phs)-1.05;a.xq=a.xp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=.5*Math.cos(a.tm+a.phs)-.5;a.xp=a.xq;a.yp=a.yq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.zp=a.yq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);a.zp+=\n2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=.05*(1-a.sample);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\ntm=q1;\nphs=-sample*0.5;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\nang=cos(tm*2+phs - 2)*1.5 ;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2+phs - 0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2+phs)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm+phs)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample)*0.05\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"g":0.3,"b":0.1},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.q1=0;a.xq=0;a.flip=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.tm=0;a.zp=0;","frame_eqs_str":"","point_eqs_str":"a.n=6.283*a.sample;a.tm=a.q1;a.phs=.5*-a.sample;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=.1*a.flip;a.zp=0;a.ang=.5*Math.sin(2*a.tm+a.phs-2)+2.5;a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=1.5*Math.cos(2*a.tm+a.phs-2);a.xp=a.xq*Math.sin(a.ang)+a.yq*Math.cos(a.ang);a.yp=a.xq*Math.cos(a.ang)-a.yq*Math.sin(a.ang);a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*Math.sin(2*a.tm+a.phs-.5);a.xq=a.xp;a.yq=a.yp*Math.sin(a.ang)+\na.zp*Math.cos(a.ang);a.zq=a.yp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=-1+Math.cos(3*a.tm+.5+a.phs);a.xp=a.xq*Math.sin(a.ang)+a.yq*Math.cos(a.ang);a.yp=a.xq*Math.cos(a.ang)-a.yq*Math.sin(a.ang);a.zp=a.zq;a.zp-=.35;a.ang=.75*Math.cos(2*a.tm+a.phs)-1.05;a.xq=a.xp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=.5*Math.cos(a.tm+a.phs)-.5;a.xp=a.xq;a.yp=a.yq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.zp=a.yq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);a.zp+=\n2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=-a.xs+.5;a.y=1.3*a.ys+.5;a.a=.05*(1-a.sample);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\ntm=q1 ;\nphs=-sample*0.5;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\nang=cos(tm*2+phs-2)*1.5;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5 +phs);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2+phs)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm+phs)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=-xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample)*0.05;\n"}],"init_eqs_str":"a.tic=0;a.vt=0;a.q6=0;a.bt=0;a.q1=0;a.q5=0;a.rc=0;a.mid_avg=0;a.tt=0;a.tin=0;a.bass_avg=0;a.pi=0;a.vav=0;a.an=0;a.q4=0;a.rd=0;a.oy=0;a.mt=0;a.mod=0;a.ra=0;a.treb_avg=0;a.vol=0;a.num=0;a.re=0;a.q2=0;a.seg=0;a.q3=0;a.q7=0;a.anga=0;a.rb=0;a.radi=0;a.ox=0;","frame_eqs_str":"a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.vol=.333333*(a.bass_att+a.treb_att+a.mid_att);a.ra=.25*div(1,a.tic);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;a.vt+=a.tic*a.vav;a.q1=3*a.tt;a.q2=3*a.mt;\na.q3=3*a.bt;a.q4=a.vt;a.rb=.00001<Math.abs(a.rb)?a.rb:.2+.0006*rand(1001);a.rc=.00001<Math.abs(a.rc)?a.rc:.2+.0006*rand(1001);a.rd=.00001<Math.abs(a.rd)?a.rd:.2+.0006*rand(1001);a.re=.00001<Math.abs(a.re)?a.re:.2+.0006*rand(1001);a.rot=.26;a.cx=.3+.1*Math.sin(a.vt*a.re)+.1*Math.cos(a.vt*a.rc);a.cy=.5+.2*Math.sin(a.vt*a.rb)+.1*Math.cos(a.vt*a.rd);a.q5=.035*Math.min(1,.5*a.treb_avg);a.q6=.035*Math.min(1,.5*a.mid_avg);a.q7=.035*Math.min(1,.5*a.bass_avg);","pixel_eqs_str":"a.num=8;a.pi=3.141592654;a.radi=.75*(a.y-.5);a.radi=a.y-.5;a.radi=pow(a.radi*a.radi+(a.x-.5)*(a.x-.5),.5);a.an=a.ang+a.pi+a.time;a.an-=2*a.pi*Math.floor(div(a.an,2*a.pi));a.mod=.1;a.seg=a.ang+a.pi;a.seg=div(a.seg,2*a.pi)*a.num;a.seg=Math.floor(a.seg);a.seg-=equal(a.seg,a.num);a.anga=a.ang+a.pi-div(2*a.pi,a.num)*a.seg;a.anga=.00001<Math.abs(equal(mod(a.seg,2),0))?div(2*a.pi,a.num)-a.anga:a.anga;a.anga+=div(a.pi,4);a.ox=.5-a.radi*Math.sin(a.anga);a.oy=.5+a.radi*Math.cos(a.anga);\na.dx=equal(a.seg,3)*(a.x-a.ox);a.dy=equal(a.seg,3)*(a.y-a.oy);a.dx=above(a.seg,0)*(a.x-a.ox);a.dy=above(a.seg,0)*(a.y-a.oy);","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n//zoom = 1;\n\ntic = min(time-tin,.1);\ntin = time;\n\nvol = (bass_att + treb_att + mid_att)*.333333;\n\nra = 1/tic*.25;\n\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\nvt = vt + tic*vav;\n\nq1 = tt*3;// wave morph speeds\nq2 = mt*3;\nq3 = bt*3;\n\nq4 = vt; // wave colour cycle\n\nrb = if(rb,rb,.2 + rand(1001)*.001*.6);\nrc = if(rc,rc,.2 + rand(1001)*.001*.6);\nrd = if(rd,rd,.2 + rand(1001)*.001*.6);\nre = if(re,re,.2 + rand(1001)*.001*.6);\n\nrot = .26;\ncx = .3 + .1*sin(vt*re) + .1*cos(vt*rc);\ncy = .5 + .2*sin(vt*rb) + .1*cos(vt*rd);\n\n\nq5 = min(1,.5*treb_avg)*.035;\nq6 = min(1,.5*mid_avg)*.035;\nq7 = min(1,.5*bass_avg)*.035;","pixel_eqs_eel":"num = 8;\npi = 3.141592654;\nradi = (y-.5)*.75;\nradi = (y-.5);\nradi = pow(radi*radi + (x-.5)*(x-.5),.5);\n\nan = ang + pi + time;\nan = an - pi*2*int(an/(pi*2));\n\nmod = .1;\n\nseg = ang + pi;\nseg = seg/(pi*2)*num;\nseg = int(seg);\nseg = seg - equal(seg,num);\n\nanga = (ang + pi) - (pi*2/num)*seg;\nanga = if(equal(seg%2,0),(pi*2/num) - anga,anga);\n//anga = anga + pi/6; // num = 6\nanga = anga + pi/4; // num = 8\n//anga = anga + .85; // num = 10\n\n\nox = .5 - radi*sin(anga);\noy = .5 + radi*cos(anga);\n\n//rot = if(equal(seg,0),rot,0);\n\ndx = equal(seg,3)*(x-ox);\ndy = equal(seg,3)*(y-oy);\n\ndx = above(seg,0)*(x-ox);\ndy = above(seg,0)*(y-oy);\n\n//dx = equal(seg,1)*(x - .5)*2;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = ((0.2 * vec3(clamp (\n    (0.02 / sqrt(((\n      (uv * vec2(rad))\n     * \n      (q28 + texture (sampler_main, fract((uv * 2.0))).xyz)\n    .xy).y - 0.2)))\n  , 0.0, 1.0))) + texture (sampler_main, uv).xyz);\n  ret_1 = ((ret_1 * 0.88) - 0.02);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  float ang2_1;\n  float tmpvar_2;\n  tmpvar_2 = ((rad * sqrt(\n    dot (texsize.xy, texsize.xy)\n  )) * 0.5);\n  ang2_1 = ((ang * 0.1591549) + ((time * 0.015) - (tmpvar_2 * 0.0002)));\n  ang2_1 = (fract((ang2_1 * 7.0)) / 7.0);\n  ang2_1 = (abs((ang2_1 - 0.07142857)) * 6.283185);\n  vec2 tmpvar_3;\n  tmpvar_3.x = cos(ang2_1);\n  tmpvar_3.y = sin(ang2_1);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (texture (sampler_main, (0.5 + (\n    ((tmpvar_2 * 0.8) * tmpvar_3)\n   * texsize.zw))).xyz * 1.333);\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus, mus1;\nfloat2 uv6, rs;\nfloat dx,dy;\nshader_body {\n\nfloat2 uv1 = (uv-.5);\n\nfloat3 noise = GetPixel ((frac(uv*2)));\n\n\nuv6 = uv* float2(rad,rad) *(q28+noise+0*rs);\nmus = saturate(.02/(sqrt(uv6.y-.2)));\nfloat3 crisp= tex2D(sampler_main,uv);\n\nret = .2*mus + crisp*1;\nret = ret*.88 -.02;\n}","comp_hlsl":"shader_body\n{\n    float rad_lq = rad * length(texsize.xy)*0.5;\n    float ang_lq = ang;\n\n    float2 uv2 = (uv - 0.5);\n    float rad2 = rad_lq*0.8;\n    float ang2 = ang_lq * M_INV_PI_2;\n\n        ang2 += time*0.015 - rad_lq*0.0002;\n        float fins = 7;\n          ang2 = frac(ang2*fins)/fins;\n          ang2 = abs(ang2 - 0.5/fins);\n\n    ang2 *= M_PI_2;\n    uv2 = 0.5 + rad2*float2(cos(ang2),sin(ang2))*texsize.zw;\n\n    ret = tex2D(sampler_main, uv2).xyz;\n    ret *= 1.333; // a little bit of overbright\n}"}