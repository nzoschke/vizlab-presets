{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.996,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":0.267,"zoom":1.16,"rot":-0.04,"warp":0.00052,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_r":1,"ob_g":1,"ob_b":1,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":3.99882,"tex_ang":1.5708,"tex_zoom":0.25005,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.06779,"ang":0.75398,"tex_zoom":0.74186,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.ang=Math.sin(.15*a.q1);a.x=.05*Math.sin(.5*a.q1)+.5;a.y=.05*Math.cos(.63*a.q1)+.5;","init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.5;\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.06779,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.ang=Math.sin(.15*a.q1);a.x=.05*Math.sin(.5*a.q1)+.5;a.y=.05*Math.cos(.63*a.q1)+.5;","init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.5;\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"sides":5,"textured":1,"rad":1.0677,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.5;\ny=cos(q1*0.63)* 0.05 + 0.5","init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.5;\ny=cos(q1*0.63)* 0.05 + 0.5"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"r":0.1,"g":0,"b":0.3},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.q1=0;a.cosang=0;a.dz=0;a.dx=0;a.xq=0;a.t3=0;a.flip=0;a.t6=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.sinang=0;a.tm=0;a.dy=0;a.t2=0;a.zp=0;a.t4=0;","frame_eqs_str":"a.t1=.5*Math.sin(a.time)+.5;a.t2=.5*Math.sin(a.time+2.1)+.5;a.t3=.5*Math.sin(a.time+4.2)+.5;a.t4=.5*Math.sin(-a.time+1.1)+.5;a.t5=.5*Math.sin(-a.time+3.1)+.5;a.t6=.5*Math.sin(-a.time+5.2)+.5;","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip=(a.flip+1)*below(a.flip,1);a.xp=0;a.yp=.1*a.flip+.2*(.5*Math.sin(a.tm)+.5);a.zp=0;a.ang=.5*Math.sin(2*a.tm)+.5;a.xq=a.xp;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.yq=a.yp;a.zq=a.zp;a.ang=8*a.tm;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*\nMath.sin(2*a.tm-.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.ang=-1+Math.cos(3.1*a.tm+.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(2.3*a.tm)-1.05;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp*a.sinang+a.zp*a.cosang;a.yq=a.yp;a.zq=a.xp*a.cosang-a.zp*a.sinang;a.ang=.5*Math.cos(a.tm)-.5;\na.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq;a.yp=a.yq*a.cosang-a.zq*a.sinang;a.zp=a.yq*a.sinang+a.zq*a.cosang;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.dx=.00001<Math.abs(a.flip)?a.x:a.dx-a.x;a.dy=.00001<Math.abs(a.flip)?a.y:a.dy-a.y;a.dz=pow(a.dx*a.dx+a.dy*a.dy,.5);a.ang=Math.abs(Math.asin(div(a.dx,a.dz)));a.cang=.00001<Math.abs(a.flip)?a.cang:.00001<Math.abs(below(a.dx,0))?.00001<Math.abs(below(a.dy,0))?-a.ang:3.141592654+a.ang:.00001<Math.abs(below(a.dy,\n0))?a.ang:3.141592654-a.ang;a.r=.5+.5*Math.sin(a.cang);a.g=.5+.5*Math.sin(a.cang+1.047197);a.b=.5+.5*Math.sin(a.cang+2.094395);a.a=(1-a.sample)*above(a.sample,0);","init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\nt2=sin(time+2.1)*0.5+0.5;\nt3=sin(time+4.2)*0.5+0.5;\n\nt4=sin(-time+1.1)*0.5+0.5;\nt5=sin(-time+3.1)*0.5+0.5;\nt6=sin(-time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=(flip+1)*below(flip,1);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nsinang=sin(ang);cosang=cos(ang);\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\ndx = if(flip,x,dx-x);\ndy = if(flip,y,dy-y);\ndz = pow(dx*dx+dy*dy,.5);\nang = abs(asin(dx/dz));\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\nr = .5 + .5*sin(cang);\ng = .5 + .5*sin(cang + 1.047197);\nb = .5 + .5*sin(cang + 2.094395);\n\na=(1-sample)*above(sample,0);\n"},{"baseVals":{"enabled":1,"thick":1,"r":0.2,"b":0.6},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.q1=0;a.cosang=0;a.dz=0;a.dx=0;a.xq=0;a.t3=0;a.flip=0;a.t6=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.sinang=0;a.tm=0;a.dy=0;a.t2=0;a.zp=0;a.t4=0;","frame_eqs_str":"a.t1=.5*Math.sin(a.time)+.5;a.t2=.5*Math.sin(a.time+2.1)+.5;a.t3=.5*Math.sin(a.time+4.2)+.5;a.t4=.5*Math.sin(-a.time+1.1)+.5;a.t5=.5*Math.sin(-a.time+3.1)+.5;a.t6=.5*Math.sin(-a.time+5.2)+.5;","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=.1*a.flip+.2*(.5*Math.sin(a.tm)+.5)+.1;a.yp=-a.yp;a.zp=0;a.ang=.5*Math.sin(2*a.tm)+.5;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.yq=a.yp;a.zq=a.zp;a.ang=8*a.tm;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.3;\na.ang=3.14+1.5*Math.sin(2*a.tm-.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.ang=-1+Math.cos(3.1*a.tm+.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(2.3*a.tm)-1.05;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp*a.sinang+a.zp*a.cosang;a.yq=a.yp;a.zq=a.xp*a.cosang-a.zp*a.sinang;a.ang=.5*Math.cos(a.tm)-\n.5;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq;a.yp=a.yq*a.cosang-a.zq*a.sinang;a.zp=a.yq*a.sinang+a.zq*a.cosang;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.dx=.00001<Math.abs(a.flip)?a.x:a.dx-a.x;a.dy=.00001<Math.abs(a.flip)?a.y:a.dy-a.y;a.dz=pow(a.dx*a.dx+a.dy*a.dy,.5);a.ang=Math.abs(Math.asin(div(a.dx,a.dz)));a.cang=.00001<Math.abs(a.flip)?a.cang:.00001<Math.abs(below(a.dx,0))?.00001<Math.abs(below(a.dy,0))?-a.ang:3.141592654+a.ang:.00001<Math.abs(below(a.dy,\n0))?a.ang:3.141592654-a.ang;a.r=.5+.5*Math.sin(a.cang);a.g=.5+.5*Math.sin(a.cang+1.047197);a.b=.5+.5*Math.sin(a.cang+2.094395);a.a=(1-a.sample)*above(a.sample,0);","init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\nt2=sin(time+2.1)*0.5+0.5;\nt3=sin(time+4.2)*0.5+0.5;\n\nt4=sin(-time+1.1)*0.5+0.5;\nt5=sin(-time+3.1)*0.5+0.5;\nt6=sin(-time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\nyp=-yp;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\ndx = if(flip,x,dx-x);\ndy = if(flip,y,dy-y);\ndz = pow(dx*dx+dy*dy,.5);\nang = abs(asin(dx/dz));\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\nr = .5 + .5*sin(cang);\ng = .5 + .5*sin(cang + 1.047197);\nb = .5 + .5*sin(cang + 2.094395);\n\na=(1-sample)*above(sample,0);"},{"baseVals":{"thick":1,"additive":1,"g":0.6,"b":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\ntm=q1;\nphs=-sample*0.5;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\nang=cos(tm*2+phs - 2)*1.5 ;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2+phs - 0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2+phs)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm+phs)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample)*0.05\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\ntm=q1;\nphs=-sample*0.5;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\nang=cos(tm*2+phs - 2)*1.5 ;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2+phs - 0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2+phs)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm+phs)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample)*0.05\n"},{"baseVals":{"thick":1,"additive":1,"g":0.3,"b":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\ntm=q1 ;\nphs=-sample*0.5;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\nang=cos(tm*2+phs-2)*1.5;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5 +phs);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2+phs)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm+phs)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=-xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample)*0.05;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\ntm=q1 ;\nphs=-sample*0.5;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\nang=cos(tm*2+phs-2)*1.5;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5 +phs);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2+phs)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm+phs)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=-xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample)*0.05;\n"}],"init_eqs_str":"a.basstime=0;a.stickybit=0;a.volavg2=0;a.q1=0;a.sample1=0;a.difftime=0;a.diff=0;a.edge=0;a.volavg=0;a.bit2=0;a.state=0;a.vol=0;a.q2=0;a.spintime=0;a.q3=0;a.basssum=0;a.sample2=0;a.q8=0;a.spintime=0;","frame_eqs_str":"a.basstime+=.03*a.bass_att;a.q1=a.basstime;a.vol=pow(a.bass+a.mid+a.treb,2);a.basssum=a.vol;a.basstime=.00001<Math.abs(below(a.basstime,465))?465:a.basstime;a.stickybit=mod(a.time,2);a.volavg+=a.vol*equal(a.stickybit,1);a.sample1+=equal(a.stickybit,1);a.volavg2+=a.vol*equal(a.stickybit,0);a.sample2+=equal(a.stickybit,0);a.edge=bnot(equal(a.bit2,a.stickybit));a.volavg-=a.volavg*a.edge*a.stickybit;a.volavg2-=a.volavg2*a.edge*equal(a.stickybit,0);a.sample1-=a.sample1*a.edge*a.stickybit;\na.sample2-=a.sample2*a.edge*equal(a.stickybit,0);a.diff=.00001<Math.abs(equal(a.stickybit,1))?div(a.basssum,div(a.volavg2,a.sample2)):0;a.diff=.00001<Math.abs(equal(a.stickybit,0))?div(a.basssum,div(a.volavg,a.sample1)):a.diff;a.q3=a.diff;a.bit2=mod(a.time,2);a.difftime+=.03*a.diff;a.q2=a.difftime;a.difftime=.00001<Math.abs(above(a.difftime,2E3))?0:a.difftime;a.spintime+=.03*a.bass*(.00001<Math.abs(equal(mod(a.state,2),1))?1:-1);a.q8=a.spintime;a.state+=above(a.diff,10);a.monitor=a.spintime;","pixel_eqs_str":"a.zoom=1.05-.04*Math.sin(a.q3);a.rot=0;","init_eqs_eel":"spintime = 0;","frame_eqs_eel":"basstime = basstime + bass_att*0.03;\nq1 = basstime;\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\n\nbasstime = if(below(basstime,465),465,basstime);\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\nq3 = diff;\n\nbit2 = time%2;\n\ndifftime = difftime + diff*0.03;\nq2 = difftime;\n\n//fix a strange error\ndifftime = if(above(difftime,2000),0, difftime);\n\nspintime = spintime + bass*0.03*if(equal(state%2,1),1,-1); \nq8 = spintime;\n\nstate = state + above(diff,10);\n\nmonitor = spintime;","pixel_eqs_eel":"zoom = 1.05 - sin(q3)*0.04;\nrot =0;// 4.72;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_fc_main, uv).xyz;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = ret_1;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 0.0;\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv - tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 0.0;\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \n    (tmpvar_2 * 2.0)\n  )) * 0.9)).xyz;\n  ret_1 = ((max (tmpvar_6, \n    (texture (sampler_main, (uv - (tmpvar_2 * 2.0))) * 0.9)\n  ).xyz - 0.4) * 0.98);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = tmpvar_5;\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\n  uv2_3.x = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (tmpvar_5 * 1.5);\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz;\n    \n    // motion blur by Geiss\n    // 'v' points exactly one pixel, in the direction of motion\n    float2 v = normalize(uv-uv_orig)*texsize.zw;\n    float3 s;\n    ret = max(ret, tex2D(sampler_main, uv+v)*0.97);\n    ret = max(ret, tex2D(sampler_main, uv-v)*0.97);\n    ret = max(ret, tex2D(sampler_main, uv+v*2)*0.90);\n    ret = max(ret, tex2D(sampler_main, uv-v*2)*0.90);\n\n    // darken (decay) over time\n    ret = (ret -0.4)*0.98; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\n//float ang1 = atan2(uv1.y, uv1.x);\n//float rad1 = log(length(uv1)-0.1);\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1);\nuv2.y = uv2.y  +0.1*time;\nuv2.x = uv2.x  +.0*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1*1.5);\nuv3.y = uv3.y  +0.08*time ;\nuv3.x = uv3.x  + time/32;\n\nfloat3 crisp = 2*GetPixel(uv2) + GetPixel(uv3);\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\n\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(uv);\n\n}"}