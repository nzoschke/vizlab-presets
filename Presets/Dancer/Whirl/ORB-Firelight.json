{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":0.388415,"echo_orient":1,"wave_mode":7,"brighten":1,"solarize":1,"invert":1,"wave_a":0.001,"warpscale":0.325446,"rot":-0.22,"warp":0.01,"wave_r":0,"wave_g":0.4,"wave_b":0,"ob_size":0,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":44.799995,"mv_y":24.000004,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.6671,"tex_zoom":0.274246,"g":1,"b":1,"a":0.1,"r2":1,"g2":0,"a2":0.4,"border_r":0,"border_g":0,"border_b":0},"init_eqs_str":"a.tex_capture=0;a.q1=0;a.saw=0;","frame_eqs_str":"a.tex_capture=a.q1;a.saw-=.001*a.bass;a.saw=.00001<Math.abs(below(a.saw,.1))?.6:a.saw;a.tex_zoom=a.saw;","init_eqs_eel":"","frame_eqs_eel":"tex_capture  = q1;\n\nsaw = saw - 0.001*bass;\nsaw = if(below(saw,0.1),0.6,saw);\n\ntex_zoom = saw;"},{"baseVals":{"enabled":1,"textured":1,"rad":2.6671,"tex_zoom":0.274246,"g":1,"b":1,"a":0.1,"r2":1,"g2":0,"a2":0.4,"border_r":0,"border_g":0,"border_b":0},"init_eqs_str":"a.tex_capture=0;a.q1=0;a.saw=0;","frame_eqs_str":"a.tex_capture=a.q1;a.saw-=.001*a.bass;a.saw=.00001<Math.abs(below(a.saw,.1))?.6:a.saw;a.tex_zoom=a.saw;","init_eqs_eel":"","frame_eqs_eel":"tex_capture  = q1;\n\nsaw = saw - 0.001*bass;\nsaw = if(below(saw,0.1),0.6,saw);\n\ntex_zoom = saw;"},{"baseVals":{"enabled":1,"textured":1,"rad":2.667177,"tex_zoom":0.369642,"g":1,"b":1,"a":0.1,"a2":0.4,"border_g":0,"border_b":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"rad":2.667177,"tex_zoom":0.302938,"g":1,"b":1,"a":0.1,"a2":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_str":"a.q1=0;a.speed=0;a.v=0;a.xs=0;a.ys=0;","frame_eqs_str":"","point_eqs_str":"a.q1=0;a.speed=.2*a.bass_att;a.v=1E5*a.sample+a.value2*a.bass*.1;a.xs+=Math.sin(.1*a.v+.1*Math.sin(a.v))*a.speed*Math.atan(1.51*a.v);a.ys+=Math.sin(.1*a.v+.1*Math.cos(a.v))*a.speed*Math.atan(a.v);a.x=.5+.5*Math.sin(.1*a.xs)*Math.cos(2*a.time+a.ys);a.y=.5+.5*Math.sin(.1*a.ys)*Math.cos(2.1*a.time+a.xs);a.x=a.x;a.y=a.y;a.y=a.y;a.g=1;a.xs=.00001<Math.abs(above(a.xs,1E3))?0:a.xs;a.ys=.00001<Math.abs(above(a.ys,1E3))?0:a.ys;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.2;\nv = sample*100000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = x;\ny = y;\ny = y;\n\n//r = 0.5 + 0.5*sin(time*1.22) + 0.1;\ng = 1;//0.4 + 0.4*sin(time*1.307) + x;\n//b = 0.4 + 0.4*sin(time*1.959);\n\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_str":"a.q1=0;a.speed=0;a.v=0;a.xs=0;a.ys=0;","frame_eqs_str":"","point_eqs_str":"a.q1=0;a.speed=.2*a.bass_att;a.v=1E5*a.sample+a.value2*a.bass*.1;a.xs+=Math.sin(.1*a.v+.1*Math.sin(a.v))*a.speed*Math.atan(1.51*a.v);a.ys+=Math.sin(.1*a.v+.1*Math.cos(a.v))*a.speed*Math.atan(a.v);a.x=.5+.5*Math.sin(.1*a.xs)*Math.cos(2*a.time+a.ys+.7);a.y=.5+.5*Math.sin(.1*a.ys)*Math.cos(2.1*a.time+a.xs+.7);a.x=a.x;a.y=a.y;a.y=a.y;a.g=1;a.xs=.00001<Math.abs(above(a.xs,1E3))?0:a.xs;a.ys=.00001<Math.abs(above(a.ys,1E3))?0:a.ys;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.2;\nv = sample*100000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys + 0.7);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs + 0.7);\n\nx = x;\ny = y;\ny = y;\n\n//r = 0.5 + 0.5*sin(time*1.4) + 0.1;\ng = 1;//0.4 + 0.4*sin(time*1.307) + x;\n//b = 0.4 + 0.4*sin(time*1.259);\n\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_str":"a.q1=0;a.speed=0;a.v=0;a.xs=0;a.ys=0;","frame_eqs_str":"","point_eqs_str":"a.q1=0;a.speed=.2*a.bass_att;a.v=1E5*a.sample+a.value2*a.bass*.1;a.xs+=Math.sin(.1*a.v+.1*Math.sin(a.v))*a.speed*Math.atan(1.51*a.v);a.ys+=Math.sin(.1*a.v+.1*Math.cos(a.v))*a.speed*Math.atan(a.v);a.x=.5+.5*Math.sin(.1*a.xs)*Math.cos(2*a.time+a.ys+1.4);a.y=.5+.5*Math.sin(.1*a.ys)*Math.cos(2.1*a.time+a.xs+1.4);a.x=a.x;a.y=a.y;a.y=a.y;a.g=1;a.xs=.00001<Math.abs(above(a.xs,1E3))?0:a.xs;a.ys=.00001<Math.abs(above(a.ys,1E3))?0:a.ys;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 = 0;\nspeed = bass_att*0.2;\nv = sample*100000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys + 1.4);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs + 1.4);\n\nx = x;\ny = y;\ny = y;\n\n//r = 0.5 + 0.5*sin(time*1.4674) + 0.1;\ng = 1;//0.4 + 0.4*sin(time*1.807) + x;\n//b = 0.4 + 0.4*sin(time*1.359);\n\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"speed = bass*0.1;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\ny = y - sample*0.1;\n\nx = x*0.6 + 0.2;\ny = y + bass*0.1;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*6.22) + 0.1;\ng = 0.4 + 0.4*sin(time*5.307);\nb = 0.4 + 0.4*sin(time*4.959)*x;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass*0.1;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\ny = y - sample*0.1;\n\nx = x*0.6 + 0.2;\ny = y + bass*0.1;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*6.22) + 0.1;\ng = 0.4 + 0.4*sin(time*5.307);\nb = 0.4 + 0.4*sin(time*4.959)*x;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_str":"a.basstime=0;a.q1=0;a.q5=0;a.decay_r=0;a.decay_b=0;a.q4=0;a.state=0;a.q2=0;a.q3=0;a.decay_g=0;","frame_eqs_str":"a.dx=0;a.basstime+=.13*a.bass;a.q5=a.basstime;a.state+=2.5;a.state=.00001<Math.abs(above(a.state,20))?0:a.state;a.q1=equal(a.state,5);a.q2=equal(a.state,10);a.q3=equal(a.state,15);a.q4=equal(a.state,20);a.decay_r=0;a.decay_g=0;a.decay_b=0;a.ob_r=.5+.5*Math.sin(.22*a.basstime);a.ob_g=.5+.5*Math.sin(.307*a.time);a.ob_b=.5+.5*Math.sin(.112*a.time);a.monitor=a.q1;","pixel_eqs_str":"a.zoom=1.05;a.rot=0;a.dx=0;a.dy=0;a.warp=0;","init_eqs_eel":"","frame_eqs_eel":"//5 frame texture buffer\n\ndx = 0.0;\n\nbasstime = basstime  + bass*0.13;\nq5 = basstime;\n\nstate = state + 2.5;\nstate = if(above(state,20),0,state);\n\nq1 = (equal(state,5));\nq2 = (equal(state,10));\nq3 = (equal(state,15));\nq4 = (equal(state,20));\n\ndecay_r = 0;\ndecay_g = 0;\ndecay_b = 0;\n\n\nob_r = 0.5 + 0.5*sin(basstime*0.22);\nob_g = 0.5 + 0.5*sin(time*0.307);\nob_b = 0.5 + 0.5*sin(time*0.112);\n\n\n\nmonitor = q1;","pixel_eqs_eel":"zoom = 1.05;\nrot = 0;\n\ndx = 0;\ndy = 0;\n\nwarp = 0;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1.x = (uv.x + (0.1 * sin(\n    ((q5 * 0.5) + ((uv.x * 20.0) * (1.0 + (0.2 * \n      sin((q5 * 0.1))\n    ))))\n  )));\n  uv_1.y = (uv.y + (0.1 * cos(\n    ((q5 * 0.7) + ((uv.y * 20.0) * (1.0 + (0.2 * \n      sin((q5 * 0.12))\n    ))))\n  )));\n  ret_2 = (texture (sampler_main, uv_1).xyz * 2.0);\n  ret_2 = (ret_2 * (ret_2 - (ret_2 * 0.2)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    \n    // darken (decay) over time\n    ret *= 1.00; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    uv[0] = uv[0] + 0.1*sin(q5*0.5 + uv[0]*20*(1 + 0.2*sin(q5*0.1)));\n    uv[1] = uv[1] + 0.1*cos(q5*0.7 + uv[1]*20*(1 + 0.2*sin(q5*0.12)));\n\n    ret = tex2D(sampler_main, uv).xyz;\n    ret *= 2.00; //gamma\n    ret *= ret - ret*0.2; //darken\n}"}