{"version":2,"baseVals":{"rating":5,"decay":0.88,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"wave_dots":1,"wave_thick":1,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.72,"wave_mystery":-0.5,"zoomexp":0.90529,"fshader":1,"warp":0.01,"wave_y":0.3,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"//Spiral custom wave code by stahlregen ;)\namplitude = .1+.05*bass_att;\nturns = 7.5;\ncenterx = .25;\ncentery = .35;\nsize = .5;\nspeed = -1;\nx = centerx+(size-size*sample)*sin(speed*3.14*time+sample*6.28*turns)*(1+amplitude*(value1+value2));\ny = centery+(size-size*sample)*cos(speed*3.14*time+sample*6.28*turns)*(1+amplitude*(value1+value2));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//Spiral custom wave code by stahlregen ;)\namplitude = .1+.05*bass_att;\nturns = 7.5;\ncenterx = .25;\ncentery = .35;\nsize = .5;\nspeed = -1;\nx = centerx+(size-size*sample)*sin(speed*3.14*time+sample*6.28*turns)*(1+amplitude*(value1+value2));\ny = centery+(size-size*sample)*cos(speed*3.14*time+sample*6.28*turns)*(1+amplitude*(value1+value2));"},{"baseVals":{"enabled":1,"samples":462,"usedots":1,"thick":1,"additive":1,"smoothing":0,"a":0.8},"init_eqs_str":"a.amplitude=0;a.turns=0;a.centerx=0;a.centery=0;a.size=0;a.speed=0;","frame_eqs_str":"a.r=.5+.4*Math.sin(1.13*a.time+a.bass);a.g=.5+.4*Math.cos(1.23*a.time+a.treb);a.b=.5+.4*Math.sin(1.33*a.time+a.mid);","point_eqs_str":"a.amplitude=.1+.05*a.bass_att;a.turns=3;a.centerx=.5;a.centery=.5;a.size=.3-Math.min(.1*a.treb_att,.1);a.speed=2;a.x=a.centerx+(a.size-a.size*a.sample)*Math.sin(3.28*a.speed*a.time+6.28*a.sample*a.turns)*(1+a.amplitude*(a.value1+a.value2));a.y=a.centery+(a.size-a.size*a.sample)*Math.cos(3.14*a.speed*a.time+6.28*a.sample*a.turns)*(1+a.amplitude*(a.value1+a.value2));","init_eqs_eel":"","frame_eqs_eel":"r = .5 + .4*sin(time*1.13+bass);\ng = .5 + .4*cos(time*1.23+treb);\nb = .5 + .4*sin(time*1.33+mid);","point_eqs_eel":"//Spiral custom wave code by stahlregen ;)\namplitude = .1+.05*bass_att;\nturns = 3;\ncenterx = .5;\ncentery = .5;\nsize = .3-min(.1*treb_att,.1);\nspeed = 2;\nx = centerx+(size-size*sample)*sin(speed*3.28*time+sample*6.28*turns)*(1+amplitude*(value1+value2));\ny = centery+(size-size*sample)*cos(speed*3.14*time+sample*6.28*turns)*(1+amplitude*(value1+value2));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.zoom=1.02+.033*(a.bass_att+a.treb_att+a.mid_att);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"zoom = 1.02+0.033*(bass_att+treb_att+mid_att);","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + ((ret_1 - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 122.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 6.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\n  ret_1 = ((0.8 * (\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\n  ret_1 = (ret_1 + (0.6 * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 - ((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\n  )));\n  ret_1 = (ret_1 + 1.0);\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) - (0.15 * dot (texture (sampler_noise_lq, \n    (uv + (0.01 * time))\n  ), vec4(0.32, 0.49, 0.29, 0.0))));\n  ret_1 = (mix (ret_1, (\n    (0.75 * ret_1)\n   * \n    dot ((((0.6 * \n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\n     + bias1))), vec3(0.32, 0.49, 0.29))\n  ), pow (hue_shader, ret_1)) * 0.8);\n  ret_1 = (ret_1 * ret_1);\n  vec3 tmpvar_9;\n  tmpvar_9 = sqrt(ret_1);\n  ret_1 = tmpvar_9;\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = tmpvar_9;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret.xyz = tex2D( sampler_main, uv ).xyz;\n\n      // take the difference between the crisp and blurred images,\n      // then add it back into the image.  Creates spots and stripes over time.\n      ret.xyz += (ret.xyz - GetBlur2(uv))*0.3;\n      ret.xyz *= 0.9;\n\n      // add noise:\n      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 * saturate(treb_att-1);\n\n      // desaturate over time, to keep the globs white\n      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);\n}","comp_hlsl":"shader_body\n{\n\n//Code bits by Flexi and Geiss\n\n    float2 d = texsize.zw*6;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\nfloat2 uv_y = uv-.25*(float2(lum(dx),lum(dy)));\nfloat2 uv_y2 = uv+.25*(float2(lum(dx),lum(dy)));\n\n\nret = .8*GetBlur3(uv_y)-GetBlur1(uv_y);\nret += .6*GetBlur1(uv);\nret -= (GetBlur2(uv_y2)-GetBlur1(uv_y2));\nret += 1.2*GetPixel(uv_y2)+.15*GetBlur1(uv_y2);\nret += 1;\nret = lum(ret);\nret -= .15*lum(tex2d(sampler_noise_lq,(uv+.01*time)));\nret = lerp(ret,.75*ret*lum(.6*GetBlur3(uv_y)-.7*GetPixel(uv)-.3*GetBlur1(uv_y2)),pow(hue_shader,ret));\nret *= .8;\nret *= ret;\nret = sqrt(ret);\n\n}"}