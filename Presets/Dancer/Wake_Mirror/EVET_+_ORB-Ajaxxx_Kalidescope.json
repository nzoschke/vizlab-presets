{"version":2,"baseVals":{"rating":5,"decay":0.95,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_a":0.001,"zoom":0.96,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_x":64,"mv_y":4.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0.25,"y":0.25,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.q1=0;a.tex_capture=0;a.q3=0;a.q8=0;a.tex_saw=.4;","frame_eqs_str":"a.ang=.2*a.q1;a.tex_capture=above(a.q3,2);a.tex_zoom=a.q8;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n//x = 0.5 + 0.2*sin(q2);\n//y = 0.5 + (0.3*sin(q2));\n\ntex_capture = above(q3,2);\ntex_zoom = q8;"},{"baseVals":{"enabled":1,"textured":1,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.q1=0;a.tex_capture=0;a.q3=0;a.q8=0;a.tex_saw=.4;","frame_eqs_str":"a.ang=.2*a.q1;a.tex_capture=above(a.q3,2);a.tex_zoom=a.q8;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n//x = 0.5 + 0.2*sin(q2);\n//y = 0.5 + (0.3*sin(q2));\n\ntex_capture = above(q3,2);\ntex_zoom = q8;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"a":0.5},"init_eqs_str":"a.zs=0;a.speed=0;a.xcoef=0;a.q4=0;a.q1=0;a.count=0;a.q6=0;a.q7=0;","frame_eqs_str":"","point_eqs_str":"a.zs=.00001<Math.abs(below(a.zs,1))?9:a.zs;a.zs=.00001<Math.abs(above(a.zs,1300))?1:a.zs;a.speed=.002*a.bass;a.xcoef=2*equal(a.q4,0)+2.1*equal(a.q4,1)+2.2*equal(a.q4,2)+2.3*equal(a.q4,3)+2.4*equal(a.q4,4)+2.5*equal(a.q4,5);a.zs+=Math.tan(.015*a.q1)*a.speed;a.count+=.0001;a.count=.00001<Math.abs(above(a.count,6.24))?0:a.count;a.x=.1*Math.cos(a.q1*a.zs*2+.1);a.y=.1*Math.sin(a.q1*a.zs+.1);a.x=a.x*Math.cos(3*a.q1)*.8-a.y*Math.sin(3*a.q1)*.8;a.y=a.x*Math.sin(3*a.q1)+a.y*Math.cos(3*\na.q1);a.x=a.x+a.q6+.5;a.y=a.y-a.q7+.5;a.r=.5+.5*Math.sin(1.2*a.q1+a.x+a.x);a.g=.5+.5*Math.sin(1.5*a.q1+a.x+a.y);a.b=.5+.5*Math.sin(1.36*a.q1+a.y+a.y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,1),9,zs);\n\nzs = if(above(zs, 1300),1, zs);\n\nspeed = bass*0.002;\n\nxcoef = equal(q4,0)*2 + equal(q4,1)*2.1  + equal(q4,2)*2.2 + equal(q4,3)*2.3 + equal(q4,4)*2.4 + equal(q4,5)*2.5;\n\n//sum\nzs = zs + tan(q1*0.015)*speed;\n\n\ncount = count + 0.0001;\ncount = if(above(count,6.24),0,count);\n\n//project\nx = 0.1*cos(q1*zs*2 + 0.1);\ny = 0.1*sin(q1*zs*1 + 0.1);\n\n//rotate\nx = x*cos(q1*3)*0.8 - y*sin(q1*3)*0.8;\ny = x*sin(q1*3) + y*cos(q1*3);\n\n//move\nx = x + q6 + 0.5;\ny = y - q7 + 0.5;\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":1,"a":0.5},"init_eqs_str":"a.zs=0;a.speed=0;a.xcoef=0;a.q4=0;a.q1=0;a.count=0;a.q6=0;a.q7=0;","frame_eqs_str":"","point_eqs_str":"a.zs=.00001<Math.abs(below(a.zs,1))?9:a.zs;a.zs=.00001<Math.abs(above(a.zs,1300))?1:a.zs;a.speed=.002*a.bass;a.xcoef=2*equal(a.q4,0)+2.1*equal(a.q4,1)+2.2*equal(a.q4,2)+2.3*equal(a.q4,3)+2.4*equal(a.q4,4)+2.5*equal(a.q4,5);a.zs+=Math.tan(.015*a.q1)*a.speed;a.count+=.0001;a.count=.00001<Math.abs(above(a.count,6.24))?0:a.count;a.x=.1*Math.cos(a.q1*a.zs*2+.1);a.y=.1*Math.sin(a.q1*a.zs+.1);a.x=a.x*Math.cos(3*-a.q1)*.8-a.y*Math.sin(3*-a.q1)*.8;a.y=a.x*Math.sin(3*-a.q1)+a.y*Math.cos(3*\n-a.q1);a.x=a.x+a.q6+.5;a.y=a.y+a.q7+.5;a.r=.5+.5*Math.sin(1.2*a.q1+a.x+a.x);a.g=.5+.5*Math.sin(1.5*a.q1+a.x+a.y);a.b=.5+.5*Math.sin(1.36*a.q1+a.y+a.y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,1),9,zs);\n\nzs = if(above(zs, 1300),1, zs);\n\nspeed = bass*0.002;\n\nxcoef = equal(q4,0)*2 + equal(q4,1)*2.1  + equal(q4,2)*2.2 + equal(q4,3)*2.3 + equal(q4,4)*2.4 + equal(q4,5)*2.5;\n\n//sum\nzs = zs + tan(q1*0.015)*speed;\n\n\ncount = count + 0.0001;\ncount = if(above(count,6.24),0,count);\n\n//project\nx = 0.1*cos(q1*zs*2 + 0.1);\ny = 0.1*sin(q1*zs*1 + 0.1);\n\n//rotate\nx = x*cos(-q1*3)*0.8 - y*sin(-q1*3)*0.8;\ny = x*sin(-q1*3) + y*cos(-q1*3);\n\n//move\nx = x + q6 + 0.5;\ny = y + q7 + 0.5;\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.basstime=0;a.xs=0;a.stickybit=0;a.xpass=0;a.volavg2=0;a.q6=0;a.q1=0;a.q5=0;a.decay_r=0;a.sample1=0;a.difftime=0;a.diff=0;a.decay_b=0;a.edge=0;a.tex_saw=0;a.saw_g=0;a.ys=0;a.q4=0;a.basstime2=0;a.ypass=0;a.volavg=0;a.bit2=0;a.bass_time=0;a.saw_b=0;a.state=0;a.vol=0;a.q2=0;a.q3=0;a.basssum=0;a.decay_g=0;a.q7=0;a.saw_r=0;a.sample2=0;a.zoom_in=0;a.q8=0;","frame_eqs_str":"a.basstime+=.03*a.bass;a.basstime2=a.basstime+.03*a.bass;a.q1=a.basstime2;a.basstime=.00001<Math.abs(below(a.basstime,450))?450:a.basstime;a.basstime=.00001<Math.abs(above(a.basstime,495))?450:a.basstime;a.basstime+=.03*a.bass_att;a.vol=pow(a.bass+a.mid+a.treb,2);a.basssum=a.vol;a.stickybit=mod(a.time,2);a.volavg+=a.vol*equal(a.stickybit,1);a.sample1+=equal(a.stickybit,1);a.volavg2+=a.vol*equal(a.stickybit,0);a.sample2+=equal(a.stickybit,0);a.edge=bnot(equal(a.bit2,a.stickybit));\na.volavg-=a.volavg*a.edge*a.stickybit;a.volavg2-=a.volavg2*a.edge*equal(a.stickybit,0);a.sample1-=a.sample1*a.edge*a.stickybit;a.sample2-=a.sample2*a.edge*equal(a.stickybit,0);a.diff=.00001<Math.abs(equal(a.stickybit,1))?div(a.basssum,div(a.volavg2,a.sample2)):0;a.diff=.00001<Math.abs(equal(a.stickybit,0))?div(a.basssum,div(a.volavg,a.sample1)):a.diff;a.q3=a.diff;a.bit2=mod(a.time,2);a.state=.00001<Math.abs(above(a.state,5))?0:a.state;a.state+=above(a.diff,3);a.q4=a.state;a.difftime+=.03*a.diff;a.q2=\na.difftime;a.difftime=.00001<Math.abs(above(a.difftime,2E3))?0:a.difftime;a.state+=equal(a.diff,3);a.state=.00001<Math.abs(above(a.state,5))?0:a.state;a.xs=0;a.ys=0;a.xs+=equal(0,a.state)*Math.atan(4*a.bass_time)*.1;a.ys+=equal(0,a.state)*Math.cos(4*a.bass_time)*.1;a.xs+=equal(1,a.state)*Math.cos(4*a.bass_time)*.1;a.ys+=equal(1,a.state)*Math.cos(4*a.bass_time)*.1;a.xs+=equal(2,a.state)*Math.cos(4*a.bass_time)*.1;a.ys+=equal(2,a.state)*Math.sin(4*a.bass_time)*.1;a.xs+=equal(3,a.state)*Math.cos(5*a.bass_time)*\n.1;a.ys+=equal(3,a.state)*Math.cos(9*a.bass_time)*.1;a.xs+=equal(4,a.state)*Math.atan(6*a.bass_time)*.1;a.ys+=equal(4,a.state)*Math.cos(2*a.bass_time)*.1;a.xs+=equal(5,a.state)*Math.cos(2*a.bass_time)*.1;a.ys+=equal(5,a.state)*Math.sin(1*a.bass_time)*.1;a.xpass=a.xs+a.xpass;a.ypass=a.ys+a.ypass;a.q6=.3*Math.sin(.5*a.xpass);a.q7=.3*Math.sin(.5*a.ypass);a.zoom_in+=above(a.diff,4);a.zoom_in=.00001<Math.abs(above(a.zoom_in,2))?0:a.zoom_in;a.q5=a.zoom_in;a.tex_saw-=.002*a.diff;a.tex_saw=.00001<Math.abs(below(a.tex_saw,\n.1))?1:a.tex_saw;a.q8=a.tex_saw;a.monitor=a.tex_saw;","pixel_eqs_str":"a.zoom=1-.1*equal(a.q5,0)*a.q3+.1*equal(a.q5,1)*a.q3;a.saw_r+=.0001*a.bass;a.saw_r=.00001<Math.abs(above(a.saw_r,1))?0:a.saw_r;a.saw_g+=.00012*a.bass;a.saw_g=.00001<Math.abs(above(a.saw_g,1))?0:a.saw_g;a.saw_b+=.00011*a.bass;a.saw_b=.00001<Math.abs(above(a.saw_b,1))?0:a.saw_b;a.decay_r=5-a.x*a.y*a.saw_r;a.decay_g=5-a.y*a.x*a.saw_g;a.decay_b=5-a.x*a.y*a.saw_b;a.rot=4.19;a.zoom=1;","init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass*0.03;\nbasstime2 = basstime + bass*0.03;\nq1 = basstime2;\n\n//start in most active range\nbasstime = if(below(basstime,450),450,basstime);\nbasstime = if(above(basstime,495),450,basstime);\n\nbasstime = basstime + bass_att*0.03;\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\nq3 = diff;\n\nbit2 = time%2;\n\nstate = if(above(state,5),0,state);\nstate =  state + above(diff,3);\nq4 = state;\n\ndifftime = difftime + diff*0.03;\nq2 = difftime;\n\n//fix a strange error\ndifftime = if(above(difftime,2000),0, difftime);\n\n//another state machine for shape tracking\nstate = state + equal(diff,3);\nstate = if(above(state,5), 0, state);\n\nxs = 0;\nys = 0;\n\n//state 0 elipse\nxs = xs + (equal(0,state))*atan(bass_time*4)*0.1;\nys = ys + (equal(0,state))*cos(bass_time*4)*0.1;\n\n//state 1 diag\nxs = xs + (equal(1,state))*cos(bass_time*4)*0.1;\nys = ys + (equal(1,state))*cos(bass_time*4)*0.1;\n\n//state 2 -circle\nxs = xs + (equal(2,state))*cos(bass_time*4)*0.1;\nys = ys + (equal(2,state))*sin(bass_time*4)*0.1;\n\n//state 3 parametric arc\nxs = xs + (equal(3,state))*cos(bass_time*5)*0.1;\nys = ys + (equal(3,state))*cos(bass_time*9)*0.1;\n\n//state 4 arc\nxs = xs + (equal(4,state))*atan(bass_time*6)*0.1;\nys = ys + (equal(4,state))*cos(bass_time*2)*0.1;\n\n//state 5 infinity\nxs = xs + (equal(5,state))*cos(bass_time*2)*0.1;\nys = ys + (equal(5,state))*sin(bass_time*1)*0.1;\n\n//count\nxpass = xs + xpass;\nypass = ys + ypass;\n\n//project and publish\nq6 = 0.3*sin(xpass*0.5);\nq7 = 0.3*sin(ypass*0.5);\n\n\n//toggle zoom in and out\nzoom_in = zoom_in + above(diff,4);\nzoom_in = if(above(zoom_in,2),0,zoom_in);\nq5 = zoom_in;\n\n\ntex_saw = tex_saw - 0.002*diff;\ntex_saw = if(below(tex_saw,0.1),1,tex_saw);\nq8 = tex_saw;\nmonitor = tex_saw;","pixel_eqs_eel":"zoom = 1 - equal(q5,0)*0.1*q3 + equal(q5,1)*0.1*q3;\n\nsaw_r = saw_r + 0.0001*bass;\nsaw_r =  if(above(saw_r,1),0,saw_r);\n\nsaw_g = saw_g + 0.00012*bass;\nsaw_g =  if(above(saw_g,1),0,saw_g);\n\nsaw_b = saw_b + 0.00011*bass;\nsaw_b =  if(above(saw_b,1),0,saw_b);\n\n\ndecay_r = 5 - x*y*saw_r;\ndecay_g = 5 - y*x*saw_g;\ndecay_b = 5 - x*y*saw_b;\n\nrot = 4.19;\nzoom = 1;","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  vec2 rs_2;\n  vec2 uv6_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  uv6_3 = tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (((q27 * 0.05) * sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  )) + q30);\n  vec2 tmpvar_6;\n  tmpvar_6 = clamp (((\n    sin(tmpvar_5)\n   / \n    cos(tmpvar_5)\n  ) * normalize(tmpvar_4)), vec2(-8.0, -8.0), vec2(8.0, 8.0));\n  rs_2 = tmpvar_6;\n  if ((q28 == 1.0)) {\n    rs_2 = (tmpvar_6 * sin((uv * 5.0)));\n  };\n  uv_1 = (uv + ((rs_2 * \n    dot (rs_2, rs_2)\n  ) / 60.0));\n  uv6_3 = ((uv_1 - 0.5) * (1.0 + (q1 * q27)));\n  xlat_mutablemus = (abs(vec3((0.1 / \n    sqrt((uv6_3.y - 0.2))\n  ))) * vec3(0.8, 0.6, 1.0));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur1, \n      fract(uv_1)\n    ).xyz * scale1) + bias1) * 0.05))\n   + \n    (0.06 * xlat_mutablemus)\n  ) * 0.99) - 0.01);\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\n    (0.5 - uv)\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\n  ret_1 = (1.0 - (1.0 - (\n    (ret_1 * (1.0 - ret_1))\n   * 4.0)));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\nfloat2 uv6 = uv1;\nfloat z = q27*.05*length(uv1)+q30;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\n\nif (q28 ==1) {rs *= sin(uv*5) ;}\n\nuv += rs*dot(rs,rs)/60;\n\n\nuv6 = (uv-.5)*(1 + 1*q1*q27);\n//uv6 = mul(uv6,float2x2(_qa));\n\nmus = .1/(sqrt(uv6.y-.2));\nmus = abs(mus);\nmus *= float3 (.8,.6,1);\n\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.05 + .06*mus;\nret = ret1 * .99 -  .01;\n\n\n}","comp_hlsl":"shader_body\n{\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo).xyz, \n                0.50 \n              ); //video echo\n    ret *= 2.00; //gamma\n    float3 retish = 1 - ret*(1-ret)*4; //solarize\n    ret = 1 - retish;\n}"}