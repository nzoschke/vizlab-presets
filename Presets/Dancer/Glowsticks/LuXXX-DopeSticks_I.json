{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":1.331,"zoomexp":0.24832,"fshader":1,"zoom":0.99951,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.005,"ib_size":0.05,"ib_r":0.1,"ib_g":0.1,"ib_b":0.1,"ib_a":0.014,"mv_x":0,"mv_y":43.2,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":1.06779,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.5;\ny=cos(q1*0.63)* 0.05 + 0.5","init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\nx=sin(q1*0.5) * 0.05 + 0.5;\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"rad":0.03809,"g":1,"b":1,"g2":0.6,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tm=q1;\n\nxp=0;\nyp=0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2 )*0.5 +0.5;\n\nxq=xp;\nsinang=sin(ang);cosang=cos(ang);\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\n\n","init_eqs_eel":"","frame_eqs_eel":"tm=q1;\n\nxp=0;\nyp=0.1;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2 )*0.5 +0.5;\n\nxq=xp;\nsinang=sin(ang);cosang=cos(ang);\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\n\n"}],"waves":[{"baseVals":{"r":0.1,"b":0.7,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t1=sin(time)*0.5+0.5;\nt2=sin(time+2.1)*0.5+0.5;\nt3=sin(time+4.2)*0.5+0.5;\n\nt4=sin(time+1.1)*0.5+0.5;\nt5=sin(time+3.1)*0.5+0.5;\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_str":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2 )*0.5 +0.5;\n\nxq=xp;\nsinang=sin(ang);cosang=cos(ang);\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=if( equal(q8,1) , (1-sample) , sample);\na=a*a;\n\nb=b+pow(1-sample,2)*0.3;\n\n\n\nr1=t1;\ng1=t2;\nb1=t3;\nr2=t4;\ng2=t5;\nb2=t6;\n\nr=r1*flip + r2*(1-flip);\ng=g1*flip + g2*(1-flip);\nb=b1*flip + b2*(1-flip);","init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\nt2=sin(time+2.1)*0.5+0.5;\nt3=sin(time+4.2)*0.5+0.5;\n\nt4=sin(time+1.1)*0.5+0.5;\nt5=sin(time+3.1)*0.5+0.5;\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2 )*0.5 +0.5;\n\nxq=xp;\nsinang=sin(ang);cosang=cos(ang);\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=if( equal(q8,1) , (1-sample) , sample);\na=a*a;\n\nb=b+pow(1-sample,2)*0.3;\n\n\n\nr1=t1;\ng1=t2;\nb1=t3;\nr2=t4;\ng2=t5;\nb2=t6;\n\nr=r1*flip + r2*(1-flip);\ng=g1*flip + g2*(1-flip);\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"r":0.2,"b":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t1=sin(time)*0.5+0.5;\nt2=sin(time+2.1)*0.5+0.5;\nt3=sin(time+4.2)*0.5+0.5;\n\nt4=sin(time+1.1)*0.5+0.5;\nt5=sin(time+3.1)*0.5+0.5;\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_str":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\nyp=-yp;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=if( equal(q8,1) , (1-sample) , sample);\na=a*a;\n\n\nb=b+pow(1-sample,2)*0.3;\n\nr1=t1;\ng1=t2;\nb1=t3;\nr2=t4;\ng2=t5;\nb2=t6;\n\nr=r1*flip + r2*(1-flip);\ng=g1*flip + g2*(1-flip);\nb=b1*flip + b2*(1-flip);","init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\nt2=sin(time+2.1)*0.5+0.5;\nt3=sin(time+4.2)*0.5+0.5;\n\nt4=sin(time+1.1)*0.5+0.5;\nt5=sin(time+3.1)*0.5+0.5;\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\nyp=-yp;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=if( equal(q8,1) , (1-sample) , sample);\na=a*a;\n\n\nb=b+pow(1-sample,2)*0.3;\n\nr1=t1;\ng1=t2;\nb1=t3;\nr2=t4;\ng2=t5;\nb2=t6;\n\nr=r1*flip + r2*(1-flip);\ng=g1*flip + g2*(1-flip);\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"additive":1,"g":0.6,"b":0.1},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.q1=0;a.cosang=0;a.t8=0;a.xq=0;a.t3=0;a.flip=0;a.t6=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.sinang=0;a.tm=0;a.t2=0;a.zp=0;a.t4=0;a.q8=0;","frame_eqs_str":"a.t1=.5*Math.sin(a.time)+.5;a.t2=.5*Math.sin(a.time+2.1)+.5;a.t3=.5*Math.sin(a.time+4.2)+.5;a.t4=.5*Math.sin(a.time+1.1)+.5;a.t5=.5*Math.sin(a.time+3.1)+.5;a.t6=.5*Math.sin(a.time+5.2)+.5;a.t8=Math.floor(2*Math.sin(2*a.time)+3);","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=.1*a.flip+.2*(.5*Math.sin(a.tm)+.5);a.zp=0;a.ang=.5*Math.sin(2*a.tm)+.5;a.xq=a.xp;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.yq=a.yp;a.zq=a.zp;a.ang=8*a.tm+1;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.3;a.ang=3.14+\n1.5*Math.sin(2*a.tm-.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.ang=-1+Math.cos(3.1*a.tm+.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(2.3*a.tm)-1.05;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp*a.sinang+a.zp*a.cosang;a.yq=a.yp;a.zq=a.xp*a.cosang-a.zp*a.sinang;a.ang=.5*Math.cos(a.tm)-\n.5;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq;a.yp=a.yq*a.cosang-a.zq*a.sinang;a.zp=a.yq*a.sinang+a.zq*a.cosang;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=.00001<Math.abs(equal(a.q8,1))?1-a.sample:a.sample;a.a*=above(Math.sin(128*a.tm*a.t8),0);a.r=a.t4;a.g=a.t5;a.b=a.t6;","init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\nt2=sin(time+2.1)*0.5+0.5;\nt3=sin(time+4.2)*0.5+0.5;\n\nt4=sin(time+1.1)*0.5+0.5;\nt5=sin(time+3.1)*0.5+0.5;\nt6=sin(time+5.2)*0.5+0.5;\n\n\nt8= int( sin(time*2)*2 + 3);","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nsinang=sin(ang);cosang=cos(ang);\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8 + 1;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\na=if( equal(q8,1) , (1-sample) , sample);\n\n\na=a* above( sin(tm*128*t8) , 0 );\n\n\nr=t4;\ng=t5;\nb=t6;\n"},{"baseVals":{"enabled":1,"additive":1,"g":0.3,"b":0.1},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.t5=0;a.xs=0;a.yp=0;a.t1=0;a.q1=0;a.cosang=0;a.t8=0;a.xq=0;a.t3=0;a.flip=0;a.t6=0;a.ys=0;a.zq=0;a.phs=0;a.ang=0;a.sinang=0;a.tm=0;a.t2=0;a.zp=0;a.t4=0;a.q8=0;","frame_eqs_str":"a.t1=.5*Math.sin(a.time)+.5;a.t2=.5*Math.sin(a.time+2.1)+.5;a.t3=.5*Math.sin(a.time+4.2)+.5;a.t4=.5*Math.sin(a.time+1.1)+.5;a.t5=.5*Math.sin(a.time+3.1)+.5;a.t6=.5*Math.sin(a.time+5.2)+.5;a.t8=Math.floor(2*Math.sin(2*a.time)+3);","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=.1*a.flip+.2*(.5*Math.sin(a.tm)+.5)+.1;a.yp=-a.yp;a.zp=0;a.ang=.5*Math.sin(2*a.tm)+.5;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.yq=a.yp;a.zq=a.zp;a.ang=8*a.tm+1;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=\n.3;a.ang=3.14+1.5*Math.sin(2*a.tm-.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sinang+a.zp*a.cosang;a.zq=a.yp*a.cosang-a.zp*a.sinang;a.ang=-1+Math.cos(3.1*a.tm+.5);a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq*a.sinang+a.yq*a.cosang;a.yp=a.xq*a.cosang-a.yq*a.sinang;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(2.3*a.tm)-1.05;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xq=a.xp*a.sinang+a.zp*a.cosang;a.yq=a.yp;a.zq=a.xp*a.cosang-a.zp*a.sinang;a.ang=.5*\nMath.cos(a.tm)-.5;a.sinang=Math.sin(a.ang);a.cosang=Math.cos(a.ang);a.xp=a.xq;a.yp=a.yq*a.cosang-a.zq*a.sinang;a.zp=a.yq*a.sinang+a.zq*a.cosang;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=.00001<Math.abs(equal(a.q8,1))?1-a.sample:a.sample;a.a*=a.a;a.a*=above(Math.sin(128*a.tm*a.t8),0);a.r=a.t4;a.g=a.t5;a.b=a.t6;","init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\nt2=sin(time+2.1)*0.5+0.5;\nt3=sin(time+4.2)*0.5+0.5;\n\nt4=sin(time+1.1)*0.5+0.5;\nt5=sin(time+3.1)*0.5+0.5;\nt6=sin(time+5.2)*0.5+0.5;\n\n\nt8= int( sin(time*2)*2 + 3);","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\nyp=-yp;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\nyq=yp;\nzq=zp;\n\nang=tm*8+1;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp;\nyq=yp*sinang + zp*cosang;\nzq=yp*cosang - zp*sinang;\n\n//upper arm twist\nang=-1.0 + cos(tm*3.1 + 0.5);\nsinang=sin(ang);cosang=cos(ang);\nxp=xq*sinang + yq*cosang;\nyp=xq*cosang - yq*sinang;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2.3)*1.75 - 1.05;\nsinang=sin(ang);cosang=cos(ang);\nxq=xp*sinang + zp*cosang;\nyq=yp;\nzq=xp*cosang - zp*sinang;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nsinang=sin(ang);cosang=cos(ang);\nxp=xq;\nyp=yq*cosang - zq*sinang;\nzp=yq*sinang + zq*cosang;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=if( equal(q8,1) , (1-sample) , sample);\na=a*a;\n\na=a* above( sin(tm*128*t8) , 0 );\n\n\nr=t4;\ng=t5;\nb=t6;"}],"init_eqs_str":"a.xx=0;a.tic=0;a.sw=0;a.av=0;a.vt=0;a.tir=0;a.q6=0;a.bt=0;a.q1=0;a.q5=0;a.mid_avg=0;a.dis=0;a.tt=0;a.ti=0;a.bass_avg=0;a.vav=0;a.q4=0;a.a=0;a.zm=0;a.ba=0;a.trmi=0;a.mt=0;a.b=0;a.ra=0;a.tm=0;a.treb_avg=0;a.tc=0;a.bb=0;a.q2=0;a.q3=0;a.yy=0;a.q7=0;a.q8=0;","frame_eqs_str":"a.decay=.99;a.warp=0;a.tic=Math.min(a.time-a.tir,.1);a.tir=a.time;a.ra=10;a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb_avg;a.mt+=a.tic*a.mid_avg;a.bt+=a.tic*a.bass_avg;a.vt+=a.tic*a.vav;a.q3=.5+Math.min(.1*a.vav,.3)*Math.sin(a.vt);a.q4=.5+Math.min(.1*\na.vav,.3)*Math.cos(a.vt);a.tic=Math.min(a.time-a.tir,.1);a.tir=a.time;a.warp=0;a.zoom=1;a.ti=2.4*a.time;a.ob_r=.5+.5*Math.sin(.5*(a.time+2*(.8*Math.cos(.645*a.ti)+.2*Math.sin(.475*a.ti))));a.ob_g=.5+.5*Math.sin(.5*(a.time+2*(.5*Math.cos(.561*a.ti)+.5*Math.sin(.68*a.ti))+2.094));a.ob_b=.5+.5*Math.sin(.5*(a.time+2*(.3*Math.cos(.326*a.ti)+.7*Math.sin(.546*a.ti))+4.188));a.ib_r=0*a.ob_r;a.ib_g=0*a.ob_g;a.ib_b=0*a.ob_b;a.ra=10;a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*\n(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb_avg;a.mt+=a.tic*a.mid_avg;a.bt+=a.tic*a.bass_avg;a.vt+=a.tic*a.vav;a.q1=a.bt;a.q2=.5*(a.mt+a.tt);a.monitor=a.fps;a.decay=1;a.tc=10*a.tic;a.tm+=.00001<Math.abs(above(Math.sin(a.tm),0))?2*a.tc-a.av*a.tc:a.vav*a.tc;a.q5=.1*(a.treb_avg+a.mid_avg);a.q6=.5+.2*Math.sin(.279*a.bt)+.25*Math.sin(.972*a.bt);a.q7=\n.5+.2*Math.sin(.785*a.bt)+.25*Math.sin(.489*a.bt);a.q8=.2*a.bass_avg;","pixel_eqs_str":"a.zm=.05*(1-1*a.rad);a.dx=a.zm*(a.x-a.q3);a.dy=a.zm*(a.y-a.q4);a.ba=.75*(a.bass-1)+1;a.bb=Math.min(1,a.ba);a.trmi=.375*(a.treb+a.mid-2)+1;a.xx=.25*Math.sin(4.8*a.x+1.024*a.q2)+.15*Math.sin(7.1*a.x-.9437*a.q2)+.1*Math.sin(15.9*a.x-1.222*a.q2);a.yy=.15*Math.sin(3*a.y+.935*a.q2)+.15*Math.sin(16.5*a.y+1.127*a.q2)+.2*Math.sin(9.2*a.y-1.974*a.q2);a.a=.5+.2*Math.sin(.687*a.q2)+.25*Math.sin(.248*a.q2);a.b=.5+.2*Math.sin(.354*a.q2)+.25*Math.sin(.724*a.q2);a.dis=pow((a.x-a.a)*(a.x-a.a)+\n(a.y-a.b)*(a.y-a.b)*.75,.5);a.sw=below(Math.abs(a.dis-a.q5),.015)+below(Math.abs(a.dis-(a.q5-.1)),.01)+below(Math.abs(a.dis-(a.q5-.2)),.005);a.a=a.q6;a.b=a.q7;a.dis=pow((a.x-a.a)*(a.x-a.a)+(a.y-a.b)*(a.y-a.b)*.75,.5);a.sw=a.sw+below(Math.abs(a.dis-a.q8),.015)+below(Math.abs(a.dis-(a.q8-.1)),.01)+below(Math.abs(a.dis-(a.q8-.2)),.005);a.sw=.00001<Math.abs(a.sw)?rand(3):below(rand(Math.floor(5*a.fps)),1);a.zoom+=12*a.sw;a.rot+=12*a.sw;","init_eqs_eel":"","frame_eqs_eel":"decay = .99;\nwarp = 0;\n\ntic = min(time - tir,.1);\ntir = time;\n\nra = 10;\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb_avg;\nmt = mt + tic*mid_avg;\nbt = bt + tic*bass_avg;\nvt = vt + tic*vav;\n\nq3 = .5 + min(vav*.1,.3)*sin(vt);\nq4 = .5 + min(vav*.1,.3)*cos(vt);\n\n//q3 = vt*2;\n\n\n\ntic = min(time - tir,.1);\ntir = time;\n\nwarp = 0;\nzoom = 1;\n\nti = time*2.4;\nob_r = 0.5 + 0.5*sin(0.5*(time + 2*(cos(ti*0.645)*0.8 + 0.2*sin(ti*0.475))));\nob_g = 0.5 + 0.5*sin(0.5*(time + 2*(cos(ti*0.561)*0.5 + 0.5*sin(ti*0.680)) + 2.094));\nob_b = 0.5 + 0.5*sin(0.5*(time + 2*(cos(ti*0.326)*0.3 + 0.7*sin(ti*0.546)) + 4.188));\n\nib_r = ob_r*.75*0;\nib_g = ob_g*.75*0;\nib_b = ob_b*.75*0;\n\n\n\nra = 10;\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb_avg;\nmt = mt + tic*mid_avg;\nbt = bt + tic*bass_avg;\nvt = vt + tic*vav;\nq1 = bt; // per pixel dx shift\nq2 = (mt + tt)*.5; // per pixel dy shift\n\nmonitor = fps;\ndecay = 1;\n\ntc = tic*10;\ntm = tm + if(above(sin(tm),0),tc*2-av*tc,vav*tc);\n//wrap = above(sin(tm),0);\n\nq5 = (treb_avg + mid_avg)*.1;\n\nq6 = .5 + .2*sin(bt*.279) + .25*sin(bt*.972); // artefact ring 2\nq7 = .5 + .2*sin(bt*.785) + .25*sin(bt*.489);\nq8 = bass_avg*.2;","pixel_eqs_eel":"zm = .05*(1-rad*1);\ndx = zm*(x-q3);\ndy = zm*(y-q4);\n\n\nba = (bass - 1)*.75 + 1;\nbb = min(1,ba);\ntrmi = (treb + mid - 2)*.5*.75 + 1;\n\n//dx = (sin(y*10 + q1*.1)*.7*bb + .3*(sin(y*3.1 - q1*.3)))*.1*ba;\nxx = sin(x*4.8 + q2*1.024)*.25 + .15*sin(x*7.1 - q2*.9437) + .1*sin(x*15.9 - q2*1.222);\nyy = sin(y*3 + q2*.935)*.15 + .15*sin(y*16.5 + q2*1.127) + .2*sin(y*9.2 - q2*1.974);\n//dy = (xx + yy)*.02*trmi;\n\na = .5 + .2*sin(q2*.687) + .25*sin(q2*.248); // artefact ring 1\nb = .5 + .2*sin(q2*.354) + .25*sin(q2*.724);\ndis = pow((x-a)*(x-a) + (y-b)*(y-b)*.75,.5);\nsw = below(abs(dis - q5),.015) + below(abs(dis - (q5-.1)),.01) + below(abs(dis - (q5-.2)),.005);\n\na = q6;\nb = q7;\ndis = pow((x-a)*(x-a) + (y-b)*(y-b)*.75,.5);\nsw = sw + below(abs(dis - q8),.015) + below(abs(dis - (q8-.1)),.01) + below(abs(dis - (q8-.2)),.005);\n\nsw = if(sw,rand(3),below(rand(int(fps*5)),1));\nzoom = zoom + sw*12;\nrot = rot + sw*12;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  tmpvar_1.xyz = (texture (sampler_main, ((\n    ((tmpvar_2 * (0.97 + (rad * 0.02))) + 0.5)\n   + \n    (((texture (sampler_blur1, (\n      (tmpvar_2 * 0.9)\n     + 0.5)).xyz * scale1) + bias1) * 0.1)\n  .xy) - 0.01)).xyz - 0.001);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * treb_att))\n  ), pow (hue_shader.xzy, vec3(bass_att))));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"sampler sampler_grad3;\n\nshader_body\n{\n\n    float3 txr = float3(uv,q1*0.1);\n    float2  uv2 =  uv;\n    uv2 = uv + texsize.zx*(q3,q3);\n    float3 color = tex2D(sampler_noise_lq, uv2) - 0.5; \n    color += tex2D(sampler_noise_mq, uv2) - 0.5; \n    color += tex2D(sampler_noise_hq, uv2) - 0.5; \n\n\n    ret = tex2D( sampler_main, ((uv-0.5)*(0.97 + rad*0.02)) + 0.5  + GetBlur1((uv - 0.5)*0.9 + 0.5)*0.1  - 0.01).xyz;    \n    ret = ret-0.001;// - 0.08; //or try: ret -= 0.004;\n}","comp_hlsl":"// tribute to suksma!\n\nshader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)*treb_att),pow(hue_shader.xzy,bass_att));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}