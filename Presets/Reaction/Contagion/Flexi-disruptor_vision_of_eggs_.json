{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":1.0039,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_dx":-0.02,"mv_dy":0.02,"mv_l":0},"shapes":[{"baseVals":{"sides":5,"additive":1,"num_inst":2,"x":0.49,"rad":0.11589,"tex_zoom":4.36077,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = rand(1000)/1000;\ny = rand(1000)/1000;\nang = rand(150)/100;","init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\ny = rand(1000)/1000;\nang = rand(150)/100;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"r":0,"g":0.3,"b":0.75,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"r":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"g":0.5,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.3));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"r":0.4,"g":0,"b":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));"}],"init_eqs_str":"a.n=0;a.y1=0;a.x1=0;a.dy1=0;a.v=0;a.mm=0;a.tt=0;a.angle=0;a.t=0;a.mx=0;a.mn=0;a.dx1=0;a.bb=0;","frame_eqs_str":"a.wave_a=0;a.warp=0;a.zoom=1;a.bb=.99*a.bb+.02*a.bass;a.mm=.99*a.mm+.02*a.mid;a.tt=.99*a.tt+.02*a.treb;a.mx=Math.max(Math.max(a.bb,a.mm),a.tt);a.mn=Math.min(Math.min(a.bb,a.mm),a.tt);a.ib_r=div(a.bb-a.mn,a.mx-a.mn);a.ib_b=div(a.mm-a.mn,a.mx-a.mn);a.ib_g=div(a.tt-a.mn,a.mx-a.mn);","pixel_eqs_str":"a.angle=Math.asin(1)*(.5+Math.sin(.05*a.time));a.x1=(a.x-.5)*a.aspectx;a.y1=(a.y-.5)*a.aspecty;a.x=Math.cos(-a.angle)*a.x1-Math.sin(-a.angle)*a.y1;a.y=Math.sin(-a.angle)*a.x1+Math.cos(-a.angle)*a.y1;a.t=.25*a.time;a.v=.0005;a.n=11;a.dx=a.v*Math.sin(a.y*a.n+a.t);a.dy=a.v*Math.sin(a.x*a.n+a.t);a.dx1=Math.cos(a.angle)*a.dx-Math.sin(a.angle)*a.dy;a.dy1=Math.sin(a.angle)*a.dx+Math.cos(a.angle)*a.dy;a.dx=a.dx1*a.aspectx;a.dy=a.dy1*a.aspecty;","init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\nwarp = 0;\nzoom = 1.0;\n\nbb = bb*0.99 + bass*0.02;\nmm = mm*0.99 + mid*0.02;\ntt = tt*0.99 + treb*0.02;\n\nmx = max(max(bb,mm),tt);\nmn = min(min(bb,mm),tt);\n\nib_r = (bb-mn)/(mx-mn);\nib_b = (mm-mn)/(mx-mn);\nib_g = (tt-mn)/(mx-mn);","pixel_eqs_eel":"// have a nice warp effect? - rotate it like a shape!\n\n  angle = asin(1)*(0.5+sin(time*0.05));\n\n/////////////////////////////////////////////////////////\nX1 = (x-0.5)*aspectx; // center\nY1 = (y-0.5)*aspecty;\nx = cos(-angle)*X1 -sin(-angle)*Y1; // rotate the original x/y coordinates\ny = sin(-angle)*X1 +cos(-angle)*Y1;\n/////////////////////////////////////////////////////////\n// x = x + 0.5;\n// y = y + 0.5;\n// place your original code below (so far center is at 0,0)\n\n\n  t = time*0.25;\n  v = 0.0005;\n  n = 11;\n\n  dx = v*sin(y*n+t); // these are the 2 lines for my mushroom motion\n  dy = v*sin(x*n+t); // insert your per-vertex-code-to-rotate here (and shift back center to 0.5/0.5 if needed)\n\n\n\n/////////////////////////////////////////////////////////\ndx1 = cos(angle)*dx - sin(angle)*dy; // and finally rotate the resulting vector for the rotated domain\ndy1 = sin(angle)*dx + cos(angle)*dy;\ndx = dx1*aspectx;\ndy = dy1*aspecty;\n/////////////////////////////////////////////////////////","warp":" shader_body { \n  float n_1;\n  vec3 ret_2;\n  ret_2 = (texture (sampler_pw_main, uv).xyz * 1.26);\n  n_1 = (clamp (texture (sampler_pw_main, (uv + texsize.zw)).x, 0.0, 1.0) + clamp (texture (sampler_pw_main, (uv + \n    (texsize.zw * vec2(1.0, 0.0))\n  )).x, 0.0, 1.0));\n  n_1 = (n_1 + clamp (texture (sampler_pw_main, (uv + \n    (texsize.zw * vec2(1.0, -1.0))\n  )).x, 0.0, 1.0));\n  n_1 = (n_1 + clamp (texture (sampler_pw_main, (uv + \n    (texsize.zw * vec2(0.0, 1.0))\n  )).x, 0.0, 1.0));\n  n_1 = (n_1 + clamp (texture (sampler_pw_main, (uv + \n    (texsize.zw * vec2(0.0, -1.0))\n  )).x, 0.0, 1.0));\n  n_1 = (n_1 + clamp (texture (sampler_pw_main, (uv + \n    (texsize.zw * vec2(-1.0, 1.0))\n  )).x, 0.0, 1.0));\n  n_1 = (n_1 + clamp (texture (sampler_pw_main, (uv + \n    (texsize.zw * vec2(-1.0, 0.0))\n  )).x, 0.0, 1.0));\n  n_1 = (n_1 + clamp (texture (sampler_pw_main, (uv - texsize.zw)).x, 0.0, 1.0));\n  if ((n_1 < 1.9)) {\n    ret_2 = (ret_2 - 0.4);\n  };\n  if ((n_1 > 3.1)) {\n    ret_2 = (ret_2 - 0.4);\n  };\n  bool tmpvar_3;\n  if ((ret_2.x < 0.1)) {\n    tmpvar_3 = (abs((n_1 - 3.0)) < 0.5);\n  } else {\n    tmpvar_3 = bool(0);\n  };\n  if (tmpvar_3) {\n    ret_2 = (ret_2 + 0.4);\n  };\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_2;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"shader_body\n{\n  // sample previous frame\n  ret = tex2D( sampler_pw_main, uv ).xyz*1.26;\n\n  float n;\n  float2 d = texsize.zw*1;\n  n  = saturate(tex2D(sampler_pw_main, uv+d*float2( 1, 1)).x);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 1, 0)).x);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 1,-1)).x);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 0, 1)).x);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 0,-1)).x);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2(-1, 1)).x);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2(-1, 0)).x);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2(-1,-1)).x);\n  \nfloat t = 0.4;\n  if (n < 1.9)\n    ret -= t;\n  if (n > 3.1)\n    ret -= t;\n  if (ret.x < 0.1 && abs(n-3) < 0.5)\n    ret += t;\n\n  //ret *= saturate(6 - 19*(GetBlur1(uv_orig).x));\n  \n  //float dist_from_bar = abs(uv_orig.y - frac(time*0.23));\n  //ret *= saturate( 24*dist_from_bar - 0.5 );  \n\n  // darken (decay) over time\n  //ret = (ret - 0.016)*0.985;\n}","comp_hlsl":"shader_body\n{\nret=GetPixel(uv);\n}"}