{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":2,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":3.138,"zoom":1.01901,"warp":0.00054,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":1.35581,"tex_zoom":0.73458,"r":0.99,"g":0.2,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.007*Math.sin(.5*a.time);","init_eqs_eel":"","frame_eqs_eel":"ang=sin(time*0.5)*0.007"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"a":0,"enabled":0},"init_eqs_str":"advance=0;\nadvance2=0;","frame_eqs_str":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2","point_eqs_str":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5)*2;\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=0.7;\nb=0.2;\n\n","init_eqs_eel":"advance=0;\nadvance2=0;","frame_eqs_eel":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5)*2;\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=0.7;\nb=0.2;\n\n"},{"baseVals":{"a":0,"enabled":0},"init_eqs_str":"advance=0;\nadvance2=0","frame_eqs_str":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2","point_eqs_str":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5) * 0.3;\na=if( below(a,0), 0 , a);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=0.2;\ng=0.7;\nb=1.0;\n\n","init_eqs_eel":"advance=0;\nadvance2=0","frame_eqs_eel":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5) * 0.3;\na=if( below(a,0), 0 , a);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=0.2;\ng=0.7;\nb=1.0;\n\n"},{"baseVals":{"usedots":1,"thick":1,"a":0,"enabled":0},"init_eqs_str":"advance=0;\nadvance2=0","frame_eqs_str":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2;","point_eqs_str":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5)*2;\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=0.7;\nb=0.2;\n\n\n","init_eqs_eel":"advance=0;\nadvance2=0","frame_eqs_eel":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2;","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5)*2;\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=0.7;\nb=0.2;\n\n\n"},{"baseVals":{"a":0,"enabled":0},"init_eqs_str":"advance=0;\nadvance2=0","frame_eqs_str":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2;","point_eqs_str":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5) * 0.3;\na=if( below(a,0), 0 , a);\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=0.2;\ng=0.7;\nb=1.0;\n\n\n","init_eqs_eel":"advance=0;\nadvance2=0","frame_eqs_eel":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2;","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5) * 0.3;\na=if( below(a,0), 0 , a);\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=0.2;\ng=0.7;\nb=1.0;\n\n\n"}],"init_eqs_str":"a.dx_residual=0;a.dy_residual=0;a.bass_thresh=0;","frame_eqs_str":"a.wave_r=.85+.25*Math.sin(.437*a.time+1);a.wave_g=.85+.25*Math.sin(.544*a.time+2);a.wave_b=.85+.25*Math.sin(.751*a.time+3);a.rot+=.01*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.cx+=.21*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.21*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.dx+=.003*(.6*Math.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.dy+=.003*(.6*Math.sin(.284*a.time)+.4*Math.sin(.247*a.time));a.decay-=.01*equal(mod(a.frame,6),0);a.dx+=\na.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.016*equal(a.bass_thresh,2.13)*Math.sin(7*a.time)+(1-equal(a.bass_thresh,2.13))*a.dx_residual;a.dy_residual=.012*equal(a.bass_thresh,2.13)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2.13))*a.dy_residual;a.wave_x-=7*a.dx_residual;a.wave_y-=7*a.dy_residual;a.wave_mystery=.03*a.time;a.zoom+=.005*(.6*Math.sin(.1934*a.time+3)+.4*Math.sin(.307*\na.time+9));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\ndecay = decay - 0.01*equal(frame%6,0);\ndx = dx + dx_residual;\ndy = dy + dy_residual;\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\nwave_x = wave_x - dx_residual*7;\nwave_y = wave_y - dy_residual*7;\nwave_mystery = time*0.03;\n\nzoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv6;\n shader_body { \n  xlat_mutableuv1 = (uv - 0.5);\n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_noise_hq, ((xlat_mutableuv1 / 3.0) + (0.006 * time)));\n  vec2 tmpvar_2;\n  tmpvar_2 = tmpvar_1.xy;\n  mat2 tmpvar_3;\n  tmpvar_3[uint(0)].x = tmpvar_2.y;\n  tmpvar_3[uint(0)].y = tmpvar_2.x;\n  tmpvar_3[1u].x = -(tmpvar_1.x);\n  tmpvar_3[1u].y = tmpvar_2.y;\n  xlat_mutableuv6 = (xlat_mutableuv1 * tmpvar_3);\n  xlat_mutablemus = (vec3(abs((\n    (0.5 * cos((xlat_mutableuv6.y * 14.0)))\n   - \n    cos((xlat_mutableuv6.x * 71.0))\n  ))) * vec3(0.04, 0.0384, 0.036));\n  xlat_mutableuv6 = (0.2 * sin((\n    (12.0 * uv)\n   + rand_frame.xy)));\n  xlat_mutablemus = (xlat_mutablemus - ((0.001 / \n    sqrt(dot (xlat_mutableuv6, xlat_mutableuv6))\n  ) * vec3(0.2, 1.0, 1.0)));\n  vec3 tmpvar_4;\n  tmpvar_4 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_5;\n  tmpvar_5.x = dot ((texture (sampler_main, (uv + vec2(0.004, 0.0))).xyz - texture (sampler_main, (uv - vec2(0.004, 0.0))).xyz), vec3(0.32, 0.49, 0.29));\n  tmpvar_5.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.004))).xyz - texture (sampler_main, (uv - vec2(0.0, 0.004))).xyz), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((\n    ((texture (sampler_main, (uv + (tmpvar_5 * 0.02))).xyz + (0.015 - (\n      (sqrt(dot (tmpvar_5, tmpvar_5)) * tmpvar_4)\n     / 1.5))) - (dot (tmpvar_4, vec3(0.32, 0.49, 0.29)) * 0.012))\n   + xlat_mutablemus) * 0.99) - 0.04);\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * treb_att))\n  ), pow (hue_shader.xzy, vec3(bass_att))));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat2 uv1, uv6;\nfloat dx,dy;\n\nshader_body {\n\nuv1 = (uv-.5);\n\nfloat2 ang2= tex2D (sampler_noise_hq,uv1/3+.006*time).xy;\nuv6 = mul(uv1,float2x2(ang2.y,-ang2.x,ang2.x,ang2.y));\n\nmus = abs(.5*cos(uv6.y*14)-(cos(uv6.x*71)));\nmus *= float3 (1,.96,.9)/25;\n\nuv6 = .2*sin(12*uv+rand_frame);\nfloat3 dots = .001/length(uv6)* float3 (0.2,1,1);\n\n//dots = lum(tex2D (sampler_noise_hq,uv +rand_frame));\n//dots = (dots-.7) * (dots >= .7) * float3 (0.2,1,1);\n\nmus -= dots;\n\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nhor = float2 (.004,0);\nver = float2 (0,.004);\n\n\n\nfloat dx = lum(GetPixel(uv+hor)-GetPixel(uv-hor));\nfloat dy = lum(GetPixel(uv+ver)-GetPixel(uv-ver));\n\nfloat2 zz = float2 (dx,dy);\n\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\ncrisp +=.015 - length(zz)*blur/1.5;\n\nfloat3 ret1 = crisp - lum(blur)*.012 + mus;\n//ret1 = abs(mus)/2;\nret = ret1 * .99 -  .04 ;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)*treb_att),pow(hue_shader.xzy,bass_att));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}