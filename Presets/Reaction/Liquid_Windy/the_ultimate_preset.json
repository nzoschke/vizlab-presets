{"version":2,"baseVals":{"rating":5,"gammaadj":1.99,"echo_zoom":1,"wave_mode":1,"wave_dots":1,"wave_brighten":0,"wave_a":100,"wave_scale":0.73,"wave_smoothing":0.9,"modwavealphastart":0.5,"modwavealphaend":1,"zoomexp":1.00016,"fshader":1,"zoom":1.00022,"warp":0,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.1,"ib_size":0.15,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.beatfreq=0;a.angsector=0;a.pulsefreq=0;a.q6=0;a.wm=0;a.bt=0;a.q1=0;a.wx=0;a.q5=0;a.lastbeat=0;a.radsector=0;a.pulse=0;a.ccx=0;a.q4=0;a.wy=0;a.le=0;a.btblock=0;a.minorccl=0;a.beat=0;a.hccp=0;a.ccl=0;a.q2=0;a.lastpulse=0;a.q3=0;a.arad=0;a.th=0;a.q7=0;a.aang=0;a.ccy=0;a.q8=0;","frame_eqs_str":"a.le=1.4*a.bass_att+.1*a.bass+.5*a.treb;a.pulse=above(a.le,a.th);a.pulsefreq=.00001<Math.abs(equal(a.pulsefreq,0))?2:.00001<Math.abs(a.pulse)?.8*a.pulsefreq+.2*(a.time-a.lastpulse):a.pulsefreq;a.lastpulse=.00001<Math.abs(a.pulse)?a.time:a.lastpulse;a.bt=div(a.time-a.lastbeat,.5*a.beatfreq+.5*a.pulsefreq);a.hccp=div(.03,a.bt+.2)+.5*(.00001<Math.abs(band(above(a.bt,.8),below(a.bt,1.2)))?pow(Math.sin(7.854*(a.bt-1)),4)-1:0);a.beat=band(above(a.le,a.th+a.hccp),a.btblock);a.btblock=\n1-above(a.le,a.th+a.hccp);a.lastbeat=.00001<Math.abs(a.beat)?a.time:a.lastbeat;a.beatfreq=.00001<Math.abs(equal(a.beatfreq,0))?2:.00001<Math.abs(a.beat)?.8*a.beatfreq+.2*(a.time-a.lastbeat):a.beatfreq;a.th=.00001<Math.abs(above(a.le,a.th))?a.le+div(114,a.le+10)-7.407:a.th+div(.07*a.th,a.th-12)+.1*below(a.th,2.7)*(2.7-a.th);a.th=.00001<Math.abs(above(a.th,6))?6:a.th;a.q8=div(10,a.fps);a.ccl+=a.beat;a.minorccl+=a.q8*a.le;a.q5=a.ccl+.0032*a.minorccl;a.q6=a.ccl;a.ccx=.00001<Math.abs(a.beat)?.5+.2*Math.sin(Math.floor(rand(354))):\na.ccx;a.cx=a.ccx+.1*Math.sin(.01*a.minorccl);a.q1=a.ccx;a.ccy=.00001<Math.abs(a.beat)?.5+.2*Math.sin(Math.floor(rand(354))):a.ccy;a.cy=a.ccx+.1*Math.sin(.013*a.minorccl);a.q2=a.ccy;a.q3=div(4,a.th);a.q4=.01*a.minorccl;a.q7=a.th;a.decay=1-.02*a.q8;a.monitor=a.decay;a.wx=.00001<Math.abs(a.pulse)?.1*Math.floor(rand(10)):a.wx;a.wave_x=a.wx;a.wy=.00001<Math.abs(a.pulse)?.1*Math.floor(rand(10)):a.wy;a.wave_y=a.wy;a.wm=.00001<Math.abs(a.pulse)?.1*Math.floor(rand(20))-1:a.wm;a.wave_mystery=a.wm;a.mv_r=.5+\n.2*Math.sin(a.q5)+.3*Math.sin(36.2*a.q5);a.mv_g=.5+.2*Math.sin(a.q5+2.09)+.3*Math.sin(38.7*a.q5);a.mv_b=.5+.2*Math.sin(a.q5+4.18)+.3*Math.sin(37.4*a.q5);a.wave_r=.5+.5*Math.sin(36.2*a.q5);a.wave_g=.5+.5*Math.sin(38.7*a.q5);a.wave_b=.5+.5*Math.sin(37.4*a.q5);","pixel_eqs_str":"a.aang=Math.atan2(a.y-a.q2,a.x-a.q1)+a.q4;a.arad=sqrt(sqr(a.y-a.q2)+sqr(a.x-a.q1))*a.q3;a.radsector=mod(4*a.arad,3);a.angsector=mod(1.273*a.aang,8);a.zoom=1+.1*a.q8*Math.sin(14*mod(a.angsector,4)*a.q6+a.radsector*a.q5);a.rot=.1*a.q8*Math.sin(a.q7)*Math.sin(1.3*a.angsector*a.q5+2.7*a.radsector*a.q6);","init_eqs_eel":"","frame_eqs_eel":"// timed sidon sensor\n// le = signal level; desired average value = 2\nle=1.4*bass_att+.1*bass+.5*treb;\npulse=above(le,th);\n// pulsefreq = running average of interval between last 5 pulses\npulsefreq=if(equal(pulsefreq,0),2,\nif(pulse,.8*pulsefreq+.2*(time-lastpulse),pulsefreq));\nlastpulse=if(pulse,time,lastpulse);\n// bt = relative time; 0 = prev beat; 1 = expected beat\nbt=(time-lastbeat)/(.5*beatfreq+.5*pulsefreq);\n// hccp = handcicap for th driven by bt\nhccp=(.03/(bt+.2))+.5*if(band(above(bt,.8),below(bt,1.2)),\n(pow(sin((bt-1)*7.854),4)-1),0);\nbeat=band(above(le,th+hccp),btblock);\nbtblock=1-above(le,th+hccp);\nlastbeat=if(beat,time,lastbeat);\nbeatfreq=if(equal(beatfreq,0),2,\nif(beat,.8*beatfreq+.2*(time-lastbeat),beatfreq));\n// th = threshold\nth=if(above(le,th),le+114/(le+10)-7.407,\nth+th*.07/(th-12)+below(th,2.7)*.1*(2.7-th));\nth=if(above(th,6),6,th);\n\nq8=10/fps;\nccl=ccl+beat;\nminorccl=minorccl+q8*le;\n\nq5=ccl+.0032*minorccl;\nq6=ccl;\n\nccx=if(beat,.5+.2*sin(int(rand(354))),ccx);\ncx=ccx+.1*sin(.01*minorccl);\nq1=ccx;\nccy=if(beat,.5+.2*sin(int(rand(354))),ccy);\ncy=ccx+.1*sin(.013*minorccl);\nq2=ccy;\nq3=4/th;\nq4=.01*minorccl;\nq7=th;\n\ndecay=1-q8*.02;\nmonitor=decay;\n\n\nwx=if(pulse,int(rand(10))*.1,wx);\nwave_x=wx;\nwy=if(pulse,int(rand(10))*.1,wy);\nwave_y=wy;\nwm=if(pulse,int(rand(20))*.1-1,wm);\nwave_mystery=wm;\n\nmv_r=.5+.2*sin(q5)+.3*sin(q5*36.2);\nmv_g=.5+.2*sin(q5+2.09)+.3*sin(q5*38.7);\nmv_b=.5+.2*sin(q5+4.18)+.3*sin(q5*37.4);\nwave_r=.5+.5*sin(q5*36.2);\nwave_g=.5+.5*sin(q5*38.7);\nwave_b=.5+.5*sin(q5*37.4);","pixel_eqs_eel":"// coordinates transfomation\n// q1,q2 = position; q3 = 1/zoom; q4 = rotation\naang=atan2(y-q2,x-q1)+q4;\narad=sqrt(sqr(y-q2)+sqr(x-q1))*q3;\n\nradsector=(arad*4)%3;\nangsector=(aang*1.273)%8;\n\nzoom=1+q8*.1*sin(14*(angsector%4)*q6+radsector*q5);\nrot=.1*q8*sin(q7)*sin(1.3*angsector*q5+2.7*radsector*q6);","warp":" shader_body { \n  vec3 mxv_1;\n  vec3 ret_2;\n  mxv_1 = (abs((\n    ((((\n      ((((texture (sampler_blur2, \n        (uv + (texsize.zw * vec2(1.0, 0.0)))\n      ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n        (uv + (texsize.zw * vec2(0.0, 1.0)))\n      ).xyz * scale2) + bias2)) + ((texture (sampler_blur2, (uv + \n        (texsize.zw * vec2(-1.0, 0.0))\n      )).xyz * scale2) + bias2))\n     - \n      ((texture (sampler_blur2, (uv + (texsize.zw * vec2(0.0, -1.0)))).xyz * scale2) + bias2)\n    ) + (\n      (texture (sampler_blur2, (uv + (texsize.zw * vec2(5.656848, -5.656848)))).xyz * scale2)\n     + bias2)) - ((texture (sampler_blur2, \n      (uv + (texsize.zw * vec2(-5.656848, 5.656848)))\n    ).xyz * scale2) + bias2)) + ((texture (sampler_blur2, (uv + \n      (texsize.zw * vec2(5.656848, 5.656848))\n    )).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur2, (uv + (texsize.zw * vec2(-5.656848, -5.656848)))).xyz * scale2) + bias2)\n  )) * 0.5);\n  ret_2 = (texture (sampler_main, uv).xyz * (mxv_1 + 0.99));\n  ret_2 = (((\n    (ret_2 - (mxv_1 * 2.0))\n   + 0.1) + (0.1 * \n    (0.15 - texture (sampler_noise_lq, ((uv * rand_frame.xy) * 9.0)))\n  ).xyz) - (0.1 * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.0;\n  tmpvar_6.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  tmpvar_6.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\n    ((uv_1.xyy + (tmpvar_6 * 0.5)) * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  uv_1 = (uv_1 - (tmpvar_8 * 0.04));\n  ret_2 = (abs((\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n  )) * (dot (tmpvar_7, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  vec3 tmpvar_9;\n  tmpvar_9 = pow (ret_2, vec3(0.5, 0.5, 0.5));\n  ret_2 = tmpvar_9;\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = tmpvar_9;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n//ret=GetPixel(uv_orig+texsize.zw*float2(q6,q7)); \nfloat2 newuv=uv;\nret=GetPixel(newuv);\nfloat3 lum1=0,lum2=0,lum3=0,lum4=0,lum5=0,lum6=0,lum7=0,lum8=0;\nfloat3 mxv=0;\nfloat r=8;\n//Blur1: r=4 (pixels);\n//Blur2: r=8 (pixels);\n//Blur3: r=9 (pixels);\nfloat ro=0.707106*r;\ntexsize.zw*r;\nlum1=GetBlur2(newuv+texsize.zw*float2(1,0));\nlum2=GetBlur2(newuv+texsize.zw*float2(0,1));\nlum3=GetBlur2(newuv+texsize.zw*float2(-1,0));\nlum4=GetBlur2(newuv+texsize.zw*float2(0,-1));\nlum5=GetBlur2(newuv+texsize.zw*float2(ro,-ro));\nlum6=GetBlur2(newuv+texsize.zw*float2(-ro,ro));\nlum7=GetBlur2(newuv+texsize.zw*float2(ro,ro));\nlum8=GetBlur2(newuv+texsize.zw*float2(-ro,-ro));\nmxv=abs(lum1-lum2+lum3-lum4+lum5-lum6+lum7-lum8)*0.5;\nret*=mxv+0.99;\nret=ret-mxv*2+0.1+0.1*(0.15-tex2D(sampler_noise_lq,uv*rand_frame.xy*9))-0.1*GetBlur1(uv);\n}","comp_hlsl":"shader_body\n{\n\nuv = 0.5 + (uv-0.5)*0.98;\n    float2 d = texsize.zw*4;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nuv -= float2(lum(dx),lum(dy))*0.04;\nret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));\nret *= lum(noise)*3; \nret = pow(ret,0.5);\n}"}