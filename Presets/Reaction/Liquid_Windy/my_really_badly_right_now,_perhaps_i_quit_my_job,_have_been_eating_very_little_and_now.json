{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"echo_orient":3,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_b":0.3,"ob_a":0.2,"ib_size":0.05,"ib_r":0,"ib_g":0.2,"ib_b":0.3,"ib_a":0.1,"mv_x":6.4,"mv_y":43.2,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.49138,"r":0,"g":1,"b":1,"a":0,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"a.q4=0;a.q5=0;","frame_eqs_str":"a.x=.5+a.q4;a.y=.5+a.q5;a.r2=Math.sin(1.23*a.time);a.g2=Math.cos(2.34*a.time);a.b2=Math.sin(2.34*a.time);","init_eqs_eel":"","frame_eqs_eel":"x=.5+q4;y=.5+q5;\nr2=sin(time*1.23);\ng2=cos(time*2.34);\nb2=sin(time*2.34);"},{"baseVals":{"sides":24,"rad":0.0112,"tex_zoom":0.81954,"g":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_ang=0.01;\nx=.5-q4;\ny=.5-q5;","init_eqs_eel":"","frame_eqs_eel":"tex_ang=0.01;\nx=.5-q4;\ny=.5-q5;"},{"baseVals":{"enabled":1,"sides":34,"textured":1,"rad":1.02614,"ang":5.65487,"tex_zoom":0.42,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q4=0;a.q5=0;","frame_eqs_str":"a.x=.5+a.q4;a.y=.5+a.q5;a.tex_ang=6.4*(.5*Math.cos(a.time)+.5);","init_eqs_eel":"","frame_eqs_eel":"x=.5+q4;y=.5+q5;\ntex_ang=(cos(time)*0.5+0.5)*6.4;\n//tex_zoom=bass*2;"},{"baseVals":{"textured":1,"rad":0.80814,"tex_ang":2.51327,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.progress=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q6=0;a.thresh=0;a.mq31=0;a.q5=0;a.mq21=0;a.mq24=0;a.dy_r=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.atime=0;a.q4=0;a.dx_r=0;a.q26=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.q27=0;a.q28=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.q4=Math.sin(.03*\na.atime);a.q5=Math.cos(.030383824*a.atime);a.q6=Math.tan(.029384834*a.atime);a.wave_r=a.wave_r+.35*Math.sin(1.4*a.time)+.25*Math.sin(2.5*a.time);a.wave_g=a.wave_g+.35*Math.sin(1.7*a.time)-.25*Math.sin(1.11*a.time);a.wave_b=a.wave_b+.35*Math.sin(1.84*a.time)+.25*Math.sin(2.3*a.time);a.warp=0;a.mv_a=.01;a.mv_a=0*above(a.progress,.05);a.mv_r=a.wave_b;a.mv_g=.3+.25*Math.sin(a.time);a.mv_b=div(a.mv_b,a.mv_r)-a.wave_g;a.mv_x+=3*a.bass;a.mv_y+=4*a.treb;","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.zoom-=.1*a.rad*(.7+.1*Math.sin(a.bass*a.time)-(.5+a.rad));a.dy+=.9*a.dy_r*a.rad*Math.cos(5*a.treb_att)*(1-a.rad);a.dx+=.9*a.dx_r*a.rad*Math.sin(5*a.bass_att)*(.6*a.rad-.7-a.rad);a.rot+=.2*(.7*Math.sin(a.bass*a.treb)*a.rad-div(.033*\na.ang,12))*(1-a.rad);a.zoom+=Math.asin(.4*(2*a.rad-(Math.cos(2*a.bass_att)-a.rad))*.2*Math.sin(.3*a.ang*(a.bass*a.ang-2)));a.dx+=.0165*(1.5*a.rad-(Math.sin(2*a.mid)-a.rad))*Math.cos(.3*a.ang*(a.treb_att*a.ang-2));a.rot+=Math.abs(.066*(.1*a.rad-(Math.cos(.2*a.mid)-.8*a.rad))*Math.cos(.5*a.ang*(div(3,a.bass)*a.ang-3)));","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\nq4=sin(atime*.03);\nq5=cos(atime*.030383824);\nq6=tan(atime*.029384834);\n\nwave_r = wave_r + 0.35*sin(1.4*time) + 0.25*sin(2.5*time);\nwave_g = wave_g + 0.35*sin(1.7*time) - 0.25*sin(1.11*time);\nwave_b = wave_b + 0.35*sin(1.84*time) + 0.25*sin(2.3*time);\nwarp = 0;\nmv_a = 0.01;\nmv_a = (above(progress,0.05))*0;\nmv_r = wave_b;\nmv_g = 0.3 + 0.25*sin(time);\nmv_b = mv_b / mv_r -wave_g;\nmv_x = mv_x + 3*bass;\nmv_y = mv_y + 4*treb;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\nzoom = zoom - 0.1*rad*(0.7+0.1*sin(bass*time)-(0.5+rad));\ndy= dy + 0.9*dy_r*(rad*cos(5*treb_att))*(1-rad);\ndx = dx + 0.9*dx_r *(rad*sin(5*bass_att))*(0.6*rad-0.7-rad);\nrot = rot + 0.2*(0.7*sin(bass*treb)*rad-0.033*ang/12)*(1-rad);\n\nzoom = zoom + asin(0.4*(rad*2-(cos(2*bass_att)-rad))*0.2*sin(0.3*ang*(bass*ang-2)));\ndx = dx + 0.05*(rad*1.5-(sin(2*mid)-rad))*0.33*cos(0.3*ang*(treb_att*ang-2));\n\nrot = rot + abs(0.2*(rad*0.1-(cos(0.2*mid)-0.8*rad))*0.33*cos(0.5*ang*(3/bass*ang-3)));","warp":" shader_body { \n  vec3 noise_1;\n  vec2 tmp_2;\n  vec3 ret_3;\n  tmp_2.x = (ang * 3.0);\n  tmp_2.y = rad;\n  noise_1 = ((texture (sampler_noise_lq, (\n    (((texsize.xy * texsize_noise_lq.zw).x * uv) / 2.0)\n   + q23)) + 1.0).xyz - ((roam_sin.xyz * slow_roam_cos.wzy) * 0.5));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_5;\n  tmpvar_5.x = (0.3 * tmpvar_4.x);\n  tmpvar_5.y = tmpvar_4.y;\n  ret_3 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_5))).xyz * scale1) + bias1)\n   - \n    (noise_1 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_4 * 0.01)\n  .xy)).xyz + (noise_1 * 0.1)));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmp_2.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_3.x > (q21 * q13)) && (ret_3.x <= (q24 * q11)))) {\n    ret_3.y = (ret_3.y + (tmpvar_6.x * 0.5));\n  };\n  if (((ret_3.y > (q22 * q11)) && (ret_3.y <= (q25 * q12)))) {\n    ret_3.z = (ret_3.z + (tmpvar_6.y * 0.5));\n  };\n  if (((ret_3.z > (q23 * q12)) && (ret_3.z <= (q26 * q13)))) {\n    ret_3.x = (ret_3.x + (tmpvar_6.z * 0.5));\n  };\n  float tmpvar_7;\n  tmpvar_7 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_3 = (ret_3 * (0.98 * (tmpvar_7 * tmpvar_7)));\n  ret_3 = (ret_3 - 0.04);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_3;\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 5.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.y;\n  tmpvar_5.y = tmpvar_4.y;\n  vec3 tmpvar_6;\n  tmpvar_6 = vec3((((\n    (texture (sampler_blur1, (uv - (tmpvar_5 * 0.2))).xyz * scale1)\n   + bias1).y * 0.75) + ((\n    (-(tmpvar_3) + tmpvar_4)\n  .y + 0.5) * 0.25)));\n  ret_1 = tmpvar_6;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.y;\n  tmpvar_7.y = -(tmpvar_3.y);\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_3.x;\n  tmpvar_8.y = tmpvar_4.y;\n  vec2 tmpvar_9;\n  tmpvar_9 = (((\n    (vec2(0.5, 0.5) + ((uv - vec2(0.5, 0.5)) * (1.0 - (bass_att * 0.04))))\n   - \n    ((tmpvar_7 * texsize.zw) * 16.0)\n  ) - (\n    (tmpvar_8 * texsize.zw)\n   * 8.0)) + (vec2(16.0, -16.0) * texsize.zw));\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_9.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_6.x > (q26 * q13)) && (tmpvar_6.x <= (q23 * q11)))) {\n    ret_1.z = (tmpvar_6.z - (tmpvar_10.x * 0.5));\n  };\n  if (((tmpvar_6.y > (q25 * q11)) && (tmpvar_6.y <= (q22 * q12)))) {\n    ret_1.x = (tmpvar_6.x - (tmpvar_10.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\n    ret_1.y = (tmpvar_6.y - (tmpvar_10.z * 0.5));\n  };\n  vec3 tmpvar_11;\n  tmpvar_11 = (ret_1 * (vec3(1.0, 1.0, 1.0) - vec3(clamp (\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 1.2)\n  , 0.0, 1.0))));\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_3.x;\n  tmpvar_12.y = tmpvar_4.x;\n  vec2 tmpvar_13;\n  tmpvar_13.x = -(tmpvar_4.z);\n  tmpvar_13.y = tmpvar_3.z;\n  vec2 tmpvar_14;\n  tmpvar_14.x = tmpvar_3.x;\n  tmpvar_14.y = tmpvar_4.x;\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_4.z);\n  tmpvar_15.y = tmpvar_3.z;\n  vec3 tmpvar_16;\n  tmpvar_16 = mix (mix (mix (tmpvar_11, \n    (tmpvar_11 * vec3(2.0, 1.0, 0.0))\n  , vec3(\n    (texture (sampler_main, uv).z * 3.0)\n  )), vec3(0.0, -0.2, -1.0), vec3((\n    ((texture (sampler_blur1, tmpvar_9).xyz * scale1) + bias1)\n  .x * 2.4))), (vec3(0.0, 0.5, 1.0) * (0.9 + \n    (-(tmpvar_3) + tmpvar_4)\n  .x)), vec3(max (texture (sampler_main, (\n    (uv + ((tmpvar_12 * texsize.zw) * 6.0))\n   + \n    ((tmpvar_13 * texsize.zw) * 24.0)\n  )).x, texture (sampler_main, (\n    (uv + ((tmpvar_14 * texsize.zw) * 6.0))\n   - \n    ((tmpvar_15 * texsize.zw) * 24.0)\n  )).x)));\n  ret_1 = tmpvar_16;\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = tmpvar_16;\n  ret = tmpvar_17.xyz;\n }","warp_hlsl":"shader_body {\n\n//uv = uv_orig;\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat2 tmp = uv1;\ntmp.x = ang*3; tmp.y = rad;\nuv1 = tmp;\n\nfloat3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);\nnoise-=roam_sin*slow_roam_cos.wzy*.5;\n\nfloat3 ret1 = GetBlur1 (uv)-.3;\nfloat3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;\nfloat3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;\n\nret = -.4*blur + crisp;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv1.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n    \n ret *= 0.98 * pow(1-.01*q28*q28*rad,2); \n  ret -= 0.04;\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*5;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\nfloat2 uv1 = uv - float2(dx.y,dy.y)*0.2;\nret = GetBlur1(uv1).y*0.75 + ((-dx+dy).y+0.5)*0.25;\n\nfloat2 c = 0.5;\nfloat2 uv2 = c + (uv-c)*(1-bass_att*0.04) - float2(dy.y,-dx.y)*texsize.zw*16 - float2(dx.x,dy.y)*texsize.zw*8 + float2(1,-1)*texsize.zw*16;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv2.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret = lerp(ret,0,saturate(GetBlur1(uv).z*1.2));\nret = lerp(ret,ret*float3(2,1,0),GetPixel(uv).z*3);\nret = lerp(ret*float3(1,1,1),float3(0,-0.2,-1),GetBlur1(uv2).x*2.4);\nfloat2 uv3 = uv + float2(dx.x,dy.x)*texsize.zw*6 + float2(-dy.z,dx.z)*texsize.zw*24;\nfloat2 uv31 = uv + float2(dx.x,dy.x)*texsize.zw*6 - float2(-dy.z,dx.z)*texsize.zw*24;\nfloat x = max(GetPixel(uv3).x,GetPixel(uv31).x);\nret = lerp(ret,float3(0,0.5,1)*(0.9+(-dx+dy).x),x);\n//ret = GetPixel(uv).z;\n}"}