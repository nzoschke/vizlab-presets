{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.99,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"modwavealphabyvolume":1,"invert":1,"wave_a":0,"wave_scale":1.015,"wave_smoothing":0.522,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpanimspeed":0.01,"warpscale":100,"zoomexp":1.83149,"zoom":0.9901,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"sides":54,"rad":0.01842,"a":0,"a2":0.6,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rad = rad + 0.075*sin(treb_att);\n\nx = 0.5+0.1*sin(time);\ny = 0.5+0.1*cos(time);","init_eqs_eel":"","frame_eqs_eel":"rad = rad + 0.075*sin(treb_att);\n\nx = 0.5+0.1*sin(time);\ny = 0.5+0.1*cos(time);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.y3=0;a.y1=0;a.spx3=0;a.d4=0;a.x1=0;a.vx3=0;a.q6=0;a.spy2=0;a.dt=0;a.spy3=0;a.q1=0;a.q5=0;a.d1=0;a.spx2=0;a.v=0;a.vx4=0;a.spx4=0;a.d3=0;a.grav=0;a.d34=0;a.x3=0;a.d2=0;a.ry4=0;a.xx2=0;a.q4=0;a.d23=0;a.spy4=0;a.yy1=0;a.vy4=0;a.bounce=0;a.x4=0;a.x2=0;a.vy2=0;a.y2=0;a.q2=0;a.spring=0;a.vx2=0;a.q3=0;a.resist=0;a.y4=0;a.q7=0;a.vy3=0;a.xx1=0;a.q8=0;a.d12=0;a.x1=.9;a.y1=.5;a.x2=.5;a.y2=.5;a.x3=.5;a.y3=.5;a.x4=.5;a.y4=.5;","frame_eqs_str":"a.decay=1;a.xx1=.9*a.xx1+.01*a.bass;a.xx2=.9*a.xx2+.01*a.treb;a.yy1=.94*a.yy1+.0075*(a.treb+a.bass);a.x1=.5+a.xx1-a.xx2;a.y1=.5+a.yy1;a.spring=10;a.grav=.5;a.resist=1;a.bounce=.5;a.dt=.001;a.spx2=(a.x1+a.x3-2*a.x2)*a.spring;a.spy2=(a.y1+a.y3-2*a.y2)*a.spring;a.spx3=(a.x2+a.x4-2*a.x3)*a.spring;a.spy3=(a.y2+a.y4-2*a.y3)*a.spring;a.spx4=(a.x3-a.x4)*a.spring;a.spy4=(a.y3-a.y4)*a.spring;a.vx2=a.vx2*(1-a.resist*a.dt)+a.dt*a.spx2;a.vy2=a.vy2*(1-a.resist*a.dt)+a.dt*(a.spy2-a.grav);\na.vx3=a.vx3*(1-a.resist*a.dt)+a.dt*a.spx3;a.vy3=a.vy3*(1-a.resist*a.dt)+a.dt*(a.spy3-a.grav);a.vx4=a.vx4*(1-a.resist*a.dt)+a.dt*a.spx4;a.vy4=a.vy4*(1-a.resist*a.dt)+a.dt*(a.spy4-a.grav);a.x2+=a.vx2;a.y2+=a.vy2;a.x3+=a.vx3;a.y3+=a.vy3;a.x4+=a.vx4;a.y4+=a.vy4;a.vx2=.00001<Math.abs(above(a.x2,0))?a.vx2:Math.abs(a.vx2)*a.bounce;a.vx2=.00001<Math.abs(below(a.x2,1))?a.vx2:-Math.abs(a.vx2)*a.bounce;a.vx3=.00001<Math.abs(above(a.x3,0))?a.vx3:Math.abs(a.vx3)*a.bounce;a.vx3=.00001<Math.abs(below(a.x3,1))?a.vx3:\n-Math.abs(a.vx3)*a.bounce;a.vx4=.00001<Math.abs(above(a.x4,0))?a.vx4:Math.abs(a.vx4)*a.bounce;a.vx4=.00001<Math.abs(below(a.x4,1))?a.vx4:-Math.abs(a.vx4)*a.bounce;a.vy2=.00001<Math.abs(above(a.y2,0))?a.vy2:Math.abs(a.vy2)*a.bounce;a.vy2=.00001<Math.abs(below(a.y2,1))?a.vy2:-Math.abs(a.vy2)*a.bounce;a.vy3=.00001<Math.abs(above(a.y3,0))?a.vy3:Math.abs(a.vy3)*a.bounce;a.vy3=.00001<Math.abs(below(a.y3,1))?a.vy3:-Math.abs(a.vy3)*a.bounce;a.vy4=.00001<Math.abs(above(a.y4,0))?a.vy4:Math.abs(a.vy4)*a.bounce;\na.vy4=.00001<Math.abs(below(a.y4,1))?a.vy4:-Math.abs(a.vy4)*a.bounce;a.q1=a.x1;a.q2=a.x2;a.q3=a.x3;a.q4=a.x4;a.q5=a.y1;a.q6=a.y2;a.q7=a.y3;a.q8=a.y4;a.monitor=a.ry4;a.zoom=1;","pixel_eqs_str":"a.d1=sqrt(sqr(a.x-a.q1)+sqr(a.y-a.q5));a.d2=sqrt(sqr(a.x-a.q2)+sqr(a.y-a.q6));a.d3=sqrt(sqr(a.x-a.q3)+sqr(a.y-a.q7));a.d4=sqrt(sqr(a.x-a.q4)+sqr(a.y-a.q8));a.x1=a.q1-a.q2;a.x2=a.q2-a.q3;a.x3=a.q3-a.q4;a.y1=a.q5-a.q6;a.y2=a.q6-a.q7;a.y3=a.q7-a.q8;a.d12=div(1,sqrt(sqr(a.x1-a.x2)+sqr(a.y1-a.y2)));a.d23=div(1,sqrt(sqr(a.x2-a.x3)+sqr(a.y2-a.y3)));a.d34=div(1,sqrt(sqr(a.x3-a.x4)+sqr(a.y3-a.y4)));a.x1*=a.d12;a.y1*=a.d12;a.x2*=a.d23;a.y2*=a.d23;a.x3*=a.d34;a.y3*=a.d34;a.v=-.02;a.dy=\na.v*(a.x3*(1-a.d4)*a.d3*a.d2+a.x2*a.d4*(1-a.d3)*a.d2+a.x3*a.d4*a.d3*(1-a.d2));a.dx=a.v*(a.y3*(1-a.d4)*a.d3*a.d2+a.y2*a.d4*(1-a.d3)*a.d2+a.y3*a.d4*a.d3*(1-a.d2));","init_eqs_eel":"x1 = 0.9;\ny1 = 0.5;\n\nx2 = 0.5; y2 = 0.5;\nx3 = 0.5; y3 = 0.5;\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"decay = 1;//0.97;\nxx1 = xx1*0.9 + (bass)*0.01;\nxx2 = xx2*0.9 + (treb)*0.01;\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\n\nx1 = 0.5 + xx1-xx2;\ny1 = 0.5 + yy1;\n\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\n\nspring = 10;\ngrav = .5;\nresist = 1;\nbounce = 0.5;\ndt = 0.001;\n\nspx2 = (x1+x3-2*x2)*spring;\nspy2 = (y1+y3-2*y2)*spring;\nspx3 = (x2+x4-2*x3)*spring;\nspy3 = (y2+y4-2*y3)*spring;\nspx4 = (x3-x4)*spring;\nspy4 = (y3-y4)*spring;\n\nvx2 = vx2*(1-resist*dt) + dt*(spx2);\nvy2 = vy2*(1-resist*dt) + dt*(spy2-grav);\nvx3 = vx3*(1-resist*dt) + dt*(spx3);\nvy3 = vy3*(1-resist*dt) + dt*(spy3-grav);\nvx4 = vx4*(1-resist*dt) + dt*(spx4);\nvy4 = vy4*(1-resist*dt) + dt*(spy4-grav);\n\nx2 = x2 + vx2;\ny2 = y2 + vy2;\nx3 = x3 + vx3;\ny3 = y3 + vy3;\nx4 = x4 + vx4;\ny4 = y4 + vy4;\n\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\n\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\n\n\nq1 = x1;\nq2 = x2;\nq3 = x3;\nq4 = x4;\n\nq5 = y1;\nq6 = y2;\nq7 = y3;\nq8 = y4;\n\nmonitor = ry4;\n\nzoom = 1;","pixel_eqs_eel":"d1 = sqrt( sqr(x-q1) + sqr(y-q5));\nd2 = sqrt( sqr(x-q2) + sqr(y-q6));\nd3 = sqrt( sqr(x-q3) + sqr(y-q7));\nd4 = sqrt( sqr(x-q4) + sqr(y-q8));\n\nx1 = q1-q2;\nx2 = q2-q3;\nx3 = q3-q4;\n\ny1 = q5-q6;\ny2 = q6-q7;\ny3 = q7-q8;\n\nd12 = 1/sqrt( sqr(x1-x2) + sqr(y1-y2));\nd23 = 1/sqrt( sqr(x2-x3) + sqr(y2-y3));\nd34 = 1/sqrt( sqr(x3-x4) + sqr(y3-y4));\n\nx1 = x1*d12; y1 = y1*d12;\nx2 = x2*d23; y2 = y2*d23;\nx3 = x3*d34; y3 = y3*d34;\n\nv = -.02;\ndy =  v*( x3*(1-d4)*d3*d2 + x2*d4*(1-d3)*d2 + x3*d4*d3*(1-d2));\ndx = v*( y3*(1-d4)*d3*d2 + y2*d4*(1-d3)*d2 + y3*d4*d3*(1-d2));","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\n   / 2.0) + q23)) + 1.0).xyz;\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\n  tmpvar_4.y = tmpvar_3.y;\n  ret_1 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\n   - \n    (tmpvar_2 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_3 * 0.01)\n  .xy)).xyz + (tmpvar_2 * 0.1)));\n  float tmpvar_5;\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\n  ret_1 = (ret_1 - 0.04);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 - 1.3);\n  ret_2 = (ret_2 + mix (ret_2, (ret_2 * \n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - (((texture (sampler_blur3, uv).xyz * scale3) + bias3) * 1.75))\n  ), pow (hue_shader.zxy, ret_2)));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body {\n\n//uv = uv_orig;\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat2 tmp = uv1;\ntmp.x = ang*3; tmp.y = rad;\nuv1 = tmp;\n\nfloat3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);\n\nfloat3 ret1 = GetBlur1 (uv)-.3;\nfloat3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;\nfloat3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;\n\nret = -.4*blur + crisp;\n    \n ret *= 0.98 * pow(1-.01*q28*q28*rad,2); \n  ret -= 0.04;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret -= 1.3;\n    ret += lerp(ret,ret*(GetBlur1(uv)-GetBlur3(uv)*1.75),pow(hue_shader.zxy,ret));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n} "}