{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.936,"echo_zoom":1.018,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.074,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"rad":0.20067,"tex_zoom":1.81669,"r":0,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r = 1-abs(q1);\ng = 1-abs(q2);\nb = 1-abs(q3);\nr2 = q2;\ng2 = 2-abs(q3);\nb2 = 0.5 + 0.5*sin(time);\nrad = rad -0.2 + 0.2*bass_att;\nx = x + 0.24*cos(0.5-sin(2.342*time));\ny = y - 0.291*sin(0.5-sin(2.793*time));\nang = ang + 12*time;\nx = x + 0.052*cos(1.52*time);\ny = y + 0.061*sin(2.15*time);","init_eqs_eel":"","frame_eqs_eel":"r = 1-abs(q1);\ng = 1-abs(q2);\nb = 1-abs(q3);\nr2 = q2;\ng2 = 2-abs(q3);\nb2 = 0.5 + 0.5*sin(time);\nrad = rad -0.2 + 0.2*bass_att;\nx = x + 0.24*cos(0.5-sin(2.342*time));\ny = y - 0.291*sin(0.5-sin(2.793*time));\nang = ang + 12*time;\nx = x + 0.052*cos(1.52*time);\ny = y + 0.061*sin(2.15*time);"},{"baseVals":{"textured":1,"rad":0.44484,"ang":2.51327,"tex_ang":0.06283,"tex_zoom":2.00676,"g":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + 4*time;\nx = x + 0.152*cos(6.52*time);\ny = y + 0.161*sin(5.15*time);","init_eqs_eel":"","frame_eqs_eel":"ang = ang + 4*time;\nx = x + 0.152*cos(6.52*time);\ny = y + 0.161*sin(5.15*time);"},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.20067,"tex_zoom":0.81954,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rad = rad -0.2 + 0.2*bass_att;\nx = x + 0.154*cos(1.652*time);\ny = y - 0.1391*sin(1.452*time);\nang = ang + 12*time;\nx = x + 0.052*cos(1.52*time);\ny = y + 0.061*sin(2.15*time);","init_eqs_eel":"","frame_eqs_eel":"rad = rad -0.2 + 0.2*bass_att;\nx = x + 0.154*cos(1.652*time);\ny = y - 0.1391*sin(1.452*time);\nang = ang + 12*time;\nx = x + 0.052*cos(1.52*time);\ny = y + 0.061*sin(2.15*time);"},{"baseVals":{"sides":100,"rad":0.07419,"tex_zoom":0.05996,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = x + 0.124*cos(1.342*time);\ny = y + 0.1391*sin(3.793*time);\nang = ang + 0.12*time;\nx = x + 0.052*cos(1.52*time);\ny = y + 0.061*sin(2.15*time);\nrad = rad + abs(0.11*sin(time));","init_eqs_eel":"","frame_eqs_eel":"x = x + 0.124*cos(1.342*time);\ny = y + 0.1391*sin(3.793*time);\nang = ang + 0.12*time;\nx = x + 0.052*cos(1.52*time);\ny = y + 0.061*sin(2.15*time);\nrad = rad + abs(0.11*sin(time));"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.divisions=0;a.q1=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.decay=1;a.zoom=1;a.warp=0;a.monitor=a.q1;a.cy=.5;","pixel_eqs_str":"a.divisions=4*a.x-Math.floor(4*a.x);a.dy=-.003*Math.sin(3.14*a.divisions)-.01;","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"decay=1;\nzoom=1.000;\nwarp=0;\n\nmonitor=q1;\ncy=0.5;","pixel_eqs_eel":"divisions = (x*4) - int(x*4);\n\ndy= sin(divisions * 3.14) * -0.003 - 0.01;","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.007))) - texture (sampler_main, (uv - vec2(0.005, 0.007)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_2.y = dot ((texture (sampler_main, (uv + vec2(-0.007, 0.005))) - texture (sampler_main, (uv - vec2(-0.007, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  vec3 tmpvar_3;\n  tmpvar_3 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  ret_1 = (((\n    -(tmpvar_3)\n   * 0.1) + (\n    (texture (sampler_main, (uv - ((tmpvar_2 * \n      (1.0 - tmpvar_3)\n    .xy) * 0.02))).xyz + ((vec3(dot (texture (sampler_noise_lq, \n      ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.5) + (0.1 * rand_frame).xy)\n    ), vec4(0.32, 0.49, 0.29, 0.0))) * 0.12) - (0.01 * pow (\n      (1.0 - rad)\n    , 4.0))))\n   * 1.1)) * 0.97);\n  ret_1 = (ret_1 - 0.05);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 6.0);\n  vec3 tmpvar_2;\n  tmpvar_2 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = tmpvar_2.y;\n  tmpvar_4.y = tmpvar_3.y;\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_2.x;\n  tmpvar_5.y = tmpvar_3.x;\n  vec2 x_6;\n  x_6 = (((uv - \n    (tmpvar_4 * 0.6)\n  ) - 0.5) * aspect.xy);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_main, uv);\n  tmpvar_7.xyz = mix (((vec3(0.4, 0.5, 1.0) * \n    max (0.0, (((1.0 - \n      (sqrt(dot (x_6, x_6)) * 3.0)\n    ) - 0.2) + tmpvar_8.z))\n  ) + tmpvar_8.x), mix (vec3(2.0, 2.0, 1.0), vec3(2.0, -1.0, -2.0), tmpvar_8.zzz), vec3(((\n    (texture (sampler_blur1, (uv + (tmpvar_5 * 0.2))).xyz * scale1)\n   + bias1).y * 0.35)));\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"sampler sampler_pw_noise_lq;\nfloat3 ret1;\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\n\nfloat3 noiseVal = lum(tex2D(sampler_noise_lq, corr*uv*.5+ .1*rand_frame));\n\nfloat2 hor = float2 (.005,0.007);\nfloat2 ver = float2 (-0.007,.005);\n\nfloat f0 = 1;\nfloat dx = f0*lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\nfloat dy = f0*lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\nfloat2 zz= float2 (dx,dy);\nfloat3 blur = GetBlur1(uv) ;\n\nzz *= 1-blur;\n\nfloat3 crisp = tex2D(sampler_main,uv-zz*.02);\n\ncrisp += noiseVal*(.12) -0.01*pow(1-rad,4);\n\nret1 = -blur*.1+ crisp*1.1;\n\nret = ret1;\n ret *= 0.97;\n  ret -= 0.05;\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*6;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n    float2 uv_y = uv-float2(dx.y,dy.y)*0.6;\n    float2 uv_x = uv+float2(dx.x,dy.x)*0.2;\n\nret = lerp(float3(0.4,0.5,1)*max(0,1-length((uv_y-0.5)*aspect.xy)*3 -0.2+GetPixel(uv).z)\n           + GetPixel(uv).x,\n           lerp(float3(2,2,1),float3(2,-1,-2),GetPixel(uv).z), GetBlur1(uv_x).y*0.35);\n//ret =  GetPixel(uv);\n}\n"}