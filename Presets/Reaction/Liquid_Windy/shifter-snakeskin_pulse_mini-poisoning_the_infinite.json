{"version":2,"baseVals":{"rating":5,"gammaadj":2.4,"decay":0.975,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":2,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"sides":34,"textured":1,"x":0,"y":0,"rad":1.3291,"tex_ang":1.5708,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"additive":1,"scaling":0.3347,"r":0,"g":0,"b":0,"a":0.03},"init_eqs_str":"a.sw=0;a.mx=0;a.q2=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.r=.6+.4*Math.sin(a.time);a.g=.4+.4*Math.sin(a.time+2.094);a.b=.4+.4*Math.sin(a.time+4.188);a.sw=1-a.sw;a.mx=.5+.4*Math.sin(a.q2);a.my=.5+(.5-a.mx);a.x=a.mx+a.value1*(1-2*a.sw);a.y=a.my+a.value2*(1-2*a.sw);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"r = .6 + .4*sin(time);\ng = .4 + .4*sin(time + 2.094);\nb = .4 + .4*sin(time + 4.188);\n\nsw = 1-sw;\n\nmx = .5 + .4*sin(q2);\nmy = .5 + (.5 - mx);\n\n\nx = mx + value1*(1-2*sw);\ny = my + value2*(1-2*sw);\n"},{"baseVals":{"enabled":1,"spectrum":1,"additive":1,"scaling":0.3347,"r":0,"g":0,"b":0,"a":0.03},"init_eqs_str":"a.sw=0;a.mx=0;a.q3=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.g=.6+.4*Math.sin(a.time);a.b=.4+.4*Math.sin(a.time+2.094);a.r=.4+.4*Math.sin(a.time+4.188);a.sw=1-a.sw;a.mx=.5+.4*Math.sin(a.q3);a.my=.5+(.5-a.mx);a.x=a.mx+a.value1*(1-2*a.sw);a.y=a.my+a.value2*(1-2*a.sw);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"g = .6 + .4*sin(time);\nb = .4 + .4*sin(time + 2.094);\nr = .4 + .4*sin(time + 4.188);\n\nsw = 1-sw;\n\nmx = .5 + .4*sin(q3);\nmy = .5 + (.5 - mx);\n\n\nx = mx + value1*(1-2*sw);\ny = my + value2*(1-2*sw);\n"},{"baseVals":{"enabled":1,"spectrum":1,"additive":1,"scaling":0.3347,"r":0,"g":0,"b":0,"a":0.03},"init_eqs_str":"a.sw=0;a.mx=0;a.q4=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.b=.6+.4*Math.sin(a.time);a.r=.4+.4*Math.sin(a.time+2.094);a.g=.4+.4*Math.sin(a.time+4.188);a.sw=1-a.sw;a.mx=.5+.4*Math.sin(a.q4);a.my=.5+(.5-a.mx);a.x=a.mx+a.value1*(1-2*a.sw);a.y=a.my+a.value2*(1-2*a.sw);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"b = .6 + .4*sin(time);\nr = .4 + .4*sin(time + 2.094);\ng = .4 + .4*sin(time + 4.188);\n\nsw = 1-sw;\n\nmx = .5 + .4*sin(q4);\nmy = .5 + (.5 - mx);\n\n\nx = mx + value1*(1-2*sw);\ny = my + value2*(1-2*sw);\n"},{"baseVals":{"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;"}],"init_eqs_str":"a.tic=0;a.slide=0;a.toc=0;a.vt=0;a.nu=0;a.bt=0;a.q1=0;a.q5=0;a.ocoy=0;a.mid_avg=0;a.pox=0;a.dis=0;a.tt=0;a.tin=0;a.modx=0;a.bass_avg=0;a.vav=0;a.cox=0;a.q4=0;a.mox=0;a.oy=0;a.mt=0;a.mod=0;a.ra=0;a.treb_avg=0;a.vol=0;a.sp=0;a.q2=0;a.moy=0;a.q3=0;a.mody=0;a.poy=0;a.coy=0;","frame_eqs_str":"a.warp=0;a.zoom=1;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.vol=.333333*(a.bass_att+a.treb_att+a.mid_att);a.ra=.25*div(1,a.tic);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;a.vt+=a.tic*a.vav;a.sp=.1*Math.abs(a.vav-\na.slide);a.slide=(.00001<Math.abs(above(a.slide,a.vav))?a.slide-a.tic*a.sp:a.slide+a.tic*a.sp)+(1-a.toc)*a.vav*.2;a.toc=1;a.q1=0;a.q2=a.bt;a.q3=a.mt+3;a.q4=a.tt+6;a.q5=.35+.1*Math.sin(a.vt);a.monitor=a.mod;","pixel_eqs_str":"a.coy=(a.coy+below(a.y,a.oy))*above(a.q1,0);a.cox=(a.cox+1)*above(a.q1,0)*equal(a.coy,a.ocoy);a.moy=Math.max(a.coy,a.moy);a.mox=Math.max(a.cox,a.mox);a.nu=4;a.pox=(div(a.cox,a.nu)-Math.floor(div(a.cox,a.nu)))*a.nu;a.poy=(div(a.coy,a.nu)-Math.floor(div(a.coy,a.nu)))*a.nu;a.mod=(1-2*above(a.x,.5))*(1-2*above(a.y,.5));a.dx=.001*(.00001<Math.abs(equal(mod(a.coy,2),0))?-equal(a.pox,1)+equal(a.pox,2):equal(a.pox,0)-equal(a.pox,3));a.dy=.001*(.00001<Math.abs(equal(mod(a.coy,2),0))?\n-equal(a.pox,1)+equal(a.pox,2):equal(a.pox,0)-equal(a.pox,3))*a.mod;a.dis=a.x+(1-a.y);a.mod=.00001<Math.abs(above(a.dis,1))?a.dis-1:1-a.dis;a.mod=below(a.mod,.2)+(1-Math.min(1,4*(a.mod-.2)))*above(a.mod,.2);a.modx=.00001<Math.abs(above(a.dis,1))?a.q5:-a.q5;a.mody=.00001<Math.abs(above(a.dis,1))?-a.q5:a.q5;a.dx=a.dx*a.mod+(1-a.mod)*a.modx;a.dy=a.dy*a.mod+(1-a.mod)*a.mody;a.oy=a.y;a.ocoy=a.coy;a.q1+=1;","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\nzoom = 1;\n\ntic = min(time-tin,.1);\ntin = time;\n\nvol = (bass_att + treb_att + mid_att)*.333333;\n\nra = 1/tic*.25;\n\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\nvt = vt + tic*vav;\n\nsp = abs(vav - slide)*.1;\nslide = if(above(slide,vav),slide-tic*sp,slide+tic*sp) + (1-toc)*vav*.2;\ntoc = 1;\n\nq1 = 0;\n\nq2 = bt;\nq3 = mt + 3;\nq4 = tt + 6;\nq5 = .35 + .1*sin(vt);\n\nmonitor = mod;","pixel_eqs_eel":"coy = (coy + below(y,oy))*above(q1,0);\ncox = (cox + 1)*above(q1,0)*equal(coy,ocoy);\n\nmoy = max(coy,moy);\nmox = max(cox,mox);\n\nnu = 4;\npox = ((cox/nu) - int(cox/nu))*nu;\npoy = ((coy/nu) - int(coy/nu))*nu;\n\n\nmod = (1-2*above(x,.5))*(1-2*above(y,.5));\n\ndx = if(equal(coy%2,0),-equal(pox,1) + equal(pox,2),equal(pox,0) - equal(pox,3))*.001;\ndy = if(equal(coy%2,0),-equal(pox,1) + equal(pox,2),equal(pox,0) - equal(pox,3))*.001*mod;\n\ndis = (x + (1-y));\n\nmod = if(above(dis,1),dis - 1,1-dis);\nmod = below(mod,.2) + (1-min(1,(mod-.2)*4))*above(mod,.2)*1;\n\nmodx = if(above(dis,1),q5,-q5);\nmody = if(above(dis,1),-q5,q5);\n\n\ndx = dx*mod + (1-mod)*modx;\ndy = dy*mod + (1-mod)*mody;\n\n\noy = y;\nocoy = coy;\nq1 = q1 + 1;","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\n   / 2.0) + q23)) + 1.0).xyz;\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\n  tmpvar_4.y = tmpvar_3.y;\n  ret_1 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\n   - \n    (tmpvar_2 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_3 * 0.01)\n  .xy)).xyz + (tmpvar_2 * 0.1)));\n  float tmpvar_5;\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\n  ret_1 = (ret_1 - 0.04);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (1.0 - pow ((\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n   / bass_att), vec3((1.0 - \n    dot (clamp (pow ((\n      ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n     / treb_att), vec3((1.0 - \n      dot (clamp (texture (sampler_main, uv).xyz, 0.0, 1.0), vec3(0.32, 0.49, 0.29))\n    ))), 0.0, 1.0), vec3(0.32, 0.49, 0.29))\n  ))));\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"shader_body {\n\n//uv = uv_orig;\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat2 tmp = uv1;\ntmp.x = ang*3; tmp.y = rad;\nuv1 = tmp;\n\nfloat3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);\n\nfloat3 ret1 = GetBlur1 (uv)-.3;\nfloat3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;\nfloat3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;\n\nret = -.4*blur + crisp;\n    \n ret *= 0.98 * pow(1-.01*q28*q28*rad,2); \n  ret -= 0.04;\n}","comp_hlsl":"shader_body\n{\nret=tex2D(sampler_main,uv);\n//ret=lum(ret)>0+(lum(ret)<=0.75)*ret;\nret=pow(GetBlur1(uv).xyz/treb_att,1-lum(saturate(ret.xyz)));\nret=pow(GetBlur2(uv).xyz/bass_att,1-lum(saturate(ret.xyz)));\nret=1-ret;\n}"}