{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.002,"echo_alpha":0.5,"echo_orient":1,"wave_thick":1,"brighten":1,"invert":1,"wave_a":0.433,"wave_scale":2.358,"wave_smoothing":0.54,"wave_mystery":0.2,"modwavealphastart":1.03,"modwavealphaend":1.61,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0.005,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xpos=0;a.star=0;a.cdelay1=0;a.cdelay2=0;a.q1=0;a.q5=0;a.counter2=0;a.musictime=0;a.q4=0;a.ypos=0;a.colorcounter=0;a.zm=0;a.rd=0;a.ag=0;a.q2=0;a.counter1=0;a.q3=0;","frame_eqs_str":"a.wave_a=0;a.counter1=.00001<Math.abs(equal(a.counter2,1))?.00001<Math.abs(equal(a.counter1,1))?0:a.counter1+.2:1;a.counter2=.00001<Math.abs(equal(a.counter1,1))?.00001<Math.abs(equal(a.counter2,1))?0:a.counter2+.2:1;a.cdelay1=.00001<Math.abs(equal(a.cdelay2,1))?1:.00001<Math.abs(equal(mod(a.colorcounter,2),1))?.00001<Math.abs(equal(a.counter1,1))?2:0:.00001<Math.abs(equal(a.counter2,1))?2:0;a.cdelay2=.00001<Math.abs(equal(a.cdelay1,2))?1:0;a.colorcounter=.00001<Math.abs(above(a.colorcounter,\n7))?0:.00001<Math.abs(equal(a.cdelay1,1))?a.colorcounter+1:a.colorcounter;a.ib_r=.5*(.00001<Math.abs(equal(a.colorcounter,1))?1:.00001<Math.abs(equal(a.colorcounter,2))?1:.00001<Math.abs(equal(a.colorcounter,3))?1:.00001<Math.abs(equal(a.colorcounter,4))?Math.sin(a.counter2+2.1):.00001<Math.abs(equal(a.colorcounter,5))?0:.00001<Math.abs(equal(a.colorcounter,6))?0:Math.sin(a.counter1));a.ib_g=.5*(.00001<Math.abs(equal(a.colorcounter,1))?0:.00001<Math.abs(equal(a.colorcounter,2))?Math.sin(.5*a.counter2):\n.00001<Math.abs(equal(a.colorcounter,3))?Math.sin(.4*(a.counter1+1.75)):.00001<Math.abs(equal(a.colorcounter,4))?1:.00001<Math.abs(equal(a.colorcounter,5))?1:.00001<Math.abs(equal(a.colorcounter,6))?Math.sin(a.counter2+2):0);a.ib_b=.00001<Math.abs(equal(a.colorcounter,1))?Math.sin(a.counter1+2.1):.00001<Math.abs(equal(a.colorcounter,2))?0:.00001<Math.abs(equal(a.colorcounter,3))?0:.00001<Math.abs(equal(a.colorcounter,4))?0:.00001<Math.abs(equal(a.colorcounter,5))?Math.sin(a.counter1):(equal(a.colorcounter,\n6),1);a.ob_r=a.ib_r-.5;a.ob_g=a.ib_g-.5;a.ob_b=a.ib_b-.5;a.q1=a.ib_r;a.q2=a.ib_g;a.q3=a.ib_b;a.decay=.99;a.musictime+=a.mid*a.mid*a.mid*.03;a.xpos=.15*Math.sin(.6*a.musictime);a.ypos=.15*Math.sin(.4*a.musictime);a.q4=a.xpos;a.q5=a.ypos;","pixel_eqs_str":"a.zoom=.985;a.cx=.5+a.q4;a.cy=.5-a.q5;a.rd=sqrt(sqr(2*(a.x-.5-a.q4))+sqr(1.5*(a.y-.5+a.q5)));a.zm=.99;a.ag=Math.atan(div(a.y-.5+a.q5,a.x-.5-a.q4));a.star=Math.sin(div(a.ag,5))*(2-a.rd);a.zm+=div(a.star,20);a.sx=a.zm;a.sy=a.zm;a.rot=div(.1*div(above(a.rd,.7),a.rd+7)*a.bass_att,a.rd);a.dx=.005*Math.sin(100*a.y)*a.bass;a.dy=.005*Math.cos(100*a.x)*a.bass;","init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\n\n\n\n//Thanks to Zylot for rainbow generator\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\ncdelay2 = if(equal(cdelay1,2),1,0);\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\nib_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\nib_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\nib_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\n\n\n\nob_r=ib_r-0.5;\nob_g=ib_g-0.5;\nob_b=ib_b-0.5;\nq1=ib_r;\nq2=ib_g;\nq3=ib_b;\n\n\n\ndecay = 0.99;\n\n\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\n//solarize=above(0.5,bass);\n//darken=above(0.4,treb);\n\nmusictime=musictime+(mid*mid*mid)*0.03;\n\nxpos=sin(musictime*0.6)*0.15;\nypos=sin(musictime*0.4)*0.15;\nq4=xpos;\nq5=ypos","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\n//var=(bass+mid+treb)/3;\n//rot=((ang&rad/rad)/(var*20))/10;\n//sx=.99-(var*0.01);\n//cx=var*0.1*(ang/12);\n//sy=sx;\n\nzoom=.985;\n\ncx=0.5+q4;\ncy=0.5-q5;\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\n//zm=(1.1-(rd/4));\nzm=.99;\n\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\nstar=sin(ag/5)*(2-rd);\nzm=zm+star/20;\nsx=zm;\nsy=zm;\nrot=above(rd,0.7)/(rd+7)*(bass_att*0.1)/rd;\ndx=sin(y*100)*(bass*0.005);\ndy=cos(x*100)*(bass*0.005);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 112.0));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.5 + ((uv - 0.5) * 0.92));\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 8.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  float tmpvar_6;\n  tmpvar_6 = (texsize.zw * 32.0).x;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.y;\n  tmpvar_7.y = tmpvar_5.y;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_4.z;\n  tmpvar_8.y = tmpvar_5.z;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_4.x;\n  tmpvar_9.y = tmpvar_5.x;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.z;\n  tmpvar_10.y = tmpvar_5.z;\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_4.y;\n  tmpvar_11.y = tmpvar_5.y;\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_4.x;\n  tmpvar_12.y = tmpvar_5.x;\n  ret_2.x = texture (sampler_main, (uv_1 + ((tmpvar_7 + tmpvar_8) * tmpvar_6))).x;\n  ret_2.y = texture (sampler_main, (uv_1 + ((tmpvar_9 + tmpvar_10) * tmpvar_6))).y;\n  ret_2.z = texture (sampler_main, (uv_1 + ((tmpvar_11 + tmpvar_12) * tmpvar_6))).z;\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_2;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n      // take the difference between the crisp and blurred images,\n      // then add it back into the image.  Creates spots and stripes over time.\n      ret += (ret - GetBlur2(uv))*0.3;\n      ret *= 0.9;\n\n      // add noise:\n      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n      ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 112;\n\n      // desaturate over time, to keep the globs white\n      //ret = lerp(ret, lum(ret), 0.2);\n}","comp_hlsl":"shader_body\n{\nuv = 0.5 + (uv - 0.5)*0.92;\nfloat2 d = texsize.zw*8;\nfloat3 dx = (GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv - float2(1,0)*d));\nfloat3 dy = (GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv - float2(0,1)*d));\nfloat strength = +texsize.zw*32;\nfloat2 uv_x = uv + (float2(dx.y,dy.y)+float2(dx.z,dy.z))*strength;\nfloat2 uv_y = uv + (float2(dx.x,dy.x)+float2(dx.z,dy.z))*strength; \nfloat2 uv_z = uv + (float2(dx.y,dy.y)+float2(dx.x,dy.x))*strength;\nret.x = GetPixel(uv_x).x;\nret.y = GetPixel(uv_y).y;\nret.z = GetPixel(uv_z).z;\n//ret = ret.z;\n}"}