{"version":2,"baseVals":{"rating":5,"gammaadj":1.42,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":4,"wave_dots":1,"darken":1,"solarize":1,"wave_a":100,"wave_scale":0.56,"wave_smoothing":0,"wave_mystery":-1,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0,"wave_g":0.31,"wave_y":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.lbbtime=0;a.mq29=0;a.cthr=0;a.d=0;a.cx1=0;a.y3=0;a.y1=0;a.mq1=0;a.bbtime=0;a.cy1=0;a.rs=0;a.q25=0;a.beatb=0;a.q12=0;a.q18=0;a.x1=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.avgbeatrate=0;a.q1=0;a.q5=0;a.fb=0;a.mq21=0;a.vb=0;a.mq24=0;a.drs=0;a.q9=0;a.fbr=0;a.v=0;a.fbc=0;a.chng=0;a.mq28=0;a.mm=0;a.tt=0;a.mq23=0;a.x3=0;a.beatrate=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.worp=0;a.mq30=0;a.q4=0;a.lbass=0;a.dir=0;a.faketime=0;a.q16=0;a.q26=0;a.fakebeatb=0;a.avgbr=\n0;a.avgfbr=0;a.mq27=0;a.rawbeatb=0;a.x2=0;a.mq25=0;a.q19=0;a.mq22=0;a.db=0;a.q17=0;a.vol=0;a.y2=0;a.mq26=0;a.bc=0;a.bb=0;a.q2=0;a.q27=0;a.q14=0;a.maxdb=0;a.q3=0;a.vvm=0;a.lftime=0;a.q32=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.vvt=0;a.q8=0;a.avgdb=0;a.beatrate=1;a.avgbeatrate=1;a.bbtime=1;a.lbbtime=1;a.avgdb=1;a.fakebeatcount=0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(a.bass*a.treb*a.mid,2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(a.mid,2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(a.treb,2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=2*a.vvb;a.q2=2*a.vvm;a.q3=2*a.vvt;a.v=2;a.bb-=a.vvb*a.v;a.mm-=a.vvm*a.v;a.tt-=a.vvt*a.v;a.q4=-a.bb;a.q5=-a.mm;a.q6=-a.tt;a.q4=\n5*(a.q1+a.q2+a.q3);a.q5=5*(a.q1+a.q2+a.q3);a.q6=5*(a.q1+a.q2+a.q3);a.q7=5*(a.q1+a.q2+a.q3);a.q8=5*(a.q1+a.q2+a.q3);a.q9=5*(a.q1+a.q2+a.q3);a.q10=5*(a.q1+a.q2+a.q3);a.q11=5*(a.q1+a.q2+a.q3);a.q12=5*(a.q1+a.q2+a.q3);a.q13=5*(a.q1+a.q2+a.q3);a.q14=5*(a.q1+a.q2+a.q3);a.q15=5*(a.q1+a.q2+a.q3);a.q16=5*(a.q1+a.q2+a.q3);a.q17=5*(a.q1+a.q2+a.q3);a.q18=5*(a.q1+a.q2+a.q3);a.q19=5*(a.q1+a.q2+a.q3);a.q20=5*(a.q1+a.q2+a.q3);a.q21=5*(a.q1+a.q2+a.q3);a.q22=5*(a.q1+a.q2+a.q3);a.q23=5*(a.q1+a.q2+a.q3);a.q24=5*(a.q1+\na.q2+a.q3);a.q25=5*(a.q1+a.q2+a.q3);a.q26=5*(a.q1+a.q2+a.q3);a.q27=5*(a.q1+a.q2+a.q3);a.q28=5*(a.q1+a.q2+a.q3);a.q29=5*(a.q1+a.q2+a.q3);a.q30=5*(a.q1+a.q2+a.q3);a.q31=5*(a.q1+a.q2+a.q3);a.q32=5*(a.q1+a.q2+a.q3);a.db=a.bass-a.lbass;a.lbass=a.bass;a.vol=1+a.bass+a.mid+a.treb;a.rs=above(Math.abs(a.db),a.maxdb);a.drs=1-a.rs;a.beatrate=1*a.rs+a.beatrate*a.drs;a.avgbeatrate=1*a.rs+a.avgbeatrate*a.drs;a.bbtime=1*a.rs+a.bbtime*a.drs;a.lbbtime=1*a.rs+a.lbbtime*a.drs;a.avgdb=1*a.rs+a.avgdb*a.drs;a.fbc=a.fbc*\na.drs+1*a.rs;a.bc=a.bc*a.drs+1*a.rs;a.faketime=1*a.rs+a.faketime*a.drs;a.lftime=1*a.rs+a.lftime*a.drs;a.avgdb=.999*a.avgdb+.001*Math.abs(a.db);a.rawbeatb=above(a.db*a.fakebeatb,1.3*a.avgdb);a.beatb=a.rawbeatb*above(a.time-a.lbbtime,.1*a.avgbeatrate);a.maxdb=Math.max(.9999*a.maxdb,Math.abs(a.db));a.bbtime=a.time*a.beatb;a.beatrate=a.beatb*(a.bbtime-a.lbbtime)+(1-a.beatb)*a.beatrate;a.avgbeatrate=a.beatb*(.999*a.avgbeatrate+.001*a.beatrate)+(1-a.beatb)*a.avgbeatrate;a.lbbtime=a.time*a.beatb+(1-a.beatb)*\na.lbbtime;a.faketime+=.005*a.avgbeatrate;a.fakebeatb=.5*Math.cos(a.faketime)+.5;a.fb=above(a.fakebeatb,.9999)*above(a.faketime-a.lftime,.5*a.avgfbr);a.fbr=(1-a.fb)*a.fbr+a.fb*(.99*a.fbr+.01*(a.faketime-a.lftime));a.avgfbr=a.avgbr*(1-a.fb)+a.fb*(.99*a.avgfbr+.01*a.fbr);a.fbc+=a.fb;a.lftime=a.faketime*a.fb+(1-a.fb)*a.lftime;a.bc+=a.beatb;a.monitor=a.beatb;a.q1=a.beatb;a.q2=a.db;a.q3=a.fakebeatb;a.q4=a.avgbeatrate;a.q5=equal(mod(a.bc,4),0)*a.beatb;a.q6=equal(mod(a.bc,16),0)*a.beatb;a.q7=a.rawbeatb;a.decay=\n.99;a.warp=0;a.wrap=1;a.worp=0;a.dx=.005;a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;\na.mq28=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq30=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq30;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q30=a.mq30;a.monitor=a.mq1;","pixel_eqs_str":"a.cx1=.5+.2*Math.sin(.618*a.time);a.cy1=.5+.2*Math.cos(1.618*a.time);a.dir=a.bass;a.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));a.x1=.00001<Math.abs(above(a.d,.3))?0:.05*Math.sin(a.y-a.cy1)*a.dir;a.y1=.00001<Math.abs(above(a.d,.3))?0:.05*-Math.sin(a.x-a.cx1)*a.dir;a.cx1=.5+.3*Math.sin(2.618*a.time);a.cy1=.5+.3*Math.cos(3.14*a.time);a.dir=2*-a.mid;a.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));a.x2=.00001<Math.abs(above(a.d,.2))?0:.05*Math.sin(a.y-a.cy1)*\na.dir;a.y2=.00001<Math.abs(above(a.d,.2))?0:.05*-Math.sin(a.x-a.cx1)*a.dir;a.cx1=.5+.4*Math.sin(2.618*-a.time);a.cy1=.5+.4*Math.cos(1.14*-a.time);a.dir=3*a.treb;a.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));a.x3=.00001<Math.abs(above(a.d,.1))?0:.05*Math.sin(a.y-a.cy1)*a.dir;a.y3=.00001<Math.abs(above(a.d,.1))?0:.05*-Math.sin(a.x-a.cx1)*a.dir;a.dx=a.dx+a.x1+a.x2+a.x3;a.dy=a.dy+a.y1+a.y2+a.y3;","init_eqs_eel":"beatrate=1;\navgbeatrate=1;\nbbtime=1;\nlbbtime=1;\navgdb=1;\nfakebeatcount=0;","frame_eqs_eel":"vb = vb*0.95 + (1-vb)*pow(bass*treb*mid,2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(mid,2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(treb,2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = vvb*2;//0.5 + vb - vvb;\nq2 = vvm*2;//0.5 + vm - vvm;\nq3 = vvt*2;//0.5 + vt - vvt;\nv=2;\nbb = bb - vvb*v;\nmm = mm - vvm*v;\ntt = tt - vvt*v;\nq4 = -bb;\nq5 = -mm;\nq6 = -tt;\nq4=(q1+q2+q3)*5;\nq5=(q1+q2+q3)*5;\nq6=(q1+q2+q3)*5;\nq7=(q1+q2+q3)*5;\nq8=(q1+q2+q3)*5;\nq9=(q1+q2+q3)*5;\nq10=(q1+q2+q3)*5;\nq11=(q1+q2+q3)*5;\nq12=(q1+q2+q3)*5;\nq13=(q1+q2+q3)*5;\nq14=(q1+q2+q3)*5;\nq15=(q1+q2+q3)*5;\nq16=(q1+q2+q3)*5;\nq17=(q1+q2+q3)*5;\nq18=(q1+q2+q3)*5;\nq19=(q1+q2+q3)*5;\nq20=(q1+q2+q3)*5;\nq21=(q1+q2+q3)*5;\nq22=(q1+q2+q3)*5;\nq23=(q1+q2+q3)*5;\nq24=(q1+q2+q3)*5;\nq25=(q1+q2+q3)*5;\nq26=(q1+q2+q3)*5;\nq27=(q1+q2+q3)*5;\nq28=(q1+q2+q3)*5;\nq29=(q1+q2+q3)*5;\nq30=(q1+q2+q3)*5;\nq31=(q1+q2+q3)*5;\nq32=(q1+q2+q3)*5;\ndb=bass-lbass;\nlbass=bass;\nvol=1+bass+mid+treb;\n\nrs=above(abs(db),maxdb);\ndrs=1-rs;\n\nbeatrate=1*rs+beatrate*drs;\navgbeatrate=1*rs+avgbeatrate*drs;\nbbtime=1*rs+bbtime*drs;\nlbbtime=1*rs+lbbtime*drs;\navgdb=1*rs+avgdb*drs;\nfbc=fbc*drs+1*rs;\nbc=bc*drs+1*rs;\nfaketime=1*rs+faketime*drs;\nlftime=1*rs+lftime*drs;\n\n\navgdb=avgdb*.999+abs(db)*.001;\n\nrawbeatb=above(db*fakebeatb,avgdb*1.3);\nbeatb=rawbeatb*above(time-lbbtime,.1*avgbeatrate);\nmaxdb=max(maxdb*.9999,abs(db));\n\nbbtime=time*beatb;\n\nbeatrate=beatb*(bbtime-lbbtime)+(1-beatb)*beatrate;\navgbeatrate=beatb*(avgbeatrate*.999+beatrate*.001)+(1-beatb)*avgbeatrate;\n\n\nlbbtime=time*beatb+(1-beatb)*lbbtime;\n\n\nfaketime=faketime+avgbeatrate*.005;\n//faketime=0;\nfakebeatb=cos(faketime)*.5+.5;\nfb=above(fakebeatb,.9999)*above(faketime-lftime,.5*avgfbr);\nfbr=(1-fb)*fbr+fb*(fbr*.99+(faketime-lftime)*.01);\navgfbr=avgbr*(1-fb)+fb*(avgfbr*.99+fbr*.01);\n\nfbc=fbc+fb;\nlftime=faketime*fb+(1-fb)*lftime;\n\n\n\nbc=bc+beatb;\n\nmonitor=beatb;\nq1=beatb;//equal((fbc-1)%4,0)*fb;\nq2=db;\nq3=fakebeatb;\nq4=avgbeatrate;\nq5=equal(bc%4,0)*beatb;\nq6=equal(bc%16,0)*beatb;\nq7=rawbeatb;\n\ndecay=.99;\nwarp=0;\nwrap=1;\nworp=0;\n\ndx=.005;\nchng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq30=if(above(chng,cthr),rand(1)*.3,mq30);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\n\nmonitor=mq1;","pixel_eqs_eel":"//flexi per vertex - circular canvas warps\ncx1 = 0.5+sin(time*0.618)*0.2;\ncy1 = 0.5+cos(time*1.618)*0.2;\ndir = bass;\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\nx1 = if( above(d,0.3),0,  sin(y-cy1)*0.05*dir);\ny1 = if( above(d,0.3),0, -sin(x-cx1)*0.05*dir);\ncx1 = 0.5+sin(time*2.618)*0.3;\ncy1 = 0.5+cos(time*3.14)*0.3;\ndir = -mid*2;\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\nx2 = if( above(d,0.2),0,  sin(y-cy1)*0.05*dir);\ny2 = if( above(d,0.2),0, -sin(x-cx1)*0.05*dir);\ncx1 = 0.5+sin(-time*2.618)*0.4;\ncy1 = 0.5+cos(-time*1.14)*0.4;\ndir = treb*3;\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\nx3 = if( above(d,0.1),0,  sin(y-cy1)*0.05*dir);\ny3 = if( above(d,0.1),0, -sin(x-cx1)*0.05*dir);\ndx = dx+x1+x2+x3;\ndy = dy+y1+y2+y3;","warp":" shader_body { \n  vec3 noise_1;\n  vec2 tmp_2;\n  vec3 ret_3;\n  tmp_2.x = (ang * 3.0);\n  tmp_2.y = rad;\n  noise_1 = ((texture (sampler_noise_lq, (\n    (((texsize.xy * texsize_noise_lq.zw).x * uv) / 2.0)\n   + q23)) + 1.0).xyz - ((roam_sin.xyz * roam_cos.zxy) * 0.2));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_5;\n  tmpvar_5.x = (0.3 * tmpvar_4.x);\n  tmpvar_5.y = tmpvar_4.y;\n  ret_3 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_5))).xyz * scale1) + bias1)\n   - \n    (noise_1 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_4 * 0.01)\n  .xy)).xyz + (noise_1 * 0.1)));\n  vec3 tmpvar_6;\n  tmpvar_6.x = (uv.x - rad);\n  tmpvar_6.y = (tmp_2.x + uv.y);\n  tmpvar_6.z = (uv.x / rad);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_6) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_3.x > (q21 * roam_cos.y)) && (ret_3.x <= (q24 * roam_sin.x)))) {\n    ret_3.y = (ret_3.y - (tmpvar_7.x * 0.5));\n  };\n  if (((ret_3.y > (q22 * roam_sin.x)) && (ret_3.y <= (q25 * roam_cos.x)))) {\n    ret_3.z = (ret_3.z + (tmpvar_7.y * 0.5));\n  };\n  if (((ret_3.z > (q23 * roam_cos.x)) && (ret_3.z <= (q26 * roam_sin.y)))) {\n    ret_3.x = (ret_3.x - (tmpvar_7.z * 0.5));\n  };\n  float tmpvar_8;\n  tmpvar_8 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_3 = (ret_3 * (0.98 * (tmpvar_8 * tmpvar_8)));\n  ret_3 = (ret_3 - 0.04);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_3;\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv).zzz;\n  ret_1 = ((pow (\n    mix (vec3((((texture (sampler_blur1, uv).xyz * scale1) + bias1).z + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).z)), tmpvar_2, tmpvar_2)\n  , vec3(0.8, 2.0, 8.0)) * 1.25) - 0.25);\n  ret_1 = (ret_1 - ((roam_sin.wzy * roam_cos.xyz) * 0.2));\n  ret_1 = (ret_1 * ((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2).y * 1.2));\n  ret_1 = (ret_1 * 2.0);\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((ret_1.x > (q26 * roam_cos.y)) && (ret_1.x <= (q23 * roam_sin.x)))) {\n    ret_1.z = (ret_1.z - (tmpvar_3.x * 0.5));\n  };\n  if (((ret_1.y > (q25 * roam_sin.x)) && (ret_1.y <= (q22 * roam_cos.x)))) {\n    ret_1.x = (ret_1.x - (tmpvar_3.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * roam_cos.x)) && (ret_1.z <= (q21 * roam_sin.y)))) {\n    ret_1.y = (ret_1.y - (tmpvar_3.z * 0.5));\n  };\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body {\n\n//uv = uv_orig;\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat2 tmp = uv1;\ntmp.x = ang*3; tmp.y = rad;\nuv1 = tmp;\n\nfloat3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);\nnoise-=roam_sin*roam_cos.zxy*.2;\n\nfloat3 ret1 = GetBlur1 (uv)-.3;\nfloat3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;\nfloat3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;\n\nret = -.4*blur + crisp;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((float3(uv.x-uv1.y,uv1.x+uv.y,uv.x/uv1.y)*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; \nif(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z += (noise9).y*.5; \nif(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; \n    \n ret *= 0.98 * pow(1-.01*q28*q28*rad,2); \n  ret -= 0.04;\n}","comp_hlsl":"sampler sampler_rose;\nshader_body\n{\n\nret = tex2D(sampler_main, uv).z,\n\nret = lerp (\nGetBlur1(uv).z + GetBlur3(uv).z,\nret,\npow(ret,1));\n  \nfloat1 val = ret*6.2831853;\n    ret = pow(ret,float3(.8,2,8))*1.25 - .25;\n\nret-=roam_sin.wzy*roam_cos*.2;\nret *= GetBlur2(uv+float2(0,.01)).y*1.2;\n\nret *= 2; //gamma\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q30 \n                     );\nif(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z -= (noise9).x*.5; \nif(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x -= (noise9).y*.5; \nif(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y -= (noise9).z*.5; \n}"}