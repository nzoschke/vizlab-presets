{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"solarize":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.43174,"ang":2.9531,"tex_zoom":0.70721,"r":0,"b":1,"r2":1,"b2":1,"a2":1,"border_a":1},"init_eqs_str":"a.r22=0;a.br=0;a.q6=0;a.gg=0;a.q1=0;a.q5=0;a.bo=0;a.q4=0;a.g22=0;a.squ=0;a.bg=0;a.bb=0;a.q2=0;a.b22=0;a.cir=0;a.q3=0;a.rr=0;a.tri=0;","frame_eqs_str":"a.tex_zoom=1.5-.4*a.bass_att;a.additive=.00001<Math.abs(equal(mod(a.frame,4-a.bass),0))?1:0;a.bb+=.0015*(a.bass+a.bass_att+a.q2+a.treb_att+a.mid_att);a.tex_ang=6.28*(.5*Math.sin(1.2*a.bb*a.q1*a.q2)+1+.5*Math.cos(1.5*a.bb));a.rad=div(a.bb,a.frame)-.8;a.tri=.00001<Math.abs(above(a.bass,a.treb))?1:0;a.squ=.00001<Math.abs(above(a.treb,a.bass))?1:0;a.cir=.00001<Math.abs(band(above(a.mid,a.treb),above(a.mid,a.bass)))?1:0;a.sides=3*a.tri+4*a.squ+300*a.cir;a.ang=a.bass_att*a.mid_att-\na.treb_att*a.mid_att;a.rr=a.bass_att;a.gg=a.treb_att;a.bb=a.mid_att;a.r22=a.rr;a.b22=a.bb;a.g22=a.gg;a.rr=a.br;a.gg=a.bg;a.bb=a.bo;a.br=.6+.4*Math.sin(a.bb*a.q2+a.bb*a.q4);a.bg=.6+.4*Math.sin(a.bb*a.q6+a.bb*a.q1);a.bo=.6+.4*Math.sin(a.bb*a.q2*a.q4*a.q6+a.bb*a.q1*a.q3*a.q5*100);a.border_r=a.br;a.border_b=a.bo;a.border_g=a.bg;a.r=1-a.rr;a.r2=a.b22;a.b=1-a.bb;a.b2=a.g22;a.g=1-a.gg;a.g2=a.r22;","init_eqs_eel":"","frame_eqs_eel":"tex_zoom=1.5-bass_att*.4;\nadditive=if(equal(frame%(4-bass),0),1,0);\nbb=bb+.0015*(bass+bass_att+q2+treb_att+mid_att);\ntex_ang=6.28*(sin(1.2*bb*q1*q2)*.5+1+cos(1.5*bb)*.5);\n\n\nrad=bb/frame-.8;\ntri=if(above(bass,treb),1,0);\nsqu=if(above(treb,bass),1,0);\ncir=if(band(above(mid,treb),above(mid,bass)),1,0);\n\nsides=3*tri+4*squ+300*cir;\n\nang=bass_att*mid_att-treb_att*mid_att;\n\nrr=bass_att;\ngg=treb_att;\nbb=mid_att;\n\n\nr22=rr;\nb22=bb;\ng22=gg;\n\n\nrr=br;\ngg=bg;\nbb=bo;\n\nbr=.6+sin(bb*q2+bb*q4)*.4;\nbg=.6+sin(bb*q6+bb*q1)*.4;\nbo=.6+sin(bb*q2*q4*q6+bb*q1*q3*q5*100)*.4;\n\nborder_r=br;\nborder_b=bo;\nborder_g=bg;\n\n\nr=1-rr;\nr2=b22;\nb=1-bb;\nb2=g22;\ng=1-gg;\ng2=r22;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":20,"spectrum":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=a.sample;a.y=Math.max(a.value2*mod(a.frame,2),.5*a.bass_att-.3*a.treb_att)-Math.min(.5*a.bass_att-.3*a.treb_att,a.value1*(1-mod(a.frame,2)));a.r=a.value1-a.bass;a.g=a.value2-a.treb;a.b=1-(a.value1+a.value2+a.mid);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=(sample);\ny=max(value2*(frame%2),bass_att*.5-treb_att*.3)-min(bass_att*.5-treb_att*.3,value1*(1-frame%2));\n\nr=value1-bass;\ng=value2-treb;\nb=1-(value1+value2+mid);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.beatb=0;a.q6=0;a.beatt=0;a.q1=0;a.beatthard=0;a.q5=0;a.beatbhard=0;a.vol_att=0;a.q4=0;a.beatmhard=0;a.vol=0;a.beatm=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.beatb=above(a.bass,a.bass_att);a.beatbhard=.00001<Math.abs(a.beatb)?a.bass-.9*a.bass_att:a.beatbhard;a.beatm=above(a.mid,a.mid_att);a.beatmhard=.00001<Math.abs(a.beatm)?a.mid-.9*a.mid_att:a.beatmhard;a.beatt=above(a.treb,a.treb_att);a.beatthard=.00001<Math.abs(a.beatt)?a.treb-.9*a.treb_att:a.beatthard;a.vol=a.bass+a.mid+a.treb;a.vol_att=a.bass_att+a.mid_att+a.treb_att;a.q1=a.beatb;a.q2=a.beatbhard;a.q3=a.beatm;a.q4=a.beatmhard;a.q5=a.beatt;a.q6=a.beatthard;a.zoom=1.1;a.wrap=\n0;a.decay=.99999;","pixel_eqs_str":"a.dx=pow(.001*a.q2-.0001*a.q6,a.rad*a.q2);a.dy=pow(.001*a.q4-.001*a.q6,a.rad*a.q4+a.q5*a.ang);a.rot=(a.q2-a.q4)*a.q6;","init_eqs_eel":"","frame_eqs_eel":"beatb=above(bass,bass_att);\nbeatbhard=if(beatb,bass-bass_att*.9,beatbhard);\n\nbeatm=above(mid,mid_att);\nbeatmhard=if(beatm,mid-mid_att*.9,beatmhard);\n\nbeatt=above(treb,treb_att);\nbeatthard=if(beatt,treb-treb_att*.9,beatthard);\n\nvol=bass+mid+treb;\nvol_att=bass_att+mid_att+treb_att;\n\n\nq1=beatb;\nq2=beatbhard;\nq3=beatm;\nq4=beatmhard;\nq5=beatt;\nq6=beatthard;\n\n\nzoom=1.1;\nwrap=0;\ndecay=.99999;","pixel_eqs_eel":"dx=pow(q2*.001-q6*.0001,rad*q2);\ndy=pow(q4*.001-q6*.001,rad*q4+q5*ang);\n//zoom=1+sin(dx*bass+treb+mid+ang*rad);\nrot=1*(q2-q4)*q6;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + ((ret_1 - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 - (texture (sampler_noisevol_hq, (\n    ((vec3(0.05, 0.05, 0.0) * uv.xyy) * (texsize.xyy * texsize_noisevol_hq.zww))\n   + \n    (vec3(0.0, 0.0, 0.4) * time)\n  )) * 0.2).xyz);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 122.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (uv.x + 0.001);\n  tmpvar_3.y = uv.y;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\n  float tmpvar_5;\n  tmpvar_5 = abs(((\n    (((tmpvar_2.x + tmpvar_2.y) + tmpvar_2.z) - tmpvar_4.x)\n   - tmpvar_4.y) - tmpvar_4.z));\n  if ((tmpvar_5 > 0.1)) {\n    ret_1 = ((texture (sampler_blur2, uv).xyz * scale2) + bias2);\n  } else {\n    ret_1 = ((texture (sampler_blur3, uv).xyz * scale3) + bias3);\n  };\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (texsize.xyy * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.4) * time)));\n  if ((((ret_1.x + ret_1.y) + ret_1.z) > 0.3)) {\n    ret_1 = (ret_1 + (tmpvar_6 * 0.4).xyz);\n  };\n  ret_1 = (ret_1 + ((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) + normalize(\n    (ret_1 - 0.1)\n  )));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret.xyz = tex2D( sampler_main, uv ).xyz;\n\n      // take the difference between the crisp and blurred images,\n      // then add it back into the image.  Creates spots and stripes over time.\n      ret.xyz += (ret.xyz - GetBlur2(uv))*0.3;\n      ret.xyz *= 0.9;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nret -= (noise2)*.2; \n\n      // add noise:\n      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 * saturate(treb_att-1);\n\n      // desaturate over time, to keep the globs white\n      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);\n}","comp_hlsl":"shader_body\n{\nfloat3 orig,nex;\norig=tex2D(sampler_main,uv);\nnex=tex2D(sampler_main,float2(uv.x+0.001,uv.y));\nif(abs(orig.x+orig.y+orig.z-nex.x-nex.y-nex.z)>0.1)\n{ret=GetBlur2(uv);}else\n{ret=GetBlur3(uv);}; \nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nif(ret.x+ret.y+ret.z>.3)ret += (noise2)*.4; \nret+=GetBlur2(uv)+normalize(ret-0.1);\n}"}