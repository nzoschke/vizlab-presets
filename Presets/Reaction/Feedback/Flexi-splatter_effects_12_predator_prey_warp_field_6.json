{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.9,"wave_scale":2.997,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.274,"warpscale":7.98,"zoom":0.99951,"warp":0.01,"wave_r":0.02,"wave_g":0.02,"wave_b":0,"ob_size":0.35,"ob_r":1,"ob_a":0.3,"ib_size":0,"ib_r":0.01,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":5,"mv_a":0,"b1ed":1},"shapes":[{"baseVals":{"sides":99,"textured":1,"x":1,"y":0.63,"rad":1.3,"tex_zoom":0.763,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"y":0.55,"rad":0.225,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"x":0.85,"y":0,"rad":1.3,"tex_zoom":2.068,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.97,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":3,"textured":1,"x":0.02,"rad":0.733,"ang":1.319,"tex_zoom":100,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.97,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":60,"scaling":0.08,"smoothing":0.4,"r":0,"g":0,"b":0,"a":0.97,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":20,"scaling":0.07,"smoothing":0.65,"r":0.3,"g":0.3,"b":0.3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":30,"scaling":0.07,"r":0.3,"g":0.3,"b":0.3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":60,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.d=0;a.q6=0;a.q1=0;a.q5=0;a.startx=0;a.q4=0;a.a=0;a.b=0;a.q2=0;a.starty=0;a.q3=0;a.q7=0;a.x1=0;a.y1=.001;a.z1=0;","frame_eqs_str":"a.zoom=1;a.wave_a=0;a.startx=.3;a.starty=.3;a.a=.55;a.b=.05;a.d=.09;a.q1=a.aspectx;a.q2=a.aspecty;a.q3=a.startx;a.q4=a.starty;a.q5=a.a;a.q6=a.b;a.q7=a.d;","pixel_eqs_str":"a.x=.5+(a.x-.497)*a.q1;a.y=.5-(a.y-.5)*a.q2;a.dx=a.x*(1-a.x)-div(a.q5*a.x*a.y,a.x+a.q6);a.dy=-a.q7*a.y*(1-div(a.y,a.x));a.dx=div(.006*a.dx,a.q1);a.dy=div(.006*a.dy,a.q2);","init_eqs_eel":"x1 = 0;\ny1= .001;\nz1 = 0;","frame_eqs_eel":"zoom = 1;\nwave_a = 0;\n\nstartx = 0.3;\nstarty = 0.3;\n\na = 0.55;\nb = 0.05;\nd = 0.09;\n\nq1 = aspectx;\nq2 = aspecty;\n\nq3 = startx;\nq4 = starty;\n\nq5 = a;\nq6 = b;\nq7 = d;","pixel_eqs_eel":"x = 0.5 + (x-0.497)*q1;\ny = 0.5 - (y-0.5)*q2;\ndx = (x*(1-x)-q5*x*y/(x+q6));\ndy = -q7*y*(1-y/x);\n\ndx = dx*0.006/q1;\ndy = dy*0.006/q2;","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = clamp (uv, 0.0, 1.0);\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = ((2.0 * (\n    (texture (sampler_blur1, (tmpvar_2 + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (tmpvar_2 - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1))).x;\n  tmpvar_4.y = ((2.0 * (\n    (texture (sampler_blur1, (tmpvar_2 + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (tmpvar_2 - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1))).x;\n  vec2 tmpvar_5;\n  tmpvar_5 = -((tmpvar_4 * texsize.zw));\n  ret_1.yz = vec2(0.0, 0.0);\n  ret_1.x = (texture (sampler_fw_main, (tmpvar_2 - tmpvar_5)).x - ((\n    (texture (sampler_blur3, tmpvar_2).xyz * scale3)\n   + bias3).x - (\n    (texture (sampler_blur1, (tmpvar_2 + tmpvar_5)).xyz * scale1)\n   + bias1).x));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 3.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = ((2.0 * (\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1))).x;\n  tmpvar_4.y = ((2.0 * (\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1))).x;\n  uv_1 = (uv + ((tmpvar_4 * texsize.zw) * 4.0));\n  ret_2 = ((mix (ret_2, vec3(1.0, 1.0, 1.0), \n    ((((texture (sampler_blur1, uv_1).xyz * scale1) + bias1).x * (1.0 - (\n      (texture (sampler_blur2, uv_1).xyz * scale2)\n     + bias2).x)) * (pow (hue_shader, vec3(4.0, 4.0, 4.0)) * 1.4))\n  ) * texture (sampler_main, uv_1).xxx) + ((\n    (1.0 - texture (sampler_main, uv_1).x)\n   * \n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\n  .x) * vec3(3.0, 3.0, 3.0)));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body\n{\nuv = saturate(uv);\n    float2 d = texsize.zw*4;\n    float3 dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) );\nfloat2 dz = float2(dx.x,dy.x)*texsize.zw*(-1);\n\n//ret = GetPixel(uv);\nret = 0;\nret.x = tex2d(sampler_fw_main,uv - dz).x - 0.0 - (GetBlur3(uv).x-GetBlur1(uv+dz).x) ;\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*3;\n    float3 dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) );\n\nuv += float2(dx.x,dy.x)*texsize.zw*4;\n\n// colors\nfloat3 aura = pow(hue_shader,4)*1.4;\nfloat3 glow = 3;\nfloat3 blob = float3(1,0.75,0)*0;\n//re-arranging the red channel\nret = lerp(ret,1,GetBlur1(uv).x*(1-GetBlur2(uv).x)*aura);\nret = lerp(blob, ret, GetPixel(uv).x);\nret += (1-GetPixel(uv).x)*GetBlur1(uv).x*glow;\n\n//ret = GetPixel(uv).x;\n\n}"}