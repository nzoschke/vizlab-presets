{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"darken_center":1,"wave_a":4.1,"wave_scale":2.85,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":0.99817,"zoom":1.01,"warp":0.14977,"sx":1.01,"sy":0.9901,"wave_g":0,"wave_b":0,"ob_size":0,"ib_size":0,"mv_x":12.8,"mv_y":38.4,"mv_l":0.8,"mv_r":0.44,"mv_g":0.65,"mv_b":0.81,"mv_a":0},"shapes":[{"baseVals":{"sides":23,"additive":1,"textured":1,"y":0.7,"rad":0.15493,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"y=bass_att*0.5+0.2;\nx=cos(time*2)*0.5+0.5;","init_eqs_eel":"","frame_eqs_eel":"y=bass_att*0.5+0.2;\nx=cos(time*2)*0.5+0.5;"},{"baseVals":{"textured":1,"rad":1.802,"tex_ang":3.14159,"tex_zoom":0.57268,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//ang = ang + (bass*.2) + (time*.4);\n//rad=1.781+(bass*0.025);\nang=above(0.5,treb_att)*.063;","init_eqs_eel":"","frame_eqs_eel":"//ang = ang + (bass*.2) + (time*.4);\n//rad=1.781+(bass*0.025);\nang=above(0.5,treb_att)*.063;"},{"baseVals":{"sides":100,"additive":1,"textured":1,"x":0.9,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = sin(time*5) * .4 + .5;\ny=treb_att*0.5;\n\npow( (bass*.15),2);","init_eqs_eel":"","frame_eqs_eel":"x = sin(time*5) * .4 + .5;\ny=treb_att*0.5;\n\npow( (bass*.15),2);"},{"baseVals":{"sides":100,"textured":1,"rad":0.033,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=.5+(bass*0.07);","init_eqs_eel":"","frame_eqs_eel":"x=.5+(bass*0.07);"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"basstime=basstime+(bass*bass);\nt1=basstime*0.003;\n","point_eqs_str":"//plot x,y,z to point on circle\nsmp=sample*6.283;\nxp=sin(smp )*0.20;\nyp=cos(smp )*0.20;\nzp=0;\n\n\n//alter shape;\nangy=sin(sample*6.28*4 +t1 )*6.28;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n\n//rotate on y axis;\nangy=t1*0.1;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n//rotate on x axis\naxs1 = sin(t1*0.15) + 1.6;\nyq= yp*cos(axs1) - zp*sin(axs1);\nzq= yp*sin(axs1) + zp*cos(axs1);\nyp=yq;\nzp=zq;\n\n//rotate on y axis again\naxs2 = sin(t1*0.1)*3.3;\nxq=xp*cos(axs2) - zp*sin(axs2);\nzq=xp*sin(axs2) + zp*cos(axs2);\nxp=xq;\nzp=zq;\n\n//stretch y axis to compensate for aspect ratio\nyp=yp*1.2;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5+q4;\ny=ys+0.5+q5;\n\nr=1-q1;\ng=1-q2;\nb=1-q3;","init_eqs_eel":"","frame_eqs_eel":"basstime=basstime+(bass*bass);\nt1=basstime*0.003;\n","point_eqs_eel":"//plot x,y,z to point on circle\nsmp=sample*6.283;\nxp=sin(smp )*0.20;\nyp=cos(smp )*0.20;\nzp=0;\n\n\n//alter shape;\nangy=sin(sample*6.28*4 +t1 )*6.28;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n\n//rotate on y axis;\nangy=t1*0.1;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n//rotate on x axis\naxs1 = sin(t1*0.15) + 1.6;\nyq= yp*cos(axs1) - zp*sin(axs1);\nzq= yp*sin(axs1) + zp*cos(axs1);\nyp=yq;\nzp=zq;\n\n//rotate on y axis again\naxs2 = sin(t1*0.1)*3.3;\nxq=xp*cos(axs2) - zp*sin(axs2);\nzq=xp*sin(axs2) + zp*cos(axs2);\nxp=xq;\nzp=zq;\n\n//stretch y axis to compensate for aspect ratio\nyp=yp*1.2;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5+q4;\ny=ys+0.5+q5;\n\nr=1-q1;\ng=1-q2;\nb=1-q3;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_b=Math.max(div(1,3.14)+.5*Math.sin(a.time)-div(2,9.42)*Math.cos(2*a.time),.3);a.wave_g=.1*Math.max(div(5*a.mid*Math.sin(a.mid*a.time),a.mid_att*a.mid_att+a.mid*a.mid),.1);a.wave_r=Math.max(div(5*a.treb*Math.sin(a.treb*a.time),a.treb_att*a.treb_att+a.treb*a.treb),.3);a.decay=.99999995+5e-8*Math.abs(Math.sin(50*a.time));","pixel_eqs_str":"a.zoom=.00001<Math.abs(below(a.rad,.03))?.9:1-div(2*(-div(3,2)*pow(2.718,Math.sin(div(a.bass*a.bass*a.time*Math.sin(31.4*a.rad),a.rad)))+.5*pow(2.718,Math.sin(div(a.treb*a.treb*a.time*a.rad*Math.sin(3.14*a.rad),a.rad)))),500);","init_eqs_eel":"","frame_eqs_eel":"wave_b = max((1 / 3.14) + .5 * sin(time) - (2 / (3 * 3.14)) * cos(2 * time), .3);\nwave_g = .1 * max(5 * mid * sin(mid * time) / (mid_att * mid_att + mid * mid), .1);\nwave_r = max(5 * treb * sin(treb * time) / (treb_att * treb_att + treb * treb), .3);\ndecay = .99999995 + .00000005 * abs(sin(50 * time));","pixel_eqs_eel":"zoom = if(below(rad, .03), .9, 1 - 2 * (-(3/2) * pow(2.718, sin(bass * bass * time * sin(31.4 * rad) / rad)) + .5 * pow(2.718, sin(treb * treb * time * rad * sin(3.14 * rad) / rad)))/500);","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  ret_1.x = texture (sampler_main, (tmpvar_2 + 0.5)).x;\n  ret_1.y = texture (sampler_main, ((tmpvar_2 * 0.98) + 0.5)).y;\n  ret_1.z = texture (sampler_main, ((tmpvar_2 * 0.96) + 0.5)).z;\n  ret_1 = (ret_1 - (ret_1 * 0.5));\n  ret_1 = ((ret_1 * abs(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2) - 0.5)\n  )) * 5.0);\n  ret_1 = (ret_1 - 0.01);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = ((-0.8 * texture (sampler_main, uv).xyz) + ((texture (sampler_blur3, uv).xyz * scale3) + bias3));\n  ret_1 = (ret_1 * 2.0);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    float3 ret2 = tex2D( sampler_fc_main, uv ).xyz;\n    \n    ret.x = tex2D( sampler_main, (uv-0.5)*1.00+0.5 ).x;\n    ret.y = tex2D( sampler_main, (uv-0.5)*0.98+0.5 ).y;\n    ret.z = tex2D( sampler_main, (uv-0.5)*0.96+0.5 ).z;   \n    \n    // darken (decay) over time\n    ret = ret- (ret*.5);\n    ret = ret*(abs(GetBlur2(uv)-.5))*5;\n    ret = ret - .01;\n}","comp_hlsl":"shader_body\n{\n    ret = -.8*tex2D(sampler_main, uv).xyz+GetBlur3(uv);\n    ret *= 2;\n}"}