{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":1.22,"wave_scale":100,"wave_smoothing":0,"wave_mystery":1,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpanimspeed":3.987,"warpscale":0.034,"zoomexp":0.75683,"zoom":1.01823,"warp":0.06295,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"sides":20,"textured":1,"rad":2.29737,"tex_zoom":0.43785,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.dx_residual=0;a.dy_residual=0;a.bass_thresh=0;a.q1=0;","frame_eqs_str":"a.decay-=.01*equal(mod(a.frame,6),0);a.dx+=a.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.016*equal(a.bass_thresh,2.13)*Math.sin(7*a.time)+(1-equal(a.bass_thresh,2.13))*a.dx_residual;a.dy_residual=.012*equal(a.bass_thresh,2.13)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2.13))*a.dy_residual;a.wave_x-=7*a.dx_residual;a.wave_y-=7*a.dy_residual;a.q1=pow(10,a.zoom);\n","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//rot = rot + 0.10*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\n//cx = cx + 0.410*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\n//cy = cy + 0.410*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\n//dx = dx + 0.03*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\n//dy = dy + 0.03*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\ndecay = decay - 0.01*equal(frame%6,0);\ndx = dx + dx_residual;\ndy = dy + dy_residual;\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\nwave_x = wave_x - dx_residual*7;\nwave_y = wave_y - dy_residual*7;\n//shader stuff\nq1=pow(10,zoom);\n//zoom=1;","pixel_eqs_eel":"//zoom=zoom+(int(rand(256))-int(rand(256)))/25;","warp":"vec4 xlat_mutabletexsize;\n shader_body { \n  vec3 ret_1;\n  xlat_mutabletexsize.zw = (texsize.zw * 4.0);\n  ret_1 = (texture (sampler_main, uv).xyz * ((\n    abs((((\n      ((((\n        ((texture (sampler_blur1, (uv + (xlat_mutabletexsize.zw * vec2(1.0, 0.0)))).xyz * scale1) + bias1)\n       - \n        ((texture (sampler_blur1, (uv + (xlat_mutabletexsize.zw * vec2(0.0, 1.0)))).xyz * scale1) + bias1)\n      ) + (\n        (texture (sampler_blur1, (uv + (xlat_mutabletexsize.zw * vec2(-1.0, 0.0)))).xyz * scale1)\n       + bias1)) - ((texture (sampler_blur1, \n        (uv + (xlat_mutabletexsize.zw * vec2(0.0, -1.0)))\n      ).xyz * scale1) + bias1)) + ((texture (sampler_blur1, (uv + \n        (xlat_mutabletexsize.zw * vec2(0.707106, -0.707106))\n      )).xyz * scale1) + bias1))\n     - \n      ((texture (sampler_blur1, (uv + (xlat_mutabletexsize.zw * vec2(-0.707106, 0.707106)))).xyz * scale1) + bias1)\n    ) + (\n      (texture (sampler_blur1, (uv + (xlat_mutabletexsize.zw * vec2(0.707106, 0.707106)))).xyz * scale1)\n     + bias1)) - ((texture (sampler_blur1, \n      (uv + (xlat_mutabletexsize.zw * vec2(-0.707106, -0.707106)))\n    ).xyz * scale1) + bias1)))\n   * 0.125) + 0.99));\n  ret_1 = (ret_1 * 1.003);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = pow (ret_1, (ret_1 + 0.94));\n  ret_1 = pow (ret_1, (ret_1 + 0.94));\n  ret_1 = pow (ret_1, (ret_1 + 0.94));\n  ret_1 = pow (ret_1, (ret_1 + 0.94));\n  ret_1 = pow (ret_1, (ret_1 + 0.94));\n  ret_1 = pow (ret_1, (ret_1 + 0.94));\n  ret_1 = pow (ret_1, (ret_1 + 0.94));\n  ret_1 = (ret_1 * 6.0);\n  ret_1 = (ret_1 - 0.4);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n//ret=GetPixel(uv_orig+texsize.zw*float2(q6,q7)); \nfloat2 newuv=uv;\nret=GetPixel(newuv);\nfloat3 lum1=0,lum2=0,lum3=0,lum4=0,lum5=0,lum6=0,lum7=0,lum8=0;\nfloat3 mxv=0;\nfloat ro=0.707106;\ntexsize.zw*=4;\nlum1=GetBlur1(newuv+texsize.zw*float2(1,0));\nlum2=GetBlur1(newuv+texsize.zw*float2(0,1));\nlum3=GetBlur1(newuv+texsize.zw*float2(-1,0));\nlum4=GetBlur1(newuv+texsize.zw*float2(0,-1));\nlum5=GetBlur1(newuv+texsize.zw*float2(ro,-ro));\nlum6=GetBlur1(newuv+texsize.zw*float2(-ro,ro));\nlum7=GetBlur1(newuv+texsize.zw*float2(ro,ro));\nlum8=GetBlur1(newuv+texsize.zw*float2(-ro,-ro));\nmxv=abs(lum1-lum2+lum3-lum4+lum5-lum6+lum7-lum8)*0.125;\nret*=mxv+0.99;\nret=ret*1.003;\n\n}","comp_hlsl":"shader_body\n{\nret=GetPixel(uv);\nint i;\nfor(i=0;i<=6;i++)\n{\nret=pow(ret,ret+0.94);\n};\nret*=6;\nret-=0.4;\n}"}