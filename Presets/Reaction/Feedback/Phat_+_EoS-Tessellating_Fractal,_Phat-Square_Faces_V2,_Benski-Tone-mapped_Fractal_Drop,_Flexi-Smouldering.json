{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":0.5,"echo_zoom":1.002,"echo_orient":1,"wave_brighten":0,"invert":1,"wave_a":0.001,"wave_scale":1.002,"wave_smoothing":0.261,"modwavealphastart":0.5,"modwavealphaend":1,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0.005,"ib_a":1,"mv_x":4.586,"mv_y":3.234,"mv_dx":0.122,"mv_dy":0.156,"mv_l":0.212,"mv_r":0.456,"mv_g":0.482,"mv_b":0.329,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":60,"additive":1,"thickoutline":1,"rad":0.39872,"g":1,"b":0.7,"r2":1,"g2":0.8,"border_a":0},"init_eqs_str":"a.bz=0;a.bx=0;a.q1=0;a.by=0;a.ax=0;a.vx=0;a.vy=0;a.vz=0;a.ay=0;a.q2=0;a.q3=0;a.az=0;","frame_eqs_str":"a.ax=0;a.ay=0;a.az=-30;a.bx=a.ax;a.by=a.ay*Math.cos(a.q1)-a.az*Math.sin(a.q1);a.bz=a.ay*Math.sin(a.q1)+a.az*Math.cos(a.q1);a.ax=a.bx*Math.cos(a.q2)-a.bz*Math.sin(a.q2);a.ay=a.by;a.az=a.bx*Math.sin(a.q2)+a.bz*Math.cos(a.q2);a.bx=a.ax*Math.cos(a.q3)-a.ay*Math.sin(a.q3);a.by=a.ax*Math.sin(a.q3)+a.ay*Math.cos(a.q3);a.bz=a.az;a.vx=a.bx;a.vy=a.by;a.vz=a.bz;a.x=div(a.vx,Math.abs(a.vz-10))+.5;a.y=div(a.vy,Math.abs(a.vz-10))+.5;a.x=.5;a.y=.5;a.rad=.1;","init_eqs_eel":"","frame_eqs_eel":"ax=0; ay=0; az=-30;\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\n//a=below(vz,0);\nx=.5;\ny=.5;\nrad=.1;"},{"baseVals":{"enabled":1,"sides":60,"additive":1,"textured":1,"rad":0.29868,"tex_ang":0.69115,"tex_zoom":1.50092,"r":0.2,"g":0.1,"b":1,"a":0,"r2":0.04,"g2":0.05,"b2":0.4,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":60,"additive":1,"textured":1,"rad":1.54304,"tex_ang":1.5707,"tex_zoom":1.50099,"r":0,"g":0.5,"b":0.6,"a":0,"g2":0,"a2":0.7,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.r=Math.abs(Math.cos(3.243*a.time+.434+Math.sin(1.23*a.time+4.324)));a.g=Math.abs(Math.cos(2.03*a.time+1.546+Math.cos(3.01*a.time+1.98)));a.b=.75*Math.abs(Math.sin(2.54*a.time+.65+Math.sin(3.77*a.time+8)));","init_eqs_eel":"","frame_eqs_eel":"r=abs(cos(time*3.243+.434+sin(time*1.23+4.324)));\ng=abs(cos(time*2.03+1.546+cos(time*3.01+1.98)));\nb=.75*abs(sin(time*2.54+.65+sin(time*3.77+8)));"},{"baseVals":{"enabled":1,"sides":6,"additive":1,"rad":0.1149,"g":1,"b":0.7,"r2":1,"g2":0.8,"border_a":0},"init_eqs_str":"a.q8=0;a.t=0;a.an=0;a.q7=0;a.d=0;","frame_eqs_str":"a.q8=-a.q8+1;a.t=mod(a.frame,6)+4;a.sides=.00001<Math.abs(equal(mod(a.t,2),0))?6:60;a.r=.3*equal(a.t,4)+.1*equal(a.t,6)+.3*equal(a.t,8);a.g=.1*equal(a.t,4)+.5*equal(a.t,6)+.15*equal(a.t,8);a.b=.6*equal(a.t,4)+.3*equal(a.t,6)+0*equal(a.t,8);a.r2=.3*equal(a.t,4)+.1*equal(a.t,6)+.3*equal(a.t,8);a.g2=.1*equal(a.t,4)+.5*equal(a.t,6)+.15*equal(a.t,8);a.b2=.6*equal(a.t,4)+.3*equal(a.t,6)+0*equal(a.t,8);a.r+=equal(mod(a.t,2),1);a.g+=equal(mod(a.t,2),1);a.b+=.7*equal(mod(a.t,2),1);a.r2+=\nequal(mod(a.t,2),1);a.g2+=.8*equal(mod(a.t,2),1);a.rad=.1*equal(a.t,4)+.14*equal(a.t,5)+.14*equal(a.t,6)+.18*equal(a.t,7)+.12*equal(a.t,8)+.2*equal(a.t,9);a.an=Math.atan2(a.q8-.5,a.q7-.5);a.ang=2*equal(mod(a.t,2),0)*a.an;a.ang=.00001<Math.abs(equal(a.t,6))?-a.ang:a.ang;a.d=sqrt(sqr(a.q7-.5)+sqr(a.q8-.5));a.a=above(1-a.d,0)*sqrt(1-a.d);a.x=a.t*(.5-a.q7)*.1617+a.q7;a.y=a.t*(.5-a.q8)*.1617+a.q8;","init_eqs_eel":"","frame_eqs_eel":"q8=-q8+1;\nt=(frame%6+4);\nsides=if(equal(t%2,0),6,60);\n\nr=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\ng=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\nb=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\n\nr2=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\ng2=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\nb2=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\n\nr=r+equal(t%2,1);\ng=g+equal(t%2,1);\nb=b+equal(t%2,1)*.7;\n\nr2=r2+equal(t%2,1);\ng2=g2+equal(t%2,1)*.8;\n\nrad=equal(t,4)*.1+equal(t,5)*.14+equal(t,6)*.14+equal(t,7)*.18 +equal(t,8)*.12+equal(t,9)*.2;\n\nan=atan2(q8-.5,q7-.5);\nang=0+equal(t%2,0)*2*an;\nang=if(equal(t,6),-ang,ang);\n\nd=sqrt(sqr(q7-.5)+sqr(q8-.5));\na=above(1-d,0)*sqrt(1-d);\n\nx=t*(.5-q7)*.1617+q7;\ny=t*(.5-q8)*.1617+q8;"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":2.625,"smoothing":0},"init_eqs_str":"a.ax=0;a.ay=0;a.az=0;a.q4=0;a.fx=0;a.fy=0;","frame_eqs_str":"","point_eqs_str":"a.ax=Math.cos(100*a.sample+43.35+Math.sin(231.54*a.sample+.543));a.ay=Math.sin(431*a.sample+2.34+Math.cos(443.54*a.sample+4.23));a.az=Math.sin(546*a.sample+74.24+Math.sin(524.54*a.sample+23.987))+2*(a.q4+.2*a.time-Math.floor(a.q4+.2*a.time));a.az=.00001<Math.abs(above(a.az,1))?a.az-2:a.az;a.fx=.5+div(.5*a.ax,1-a.az);a.fy=.5+div(.5*a.ay,1-a.az);a.x=a.fx;a.y=a.fy;a.r=1-div(.5*rand(100),100);a.g=1-div(.5*rand(100),100);a.b=1-div(.5*rand(100),100);a.a=pow(div(a.az+1,2),3);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ax=cos(100*sample+43.35+sin(231.54*sample+.543));\nay=sin(431*sample+2.34+cos(443.54*sample+4.23));\naz=sin(546*sample+74.24+sin(524.54*sample+23.987))+2*(q4+.2*time-int(q4+.2*time));\naz=if(above(az,1),az-2,az);\n\nfx = .5+.5*ax/(1-az);\nfy = .5+.5*ay/(1-az);\n\nx=fx;\ny=fy;\n\n\nr=1-.5*rand(100)/100;\ng=1-.5*rand(100)/100;\nb=1-.5*rand(100)/100;\n\na=pow((az+1)/2,3);"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"sw1=below(sample,.5);\nsample=2*(sw1*sample+(1-sw1)*(sample-.5));\n\nax = 1-3.58*sample*sw1;\nay = 0;//2*sin(sample*6.2831);\naz = 0;\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\nas=above(cos(q3+1.57)*cos(q2)*vx+sin(q3+1.57)*sin(q1)*vy+sin(q2)*vz,0);\nas=1;\na=1;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw1=below(sample,.5);\nsample=2*(sw1*sample+(1-sw1)*(sample-.5));\n\nax = 1-3.58*sample*sw1;\nay = 0;//2*sin(sample*6.2831);\naz = 0;\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\nas=above(cos(q3+1.57)*cos(q2)*vx+sin(q3+1.57)*sin(q1)*vy+sin(q2)*vz,0);\nas=1;\na=1;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"smoothing":0,"g":0.5,"b":0.1},"init_eqs_str":"a.bz=0;a.bx=0;a.q1=0;a.by=0;a.ax=0;a.vx=0;a.vy=0;a.vz=0;a.ay=0;a.t=0;a.q2=0;a.q3=0;a.as=0;a.az=0;","frame_eqs_str":"","point_eqs_str":"a.t=above(Math.sin(125.662*a.sample+16*a.time),0);a.t=1;a.ax=(1.58+1.5*a.t*Math.abs(a.value1))*Math.cos(6.2831*a.sample);a.ay=1.38*(1.58+1.5*a.t*Math.abs(a.value2))*Math.sin(6.2831*a.sample);a.az=0;a.bx=a.ax;a.by=a.ay*Math.cos(a.q1)-a.az*Math.sin(a.q1);a.bz=a.ay*Math.sin(a.q1)+a.az*Math.cos(a.q1);a.ax=a.bx*Math.cos(a.q2)-a.bz*Math.sin(a.q2);a.ay=a.by;a.az=a.bx*Math.sin(a.q2)+a.bz*Math.cos(a.q2);a.bx=a.ax*Math.cos(a.q3)-a.ay*Math.sin(a.q3);a.by=a.ax*Math.sin(a.q3)+a.ay*Math.cos(a.q3);\na.bz=a.az;a.vx=a.bx;a.vy=a.by;a.vz=a.bz;a.x=div(a.vx,Math.abs(a.vz-10))+.5;a.y=div(a.vy,Math.abs(a.vz-10))+.5;a.as=pow(4*sqrt(sqr(a.x-.5)+sqr(a.y-.5)),4);a.a=a.t*(.07*(1-a.as)+a.as);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t=above(sin(20*6.2831*sample+time*16),0);\nt=1;\nax = (1.58+1.5*t*abs(value1))*cos(6.2831*sample);\nay = 1.38*(1.58+1.5*t*abs(value2))*sin(6.2831*sample);\naz = 0;\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\nas=pow(sqrt(sqr(x-.5)+sqr(y-.5))*4,4);\na=t*(.07*(1-as)+as);"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"smoothing":0,"g":0.5,"b":0.1},"init_eqs_str":"a.bz=0;a.bx=0;a.q1=0;a.by=0;a.ax=0;a.vx=0;a.vy=0;a.vz=0;a.ay=0;a.t=0;a.q2=0;a.q3=0;a.as=0;a.az=0;","frame_eqs_str":"","point_eqs_str":"a.t=above(Math.sin(125.662*a.sample+16*a.time),0);a.t=1;a.ax=(1.58+1.5*a.t*Math.abs(a.value1))*Math.cos(6.2831*a.sample);a.ay=0;a.az=1.38*(1.58+1.5*a.t*Math.abs(a.value2))*Math.sin(6.2831*a.sample);a.bx=a.ax;a.by=a.ay*Math.cos(a.q1)-a.az*Math.sin(a.q1);a.bz=a.ay*Math.sin(a.q1)+a.az*Math.cos(a.q1);a.ax=a.bx*Math.cos(a.q2)-a.bz*Math.sin(a.q2);a.ay=a.by;a.az=a.bx*Math.sin(a.q2)+a.bz*Math.cos(a.q2);a.bx=a.ax*Math.cos(a.q3)-a.ay*Math.sin(a.q3);a.by=a.ax*Math.sin(a.q3)+a.ay*Math.cos(a.q3);\na.bz=a.az;a.vx=a.bx;a.vy=a.by;a.vz=a.bz;a.x=div(a.vx,Math.abs(a.vz-10))+.5;a.y=div(a.vy,Math.abs(a.vz-10))+.5;a.as=pow(4*sqrt(sqr(a.x-.5)+sqr(a.y-.5)),4);a.a=a.t*(.07*(1-a.as)+a.as);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t=above(sin(20*6.2831*sample+time*16),0);\nt=1;\nax = (1.58+1.5*t*abs(value1))*cos(6.2831*sample);\nay = 0;\naz = 1.38*(1.58+1.5*t*abs(value2))*sin(6.2831*sample);\n\nbx = ax;\nby = ay*cos(q1) - az*sin(q1);\nbz = ay*sin(q1) + az*cos(q1);\n\nax = bx*cos(q2) - bz*sin(q2);\nay = by;\naz = bx*sin(q2) + bz*cos(q2);\n\nbx = ax*cos(q3) - ay*sin(q3);\nby = ax*sin(q3) + ay*cos(q3);\nbz = az;\n\nvx=bx; vy=by; vz=bz;\n\nx=vx/abs(vz-10)+.5;\ny=vy/abs(vz-10)+.5;\n\nas=pow(sqrt(sqr(x-.5)+sqr(y-.5))*4,4);\na=t*(.07*(1-as)+as);"}],"init_eqs_str":"a.xpos=0;a.star=0;a.cdelay1=0;a.cdelay2=0;a.q1=0;a.q5=0;a.counter2=0;a.musictime=0;a.q4=0;a.ypos=0;a.colorcounter=0;a.zm=0;a.rd=0;a.ag=0;a.q2=0;a.counter1=0;a.q3=0;","frame_eqs_str":"a.wave_a=0;a.counter1=.00001<Math.abs(equal(a.counter2,1))?.00001<Math.abs(equal(a.counter1,1))?0:a.counter1+.2:1;a.counter2=.00001<Math.abs(equal(a.counter1,1))?.00001<Math.abs(equal(a.counter2,1))?0:a.counter2+.2:1;a.cdelay1=.00001<Math.abs(equal(a.cdelay2,1))?1:.00001<Math.abs(equal(mod(a.colorcounter,2),1))?.00001<Math.abs(equal(a.counter1,1))?2:0:.00001<Math.abs(equal(a.counter2,1))?2:0;a.cdelay2=.00001<Math.abs(equal(a.cdelay1,2))?1:0;a.colorcounter=.00001<Math.abs(above(a.colorcounter,\n7))?0:.00001<Math.abs(equal(a.cdelay1,1))?a.colorcounter+1:a.colorcounter;a.ib_r=.5*(.00001<Math.abs(equal(a.colorcounter,1))?1:.00001<Math.abs(equal(a.colorcounter,2))?1:.00001<Math.abs(equal(a.colorcounter,3))?1:.00001<Math.abs(equal(a.colorcounter,4))?Math.sin(a.counter2+2.1):.00001<Math.abs(equal(a.colorcounter,5))?0:.00001<Math.abs(equal(a.colorcounter,6))?0:Math.sin(a.counter1));a.ib_g=.5*(.00001<Math.abs(equal(a.colorcounter,1))?0:.00001<Math.abs(equal(a.colorcounter,2))?Math.sin(.5*a.counter2):\n.00001<Math.abs(equal(a.colorcounter,3))?Math.sin(.4*(a.counter1+1.75)):.00001<Math.abs(equal(a.colorcounter,4))?1:.00001<Math.abs(equal(a.colorcounter,5))?1:.00001<Math.abs(equal(a.colorcounter,6))?Math.sin(a.counter2+2):0);a.ib_b=.00001<Math.abs(equal(a.colorcounter,1))?Math.sin(a.counter1+2.1):.00001<Math.abs(equal(a.colorcounter,2))?0:.00001<Math.abs(equal(a.colorcounter,3))?0:.00001<Math.abs(equal(a.colorcounter,4))?0:.00001<Math.abs(equal(a.colorcounter,5))?Math.sin(a.counter1):(equal(a.colorcounter,\n6),1);a.ob_r=a.ib_r-.5;a.ob_g=a.ib_g-.5;a.ob_b=a.ib_b-.5;a.q1=a.ib_r;a.q2=a.ib_g;a.q3=a.ib_b;a.decay=.9999;a.musictime+=a.mid*a.mid*a.mid*.02;a.xpos=.3*Math.sin(.6*a.musictime);a.ypos=.3*Math.sin(.4*a.musictime);a.q4=a.xpos;a.q5=a.ypos;","pixel_eqs_str":"a.zoom=.99;a.cx=.5+a.q4;a.cy=.5-a.q5;a.rd=sqrt(sqr(2*(a.x-.5-a.q4))+sqr(1.5*(a.y-.5+a.q5)));a.zm=.99;a.ag=Math.atan(div(a.y-.5+a.q5,a.x-.5-a.q4));a.star=Math.sin(div(a.ag,5))*(2-a.rd);a.zm+=div(a.star,20);a.sx=a.zm;a.sy=a.zm;a.rot=div(.1*div(above(a.rd,.7),a.rd+7)*a.bass_att,a.rd);a.dx=div(.005*Math.sin(50*a.x)*a.bass*a.ag,5*a.rd);a.dy=div(.005*Math.cos(50*a.y)*a.bass*a.ag,5*a.rd);","init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\n\n\n\n//Thanks to Zylot for rainbow generator\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\ncdelay2 = if(equal(cdelay1,2),1,0);\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\nib_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\nib_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\nib_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\n\n\n\nob_r=ib_r-0.5;\nob_g=ib_g-0.5;\nob_b=ib_b-0.5;\n//ib_r=1-ob_r;\n//ib_g=1-ob_g;\n//ib_b=1-ob_b;\nq1=ib_r;\nq2=ib_g;\nq3=ib_b;\n\n\n\ndecay = 0.9999;\n\n\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\n//solarize=above(0.5,bass);\n//darken=above(0.4,treb);\n\nmusictime=musictime+(mid*mid*mid)*0.02;\n\nxpos=sin(musictime*0.6)*0.3;\nypos=sin(musictime*0.4)*0.3;\nq4=xpos;\nq5=ypos","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\n//var=(bass+mid+treb)/3;\n//rot=((ang&rad/rad)/(var*20))/10;\n//sx=.99-(var*0.01);\n//cx=var*0.1*(ang/12);\n//sy=sx;\n\nzoom=.99;\n\ncx=0.5+q4;\ncy=0.5-q5;\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\n//zm=(1.1-(rd/4));\nzm=.99;\n\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\nstar=sin(ag/5)*(2-rd);\nzm=zm+star/20;\nsx=zm;\nsy=zm;\nrot=above(rd,0.7)/(rd+7)*(bass_att*0.1)/rd;\ndx=sin(x*50)*(bass*0.005)*ag/(rd*5);\ndy=cos(y*50)*(bass*0.005)*ag/(rd*5);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) * 0.5));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 12.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.08, 0.08, 0.08));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 plastic_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = q1;\n  tmpvar_5.y = q2;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.x;\n  tmpvar_6.y = tmpvar_4.x;\n  vec2 x_7;\n  x_7 = ((uv - (tmpvar_6 * 4.0)) - tmpvar_5);\n  plastic_1.x = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_7, x_7)), 0.5)\n  )));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_3.y;\n  tmpvar_8.y = tmpvar_4.y;\n  vec2 x_9;\n  x_9 = ((uv - (tmpvar_8 * 4.0)) - tmpvar_5);\n  plastic_1.y = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_9, x_9)), 0.5)\n  )));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_3.z;\n  tmpvar_10.y = tmpvar_4.z;\n  vec2 x_11;\n  x_11 = ((uv - (tmpvar_10 * 4.0)) - tmpvar_5);\n  plastic_1.z = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_11, x_11)), 0.5)\n  )));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = (plastic_1 * texture (sampler_main, uv).xyz);\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // take the difference between the crisp and blurred images,\n    // then add it back into the image.  Creates spots and stripes over time,\n    // basically by breaking up big blocks of white color.\n    ret += (ret - GetBlur1(uv))*0.5;\n    ret *= 0.9;\n\n   // add noise:\n   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n   ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 12 * saturate(treb_att-1);\n\n   // desaturate over time, to keep the globs white\n   ret = lerp(ret, lum(ret), 0.08);\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*8;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n    float2 light_pos = float2(q1,q2);\n    float3 col = float3(4,4,4);\n    float c = 4;\n    float dd = 16;\n    float3 plastic;\n    plastic.x = col.x/(1+dd*pow(length( uv - float2(dx.x,dy.x)*c - light_pos),0.5));\n    plastic.y = col.y/(1+dd*pow(length( uv - float2(dx.y,dy.y)*c - light_pos),0.5));\n    plastic.z = col.z/(1+dd*pow(length( uv - float2(dx.z,dy.z)*c - light_pos),0.5));\n\n    ret = plastic*GetPixel(uv);\n\n}"}