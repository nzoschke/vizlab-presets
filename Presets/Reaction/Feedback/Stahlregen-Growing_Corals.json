{"version":2,"baseVals":{"rating":5,"wave_mode":6,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"wave_a":0.656,"wave_scale":2.217,"wave_smoothing":0,"warpanimspeed":0.167,"warpscale":0.439,"zoomexp":0.74192,"zoom":1.00999,"cy":0.26,"warp":0.02007,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.1,"wave_y":1,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.dy=-.004;a.rot=.002*Math.sin(.2*a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//warp = 0;\ndy = -0.004;\nrot = .002*sin(0.2*time);","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.15, 0.15)));\n  ret_1.yz = tmpvar_2.yz;\n  vec2 tmpvar_3;\n  tmpvar_3.y = 2.0;\n  tmpvar_3.x = (2.0 * rad);\n  ret_1.x = (tmpvar_2.x + fract(texture (sampler_main, (uv + \n    ((tmpvar_3 * texsize.zw) * texture (sampler_main, uv).x)\n  )).x));\n  ret_1.x = (ret_1.x - (0.9 * (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3).x));\n  ret_1.y = 0.0;\n  ret_1.z = 0.0;\n  ret_1 = ((ret_1 * 0.98) - 0.002);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1.x = texture (sampler_main, uv).x;\n  ret_1.yz = vec2(0.0, 0.0);\n  ret_1.z = (0.5 * (ret_1.x * (1.0 - uv.y)));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n\n   // sample previous frame\nret = tex2D( sampler_fc_main, lerp(uv,uv_orig,.15)).xyz;\n\nret.x += frac(GetPixel(uv+float2(2*rad,2)*texsize.zw*GetPixel(uv).x).x);\nret.x -= .9*GetBlur3(uv).x;\n\n//ret.y += frac(GetPixel(uv+float2(2,-2)*texsize.zw*GetPixel(uv).y).y);\n//ret.y -= GetBlur3(uv).y;\nret.y = 0;\n//ret.z += frac(GetPixel(uv+float2(-2,-1)*texsize.zw*GetPixel(uv).z).z);\n//ret.z -= GetBlur3(uv).z;\nret.z = 0;\n\n    // darken (decay) over time\n    ret = (ret*0.98)-.002; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n   // ret *= 2.00; //gamma\n   ret.yz = 0;\n   ret.z += lerp(0,.5,lerp(0,ret.x,1-uv.y));\n}"}