{"version":2,"baseVals":{"rating":5,"//fgammaadj":1,"decay":1,"echo_zoom":1.006596,"echo_orient":3,"wave_mode":2,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"bmotionvectorson":0,"wave_a":0.0001,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"//fshader":0,"//zoom":1.01,"//rot":0.003,"warp":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26},"shapes":[{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1.x = (((\n    ((((texture (sampler_pw_main, uv) + texture (sampler_pw_main, \n      (uv + (texsize.zw * vec2(-1.0, 0.0)))\n    )) + texture (sampler_pw_main, (uv + \n      (texsize.zw * vec2(1.0, 0.0))\n    ))) + texture (sampler_pw_main, (uv + (texsize.zw * vec2(0.0, -1.0))))) + texture (sampler_pw_main, (uv + (texsize.zw * vec2(0.0, -2.0)))))\n   * 42.0).x + (\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  .z * 0.76)) + 0.03);\n  if ((ret_1.x > 18.0)) {\n    ret_1.x = 0.0;\n  };\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_pw_main, uv);\n  ret_1.y = dot (tmpvar_2.xxx, vec3(0.32, 0.49, 0.29));\n  ret_1.z = dot (tmpvar_2.yyy, vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv).xyz;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = vec3(max (max (tmpvar_1.x, tmpvar_1.y), tmpvar_1.z));\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":" shader_body{\n  float2 d=texsize.zw*1;\n  float3 blur=GetBlur1(uv);\n  float3 sum=\n   (\n    tex2D(sampler_pw_main,uv+d*float2(0,0))\n    +tex2D(sampler_pw_main,uv+d*float2(-1,0))\n    +tex2D(sampler_pw_main,uv+d*float2(1,0))\n    +tex2D(sampler_pw_main,uv+d*float2(0,-1))\n   +tex2D(sampler_pw_main,uv+d*float2(0,-2))\n  )*42; // the meaning of life, the universe, everything\n ret.x=(sum.x+blur.z*.76+.03);\n if(ret.x>18)ret.x=0;\n ret.y=lum(tex2D(sampler_pw_main,uv).x); // preparation for combining layers, below\n ret.z=lum(tex2D(sampler_pw_main,uv).y); //    \"  \"\n}","comp_hlsl":"shader_body{\n float2 d = texsize.zw*1;\n float3 col=GetPixel(uv);\n ret=max(max(col.x,col.y),col.z); // combine layers to reduce flashing\n}"}