{"version":2,"baseVals":{"rating":5,"gammaadj":0.9,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":2,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"wave_a":4.142,"wave_scale":3.511,"wave_smoothing":0.648,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":0.3,"zoom":0.9995,"warp":0.01,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0.7,"mv_g":0.7,"mv_b":0.7,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"thickoutline":1,"textured":1,"rad":0.66231,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.r=a.q1;a.b=a.q2;a.g=a.q3;a.r2=1-Math.abs(a.q1);a.b2=a.q2;a.g2=a.q3;a.ang+=12*Math.tan(a.time);a.x+=.15*Math.sin(a.time);a.y+=.15*Math.cos(a.time);a.a=.5+.5*Math.sin(a.bass_att);","init_eqs_eel":"","frame_eqs_eel":"r = q1;\nb = q2;\ng = q3;\nr2 = 1-abs(q1);\nb2 = q2;\ng2 = q3;\nang = ang + 12*tan(time);\nx = x + 0.15*sin(time);\ny = y + 0.15*cos(time);\na = 0.5 + 0.5*sin(bass_att);\n//a2 = 0.5 + 0.5*cos(bass_att);"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.8,"rad":1.08925,"tex_zoom":0.74192,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//this shape is a hidden trick...","init_eqs_eel":"","frame_eqs_eel":"//this shape is a hidden trick..."},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.beat=0;a.rad=0;a.ang=0;","frame_eqs_str":"a.wave_r+=.35*(.6*Math.sin(.825*a.time)+.4*Math.sin(.915*a.time));a.wave_g+=.35*(.6*Math.sin(.9*a.time)+.4*Math.sin(1.025*a.time));a.wave_b+=.35*(.6*Math.sin(.81*a.time)+.4*Math.sin(.95*a.time));a.wave_y+=.2*Math.sin(1.85*a.time);a.wave_x=.00001<Math.abs(a.beat)?.5:.2;a.cx=a.cx+.225*(.6*Math.sin(.35*a.time)+.4*Math.sin(.35*a.time))+(a.wave_x+.15*Math.sin(2.112*a.time)+.4*Math.sin(1.589*a.time))+(a.sx+.07*Math.sin(18*a.rad+9*a.time))+(a.zoom+.005*Math.tan(a.ang-a.ang));a.cy=\na.cy+.225*(.6*Math.sin(.35*a.time)+.4*Math.sin(.35*a.time))+(a.wave_y+.15*Math.sin(1.752*a.time)+.4*Math.sin(2.298*a.time))+(a.sy+.07*Math.sin(18*a.rad+9*a.time))+(a.zoom+.005*Math.tan(a.ang-a.ang));a.dx=.005+.002*(.6*Math.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.dy=.005+.002*(.6*Math.sin(.234*a.time)+.4*Math.sin(.277*a.time));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.825*time) + 0.40*sin(0.915*time) );\nwave_g = wave_g + 0.350*( 0.60*sin(0.900*time) + 0.40*sin(1.025*time) );\nwave_b = wave_b + 0.350*( 0.60*sin(0.810*time) + 0.40*sin(0.950*time) );\nwave_y = wave_y + 0.2*sin(1.85*time);\nwave_x = if(beat,.5,.2);\ncx = cx + 0.225*( 0.60*sin(0.350*time) + 0.40*sin(0.350*time) )+(wave_x + 0.250*( 0.60*sin(2.112*time)) + 0.40*sin(1.589*time) )+(sx+0.07*sin(rad*18 + time*9))+(zoom + 0.005*tan(ang-ang));\ncy = cy + 0.225*( 0.60*sin(0.350*time) + 0.40*sin(0.350*time) )+(wave_y + 0.250*( 0.60*sin(1.752*time)) + 0.40*sin(2.298*time) )+(sy+0.07*sin(rad*18 + time*9))+(zoom + 0.005*tan(ang-ang));\ndx = 0.005 + 0.002*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\ndy = 0.005 + 0.002*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 112.0));\n  ret_1 = ((mix (ret_1, vec3(\n    dot (ret_1, vec3(0.32, 0.49, 0.29))\n  ), vec3(0.2, 0.2, 0.2)) - 0.02) * 0.97);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * treb_att))\n  ), pow (hue_shader.xzy, vec3(bass_att))));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // take the difference between the crisp and blurred images,\n    // then add it back into the image.  Creates spots and stripes over time.\n    ret += (ret - GetBlur2(uv))*0.3;\n    ret *= 0.9;\n\n    // add noise:\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 112;\n\n    // desaturate over time, to keep the globs white\n    ret = lerp(ret, lum(ret), 0.2);\n    ret = (ret-0.02)*0.97;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)*treb_att),pow(hue_shader.xzy,bass_att));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}