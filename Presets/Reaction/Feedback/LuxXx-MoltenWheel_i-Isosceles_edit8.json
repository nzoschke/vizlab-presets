{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"wave_a":0.04,"wave_scale":0.6,"wave_smoothing":0,"wave_mystery":0.16,"modwavealphastart":0,"warpanimspeed":0.01,"warpscale":1.611,"rot":0.004,"warp":0.12532,"wave_r":0.8,"wave_g":0.8,"wave_b":0.6,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":40,"thickoutline":1,"textured":1,"rad":0.40271,"r":0,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\nvol=(bass+mid+treb_att)*.3333;\n\nredsine=.5+.15*bass*sin(time*3);\ngreensine=.5+.15*mid*sin(time*2);\nbluesine=.5+.15*treb*sin(time);\n\nredif=if(above(bass,1.2),redsine,if(above(redif,.95),0,redif*.85));\ngreenif=if(above(mid,1.2),greensine,if(above(greenif,.95),0,greenif*.85));\nblueif=if(above(treb,1.2),bluesine,if(above(blueif,.95),0,blueif*.85));\n\nr=redif;\ng=greenif;\nb=blueif;\n\nr2=sin(time*.47);\ng2=sin(time*.72);\nb2=sin(time*.33);\n\ntex_ang=3.14+3.14*sin(time*.42);\nang=3.14+3.14*sin(time*.55);","init_eqs_eel":"","frame_eqs_eel":"\nvol=(bass+mid+treb_att)*.3333;\n\nredsine=.5+.15*bass*sin(time*3);\ngreensine=.5+.15*mid*sin(time*2);\nbluesine=.5+.15*treb*sin(time);\n\nredif=if(above(bass,1.2),redsine,if(above(redif,.95),0,redif*.85));\ngreenif=if(above(mid,1.2),greensine,if(above(greenif,.95),0,greenif*.85));\nblueif=if(above(treb,1.2),bluesine,if(above(blueif,.95),0,blueif*.85));\n\nr=redif;\ng=greenif;\nb=blueif;\n\nr2=sin(time*.47);\ng2=sin(time*.72);\nb2=sin(time*.33);\n\ntex_ang=3.14+3.14*sin(time*.42);\nang=3.14+3.14*sin(time*.55);"},{"baseVals":{"additive":1,"textured":1,"r":0,"b":0.1,"a":0.7,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=rand(10)*.1;\ny=rand(10)*.1;\n\nvol=(bass+mid+treb)*.3333;\n\ntextured=above(vol,1.4);\nr=if(above(bass*2,mid+treb),.4,0);\ng=if(above(mid*2,treb+bass),.6,0);\nb=if(above(treb*2,bass+mid),.9,0);","init_eqs_eel":"","frame_eqs_eel":"x=rand(10)*.1;\ny=rand(10)*.1;\n\nvol=(bass+mid+treb)*.3333;\n\ntextured=above(vol,1.4);\nr=if(above(bass*2,mid+treb),.4,0);\ng=if(above(mid*2,treb+bass),.6,0);\nb=if(above(treb*2,bass+mid),.9,0);"},{"baseVals":{"sides":40,"additive":1,"textured":1,"rad":1.7914,"tex_zoom":0.55044,"r":0.1,"g":0.1,"b":0.1,"r2":0.1,"g2":0.1,"b2":0.1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"additive=above(bass,.55);","init_eqs_eel":"","frame_eqs_eel":"additive=above(bass,.55);"},{"baseVals":{"textured":1,"b":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":2,"scaling":6.62307,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.decay=.98;a.zoom=1.002;a.q1=.9*a.time;","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"decay=0.98;\nzoom=1.002;\n\nq1=time*0.9;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 2.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.y;\n  vec2 tmpvar_6;\n  tmpvar_6 = fract(((\n    (0.5 + ((uv - 0.5) * 0.996))\n   - \n    (vec2(0.0, 1.0) * texsize.zw)\n  ) - (\n    (tmpvar_5 * texsize.zw)\n   * 4.0)));\n  ret_1.x = texture (sampler_main, tmpvar_6).x;\n  ret_1.x = (ret_1.x + ((\n    (ret_1.x - ((texture (sampler_blur2, tmpvar_6).xyz * scale2) + bias2))\n  .x * 0.4) + 0.004));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.y;\n  tmpvar_7.y = tmpvar_4.y;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_4.z;\n  tmpvar_8.y = -(tmpvar_3.z);\n  ret_1.y = max (((\n    clamp ((((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1).x - 0.4), 0.0, 1.0)\n   * 1.2) * ret_1.x), (texture (sampler_fc_main, (\n    ((uv + (vec2(0.0, 2.0) * texsize.zw)) - ((tmpvar_7 * texsize.zw) * 2.0))\n   + \n    ((tmpvar_8 * texsize.zw) * 16.0)\n  )).y - 0.004));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_1;\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv).xxx;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((pow (\n    mix (vec3((((texture (sampler_blur1, uv).xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)), tmpvar_1, tmpvar_1)\n  , vec3(0.3, 0.9, 8.0)) * 1.25) - 0.25);\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    float2 d = texsize.zw*2;\n    float3 dx = ( GetBlur1(uv_orig+float2(1,0)*d)-GetBlur1(uv_orig-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv_orig+float2(0,1)*d)-GetBlur1(uv_orig-float2(0,1)*d) );\n\nfloat2 uv_red = 0.5 + (uv-0.5)*0.996 - float2(0,1)*texsize.zw - float2(dx.x,dy.y)*texsize.zw*4;\n\nuv_red = frac(uv_red); // fix for the old Radeons\n    ret.x = tex2D( sampler_main, uv_red ).x;\n    ret.x += (ret.x - GetBlur2(uv_red)).x*0.4 + 0.004;\n\nfloat2 uv_green = lerp(uv_orig,uv,1) + float2(0,2)*texsize.zw - float2(dx.y,dy.y)*texsize.zw*2 + float2(dy.z,-dx.z)*texsize.zw*16;\n\nret.y = max(saturate(GetBlur1(uv_orig).x-0.4)*1.2*ret.x, tex2d(sampler_fc_main,uv_green).y - 0.004);\n}","comp_hlsl":"shader_body\n{\n\nret = tex2D(sampler_main, uv).x,\n\nret = lerp (\nGetBlur1(uv).x + GetBlur3(uv).x,\nret,\npow(ret,1));\n  \n//  ret = tex2D(sampler_main, uv).x - GetBlur1(uv).x;\n    ret = pow(ret,float3(.3,.9,8))*1.25 - .25;\n    ret *= 1.0; //gamma\n//ret = tex2D(sampler_main, uv);\n \n}"}