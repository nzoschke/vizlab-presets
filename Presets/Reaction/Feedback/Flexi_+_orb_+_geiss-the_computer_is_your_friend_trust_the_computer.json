{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wrap":0,"wave_a":0.001,"warpanimspeed":0.01,"warpscale":1.47,"zoomexp":1.34784,"zoom":0.99816,"warp":0.01,"sx":1.00183,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_r":0.51,"ib_size":0.26,"mv_x":64,"mv_y":4.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0.25,"y":0.25,"rad":1.10444,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.q1=0;a.tex_capture=0;a.q8=0;a.tex_saw=.4;","frame_eqs_str":"a.ang=.2*a.q1;a.tex_capture=1;a.tex_zoom=a.q8;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n//x = 0.5 + 0.2*sin(q2);\n//y = 0.5 + (0.3*sin(q2));\n\ntex_capture = 1;//above(q3,2);\ntex_zoom = q8;"},{"baseVals":{"enabled":1,"textured":1,"x":0.75,"y":0.75,"rad":0.99983,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.q1=0;a.tex_capture=0;a.q3=0;a.tex_saw=.4;","frame_eqs_str":"a.ang=.2*a.q1;a.tex_capture=above(a.q3,2);a.tex_zoom=.6;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n//x = 0.5 + 0.2*sin(q2);\n//y = 0.5 + (0.3*sin(q2));\n\ntex_capture = above(q3,2);\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"textured":1,"x":0.4,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.q1=0;a.tex_capture=0;a.q3=0;a.tex_saw=.4;","frame_eqs_str":"a.ang=.2*a.q1;a.tex_capture=above(a.q3,1);a.tex_zoom=.4;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n//x = 0.5 + 0.2*sin(q2);\n//y = 0.5 + (0.3*sin(q2));\n\ntex_capture = above(q3,1);\ntex_zoom = 0.4;"},{"baseVals":{"enabled":1,"sides":100,"rad":0.98608,"r":0,"a":0,"g2":0,"a2":0.2,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.x=.5+.4*Math.sin(.45*a.q1);a.y=.5+.4*Math.sin(.5*a.q1);a.r2=.5+.5*Math.sin(.458*a.q1);a.g2=.5+.5*Math.sin(.858*a.q1);a.b2=.5+.5*Math.sin(.658*a.q1);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 +  0.4*sin(q1*0.45);\ny = 0.5 +  0.4*sin(q1*0.5);\n\nr2 = 0.5 + 0.5*sin(q1 *0.458);\ng2 = 0.5 + 0.5*sin(q1 *0.858);\nb2 = 0.5 + 0.5*sin(q1 *0.658);"}],"waves":[{"baseVals":{"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"a":0.5,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"//init\nzs = if(below(zs,1),9,zs);\n\nzs = if(above(zs, 1300),1, zs);\n\nspeed = bass*0.002;\n\nxcoef = equal(q4,0)*2 + equal(q4,1)*2.1  + equal(q4,2)*2.2 + equal(q4,3)*2.3 + equal(q4,4)*2.4 + equal(q4,5)*2.5;\n\n//sum\nzs = zs + tan(q1*0.015)*speed;\n\n\ncount = count + 0.0001;\ncount = if(above(count,6.24),0,count);\n\n//project\nx = 0.1*cos(q1*zs*2 + 0.1);\ny = 0.1*sin(q1*zs*1 + 0.1);\n\n//rotate\nx = x*cos(-q1*3)*0.8 - y*sin(-q1*3)*0.8;\ny = x*sin(-q1*3) + y*cos(-q1*3);\n\n//move\nx = x + q6 + 0.5;\ny = y + q7 + 0.5;\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,1),9,zs);\n\nzs = if(above(zs, 1300),1, zs);\n\nspeed = bass*0.002;\n\nxcoef = equal(q4,0)*2 + equal(q4,1)*2.1  + equal(q4,2)*2.2 + equal(q4,3)*2.3 + equal(q4,4)*2.4 + equal(q4,5)*2.5;\n\n//sum\nzs = zs + tan(q1*0.015)*speed;\n\n\ncount = count + 0.0001;\ncount = if(above(count,6.24),0,count);\n\n//project\nx = 0.1*cos(q1*zs*2 + 0.1);\ny = 0.1*sin(q1*zs*1 + 0.1);\n\n//rotate\nx = x*cos(-q1*3)*0.8 - y*sin(-q1*3)*0.8;\ny = x*sin(-q1*3) + y*cos(-q1*3);\n\n//move\nx = x + q6 + 0.5;\ny = y + q7 + 0.5;\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.dt=0;a.q1=0;a.dm=0;a.mm=0;a.tt=0;a.db=0;a.bb=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.zoom=1;a.db=.75*a.db+.25*a.bass_att;a.bb+=.1*a.db;a.dt=.75*a.dt+.25*a.treb_att;a.tt+=.1*a.dt;a.dm=.75*a.dm+.25*a.mid_att;a.mm+=.1*a.dm;a.q2=Math.sin(.225*a.bb+a.time-.25*a.tt);a.q3=Math.cos(.25*a.bb+a.time-.235*a.tt);a.q1=.2+.9*Math.sin(.25*a.mm+a.time-.125*a.tt-.125*a.bb);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//decay=.1+abs(sin(time*.3)*.8);\nzoom=1;\ndb = .75 * db + .25 * bass_att;\nbb = bb + .1 * db;\ndt = .75 * dt + .25 * treb_att;\ntt = tt + .1 * dt;\ndm = .75 * dm + .25 * mid_att;\nmm = mm + .1 * dm;\n \nq2 = sin(.225*bb+time-.25*tt);\nq3 = cos(.25*bb+time-.235*tt);\nq1 = .2+.9*sin(.25*mm+time-.125*tt-.125*bb);","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.6));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 12.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.08, 0.08, 0.08));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = rad;\n  tmpvar_3.y = uv.y;\n  uv_1 = (((2.0 + roam_cos).xy * tmpvar_3) - (0.5 * roam_cos).xy);\n  vec2 tmpvar_4;\n  tmpvar_4 = floor((fract(\n    (uv_1 * 0.5)\n  ) * 2.0));\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_4)) + (tmpvar_4 * fract(\n    (1.0 - uv_1)\n  )));\n  vec2 tmpvar_5;\n  tmpvar_5.x = q2;\n  tmpvar_5.y = q3;\n  vec2 tmpvar_6;\n  tmpvar_6 = (((uv_1 - 0.5) * tmpvar_5) + 0.5);\n  vec3 tmpvar_7;\n  tmpvar_7 = mix ((texture (sampler_main, uv_1).xyz * clamp (\n    ((((texture (sampler_blur2, uv_1).xyz * scale2) + bias2) * 2.8) - 0.13)\n  , 0.0, 1.0)), (texture (sampler_main, tmpvar_6).xyz * clamp (\n    ((((texture (sampler_blur2, tmpvar_6).xyz * scale2) + bias2) * 2.8) - 0.13)\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\n  ret_2 = (tmpvar_7 * tmpvar_7);\n  ret_2 = (ret_2 * vec3(0.9, 1.6, 2.3));\n  ret_2 = (ret_2 * 2.5);\n  vec3 tmpvar_8;\n  tmpvar_8 = pow (ret_2, (1.0 - ret_2));\n  ret_2 = tmpvar_8;\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = tmpvar_8;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // take the difference between the crisp and blurred images,\n    // then add it back into the image.  Creates spots and stripes over time.\n    ret += (ret - GetBlur2(uv))*0.6;\n    ret *= 0.9;\n\n   // add noise:\n   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n   ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 12 * saturate(treb_att-1);\n\n   // desaturate over time, to keep the globs white\n   ret = lerp(ret, lum(ret), 0.08);\n}","comp_hlsl":"shader_body\n{\n\n\n//Phat\nuv = float2(rad,uv.y);\n\n//Flexi\nuv = (2+roam_cos)*uv-.5*roam_cos;\nfloat2 m = floor(frac(uv*0.5)*2);\nuv = frac(uv)*(1-m) + (m)*frac(1-uv);\n\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(q2,q3) + 0.5;\n    ret = lerp(tex2D(sampler_main, uv).xyz*+saturate(GetBlur2(uv)*2.8 - 0.13),\n    tex2D(sampler_main, uv_echo).xyz*+saturate(GetBlur2(uv_echo)*2.8 - 0.13),.5);\n    //ret = abs(ret-ret2);\n    ret *= ret; //darken\n    ret *= float3(.9,1.6,2.3);\n    ret *= 2.5; //gamma\n    ret = pow(ret,1-ret);\n    //ret *= 2;\n    //ret = pow(ret,5);\n    \n}"}