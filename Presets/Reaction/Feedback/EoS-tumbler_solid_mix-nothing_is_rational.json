{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"additive":1,"textured":1,"rad":1.08925,"tex_zoom":0.90529,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"additive":1,"g":0.6,"b":0.2},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.s=0;a.t5=0;a.yp=0;a.t1=0;a.q6=0;a.xq=0;a.zq=0;a.ang=0;a.zp=0;a.mtime=0;a.s=0;","frame_eqs_str":"a.t1=a.q6;a.t5=0;","point_eqs_str":"a.n=6.283*a.sample;a.s+=1;a.s=.00001<Math.abs(equal(a.s,4))?0:a.s;a.xp=-.25;a.xp=.00001<Math.abs(equal(a.s,1))?.25:a.xp;a.xp=.00001<Math.abs(equal(a.s,2))?.25:a.xp;a.xp=.00001<Math.abs(equal(a.s,3))?-.25:a.xp;a.yp=.25;a.yp=.00001<Math.abs(above(a.s,1.9))?.75:a.yp;a.zp=0;a.yp-=.475;a.ang=.25*a.n+8*a.q6;a.xq=a.xp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=.9*a.t1;a.xp=a.xq;a.yp=a.yq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);\na.zp=a.yq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.xq=a.xp;a.yq=a.yp;a.zq=a.zp;a.ang=.2*a.t1;a.xq=a.xp*Math.sin(a.ang)+a.yp*Math.cos(a.ang);a.yq=a.xp*Math.cos(a.ang)-a.yp*Math.sin(a.ang);a.zq=a.zp;a.xp=a.xq+.6*Math.sin(a.t1);a.yp=a.yq+.6*Math.sin(.9*a.t1);a.zp=a.zq+.6*Math.sin(.7*a.t1);a.zp+=1.7;a.x=.3*div(a.xp,a.zp)+.5;a.y=.39*div(a.yp,a.zp)+.5;a.a=.1*Math.min(a.bass*a.bass,1);","init_eqs_eel":"mtime=0;\ns=0","frame_eqs_eel":"t1=q6;\nt5=0","point_eqs_eel":"n=sample*6.283;\n\n//cycle initial shape\ns=s+1;\ns= if( equal(s,4) , 0 , s);\n\nxp= -0.25;\nxp= if( equal(s,1) , 0.25 , xp );\nxp= if( equal(s,2) , 0.25 , xp );\nxp= if( equal(s,3) ,-0.25 , xp );\nyp= 0.25;\nyp= if( above(s,1.9) , 0.75 , yp );\n\n//xp= if( below(s,0.25) , s , 0.25);\n//xp= if( above(s,0.75) , 1-s, xp );\n//yp= if( below(s,0.25) , 0.25, s );\n//yp= if( above(s,0.75) , 0.75, yp);\nzp=0;\n\nyp=yp-0.475;\n\n//rotate on y axis during fram\nang=n*0.25 + q6*8;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x axis\nang=t1*0.9;\nxp=xq;\nyp=yq*sin(ang) + zq*cos(ang);\nzp=yq*cos(ang) - zq*sin(ang);\n\nxq=xp;\nyq=yp;\nzq=zp;\nang=t1*0.2;\nxq=xp*sin(ang) + yp*cos(ang);\nyq=xp*cos(ang) - yp*sin(ang);\nzq=zp;\n\nxp=xq + sin(t1)*0.6;\nyp=yq + sin(t1*0.9)*0.6;\nzp=zq + sin(t1*0.7)*0.6;\n\nzp=zp+1.7;\n\n\nx=(xp/zp)*0.3 + 0.5;\ny=(yp/zp)*1.3*0.3 + 0.5;\na=min(bass*bass,1)*0.1"},{"baseVals":{"enabled":1,"additive":1,"r":0.5,"b":0.7},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.s=0;a.yp=0;a.t1=0;a.xq=0;a.zq=0;a.ang=0;a.zp=0;a.q7=0;a.mtime=0;","frame_eqs_str":"a.t1=a.q7;","point_eqs_str":"a.n=6.283*a.sample;a.s+=1;a.s=.00001<Math.abs(equal(a.s,4))?0:a.s;a.xp=-.25;a.xp=.00001<Math.abs(equal(a.s,1))?.25:a.xp;a.xp=.00001<Math.abs(equal(a.s,2))?.25:a.xp;a.xp=.00001<Math.abs(equal(a.s,3))?-.25:a.xp;a.yp=.25;a.yp=.00001<Math.abs(above(a.s,1.9))?.75:a.yp;a.zp=0;a.yp-=.475;a.ang=.25*a.n+8*a.q7;a.xq=a.xp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=a.t1;a.xp=a.xq;a.yp=a.yq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);a.zp=\na.yq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.xq=a.xp;a.yq=a.yp;a.zq=a.zp;a.ang=a.t1;a.xq=a.xp*Math.sin(a.ang)+a.yp*Math.cos(a.ang);a.yq=a.xp*Math.cos(a.ang)-a.yp*Math.sin(a.ang);a.zq=a.zp;a.xp=a.xq+.6*Math.sin(a.t1);a.yp=a.yq+.6*Math.sin(.9*a.t1);a.zp=a.zq+.6*Math.sin(.7*a.t1);a.zp+=1.7;a.x=.3*div(a.xp,a.zp)+.5;a.y=.39*div(a.yp,a.zp)+.5;a.a=.1*Math.min(a.mid*a.mid,1);","init_eqs_eel":"mtime=0","frame_eqs_eel":"t1=q7","point_eqs_eel":"n=sample*6.283;\n\n//cycle initial shape\ns=s+1;\ns= if( equal(s,4) , 0 , s);\n\nxp= -0.25;\nxp= if( equal(s,1) , 0.25 , xp );\nxp= if( equal(s,2) , 0.25 , xp );\nxp= if( equal(s,3) ,-0.25 , xp );\nyp= 0.25;\nyp= if( above(s,1.9) , 0.75 , yp );\n\n//xp= if( below(s,0.25) , s , 0.25);\n//xp= if( above(s,0.75) , 1-s, xp );\n//yp= if( below(s,0.25) , 0.25, s );\n//yp= if( above(s,0.75) , 0.75, yp);\nzp=0;\n\nyp=yp-0.475;\n\n//rotate on y axis during fram\nang=n*0.25 + q7*8;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x axis\nang=t1;\nxp=xq;\nyp=yq*sin(ang) + zq*cos(ang);\nzp=yq*cos(ang) - zq*sin(ang);\n\nxq=xp;\nyq=yp;\nzq=zp;\nang=t1;\nxq=xp*sin(ang) + yp*cos(ang);\nyq=xp*cos(ang) - yp*sin(ang);\nzq=zp;\n\nxp=xq + sin(t1)*0.6;\nyp=yq + sin(t1*0.9)*0.6;\nzp=zq + sin(t1*0.7)*0.6;\n\nzp=zp+1.7;\n\n\nx=(xp/zp)*0.3 + 0.5;\ny=(yp/zp)*1.3*0.3 + 0.5;\na=min(mid*mid,1)*0.1;"},{"baseVals":{"enabled":1,"additive":1,"r":0.3,"g":0.6},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.s=0;a.yp=0;a.t1=0;a.xq=0;a.zq=0;a.ang=0;a.zp=0;a.q8=0;a.mtime=0;","frame_eqs_str":"a.t1=a.q8;","point_eqs_str":"a.n=6.283*a.sample;a.s+=1;a.s=.00001<Math.abs(equal(a.s,4))?0:a.s;a.xp=-.25;a.xp=.00001<Math.abs(equal(a.s,1))?.25:a.xp;a.xp=.00001<Math.abs(equal(a.s,2))?.25:a.xp;a.xp=.00001<Math.abs(equal(a.s,3))?-.25:a.xp;a.yp=.25;a.yp=.00001<Math.abs(above(a.s,1.9))?.75:a.yp;a.zp=0;a.yp-=.475;a.ang=.25*a.n+8*a.q8;a.xq=a.xp*Math.sin(a.ang)+a.zp*Math.cos(a.ang);a.yq=a.yp;a.zq=a.xp*Math.cos(a.ang)-a.zp*Math.sin(a.ang);a.ang=.9*a.t1;a.xp=a.xq;a.yp=a.yq*Math.sin(a.ang)+a.zq*Math.cos(a.ang);\na.zp=a.yq*Math.cos(a.ang)-a.zq*Math.sin(a.ang);a.xq=a.xp;a.yq=a.yp;a.zq=a.zp;a.ang=.2*a.t1;a.xq=a.xp*Math.sin(a.ang)+a.yp*Math.cos(a.ang);a.yq=a.xp*Math.cos(a.ang)-a.yp*Math.sin(a.ang);a.zq=a.zp;a.xp=a.xq+.6*Math.sin(a.t1);a.yp=a.yq+.6*Math.sin(.9*a.t1);a.zp=a.zq+.6*Math.sin(.7*a.t1);a.zp+=1.7;a.x=.3*div(a.xp,a.zp)+.5;a.y=.39*div(a.yp,a.zp)+.5;a.a=.1*Math.min(a.treb*a.treb,1);","init_eqs_eel":"mtime=0","frame_eqs_eel":"t1=q8","point_eqs_eel":"n=sample*6.283;\n\n//cycle initial shape\ns=s+1;\ns= if( equal(s,4) , 0 , s);\n\nxp= -0.25;\nxp= if( equal(s,1) , 0.25 , xp );\nxp= if( equal(s,2) , 0.25 , xp );\nxp= if( equal(s,3) ,-0.25 , xp );\nyp= 0.25;\nyp= if( above(s,1.9) , 0.75 , yp );\n\n//xp= if( below(s,0.25) , s , 0.25);\n//xp= if( above(s,0.75) , 1-s, xp );\n//yp= if( below(s,0.25) , 0.25, s );\n//yp= if( above(s,0.75) , 0.75, yp);\nzp=0;\n\nyp=yp-0.475;\n\n//rotate on y axis during fram\nang=n*0.25 + q8*8;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x axis\nang=t1*0.9;\nxp=xq;\nyp=yq*sin(ang) + zq*cos(ang);\nzp=yq*cos(ang) - zq*sin(ang);\n\nxq=xp;\nyq=yp;\nzq=zp;\nang=t1*0.2;\nxq=xp*sin(ang) + yp*cos(ang);\nyq=xp*cos(ang) - yp*sin(ang);\nzq=zp;\n\nxp=xq + sin(t1)*0.6;\nyp=yq + sin(t1*0.9)*0.6;\nzp=zq + sin(t1*0.7)*0.6;\n\nzp=zp+1.7;\n\n\nx=(xp/zp)*0.3 + 0.5;\ny=(yp/zp)*1.3*0.3 + 0.5;\na=min(treb*treb,1)*0.1;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"//average location of cylinders\nx1=sin(q6)*0.6;\ny1=sin(q6*0.9)*0.6;\nz1=sin(q6*0.7)*0.6;\n\nx2=sin(q7)*0.6;\ny2=sin(q7*0.9)*0.6;\nz2=sin(q7*0.7)*0.6;\n\nx3=sin(q8)*0.6;\ny3=sin(q8*0.9)*0.6;\nz3=sin(q8*0.7)*0.6;\n\nxa=(x1+x2+x3)/3;\nya=(y1+y2+y3)/3;\nza=(z1+z2+z3)/3;\n\nt1=xa;\nt2=ya;\nt3=za;\n\nmtime=(q6+q7+q8)/3;\nt8=mtime","point_eqs_str":"n=sample*6.283;\n\n//cycle initial shape\nsc=sample*32;\ns=sc - int(sc);\n\nxp= if( below(s,0.25) , s , 0.25);\nxp= if( above(s,0.75) , 1-s, xp )*0.3;\nyp= if( below(s,0.25) , 0.25, s );\nyp= if( above(s,0.75) , 0.75, yp)*0.3;\nzp=0;\n\nyp=yp-0.475;\n\n//rotate on y axis during fram\nang=n;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x axis\nang=t8*0.9;\nxp=xq;\nyp=yq*sin(ang) + zq*cos(ang);\nzp=yq*cos(ang) - zq*sin(ang);\n\nxq=xp;\nyq=yp;\nzq=zp;\nang=t8*0.2;\nxq=xp*sin(ang) + yp*cos(ang);\nyq=xp*cos(ang) - yp*sin(ang);\nzq=zp;\n\nxp=xq +t1;\nyp=yq +t2;\nzp=zq +t3;\n\nzp=zp+1.1;\n\n\nx=(xp/zp)*0.3 + 0.5;\ny=(yp/zp)*1.3*0.3 + 0.5;\na=min(treb*treb,1)*0.6;\na=min(pow((bass+mid+treb)*0.15,2) , 1)*0.3","init_eqs_eel":"","frame_eqs_eel":"//average location of cylinders\nx1=sin(q6)*0.6;\ny1=sin(q6*0.9)*0.6;\nz1=sin(q6*0.7)*0.6;\n\nx2=sin(q7)*0.6;\ny2=sin(q7*0.9)*0.6;\nz2=sin(q7*0.7)*0.6;\n\nx3=sin(q8)*0.6;\ny3=sin(q8*0.9)*0.6;\nz3=sin(q8*0.7)*0.6;\n\nxa=(x1+x2+x3)/3;\nya=(y1+y2+y3)/3;\nza=(z1+z2+z3)/3;\n\nt1=xa;\nt2=ya;\nt3=za;\n\nmtime=(q6+q7+q8)/3;\nt8=mtime","point_eqs_eel":"n=sample*6.283;\n\n//cycle initial shape\nsc=sample*32;\ns=sc - int(sc);\n\nxp= if( below(s,0.25) , s , 0.25);\nxp= if( above(s,0.75) , 1-s, xp )*0.3;\nyp= if( below(s,0.25) , 0.25, s );\nyp= if( above(s,0.75) , 0.75, yp)*0.3;\nzp=0;\n\nyp=yp-0.475;\n\n//rotate on y axis during fram\nang=n;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//rotate on x axis\nang=t8*0.9;\nxp=xq;\nyp=yq*sin(ang) + zq*cos(ang);\nzp=yq*cos(ang) - zq*sin(ang);\n\nxq=xp;\nyq=yp;\nzq=zp;\nang=t8*0.2;\nxq=xp*sin(ang) + yp*cos(ang);\nyq=xp*cos(ang) - yp*sin(ang);\nzq=zp;\n\nxp=xq +t1;\nyp=yq +t2;\nzp=zq +t3;\n\nzp=zp+1.1;\n\n\nx=(xp/zp)*0.3 + 0.5;\ny=(yp/zp)*1.3*0.3 + 0.5;\na=min(treb*treb,1)*0.6;\na=min(pow((bass+mid+treb)*0.15,2) , 1)*0.3"}],"init_eqs_str":"a.btime=0;a.mtime=0;a.ttime=0;a.q6=0;a.q7=0;a.q8=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;a.btime=0;a.mtime=0;a.ttime=0;","frame_eqs_str":"a.decay=.95;a.zoom=.995;a.warp=0;a.btime+=a.bass*a.bass*a.bass*.005;a.mtime+=a.mid*a.mid*a.mid*.005;a.ttime+=a.treb*a.treb*a.treb*.005;a.q6=a.btime;a.q7=a.mtime;a.q8=a.ttime;","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0;\nbtime=0;mtime=0;ttime=0","frame_eqs_eel":"decay=0.95;\nzoom=0.995;\nwarp=0;\n\nbtime=btime + (bass*bass*bass)*0.005;\nmtime=mtime + (mid*mid*mid)*0.005;\nttime=ttime + (treb*treb*treb)*0.005;\nq6=btime;\nq7=mtime;\nq8=ttime","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz - (tmpvar_2.xyz * 0.5));\n  ret_1 = ((ret_1 * abs(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2) - 0.5)\n  )) * 5.0);\n  ret_1 = (ret_1 - 0.01);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec3 xlat_mutableret2;\nvec2 xlat_mutablesam;\n shader_body { \n  vec2 uv_1;\n  xlat_mutablesam = (texture (sampler_main, (uv * 0.5)).xy * ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, (xlat_mutablesam + uv));\n  float tmpvar_3;\n  tmpvar_3 = (0.5 * bass_att);\n  xlat_mutableret1 = ((tmpvar_2.x * (\n    (tmpvar_3 * uv_orig.y)\n   + tmpvar_2.xyz)) + (tmpvar_2.x * texture (sampler_main, uv).xyz));\n  xlat_mutableret1 = (xlat_mutableret1 * ((xlat_mutableret1 + 1.0) / 2.0));\n  uv_1 = (((uv - 0.5) * 0.3) + 0.5);\n  xlat_mutablesam = (texture (sampler_main, (uv_1 * 0.5)).xy * ((\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv_1).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, (xlat_mutablesam + uv_1));\n  xlat_mutableret2 = ((tmpvar_4.x * (\n    (tmpvar_3 * uv_orig.y)\n   + tmpvar_4.xyz)) + (tmpvar_4.x * texture (sampler_main, uv_1).xyz));\n  xlat_mutableret2 = (xlat_mutableret2 * (xlat_mutableret1 + 1.0));\n  vec3 tmpvar_5;\n  tmpvar_5 = max (xlat_mutableret1, xlat_mutableret2);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (tmpvar_5 * (0.5 + (0.5 * \n    dot (tmpvar_5, vec3(0.32, 0.49, 0.29))\n  )));\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    \n    // darken (decay) over time\n    ret = ret- (ret*.5);\n    ret = ret*(abs(GetBlur2(uv)-.5))*5;\n    ret = ret - .01;\n}","comp_hlsl":"float3 ret1, ret2, reta;\nfloat2 sam;\nshader_body\n{\n    sam = tex2D(sampler_main,uv*.5);\n    ret1 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret1 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret1;\n    ret1 *= (ret1+1)/2; //gamma\n\nuv = (uv-.5)*.3+.5;\n    sam = tex2D(sampler_main,uv*.5);\n    ret2 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret2 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret2;\n    ret2 *= (ret1+1); //gamma\n\n\n\nret = max(ret1, ret2);\nret *= .5+.5*lum(ret);\n//ret = (1+ret1)*ret2;\n\n}\n\n"}