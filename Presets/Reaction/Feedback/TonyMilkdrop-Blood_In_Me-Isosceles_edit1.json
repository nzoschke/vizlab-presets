{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"wave_dots":1,"wave_brighten":0,"wrap":0,"invert":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.5,"modwavealphaend":1,"zoomexp":1.00016,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.6,"ob_size":0.004,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":1},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.q1=.0003*pow(1+1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,6);a.wave_r+=Math.sin(.339*a.time);a.wave_g+=Math.sin(.369*a.time);a.wave_b+=Math.sin(.399*a.time);a.wave_x+=.3*Math.sin(.85*a.time);a.wave_y+=.3*Math.cos(.67*a.time);a.ib_r+=Math.sin(.565*a.time);a.ib_g+=Math.sin(.615*a.time);a.ib_b+=Math.sin(.665*a.time);a.ob_r+=Math.cos(.565*a.time);a.ob_g+=Math.cos(.615*a.time);a.ob_b+=Math.cos(.665*a.time);a.ib_size+=.035*a.bass;a.warp=0;","pixel_eqs_str":"a.zoom+=.025*Math.sin(bitand(bitand(100*a.fps,10*a.time),3*a.ang));","init_eqs_eel":"","frame_eqs_eel":"q1 = 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\nwave_r = wave_r + 1*sin(time*0.339);\nwave_g = wave_g + 1*sin(time*0.369);\nwave_b = wave_b + 1*sin(time*0.399);\nwave_x = wave_x + 0.3*sin(time*0.85);\nwave_y = wave_y + 0.3*cos(time*0.67);\nib_r = ib_r + 1*sin(time*0.565);\nib_g = ib_g + 1*sin(time*0.615);\nib_b = ib_b + 1*sin(time*0.665);\nob_r = ob_r + 1*cos(time*0.565);\nob_g = ob_g + 1*cos(time*0.615);\nob_b = ob_b + 1*cos(time*0.665);\nib_size = ib_size + 0.035*bass;\nwarp = 0;","pixel_eqs_eel":"zoom = zoom + 0.025*sin(fps*100&time*10&(ang*3));\n//rot = rot + 0.0125*sin(fps&time);\n//dx = dx + 0.005*sin(time*0.685);\n//dy = dy + 0.005*cos(time*0.744);","warp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.5 + ((uv - 0.5) * 1.002));\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 8.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((2.0 * \n    ((texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec3 tmpvar_5;\n  tmpvar_5 = (((2.0 * \n    ((texture (sampler_blur1, (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.x;\n  tmpvar_6.y = tmpvar_5.x;\n  vec2 tmpvar_7;\n  tmpvar_7 = fract(((0.5 + \n    (uv_1 - 0.5)\n  ) - (tmpvar_6 * texsize.zw)));\n  ret_2.x = texture (sampler_main, tmpvar_7).x;\n  ret_2.x = (ret_2.x + ((\n    ((2.0 * ret_2.x) - (2.0 * ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)))\n  .x * 0.2) + 0.006));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_5.x;\n  tmpvar_8.y = -(tmpvar_4.x);\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_4.z;\n  tmpvar_9.y = tmpvar_5.z;\n  ret_2.z = max ((clamp (\n    (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1).x - 0.3)\n  , 0.0, 1.0) * 2.0), (texture (sampler_fc_main, (\n    (uv_1 - ((tmpvar_8 * texsize.zw) * 8.0))\n   + \n    ((tmpvar_9 * texsize.zw) * 4.0)\n  )).z - 0.008));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.y;\n  tmpvar_10.y = tmpvar_5.y;\n  ret_2.y = max (ret_2.x, (texture (sampler_fc_main, (uv_1 + \n    (tmpvar_10 * texsize.zw)\n  )).y - 0.016));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_2;\n  ret = tmpvar_11.xyz;\n }","comp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  vec3 ret_1;\n  xlat_mutabled = (texsize.zw * 1.5);\n  xlat_mutabledx = (texture (sampler_main, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz);\n  xlat_mutabledy = (texture (sampler_main, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz);\n  vec2 tmpvar_2;\n  tmpvar_2.x = xlat_mutabledx.y;\n  tmpvar_2.y = xlat_mutabledy.y;\n  vec2 x_3;\n  x_3 = (tmpvar_2 * 8.0);\n  ret_1 = (((texture (sampler_main, uv).x * \n    (1.0 - sqrt(dot (x_3, x_3)))\n  ) * pow (hue_shader, vec3(6.0, 6.0, 6.0))) * 1.4);\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.z;\n  tmpvar_4.y = xlat_mutabledy.z;\n  vec2 x_5;\n  x_5 = (tmpvar_4 * 2.0);\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (ret_1, vec3(1.0, 0.0, 0.0), vec3(sqrt(dot (x_5, x_5))));\n  ret_1 = tmpvar_6;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = tmpvar_6;\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body\n{\nuv = 0.5 + (uv-0.5)*1.002;\n\n    float2 d = texsize.zw*8;\n    float3 dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) )*0.5;\n    float3 dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) )*0.5;\n\nfloat2 uv_red = 0.5 + (uv-0.5) - float2(0,0)*texsize.zw - float2(dx.x,dy.x)*texsize.zw;\n\nuv_red = frac(uv_red); // fix for the old Radeons\n    ret.x = tex2D( sampler_main, uv_red ).x;\n    ret.x += (2*ret.x - 2*GetBlur2(uv_red)).x*0.2 + 0.006;\n\n\nfloat2 uv_blue = uv - float2(dy.x,-dx.x)*texsize.zw*8 + float2(dx.z,dy.z)*texsize.zw*4;\nret.z = max(saturate(GetBlur1(uv).x-0.3)*2, tex2d(sampler_fc_main,uv_blue + float2(2,1)*texsize.zw*0).z - 0.008);\n\nfloat2 uv_green = uv + float2(dx.y,dy.y)*texsize.zw*1;\nret.y = max(ret.x, tex2d(sampler_fc_main, uv_green).y - 0.016);\n\n\n}","comp_hlsl":"float2 d;\nfloat3 dx, dy;\n\nshader_body\n{\n   d = texsize.zw*1.5;\n   dx = GetPixel(uv_orig + float2(1,0)*d) - GetPixel(uv_orig - float2(1,0)*d);\n   dy = GetPixel(uv_orig + float2(0,1)*d) - GetPixel(uv_orig - float2(0,1)*d);\n\n\nret = GetPixel(uv).x*(1-length(float2(dx.y,dy.y)*8))*pow(hue_shader,6)*1.4;\nret = lerp(ret,float3(1,0,0),length(float2(dx.z,dy.z)*2));\n\n\n}"}