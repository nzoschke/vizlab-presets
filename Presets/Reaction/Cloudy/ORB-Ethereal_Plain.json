{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"wave_mode":7,"wrap":0,"darken":1,"wave_a":0.209,"zoom":0.96,"warp":0.00052,"wave_g":0.4,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.66718,"tex_zoom":0.37409,"g":1,"b":1,"a":0,"r2":1,"b2":1},"init_eqs_str":"a.basstime=0;a.ob_r=0;a.ob_g=0;a.ob_b=0;a.q3=0;","frame_eqs_str":"a.ang=a.basstime;a.tex_ang=Math.sin(a.basstime);a.ob_r=.5*Math.sin(1.12*a.basstime);a.ob_g=.5*Math.sin(1.5*a.basstime);a.ob_b=.5*Math.sin(2.12*a.basstime);a.a=.8-.8*above(a.q3,1);","init_eqs_eel":"","frame_eqs_eel":"ang = basstime;\ntex_ang = sin(basstime);\n\nob_r = 0.5 * sin(basstime*1.12);\nob_g = 0.5 * sin(basstime*1.5);\nob_b = 0.5 * sin(basstime*2.12);\n\na = 0.8 - above(q3,1)*0.8;"},{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.37713,"g":1,"b":1,"a":0.7,"r2":0.8,"b2":1,"a2":0.5,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_capture = above(bass,1);","init_eqs_eel":"","frame_eqs_eel":"tex_capture = above(bass,1);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.01348,"g":1,"b":1,"r2":1,"b2":0.86,"a2":0.3},"init_eqs_str":"a.state=0;a.randx=0;a.rand1=0;a.randy=0;a.rand2=0;","frame_eqs_str":"a.state+=1;a.state=.00001<Math.abs(above(a.state,10))?0:a.state;a.randx=.00001<Math.abs(below(a.state,1))?.01*rand(100):a.rand1;a.randy=.00001<Math.abs(below(a.state,1))?.001*rand(100):a.rand2;a.x=a.randx;a.y=.5+a.randy;","init_eqs_eel":"","frame_eqs_eel":"state = state + 1;\nstate = if(above(state, 10),0, state);\n\nrandx = if(below(state, 1), rand(100)*0.01, rand1); \nrandy = if(below(state, 1), rand(100)*0.001, rand2); \n\n\nx = randx;\ny =  0.5 + randy; "},{"baseVals":{"enabled":1,"sides":100,"x":0.54,"rad":0.01,"g":1,"b":1,"r2":1,"b2":1},"init_eqs_str":"a.state=0;a.randx=0;a.rand1=0;a.randy=0;a.rand2=0;","frame_eqs_str":"a.state+=1;a.state=.00001<Math.abs(above(a.state,10))?0:a.state;a.randx=.00001<Math.abs(below(a.state,1))?.01*rand(100):a.rand1;a.randy=.00001<Math.abs(below(a.state,1))?.001*rand(100):a.rand2;a.x=a.randx;a.y=.5-a.randy;","init_eqs_eel":"","frame_eqs_eel":"state = state + 1;\nstate = if(above(state, 10),0, state);\n\nrandx = if(below(state, 1), rand(100)*0.01, rand1); \nrandy = if(below(state, 1), rand(100)*0.001, rand2); \n\n\nx = randx;\ny =  0.5 - randy; "}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"smoothing":0,"a":0.13},"init_eqs_str":"a.v=0;","frame_eqs_str":"","point_eqs_str":"a.v=a.sample;a.x=a.v;a.y=.45-.1*a.value2;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"v = sample;\n\nx = v;\ny=  0.45 - value2*0.1;"},{"baseVals":{"enabled":1,"spectrum":1,"smoothing":0,"a":0.14},"init_eqs_str":"a.v=0;","frame_eqs_str":"","point_eqs_str":"a.v=a.sample;a.x=a.v;a.y=.55+.1*a.value1;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"v = sample;\n\nx = v;\ny=  0.55 + value1*0.1;"},{"baseVals":{"enabled":1,"smoothing":0,"a":0.1},"init_eqs_str":"a.v=0;a.q1=0;a.q3=0;","frame_eqs_str":"","point_eqs_str":"a.v=a.sample;a.x=a.v;a.y=.55+.11*a.value1;a.r=1;a.b=0;a.g=.5+.5*Math.sin(.1*a.q1+a.q3);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"v = sample;\n\nx = v;\ny=  0.55 + value1*0.11;\n\nr = 1;\nb = 0;\ng = 0.5 + 0.5*sin(q1*0.1 + q3)"},{"baseVals":{"enabled":1,"smoothing":0,"a":0.1},"init_eqs_str":"a.v=0;a.q1=0;a.q3=0;","frame_eqs_str":"","point_eqs_str":"a.v=a.sample;a.x=a.v;a.y=.49-.11*a.value2;a.r=1;a.b=0;a.g=.5+.5*Math.sin(.1*a.q1+a.q3);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"v = sample;\n\nx = v;\ny=  0.49 - value2*0.11;\n\nr = 1;\nb = 0;\ng = 0.5 + 0.5*sin(q1*0.1 + q3)"}],"init_eqs_str":"a.basstime=0;a.stickybit=0;a.volavg2=0;a.q1=0;a.sample1=0;a.difftime=0;a.diff=0;a.edge=0;a.basstime2=0;a.volavg=0;a.bit2=0;a.vol=0;a.q2=0;a.rarr=0;a.q3=0;a.basssum=0;a.sample2=0;a.q8=0;","frame_eqs_str":"a.basstime+=.03*a.bass;a.basstime2=a.basstime+.03*a.bass;a.q1=a.basstime2;a.basstime=.00001<Math.abs(below(a.basstime,1E3))?1E3:a.basstime;a.basstime+=.03*a.bass_att;a.vol=pow(a.bass+a.mid+a.treb,2);a.basssum=a.vol;a.stickybit=mod(a.time,2);a.volavg+=a.vol*equal(a.stickybit,1);a.sample1+=equal(a.stickybit,1);a.volavg2+=a.vol*equal(a.stickybit,0);a.sample2+=equal(a.stickybit,0);a.edge=bnot(equal(a.bit2,a.stickybit));a.volavg-=a.volavg*a.edge*a.stickybit;a.volavg2-=a.volavg2*\na.edge*equal(a.stickybit,0);a.sample1-=a.sample1*a.edge*a.stickybit;a.sample2-=a.sample2*a.edge*equal(a.stickybit,0);a.diff=.00001<Math.abs(equal(a.stickybit,1))?div(a.basssum,div(a.volavg2,a.sample2)):0;a.diff=.00001<Math.abs(equal(a.stickybit,0))?div(a.basssum,div(a.volavg,a.sample1)):a.diff;a.q3=a.diff;a.bit2=mod(a.time,2);a.difftime+=.03*a.diff;a.q2=a.difftime;a.difftime=.00001<Math.abs(above(a.difftime,2E3))?0:a.difftime;a.monitor=a.q1;a.rarr=.01*rand(100);a.decay=.7+.2*Math.abs(Math.cos(1.56*\na.difftime+a.rarr));a.q8=.0001*(a.diff+1);a.monitor=a.q3;","pixel_eqs_str":"a.zoom=1;","init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass*0.03;\nbasstime2 = basstime + bass*0.03;\nq1 = basstime2;\n\n//start in most active range\nbasstime = if(below(basstime,1000),1000,basstime);\n//basstime = if(above(basstime,495),450,basstime);\n\nbasstime = basstime + bass_att*0.03;\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\nq3 = diff;\n\nbit2 = time%2;\n\ndifftime = difftime + diff*0.03;\nq2 = difftime;\n\n//fix a strange error\ndifftime = if(above(difftime,2000),0, difftime);\n\nmonitor = q1;\n\nrarr = rand(100)*0.01;\n\ndecay = 0.7 + 0.2*(abs(cos(difftime*1.56+rarr)));\n\n//shape fill\nq8 = (diff+1)*0.0001;\nmonitor = q3;","pixel_eqs_eel":"zoom = 1;","warp":" shader_body { \n  float tmpvar_1;\n  tmpvar_1 = (texsize.zw * 8.0).x;\n  vec3 tmpvar_2;\n  tmpvar_2 = ((texture (sampler_main, (uv + \n    (vec2(1.0, 0.0) * tmpvar_1)\n  )).xyz + texture (sampler_main, (uv + \n    (vec2(1.0, 0.0) * tmpvar_1)\n  )).xyz) * 0.5);\n  vec3 tmpvar_3;\n  tmpvar_3 = ((texture (sampler_main, (uv + \n    (vec2(0.0, 1.0) * tmpvar_1)\n  )).xyz + texture (sampler_main, (uv + \n    (vec2(0.0, 1.0) * tmpvar_1)\n  )).xyz) * 0.5);\n  vec3 tmpvar_4;\n  tmpvar_4.xy = uv;\n  tmpvar_4.z = q2;\n  float tmpvar_5;\n  tmpvar_5 = ((tmpvar_2 + (tmpvar_3 * texture (sampler_main, \n    ((uv + tmpvar_2.xy) + tmpvar_3.xy)\n  ).xyz)).xy - texture (sampler_noisevol_lq, (tmpvar_4 * 4.0)).xy).x;\n  vec2 tmpvar_6;\n  tmpvar_6.x = 0.0;\n  tmpvar_6.y = (tmpvar_5 * texsize.z);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (texture (sampler_fc_main, ((\n    (((uv - 0.5) * (1.0 - (tmpvar_5 * 0.01))) * (0.99 - (bass * 0.001)))\n   + tmpvar_6) + 0.5)).xyz - 0.002);\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 tmpvar_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  tmpvar_1 = ((tmpvar_2 * vec2(-1.0, 1.0)) + 0.5);\n  vec3 tmpvar_3;\n  tmpvar_3.z = 0.0;\n  tmpvar_3.xy = uv;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_blur1, uv);\n  tmpvar_4.xyz = (((\n    ((mix (texture (sampler_main, (\n      (tmpvar_2 * 0.98)\n     + 0.5)).xyz, texture (sampler_main, (\n      ((tmpvar_1 - 0.5) * 0.98)\n     + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) + ((\n      (tmpvar_5.xyz * scale1)\n     + bias1) * 0.2)) + (((texture (sampler_blur1, tmpvar_1).xyz * scale1) + bias1) * 0.2))\n   + \n    (((tmpvar_5.xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur1, tmpvar_1).xyz * scale1) + bias1)\n   * 0.4)) - dot (tmpvar_3, vec3(0.32, 0.49, 0.29)));\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n   //rot = rot*(1 + rad*0.1+q3*0.01);\n   float d = texsize.zw*8;\n   float3 deltax = (GetPixel(uv + float2(1,0)*d) + GetPixel(uv + float2(1,0)*d))*0.5;    \n   float3 deltay = (GetPixel(uv + float2(0,1)*d) + GetPixel(uv + float2(0,1)*d))*0.5;    \n   float3 txr = float3(uv,q2);\n\n\n   float delta = ((deltax+deltay * tex2D(sampler_main, uv + deltax+deltay))).xy - tex3D(sampler_noisevol_lq, txr*4);\n   ret = tex2D(sampler_fc_main, (uv-0.5)*(1 - delta*0.01)*(0.99 - bass*0.001) + float2(0,delta*texsize.z) + 0.5 );\n   ret = ret -0.002;\n}","comp_hlsl":"\nshader_body\n{\n    float2 uv_echo = (uv - 0.5)*float2(-1,1) + 0.5;\n    ret = lerp( tex2D(sampler_main, (uv-0.5)*0.98 + 0.5).xyz, \n                tex2D(sampler_main, (uv_echo-0.5)*0.98 + 0.5).xyz, \n                0.50 \n              ) \n + GetBlur1(uv)*0.2 + GetBlur1(uv_echo)*0.2\n + GetBlur1(uv)*0.4 + GetBlur1(uv_echo)*0.4 - lum(uv);\n    //ret = ret*0.9; //gamma\n    \n    \n    //ret =  ret*(1 - ret)*ret*5*ret.x; //brighten\n}"}