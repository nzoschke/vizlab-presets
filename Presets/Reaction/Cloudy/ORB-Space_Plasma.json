{"version":2,"baseVals":{"rating":5,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"solarize":1,"wave_a":0.001,"warp":0.01,"wave_r":0,"wave_g":0.4,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.37409,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"a2":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.37713,"g":1,"b":1,"a":0.7,"r2":0.8,"b2":1,"a2":0.5,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"r2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"x":0.54,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.basstime=0;a.q1=0;","frame_eqs_str":"a.basstime+=.03*a.bass;a.q1=.1*a.basstime;","pixel_eqs_str":"a.zoom=1;a.rot=0;","init_eqs_eel":"","frame_eqs_eel":"basstime  = basstime + bass*0.03;\nq1 = basstime*0.1;","pixel_eqs_eel":"zoom = 1;\nrot = 0;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 0.2);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec3 final_noise_1;\n  vec3 ret_2;\n  float tmpvar_3;\n  float tmpvar_4;\n  tmpvar_4 = (uv.x - 0.5);\n  float tmpvar_5;\n  tmpvar_5 = (uv.y - 0.5);\n  tmpvar_3 = sqrt(((tmpvar_4 * tmpvar_4) + (tmpvar_5 * tmpvar_5)));\n  vec2 tmpvar_6;\n  tmpvar_6.x = (tmpvar_4 * (sin(\n    ((tmpvar_3 - q1) + 0.5)\n  ) * 4.0));\n  tmpvar_6.y = (tmpvar_5 * (sin(\n    ((tmpvar_3 - q1) + 0.5)\n  ) * 4.0));\n  vec3 tmpvar_7;\n  tmpvar_7.xy = tmpvar_6;\n  tmpvar_7.z = (2.0 + (q1 * 0.5));\n  final_noise_1 = ((texture (sampler_noisevol_hq, tmpvar_7) * 2.0) - 1.0).xyz;\n  final_noise_1 = (final_noise_1 + (0.5 * (\n    (texture (sampler_noisevol_hq, (tmpvar_7 * 2.0)) * 2.0)\n   - 1.0)).xyz);\n  final_noise_1 = (final_noise_1 + (0.25 * (\n    (texture (sampler_noisevol_hq, (tmpvar_7 * 4.0)) * 2.0)\n   - 1.0)).xyz);\n  final_noise_1 = (final_noise_1 + (0.125 * (\n    (texture (sampler_noisevol_hq, (tmpvar_7 * 8.0)) * 2.0)\n   - 1.0)).xyz);\n  ret_2 = (1.5 * (final_noise_1 + 0.15));\n  ret_2 = (ret_2 * ((\n    dot (ret_2, vec3(0.32, 0.49, 0.29))\n   * ret_2) * 40.0));\n  ret_2 = (1.0 - (ret_2 * dot (ret_2, vec3(0.32, 0.49, 0.29))));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n    ret = tex2D( sampler_main, uv ).xyz;\n    ret = ret*0.2; //or try: ret -= 0.004;\n}","comp_hlsl":"\nshader_body\n{\n  float dist = sqrt(pow(uv.x-0.5,2) + pow(uv.y-0.5,2));\n  float2 cords = float2( (uv.x-0.5) *   (sin(dist - q1 + 0.5)*4),\n                           (uv.y-0.5) * (sin(dist - q1 + 0.5)*4));\n  //perlin noise\n  float3 final_noise = float3(0,0,0);\n  float3 uvx = float3(cords.x  , cords.y, 2 + q1*0.5 );  \n  for(int i=0;i<4;i++)\n      final_noise +=(1.0/pow(2,i))*(tex3D(sampler_noisevol_hq, uvx*pow(2,i))*2-1);\n\n   // Remove the sign from the noise and prep \n   // it for cloud rendering\n   ret = ((final_noise+0.15)*2).xyz*0.75;\n   ret *= lum(ret)*(ret)*40; \n   ret = 1 - ret*lum(ret);\n}"}