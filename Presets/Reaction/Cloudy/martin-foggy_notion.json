{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":0.527429,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.5,"g":1,"b":0.9,"r2":0.83,"g2":0.93,"b2":0.8,"a2":1,"border_b":0,"border_a":0},"init_eqs_str":"a.trel=0;a.cent=0;","frame_eqs_str":"a.trel=div(a.time,3);a.x=.5+Math.sin(2*a.trel);a.y=.5+Math.cos(1.3*a.trel);a.cent=sqrt((a.x-.5)*(a.x-.5)+(a.y-.5)*(a.y-.5));a.rad=.1*a.cent;a.a=.8;","init_eqs_eel":"","frame_eqs_eel":"\ntrel = time/3;\n\nx = .5+sin(trel*2);\ny = .5+cos(trel*1.3);\n\n\n\ncent = sqrt((x-.5)*(x-.5)+(y-.5)*(y-.5));\n\nrad = .1*cent;\na = .8;"},{"baseVals":{"enabled":1,"sides":6,"additive":1,"thickoutline":1,"textured":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_ang":0.628319,"tex_zoom":0.846892,"r":0,"g":0.55,"b":0.5,"a":0.1,"r2":1,"b2":1,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0.2},"init_eqs_str":"a.g0=0;a.y0=0;a.q1=0;a.x0=0;a.q24=0;a.q26=0;a.r0=0;a.trig=0;a.q2=0;a.b0=0;a.rad0=0;","frame_eqs_str":"a.trig=a.q24;a.textured=1;a.x0=a.x0*bnot(a.trig)+a.trig*(.2+div(rand(100),200));a.y0=a.y0*bnot(a.trig)+a.trig*(.2+div(rand(100),200));a.x0+=div(.03*a.q1*(3+a.q26),a.fps);a.y0+=div(.03*a.q2*(3+a.q26),a.fps);a.x0-=Math.floor(a.x0);a.y0-=Math.floor(a.y0);a.tex_ang=a.time;a.ang=0;a.x=a.x0;a.y=a.y0;a.rad0=a.rad0*bnot(a.trig)+div(a.trig*rand(100),200);a.rad=a.rad0;a.r0=a.r0*bnot(a.trig)+div(a.trig*rand(10),10);a.b0=a.b0*bnot(a.trig)+div(a.trig*rand(10),10);a.g0=a.g0*bnot(a.trig)+\ndiv(a.trig*rand(10),10);a.border_r=a.r0;a.border_g=a.g0;a.border_b=a.b0;a.r=a.r0;a.b=a.b0;a.g=a.g0;","init_eqs_eel":"","frame_eqs_eel":"trig = q24;\n\ntextured = 1;\n\nx0 = x0*bnot(trig) + trig*(.2+ rand(100)/200); \ny0 = y0*bnot(trig) + trig*(.2+ rand(100)/200); \n\n\nx0 = x0 + .03*q1*(3+q26)/fps;\ny0 = y0 + .03*q2*(3+q26)/fps;\n\nx0 = x0 - int(x0);\ny0 = y0 - int(y0);\n\ntex_ang = time;\n//tex_zoom = q1;\nang = 0;\nx = x0; y = y0;\nrad0 = rad0*bnot(trig) + trig*rand(100)/200;\nrad = rad0;\n\n\nr0 = r0*bnot(trig) + trig * rand(10)/10;\nb0 = b0*bnot(trig) + trig * rand(10)/10;\ng0 = g0*bnot(trig) + trig * rand(10)/10;\n\nborder_r = r0; border_g = g0; border_b = b0;\n\nr = r0; b = b0; g = g0;\n"},{"baseVals":{"additive":1,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = rand(50)/50;\ny = .5 - 0*rand(15)/200;\n\nr = .4;\ng = .6;\nb = 1;\nr2 = r;\ng2 = g;\nb2 = b;\n\na = min(q21/2 ,.9);\nrad = a * (.1+abs(x-.5))/2 ;","init_eqs_eel":"","frame_eqs_eel":"x = rand(50)/50;\ny = .5 - 0*rand(15)/200;\n\nr = .4;\ng = .6;\nb = 1;\nr2 = r;\ng2 = g;\nb2 = b;\n\na = min(q21/2 ,.9);\nrad = a * (.1+abs(x-.5))/2 ;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.76,"rad":0.39478,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"a2":0.8,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_zoom = q27/2;","init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27/2;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"thick":1,"additive":1,"scaling":3.915805,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t2 = t2 + bass_att;","point_eqs_str":"\nx = sample;\ny = value1 * rand(50)/100 * abs(sample-.5)+ .49;\n\na = q26/4 * (.2 + abs(sample-.5)); ","init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"\nx = sample;\ny = value1 * rand(50)/100 * abs(sample-.5)+ .49;\n\na = q26/4 * (.2 + abs(sample-.5)); "},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"xi = rand(100)/100;\nyi = rand(100)/100;\n\nx = xi; y = yi;\n\na = q21/15;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = rand(100)/100;\nyi = rand(100)/100;\n\nx = xi; y = yi;\n\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.q1=0;a.dec_med=0;a.rott=0;a.ava=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.kmov=0;a.q26=0;a.p2=0;a.mov=0;a.avg=0;a.movez=0;a.trig=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.cont=0;a.t0=0;a.q28=0;a.q30=0;a.q20=0;a.dirx=1;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.9,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.2+a.avg+a.peak)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),8);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+\na.mid+a.treb;a.ava=a.ava*a.dec_slow+a.q26*(1-a.dec_slow);a.k1=a.is_beat*equal(mod(a.index,4),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q27=8-a.index;a.q28=div(a.index2,6);a.q29=.1*a.q27+.1*a.time;a.trig=bnot(mod(a.index,4))*a.q24;a.mov=a.trig*(rand(100)-50)+(1-a.trig)*a.mov;a.movez+=div(.02,a.fps)*a.mov;a.q30=a.movez;a.trig=a.q24*bnot(a.index);a.kmov=bnot(a.trig)*(a.kmov+div(.1,a.fps));a.q31=82*\na.kmov*a.kmov;a.cont+=div(.2*a.q1,a.fps)*below(a.index,2);a.q31=a.cont;","pixel_eqs_str":"","init_eqs_eel":"dirx = 1;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.1);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%8;\n\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\nava = ava*dec_slow + q26*(1-dec_slow);\n\nk1 =  is_beat*equal(index%4,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\nq1 = cos(rott);\nq2 = sin(rott);\n\nq27 = 8-index;\nq28 = index2/6;\nq29 = .1*q27+time*.1;\n\ntrig = bnot(index%4)*q24;\nmov = trig*(rand(100)-50) + (1-trig)*mov ;\nmovez = movez + .02/fps*mov;\nq30 = movez;\n\n\ntrig = q24 * bnot(index);\nkmov = bnot(trig)* (kmov + .1/fps); \nq31 = kmov*82*kmov;\n\ncont = cont + q1*.2/fps*below(index,2);\nq31 = cont;\n\n\n\n\n\n//**************************","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = ((0.3 * vec3(clamp (\n    (0.02 / sqrt(((\n      (uv * vec2(rad))\n     * \n      (q28 + texture (sampler_main, fract((uv * 2.0))).xyz)\n    .xy).y - 0.2)))\n  , 0.0, 1.0))) + texture (sampler_main, uv).xyz);\n  ret_1 = ((ret_1 * 0.98) - 0.02);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":"vec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers2;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_3 = (1.0 - fract(q30));\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 4.0);\n  xlat_mutableneu = texture (sampler_main, fract(((\n    ((3.0 * abs((\n      fract((uv_1 + 0.5))\n     - 0.5))) * dist_3)\n   + q29) + q31))).xyz;\n  xlat_mutableneu = (xlat_mutableneu * vec3(greaterThanEqual (xlat_mutableneu, vec3(0.0, 0.0, 0.0))));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\n  dist_3 = (1.0 - fract((0.5 + q30)));\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 4.0);\n  xlat_mutableneu = texture (sampler_main, fract(((\n    ((3.0 * abs((\n      fract((uv_1 + 0.5))\n     - 0.5))) * dist_3)\n   + q29) + q31))).xyz;\n  xlat_mutableneu = (xlat_mutableneu * vec3(greaterThanEqual (xlat_mutableneu, vec3(0.0, 0.0, 0.0))));\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  dist_3 = (1.0 - fract((1.0 + q30)));\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 4.0);\n  xlat_mutableneu = texture (sampler_main, fract(((\n    ((3.0 * abs((\n      fract((uv_1 + 0.5))\n     - 0.5))) * dist_3)\n   + q29) + q31))).xyz;\n  xlat_mutableneu = (xlat_mutableneu * vec3(greaterThanEqual (xlat_mutableneu, vec3(0.0, 0.0, 0.0))));\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  xlat_mutablers2 = ((0.3 * cos(\n    (uv_1 * 16.0)\n  )) - xlat_mutableret1.xy);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ((-0.1 * xlat_mutableret1) + ((\n    ((2.0 * (clamp (\n      (0.05 / sqrt(dot (xlat_mutablers2, xlat_mutablers2)))\n    , 0.0, 1.0) * (1.0 + \n      (q22 / 4.0)\n    ))) * (0.4 + (4.0 * xlat_mutableret1)))\n   * \n    (1.0 + roam_cos)\n  .xyz) / 2.0));\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus, mus1;\nfloat2 uv6, rs;\nfloat dx,dy;\nshader_body {\n\nfloat2 uv1 = (uv-.5);\n\nfloat3 noise = GetPixel ((frac(uv*2)));\n\n\nuv6 = uv* float2(rad,rad) *(q28+noise+0*rs);\nmus = saturate(.02/(sqrt(uv6.y-.2)));\nfloat3 crisp= tex2D(sampler_main,uv);\n\nret = .3*mus + crisp*1;\nret = ret*.98 -.02;\n}","comp_hlsl":"float3 ret1, neu;\nfloat2 rs,rs2,uv1,rsk,Kugel1,dz1,uv4;\nfloat rad1, mask1;\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5 ;\nuv *= aspect.xy;    \n\n\nfloat dist = 1;\nfloat inten = 1;\nret1 = 0;\nint anz = 2;\nfloat n = 0;\nwhile (n <= anz) {\n    uv2 =  abs(frac(uv+.5)-.5) ;\n    dist = 1-frac(1.0/anz*n+q30); //evtl sqrt !\n    inten =  sqrt(dist)*(1-dist)*4;\n    float2 uv3 =  frac(3*uv2*dist+q29+q31);\n    neu = 1*GetPixel(uv3) +GetBlur3(uv3*1.1)*0;\n    neu *= (neu >= 0);\n    ret1 = max(ret1,neu*inten);\nn++;\n}\n\n\nrs2 = .3*cos(uv*16+0*time) -  (ret1);\nfloat dots = saturate(.05/length(rs2))*(1+q22/4) ;\n\nret = -0.1*ret1 + 2*dots*(.4+4*ret1)*(1+roam_cos)/2 ;\n}"}