{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_thick":1,"wave_brighten":0,"wave_a":7.9,"wave_scale":15.099,"wave_smoothing":0.36,"warpanimspeed":0.451,"warpscale":3.04,"zoomexp":26.40739,"zoom":1.04971,"dx":0.005,"dy":0.005,"warp":0.09862,"wave_r":0,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.time2=0;","frame_eqs_str":"a.time2=17*a.time;a.wave_r+=.35*(.6*Math.sin(.98*a.time2)+.4*Math.sin(1.047*a.time2));a.wave_g+=.35*(.6*Math.sin(.835*a.time2)+.4*Math.sin(1.081*a.time2));a.wave_b+=.35*(.6*Math.sin(.814*a.time2)+.4*Math.sin(1.011*a.time2));a.cx+=.11*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.11*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.decay-=.01*equal(mod(a.frame,20),0);a.zoom+=1.2*(.01*Math.cos(.317*a.time+1)+.01*Math.cos(.1132*a.time+4));a.rot+=.5*(.01*Math.cos(.214*\na.time+3)+.01*Math.cos(.2732*a.time+2));a.wave_mystery=-.1+.3*Math.cos(3*a.time*17.3214);a.dx=a.dx+.01*Math.cos(1.613*a.time+1)+.01*Math.cos(2.303*a.time+5);a.dy=a.dy+.01*Math.sin(1.119*a.time+3)+.01*Math.cos(1.784*a.time+4);","pixel_eqs_str":"a.rot=.07*Math.cos(9*a.rad+3*a.time);","init_eqs_eel":"","frame_eqs_eel":"time2 = time*17;\nwave_r = wave_r + 0.350*( 0.60*sin(0.980*time2) + 0.40*sin(1.047*time2) );\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time2) + 0.40*sin(1.081*time2) );\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time2) + 0.40*sin(1.011*time2) );\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\ndecay = decay - 0.01*equal(frame%20,0);\n//zoom = 1;\n//warp = 0;\nzoom = zoom + 1.2*(0.01*cos(time*0.317+1) + 0.01*cos(time*0.1132+4));\nrot  = rot  + 0.5*(0.01*cos(time*0.214+3) + 0.01*cos(time*0.2732+2));\nwave_mystery = -0.1 + 0.3*cos(time*0.5*6*17.3214);\n//zoom = zoom + (max(1, bass_att)-1)*0.01;\ndx = dx + 0.01*cos(time*1.613+1) + 0.01*cos(time*2.303+5) ;\ndy = dy + 0.01*sin(time*1.119+3) + 0.01*cos(time*1.784+4) ;","pixel_eqs_eel":"rot = cos(rad*9 + time*3)*0.07;","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (uv_orig * texsize.xy);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (texture (sampler_main, mix (uv, (\n    ((uv_orig - 0.5) * (0.84 + (0.05 * cos(\n      (time * 0.5)\n    ))))\n   + 0.5), vec2(clamp (\n    (2.0 * fract(((\n      (tmpvar_1.x + tmpvar_1.y)\n     * 0.5) + 0.25)))\n  , 0.0, 1.0)))).xyz * (0.93 + (0.07 * \n    clamp ((rad * 5.0), 0.0, 1.0)\n  )));\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = cos((uv.y * 270.0));\n  tmpvar_3.y = sin((uv.x * 390.0));\n  uv_1 = (uv + (0.01 * tmpvar_3));\n  ret_2 = (1.4 * pow ((\n    clamp (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), 0.0, 1.0)\n   * \n    (texture (sampler_pc_main, uv_1).xyz - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3))\n  ), vec3(0.5, 0.5, 0.5)));\n  ret_2 = ((vec3(0.9, 0.2, 0.4) * ret_2.z) + (vec3(0.2, 0.4, 0.8) * ret_2.y));\n  ret_2 = (ret_2 * (2.0 + sin(bass)));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_2;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // custom motion for 50% of the pixels...:\n    float zoom = 0.84 + 0.05*cos(time*0.5);\n    float2 uv2 = (uv_orig - 0.5)*zoom + 0.5;\n\n    // make every other pixel use 'uv2':\n    float2 pix = uv_orig * texsize.xy;\n    float even_odd = saturate(2*frac((pix.x + pix.y)*0.5 + 0.25));\n    uv = lerp(uv, uv2, even_odd);\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    \n    // darken (decay) over time\n    //ret = (ret - 0.0015)*0.988;\n    ret *= 0.93 + 0.07*saturate(rad*5);\n}","comp_hlsl":"sampler sampler_seaweed;\nshader_body\n{\nuv = uv + 0.01*float2(cos(uv.y*270),sin(uv.x*390));\n\n    ret = 1.4*pow(saturate(GetBlur1(uv))*((tex2D(sampler_pc_main,uv)-GetBlur3(uv))),0.5); //invert\n    //uv.y = rad*rad;\n//    float srad = sqrt(rad)+ 0.05;\n\n//    ret = tex2D(sampler_main, uv).xyz;\n//    ret = max(ret, tex2D(sampler_main, uv + 0.03*float2(cos(uv.y*27),sin(uv.x*39))).xyz);\n\n    //ret += GetBlur1(uv) - 0.07;\n    //ret *= float3(1.3,0.8,0.5);\n    //ret *= 0.8;    \nret = float3(0.9,0.2,0.4)*ret.z + float3(0.2,0.4,0.8)*ret.y;\nret *= 2+sin(bass);\n}"}