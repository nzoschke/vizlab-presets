{"version":2,"baseVals":{"rating":5,"gammaadj":1.994,"decay":1,"echo_zoom":1.157,"echo_alpha":0.2,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"solarize":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":1.00049,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.002,"ob_a":1,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"x":0,"rad":0.98609,"r":0.6,"g":0.6,"b":0.6,"a":0.02,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q4=0;a.q5=0;a.q6=0;","frame_eqs_str":"a.r2=a.r;a.g2=a.g;a.b2=a.b;a.a=Math.max(.1*(a.q4+a.q5+a.q6),.02);","init_eqs_eel":"","frame_eqs_eel":"r2 = r;g2=g;b2=b;\n\n//x = int(rand(1001))*.001;\n\na = max((q4 + q5 + q6)*.1,.02);"},{"baseVals":{"enabled":1,"sides":100,"x":1,"rad":0.98609,"r":0.6,"g":0.6,"b":0.6,"a":0.02,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q4=0;a.q5=0;a.q6=0;","frame_eqs_str":"a.r2=a.r;a.g2=a.g;a.b2=a.b;a.a=Math.max(.1*(a.q4+a.q5+a.q6),.02);","init_eqs_eel":"","frame_eqs_eel":"r2 = r;g2=g;b2=b;\n\n//x = int(rand(1001))*.001;\n\na = max((q4 + q5 + q6)*.1,.02);"},{"baseVals":{"enabled":1,"sides":100,"x":0.33,"rad":0.98609,"r":0.6,"g":0.6,"b":0.6,"a":0.02,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q4=0;a.q5=0;a.q6=0;","frame_eqs_str":"a.r2=a.r;a.g2=a.g;a.b2=a.b;a.a=Math.max(.1*(a.q4+a.q5+a.q6),.02);","init_eqs_eel":"","frame_eqs_eel":"r2 = r;g2=g;b2=b;\n\n//x = int(rand(1001))*.001;\n\na = max((q4 + q5 + q6)*.1,.02);"},{"baseVals":{"enabled":1,"sides":100,"x":0.67,"rad":0.98609,"r":0.6,"g":0.6,"b":0.6,"a":0.02,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q4=0;a.q5=0;a.q6=0;","frame_eqs_str":"a.r2=a.r;a.g2=a.g;a.b2=a.b;a.a=Math.max(.1*(a.q4+a.q5+a.q6),.02);","init_eqs_eel":"","frame_eqs_eel":"r2 = r;g2=g;b2=b;\n\n//x = int(rand(1001))*.001;\n\na = max((q4 + q5 + q6)*.1,.02);"}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ti = time*1;\nr = .5 + .5*sin(ti*1.789);\ng = .5 + .5*sin(ti*1.123);\nb = .5 + .5*sin(ti*1.465);","point_eqs_str":"x = int(rand(1001))*.001;\nY = int(rand(1001))*.001;\n\n//a = min(1,value1 + value2);","init_eqs_eel":"","frame_eqs_eel":"ti = time*1;\nr = .5 + .5*sin(ti*1.789);\ng = .5 + .5*sin(ti*1.123);\nb = .5 + .5*sin(ti*1.465);","point_eqs_eel":"x = int(rand(1001))*.001;\nY = int(rand(1001))*.001;\n\n//a = min(1,value1 + value2);"},{"baseVals":{"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ti = time*1 + 1.57;\nr = .5 + .5*sin(ti*1.789);\ng = .5 + .5*sin(ti*1.123);\nb = .5 + .5*sin(ti*1.465);","point_eqs_str":"x = int(rand(1001))*.001;\nY = int(rand(1001))*.001;\n\n//a = min(1,value1 + value2);","init_eqs_eel":"","frame_eqs_eel":"ti = time*1 + 1.57;\nr = .5 + .5*sin(ti*1.789);\ng = .5 + .5*sin(ti*1.123);\nb = .5 + .5*sin(ti*1.465);","point_eqs_eel":"x = int(rand(1001))*.001;\nY = int(rand(1001))*.001;\n\n//a = min(1,value1 + value2);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tic=0;a.st=0;a.q6=0;a.bt=0;a.q1=0;a.q5=0;a.mid_avg=0;a.tt=0;a.base=0;a.my=0;a.tin=0;a.ti=0;a.bass_avg=0;a.q4=0;a.zm=0;a.mt=0;a.ra=0;a.mx=0;a.treb_avg=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.ra=.25*div(1,a.tic);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;a.q1=4*a.tt;a.q2=4*a.mt;a.q3=4*a.bt;a.st=.1;a.base=.15;a.q4=a.base+a.treb_avg*a.st;a.q5=a.base+a.mid_avg*a.st;a.q6=a.base+a.bass_avg*a.st;","pixel_eqs_str":"a.ti=.3*a.time;a.mx=a.x-.5+.25*(Math.sin(1.1278*a.ti)+Math.sin(.7458*a.ti));a.my=a.y-.5+.25*(Math.sin(.9454*a.ti)+Math.sin(1.2378*a.ti));a.zm=Math.cos(16*pow(a.mx*a.mx*1.5+a.my*a.my,.5)-a.q1)*a.q4;a.dx=a.zm*(a.x-a.mx);a.dy=a.zm*(a.y-a.my);a.mx=a.x-.5+.25*(Math.sin(1.3488*a.ti)+Math.sin(.8552*a.ti));a.my=a.y-.5+.25*(Math.sin(.7366*a.ti)+Math.sin(1.1447*a.ti));a.zm=Math.cos(16*pow(a.mx*a.mx*1.5+a.my*a.my,.5)-a.q2)*a.q5;a.dx+=a.zm*a.mx;a.dy+=a.zm*a.my;a.mx=a.x-.5+.25*(Math.sin(1.3544*\na.ti)+Math.sin(.8926*a.ti));a.my=a.y-.5+.25*(Math.sin(.9021*a.ti)+Math.sin(1.2468*a.ti));a.zm=Math.cos(16*pow(a.mx*a.mx*1.5+a.my*a.my,.5)-a.q3)*a.q6;a.dx+=a.zm*a.mx;a.dy+=a.zm*a.my;","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\ntic = min(time-tin,.1);\ntin = time;\n\nra = 1/tic*.25;\n\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\n\nq1 = tt*4;\nq2 = mt*4;\nq3 = bt*4;\n\nst = .1;\nbase = .15;\nq4 = base + treb_avg*st;\nq5 = base + mid_avg*st;\nq6 = base + bass_avg*st;","pixel_eqs_eel":"ti = time*.3;\n\nmx = x - .5 + .25*(sin(ti*1.1278) + sin(ti*.7458));\nmy = y - .5 + .25*(sin(ti*.9454) + sin(ti*1.2378));\nzm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;\ndx = zm*(x-mx);\ndy = zm*(y-my);\n\nmx = x - .5 + .25*(sin(ti*1.3488) + sin(ti*.8552));\nmy = y - .5 + .25*(sin(ti*.7366) + sin(ti*1.1447));\nzm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q2)*q5;\ndx = dx + zm*mx;\ndy = dy + zm*my;\n\nmx = x - .5 + .25*(sin(ti*1.3544) + sin(ti*.8926));\nmy = y - .5 + .25*(sin(ti*.9021) + sin(ti*1.2468));\nzm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q3)*q6;\ndx = dx + zm*mx;\ndy = dy + zm*my;","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_main, (uv - (\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((mix (tmpvar_2, \n    (1.0 - tmpvar_2.zyx)\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\n    (1.0 - rad)\n  , 18.0)));\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv1_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_main, uv) * (1.0 - rad)).xyz;\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    ((uv - 0.5) * 2.0)\n  )) - tmpvar_5);\n  float tmpvar_6;\n  tmpvar_6 = clamp ((0.04 / sqrt(\n    dot (uv1_1, uv1_1)\n  )), 0.0, 1.0);\n  uv1_1 = ((0.3 * cos(\n    (uv1_1 * 12.0)\n  )) - (9.0 * tmpvar_5));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((-(tmpvar_2) + tmpvar_6) + ((12.0 * vec3(\n    clamp ((0.04 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\n  )) * sqrt(tmpvar_2)));\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\n\nfloat3 noiseVal =lum (tex2D(sampler_noise_lq, corr*uv*.02+ .1*rand_frame));\n\nfloat2 k1 = float2((uv.x), (uv.y));\n\nfloat3 ret1 = GetBlur1(uv) ;\n\nfloat k2 = (20*uv)%2;\n\nfloat2 zz = uv.xy * texsize.xy *.08;\nfloat h1 = (tan(zz.x));\nfloat h2 = (tan(zz.y));\n\nuv.xy -= float2(h1,h2)*texsize.zw * 3;\n\n\nfloat3 crisp = tex2D(sampler_main,uv) + noiseVal/30;\n\ncrisp = lerp (crisp, 1-crisp.zyx, 0.01);\n    \n ret = crisp -.03 - 0.2*pow(1-rad,18);\n}","comp_hlsl":"shader_body\n{\n\nfloat2 uv1 = uv-.5;\n\nfloat3 ret1 = tex2D(sampler_main, uv) * (1-rad);\n\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nfloat dx = GetPixel (uv-hor) - GetPixel (uv+hor);\nfloat dy = GetPixel (uv-ver) - GetPixel (uv+ver);\nfloat2 dz = float2 (dx,dy);\n\nuv1 = uv1*0+.3*cos(uv1*2) - dz;;\nfloat dots = saturate(.04/length(uv1));\nuv1 = uv1*0+.3*cos(uv1*12) - 9*dz;;\nfloat3 dots2 = saturate(.04/length(uv1));\n\n\nret = (-ret1) + dots + .0 + 12*dots2*(-0+sqrt(ret1));\n}"}