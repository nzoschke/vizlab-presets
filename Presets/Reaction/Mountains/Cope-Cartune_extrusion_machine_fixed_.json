{"version":2,"baseVals":{"rating":5,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":5,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":1.0002,"dy":-0.0039,"warp":0.01,"wave_x":0.2,"wave_y":0.88,"ob_size":0,"ob_a":0.8,"ib_size":0.03,"ib_r":0.3,"ib_g":0.3,"ib_b":0.3,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":63,"x":0.56,"y":0,"rad":0.11039,"ang":3.40549,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r = r + 0.3*(0.6*sin(time*1.4) + 0.4*sin(0.98*time));\nb = b + 0.3*(0.6*sin(time*1.134) + 0.4*sin(0.78*time));\ng = g + 0.3*(0.6*sin(time*1.287) + 0.4*sin(0.6*time));\n\nr=0;\nb=0;\ng=0;\nr2=r;\nb2=b;\ng2=g;\n\n//r=0.7;\n//g=0.1;\n//b=0;\n\n//r2=0.7;\n//g2=0.7;\n//b2=0;","init_eqs_eel":"","frame_eqs_eel":"r = r + 0.3*(0.6*sin(time*1.4) + 0.4*sin(0.98*time));\nb = b + 0.3*(0.6*sin(time*1.134) + 0.4*sin(0.78*time));\ng = g + 0.3*(0.6*sin(time*1.287) + 0.4*sin(0.6*time));\n\nr=0;\nb=0;\ng=0;\nr2=r;\nb2=b;\ng2=g;\n\n//r=0.7;\n//g=0.1;\n//b=0;\n\n//r2=0.7;\n//g2=0.7;\n//b2=0;"},{"baseVals":{"enabled":1,"sides":34,"y":0,"rad":0.11046,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0},"init_eqs_str":"a.q4=0;","frame_eqs_str":"a.r=a.q4;a.b=1-a.r;a.g=1-a.r;a.r2=a.r;a.b2=a.b;a.g2=a.g;","init_eqs_eel":"","frame_eqs_eel":"\nr = q4;\nb = 1-r;\ng = 1-r;\n\nr2=r;\nb2=b;\ng2=g;"},{"baseVals":{"sides":54,"x":0.44,"y":0,"rad":0.11039,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\nr=0;\nb=0;\ng=0;\nr2=r;\nb2=b;\ng2=g;","init_eqs_eel":"","frame_eqs_eel":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\nr=0;\nb=0;\ng=0;\nr2=r;\nb2=b;\ng2=g;"},{"baseVals":{"x":0,"y":0.2,"rad":0.20068,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"additive":1,"r":0.2,"g":0.7,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.bass_thresh=0;a.q2=0;a.vol=0;a.q3=0;a.q4=0;","frame_eqs_str":"a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.91*(a.bass_thresh-1.3)+1.3);a.q2=a.bass_thresh;a.vol=.25*(a.bass+a.mid+a.treb);a.q3=a.vol;a.q4=Math.min(.5*a.vol,1);a.dy=-.005;a.warp=0;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//System of a Down - Vicinity of Obscenity\n\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.91+1.3);\n\nq2=bass_thresh;\n\nvol=(bass+mid+treb)*0.25;\nq3=vol;\n\nq4 = min(vol*0.5, 1);\ndy = -0.005;\nwarp=0;","pixel_eqs_eel":"//dx1=(cos(y*q3*30)*1.2)*0.11;\n\n//dx=if(above(y,0.8),if(below(y,0.83),if(above(x,0.05),if(below(x,0.93),(dx1*(1-rad+0.1))*1.5,0),0),0),0);\n\n//q1=dx;","warp":"uniform sampler2D sampler_cartunemask1;\n shader_body { \n  vec2 uv_1;\n  uv_1.y = uv.y;\n  uv_1.x = (uv.x + ((\n    cos(((uv.y * q3) * 20.0))\n   * 0.04) * texture (sampler_cartunemask1, uv).xyz).x);\n  vec2 tmpvar_2;\n  tmpvar_2.x = uv_1.x;\n  tmpvar_2.y = (uv.y - pow (pow (\n    (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1) - 0.05)\n  , \n    (texture (sampler_main, uv_1).xyz - 0.9)\n  ).x, 0.007));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (texture (sampler_main, fract(tmpvar_2)).xyz + 0.001);\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv).xyz;\n  ret_1 = ((tmpvar_2 * tmpvar_2) * 1.54);\n  ret_1 = (ret_1 * ret_1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"sampler sampler_cartunemask1;\n\nshader_body\n{\n\n    float1 dx1=(cos(uv.y*q3*20))*0.04;\n    \n    float3 mask = tex2D(sampler_cartunemask1, uv);    \n     \n    uv.x += dx1*mask;\n\n    float3 rc = pow(GetBlur1(uv)-0.05, GetPixel(uv)-0.9);\n    float2 ruv = frac(float2(uv.x, uv.y-pow(rc.x,0.007)));\n    ret = tex2D(sampler_main, float2(ruv.x, ruv.y)).xyz;\n    ret += 0.001;\n    ret *= 1; \n    \n\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret = pow(ret, 2);\n    ret *= 1.54; //gamma\n    ret *= ret; //darken\n}"}