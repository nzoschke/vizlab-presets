{"version":2,"baseVals":{"rating":5,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":6,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":1.17,"wave_scale":0.797,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.9995,"zoom":0.9998,"rot":0.02,"dy":-0.008,"warp":0.01,"sx":1.0098,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.9,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":44.8,"mv_y":38.4,"mv_l":5,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":33,"y":0,"rad":0.11039,"ang":3.4054,"r":0,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//ang = ang + time*2;\n\n//x = x + 0.4*sin(time);\n//y = y + 0.4*sin(-time*1.4);","init_eqs_eel":"","frame_eqs_eel":"//ang = ang + time*2;\n\n//x = x + 0.4*sin(time);\n//y = y + 0.4*sin(-time*1.4);"},{"baseVals":{"sides":34,"y":0.45,"rad":1.62175,"r":0,"a":0.05,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":54,"x":0,"y":0.6,"rad":0.13478,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\nr=0;\nb=0;\ng=0;\nr2=r;\nb2=b;\ng2=g;","init_eqs_eel":"","frame_eqs_eel":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\nr=0;\nb=0;\ng=0;\nr2=r;\nb2=b;\ng2=g;"},{"baseVals":{"x":0,"y":0.2,"rad":0.20068,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"r":0.2,"g":0.7,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.q29=0;a.q6=0;a.mq21=0;a.mq24=0;a.bass_thresh=0;a.chng=0;a.mq28=0;a.mq23=0;a.wg=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.mq30=0;a.q26=0;a.t=0;a.wb=0;a.mq27=0;a.mq25=0;a.mq22=0;a.q17=0;a.vol=0;a.mq26=0;a.q2=0;a.q27=0;a.q3=0;a.wr=0;a.q7=0;a.q28=0;a.q30=0;a.q8=0;a.q1=div(1,Math.asin(1));","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq30=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq30;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q30=a.mq30;a.monitor=a.mq1;a.wave_r+=.3*Math.sin(50*a.vol);a.wave_b+=.3*Math.sin(20*a.vol);a.wave_g+=.5*Math.sin(35*a.vol);a.q8=a.wave_r;a.q7=a.wave_b;a.q6=a.wave_g;a.wr=.5+.4*(.6*Math.sin(1.1*a.time)+.4*Math.sin(.8*\na.time));a.wb=.5+.4*(.6*Math.sin(1.6*a.time)+.4*Math.sin(.5*a.time));a.wg=.5+.4*(.6*Math.sin(1.34*a.time)+.4*Math.sin(.4*a.time));a.monitor=a.wg;a.q10=a.wr;a.q11=a.wb;a.q12=a.wg;a.q18=.007*Math.sin(.1*a.time);a.q17=-.007*Math.sin(.254*a.time);a.q2=a.bass_thresh;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.q3=a.vol;a.warp=0;a.t-=div(1,a.fps);a.t=.00001<Math.abs(above(a.t,2))?a.t-2:a.t;a.q2=a.t;","pixel_eqs_str":"","init_eqs_eel":"q1 = 1/asin(1);","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq30=if(above(chng,cthr),rand(1)*.3,mq30);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\n\nmonitor=mq1;\nwave_r = wave_r + 0.3*sin(vol*50);\nwave_b = wave_b + 0.3*sin(vol*20);\nwave_g = wave_g + 0.5*sin(vol*35);\n\n\nq8=wave_r;\nq7=wave_b;\nq6=wave_g;\n\nwr = 0.5+0.4*(0.6*sin(time*1.1) + 0.4*sin(0.8*time));\nwb = 0.5+0.4*(0.6*sin(time*1.6) + 0.4*sin(0.5*time));\nwg = 0.5+0.4*(0.6*sin(time*1.34) + 0.4*sin(0.4*time));\n\nmonitor=wg;\nq10=wr;\nq11=wb;\nq12=wg;\nq18 = 0.007*sin(time*0.1);\nq17 = -0.007*sin(time*0.254);\nq2=bass_thresh;\n\nvol=(bass+mid+treb)*0.25;\nvol=vol*vol;\nq3=vol;\n\nwarp=0;\nt = t - 1/fps;\nt = if(above(t,2),t-2,t);\nq2 = t;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec3 noise3_2;\n  vec3 ret_3;\n  vec3 tmpvar_4;\n  tmpvar_4 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\n  uv_1 = (uv - vec2(0.0, 1.0));\n  vec2 tmpvar_5;\n  tmpvar_5 = (0.5 + ((uv_1 - 0.5) * (1.0 + \n    (tmpvar_4.y * 0.03)\n  )));\n  vec2 tmpvar_6;\n  tmpvar_6.x = (tmpvar_5.x + pow (tmpvar_4.x, 0.0));\n  tmpvar_6.y = (tmpvar_5.y + pow (tmpvar_4.x, 0.005));\n  noise3_2 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz * fract(q15));\n  vec3 tmpvar_7;\n  tmpvar_7 = (noise3_2 * (vec3(1.0, 1.0, 1.0) - vec3(fract(\n    (q3 * 0.5)\n  ))));\n  noise3_2 = tmpvar_7;\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_main, fract(tmpvar_6));\n  vec3 tmpvar_9;\n  tmpvar_9.x = q10;\n  tmpvar_9.y = q11;\n  tmpvar_9.z = q12;\n  vec3 tmpvar_10;\n  tmpvar_10 = mix (tmpvar_7, tmpvar_9, tmpvar_8.xxx);\n  ret_3 = (tmpvar_8.xyz + clamp ((\n    (tmpvar_8.yzx * tmpvar_10.zxy)\n   - \n    (tmpvar_8.zxy * tmpvar_10.yzx)\n  ), 0.0, 1.0));\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_3.x > (q21 * roam_cos.y)) && (ret_3.x <= (q24 * roam_sin.x)))) {\n    ret_3.y = (ret_3.y - (tmpvar_11.x * 0.5));\n  };\n  if (((ret_3.y > (q22 * roam_sin.x)) && (ret_3.y <= (q25 * roam_cos.x)))) {\n    ret_3.z = (ret_3.z - (tmpvar_11.y * 0.5));\n  };\n  if (((ret_3.z > (q23 * roam_cos.x)) && (ret_3.z <= (q26 * roam_sin.y)))) {\n    ret_3.x = (ret_3.x - (tmpvar_11.z * 0.5));\n  };\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_3;\n  ret = tmpvar_12.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 2.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - tmpvar_5);\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.z;\n  tmpvar_7.y = tmpvar_4.z;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv - tmpvar_7);\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.z;\n  tmpvar_9.y = tmpvar_4.z;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_3.x;\n  tmpvar_10.y = tmpvar_4.x;\n  vec3 tmpvar_11;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur1, uv);\n  vec4 tmpvar_13;\n  tmpvar_13 = texture (sampler_main, uv);\n  vec4 tmpvar_14;\n  tmpvar_14 = texture (sampler_blur3, uv);\n  tmpvar_11 = mix (clamp (mix (\n    mix (mix (mix (mix (\n      (vec3(0.0, 1.0, 0.0) * vec3(sqrt(dot (tmpvar_9, tmpvar_9))))\n    , vec3(1.0, 0.0, 0.0), vec3(\n      (tmpvar_13.z * clamp ((1.0 - (\n        ((tmpvar_14.xyz * scale3) + bias3)\n      .y * 8.0)), 0.0, 1.0))\n    )), vec3(1.0, 1.0, 1.0), vec3((\n      ((((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1).x * ((tmpvar_12.xyz * scale1) + bias1).z) * 2.0)\n     * \n      (1.0 - (((tmpvar_12.xyz * scale1) + bias1).y * 4.0))\n    ))), vec3(0.8, 0.0, 1.5), vec3(sqrt(dot (tmpvar_10, tmpvar_10)))), vec3(1.0, 1.0, 0.0), vec3((tmpvar_13.x * clamp ((1.0 - \n      (((tmpvar_14.xyz * scale3) + bias3).y * 8.0)\n    ), 0.0, 1.0))))\n  , vec3(1.0, 1.0, 1.0), vec3(\n    ((((\n      (texture (sampler_blur1, tmpvar_6).xyz * scale1)\n     + bias1).z * (\n      (tmpvar_12.xyz * scale1)\n     + bias1).x) * 2.0) * (1.0 - ((\n      (tmpvar_12.xyz * scale1)\n     + bias1).y * 4.0)))\n  )), 0.0, 1.0), vec3(1.0, 1.0, 1.0), tmpvar_13.yyy);\n  ret_1 = tmpvar_11;\n  vec3 tmpvar_15;\n  tmpvar_15.x = tmpvar_6.x;\n  tmpvar_15.y = tmpvar_8.y;\n  tmpvar_15.z = uv.x;\n  vec4 tmpvar_16;\n  tmpvar_16 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_15) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((tmpvar_11.x > (q26 * roam_cos.y)) && (tmpvar_11.x <= (q23 * roam_sin.x)))) {\n    ret_1.z = (tmpvar_11.z - (tmpvar_16.x * 0.5));\n  };\n  if (((tmpvar_11.y > (q25 * roam_sin.x)) && (tmpvar_11.y <= (q22 * roam_cos.x)))) {\n    ret_1.x = (tmpvar_11.x - (tmpvar_16.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * roam_cos.x)) && (ret_1.z <= (q21 * roam_sin.y)))) {\n    ret_1.y = (tmpvar_11.y - (tmpvar_16.z * 0.5));\n  };\n  ret_1 = (ret_1 - ((roam_sin.wzy * roam_cos.zxy) * 0.2));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_1;\n  ret = tmpvar_17.xyz;\n }","warp_hlsl":"shader_body\n{\n\n\n    float3 rc = GetPixel(uv)+GetBlur1(uv);//+GetPixel(uv);\n    uv = uv-float2(0,1);\n    float2 ruv = 0.5 + (uv-0.5)*(1+(rc.y*0.03));  \n\n    ruv = frac(float2(ruv.x+pow(rc.x,0), ruv.y+pow(rc.x, 0.005)));\n    \n    float3 noise3 = tex2D(sampler_noise_lq, uv_orig*texsize.xy*texsize_noise_lq.zw+rand_frame.xy);\n    noise3 *= frac(q15);\n    noise3 = lerp(noise3, float3(0,0,0), frac(q3*0.5));\n\n    ret = tex2D(sampler_main, float2(ruv.x, ruv.y)).xyz;\n    \n    float3 noise2 = lerp(noise3,float3(q10,q11,q12), ret.x);    \n    \n    ret += saturate(cross((ret), (noise2)));\n    ret *= 1; \n    \n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; \nif(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z -= (noise9).y*.5; \nif(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; \n\n}","comp_hlsl":"sampler sampler_manyfish;\nshader_body\n{\n    float2 d = texsize.zw*2;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n    float2 uv_y = uv-float2(dx.y,dy.y)*0.4;\n\n    float2 uv_dx = uv - float2(dx.x,dy.x)*1;\n    float2 uv_dz = uv - float2(dx.z,dy.z)*1;\n\nret = 0;\nret = lerp(ret, float3(0,1,0), length(float2(dx.z,dy.z)));\nret = lerp(ret,float3(1,0,0),GetPixel(uv).z*saturate(1-GetBlur3(uv).y*8));\nret = lerp(ret,1,GetBlur1(uv_dz).x*GetBlur1(uv).z*2*(1-GetBlur1(uv).y*4)); \n\nret = lerp(ret, float3(0.8,0,1.5), length(float2(dx.x,dy.x)));\nret = lerp(ret,float3(1,1,0),GetPixel(uv).x*saturate(1-GetBlur3(uv).y*8));\nret = lerp(ret,1,GetBlur1(uv_dx).z*GetBlur1(uv).x*2*(1-GetBlur1(uv).y*4)); \n\nret = lerp(saturate(ret),1,GetPixel(uv).y);\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((float3(uv_dx.x,uv_dz.y,uv.x)*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q30 \n                     );\nif(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z -= (noise9).x*.5; \nif(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x -= (noise9).y*.5; \nif(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y -= (noise9).z*.5; \n\nret-=roam_sin.wzy*roam_cos.zxy*.2;\n}\n"}