{"version":2,"baseVals":{"rating":5,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":6,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":1.17,"wave_scale":0.797,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.9,"ob_size":0,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":44.8,"mv_y":38.4,"mv_l":5,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":33,"y":0,"rad":0.11039,"ang":3.4054,"r":0,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//ang = ang + time*2;\n\n//x = x + 0.4*sin(time);\n//y = y + 0.4*sin(-time*1.4);","init_eqs_eel":"","frame_eqs_eel":"//ang = ang + time*2;\n\n//x = x + 0.4*sin(time);\n//y = y + 0.4*sin(-time*1.4);"},{"baseVals":{"sides":34,"y":0.45,"rad":1.62175,"r":0,"a":0.05,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":54,"x":0,"y":0.6,"rad":0.13478,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\nr=0;\nb=0;\ng=0;\nr2=r;\nb2=b;\ng2=g;","init_eqs_eel":"","frame_eqs_eel":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\nr=0;\nb=0;\ng=0;\nr2=r;\nb2=b;\ng2=g;"},{"baseVals":{"x":0,"y":0.2,"rad":0.20068,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"r":0.2,"g":0.7,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.pulsetime=0;a.meanbass_att=0;a.lastbeat=0;a.beatrate=0;a.pulse=0;a.peakbass_att=0;a.ypos=0;a.att=0;a.volume=0;a.beat=0;","frame_eqs_str":"a.warp=0;a.dx=-.0005;a.dy=-.0005;a.volume=.3*(a.bass+a.mid+a.att);a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,a.peakbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatrate=Math.max(.00001<Math.abs(a.beat)?\n.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-a.beat)*a.peakbass_att*(.95*above(a.time-a.lastbeat,2*a.beatrate)+.995*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.wave_x=.25*a.time-Math.floor(.25*a.time);a.ypos=.00001<Math.abs(below(a.wave_x,.005))?.01*Math.floor(rand(60)):a.ypos;a.wave_y=\n.15+a.ypos;a.decay=.00001<Math.abs(below(a.wave_x,.005))?.8:.985;a.pulse=.00001<Math.abs(a.beat)?1:a.pulse;a.pulsetime=.00001<Math.abs(a.beat)?a.time:a.pulsetime;a.wave_y+=.00001<Math.abs(a.pulse)?.2*Math.sin(20*(a.time-a.pulsetime)):0;a.pulse=.00001<Math.abs(above(20*(a.time-a.pulsetime),3.5))?0:a.pulse;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"warp=0;\ndx=-0.0005;\ndy=-0.0005;\nvolume = 0.3*(bass+mid+att);\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\nwave_x = 0.25*time-int(0.25*time);\nypos = if(below(wave_x,0.005),int(rand(60))*0.01,ypos);\nwave_y = 0.15 + ypos;\ndecay = if(below(wave_x,0.005),0.8,0.985);\npulse = if(beat,1,pulse);\npulsetime = if(beat,time,pulsetime);\nwave_y = wave_y + if(pulse,0.2*sin(20*(time-pulsetime)),0);\npulse = if(above(20*(time-pulsetime),3.5),0,pulse);","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 noise3_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\n  vec2 tmpvar_3;\n  tmpvar_3 = (0.5 + ((\n    (uv - vec2(0.0, 1.0))\n   - 0.5) * (1.0 + \n    (tmpvar_2.y * 0.03)\n  )));\n  vec2 tmpvar_4;\n  tmpvar_4.x = (tmpvar_3.x + pow (tmpvar_2.x, 0.0));\n  tmpvar_4.y = (tmpvar_3.y + pow (tmpvar_2.x, 0.005));\n  noise3_1 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz * fract(q15));\n  vec3 tmpvar_5;\n  tmpvar_5 = (noise3_1 * (vec3(1.0, 1.0, 1.0) - vec3(fract(\n    (q3 * 0.5)\n  ))));\n  noise3_1 = tmpvar_5;\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, fract(tmpvar_4));\n  vec3 tmpvar_7;\n  tmpvar_7.x = q10;\n  tmpvar_7.y = q11;\n  tmpvar_7.z = q12;\n  vec3 tmpvar_8;\n  tmpvar_8 = mix (tmpvar_5, tmpvar_7, tmpvar_6.xxx);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = (tmpvar_6.xyz + clamp ((\n    (tmpvar_6.yzx * tmpvar_8.zxy)\n   - \n    (tmpvar_6.zxy * tmpvar_8.yzx)\n  ), 0.0, 1.0));\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz + ((texture (sampler_blur2, uv).xyz * scale2) + bias2));\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"shader_body\n{\n\n\n    float3 rc = GetPixel(uv)+GetBlur1(uv);//+GetPixel(uv);\n    uv = uv-float2(0,1);\n    float2 ruv = 0.5 + (uv-0.5)*(1+(rc.y*0.03));  \n\n    ruv = frac(float2(ruv.x+pow(rc.x,0), ruv.y+pow(rc.x, 0.005)));\n    \n    float3 noise3 = tex2D(sampler_noise_lq, uv_orig*texsize.xy*texsize_noise_lq.zw+rand_frame.xy);\n    noise3 *= frac(q15);\n    noise3 = lerp(noise3, float3(0,0,0), frac(q3*0.5));\n\n    ret = tex2D(sampler_main, float2(ruv.x, ruv.y)).xyz;\n    \n    float3 noise2 = lerp(noise3,float3(q10,q11,q12), ret.x);    \n    \n    ret += saturate(cross((ret), (noise2)));\n    ret *= 1; \n    \n\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    //ret += GetBlur1(uv);\n    ret += GetBlur2(uv);\n    ret = ret;\n    \n    ret *= 1.00; //gamma\n}"}