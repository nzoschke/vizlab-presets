{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.995,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"wrap":0,"wave_a":1,"wave_smoothing":0.4,"wave_mystery":-1,"modwavealphastart":1,"modwavealphaend":1,"zoom":0.9999,"warp":0.0783,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.1,"ob_g":0.2,"ob_b":0.4,"ob_a":0.04,"ib_size":0,"mv_x":1,"mv_y":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.maxdbass=0;a.q25=0;a.f=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.dbass=0;a.q1=0;a.q5=0;a.vb=0;a.cheat=0;a.q9=0;a.v=0;a.mm=0;a.tt=0;a.lastbeat=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.interval=0;a.cvol=0;a.beat_avg=0;a.q4=0;a.pbass=0;a.q16=0;a.q26=0;a.t=0;a.b=0;a.trig=0;a.q19=0;a.beat=0;a.q17=0;a.bb=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.m=0;a.vvm=0;a.max_bass=0;a.q32=0;a.endframe=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.sure=0;a.q30=0;a.q20=0;a.vvt=\n0;a.q8=0;a.max_bass=1.2;","frame_eqs_str":"a['vb']=((a['vb']*0.95)+(((1-a['vb'])*pow(((a['bass_att']*a['treb_att'])*a['mid_att']), 2))*0.02)); a['vvb']=((a['vvb']*0.95)+(((1-a['vvb'])*a['vb'])*0.01)); a['vm']=((a['vm']*0.95)+(((1-a['vm'])*pow(a['mid_att'], 2))*0.02)); a['vvm']=((a['vvm']*0.95)+(((1-a['vvm'])*a['vm'])*0.01)); a['vt']=((a['vt']*0.95)+(((1-a['vt'])*pow(a['treb_att'], 2))*0.02)); a['vvt']=((a['vvt']*0.95)+(((1-a['vvt'])*a['vt'])*0.01)); a['vvb']=Math.min(1, Math.max(0, a['vvb'])); a['vvm']=Math.min(1, Math.max(0, a['vvm'])); a['vvt']=Math.min(1, Math.max(0, a['vvt'])); a['q1']=(a['vvb']*2); a['q2']=(a['vvm']*2); a['q3']=(a['vvt']*2); a['v']=2; a['bb']=(a['bb']-(a['vvb']*a['v'])); a['mm']=(a['mm']-(a['vvm']*a['v'])); a['tt']=(a['tt']-(a['vvt']*a['v'])); a['q4']=-a['bb']; a['q5']=-a['mm']; a['q6']=-a['tt']; a['q4']=(((a['q1']+a['q2'])+a['q3'])*5); a['q5']=(((a['q1']+a['q2'])+a['q3'])*5); a['q6']=(((a['q1']+a['q2'])+a['q3'])*5); a['q7']=(((a['q1']+a['q2'])+a['q3'])*5); a['q8']=(((a['q1']+a['q2'])+a['q3'])*5); a['q9']=(((a['q1']+a['q2'])+a['q3'])*5); a['q10']=(((a['q1']+a['q2'])+a['q3'])*5); a['q11']=(((a['q1']+a['q2'])+a['q3'])*5); a['q12']=(((a['q1']+a['q2'])+a['q3'])*5); a['q13']=(((a['q1']+a['q2'])+a['q3'])*5); a['q14']=(((a['q1']+a['q2'])+a['q3'])*5); a['q15']=(((a['q1']+a['q2'])+a['q3'])*5); a['q16']=(((a['q1']+a['q2'])+a['q3'])*5); a['q17']=(((a['q1']+a['q2'])+a['q3'])*5); a['q18']=(((a['q1']+a['q2'])+a['q3'])*5); a['q19']=(((a['q1']+a['q2'])+a['q3'])*5); a['q20']=(((a['q1']+a['q2'])+a['q3'])*5); a['q21']=(((a['q1']+a['q2'])+a['q3'])*5); a['q22']=(((a['q1']+a['q2'])+a['q3'])*5); a['q23']=(((a['q1']+a['q2'])+a['q3'])*5); a['q24']=(((a['q1']+a['q2'])+a['q3'])*5); a['q25']=(((a['q1']+a['q2'])+a['q3'])*5); a['q26']=(((a['q1']+a['q2'])+a['q3'])*5); a['q27']=(((a['q1']+a['q2'])+a['q3'])*5); a['q28']=(((a['q1']+a['q2'])+a['q3'])*5); a['q29']=(((a['q1']+a['q2'])+a['q3'])*5); a['q30']=(((a['q1']+a['q2'])+a['q3'])*5); a['q31']=(((a['q1']+a['q2'])+a['q3'])*5); a['q32']=(((a['q1']+a['q2'])+a['q3'])*5); a['wave_r']=a['mv_b']; a['wave_b']=a['mv_g']; a['wave_g']=a['mv_r']; a['b']=Math.max((a['bass']-1), 0); a['m']=Math.max((a['mid']-1), 0); a['t']=Math.max((a['treb']-1), 0); a['mv_r']=((0.6*Math.abs(Math.sin((((a['time']*2.6)+1.23)+Math.cos(((a['time']*4.87)+2.145))))))+a['b']); a['mv_g']=((0.6*Math.abs(Math.sin((((a['time']*4.451)+2.89)+Math.cos(((a['time']*3.74)+0.78))))))+a['m']); a['mv_b']=((0.6*Math.abs(Math.sin((((a['time']*3.845)+1.23)+Math.cos(((a['time']*2.6)+3))))))+a['t']); a['q1']=(3.14*Math.cos((((a['time']*1.45)+1.54)+Math.cos(((a['bass_att']+a['time'])+3.22))))); a['q2']=(3.14*Math.cos((((a['time']*2.4)+2.69)+Math.cos(((a['bass_att']+a['time'])+0.65))))); a['q3']=mod(a['time'],50); a['f']=((Math.abs(equal(a['endframe'], 0))>0.00001)?(1):(0)); a['beat_avg']=((Math.abs(equal(a['beat_avg'], 0))>0.00001)?(a['bass']):(a['beat_avg'])); a['beat_avg']=div((a['beat_avg']+a['bass']),2); a['max_bass']=((Math.abs((a['beat']*above((a['f']*a['bass_att']), a['max_bass'])))>0.00001)?(a['bass_att']):(a['max_bass'])); a['max_bass']=((Math.abs(equal(mod(a['frame'],3000), 0))>0.00001)?((0.8*a['max_bass'])):((a['max_bass']*0.9999))); a['max_bass']=((Math.abs(above(a['max_bass'], (10*a['beat_avg'])))>0.00001)?((10*a['beat_avg'])):(a['max_bass'])); a['trig']=((Math.abs((equal(a['beat'], 1)*above(a['bass_att'], a['max_bass'])))>0.00001)?(1):(0)); a['endframe']=((Math.abs((equal(a['trig'], 1)*equal(a['endframe'], 0)))>0.00001)?((a['frame']+(4*a['interval']))):(a['endframe'])); a['trig']=((Math.abs(equal(a['frame'], a['endframe']))>0.00001)?(0):(a['trig'])); a['endframe']=((Math.abs(above(a['frame'], a['endframe']))>0.00001)?(0):(a['endframe'])); a['q4']=((Math.abs(above(a['endframe'], 0))>0.00001)?(1):(0)); a['wave_a']=0; a['rot']=(0.1*Math.sin(((a['time']*1.53)+Math.cos(((a['time']*4.676)+3.43))))); a['rot']=(a['rot']*(1+(0.4*a['q4']))); a['ob_size']=(0.3+(0.7*Math.abs(Math.cos((((a['time']*2.45)+1.566)+Math.sin(((a['time']*5)+2.43))))))); a['ob_r']=(a['mv_r']*div(Math.floor(rand(100)),100)); a['ob_g']=(a['mv_g']*div(Math.floor(rand(100)),100)); a['ob_b']=(a['mv_b']*div(Math.floor(rand(100)),100)); a['ob_a']=0.075; a['mv_x']=((Math.abs(equal(a['q4'], 1))>0.00001)?((54+(10*Math.cos((a['time']*10))))):(64)); a['sx']=((Math.abs(equal(Math.floor(rand((40+(60*(1-a['q4']))))), 29))>0.00001)?((-0.75+div(Math.floor(rand(50)),100))):(a['sx'])); a['sy']=((Math.abs(equal(Math.floor(rand((40+(60*(1-a['q4']))))), 39))>0.00001)?((-0.75+div(Math.floor(rand(50)),100))):(a['sy'])); a['zoom']=((Math.abs(equal(Math.floor(rand((40+(60*a['q4'])))), 25))>0.00001)?(1.6):(a['zoom'])); a['sure']=((Math.abs(equal(a['sure'], 0))>0.00001)?(0.6):(a['sure'])); a['interval']=((Math.abs(equal(a['interval'], 0))>0.00001)?(40):(a['interval'])); a['lastbeat']=((Math.abs(equal(a['lastbeat'], 0))>0.00001)?((a['frame']-a['fps'])):(a['lastbeat'])); a['dbass']=div((a['bass']-a['pbass']),a['fps']); a['beat']=(above(a['dbass'], (0.6*a['maxdbass']))*above((a['frame']-a['lastbeat']), div(a['fps'],3))); a['sure']=((Math.abs((a['beat']*below(Math.abs((a['frame']-(a['interval']+a['lastbeat']))), div(a['fps'],5))))>0.00001)?(Math.min((0.095+a['sure']), 1)):(((a['beat']*(a['sure']-0.095))+(((1-a['beat'])*a['sure'])*0.9996)))); a['sure']=Math.max(0.5, a['sure']); a['cheat']=((Math.abs((above(a['frame'], ((a['lastbeat']+a['interval'])+Math.floor(div(a['fps'],10))))*above(a['sure'], 0.91)))>0.00001)?(1):(a['cheat'])); a['beat']=((Math.abs(a['cheat'])>0.00001)?(1):(a['beat'])); a['sure']=((Math.abs(a['cheat'])>0.00001)?((0.95*a['sure'])):(a['sure'])); a['maxdbass']=Math.max((a['maxdbass']*0.999), a['dbass']); a['maxdbass']=Math.max(0.012, a['maxdbass']); a['maxdbass']=Math.min(0.02, a['maxdbass']); a['interval']=((Math.abs(a['beat'])>0.00001)?((a['frame']-a['lastbeat'])):(a['interval'])); a['lastbeat']=((Math.abs(a['beat'])>0.00001)?((a['frame']-(a['cheat']*Math.floor(div(a['fps'],10))))):(a['lastbeat'])); a['cheat']=0; a['pbass']=a['bass']; a['wave_a']=(a['beat']*(1-a['q4'])); a['wave_a']=div(((0.9999*sqrt(a['wave_a']))*37),a['fps']); a['cvol']=((0.99*a['cvol'])+(0.0033*((a['bass']+a['mid'])+a['treb']))); a['dx']=((((1-a['q4'])*div(a['cvol'],1.2))*0.002)*Math.cos((((a['time']*47)+3.54)+Math.sin(((45*a['time'])+0.234))))); a['dy']=((((1-a['q4'])*div(a['cvol'],1.2))*0.002)*Math.sin((((a['time']*39.64)+0.87)+Math.cos(((a['time']*49.9)+1.54))))); ((a['wave_mystery']-0.3)+(0.7*Math.sin((((5*a['time'])+2.43)+Math.cos(((15*a['time'])+1.65)))))) a['zoom']=((Math.abs(equal(a['beat'], 1))>0.00001)?((a['zoom']+(a['bass']*0.7))):(a['zoom'])); a['monitor']=a['sure']; a['monitor']=div((60*a['fps']),a['interval']); a['monitor']=a['cvol']; a['monitor']=(1.1*a['max_bass']);","pixel_eqs_str":"a.dx=.00001<Math.abs(below(Math.abs(a.ang-a.q1),.4*sqrt(a.rad)))?a.dx+.02*(1-a.q4)*a.rad*Math.sin(a.q1):a.dx;a.dy=.00001<Math.abs(below(Math.abs(a.ang-a.q1),.4*sqrt(a.rad)))?a.dy+.02*(1-a.q4)*a.rad*Math.cos(a.q1):a.dy;a.zoom=.00001<Math.abs(below(Math.abs(a.ang-a.q1),.4*sqrt(a.rad)))?a.zoom+.2*(1-a.q4)*a.rad*a.bass:a.zoom;a.dx=.00001<Math.abs(below(Math.abs(a.ang-a.q2),.4*sqrt(a.rad)))?a.dx+.02*(1-a.q4)*a.rad*Math.sin(a.q2):a.dx;a.dy=.00001<Math.abs(below(Math.abs(a.ang-a.q2),\n.4*sqrt(a.rad)))?a.dy+.02*(1-a.q4)*a.rad*Math.cos(a.q2):a.dy;a.zoom=.00001<Math.abs(below(Math.abs(a.ang-a.q2),.4*sqrt(a.rad)))?a.zoom+.2*(1-a.q4)*a.rad*a.bass:a.zoom;a.zoom=a.zoom-.04*(1-a.q4)*a.rad+.1*a.q4;","init_eqs_eel":"max_bass = 1.2;","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\nvb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = vvb*2;//0.5 + vb - vvb;\nq2 = vvm*2;//0.5 + vm - vvm;\nq3 = vvt*2;//0.5 + vt - vvt;\nv=2;\nbb = bb - vvb*v;\nmm = mm - vvm*v;\ntt = tt - vvt*v;\nq4 = -bb;\nq5 = -mm;\nq6 = -tt;\nq4=(q1+q2+q3)*5;\nq5=(q1+q2+q3)*5;\nq6=(q1+q2+q3)*5;\nq7=(q1+q2+q3)*5;\nq8=(q1+q2+q3)*5;\nq9=(q1+q2+q3)*5;\nq10=(q1+q2+q3)*5;\nq11=(q1+q2+q3)*5;\nq12=(q1+q2+q3)*5;\nq13=(q1+q2+q3)*5;\nq14=(q1+q2+q3)*5;\nq15=(q1+q2+q3)*5;\nq16=(q1+q2+q3)*5;\nq17=(q1+q2+q3)*5;\nq18=(q1+q2+q3)*5;\nq19=(q1+q2+q3)*5;\nq20=(q1+q2+q3)*5;\nq21=(q1+q2+q3)*5;\nq22=(q1+q2+q3)*5;\nq23=(q1+q2+q3)*5;\nq24=(q1+q2+q3)*5;\nq25=(q1+q2+q3)*5;\nq26=(q1+q2+q3)*5;\nq27=(q1+q2+q3)*5;\nq28=(q1+q2+q3)*5;\nq29=(q1+q2+q3)*5;\nq30=(q1+q2+q3)*5;\nq31=(q1+q2+q3)*5;\nq32=(q1+q2+q3)*5;\n\nwave_r = mv_b;\nwave_b = mv_g;\nwave_g = mv_r;\nb=max(bass-1,0);\nm=max(mid-1,0);\nt=max(treb-1,0);\nmv_r=.6*abs(sin(time*2.6+1.23+cos(time*4.87+2.145)))+b;\nmv_g=.6*abs(sin(time*4.451+2.89+cos(time*3.74+.78)))+m;\nmv_b=.6*abs(sin(time*3.845+1.23+cos(time*2.6+3)))+t;\n\nq1=3.14*cos(time*1.45 + 1.54 + cos(bass_att+time+ 3.22));\nq2 = 3.14*cos(time*2.4 + 2.69 + cos(bass_att+time+.65));\nq3=time%50;\nf=if(equal(endframe,0),1,0);\nbeat_avg=if(equal(beat_avg,0),bass,beat_avg);\nbeat_avg=(beat_avg+bass)/2;\n\n\nmax_bass = if( beat*above(f*bass_att,max_bass),bass_att, max_bass );\nmax_bass = if( equal(frame%3000,0),0.8*max_bass,max_bass*.9999);\nmax_bass=if( above(max_bass,10*beat_avg),10*beat_avg,max_bass);\ntrig=if( equal(beat,1)*above(bass_att,max_bass),1,0);\nendframe=if(equal(trig,1)*equal(endframe,0),frame+4*interval,endframe);\ntrig=if(equal(frame,endframe),0,trig);\nendframe=if(above(frame,endframe),0,endframe);\nq4=if(above(endframe,0),1,0);\nwave_a=0;\nrot=.1*sin(time*1.53+cos(time*4.676+3.43));\nrot=rot*(1+.4*q4);\nob_size=.3+.7*abs(cos(time*2.45 + 1.566 +sin(time*5 +2.43)));\n\nob_r=mv_r*(int(rand(100))/100);\nob_g=mv_g*(int(rand(100))/100);\nob_b=mv_b*(int(rand(100))/100);\nob_a=.075;\nmv_x=if(equal(q4,1),54+10*cos(time*10),64);\nsx= if(equal(int(rand(40+60*(1-q4))),29),-.75+int(rand(50))/100,sx);\nsy=if(equal(int(rand(40+60*(1-q4))),39),-.75+int(rand(50))/100,sy);\nzoom=if(equal(int(rand(40+60*(q4))),25),1.6,zoom);\n\n// -------------------------------- Beat Detective 007 ----------------------------------\nsure=if(equal(sure,0),.6,sure);\ninterval=if(equal(interval,0),40,interval);\nlastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);\ndbass=(bass-pbass)/FPS;\nbeat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);\nsure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),\nmin(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);\nsure=max(.5,sure);\ncheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);\nbeat=if(cheat,1,beat);\nsure=if(cheat,.95*sure,sure);\nmaxdbass=max(maxdbass*.999,dbass);\nmaxdbass=max(.012,maxdbass);\nmaxdbass=min(.02,maxdbass);\ninterval=if(beat, frame-lastbeat,interval);\nlastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);\ncheat=0;\npbass=bass;\n// ----------------------------------------------------------------------------------------------\nwave_a=beat*(1-q4);\nwave_a=.9999*sqrt(wave_a)*37/FPS;\ncvol = .99*cvol+.0033*(bass+mid+treb);\ndx=(1-q4)*(cvol/1.2)*.002*cos(time*47+3.54+sin(45*time+.234));\n\ndy=(1-q4)*(cvol/1.2)*.002*sin(time*39.64+0.87+cos(time*49.9+1.54));\nwave_mystery -.3+.7*sin(5*time+2.43+cos(15*time+1.65));\nzoom = if(equal(beat,1),zoom+bass*.7,zoom);\nmonitor=sure;\nmonitor=60*FPS/interval;\nmonitor=cvol;\nmonitor = 1.1*max_bass;","pixel_eqs_eel":"dx= if( below( abs(ang-q1), .4*sqrt(rad)),dx+(1-q4)*(.02*rad*sin(q1)),dx);\ndy=if( below(abs(ang-q1),.4*sqrt(rad)),dy+(1-q4)*(.02*rad*cos(q1)),dy);\nzoom=if(below( abs(ang-q1),.4*sqrt(rad)),zoom+(1-q4)*(.2*rad*bass),zoom);\n\ndx= if( below( abs(ang-q2), .4*sqrt(rad)),dx+(1-q4)*(.02*rad*sin(q2)),dx);\ndy = if(below( abs(ang-q2),.4*sqrt(rad)),dy+(1-q4)*(.02*rad*cos(q2)),dy);\nzoom = if(below(abs(ang-q2),.4*sqrt(rad)),zoom+(1-q4)*(.2*rad*bass), zoom);\n\nzoom=zoom-(1-q4)*.04*rad +q4*.1;","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, ((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.1))).xyz - 0.5)\n   / 256.0) * 28.0));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.04, 0.04, 0.04));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","comp":"float xlat_mutablepads;\nvec2 xlat_mutablers;\n shader_body { \n  vec2 uv1_1;\n  uv1_1 = (((uv - 0.5) * aspect.xy) * aspect.yx);\n  float tmpvar_2;\n  tmpvar_2 = (3.0 / abs(uv1_1.y));\n  xlat_mutablers.x = ((uv1_1.x * tmpvar_2) * 2.0);\n  xlat_mutablers.y = tmpvar_2;\n  mat2 tmpvar_3;\n  tmpvar_3[uint(0)] = _qa.xy;\n  tmpvar_3[1u] = _qa.zw;\n  xlat_mutablers = (xlat_mutablers * tmpvar_3);\n  xlat_mutablers.y = (xlat_mutablers.y + q17);\n  vec2 tmpvar_4;\n  tmpvar_4 = sin(xlat_mutablers);\n  float x_5;\n  x_5 = (tmpvar_4.x * tmpvar_4.y);\n  xlat_mutablepads = (0.5 - sqrt(sqrt(\n    (x_5 * x_5)\n  )));\n  xlat_mutablepads = (xlat_mutablepads * (float(\n    (xlat_mutablepads <= -0.1)\n  ) * clamp (\n    ((15.0 / tmpvar_2) - 0.3)\n  , 0.0, 1.0)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((\n    ((1.0 - (2.0 * xlat_mutablepads)) * texture (sampler_main, (uv + (xlat_mutablepads / 4.0))).xyz)\n   * \n    (1.0 + q22)\n  ) - (\n    ((xlat_mutablepads * q2) * texture (sampler_main, (xlat_mutablers / 180.0)).xyz)\n   * 4.0)) - ((\n    (xlat_mutablepads * q1)\n   * texture (sampler_main, \n    (1.0 - uv)\n  ).xyz) * 4.0));\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // take the difference between the crisp and blurred images,\n    // then add it back into the image.  Creates spots and stripes over time.\n    ret += (ret - GetBlur1(uv))*0.3;\n    ret *= 0.9;\n\n   // add noise:\n   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.1;// + rand_frame.xy;\n   ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 28;\n\n   // desaturate over time, to keep the globs white\n   ret = lerp(ret, lum(ret), 0.04);\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\n\nfloat2 rs;\nfloat pads;\n\nshader_body {\nfloat2 uv1 = (uv-.5-.0*float2(q1,q2) )*aspect.xy;\n//uv = mul(uv-.5,float2x2(_qa))+.5;\n\nuv1*= aspect.yx;\nfloat h1 = 3;\n\nfloat z = h1/abs(uv1.y) ;\n\n\n\nrs.x = (uv1.x) *z*2;\nfloat mask = saturate (15/z-.3);\nrs.y = z;\nrs = mul(rs,float2x2(_qa));\nrs.y += q17;\nfloat2 uv6 = sin(rs);\npads = .5-sqrt(length(uv6.x*uv6.y));\npads *= (pads <= -.1) *mask;\n\nfloat mask2 = (pads <= -.1);\nret = (1-2*pads)* (GetPixel(uv+pads/4))*(1+q22) \n-pads *q2*GetPixel(rs/180)*4\n-pads *q1*GetPixel(1-uv)*4;    \n}"}