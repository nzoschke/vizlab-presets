{"version":2,"baseVals":{"rating":5,"gammaadj":2.994,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":1,"wave_scale":0.55,"wave_smoothing":0.9,"wave_mystery":0.46,"fshader":1,"zoom":0.9999,"rot":0.1,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_a":0.8,"ib_size":0.005,"ib_r":0.4,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0,"mv_g":0.7,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":1,"additive":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xpos=0;a.yamptarg=0;a.ydir=0;a.q6=0;a.q1=0;a.newrad=0;a.q5=0;a.bass_thresh=0;a.xamptarg=0;a.xamp=0;a.xspeed=0;a.q4=0;a.dx_residual=0;a.ypos=0;a.newx=0;a.vol=0;a.newzoom=0;a.q2=0;a.yamp=0;a.q3=0;a.xdir=0;a.newy=0;a.mtime=0;a.q8=0;a.yspeed=0;a.dy_residual=0;","frame_eqs_str":"a.warp=0;a.wave_r+=.45*(.5*Math.sin(.701*a.time)+.3*Math.cos(.438*a.time));a.wave_b-=.4*(.5*Math.sin(4.782*a.time)+.5*Math.cos(.722*a.time));a.wave_g+=.4*Math.sin(1.931*a.time);a.wave_r=.2125*a.wave_r+.7154*a.wave_g+.0721*a.wave_b;a.wave_g=a.wave_r;a.wave_b=a.wave_r;a.vol=.167*(a.bass+a.mid);a.xamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.5*a.vol*a.bass_att,.5):a.xamptarg;a.xamp+=.5*(a.xamptarg-a.xamp);a.xdir=.00001<Math.abs(above(Math.abs(a.xpos),a.xamp))?-sign(a.xpos):\n.00001<Math.abs(below(Math.abs(a.xspeed),.1))?2*above(a.xpos,0)-1:a.xdir;a.xspeed=a.xspeed+a.xdir*a.xamp-a.xpos-.055*a.xspeed*below(Math.abs(a.xpos),a.xamp);a.xpos+=.001*a.xspeed;a.wave_x=1.25*a.xpos+.5;a.yamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.3*a.vol*a.treb_att,.5):a.yamptarg;a.yamp+=.5*(a.yamptarg-a.yamp);a.ydir=.00001<Math.abs(above(Math.abs(a.ypos),a.yamp))?-sign(a.ypos):.00001<Math.abs(below(Math.abs(a.yspeed),.1))?2*above(a.ypos,0)-1:a.ydir;a.yspeed=a.yspeed+a.ydir*a.yamp-\na.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.ypos+=.001*a.yspeed;a.wave_y=1.25*a.ypos+.5;a.dx+=a.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.003*equal(a.bass_thresh,2)*Math.sin(7*a.time)+(1-equal(a.bass_thresh,2))*a.dx_residual;a.dy_residual=.001*equal(a.bass_thresh,2)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2))*a.dy_residual;a.rot=.1;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=\na.vol;a.mtime+=.01*a.vol*div(75,a.fps);a.q8=a.mtime;a.q1=Math.sin(a.mtime)*Math.sin(3*a.mtime)*.4+.5;a.q2=Math.cos(1.3*a.mtime)*Math.sin(5.4*a.mtime)*.4+.5;a.ib_r=Math.tan(a.time);a.ib_r=Math.min(1,Math.max(a.ib_r,0));a.ib_g=Math.tan(a.time+2.1);a.ib_g=Math.min(1,Math.max(a.ib_g,0));a.ib_b=Math.tan(a.time+4.2);a.ib_b=Math.min(1,Math.max(a.ib_b,0));a.q3=10+8*(.6*Math.sin(.223*a.time)+.4*Math.sin(.153*a.time));a.q4=div(1,a.q3);a.q5=.5*sign(a.xpos);a.q6=.5*sign(a.ypos);a.monitor=a.q4;","pixel_eqs_str":"a.cx=(bitand(0,a.x*a.q3-a.q5)+a.q5)*a.q4;a.cy=(bitand(0,a.y*a.q3-a.q6)+a.q6)*a.q4;a.newx=a.q1-a.x;a.newy=a.q2-a.y;a.newrad=2*sqrt(a.newx*a.newx+.5625*a.newy*a.newy);a.newzoom=pow(1.05+.03*a.newrad,pow(.01+Math.sin(a.newrad*a.newrad),2*a.newrad-1));a.dx=a.newx*a.newzoom-a.newx;a.dy=a.newy*a.newzoom-a.newy;a.dx*=.1;a.dy*=.1;a.rot=2*a.newrad*(.5*(.5-a.rad)+.1);a.rot=a.rot*Math.sin(a.time)*.2;","init_eqs_eel":"","frame_eqs_eel":"warp=0;\nwave_r = wave_r + 0.45*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));\nwave_b = wave_b - 0.4*(0.5*sin(time*4.782)+0.5*cos(time*0.722));\nwave_g = wave_g + 0.4*sin(time*1.931);\nwave_r = 0.2125*wave_r + 0.7154*wave_g + 0.0721*wave_b;\nwave_g = wave_r;\nwave_b = wave_r;\nvol = 0.167*(bass+mid);\nxamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);\nxamp = xamp + 0.5*(xamptarg-xamp);\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\nxpos = xpos + 0.001*xspeed;\nwave_x = 1.25*xpos + 0.5;\nyamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);\nyamp = yamp + 0.5*(yamptarg-yamp);\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\nypos = ypos + 0.001*yspeed;\nwave_y = 1.25*ypos + 0.5;\ndx = dx + dx_residual;\ndy = dy + dy_residual;\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\ndx_residual = equal(bass_thresh,2)*0.003*sin(time*7) + (1-equal(bass_thresh,2))*dx_residual;\ndy_residual = equal(bass_thresh,2)*0.001*sin(time*9) + (1-equal(bass_thresh,2))*dy_residual;\nrot = 0.1;\n\nvol=(bass+mid+treb)*0.25;\nvol=vol*vol;\nmtime=mtime + vol*0.01*(75/fps);\nq8=mtime;\n\n\nq1=sin(mtime) * sin(mtime*3) * 0.4 + 0.5;\nq2=cos(mtime*1.3) * sin(mtime*5.4) * 0.4 + 0.5;\n\n\n\nib_r = tan(time);\nib_r = min(1, max(ib_r,0));\n\nib_g = tan(time+2.1);\nib_g = min(1, max(ib_g,0));\n\nib_b = tan(time+4.2);\nib_b = min(1, max(ib_b,0));\n\nq3 = 10+8*(0.6*sin(0.223*time) + 0.4*sin(0.153*time));\nq4 = 1/q3;\nq5 = 0.5*sign(xpos);\nq6 = 0.5*sign(ypos);\n\nmonitor=q4","pixel_eqs_eel":"cx = ((0&(x*q3-q5))+q5)*q4;\ncy = ((0&(y*q3-q6))+q6)*q4;\nnewx = q1-x;\nnewy = q2-y;\nnewrad = sqrt((newx)*(newx)+0.5625*(newy)*(newy))*2;\nnewzoom = pow(1.05 + 0.03*newrad, pow(0.01+sin(newrad*newrad), newrad*2-1));\ndx = (newx)*newzoom - newx;\ndy = (newy)*newzoom - newy;\ndx =dx*0.1;\ndy=dy*0.1;\nrot = 2*newrad*(0.5*(0.5-rad)+0.1);\nrot=rot*sin(time)*0.2","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, fract(uv)).xyz;\n  ret_1 = (ret_1 + ((\n    (ret_1 - mix (((texture (sampler_blur2, uv).xyz * scale2) + bias2), ((texture (sampler_blur1, uv).xyz * scale1) + bias1), uv_orig.xxx))\n   * 0.3) - 0.04));\n  ret_1 = (ret_1 * 0.95);\n  ret_1 = (ret_1 + 0.04);\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":"","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret.xyz = tex2D( sampler_main, frac(uv) ).xyz;\n\n      // take the difference between the crisp and blurred images,\n      // then add it back into the image.  Creates spots and stripes over time.\n      float3 b = lerp(GetBlur2(uv),GetBlur1(uv),uv_orig.x);//GetBlur2(uv);\n      ret.xyz += (ret.xyz - b)*0.3 - 0.04;\n      ret.xyz *= 0.95;\n\n      // add noise:\n      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n      ret.xyz += 0.04;//(tex2D(sampler_noise_lq, dither_uv).xyz-0.5)*0.3;\n\n      // desaturate over time, to keep the globs white\n      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);\n}","comp_hlsl":""}