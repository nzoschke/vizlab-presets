{"version":2,"baseVals":{"rating":5,"gammaadj":2.7,"decay":1,"wave_mode":6,"red_blue":1,"wave_a":6.1,"wave_scale":1.342,"wave_smoothing":0.1,"warpscale":1.331,"zoom":1.004,"warp":0.01249,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_x":0.9,"wave_y":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_y=1.4;a.decay-=.02*equal(mod(a.frame,30),0);","pixel_eqs_str":"a.dx=a.dx+.002*(2*a.x-1.5)+.0015*Math.sin(12*a.y+1.03*a.time);a.dy=a.dy+.01+.005*Math.sin(26*a.y-13)+.005*Math.sin(4.2*a.x+1.303*a.time);","init_eqs_eel":"","frame_eqs_eel":"wave_y = 1.4;\ndecay = decay - 0.02*equal(frame%30,0);","pixel_eqs_eel":"dx = dx + (x*2-1.5)*0.002 + 0.0015*sin(y*12 + time*1.03);\ndy = dy + 0.01+ 0.005*sin(y*26-13) + 0.005*sin(x*4.2 + time*1.303);","warp":" shader_body { \n  vec3 b_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - uv_orig);\n  tmpvar_3 = (uv_orig + (tmpvar_4 * 1.2));\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv_orig + (tmpvar_4 * 0.6));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_orig + tmpvar_4);\n  ret_2.x = texture (sampler_main, tmpvar_3).x;\n  ret_2.y = texture (sampler_main, tmpvar_5).y;\n  ret_2.z = texture (sampler_main, tmpvar_6).z;\n  b_1.x = mix (((texture (sampler_blur2, tmpvar_3).xyz * scale2) + bias2), ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1), vec3(0.5, 0.5, 0.5)).x;\n  b_1.y = mix (((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2), ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1), vec3(0.5, 0.5, 0.5)).y;\n  b_1.z = mix (((texture (sampler_blur2, tmpvar_6).xyz * scale2) + bias2), ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1), vec3(0.5, 0.5, 0.5)).z;\n  ret_2 = (ret_2 + ((ret_2 - b_1) * 0.3));\n  ret_2 = (ret_2 * 0.95);\n  ret_2 = (ret_2 + 0.04);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_2;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 dz_1;\n  vec3 dy_2;\n  vec3 dx_3;\n  vec2 d_4;\n  vec3 ret_5;\n  vec2 tmpvar_6;\n  vec2 tmpvar_7;\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\n  d_4 = (texsize.zw * 2.0);\n  dx_3 = (((2.0 * \n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * d_4))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * d_4))).xyz * scale1) + bias1)\n  )) * 0.5);\n  dy_2 = (((2.0 * \n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * d_4))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * d_4))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec2 tmpvar_9;\n  tmpvar_9.x = dx_3.y;\n  tmpvar_9.y = dy_2.y;\n  dz_1 = ((tmpvar_6 * 2.0) + tmpvar_9);\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_blur1, uv);\n  ret_5 = (vec3(((\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\n   * 2.0) + (\n    ((tmpvar_10.xyz * scale1) + bias1)\n  .y * 2.0))) * vec3(0.2, 0.3, 0.6));\n  vec2 tmpvar_11;\n  tmpvar_11.x = q19;\n  tmpvar_11.y = q20;\n  vec2 tmpvar_12;\n  tmpvar_12 = fract(((0.5 + \n    (uv - 0.5)\n  ) + (tmpvar_11 * vec2(-1.0, 1.0))));\n  vec2 tmpvar_13;\n  tmpvar_13.x = dx_3.y;\n  tmpvar_13.y = dy_2.y;\n  vec3 tmpvar_14;\n  tmpvar_14 = mix (((\n    (mix (ret_5, vec3(3.0, 2.0, 1.0), ((texture (sampler_blur3, \n      (tmpvar_12 - tmpvar_13)\n    ).xyz * scale3) + bias3).xxx) * (vec3(1.0, 1.0, 1.0) - ((texture (sampler_blur2, \n      (tmpvar_12 - dz_1)\n    ).xyz * scale2) + bias2).xxx))\n   * \n    (vec3(1.0, 1.0, 1.0) - vec3((0.75 * texture (sampler_main, tmpvar_12).x)))\n  ) * (vec3(1.0, 1.0, 1.0) - vec3(\n    (((tmpvar_10.xyz * scale1) + bias1).z * 4.0)\n  ))), vec3(2.0, 2.0, 2.0), texture (sampler_main, uv).zzz);\n  ret_5 = tmpvar_14;\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = tmpvar_14;\n  ret = tmpvar_15.xyz;\n }","warp_hlsl":"shader_body\n{\n\nfloat2 uv1 = uv_orig + (uv-uv_orig)*1.2;\nfloat2 uv2 = uv_orig + (uv-uv_orig)*0.6;\nfloat2 uv3 = uv_orig + (uv-uv_orig)*1;\n\n    // sample previous frame\n    ret.x = tex2D( sampler_main, uv1 ).x;\n    ret.y = tex2D( sampler_main, uv2 ).y;\n    ret.z = tex2D( sampler_main, uv3 ).z;\n\n    float3 b;\n    b.x = lerp(GetBlur2(uv1),GetBlur1(uv1),0.5).x;\n    b.y = lerp(GetBlur2(uv2),GetBlur1(uv2),0.5).y;\n    b.z = lerp(GetBlur2(uv3),GetBlur1(uv3),0.5).z;\n\n      ret += (ret - b)*0.3;\n      ret *= 0.95;\n      ret += 0.04;\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw;\n    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );\n    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );\nfloat2 dz = float2(dx.y,dy.y)*2;\n\nd = texsize.zw*2;\ndx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) )*0.5;\ndy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) )*0.5;\n\ndz +=float2(dx.y,dy.y);\n\nfloat3 bg = pow(length(dz)*0.8+0,0.7)*2 + GetBlur1(uv).y*2;\n\nret = bg*float3(0.2,0.3,0.6);\nfloat2 uv_swimmer =frac(0.5 + (uv-0.5)+float2(q19,q20)*float2(-1,1));\nret = lerp(ret,float3(3,2,1),GetBlur3(uv_swimmer -float2(dx.y,dy.y)).x);\nret = lerp(ret,0,GetBlur2(uv_swimmer-dz).x);\nret = lerp(ret,float3(0,0,0),0.75*GetPixel(uv_swimmer).x);\nret = lerp(ret,0,GetBlur1(uv).z*4);\nret = lerp(ret,2,GetPixel(uv).z);\n//ret = GetPixel(uv);\n}"}