{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"additivewave":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"cx":2,"cy":2,"dx":0.005,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":0.819,"ob_g":0.689,"ob_b":1,"ob_a":0.008,"ib_size":0.005,"ib_r":0.03,"ib_g":0.18,"ib_b":0.22,"ib_a":0.287,"mv_x":12.8,"mv_y":14.4,"mv_l":5,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"rad":0.49138,"r":0,"g":1,"b":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=.5+q4;y=.5+q5;","init_eqs_eel":"","frame_eqs_eel":"x=.5+q4;y=.5+q5;"},{"baseVals":{"sides":24,"rad":0.44484,"tex_zoom":0.81954,"g":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//tex_ang=0.01;\nx=.5+q4;y=.5+q5;\nrad=.445-(bass*0.1)","init_eqs_eel":"","frame_eqs_eel":"//tex_ang=0.01;\nx=.5+q4;y=.5+q5;\nrad=.445-(bass*0.1)"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.drip2x=0;a.drip4grav=0;a.xpos=0;a.drip4y=0;a.yamptarg=0;a.drip1x=0;a.drip3x=0;a.ydir=0;a.drip3grav=0;a.drip2y=0;a.q1=0;a.xamptarg=0;a.xamp=0;a.xspeed=0;a.drip3y=0;a.ypos=0;a.drip1y=0;a.att=0;a.vol=0;a.drip2grav=0;a.q2=0;a.drip1grav=0;a.yamp=0;a.xdir=0;a.drip4x=0;a.yspeed=0;","frame_eqs_str":"a.warp=0;a.drip1grav=(.00001<Math.abs(above(a.drip1y,1.2))?.001*(1+Math.floor(rand(10))):a.drip1grav)+.05*equal(a.drip1grav,0);a.drip1x=.00001<Math.abs(above(a.drip1y,1.2))?.01*Math.floor(rand(100)):a.drip1x;a.drip1y=.00001<Math.abs(above(a.drip1y,1.2))?0:a.drip1y;a.drip2grav=(.00001<Math.abs(above(a.drip2y,1.2))?.001*(1+Math.floor(rand(10))):a.drip2grav)+.06*equal(a.drip2grav,0);a.drip2x=.00001<Math.abs(above(a.drip2y,1.2))?.01*Math.floor(rand(100)):a.drip2x;a.drip2y=.00001<\nMath.abs(above(a.drip2y,1.2))?0:a.drip2y;a.drip3grav=(.00001<Math.abs(above(a.drip3y,1.2))?.001*(1+Math.floor(rand(10))):a.drip3grav)+.07*equal(a.drip3grav,0);a.drip3x=.00001<Math.abs(above(a.drip3y,1.2))?.01*Math.floor(rand(100)):a.drip3x;a.drip3y=.00001<Math.abs(above(a.drip3y,1.2))?0:a.drip3y;a.drip4grav=(.00001<Math.abs(above(a.drip4y,1.2))?.001*(1+Math.floor(rand(10))):a.drip4grav)+.08*equal(a.drip4grav,0);a.drip4x=.00001<Math.abs(above(a.drip4y,1.2))?.01*Math.floor(rand(100)):a.drip4x;a.drip4y=\n.00001<Math.abs(above(a.drip4y,1.2))?0:a.drip4y;a.drip1y=.001+a.drip1y+a.drip1grav;a.drip2y=.001+a.drip2y+a.drip2grav;a.drip3y=.001+a.drip3y+a.drip3grav;a.drip4y=.001+a.drip4y+a.drip4grav;a.q1=.00001<Math.abs(equal(mod(a.frame,4),0))?a.drip1x:.00001<Math.abs(equal(mod(a.frame,4),1))?a.drip2x:.00001<Math.abs(equal(mod(a.frame,4),2))?a.drip3x:a.drip4x;a.q2=.00001<Math.abs(equal(mod(a.frame,4),0))?a.drip1y:.00001<Math.abs(equal(mod(a.frame,4),1))?a.drip2y:.00001<Math.abs(equal(mod(a.frame,4),2))?a.drip3y:\na.drip4y;a.wave_r+=.35*(.6*Math.sin(.98*a.time)+.4*Math.sin(1.047*a.time));a.wave_g+=.35*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.wave_b+=.35*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.vol=div(a.bass+a.mid+a.att,6);a.xamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.5*a.vol*a.bass_att,.5):a.xamptarg;a.xamp+=.5*(a.xamptarg-a.xamp);a.xdir=.00001<Math.abs(above(Math.abs(a.xpos),a.xamp))?-sign(a.xpos):.00001<Math.abs(below(Math.abs(a.xspeed),.1))?2*above(a.xpos,0)-\n1:a.xdir;a.xspeed=a.xspeed+a.xdir*a.xamp-a.xpos-.055*a.xspeed*below(Math.abs(a.xpos),a.xamp);a.xpos+=.001*a.xspeed;a.wave_x=a.xpos+.5;a.yamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.3*a.vol*a.treb_att,.5):a.yamptarg;a.yamp+=.5*(a.yamptarg-a.yamp);a.ydir=.00001<Math.abs(above(Math.abs(a.ypos),a.yamp))?-sign(a.ypos):.00001<Math.abs(below(Math.abs(a.yspeed),.1))?2*above(a.ypos,0)-1:a.ydir;a.yspeed=a.yspeed+a.ydir*a.yamp-a.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.ypos+=.001*\na.yspeed;a.wave_y=a.ypos+.5;a.rot+=.01*(.6*Math.sin(.381*a.time)+.4*Math.sin(.479*a.time));a.cx+=.41*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.41*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.wave_mystery+=.15*(.6*Math.sin(.629*a.time)+.4*Math.sin(1.826*a.time));a.warp*=a.vol;a.dy+=above(a.bass_att,1.2)*a.bass_att*.003;a.ob_a-=2*a.vol;a.rot=.00001<Math.abs(below(a.rot,-1))?-1:a.rot;a.rot=.00001<Math.abs(above(a.rot,1))?1:a.rot;a.warp=.00001<Math.abs(below(a.warp,.01))?.01:\na.warp;a.warp=.00001<Math.abs(above(a.warp,100))?100:a.warp;a.cx=.00001<Math.abs(below(a.cx,-1))?-1:a.cx;a.cx=.00001<Math.abs(above(a.cx,2))?2:a.cx;a.cy=.00001<Math.abs(below(a.cy,-1))?-1:a.cy;a.cy=.00001<Math.abs(above(a.cy,2))?2:a.cy;a.dy=.00001<Math.abs(below(a.dy,-1))?-1:a.dy;a.dy=.00001<Math.abs(above(a.dy,1))?1:a.dy;a.wave_x=.00001<Math.abs(below(a.wave_x,0))?0:a.wave_x;a.wave_x=.00001<Math.abs(above(a.wave_x,1))?1:a.wave_x;a.wave_y=.00001<Math.abs(below(a.wave_y,0))?0:a.wave_y;a.wave_y=.00001<\nMath.abs(above(a.wave_y,1))?1:a.wave_y;a.wave_mystery=.00001<Math.abs(below(a.wave_mystery,-1))?-1:a.wave_mystery;a.wave_mystery=.00001<Math.abs(above(a.wave_mystery,1))?1:a.wave_mystery;a.ob_a=.00001<Math.abs(below(a.ob_a,0))?0:a.ob_a;a.ob_a=.00001<Math.abs(above(a.ob_a,1))?1:a.ob_a;","pixel_eqs_str":"a.dy+=.00001<Math.abs(below(Math.abs(a.q1-a.x),.01))?.00001<Math.abs(below(a.y,a.q2))?Math.max(.02-Math.abs(a.q1-a.x),0):.001:.001;a.cx=8.13988973*sqr(a.warp-a.x);a.cx=.00001<Math.abs(below(a.cx,-1))?-1:a.cx;a.cx=.00001<Math.abs(above(a.cx,2))?2:a.cx;a.dy=.00001<Math.abs(below(a.dy,-1))?-1:a.dy;a.dy=.00001<Math.abs(above(a.dy,1))?1:a.dy;","init_eqs_eel":"","frame_eqs_eel":"warp=0;\ndrip1grav = if(above(drip1y,1.2),0.001*(1+int(rand(10))),drip1grav) + equal(drip1grav,0)*0.05;\ndrip1x = if(above(drip1y,1.2),0.01*int(rand(100)),drip1x);\ndrip1y = if(above(drip1y,1.2),0,drip1y);\ndrip2grav = if(above(drip2y,1.2),0.001*(1+int(rand(10))),drip2grav) + equal(drip2grav,0)*0.06;\ndrip2x = if(above(drip2y,1.2),0.01*int(rand(100)),drip2x);\ndrip2y = if(above(drip2y,1.2),0,drip2y);\ndrip3grav = if(above(drip3y,1.2),0.001*(1+int(rand(10))),drip3grav) + equal(drip3grav,0)*0.07;\ndrip3x = if(above(drip3y,1.2),0.01*int(rand(100)),drip3x);\ndrip3y = if(above(drip3y,1.2),0,drip3y);\ndrip4grav = if(above(drip4y,1.2),0.001*(1+int(rand(10))),drip4grav) + equal(drip4grav,0)*0.08;\ndrip4x = if(above(drip4y,1.2),0.01*int(rand(100)),drip4x);\ndrip4y = if(above(drip4y,1.2),0,drip4y);\ndrip1y = 0.001 + drip1y + drip1grav;\ndrip2y = 0.001 + drip2y + drip2grav;\ndrip3y = 0.001 + drip3y + drip3grav;\ndrip4y = 0.001 + drip4y + drip4grav;\nq1 = if(equal(frame%4,0),drip1x,if(equal(frame%4,1),drip2x,if(equal(frame%4,2),drip3x,drip4x)));\nq2 = if(equal(frame%4,0),drip1y,if(equal(frame%4,1),drip2y,if(equal(frame%4,2),drip3y,drip4y)));\nwave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\nvol = (bass+mid+att)/6;\nxamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);\nxamp = xamp + 0.5*(xamptarg-xamp);\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\nxpos = xpos + 0.001*xspeed;\nwave_x = xpos + 0.5;\nyamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);\nyamp = yamp + 0.5*(yamptarg-yamp);\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\nypos = ypos + 0.001*yspeed;\nwave_y = ypos + 0.5;\nrot = rot + 0.01*( 0.60*sin(0.381*time) + 0.40*sin(0.479*time) );\ncx = cx + 0.410*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.410*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\nwave_mystery = wave_mystery + 0.15*( 0.60*sin(0.629*time) + 0.40*sin(1.826*time) );\nwarp = warp*vol;\ndy = dy + above(bass_att,1.2)*bass_att*0.003;\nob_a = ob_a - 2*vol;\nrot=if(below(rot,-1.0), -1.0, rot);\nrot=if(above(rot,1.0), 1.0, rot);\nwarp=if(below(warp,0.01), 0.01, warp);\nwarp=if(above(warp,100.0), 100.0, warp);\ncx=if(below(cx,-1.0), -1.0, cx);\ncx=if(above(cx,2.0), 2.0, cx);\ncy=if(below(cy,-1.0), -1.0, cy);\ncy=if(above(cy,2.0), 2.0, cy);\ndy=if(below(dy,-1), -1, dy);\ndy=if(above(dy,1.0), 1.0, dy);\nwave_x=if(below(wave_x,0.0), 0.0, wave_x);\nwave_x=if(above(wave_x,1.0), 1.0, wave_x);\nwave_y=if(below(wave_y,0.0), 0.0, wave_y);\nwave_y=if(above(wave_y,1.0), 1.0, wave_y);\nwave_mystery=if(below(wave_mystery,-1.0), -1.0, wave_mystery);\nwave_mystery=if(above(wave_mystery,1.0), 1.0, wave_mystery);\nob_a=if(below(ob_a,0.0), 0.0, ob_a);\nob_a=if(above(ob_a,1.0), 1.0, ob_a);","pixel_eqs_eel":"dy = dy + if(below(abs(q1-x),0.01),if(below(y,q2),max(0.02-abs(q1-x),0),0.001),0.001);\ncx = 8.13988973*sqr(warp - x);\ncx=if(below(cx,-1.0), -1.0, cx);\ncx=if(above(cx,2.0), 2.0, cx);\ndy=if(below(dy,-1), -1, dy);\ndy=if(above(dy,1.0), 1.0, dy);","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + ((ret_1 - \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  ) * 0.35));\n  ret_1 = (ret_1 - 0.004);\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)\n  ).xyz - 0.5) * 0.18));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  float tmpvar_3;\n  tmpvar_3 = -(q8);\n  float tmpvar_4;\n  tmpvar_4 = (uv.x - 0.5);\n  float tmpvar_5;\n  tmpvar_5 = (uv.y - 0.5);\n  tmpvar_2.x = (((\n    (tmpvar_4 * cos((tmpvar_3 * 0.29)))\n   + \n    (tmpvar_5 * sin((tmpvar_3 * 0.29)))\n  ) * 0.8) + 0.5);\n  tmpvar_2.y = (((\n    (-(tmpvar_4) * sin((tmpvar_3 * 0.29)))\n   + \n    (tmpvar_5 * cos((tmpvar_3 * 0.29)))\n  ) * 0.8) + 0.5);\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\n    (0.5 - uv)\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 0.8);\n  ret_1 = (ret_1 + (texture (sampler_main, (tmpvar_2 * q9)).xyz * 0.2));\n  ret_1 = (1.0 - ((ret_1 * \n    (1.0 - ret_1)\n  ) * 4.0));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    // sample previous frame\n    ret.xyz = tex2D( sampler_main, uv ).xyz;\n\n      // take the difference between the crisp and blurred images,\n      // then add it back into the image.  Creates spots and stripes over time.\n      ret.xyz += (ret - GetBlur3(uv))*0.35;\n      ret.xyz -= 0.004;\n\n      // add noise:\n      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)*0.18;\n\n      // desaturate over time, to keep the globs white\n      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);\n}","comp_hlsl":"shader_body\n{\n    \n    //rotate texture cords\n    float texRotU2 = (uv[0] - 0.5)*cos(-q8*0.29) + (uv[1] - 0.5)*sin(-q8*0.29);\n    float texRotv2 = -(uv[0] - 0.5)*sin(-q8*0.29) + (uv[1] - 0.5)*cos(-q8*0.29);\n\n\t\n\t    float2 uv2 = float2(texRotU2*0.8 +0.5, texRotv2*0.8 + 0.5);\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo).xyz, \n                0.50 \n              )*0.8;\n    \n    ret += tex2D(sampler_main, uv2*q9).xyz*0.2;\n    ret *= 1.00; //gamma\n    ret = 1 - ret*(1 - ret)*4; //invert\n}"}