{"version":2,"baseVals":{"rating":5,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"solarize":1,"wave_a":0.004,"rot":-0.28,"dx":0.005,"warp":0.01,"wave_r":0,"wave_g":0.4,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.38928,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.3697,"g":1,"b":1,"a":0.6,"a2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"y":0.55,"rad":0.0369,"r2":1,"a2":1,"border_g":0,"border_b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r = 0.5 + 0.5*sin(q3);\ng = 0.5 + 0.5*sin(q3*1.258);\nb = 0.5 + 0.5*sin(q3*1.478);\n\nr2 = 0.5 + 0.5*sin(q3*789);\ng2 = 0.5 + 0.5*sin(q3*1.597);\nb2 = 0.5 + 0.5*sin(q3*1.729);\n\n\nx = 0.5 + 0.2*sin(time);","init_eqs_eel":"","frame_eqs_eel":"r = 0.5 + 0.5*sin(q3);\ng = 0.5 + 0.5*sin(q3*1.258);\nb = 0.5 + 0.5*sin(q3*1.478);\n\nr2 = 0.5 + 0.5*sin(q3*789);\ng2 = 0.5 + 0.5*sin(q3*1.597);\nb2 = 0.5 + 0.5*sin(q3*1.729);\n\n\nx = 0.5 + 0.2*sin(time);"},{"baseVals":{"a2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\n\nr = 0.5 + 0.5*sin(time);\ng = 0.5 + 0.5*sin(time*0.9);\nb = 0.5 + 0.5*sin(time*0.56);\n\n\nr2 = 0.5 + 0.5*sin(time);\ng2 = 0.5 + 0.5*sin(time*0.9);\nb2 = 0.5 + 0.5*sin(time*0.56);","init_eqs_eel":"","frame_eqs_eel":"\n\nr = 0.5 + 0.5*sin(time);\ng = 0.5 + 0.5*sin(time*0.9);\nb = 0.5 + 0.5*sin(time*0.56);\n\n\nr2 = 0.5 + 0.5*sin(time);\ng2 = 0.5 + 0.5*sin(time*0.9);\nb2 = 0.5 + 0.5*sin(time*0.56);"}],"waves":[{"baseVals":{"spectrum":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.b3=0;a.stickybit=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.volavg2=0;a.b4=0;a.q13=0;a.q15=0;a.q6=0;a.thresh=0;a.g3=0;a.q1=0;a.r1=0;a.q5=0;a.r5=0;a.sample1=0;a.g2=0;a.difftime=0;a.diff=0;a.g4=0;a.edge=0;a.b5=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.q4=0;a.r2=0;a.volavg=0;a.q16=0;a.g5=0;a.bit2=0;a.r3=0;a.b2=0;a.q19=0;a.q17=0;a.vol=0;a.q2=0;a.q14=0;a.g1=0;a.basssum=0;a.r4=0;a.q7=0;a.sample2=0;a.q20=0;a.b1=0;a.thresh=2.5;","frame_eqs_str":"a.dx=0;a.difftime+=.005*a.bass;a.q1=a.difftime;a.q2=.5+.5*Math.sin(a.difftime);a.q4=a.difftime;a.q5=Math.cos(a.difftime);a.q6=Math.sin(a.difftime);a.q7=Math.sin(.89*a.difftime);a.monitor=a.difftime;a.vol=pow(a.bass+a.mid+a.treb,2);a.basssum=a.vol;a.stickybit=mod(a.time,2);a.volavg+=a.vol*equal(a.stickybit,1);a.sample1+=equal(a.stickybit,1);a.volavg2+=a.vol*equal(a.stickybit,0);a.sample2+=equal(a.stickybit,0);a.edge=bnot(equal(a.bit2,a.stickybit));a.volavg-=a.volavg*a.edge*a.stickybit;\na.volavg2-=a.volavg2*a.edge*equal(a.stickybit,0);a.sample1-=a.sample1*a.edge*a.stickybit;a.sample2-=a.sample2*a.edge*equal(a.stickybit,0);a.diff=.00001<Math.abs(equal(a.stickybit,1))?div(a.basssum,div(a.volavg2,a.sample2)):0;a.diff=.00001<Math.abs(equal(a.stickybit,0))?div(a.basssum,div(a.volavg,a.sample1)):a.diff;a.bit2=mod(a.time,2);a.monitor=a.thresh;a.r1=.00001<Math.abs(above(a.diff,a.thresh))?.001*rand(1E3):a.r1;a.g1=.00001<Math.abs(above(a.diff,a.thresh))?.001*rand(1E3):a.g1;a.b1=.00001<Math.abs(above(a.diff,\na.thresh))?.001*rand(1E3):a.b1;a.r2=.00001<Math.abs(above(a.diff,a.thresh))?.001*rand(1E3):a.r2;a.g2=.00001<Math.abs(above(a.diff,a.thresh))?.001*rand(1E3):a.g2;a.b2=.00001<Math.abs(above(a.diff,a.thresh))?.001*rand(1E3):a.b2;a.r3=.00001<Math.abs(above(a.diff,a.thresh))?.001*rand(1E3):a.r3;a.g3=.00001<Math.abs(above(a.diff,a.thresh))?.001*rand(1E3):a.g3;a.b3=.00001<Math.abs(above(a.diff,a.thresh))?.001*rand(1E3):a.b3;a.r4=.00001<Math.abs(above(a.diff,a.thresh))?.001*rand(1E3):a.r4;a.g4=.00001<Math.abs(above(a.diff,\na.thresh))?.001*rand(1E3):a.g4;a.b4=.00001<Math.abs(above(a.diff,a.thresh))?.001*rand(1E3):a.b4;a.r5=.00001<Math.abs(above(a.diff,a.thresh))?.001*rand(1E3):a.r5;a.g5=.00001<Math.abs(above(a.diff,a.thresh))?.001*rand(1E3):a.g5;a.b5=.00001<Math.abs(above(a.diff,a.thresh))?.001*rand(1E3):a.b5;a.thresh=.00001<Math.abs(above(a.diff,a.thresh))?100:a.thresh;a.thresh=.00001<Math.abs(above(a.thresh,2.5))?a.thresh-1:a.thresh;a.q10=a.r1;a.q11=a.g1;a.q12=a.b1;a.q13=a.r2;a.q14=a.g2;a.q15=a.b2;a.q16=a.r3;a.q17=\na.g3;a.q18=a.b3;a.q19=a.r4;a.q20=a.g4;a.q21=a.b4;a.q22=a.r5;a.q23=a.g5;a.q24=a.b5;","pixel_eqs_str":"a.warp=0;a.zoom=1;a.rot=0;","init_eqs_eel":"thresh = 2.5;","frame_eqs_eel":"dx =0;\ndifftime = difftime + bass*0.005;\nq1 = difftime;\nq2 = 0.5 + 0.5*sin(difftime);\nq4 = difftime;\n\n\nq5 = cos(difftime);\nq6 = sin(difftime);\nq7 = sin(difftime*0.89);\nmonitor = difftime;\n\n//*** basic beat detection\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\nbit2 = time%2;\n//*** \n\nmonitor = thresh;\n\n\nr1 = if(above(diff, thresh), rand(1000)*0.001, r1);\ng1 = if(above(diff, thresh), rand(1000)*0.001, g1);\nb1 = if(above(diff, thresh), rand(1000)*0.001, b1);\n\nr2 = if(above(diff, thresh), rand(1000)*0.001, r2);\ng2 = if(above(diff, thresh), rand(1000)*0.001, g2);\nb2 = if(above(diff, thresh), rand(1000)*0.001, b2);\n\nr3 = if(above(diff, thresh), rand(1000)*0.001, r3);\ng3 = if(above(diff, thresh), rand(1000)*0.001, g3);\nb3 = if(above(diff, thresh), rand(1000)*0.001, b3);\n\nr4 = if(above(diff, thresh), rand(1000)*0.001, r4);\ng4 = if(above(diff, thresh), rand(1000)*0.001, g4);\nb4 = if(above(diff, thresh), rand(1000)*0.001, b4);\n\nr5 = if(above(diff, thresh), rand(1000)*0.001, r5);\ng5 = if(above(diff, thresh), rand(1000)*0.001, g5);\nb5 = if(above(diff, thresh), rand(1000)*0.001, b5);\n\nthresh = if(above(diff, thresh), 100, thresh);\nthresh = if(above(thresh, 2.5), thresh - 1, thresh);\n\n\nq10 = r1;\nq11 = g1;\nq12 = b1;\n\nq13 = r2;\nq14 = g2;\nq15 = b2;\n\nq16 = r3;\nq17 = g3;\nq18 = b3;\n\nq19 = r4;\nq20 = g4;\nq21 = b4;\n\nq22 = r5;\nq23 = g5;\nq24 = b5;","pixel_eqs_eel":"warp = 0;\nzoom = 1;\nrot = 0.0;","warp":" shader_body { \n  vec2 uv_1;\n  float intensity_2;\n  float inc_3;\n  vec3 tmpvar_4;\n  tmpvar_4.x = q16;\n  tmpvar_4.y = q17;\n  tmpvar_4.z = q18;\n  vec3 tmpvar_5;\n  tmpvar_5.x = q19;\n  tmpvar_5.y = q20;\n  tmpvar_5.z = q21;\n  vec3 tmpvar_6;\n  tmpvar_6.x = q22;\n  tmpvar_6.y = q23;\n  tmpvar_6.z = q24;\n  mat2 tmpvar_7;\n  tmpvar_7[uint(0)].x = q5;\n  tmpvar_7[uint(0)].y = -(q6);\n  tmpvar_7[1u].x = q6;\n  tmpvar_7[1u].y = q5;\n  uv_1 = (uv - 0.5);\n  uv_1 = (tmpvar_7 * uv_1);\n  if ((uv_1.x > 0.0)) {\n    inc_3 = -(q4);\n  } else {\n    inc_3 = q4;\n  };\n  vec2 tmpvar_8;\n  tmpvar_8.x = (uv_1.y / (0.02 + sqrt(\n    dot (uv_1, uv_1)\n  )));\n  tmpvar_8.y = (uv_1.x / (0.02 + sqrt(\n    dot (uv_1, uv_1)\n  )));\n  uv_1 = (tmpvar_8 + vec2(inc_3));\n  uv_1 = (uv_1 + 0.5);\n  vec3 tmpvar_9;\n  tmpvar_9.xy = uv_1;\n  tmpvar_9.z = time;\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_noisevol_lq, (tmpvar_9 * 0.1));\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_noisevol_hq, (tmpvar_9 * 0.1));\n  intensity_2 = (((\n    abs((tmpvar_11.x - 0.25))\n   + \n    abs((tmpvar_11.y - 0.125))\n  ) + abs(\n    (tmpvar_11.z - 0.0625)\n  )) + abs((tmpvar_11.w - 0.03125)));\n  float theta_12;\n  theta_12 = (intensity_2 * 4.0);\n  intensity_2 = ((sin(theta_12) / cos(theta_12)) + 0.5);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = (((tmpvar_5 * \n    min (1.0, tmpvar_10.z)\n  ) + (tmpvar_4 * tmpvar_10.y)) - (tmpvar_6 * sin(\n    (tmpvar_10.x * 4.0)\n  )));\n  ret = tmpvar_13.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  float intensity_2;\n  float inc_3;\n  vec3 ret_4;\n  vec3 tmpvar_5;\n  tmpvar_5.x = q10;\n  tmpvar_5.y = q11;\n  tmpvar_5.z = q12;\n  vec3 tmpvar_6;\n  tmpvar_6.x = q13;\n  tmpvar_6.y = q14;\n  tmpvar_6.z = q15;\n  vec3 tmpvar_7;\n  tmpvar_7.x = q16;\n  tmpvar_7.y = q17;\n  tmpvar_7.z = q18;\n  vec3 tmpvar_8;\n  tmpvar_8.x = q19;\n  tmpvar_8.y = q20;\n  tmpvar_8.z = q21;\n  vec3 tmpvar_9;\n  tmpvar_9.x = q22;\n  tmpvar_9.y = q23;\n  tmpvar_9.z = q24;\n  mat2 tmpvar_10;\n  tmpvar_10[uint(0)].x = q5;\n  tmpvar_10[uint(0)].y = -(q6);\n  tmpvar_10[1u].x = q6;\n  tmpvar_10[1u].y = q5;\n  uv_1 = (uv - 0.5);\n  uv_1 = (tmpvar_10 * uv_1);\n  if ((uv_1.x > 0.0)) {\n    inc_3 = -(q4);\n  } else {\n    inc_3 = q4;\n  };\n  vec2 tmpvar_11;\n  tmpvar_11.x = (uv_1.y / (0.02 + (\n    sqrt(dot (uv_1, uv_1))\n   * q5)));\n  tmpvar_11.y = (uv_1.x / (0.02 + (\n    sqrt(dot (uv_1, uv_1))\n   * q7)));\n  uv_1 = (tmpvar_11 + vec2(inc_3));\n  uv_1 = (uv_1 + 0.5);\n  vec3 tmpvar_12;\n  tmpvar_12.xy = uv_1;\n  tmpvar_12.z = (time * 0.1);\n  vec4 tmpvar_13;\n  tmpvar_13 = texture (sampler_noisevol_lq, tmpvar_12);\n  intensity_2 = ((sin(\n    ((((\n      abs((tmpvar_13.x - 0.25))\n     + \n      abs((tmpvar_13.y - 0.125))\n    ) + abs(\n      (tmpvar_13.z - 0.0625)\n    )) + abs((tmpvar_13.w - 0.03125))) * 6.0)\n  ) * 0.5) + 0.5);\n  ret_4 = (mix (tmpvar_5, tmpvar_6, vec3(intensity_2)) * 0.5);\n  vec4 tmpvar_14;\n  tmpvar_14 = texture (sampler_noisevol_hq, tmpvar_12);\n  intensity_2 = (((\n    abs((tmpvar_14.x - 0.25))\n   + \n    abs((tmpvar_14.y - 0.125))\n  ) + abs(\n    (tmpvar_14.z - 0.0625)\n  )) + abs((tmpvar_14.w - 0.03125)));\n  intensity_2 = ((sin(\n    (intensity_2 * 6.0)\n  ) * 0.5) + 0.5);\n  ret_4 = (ret_4 + (mix (vec3(1.0, 1.0, 1.0), tmpvar_7, vec3(intensity_2)) * 0.5));\n  vec4 tmpvar_15;\n  tmpvar_15 = texture (sampler_noisevol_lq, (tmpvar_12 * 0.4));\n  intensity_2 = (((\n    abs((tmpvar_15.x - 0.25))\n   + \n    abs((tmpvar_15.y - 0.125))\n  ) + abs(\n    (tmpvar_15.z - 0.0625)\n  )) + abs((tmpvar_15.w - 0.03125)));\n  float theta_16;\n  theta_16 = (intensity_2 * 5.0);\n  intensity_2 = (((\n    sin(theta_16)\n   / \n    cos(theta_16)\n  ) * 0.5) + 0.5);\n  ret_4 = (ret_4 - mix (tmpvar_8, tmpvar_9, vec3(intensity_2)));\n  ret_4 = (ret_4 - texture (sampler_main, uv_1).xyz);\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_4;\n  ret = tmpvar_17.xyz;\n }","warp_hlsl":"shader_body\n{\n\n  float3 Color6= float3(q10, q11, q12);\n  float3 Color5= float3(q13, q14, q15);\n  float3 Color4= float3(1, 1, 1);\n  float3 Color3= float3(q16, q17, q18);\n  float3 Color2= float3(q19, q20, q21);\n  float3 Color1= float3(q22, q23, q24);\n\n  float2x2 rot = {q5, q6,\n               -q6, q5};\n\n\n  uv -= 0.5;\n  uv = mul(rot,uv);   \n\n  float inc;\n   \n  if(uv.x > 0){\n    inc = -q4; \n  }else{\n    inc = q4;\n  } \n  uv = float2((uv.y/(0.02+length(uv))),\n               (uv.x/(0.02+length(uv))));  \n  uv.x = uv.x + inc;\n  uv.y = uv.y + inc;\n   \n  uv += 0.5;\n  \n  float3 uvx =  float3(uv, time);   \n\n  float4 noisevec = tex3D(sampler_noisevol_lq, uvx*0.1);\n  float intensity = abs(noisevec.x - 0.25) +\n                    abs(noisevec.y - 0.125) +\n                    abs(noisevec.z - 0.0625) +\n                    abs(noisevec.w - 0.03125);\n\n\n  intensity = min(1.0, noisevec.z * 1);\n  ret = Color2 * intensity + Color3*noisevec.y - Color1*sin(noisevec.x*4);\n\n  noisevec = tex3D(sampler_noisevol_hq, uvx*0.1);\n  intensity = abs(noisevec.x - 0.25) +\n                    abs(noisevec.y - 0.125) +\n                    abs(noisevec.z - 0.0625) +\n                    abs(noisevec.w - 0.03125);\n\n  intensity = tan(intensity * 4 ) + 0.5;\n}","comp_hlsl":"shader_body\n{\n\n   float3 Color1= float3(q10, q11, q12);\n   float3 Color2= float3(q13, q14, q15);\n   float3 Color3= float3(1, 1, 1);\n   float3 Color4= float3(q16, q17, q18);\n   float3 Color5= float3(q19, q20, q21);\n   float3 Color6= float3(q22, q23, q24);\n\n\n   float2x2 rot = {q5, q6,\n               -q6, q5};\n\n\n  uv -= 0.5;\n  uv = mul(rot,uv);   \n\n   float inc;\n   \n   if(uv.x > 0){\n     inc = -q4; \n   }else{\n     inc = q4;\n   } \n   uv = float2((uv.y/(0.02+length(uv)*q5)),\n               (uv.x/(0.02+length(uv)*q7)));  \n   uv.x = uv.x + inc;\n   uv.y = uv.y + inc;\n   \n   uv += 0.5;\n   \n \n   float3 uvx =  float3(uv, time*0.1);   \n\n   \n  float4 noisevec = tex3D(sampler_noisevol_lq, uvx);\n  float intensity = abs(noisevec.x - 0.25) +\n                    abs(noisevec.y - 0.125) +\n                    abs(noisevec.z - 0.0625) +\n                    abs(noisevec.w - 0.03125);\n\n\n  intensity = sin(intensity * 6.0)*0.5 + 0.5;\n  ret = lerp(Color1, Color2, intensity)*.5;\n\n  noisevec = tex3D(sampler_noisevol_hq, uvx);\n  intensity = abs(noisevec.x - 0.25) +\n                    abs(noisevec.y - 0.125) +\n                    abs(noisevec.z - 0.0625) +\n                    abs(noisevec.w - 0.03125);\n\n  intensity = sin(intensity * 6.0)*0.5 + 0.5;\n  ret += lerp(Color3, Color4, intensity)*0.5;\n\n  noisevec = tex3D(sampler_noisevol_lq, uvx*0.4);\n  intensity = abs(noisevec.x - 0.25) +\n                    abs(noisevec.y - 0.125) +\n                    abs(noisevec.z - 0.0625) +\n                    abs(noisevec.w - 0.03125);\n\n\n  intensity = tan(intensity * 5.0)*0.5 + 0.5;\n  ret -= lerp(Color5, Color6, intensity); \n  ret -= tex2D(sampler_main, uv);\n}"}