{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"invert":1,"wave_a":0.001,"warpanimspeed":0.451,"warpscale":3.04,"zoomexp":2.19476,"zoom":1.00971,"warp":0.25579,"wave_r":0,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0.75,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.q1=0;a.tex_capture=0;a.q3=0;a.tex_saw=.4;","frame_eqs_str":"a.ang=.2*a.q1;a.tex_capture=above(a.q3,2);a.tex_zoom=.6;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n\ntex_capture = above(q3,2);\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"textured":1,"x":0.25,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.q1=0;a.tex_capture=0;a.q3=0;a.tex_saw=.4;","frame_eqs_str":"a.ang=.2*a.q1;a.tex_capture=above(a.q3,2);a.tex_zoom=.6;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n//x = 0.5 + 0.2*sin(q2);\n//y = 0.5 + (0.3*sin(q2));\n\ntex_capture = above(q3,2);\ntex_zoom = 0.6;"},{"baseVals":{"sides":100,"rad":0.22167,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"border_r = 0.5 + 0.5*sin(q1*10);","init_eqs_eel":"","frame_eqs_eel":"border_r = 0.5 + 0.5*sin(q1*10);"},{"baseVals":{"enabled":1,"sides":100,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.xx=0;a.yy=0;a.radi=0;a.q1=0;","frame_eqs_str":"a.a=above(a.q3,2);a.a2=.8*above(a.q3,2);a.xx=.00001<Math.abs(above(a.q3,6))?a.xx:.01*Math.floor(rand(100));a.yy=.00001<Math.abs(above(a.q3,6))?a.yy:.01*Math.floor(rand(100));a.radi=.00001<Math.abs(above(a.q3,5))?a.radi:.01*Math.floor(rand(100));a.rad=a.radi;a.x=a.xx;a.y=a.yy;a.r=.5*Math.sin(1.22*a.q1)+.6;a.g=.4+.4*Math.sin(1.307*a.q1);a.b=.4+.4*Math.sin(1.959*a.q1);a.r2=.5*Math.sin(1.622*a.q1)+.6;a.g2=.4+.4*Math.sin(1.507*a.q1);a.b2=.4+.4*Math.sin(1.6559*a.q1);","init_eqs_eel":"","frame_eqs_eel":"a = above(q3,2);\na2 = above(q3,2)*0.8;\n\nxx = if(above(q3,6),xx,int(rand(100))*0.01);\nyy = if(above(q3,6),yy,int(rand(100))*0.01);\nradi = if(above(q3,5),radi,int(rand(100))*0.01);\n\nrad = radi;\n\nx = xx;\ny = yy;\n\n\nr = 0.5 + 0.5*sin(q1*1.22) + 0.1;\ng = 0.4 + 0.4*sin(q1*1.307);\nb = 0.4 + 0.4*sin(q1*1.959);\n\n\nr2 = 0.5 + 0.5*sin(q1*1.622) + 0.1;\ng2 = 0.4 + 0.4*sin(q1*1.507);\nb2 = 0.4 + 0.4*sin(q1*1.6559);"}],"waves":[{"baseVals":{"enabled":1,"a":0.5},"init_eqs_str":"a.zs=0;a.speed=0;a.q1=0;a.zd=0;","frame_eqs_str":"","point_eqs_str":"a.zs=.00001<Math.abs(below(a.zs,1))?9:a.zs;a.zs=.00001<Math.abs(above(a.zs,1100))?1:a.zs;a.speed=.002*a.bass;a.zs+=Math.tan(.015*a.q1)*a.speed;a.zd+=2;a.x=.5+.1*Math.cos(a.q1*a.zs);a.y=.5+.1*Math.sin(a.q1*a.zs);a.r=.5+.5*Math.sin(1.2*a.q1+a.x+a.x);a.g=.5+.5*Math.sin(1.5*a.q1+a.x+a.y);a.b=.5+.5*Math.sin(1.36*a.q1+a.y+a.y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,1),9,zs);\n\nzs = if(above(zs, 1100),1, zs);\n\nspeed = bass*0.002;\n\n//sum\nzs = zs + tan(q1*0.015)*speed;\n\nzd = zd + 2;\n\n\n\n//project\nx = 0.5 + 0.1*cos(q1*zs);\ny = 0.5 + 0.1*sin(q1*zs);\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q4=0;a.q5=0;","frame_eqs_str":"a.wave_r+=.35*(.6*Math.sin(.98*a.time)+.4*Math.sin(1.047*a.time));a.wave_g+=.35*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.wave_b+=.35*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.cx+=.11*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.11*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.decay-=.01*equal(mod(a.frame,20),0);a.zoom+=.3*(.01*Math.cos(.317*a.time+1)+.01*Math.cos(.1132*a.time+4));a.rot+=.5*(.01*Math.cos(.214*a.time+3)+.01*Math.cos(.2732*\na.time+2));a.wave_mystery=.05*a.time;a.q4=Math.cos(6.2831854*a.wave_mystery);a.q5=Math.sin(6.2831854*a.wave_mystery);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\ndecay = decay - 0.01*equal(frame%20,0);\n//zoom = 1;\n//warp = 0;\nzoom = zoom + 0.3*(0.01*cos(time*0.317+1) + 0.01*cos(time*0.1132+4));\nrot  = rot  + 0.5*(0.01*cos(time*0.214+3) + 0.01*cos(time*0.2732+2));\nwave_mystery = time*0.05;\nq4 = cos(wave_mystery*3.1415927*2);\nq5 = sin(wave_mystery*3.1415927*2);\n//zoom = zoom + (max(1, bass_att)-1)*0.01;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + ((ret_1 - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 122.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv2_3.x = ((uv_1.x * -0.497265) - (uv_1.y * 0.8675987));\n  uv2_3.y = ((uv_1.x * 0.8675987) + (uv_1.y * -0.497265));\n  uv3_2.x = ((uv_1.x * -0.5000263) - (uv_1.y * -0.8660102));\n  uv3_2.y = ((uv_1.x * -0.8660102) + (uv_1.y * -0.5000263));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = max (max (texture (sampler_main, (uv_1 + 0.5)).xyz, texture (sampler_main, (uv2_3 + 0.5)).xyz), texture (sampler_main, (uv3_2 + 0.5)).xyz);\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret.xyz = tex2D( sampler_main, uv ).xyz;\n\n      // take the difference between the crisp and blurred images,\n      // then add it back into the image.  Creates spots and stripes over time.\n      ret.xyz += (ret.xyz - GetBlur2(uv))*0.3;\n      ret.xyz *= 0.9;\n\n      // add noise:\n      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 * saturate(treb_att-1);\n\n      // desaturate over time, to keep the globs white\n      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);\n}","comp_hlsl":"shader_body\n{\n    float2 uv2, uv3;\n    float ang2, c, s;\n\n    uv -= 0.5;\n    uv *= aspect.xy;    \n\n    ang2 = 6.28*0.333;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    ang2 = 6.28*0.667;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv3.x =  uv.x*c - uv.y*s;\n    uv3.y =  uv.x*s + uv.y*c;\n\n    ret = tex2D(sampler_main, uv + 0.5).xyz;\n    ret = max(ret, tex2D(sampler_main,uv2 + 0.5).xyz);\n    ret = max(ret, tex2D(sampler_main,uv3 + 0.5).xyz);\n\n    //ret *= 1.3; // a little bit of overbright\n}\n\n"}