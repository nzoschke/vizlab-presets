{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.955,"echo_zoom":0.997,"echo_alpha":0.5,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"fshader":1,"dx":0.00501,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.014,"ob_a":1,"ib_size":0.015,"ib_r":1,"ib_g":0.6,"ib_b":0.5,"ib_a":1,"mv_x":12.8,"mv_y":9.6,"mv_l":1,"mv_r":0.41,"mv_g":0.7,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.35581,"tex_ang":3.14159,"tex_zoom":0.73458,"r":0.95,"g":0.96,"b":0.83,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang=sin(time*0.5)*0.007","init_eqs_eel":"","frame_eqs_eel":"ang=sin(time*0.5)*0.007"},{"baseVals":{"sides":5,"additive":1,"thickoutline":1,"rad":0.36457,"ang":6.28319,"r":0.05,"g":0.04,"b":0.19,"g2":0,"border_a":0.06,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//rad=bass/2;\nang=bass*6.14;","init_eqs_eel":"","frame_eqs_eel":"//rad=bass/2;\nang=bass*6.14;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"additive":1,"r":0,"g":0,"b":0},"init_eqs_str":"a.advance=0;a.t1=0;a.advance2=0;a.t2=0;a.advance=0;a.advance2=0;","frame_eqs_str":"a.advance+=a.bass_att*a.bass_att*.002;a.advance=.00001<Math.abs(above(a.advance,2))?a.advance-2:a.advance;a.t1=a.advance;a.advance2+=a.mid_att*a.mid_att*.005;a.t2=a.advance2;","point_eqs_str":"a.x=.5+.5*a.sample*Math.sin(100*a.sample+10*a.time)+Math.cos(a.time)*a.x*.2;a.y=.5+.5*a.sample*Math.cos(100*a.sample+10*a.time)+Math.sin(a.time)*a.y*.2;a.r=a.bass;a.b=0;a.g=.5;","init_eqs_eel":"advance=0;\nadvance2=0;","frame_eqs_eel":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\n\nadvance2=advance2+ mid_att*mid_att*0.005;\nt2=advance2","point_eqs_eel":"x = .5+.25*(sample*2)*sin(sample*100+time*10)+((cos(time)*x)*0.2);\ny = .5+.25*(sample*2)*cos(sample*100+time*10)+((sin(time)*y)*0.2);\nr = bass;\nb = 0;\ng = .5;"},{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_str":"advance=0;\nadvance2=0","frame_eqs_str":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2","point_eqs_str":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5) * 0.3;\na=if( below(a,0), 0 , a);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=0.2;\ng=0.7;\nb=1.0;\n\n","init_eqs_eel":"advance=0;\nadvance2=0","frame_eqs_eel":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5) * 0.3;\na=if( below(a,0), 0 , a);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=0.2;\ng=0.7;\nb=1.0;\n\n"},{"baseVals":{"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_str":"advance=0;\nadvance2=0","frame_eqs_str":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2;","point_eqs_str":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5)*2;\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=0.7;\nb=0.2;\n\n\n","init_eqs_eel":"advance=0;\nadvance2=0","frame_eqs_eel":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2;","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5)*2;\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=0.7;\nb=0.2;\n\n\n"},{"baseVals":{"additive":1,"enabled":0},"init_eqs_str":"advance=0;\nadvance2=0","frame_eqs_str":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2;","point_eqs_str":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5) * 0.3;\na=if( below(a,0), 0 , a);\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=0.2;\ng=0.7;\nb=1.0;\n\n\n","init_eqs_eel":"advance=0;\nadvance2=0","frame_eqs_eel":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2;","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5) * 0.3;\na=if( below(a,0), 0 , a);\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=0.2;\ng=0.7;\nb=1.0;\n\n\n"}],"init_eqs_str":"a.thresh=0;a.dx_r=0;a.dy_r=0;a.q2=0;","frame_eqs_str":"a.warp=0;a.ib_r=.6+.4*Math.sin(.894*a.time);a.ib_g=.43+.13*Math.sin(7.143*a.time);a.ib_b=.5+.33*Math.sin(.465*a.time);a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.004*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.004*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.dx=1.1*a.dx_r;a.dy=1.1*a.dy_r;a.q2=a.dx+(.00001<Math.abs(above(a.bass+a.bass_att,2.6))?11*a.dx_r:0);a.q2=15*\na.q2+(.00001<Math.abs(above(a.dx_r,0))?.04+.01*Math.sin(.573*a.time):-.04+.01*Math.sin(.573*a.time));a.mv_l=1E4;a.mv_y=2;a.mv_dy=-.1;a.mv_r=.7+.148*(a.ib_r+a.ib_b);a.mv_b=1-.2*(a.ib_r+a.ib_b);a.mv_g=.6+.19*(a.ib_g+a.ib_r);a.zoom=a.zoom-.02*a.thresh+.01;a.wave_r=a.ib_r;a.wave_b=a.ib_b;a.wave_g=a.ib_g;a.ob_r=1-a.ib_g;a.ob_b=.5*(a.ib_r+a.ib_g);","pixel_eqs_str":"a.dx=.00001<Math.abs(above(a.y,.93))?.01:.00001<Math.abs(below(a.y,.01))?.00001<Math.abs(below(a.x,.3))?.00001<Math.abs(below(a.y,.5))?0:-.01:-.01:-.001;a.dy=.00001<Math.abs(below(a.x,.05))?.01:.00001<Math.abs(above(a.x,.93))?-.01:-.001;a.zoom=.00001<Math.abs(above(a.x,.09))?.00001<Math.abs(below(a.x,.85))?.00001<Math.abs(above(a.y,.09))?.00001<Math.abs(below(a.y,.85))?.95:1:1:1:1;a.dy=.00001<Math.abs(below(a.y,.5))?.00001<Math.abs(below(a.x,.3))?.01:a.dy:a.dy;a.rot=.00001<\nMath.abs(above(a.x,.09))?.00001<Math.abs(below(a.x,.85))?.00001<Math.abs(above(a.y,.09))?.00001<Math.abs(below(a.y,.85))?Math.sin(2*a.rad+.1*a.time):0:0:0:0;","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\nib_r = 0.6 + 0.4*sin(time*0.894);\nib_g = 0.43 + 0.13*sin(time*7.143);\nib_b = 0.5+ 0.33*sin(time*0.465);\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.004*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.004*sin(6*time)+(1-equal(thresh,2))*dy_r;\ndx = 1.1* dx_r;\ndy = 1.1* dy_r;\nq2 = dx + if(above(bass+bass_att,2.6), 11*dx_r, 0);\nq2 =q2*15 +  if(above(dx_r,0),0.04 + 0.01*sin(time*0.573),-0.04+ 0.01*sin(time*0.573));\nmv_l =10000;\nmv_y =2.0;\nmv_dy = -0.1;\nmv_r =0.7+0.148*(ib_r+ib_b);\nmv_b =1-0.2*(ib_r+ib_b);\nmv_g =0.6+ 0.19*(ib_g+ib_r);\nzoom = zoom -0.02*thresh + 0.01;\nwave_r = ib_r;\nwave_b = ib_b;\nwave_g = ib_g;\nob_r = 1-ib_g;\nob_b = 0.5*(ib_r+ib_g);","pixel_eqs_eel":"dx = if(above(y,.93),.01,if(below(y,.01),if(below(x,.3),if(below(y,.5),0,-.01),-.01),-.001));\ndy = if(below(x,.05),.01,if(above(x,.93),-.01,-.001));\nzoom = if(above(x,.09),if(below(x,.85),if(above(y,.09),if(below(y,.85),.95,1),1),1),1);\ndy = if(below(y,.5),if(below(x,.3),.01,dy),dy);\nrot = if(above(x,.09),if(below(x,.85),if(above(y,.09),if(below(y,.85),sin(rad*2+time*.1),0),0),0),0);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 112.0));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) * 0.4));\n  vec3 tmpvar_2;\n  tmpvar_2.x = (1.7 - (bass * 0.5));\n  tmpvar_2.y = (1.7 - (treb * 0.5));\n  tmpvar_2.z = (1.7 - (mid * 0.5));\n  vec3 tmpvar_3;\n  tmpvar_3 = pow (pow (ret_1, vec3(0.5, 0.8, 1.7)), tmpvar_2);\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // take the difference between the crisp and blurred images,\n    // then add it back into the image.  Creates spots and stripes over time.\n    ret += (ret - GetBlur2(uv))*0.3;\n    ret *= 0.9;\n\n    // add noise:\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 112;\n\n    // desaturate over time, to keep the globs white\n    ret = lerp(ret, lum(ret), 0.2);\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret += GetBlur1(uv)*0.4;\n \n    // palettize:\n    ret = pow(ret, float3(0.5, 0.8, 1.7));\n    ret = pow(ret, float3(1.7-(bass*.5), 1.7-(treb*.5), 1.7-(mid*.5)));\n   \n    //ret.xyz *= 2; // a little bit of overbright\n}\n\n"}