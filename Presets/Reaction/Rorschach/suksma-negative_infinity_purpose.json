{"version":2,"baseVals":{"rating":5,"gammaadj":1,"wave_thick":1,"wrap":0,"wave_a":1.008,"wave_scale":6.504,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":0,"modwavealphaend":0,"zoom":0.42,"rot":0.1,"dx":0.175,"sx":0.9803,"wave_b":0,"mv_x":10.88,"mv_y":11.52,"mv_l":5,"mv_r":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":99,"textured":1,"x":1,"y":0.63,"rad":1.3,"tex_zoom":0.763,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"y":0.55,"rad":0.225,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"x":0.85,"y":0,"rad":1.3,"tex_zoom":2.068,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.97,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":3,"textured":1,"x":0.02,"rad":0.733,"ang":1.319,"tex_zoom":100,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.97,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"thick":1,"scaling":1.95097,"smoothing":0.4,"a":0.97,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":20,"scaling":0.07,"smoothing":0.65,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":30,"scaling":0.07,"r":0.3,"g":0.3,"b":0.3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":60,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.warp=0;a.wave_mystery=2;a.zoom=1.4+.15*Math.cos(.42*a.time);a.rot=.01*Math.sin(1.34*a.time);a.dx=.005*Math.sin(.646*a.time);a.dy=.005*Math.sin(.314*a.time);a.cx=.5+.05*Math.sin(.497*a.time);a.cy=.5+.05*Math.sin(.413*a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\nwave_mystery = 2;\nzoom = 1.4 +0.15*cos(time*0.42);\nrot = 0.01*sin(1.34*time);\ndx = 0.005*sin(time*0.646);\ndy=0.005*sin(time*0.314);\ncx = 0.5 + 0.05*sin(0.497*time);\ncy = 0.5 +0.05*sin(0.413*time);","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, ((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.1))).xyz - 0.5)\n   / 256.0) * 28.0));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.04, 0.04, 0.04));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","comp":"uniform sampler2D sampler_seaweed;\n shader_body { \n  float tmpvar_1;\n  tmpvar_1 = abs((texture (sampler_main, uv).z - texture (sampler_pw_main, (\n    ((uv - 0.5) * 0.08)\n   + 0.5)).z));\n  vec2 tmpvar_2;\n  tmpvar_2.x = slow_roam_cos.x;\n  tmpvar_2.y = slow_roam_sin.y;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((pow (tmpvar_1, 0.5) * (1.0 - texture (sampler_seaweed, \n    (tmpvar_2 + (vec2(0.1, 0.0) * tmpvar_1))\n  ))).xyz * 2.0);\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // take the difference between the crisp and blurred images,\n    // then add it back into the image.  Creates spots and stripes over time.\n    ret += (ret - GetBlur1(uv))*0.3;\n    ret *= 0.9;\n\n   // add noise:\n   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.1;// + rand_frame.xy;\n   ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 28;\n\n   // desaturate over time, to keep the globs white\n   ret = lerp(ret, lum(ret), 0.04);\n}","comp_hlsl":"sampler sampler_seaweed;\n\nshader_body\n{\n    float lum = tex2D(sampler_main, uv).z;\n\n      // note the use of the _pw suffix here; the 'p' stands\n      // for 'point sampling' - it turns off\n      // bilinear interpolation ('f'), giving is \"blocky\" pixels.\n      // (the 'w' is for wrap - alternative is 'c' for clamp.)\n      lum = abs(lum - tex2D(sampler_pw_main, (uv-0.5)*0.08 + 0.5).z);\n\n    ret = lum + 0.13*cos(lum*29+2.8);\n\n    float2 texc = float2(slow_roam_cos.x, slow_roam_sin.y);\n    ret = pow(lum,0.5) * (1-tex2D(sampler_seaweed, texc + float2(0.1,0)*lum));\n\n    ret *= 2; // a little bit of overbright\n}\n\n"}