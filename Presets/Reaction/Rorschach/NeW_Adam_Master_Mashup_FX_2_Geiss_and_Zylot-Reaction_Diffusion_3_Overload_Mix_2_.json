{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":7,"modwavealphabyvolume":1,"wave_a":0,"wave_scale":1.015,"wave_smoothing":0.522,"modwavealphastart":0.83,"modwavealphaend":1.31,"zoomexp":1.00016,"zoom":1.00022,"warp":0,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.1,"ob_a":0.06,"ib_size":0.035,"ib_g":0.45,"ib_a":0.29,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.beatfreq=0;a.dle=0;a.pulsefreq=0;a.bccl=0;a.bt=0;a.q1=0;a.lastbeat=0;a.pulse=0;a.q4=0;a.dqv=0;a.le=0;a.btblock=0;a.leccl=0;a.beat=0;a.hccp=0;a.q2=0;a.lastpulse=0;a.q3=0;a.eo=0;a.th=0;a.thccl=0;a.dle=1;","frame_eqs_str":"a.le=1.4*a.bass_att+.1*a.bass+.5*a.treb;a.pulse=above(a.le,a.th);a.pulsefreq=.00001<Math.abs(equal(a.pulsefreq,0))?2:.00001<Math.abs(a.pulse)?.8*a.pulsefreq+.2*(a.time-a.lastpulse):a.pulsefreq;a.lastpulse=.00001<Math.abs(a.pulse)?a.time:a.lastpulse;a.bt=div(a.time-a.lastbeat,.5*a.beatfreq+.5*a.pulsefreq);a.hccp=div(.03,a.bt+.2)+.5*(.00001<Math.abs(band(above(a.bt,.8),below(a.bt,1.2)))?pow(Math.sin(7.854*(a.bt-1)),4)-1:0);a.beat=band(above(a.le,a.th+a.hccp),a.btblock);a.btblock=\n1-above(a.le,a.th+a.hccp);a.lastbeat=.00001<Math.abs(a.beat)?a.time:a.lastbeat;a.beatfreq=.00001<Math.abs(equal(a.beatfreq,0))?2:.00001<Math.abs(a.beat)?.8*a.beatfreq+.2*(a.time-a.lastbeat):a.beatfreq;a.th=.00001<Math.abs(above(a.le,a.th))?a.le+div(114,a.le+10)-7.407:a.th+div(.07*a.th,a.th-12)+.1*below(a.th,2.7)*(2.7-a.th);a.th=.00001<Math.abs(above(a.th,6))?6:a.th;a.thccl+=a.th-2.5144;a.q1=a.le;a.q2=a.thccl+.2*a.leccl;a.leccl+=a.dle*a.le;a.dle=.00001<Math.abs(a.beat)?-a.dle:a.dle;a.bccl+=a.beat;\na.wave_r=.1+.8*sqr(Math.sin(.011*a.thccl))+.1*Math.sin(.061*a.leccl);a.wave_g=.1+.8*sqr(Math.sin(.013*a.thccl))+.1*Math.cos(.067*a.leccl);a.wave_b=.1+.8*sqr(Math.cos(.017*a.thccl))+.1*Math.sin(.065*a.leccl);a.ib_r+=.1*Math.sin(1.3*a.time+.012*a.leccl);a.ib_g+=.1*Math.sin(1.7*a.time+.019*a.leccl);a.ib_b+=.1*Math.sin(1.9*a.time+.017*a.leccl);a.mv_r=.5*(a.ib_r+a.wave_r);a.mv_g=.5*(a.ib_g+a.wave_g);a.mv_b=.5*(a.ib_b+a.wave_b);a.mv_a=.5*sqr(Math.sin(.01*a.leccl+a.bccl));a.echo_alpha=.5+.2*Math.cos(.07*\na.leccl+.02*a.thccl);a.eo=.00001<Math.abs(band(equal(mod(a.bccl,3),0),a.beat))?Math.floor(rand(4)):a.eo;a.q3=(equal(a.eo,2)+equal(a.eo,1))*equal(mod(a.bccl,2),0);a.q4=(equal(a.eo,0)+equal(a.eo,3))*equal(mod(a.bccl,2),0);a.echo_orient=a.eo;","pixel_eqs_str":"a.dqv=above(a.x,.5)-above(a.y,.5);a.rot=Math.sin(Math.sin(a.rad*(13+5*Math.sin(.01*a.q2))+.06*a.q2)*a.q1*.01);a.zoom=1+.1*(.00001<Math.abs(a.q3)?a.dqv:1)*Math.sin(7*a.ang+.03*a.q2);a.zoom=.00001<Math.abs(a.q4)?.00001<Math.abs(below(a.rad,.8*sqr(Math.sin(.016*a.q2))))?.75+.4*Math.cos(.021*a.q2):a.zoom:a.zoom;","init_eqs_eel":"dle=1;","frame_eqs_eel":"// timed sidon sensor\n// le = signal level; desired average value = 2\nle=1.4*bass_att+.1*bass+.5*treb;\npulse=above(le,th);\n// pulsefreq = running average of interval between last 5 pulses\npulsefreq=if(equal(pulsefreq,0),2,\nif(pulse,.8*pulsefreq+.2*(time-lastpulse),pulsefreq));\nlastpulse=if(pulse,time,lastpulse);\n// bt = relative time; 0 = prev beat; 1 = expected beat\nbt=(time-lastbeat)/(.5*beatfreq+.5*pulsefreq);\n// hccp = handcicap for th driven by bt\nhccp=(.03/(bt+.2))+.5*if(band(above(bt,.8),below(bt,1.2)),\n(pow(sin((bt-1)*7.854),4)-1),0);\nbeat=band(above(le,th+hccp),btblock);\nbtblock=1-above(le,th+hccp);\nlastbeat=if(beat,time,lastbeat);\nbeatfreq=if(equal(beatfreq,0),2,\nif(beat,.8*beatfreq+.2*(time-lastbeat),beatfreq));\n// th = threshold\nth=if(above(le,th),le+114/(le+10)-7.407,\nth+th*.07/(th-12)+below(th,2.7)*.1*(2.7-th));\nth=if(above(th,6),6,th);\nthccl=thccl+(th-2.5144);\n\nq1=le;\nq2=thccl+.2*leccl;\nleccl=leccl+dle*le;\ndle=if(beat,-dle,dle);\nbccl=bccl+beat;\n\nwave_r=.1+.8*sqr(sin(.011*thccl))+.1*sin(leccl*.061);\nwave_g=.1+.8*sqr(sin(.013*thccl))+.1*cos(leccl*.067);\nwave_b=.1+.8*sqr(cos(.017*thccl))+.1*sin(leccl*.065);\n\nib_r=ib_r+.1*sin(1.3*time+.012*leccl);\nib_g=ib_g+.1*sin(1.7*time+.019*leccl);\nib_b=ib_b+.1*sin(1.9*time+.017*leccl);\nmv_r=.5*(ib_r+wave_r);mv_g=.5*(ib_g+wave_g);mv_b=.5*(ib_b+wave_b);\nmv_a=.5*sqr(sin(.01*leccl+bccl));\n\necho_alpha=.5+.2*cos(.07*leccl+.02*thccl);\neo=if(band(equal(bccl%3,0),beat),int(rand(4)),eo);\nq3=(equal(eo,2)+equal(eo,1))*equal(bccl%2,0);\nq4=(equal(eo,0)+equal(eo,3))*equal(bccl%2,0);\necho_orient=eo;","pixel_eqs_eel":"dqv=above(x,.5)-above(y,.5);\nrot=sin(sin(rad*(13+5*sin(.01*q2))+.06*q2)*q1*.01);\nzoom=1+if(q3,dqv,1)*.1*sin(7*ang+.03*q2);\nzoom=if(q4,if(below(rad,.8*sqr(sin(.016*q2))),.75+.4*cos(.021*q2),zoom),zoom);","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + ((\n    (ret_1 - mix (((texture (sampler_blur2, uv).xyz * scale2) + bias2), ((texture (sampler_blur1, uv).xyz * scale1) + bias1), uv_orig.xxx))\n   * 0.3) - (0.00666 * \n    (((bass + treb) + mid) - 0.5)\n  )));\n  ret_1 = (ret_1 * 0.95);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 122.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) * 0.4));\n  vec3 tmpvar_2;\n  tmpvar_2.x = (1.7 - (bass * 0.5));\n  tmpvar_2.y = (1.7 - (treb * 0.5));\n  tmpvar_2.z = (1.7 - (mid * 0.5));\n  vec3 tmpvar_3;\n  tmpvar_3 = pow (pow (ret_1, vec3(0.5, 0.8, 1.7)), tmpvar_2);\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret.xyz = tex2D( sampler_main, uv ).xyz;\n\n      // take the difference between the crisp and blurred images,\n      // then add it back into the image.  Creates spots and stripes over time.\n      float3 b = lerp(GetBlur2(uv),GetBlur1(uv),uv_orig.x);//GetBlur2(uv);\n      ret.xyz += (ret.xyz - b)*0.3 - (((bass+treb+mid-0.5)*.333)*.02);\n      ret.xyz *= 0.95;\n\n      // add noise:\n      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 * saturate(treb_att-1);\n\n      // desaturate over time, to keep the globs white\n      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret += GetBlur1(uv)*0.4;\n \n    // palettize:\n    ret = pow(ret, float3(0.5, 0.8, 1.7));\n    ret = pow(ret, float3(1.7-(bass*.5), 1.7-(treb*.5), 1.7-(mid*.5)));\n   \n    //ret.xyz *= 2; // a little bit of overbright\n}\n\n"}