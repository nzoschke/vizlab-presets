{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"brighten":1,"wave_a":0.401,"wave_scale":3.177,"wave_smoothing":0,"wave_mystery":-0.4,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":2.289,"warpscale":5.472,"zoomexp":0.01,"zoom":0.9901,"warp":1.8566,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":512,"y":0.55,"rad":0.034,"tex_zoom":0.7874,"g":0.45,"g2":0,"border_a":0},"init_eqs_str":"a.my_z=0;a.d=0;a.y3=0;a.z2=0;a.y1=0;a.w=0;a.w2=0;a.t1=0;a.x1=0;a.rnd2=0;a.zoom=0;a.p=0;a.q1=0;a.q5=0;a.z3=0;a.w3=0;a.t3=0;a.my_x=0;a.x3=0;a.wv=0;a.my_y=0;a.q4=0;a.t=0;a.w1=0;a.i=0;a.x2=0;a.t2=0;a.l=0;a.y2=0;a.rnd4=0;a.wh=0;a.q2=0;a.z1=0;a.rnd3=0;a.rnd1=0;a.q3=0;a.t4=0;a.started=0;a.t1=.412;a.t2=.4563;a.t3=.6452;a.t4=.2565;","frame_eqs_str":"a.rnd1=.00001<Math.abs(equal(a.instance,0))?a.t1:a.rnd1;a.rnd2=.00001<Math.abs(equal(a.instance,0))?a.t2:a.rnd2;a.rnd3=.00001<Math.abs(equal(a.instance,0))?a.t3:a.rnd3;a.rnd4=.00001<Math.abs(equal(a.instance,0))?a.t4:a.rnd4;a.rnd1=4*a.rnd1*(1-a.rnd1);a.rnd2=4*a.rnd2*(1-a.rnd2);a.rnd3=4*a.rnd3*(1-a.rnd3);a.rnd4=4*a.rnd4*(1-a.rnd4);a.t=.6;a.t=a.rnd1+a.time*a.t-Math.floor(a.rnd1+a.time*a.t);a.t+=.1*a.rnd2;a.wh=a.rnd4*Math.asin(1)*4;a.wv=.25+.1*a.rnd3;a.d=1.4;a.zoom=1;a.l=1;a.w1=\na.q3;a.w2=a.q4;a.w3=a.q5;a.i=a.instance;a.my_x=a.t*Math.cos(a.wh)*Math.sin(a.wv)*a.l;a.my_y=(-.5+(a.t-.75)*(a.t-.75))*Math.cos(a.wv)*a.l;a.my_z=a.t*Math.sin(a.wh)*Math.sin(a.wv)*a.l;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*a.my_y;a.z1=a.my_z;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*a.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*\na.x3+a.y3*a.y3);a.w=Math.atan2(a.x3,a.y3);a.p=Math.tan(Math.asin(1)+Math.atan2(a.d+a.z3,a.l));a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));a.rad=div(a.rad,a.d);a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+a.my_x;a.y=.5+a.my_y;a.x=.5+div(a.x-.5,a.q2);a.y=.5+div(a.y-.5,a.q1);","init_eqs_eel":"started = 0;\nt1 = 0.412; //seeds for pseudo random generator\nt2 = 0.4563;\nt3 = 0.6452;\nt4 = 0.2565;","frame_eqs_eel":"\nrnd1 = if(equal(instance,0),t1,rnd1);\nrnd2 = if(equal(instance,0),t2,rnd2);\nrnd3 = if(equal(instance,0),t3,rnd3);\nrnd4 = if(equal(instance,0),t4,rnd4);\nrnd1 = 4*rnd1*(1-rnd1);\nrnd2 = 4*rnd2*(1-rnd2);\nrnd3 = 4*rnd3*(1-rnd3);\nrnd4 = 4*rnd4*(1-rnd4);\nt = .6;\nt =  (rnd1+time*t) - int(rnd1+time*t);\nt = t + rnd2*0.1;\nwh = rnd4*asin(1)*4;\nwv = 0.25 + rnd3*0.1;\n\nd = 1.4; // makes the perspective impact\nzoom = 1;\nl = 1;\n\n// Kardan angles\n\nw1 = q3; // first rotation: clockwise in the desktop pane\nw2 = q4; // rotation around vertical axis\nw3 = q5; // rotation around horizontal axis\n\n\n// definition of the 3D shape\n\ni = instance;\n\nmy_x = t *(cos(wh)*sin(wv)*l);\nmy_y = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l;\nmy_z = t*(sin(wh)*sin(wv)*l);\n\n\n// 3D rotations\n\nx1 = cos(w1)*my_x + sin(w1)*my_y;\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\nz1 = my_z;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\n// perspective calculation\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\np = tan(asin(1) + atan2(d+z3,l));\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\n\nrad = rad/d;\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x;\ny = 0.5 + my_y;\n\nx = 0.5 + (x-0.5)/q2;\ny = 0.5 + (y-0.5)/q1;"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;","frame_eqs_str":"a.trans=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.trans2=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.trans3=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+div(rand(Math.floor(a.q30)),15)+\na.instance-a.instance;a.r=.1*rand(a.q30)+a.instance-a.instance;a.g=.1*rand(a.q30)+a.instance-a.instance;a.b=.1*rand(a.q30)+a.instance-a.instance;a.r2=.1*rand(a.q30)+a.instance-a.instance;a.g2=.1*rand(a.q30)+a.instance-a.instance;a.b2=.1*rand(a.q30)+a.instance-a.instance;a.border_r=.1*rand(a.q30)+a.instance-a.instance;a.border_g=.1*rand(a.q30)+a.instance-a.instance;a.border_b=.1*rand(a.q30)+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\ntrans2 = rand(int(q30))/15+instance-instance;\ntrans3 = rand(int(q30))/15+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + rand(int(q30))/15+instance-instance;\nr=rand(q30)*.1+instance-instance;\ng=rand(q30)*.1+instance-instance;\nb=rand(q30)*.1+instance-instance;\nr2=rand(q30)*.1+instance-instance;\ng2=rand(q30)*.1+instance-instance;\nb2=rand(q30)*.1+instance-instance;\nborder_r=rand(q30)*.1+instance-instance;\nborder_g=rand(q30)*.1+instance-instance;\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"sides":100,"textured":1,"rad":0.03333,"r":0,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = int(rand(100))*.01;\ny = int(rand(100))*.01;\n\na = if(above(frame%7,0),0,1);\n\nvol=bass+mid+treb;\nrad = vol*.1;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01;\ny = int(rand(100))*.01;\n\na = if(above(frame%7,0),0,1);\n\nvol=bass+mid+treb;\nrad = vol*.1;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;a.pi23=0;a.t1=0;","frame_eqs_str":"a.ma+=3.1415*above(a.bass,1)*.01*a.bass;a.ma-=3.1415*above(a.treb,1)*.01*a.treb;a.mx+=.0002*Math.cos(a.ma);a.my+=.0002*Math.tan(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=1-a.mx;a.y=1-a.my;a.ang=3*(Math.sin(.35*a.time)+1);a.pi23=1.333333332*Math.asin(1);a.t1=a.bass+a.mid+a.treb;","init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*tan(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=1-my;\n\nang=(sin(time*.35)+1)*3;\n//a=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"additive":1,"r":0.2,"g":0,"b":0,"a":0.3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=time*0.4 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\nyq=yp;\nzq=zp;\n\nang=tm*8;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\n//a=(1-sample)*flip;\n\n//b=b+pow(1-sample,2)*0.3;\n\nx = 0.5 + (x-0.5)/q1;\ny = 0.5 + (y-0.5)/q2 + 0.1;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=time*0.4 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\nyq=yp;\nzq=zp;\n\nang=tm*8;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\n//a=(1-sample)*flip;\n\n//b=b+pow(1-sample,2)*0.3;\n\nx = 0.5 + (x-0.5)/q1;\ny = 0.5 + (y-0.5)/q2 + 0.1;"},{"baseVals":{"additive":1,"r":0.2,"g":0,"b":0,"a":0.3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=time*0.4 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\nyp=-yp;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\nyq=yp;\nzq=zp;\n\nang=tm*8;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\n//a=(1-sample)*flip;\n\n\n//b=b+pow(1-sample,2)*0.3;\n\n\nx = 0.5 + (x-0.5)/q1;\ny = 0.5 + (y-0.5)/q2 + 0.1;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=time*0.4 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\nyp=-yp;\nzp=0;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\nyq=yp;\nzq=zp;\n\nang=tm*8;\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nxp=xq*sin(ang) + yq*cos(ang);\nyp=xq*cos(ang) - yq*sin(ang);\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2)*0.75 - 1.05;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nxp=xq;\nyp=yq*cos(ang) - zq*sin(ang);\nzp=yq*sin(ang) + zq*cos(ang);\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\n//a=(1-sample)*flip;\n\n\n//b=b+pow(1-sample,2)*0.3;\n\n\nx = 0.5 + (x-0.5)/q1;\ny = 0.5 + (y-0.5)/q2 + 0.1;\n"},{"baseVals":{"samples":61,"thick":1,"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t1 = q1;\nt2 = q2;\nt3 = q3;\nt4 = q4;\nt5 = q5;\nt6 = q6;\nt7 = q7;\nt8 = q8;","point_eqs_str":"x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\n\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;","init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\nt2 = q2;\nt3 = q3;\nt4 = q4;\nt5 = q5;\nt6 = q6;\nt7 = q7;\nt8 = q8;","point_eqs_eel":"x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\n\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;"},{"baseVals":{"samples":61,"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_str":"t2 = 0","frame_eqs_str":"t1 = q1;\nt2 = q2;\nt3 = q3;\nt4 = q4;\nt5 = q5;\nt6 = q6;\nt7 = q7;\nt8 = q8;","point_eqs_str":"x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\n\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;","init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\nt2 = q2;\nt3 = q3;\nt4 = q4;\nt5 = q5;\nt6 = q6;\nt7 = q7;\nt8 = q8;","point_eqs_eel":"x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\n\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;"}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q1=0;a.mq31=0;a.q5=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.atime=0;a.q4=0;a.q26=0;a.t=0;a.b=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.q2=0;a.q27=0;a.q3=0;a.m=0;a.q28=0;a.q30=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.wave_a=0;\na.q1=a.aspectx;a.q2=a.aspecty;a.b+=a.bass*a.bass*.85;a.m+=a.mid*a.mid*.85;a.t+=a.treb*a.treb*.85;a.q3=.012*a.b;a.q4=.012*a.m;a.q5=.012*a.t;a.q30=a.bass+a.treb+a.mid;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\nwave_a = 0;\nq1 =aspectx;\nq2 = aspecty;\n\n\nb = b + bass*bass*0.85;\nm = m + mid*mid*0.85;\nt = t + treb*treb*0.85;\n\nq3 = b*0.012;\nq4 = m*0.012;\nq5 = t*0.012;\n\nq30=bass+treb+mid;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.15, 0.15)));\n  ret_1 = tmpvar_2.xyz;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((tmpvar_2.x > (q21 * q13)) && (tmpvar_2.x <= (q24 * q11)))) {\n    ret_1.y = (tmpvar_2.y + (tmpvar_3.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (tmpvar_2.z + (tmpvar_3.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (tmpvar_2.x + (tmpvar_3.z * 0.5));\n  };\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, uv);\n  ret_1.x = (ret_1.x + fract(texture (sampler_main, (uv + \n    ((vec2(1.0, 2.0) * texsize.zw) * tmpvar_4.x)\n  )).x));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_blur3, uv);\n  ret_1.x = (ret_1.x - ((tmpvar_5.xyz * scale3) + bias3).x);\n  ret_1.y = (ret_1.y + fract(texture (sampler_main, (uv + \n    ((vec2(2.0, -2.0) * texsize.zw) * tmpvar_4.y)\n  )).y));\n  ret_1.y = (ret_1.y - ((tmpvar_5.xyz * scale3) + bias3).y);\n  ret_1.z = (ret_1.z + fract(texture (sampler_main, (uv + \n    ((vec2(-2.0, -1.0) * texsize.zw) * tmpvar_4.z)\n  )).z));\n  ret_1.z = (ret_1.z - ((tmpvar_5.xyz * scale3) + bias3).z);\n  ret_1 = ((ret_1 * 0.95) - 0.002);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec3 ret2_1;\n  vec3 ret_2;\n  ret_2 = (0.9 * texture (sampler_main, uv).xyz);\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\n    ret_2.z = (ret_2.z - (tmpvar_3.x * 0.5));\n  };\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\n    ret_2.x = (ret_2.x - (tmpvar_3.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\n    ret_2.y = (ret_2.y - (tmpvar_3.z * 0.5));\n  };\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur1, uv);\n  ret_2 = (ret_2 + ((0.5 * \n    ((tmpvar_4.xyz * scale1) + bias1)\n  ) + (0.1 * \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  )));\n  vec2 tmpvar_5;\n  tmpvar_5 = ((0.5 - uv) + 0.5);\n  ret2_1 = ((0.9 * texture (sampler_main, tmpvar_5).xyz) + ((0.5 * \n    ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1)\n  ) + (0.1 * \n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\n  )));\n  vec3 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (2.0 * rad);\n  tmpvar_6 = mix (ret2_1, (0.8 - clamp (\n    (texture (sampler_main, tmpvar_5).xyz + (0.5 * ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1)))\n  , 0.0, 1.0)), vec3((tmpvar_7 - 0.45)));\n  ret2_1 = tmpvar_6;\n  vec3 tmpvar_8;\n  tmpvar_8 = mix (mix (ret_2, (0.8 - \n    clamp ((texture (sampler_main, uv).xyz + (0.5 * (\n      (tmpvar_4.xyz * scale1)\n     + bias1))), 0.0, 1.0)\n  ), vec3((tmpvar_7 - 0.45))), tmpvar_6, vec3(0.5, 0.5, 0.5));\n  float tmpvar_9;\n  tmpvar_9 = dot (tmpvar_8, vec3(0.32, 0.49, 0.29));\n  ret_2 = ((tmpvar_9 * tmpvar_9) * tmpvar_8);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_2;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n\n   // sample previous frame\nret = tex2D( sampler_fc_main, lerp(uv,uv_orig,.15)).xyz;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \nret.x += frac(GetPixel(uv+float2(1,2)*texsize.zw*GetPixel(uv).x).x);\nret.x -= GetBlur3(uv).x;\n\nret.y += frac(GetPixel(uv+float2(2,-2)*texsize.zw*GetPixel(uv).y).y);\nret.y -= GetBlur3(uv).y;\n\nret.z += frac(GetPixel(uv+float2(-2,-1)*texsize.zw*GetPixel(uv).z).z);\nret.z -= GetBlur3(uv).z;\n\n\n    // darken (decay) over time\n    ret = (ret*0.95)-.002; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    ret = .9*tex2D(sampler_main, uv).xyz;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \n    ret += .5*GetBlur1(uv)+.1*GetBlur3(uv);\n    ret = lerp(ret,.8-saturate(GetPixel(uv)+.5*GetBlur1(uv)),2*rad-.45);\n \n float2 uve = (uv-.5)*float2(-1,-1)+.5;\n float3 ret2 = .9*tex2D(sampler_main, uve).xyz;\n    ret2 += .5*GetBlur1(uve)+.1*GetBlur3(uve);\n    ret2 = lerp(ret2,.8-saturate(GetPixel(uve)+.5*GetBlur1(uve)),2*rad-.45);\n\nret = lerp(ret,ret2,.5);\n\n    ret = pow(lum(ret),2)*ret;\n\n}"}