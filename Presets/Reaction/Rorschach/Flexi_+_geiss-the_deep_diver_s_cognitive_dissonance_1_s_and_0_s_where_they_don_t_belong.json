{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":0.997,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":0.325,"rot":-0.22,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.16,"ob_b":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":14,"num_inst":10,"rad":0.01525,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));","init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.3));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));"}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.basstime=0;a.runtreb=0;a.q25=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.mq31=0;a.q5=0;a.mq21=0;a.vb=0;a.mq24=0;a.q9=0;a.pi23=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.atime=0;a.q4=0;a.q16=0;a.q26=0;a.mq27=0;a.mq25=0;a.runbass=0;a.q19=0;a.mq22=0;a.q17=0;a.vol=0;a.mq26=0;a.runmids=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.vvm=0;a.q32=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.vvt=0;a.q8=\n0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.q4=Math.sin(.03*\na.atime);a.q5=Math.cos(.030383824*a.atime);a.q6=Math.tan(.029384834*a.atime);a.vb=.95*a.vb+(1-a.vb)*pow(Math.abs(a.bass-a.bass_att),2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(Math.abs(a.mid-a.mid_att),2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(Math.abs(a.treb-a.treb_att),2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.runbass+=a.vvb;a.runmids+=\na.vvm;a.runtreb+=a.vvt;a.pi23=1.33333333333332*Math.asin(-1);a.atime=1.85*(a.runtreb+a.runmids+a.runbass);a.q8=.4*(Math.sin(a.atime-0*a.pi23)+1);a.q9=.4*(Math.sin(a.atime-1*a.pi23)+1);a.q10=.4*(Math.sin(a.atime-2*a.pi23)+1);a.vb=.95*a.vb+(1-a.vb)*pow(Math.abs(a.bass-a.bass_att),2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(Math.abs(a.mid-a.mid_att),2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(Math.abs(a.treb-a.treb_att),2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*\na.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=10*(a.vvt+a.vvm+a.vvb);a.q2=10*(a.vvt+a.vvm+a.vvb);a.q3=10*(a.vvt+a.vvm+a.vvb);a.q4=10*(a.vvt+a.vvm+a.vvb);a.q5=10*(a.vvt+a.vvm+a.vvb);a.q6=10*(a.vvt+a.vvm+a.vvb);a.q4=10*(a.vvt+a.vvm+a.vvb);a.q5=10*(a.vvt+a.vvm+a.vvb);a.q6=10*(a.vvt+a.vvm+a.vvb);a.q7=10*(a.vvt+a.vvm+a.vvb);a.q11=10*(a.vvt+a.vvm+a.vvb);a.q12=10*(a.vvt+a.vvm+a.vvb);a.q13=10*(a.vvt+a.vvm+a.vvb);a.q14=10*(a.vvt+a.vvm+\na.vvb);a.q15=10*(a.vvt+a.vvm+a.vvb);a.q16=10*(a.vvt+a.vvm+a.vvb);a.q17=10*(a.vvt+a.vvm+a.vvb);a.q18=10*(a.vvt+a.vvm+a.vvb);a.q19=10*(a.vvt+a.vvm+a.vvb);a.q20=10*(a.vvt+a.vvm+a.vvb);a.q21=10*(a.vvt+a.vvm+a.vvb);a.q22=10*(a.vvt+a.vvm+a.vvb);a.q23=10*(a.vvt+a.vvm+a.vvb);a.q24=10*(a.vvt+a.vvm+a.vvb);a.q25=10*(a.vvt+a.vvm+a.vvb);a.q26=10*(a.vvt+a.vvm+a.vvb);a.q27=10*(a.vvt+a.vvm+a.vvb);a.q28=10*(a.vvt+a.vvm+a.vvb);a.q29=10*(a.vvt+a.vvm+a.vvb);a.q30=10*(a.vvt+a.vvm+a.vvb);a.q31=10*(a.vvt+a.vvm+a.vvb);a.q32=\n10*(a.vvt+a.vvm+a.vvb);a.basstime+=.003*a.bass;a.q1=Math.sin(a.basstime);a.q2=.001*a.basstime;","pixel_eqs_str":"a.rot=0;a.zoom=1;","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\nq4=sin(atime*.03);\nq5=cos(atime*.030383824);\nq6=tan(atime*.029384834);\n//martin no religion / my omniversal absence for changing the background light\nvb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nrunbass=runbass+vvb;\nrunmids=runmids+vvm ;\nruntreb=runtreb+vvt;\npi23=4*asin(-1)*.33333333333333;\natime=(runtreb+runmids+runbass)*1.85;\nq8= (sin(atime-0*pi23)+1)*.4;\nq9= (sin(atime-1*pi23)+1)*.4;\nq10=(sin(atime-2*pi23)+1)*.4;\n\nvb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = (vvt+vvm+vvb)*10;\nq2 = (vvt+vvm+vvb)*10;\nq3 = (vvt+vvm+vvb)*10;\nq4 =(vvt+vvm+vvb)*10;\nq5 =(vvt+vvm+vvb)*10;\nq6 =(vvt+vvm+vvb)*10;\nq4 =(vvt+vvm+vvb)*10;\nq5 =(vvt+vvm+vvb)*10;\nq6 =(vvt+vvm+vvb)*10;\nq7 =(vvt+vvm+vvb)*10;\nq11=(vvt+vvm+vvb)*10;\nq12=(vvt+vvm+vvb)*10;\nq13=(vvt+vvm+vvb)*10;\nq14=(vvt+vvm+vvb)*10;\nq15=(vvt+vvm+vvb)*10;\nq16=(vvt+vvm+vvb)*10;\nq17=(vvt+vvm+vvb)*10;\nq18=(vvt+vvm+vvb)*10;\nq19=(vvt+vvm+vvb)*10;\nq20=(vvt+vvm+vvb)*10;\nq21=(vvt+vvm+vvb)*10;\nq22=(vvt+vvm+vvb)*10;\nq23=(vvt+vvm+vvb)*10;\nq24=(vvt+vvm+vvb)*10;\nq25=(vvt+vvm+vvb)*10;\nq26=(vvt+vvm+vvb)*10;\nq27=(vvt+vvm+vvb)*10;\nq28=(vvt+vvm+vvb)*10;\nq29=(vvt+vvm+vvb)*10;\nq30=(vvt+vvm+vvb)*10;\nq31=(vvt+vvm+vvb)*10;\nq32=(vvt+vvm+vvb)*10;\n\nbasstime  = basstime  + 0.003*bass;\n\nq1 = sin(basstime);\nq2 = basstime*0.001;","pixel_eqs_eel":"rot = 0;\nzoom = 1 ;//1.001 + 0.01*rad*bass;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_2.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_2.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_2.z * 0.5));\n  };\n  ret_1 = (ret_1 + ((ret_1 - \n    ((((\n      (texture (sampler_blur1, uv).xyz * scale1)\n     + bias1) * 0.3) + ((\n      (texture (sampler_blur2, uv).xyz * scale2)\n     + bias2) * 0.4)) + (((texture (sampler_blur3, uv).xyz * scale3) + bias3) * 0.3))\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 122.0) * (\n    (clamp ((treb_att - 1.0), 0.0, 1.0) * 0.4)\n   + 0.3)));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  float dots_1;\n  float dy_2;\n  float dx_3;\n  vec2 uv1_4;\n  vec2 polar2_5;\n  vec3 p_6;\n  vec2 polar_7;\n  vec2 c_8;\n  vec3 ret_9;\n  vec2 tmpvar_10;\n  tmpvar_10 = ((q27 * (uv - 0.5)) * aspect.xy);\n  c_8 = tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = sqrt(dot (tmpvar_10, tmpvar_10));\n  float tmpvar_12;\n  float tmpvar_13;\n  tmpvar_13 = (min (abs(\n    (tmpvar_11 / q30)\n  ), 1.0) / max (abs(\n    (tmpvar_11 / q30)\n  ), 1.0));\n  float tmpvar_14;\n  tmpvar_14 = (tmpvar_13 * tmpvar_13);\n  tmpvar_14 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_14) + 0.05368138) * tmpvar_14) - 0.1173503)\n     * tmpvar_14) + 0.1938925) * tmpvar_14) - 0.3326756)\n   * tmpvar_14) + 0.9999793) * tmpvar_13);\n  tmpvar_14 = (tmpvar_14 + (float(\n    (abs((tmpvar_11 / q30)) > 1.0)\n  ) * (\n    (tmpvar_14 * -2.0)\n   + 1.570796)));\n  tmpvar_12 = (tmpvar_14 * sign((tmpvar_11 / q30)));\n  if ((abs(q30) > (1e-08 * abs(tmpvar_11)))) {\n    if ((q30 < 0.0)) {\n      if ((tmpvar_11 >= 0.0)) {\n        tmpvar_12 += 3.141593;\n      } else {\n        tmpvar_12 = (tmpvar_12 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_12 = (sign(tmpvar_11) * 1.570796);\n  };\n  bool tmpvar_15;\n  tmpvar_15 = (q32 >= tmpvar_12);\n  float tmpvar_16;\n  float tmpvar_17;\n  tmpvar_17 = (min (abs(\n    (tmpvar_10.x / tmpvar_10.y)\n  ), 1.0) / max (abs(\n    (tmpvar_10.x / tmpvar_10.y)\n  ), 1.0));\n  float tmpvar_18;\n  tmpvar_18 = (tmpvar_17 * tmpvar_17);\n  tmpvar_18 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_18) + 0.05368138) * tmpvar_18) - 0.1173503)\n     * tmpvar_18) + 0.1938925) * tmpvar_18) - 0.3326756)\n   * tmpvar_18) + 0.9999793) * tmpvar_17);\n  tmpvar_18 = (tmpvar_18 + (float(\n    (abs((tmpvar_10.x / tmpvar_10.y)) > 1.0)\n  ) * (\n    (tmpvar_18 * -2.0)\n   + 1.570796)));\n  tmpvar_16 = (tmpvar_18 * sign((tmpvar_10.x / tmpvar_10.y)));\n  if ((abs(tmpvar_10.y) > (1e-08 * abs(tmpvar_10.x)))) {\n    if ((tmpvar_10.y < 0.0)) {\n      if ((tmpvar_10.x >= 0.0)) {\n        tmpvar_16 += 3.141593;\n      } else {\n        tmpvar_16 = (tmpvar_16 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_16 = (sign(tmpvar_10.x) * 1.570796);\n  };\n  float x_19;\n  x_19 = (q31 * sin(tmpvar_12));\n  vec2 tmpvar_20;\n  tmpvar_20.x = tmpvar_16;\n  tmpvar_20.y = ((q28 - tmpvar_12) + (sign(x_19) * (1.570796 - \n    (sqrt((1.0 - abs(x_19))) * (1.570796 + (abs(x_19) * (-0.2146018 + \n      (abs(x_19) * (0.08656672 + (abs(x_19) * -0.03102955)))\n    ))))\n  )));\n  polar_7 = tmpvar_20;\n  vec3 tmpvar_21;\n  tmpvar_21.x = (sin(tmpvar_16) * sin(tmpvar_20.y));\n  tmpvar_21.y = (cos(tmpvar_16) * sin(tmpvar_20.y));\n  tmpvar_21.z = cos(tmpvar_20.y);\n  vec2 tmpvar_22;\n  tmpvar_22.x = ((tmpvar_21.z * q10) - (tmpvar_21.y * q11));\n  tmpvar_22.y = ((tmpvar_21.z * q11) + (tmpvar_21.y * q10));\n  vec2 tmpvar_23;\n  tmpvar_23.x = ((tmpvar_22.x * q22) - (tmpvar_21.x * q23));\n  tmpvar_23.y = ((tmpvar_22.x * q23) + (tmpvar_21.x * q22));\n  p_6.z = tmpvar_23.x;\n  vec2 tmpvar_24;\n  tmpvar_24.x = ((tmpvar_22.y * q24) - (tmpvar_23.y * q25));\n  tmpvar_24.y = ((tmpvar_22.y * q25) + (tmpvar_23.y * q24));\n  p_6.xy = tmpvar_24.yx;\n  float tmpvar_25;\n  float tmpvar_26;\n  tmpvar_26 = (min (abs(\n    (tmpvar_23.x / tmpvar_24.y)\n  ), 1.0) / max (abs(\n    (tmpvar_23.x / tmpvar_24.y)\n  ), 1.0));\n  float tmpvar_27;\n  tmpvar_27 = (tmpvar_26 * tmpvar_26);\n  tmpvar_27 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_27) + 0.05368138) * tmpvar_27) - 0.1173503)\n     * tmpvar_27) + 0.1938925) * tmpvar_27) - 0.3326756)\n   * tmpvar_27) + 0.9999793) * tmpvar_26);\n  tmpvar_27 = (tmpvar_27 + (float(\n    (abs((tmpvar_23.x / tmpvar_24.y)) > 1.0)\n  ) * (\n    (tmpvar_27 * -2.0)\n   + 1.570796)));\n  tmpvar_25 = (tmpvar_27 * sign((tmpvar_23.x / tmpvar_24.y)));\n  if ((abs(tmpvar_24.y) > (1e-08 * abs(tmpvar_23.x)))) {\n    if ((tmpvar_24.y < 0.0)) {\n      if ((tmpvar_23.x >= 0.0)) {\n        tmpvar_25 += 3.141593;\n      } else {\n        tmpvar_25 = (tmpvar_25 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_25 = (sign(tmpvar_23.x) * 1.570796);\n  };\n  float tmpvar_28;\n  tmpvar_28 = sqrt(dot (p_6.xz, p_6.xz));\n  float tmpvar_29;\n  float tmpvar_30;\n  tmpvar_30 = (min (abs(\n    (tmpvar_24.x / tmpvar_28)\n  ), 1.0) / max (abs(\n    (tmpvar_24.x / tmpvar_28)\n  ), 1.0));\n  float tmpvar_31;\n  tmpvar_31 = (tmpvar_30 * tmpvar_30);\n  tmpvar_31 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_31) + 0.05368138) * tmpvar_31) - 0.1173503)\n     * tmpvar_31) + 0.1938925) * tmpvar_31) - 0.3326756)\n   * tmpvar_31) + 0.9999793) * tmpvar_30);\n  tmpvar_31 = (tmpvar_31 + (float(\n    (abs((tmpvar_24.x / tmpvar_28)) > 1.0)\n  ) * (\n    (tmpvar_31 * -2.0)\n   + 1.570796)));\n  tmpvar_29 = (tmpvar_31 * sign((tmpvar_24.x / tmpvar_28)));\n  if ((abs(tmpvar_28) > (1e-08 * abs(tmpvar_24.x)))) {\n    if ((tmpvar_28 < 0.0)) {\n      if ((tmpvar_24.x >= 0.0)) {\n        tmpvar_29 += 3.141593;\n      } else {\n        tmpvar_29 = (tmpvar_29 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_29 = (sign(tmpvar_24.x) * 1.570796);\n  };\n  vec2 tmpvar_32;\n  tmpvar_32.x = tmpvar_25;\n  tmpvar_32.y = tmpvar_29;\n  polar_7 = (((tmpvar_32 * q29) * vec2(1.0, 2.0)) + vec2(0.0, 0.5));\n  vec2 tmpvar_33;\n  tmpvar_33 = (1.0 - abs((\n    (fract(polar_7) * 2.0)\n   - 1.0)));\n  polar2_5 = tmpvar_33;\n  vec2 tmpvar_34;\n  tmpvar_34.x = (tmpvar_33.x - q6);\n  tmpvar_34.y = (tmpvar_33.y - q5);\n  vec2 tmpvar_35;\n  tmpvar_35.y = 0.0;\n  tmpvar_35.x = texsize.z;\n  vec2 tmpvar_36;\n  tmpvar_36.x = 0.0;\n  tmpvar_36.y = texsize.w;\n  float tmpvar_37;\n  tmpvar_37 = (texture (sampler_main, (tmpvar_33 - tmpvar_35)).xyz - texture (sampler_main, (tmpvar_33 + tmpvar_35)).xyz).x;\n  dx_3 = tmpvar_37;\n  float tmpvar_38;\n  tmpvar_38 = (texture (sampler_main, (tmpvar_33 - tmpvar_36)).xyz - texture (sampler_main, (tmpvar_33 + tmpvar_36)).xyz).x;\n  dy_2 = tmpvar_38;\n  vec2 tmpvar_39;\n  tmpvar_39.x = tmpvar_37;\n  tmpvar_39.y = tmpvar_38;\n  uv1_4 = ((0.3 * cos(\n    (tmpvar_34 * 2.0)\n  )) - tmpvar_39);\n  float tmpvar_40;\n  tmpvar_40 = clamp ((0.04 / sqrt(\n    dot (uv1_4, uv1_4)\n  )), 0.0, 1.0);\n  uv1_4 = ((0.3 * cos(\n    (uv1_4 * 12.0)\n  )) - (9.0 * tmpvar_39));\n  dots_1 = (tmpvar_40 - dot ((\n    (texture (sampler_blur2, tmpvar_33).xyz * scale2)\n   + bias2), vec3(0.32, 0.49, 0.29)));\n  ret_9 = (dots_1 + ((texture (sampler_main, tmpvar_33).xyz * 12.0) * vec3(clamp (\n    (0.04 / sqrt(dot (uv1_4, uv1_4)))\n  , 0.0, 1.0))));\n  vec4 tmpvar_41;\n  tmpvar_41 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv1_4.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_9.x > (q26 * q13)) && (ret_9.x <= (q23 * q11)))) {\n    ret_9.z = (ret_9.z - (tmpvar_41.x * 0.5));\n  };\n  if (((ret_9.y > (q25 * q11)) && (ret_9.y <= (q22 * q12)))) {\n    ret_9.x = (ret_9.x - (tmpvar_41.y * 0.5));\n  };\n  if (((ret_9.z > (q24 * q12)) && (ret_9.z <= (q21 * q13)))) {\n    ret_9.y = (ret_9.y - (tmpvar_41.z * 0.5));\n  };\n  c_8 = ((0.5 - uv) * aspect.xy);\n  float tmpvar_42;\n  float tmpvar_43;\n  tmpvar_43 = (min (abs(\n    (c_8.x / q30)\n  ), 1.0) / max (abs(\n    (c_8.x / q30)\n  ), 1.0));\n  float tmpvar_44;\n  tmpvar_44 = (tmpvar_43 * tmpvar_43);\n  tmpvar_44 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_44) + 0.05368138) * tmpvar_44) - 0.1173503)\n     * tmpvar_44) + 0.1938925) * tmpvar_44) - 0.3326756)\n   * tmpvar_44) + 0.9999793) * tmpvar_43);\n  tmpvar_44 = (tmpvar_44 + (float(\n    (abs((c_8.x / q30)) > 1.0)\n  ) * (\n    (tmpvar_44 * -2.0)\n   + 1.570796)));\n  tmpvar_42 = (tmpvar_44 * sign((c_8.x / q30)));\n  if ((abs(q30) > (1e-08 * abs(c_8.x)))) {\n    if ((q30 < 0.0)) {\n      if ((c_8.x >= 0.0)) {\n        tmpvar_42 += 3.141593;\n      } else {\n        tmpvar_42 = (tmpvar_42 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_42 = (sign(c_8.x) * 1.570796);\n  };\n  float tmpvar_45;\n  float tmpvar_46;\n  tmpvar_46 = (min (abs(\n    (c_8.y / q30)\n  ), 1.0) / max (abs(\n    (c_8.y / q30)\n  ), 1.0));\n  float tmpvar_47;\n  tmpvar_47 = (tmpvar_46 * tmpvar_46);\n  tmpvar_47 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_47) + 0.05368138) * tmpvar_47) - 0.1173503)\n     * tmpvar_47) + 0.1938925) * tmpvar_47) - 0.3326756)\n   * tmpvar_47) + 0.9999793) * tmpvar_46);\n  tmpvar_47 = (tmpvar_47 + (float(\n    (abs((c_8.y / q30)) > 1.0)\n  ) * (\n    (tmpvar_47 * -2.0)\n   + 1.570796)));\n  tmpvar_45 = (tmpvar_47 * sign((c_8.y / q30)));\n  if ((abs(q30) > (1e-08 * abs(c_8.y)))) {\n    if ((q30 < 0.0)) {\n      if ((c_8.y >= 0.0)) {\n        tmpvar_45 += 3.141593;\n      } else {\n        tmpvar_45 = (tmpvar_45 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_45 = (sign(c_8.y) * 1.570796);\n  };\n  vec2 tmpvar_48;\n  tmpvar_48.x = tmpvar_42;\n  tmpvar_48.y = tmpvar_45;\n  polar_7 = tmpvar_48;\n  vec3 tmpvar_49;\n  tmpvar_49.x = (sin(tmpvar_42) * cos(tmpvar_45));\n  tmpvar_49.y = (sin(tmpvar_45) * cos(tmpvar_42));\n  tmpvar_49.z = (cos(tmpvar_42) * cos(tmpvar_45));\n  vec2 tmpvar_50;\n  tmpvar_50.x = ((tmpvar_49.z * q10) - (tmpvar_49.y * q11));\n  tmpvar_50.y = ((tmpvar_49.z * q11) + (tmpvar_49.y * q10));\n  vec2 tmpvar_51;\n  tmpvar_51.x = ((tmpvar_50.x * q22) - (tmpvar_49.x * q23));\n  tmpvar_51.y = ((tmpvar_50.x * q23) + (tmpvar_49.x * q22));\n  p_6.z = tmpvar_51.x;\n  vec2 tmpvar_52;\n  tmpvar_52.x = ((tmpvar_50.y * q24) - (tmpvar_51.y * q25));\n  tmpvar_52.y = ((tmpvar_50.y * q25) + (tmpvar_51.y * q24));\n  p_6.xy = tmpvar_52.yx;\n  float tmpvar_53;\n  float tmpvar_54;\n  tmpvar_54 = (min (abs(\n    (tmpvar_52.y / tmpvar_51.x)\n  ), 1.0) / max (abs(\n    (tmpvar_52.y / tmpvar_51.x)\n  ), 1.0));\n  float tmpvar_55;\n  tmpvar_55 = (tmpvar_54 * tmpvar_54);\n  tmpvar_55 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_55) + 0.05368138) * tmpvar_55) - 0.1173503)\n     * tmpvar_55) + 0.1938925) * tmpvar_55) - 0.3326756)\n   * tmpvar_55) + 0.9999793) * tmpvar_54);\n  tmpvar_55 = (tmpvar_55 + (float(\n    (abs((tmpvar_52.y / tmpvar_51.x)) > 1.0)\n  ) * (\n    (tmpvar_55 * -2.0)\n   + 1.570796)));\n  tmpvar_53 = (tmpvar_55 * sign((tmpvar_52.y / tmpvar_51.x)));\n  if ((abs(tmpvar_51.x) > (1e-08 * abs(tmpvar_52.y)))) {\n    if ((tmpvar_51.x < 0.0)) {\n      if ((tmpvar_52.y >= 0.0)) {\n        tmpvar_53 += 3.141593;\n      } else {\n        tmpvar_53 = (tmpvar_53 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_53 = (sign(tmpvar_52.y) * 1.570796);\n  };\n  float tmpvar_56;\n  tmpvar_56 = sqrt(dot (p_6.xz, p_6.xz));\n  float tmpvar_57;\n  float tmpvar_58;\n  tmpvar_58 = (min (abs(\n    (tmpvar_52.x / tmpvar_56)\n  ), 1.0) / max (abs(\n    (tmpvar_52.x / tmpvar_56)\n  ), 1.0));\n  float tmpvar_59;\n  tmpvar_59 = (tmpvar_58 * tmpvar_58);\n  tmpvar_59 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_59) + 0.05368138) * tmpvar_59) - 0.1173503)\n     * tmpvar_59) + 0.1938925) * tmpvar_59) - 0.3326756)\n   * tmpvar_59) + 0.9999793) * tmpvar_58);\n  tmpvar_59 = (tmpvar_59 + (float(\n    (abs((tmpvar_52.x / tmpvar_56)) > 1.0)\n  ) * (\n    (tmpvar_59 * -2.0)\n   + 1.570796)));\n  tmpvar_57 = (tmpvar_59 * sign((tmpvar_52.x / tmpvar_56)));\n  if ((abs(tmpvar_56) > (1e-08 * abs(tmpvar_52.x)))) {\n    if ((tmpvar_56 < 0.0)) {\n      if ((tmpvar_52.x >= 0.0)) {\n        tmpvar_57 += 3.141593;\n      } else {\n        tmpvar_57 = (tmpvar_57 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_57 = (sign(tmpvar_52.x) * 1.570796);\n  };\n  vec2 tmpvar_60;\n  tmpvar_60.x = tmpvar_53;\n  tmpvar_60.y = (tmpvar_57 * 2.0);\n  polar_7 = ((tmpvar_60 * q29) + vec2(0.0, 0.5));\n  polar2_5 = (1.0 - abs((\n    (fract(polar_7) * 2.0)\n   - 1.0)));\n  vec2 tmpvar_61;\n  tmpvar_61.x = (polar2_5.x - q6);\n  tmpvar_61.y = (polar2_5.y - q5);\n  vec2 tmpvar_62;\n  tmpvar_62.y = 0.0;\n  tmpvar_62.x = texsize.z;\n  vec2 tmpvar_63;\n  tmpvar_63.x = 0.0;\n  tmpvar_63.y = texsize.w;\n  dx_3 = (texture (sampler_main, (polar2_5 - tmpvar_62)).xyz - texture (sampler_main, (polar2_5 + tmpvar_62)).xyz).x;\n  dy_2 = (texture (sampler_main, (polar2_5 - tmpvar_63)).xyz - texture (sampler_main, (polar2_5 + tmpvar_63)).xyz).x;\n  vec2 tmpvar_64;\n  tmpvar_64.x = dx_3;\n  tmpvar_64.y = dy_2;\n  uv1_4 = ((0.3 * cos(\n    (tmpvar_61 * 2.0)\n  )) - tmpvar_64);\n  float tmpvar_65;\n  tmpvar_65 = clamp ((0.04 / sqrt(\n    dot (uv1_4, uv1_4)\n  )), 0.0, 1.0);\n  uv1_4 = ((0.3 * cos(\n    (uv1_4 * 12.0)\n  )) - (9.0 * tmpvar_64));\n  dots_1 = (tmpvar_65 - dot ((\n    (texture (sampler_blur2, polar2_5).xyz * scale2)\n   + bias2), vec3(0.32, 0.49, 0.29)));\n  vec3 tmpvar_66;\n  tmpvar_66 = mix (ret_9, pow ((dots_1 + \n    ((texture (sampler_main, polar2_5).xyz * 12.0) * vec3(clamp ((0.04 / sqrt(\n      dot (uv1_4, uv1_4)\n    )), 0.0, 1.0)))\n  ), vec3(1.75, 1.75, 1.75)).yzx, vec3((1.0 - float(tmpvar_15))));\n  ret_9 = tmpvar_66;\n  vec4 tmpvar_67;\n  tmpvar_67.w = 1.0;\n  tmpvar_67.xyz = tmpvar_66;\n  ret = tmpvar_67.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret.xyz = tex2D( sampler_main, uv ).xyz;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n\n      // take the difference between the crisp and blurred images,\n      // then add it back into the image.  Creates spots and stripes over time.\n      float3 b = GetBlur1(uv)*0.3 + GetBlur2(uv)*0.4 + GetBlur3(uv)*0.3;\n      ret.xyz += (ret.xyz - b)*0.3;\n      ret.xyz *= 0.9;\n\n      // add noise:\n      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 \n             * (saturate(treb_att-1)*0.4+0.3);\n\n      // desaturate over time, to keep the globs white\n      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);\n}","comp_hlsl":"float2 polar, factorA, factorB, product;\n\nsampler sampler_pano_starsmap;\n\nshader_body\n{\n\n\nfloat z = q30;\nfloat d = q31;\nfloat pi = q28;\nfloat pi2inv = q29;\nfloat mask_apex = q32;\nfloat zoom = q27;\n\nfloat2 c = zoom*(uv-0.5)*aspect.xy;\n\nfloat camera_apex = atan2( length(c),z);\n\nbool mask = mask_apex >= camera_apex;\n\nfloat longitude = atan2(c.x,c.y);\nfloat latitude = (pi - camera_apex + asin(d*sin(camera_apex)));\n\nfloat2 polar = float2(longitude,latitude);\n\nfloat3 p = float3( sin(polar.x)*sin(polar.y),cos(polar.x)*sin(polar.y),cos(polar.y));\n\nfactorA = p.zy;\nfactorB = float2(q10,q11);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);\np.zy = product.xy;\n\nfactorA = p.zx;\nfactorB = float2(q22,q23);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);\np.zx = product.xy;\n\nfactorA = p.yx;\nfactorB = float2(q24,q25);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\np.yx = product.xy;\n\npolar = float2(atan2(p.z,p.x),atan2(p.y,length(p.xz)))*pi2inv*float2(1,2)+float2(0,0.5);\n\n//Eo.S's mirror code!\nfloat2 polar2 = 1.0 - abs( frac( polar  ) * 2.0 - 1.0 );\n\nfloat2 uv1 = float2(polar2.x-q6, polar2.y-q5);\n\nfloat2 hor = float2 (texsize.z*1,0);\nfloat2 ver = float2 (0,texsize.w*1);\nfloat dx = GetPixel (polar2-hor) - GetPixel (polar2+hor);\nfloat dy = GetPixel (polar2-ver) - GetPixel (polar2+ver);\nfloat2 dz = float2 (dx,dy);\n\nuv1 = uv1*0+.3*cos(uv1*2) - dz;\nfloat dots = saturate(.04/length(uv1));\nuv1 = uv1*0+.3*cos(uv1*12) - 9*dz;\nfloat3 dots2 = saturate(.04/length(uv1));\ndots -= lum(GetBlur2(polar2));\n\nret = dots + GetPixel(polar2)*12*dots2;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv1.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \n\n//ret = tex2D(sampler_main,polar2);\n\n//ret = lerp(ret,1,mask*tex2d(sampler_pano_earth_clouds,polar)*mid_att*0.5);\n\n\nc = -(uv-0.5)*aspect.xy;\npolar = float2( atan2(c.x,z), atan2(c.y,z));\np = float3( sin(polar.x)*cos(polar.y),sin(polar.y)*cos(polar.x),cos(polar.x)*cos(polar.y));\nfactorA = p.zy;factorB = float2(q10,q11);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);\np.zy = product.xy;factorA = p.zx;factorB = float2(q22,q23);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);\np.zx = product.xy;factorA = p.yx;factorB = float2(q24,q25);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\np.yx = product.xy;polar = float2( atan2(p.x,p.z),atan2(p.y,length(p.xz))*2)*pi2inv + float2(0,0.5);\n\npolar2 = 1.0 - abs( frac( polar  ) * 2.0 - 1.0 );\n\nuv1 = float2(polar2.x-q6, polar2.y-q5);\n\nhor = float2 (texsize.z,0);\nver = float2 (0,texsize.w*1);\ndx = GetPixel (polar2-hor) - GetPixel (polar2+hor);\ndy = GetPixel (polar2-ver) - GetPixel (polar2+ver);\ndz = float2 (dx,dy);\n\nuv1 = uv1*0+.3*cos(uv1*2) - dz;\ndots = saturate(.04/length(uv1));\nuv1 = uv1*0+.3*cos(uv1*12) - 9*dz;\ndots2 = saturate(.04/length(uv1));\ndots -= lum(GetBlur2(polar2));\n\nret = lerp(ret,pow(dots + GetPixel(polar2)*12*dots2,1.75).yzx,(1-mask));\n\n}\n\n"}