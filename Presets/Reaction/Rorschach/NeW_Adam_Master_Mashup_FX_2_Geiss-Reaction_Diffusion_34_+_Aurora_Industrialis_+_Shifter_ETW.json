{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"invert":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.451,"warpscale":3.04,"zoomexp":2.19476,"zoom":1.00971,"warp":0.25579,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":6.4,"mv_y":4.8,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":20,"rad":0.27592,"r":0,"a":0.08,"g2":0,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.x=a.q1;a.y=1-a.q2;","init_eqs_eel":"","frame_eqs_eel":"x = q1;\ny = 1-q2;\n//a2=.05+(below(q1,.5)*.1);\n//sides=10-(below(tan(time),.9)*6);"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":0.59958,"tex_ang":1.25664,"tex_zoom":0.01,"g":1,"a":0,"r2":1,"b2":1,"a2":0.85,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;a.q6=0;a.q7=0;a.flux=0;","frame_eqs_str":"a.x=a.q1;a.y=1-a.q2;a.ang=.785398-50*a.q6-8*a.time;a.rad*=2*Math.max(.2-.1*a.q7,0);a.flux=Math.sin(2.1*a.time);a.flux*=above(a.flux,.95);a.flux=20*(a.flux-.95);a.flux=Math.max(a.flux,0);a.flux=pow(a.flux,1.3);a.rad+=.2*a.flux;","init_eqs_eel":"","frame_eqs_eel":"x = q1;\ny = 1-q2;\nang = .785398 - q6*50 - time*8;\nrad = max(0.2 - q7*.1,0)*2*rad;\n\n\nflux = sin(time*2.1);\nflux = flux*above(flux,0.95);\nflux = (flux-0.95) * 20; //normalize to 0-1;\nflux = max(flux,0);\nflux=pow(flux,1.3);\n\nrad = rad + flux*0.2"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"textured":1,"rad":0.54262,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":1},"init_eqs_str":"a.q1=0;a.q2=0;a.q6=0;a.q7=0;a.flux=0;","frame_eqs_str":"a.x=a.q1;a.y=1-a.q2;a.ang=-.261799-50*a.q6-8*a.time;a.rad*=2*Math.max(.2-.1*a.q7,0);a.flux=Math.sin(2.1*a.time);a.flux*=above(a.flux,.95);a.flux=20*(a.flux-.95);a.flux=Math.max(a.flux,0);a.flux=pow(a.flux,1.3);a.rad+=.2*a.flux;","init_eqs_eel":"","frame_eqs_eel":"x = q1;\ny = 1-q2;\nang = -.261799 - q6*50 - time*8;\nrad = max(0.2 - q7*.1,0)*2*rad;\n\nflux = sin(time*2.1);\nflux = flux*above(flux,0.95);\nflux = (flux-0.95) * 20; //normalize to 0-1;\nflux = max(flux,0);\nflux=pow(flux,1.3);\n\nrad = rad + flux*0.2\n\n\n"},{"baseVals":{"enabled":1,"sides":6,"thickoutline":1,"textured":1,"rad":0.09053,"tex_zoom":0.81954,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;a.q6=0;a.q7=0;a.flux=0;","frame_eqs_str":"a.x=a.q1;a.y=1-a.q2;a.ang=.261799-50*a.q6;a.rad=.7*Math.max(.2-.1*a.q7,0);a.tex_ang=8*a.time;a.flux=Math.sin(2.1*a.time);a.flux*=above(a.flux,.95);a.flux=20*(a.flux-.95);a.flux=Math.max(a.flux,0);a.flux=pow(a.flux,1.3);a.rad+=.2*a.flux;","init_eqs_eel":"","frame_eqs_eel":"x = q1;\ny = 1-q2;\nang = .261799 - q6*50;\nrad = max(0.2 - q7*.1,0)*.7;\n\ntex_ang = time*8;\n\n\nflux = sin(time*2.1);\nflux = flux*above(flux,0.95);\nflux = (flux-0.95) * 20; //normalize to 0-1;\nflux = max(flux,0);\nflux=pow(flux,1.3);\n\nrad = rad + flux*0.2"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"sp = sample*6.283185;\nx = .5 + sin(sp)*.45;\ny = .5 + cos(sp)*.45;\n\ntm = time*.5 + sp;\n\nr = .75 + .25*sin(tm*1.178);\ng = .75 + .25*sin(tm*1.152);\nb = .75 + .25*sin(tm*1.102);\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.283185;\nx = .5 + sin(sp)*.45;\ny = .5 + cos(sp)*.45;\n\ntm = time*.5 + sp;\n\nr = .75 + .25*sin(tm*1.178);\ng = .75 + .25*sin(tm*1.152);\nb = .75 + .25*sin(tm*1.102);\n"},{"baseVals":{"sep":51,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t1=sin(time*0.236)*0.5 + 0.5","point_eqs_str":"it = (it+1)*below(it,5);\nsw = if(equal(it,0),int(rand(2)),sw);\nrx = if(sw,int(rand(1001))*.001,int(rand(2)));\nry = if(sw,int(rand(2)),int(rand(1001))*.001);\n\ntm = time*.5 + sample*2;\n\nvx = if(equal(it,0),rx,vx + sw*.002);\nvy = if(equal(it,0),ry,vy +(1-sw)*.002);\n\nx = vx;\ny = vy;\n\ntm= 1.11 + sample + t1*2;\n\nflux=sin(time)*0.5;\nfluy=cos(time)*0.5;\n\nxfade = max(-abs(x-0.5 + flux) + 1 , 0);\nxfade2= max(-abs(y-0.5 + fluy) + 1 , 0);\nxfade = (xfade2+xfade)*0.5;\n\n\nr1 = .5 + .5*sin(tm + 0.0);\ng1 = .5 + .5*sin(tm + 2.1);\nb1 = .5 + .5*sin(tm + 4.2);\n\nr=r1*xfade + g1*(1-xfade);\ng=g1*xfade + b1*(1-xfade);\nb=b1*xfade + r1*(1-xfade);\n\n\n//r=xfade;g=xfade;b=xfade;\n\n","init_eqs_eel":"","frame_eqs_eel":"t1=sin(time*0.236)*0.5 + 0.5","point_eqs_eel":"it = (it+1)*below(it,5);\nsw = if(equal(it,0),int(rand(2)),sw);\nrx = if(sw,int(rand(1001))*.001,int(rand(2)));\nry = if(sw,int(rand(2)),int(rand(1001))*.001);\n\ntm = time*.5 + sample*2;\n\nvx = if(equal(it,0),rx,vx + sw*.002);\nvy = if(equal(it,0),ry,vy +(1-sw)*.002);\n\nx = vx;\ny = vy;\n\ntm= 1.11 + sample + t1*2;\n\nflux=sin(time)*0.5;\nfluy=cos(time)*0.5;\n\nxfade = max(-abs(x-0.5 + flux) + 1 , 0);\nxfade2= max(-abs(y-0.5 + fluy) + 1 , 0);\nxfade = (xfade2+xfade)*0.5;\n\n\nr1 = .5 + .5*sin(tm + 0.0);\ng1 = .5 + .5*sin(tm + 2.1);\nb1 = .5 + .5*sin(tm + 4.2);\n\nr=r1*xfade + g1*(1-xfade);\ng=g1*xfade + b1*(1-xfade);\nb=b1*xfade + r1*(1-xfade);\n\n\n//r=xfade;g=xfade;b=xfade;\n\n"},{"baseVals":{"enabled":1,"sep":51,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_str":"a.sw=0;a.t1=0;a.it=0;a.r1=0;a.fluy=0;a.vx=0;a.flux=0;a.vy=0;a.ry=0;a.xfade2=0;a.xfade=0;a.rx=0;a.tm=0;a.g1=0;a.b1=0;","frame_eqs_str":"a.t1=.5*Math.sin(.236*a.time)+.5;","point_eqs_str":"a.it=(a.it+1)*below(a.it,25);a.sw=.00001<Math.abs(equal(a.it,0))?Math.floor(rand(2)):a.sw;a.rx=.00001<Math.abs(a.sw)?.001*Math.floor(rand(1001)):Math.floor(rand(2));a.ry=.00001<Math.abs(a.sw)?Math.floor(rand(2)):.001*Math.floor(rand(1001));a.tm=.5*a.time+2*a.sample;a.vx=.00001<Math.abs(equal(a.it,0))?a.rx:a.vx+.002*a.sw;a.vy=.00001<Math.abs(equal(a.it,0))?a.ry:a.vy+.002*(1-a.sw);a.x=a.vx;a.y=a.vy;a.tm=1.11+a.sample+2*a.t1;a.flux=.5*Math.sin(a.time);a.fluy=.5*Math.cos(a.time);\na.xfade=Math.max(-Math.abs(a.x-.5+a.flux)+1,0);a.xfade2=Math.max(-Math.abs(a.y-.5+a.fluy)+1,0);a.xfade=.5*(a.xfade2+a.xfade);a.r1=.5+.5*Math.sin(a.tm+0);a.g1=.5+.5*Math.sin(a.tm+2.1);a.b1=.5+.5*Math.sin(a.tm+4.2);a.r=a.r1*a.xfade+a.g1*(1-a.xfade);a.g=a.g1*a.xfade+a.b1*(1-a.xfade);a.b=a.b1*a.xfade+a.r1*(1-a.xfade);","init_eqs_eel":"","frame_eqs_eel":"t1=sin(time*0.236)*0.5 + 0.5","point_eqs_eel":"it = (it+1)*below(it,25);\nsw = if(equal(it,0),int(rand(2)),sw);\nrx = if(sw,int(rand(1001))*.001,int(rand(2)));\nry = if(sw,int(rand(2)),int(rand(1001))*.001);\n\ntm = time*.5 + sample*2;\n\nvx = if(equal(it,0),rx,vx + sw*.002);\nvy = if(equal(it,0),ry,vy +(1-sw)*.002);\n\nx = vx;\ny = vy;\n\ntm= 1.11 + sample + t1*2.0;\n\nflux=sin(time)*0.5;\nfluy=cos(time)*0.5;\n\nxfade = max(-abs(x-0.5 + flux) + 1 , 0);\nxfade2= max(-abs(y-0.5 + fluy) + 1 , 0);\nxfade = (xfade2+xfade)*0.5;\n\n\nr1 = .5 + .5*sin(tm + 0.0);\ng1 = .5 + .5*sin(tm + 2.1);\nb1 = .5 + .5*sin(tm + 4.2);\n\nr=r1*xfade + g1*(1-xfade);\ng=g1*xfade + b1*(1-xfade);\nb=b1*xfade + r1*(1-xfade);"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tic = min(time-tir,.1);\ntir = time;\nt2 = tic;","point_eqs_str":"sam = int(rand(1001))*.001;\nsam = sample;\nit = (it+1)*above(sam,0);\nset = int(sam*6);\nsp = sam*6 - int(sam*6) + equal(it,511);\noff = .866025403;\n\nmx = equal(set,0)*(-.5 + sp) + equal(set,1)*(.5 + .5*sp) + equal(set,2)*(1-.5*sp) + equal(set,3)*(.5-sp) + equal(set,4)*(-.5 - sp*.5) + above(set,4)*(-1 + sp*.5);\nmy = equal(set,0)*off + equal(set,1)*(1-sp)*off + equal(set,2)*-sp*off + equal(set,3)*-off + equal(set,4)*(-off + sp*off) + above(set,4)*(sp*off);\n\nzang = q6*50;\nox = mx*cos(zang) - my*sin(zang);\noy = mx*sin(zang) + my*cos(zang);\nmx = ox;\nmy = oy;\n\nrad = max(0.2 - q7*.1,0)*.5;\nvol = max(1-(value1+value2)*.2,0.5);\nrad = if(equal(it%2,0),rad*vol,rad);\na = max(-.9 + vol,0);\n\nx = mx*rad;\ny = my*rad;\n\nx = x*.75 + q1;\ny = y + (1-q2);","init_eqs_eel":"","frame_eqs_eel":"tic = min(time-tir,.1);\ntir = time;\nt2 = tic;","point_eqs_eel":"sam = int(rand(1001))*.001;\nsam = sample;\nit = (it+1)*above(sam,0);\nset = int(sam*6);\nsp = sam*6 - int(sam*6) + equal(it,511);\noff = .866025403;\n\nmx = equal(set,0)*(-.5 + sp) + equal(set,1)*(.5 + .5*sp) + equal(set,2)*(1-.5*sp) + equal(set,3)*(.5-sp) + equal(set,4)*(-.5 - sp*.5) + above(set,4)*(-1 + sp*.5);\nmy = equal(set,0)*off + equal(set,1)*(1-sp)*off + equal(set,2)*-sp*off + equal(set,3)*-off + equal(set,4)*(-off + sp*off) + above(set,4)*(sp*off);\n\nzang = q6*50;\nox = mx*cos(zang) - my*sin(zang);\noy = mx*sin(zang) + my*cos(zang);\nmx = ox;\nmy = oy;\n\nrad = max(0.2 - q7*.1,0)*.5;\nvol = max(1-(value1+value2)*.2,0.5);\nrad = if(equal(it%2,0),rad*vol,rad);\na = max(-.9 + vol,0);\n\nx = mx*rad;\ny = my*rad;\n\nx = x*.75 + q1;\ny = y + (1-q2);"}],"init_eqs_str":"a.q4=0;a.q5=0;","frame_eqs_str":"a.wave_r+=.35*(.6*Math.sin(.98*a.time)+.4*Math.sin(1.047*a.time));a.wave_g+=.35*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.wave_b+=.35*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.cx+=.11*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.11*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.decay-=.01*equal(mod(a.frame,20),0);a.zoom+=.3*(.01*Math.cos(.317*a.time+1)+.01*Math.cos(.1132*a.time+4));a.rot+=.5*(.01*Math.cos(.214*a.time+3)+.01*Math.cos(.2732*\na.time+2));a.wave_mystery=.05*a.time;a.q4=Math.cos(6.2831854*a.wave_mystery);a.q5=Math.sin(6.2831854*a.wave_mystery);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\ndecay = decay - 0.01*equal(frame%20,0);\n//zoom = 1;\n//warp = 0;\nzoom = zoom + 0.3*(0.01*cos(time*0.317+1) + 0.01*cos(time*0.1132+4));\nrot  = rot  + 0.5*(0.01*cos(time*0.214+3) + 0.01*cos(time*0.2732+2));\nwave_mystery = time*0.05;\nq4 = cos(wave_mystery*3.1415927*2);\nq5 = sin(wave_mystery*3.1415927*2);\n//zoom = zoom + (max(1, bass_att)-1)*0.01;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + ((ret_1 - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 122.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv2_3.x = ((uv_1.x * -0.497265) - (uv_1.y * 0.8675987));\n  uv2_3.y = ((uv_1.x * 0.8675987) + (uv_1.y * -0.497265));\n  uv3_2.x = ((uv_1.x * -0.5000263) - (uv_1.y * -0.8660102));\n  uv3_2.y = ((uv_1.x * -0.8660102) + (uv_1.y * -0.5000263));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = max (max (texture (sampler_main, (uv_1 + 0.5)).xyz, texture (sampler_main, (uv2_3 + 0.5)).xyz), texture (sampler_main, (uv3_2 + 0.5)).xyz);\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret.xyz = tex2D( sampler_main, uv ).xyz;\n\n      // take the difference between the crisp and blurred images,\n      // then add it back into the image.  Creates spots and stripes over time.\n      ret.xyz += (ret.xyz - GetBlur2(uv))*0.3;\n      ret.xyz *= 0.9;\n\n      // add noise:\n      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 * saturate(treb_att-1);\n\n      // desaturate over time, to keep the globs white\n      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);\n}","comp_hlsl":"shader_body\n{\n    float2 uv2, uv3;\n    float ang2, c, s;\n\n    uv -= 0.5;\n    uv *= aspect.xy;    \n\n    ang2 = 6.28*0.333;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    ang2 = 6.28*0.667;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv3.x =  uv.x*c - uv.y*s;\n    uv3.y =  uv.x*s + uv.y*c;\n\n    ret = tex2D(sampler_main, uv + 0.5).xyz;\n    ret = max(ret, tex2D(sampler_main,uv2 + 0.5).xyz);\n    ret = max(ret, tex2D(sampler_main,uv3 + 0.5).xyz);\n\n    //ret *= 1.3; // a little bit of overbright\n}\n\n"}