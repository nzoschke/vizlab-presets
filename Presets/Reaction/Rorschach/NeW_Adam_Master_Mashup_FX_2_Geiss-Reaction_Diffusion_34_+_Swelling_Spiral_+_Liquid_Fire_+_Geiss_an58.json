{"version":2,"baseVals":{"rating":5,"gammaadj":1.998,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"wave_brighten":0,"wave_a":0.005,"wave_scale":0.167,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":1.331,"zoom":1.00796,"rot":0.02,"warp":0.00016,"sx":0.99967,"sy":0.9999,"wave_x":0.95,"wave_y":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":34,"thickoutline":1,"textured":1,"x":0.75,"rad":0.30478,"tex_ang":1.5708,"tex_zoom":0.82773,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"vx = 0;\nvy = 0;","frame_eqs_str":"rad = .3;\ntex_zoom = .28;\ntex_zoom = 1/rad*tex_zoom;\n\nx = .5 + sin(time*.957)*.1;","init_eqs_eel":"vx = 0;\nvy = 0;","frame_eqs_eel":"rad = .3;\ntex_zoom = .28;\ntex_zoom = 1/rad*tex_zoom;\n\nx = .5 + sin(time*.957)*.1;"},{"baseVals":{"sides":74,"thickoutline":1,"textured":1,"x":0.25,"rad":0.45378,"tex_zoom":0.5033,"g":1,"b":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rad = .3;\ntex_zoom = .3;\ntex_zoom = 1/rad*tex_zoom;\n\nx = .5 + sin(time)*.15;","init_eqs_eel":"","frame_eqs_eel":"rad = .3;\ntex_zoom = .3;\ntex_zoom = 1/rad*tex_zoom;\n\nx = .5 + sin(time)*.15;"},{"baseVals":{"enabled":1,"sides":84,"additive":1,"thickoutline":1,"rad":0.16777,"tex_zoom":0.5033,"r":0,"b":0.2,"a":0.6,"g2":0,"border_a":0},"init_eqs_str":"a.ti=0;a.vx=0;a.vy=0;","frame_eqs_str":"a.ti=.3*a.time;a.x=.5+.34*Math.sin(a.ti);a.y=.5+.34*Math.cos(a.ti);a.rad+=a.bass;a.ti=2.3*a.time;a.x+=.1*Math.sin(a.ti);a.y+=.1*Math.cos(a.ti);","init_eqs_eel":"vx = 0;\nvy = 0;","frame_eqs_eel":"ti = time*.3;\nx = .5 + .34*sin(ti);\ny = .5 + .34*cos(ti);\n\nrad = rad + bass;\n\nti = time*2.3;\nx = x + .1*sin(ti);\ny = y + .1*cos(ti);"},{"baseVals":{"sides":74,"additive":1,"rad":0.16777,"r2":1,"g2":0,"a2":1,"border_b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ti = -time*.3;\nx = .5 + .3*sin(ti);\ny = .5 + .3*cos(ti);\n\nti = -time*2.3;\nx = x + .2*sin(ti);\ny = y + .2*cos(ti);","init_eqs_eel":"","frame_eqs_eel":"ti = -time*.3;\nx = .5 + .3*sin(ti);\ny = .5 + .3*cos(ti);\n\nti = -time*2.3;\nx = x + .2*sin(ti);\ny = y + .2*cos(ti);"}],"waves":[{"baseVals":{"enabled":1,"samples":41,"usedots":1,"additive":1,"scaling":0.01,"smoothing":0,"g":0},"init_eqs_str":"a.t8=1;a.t1=a.q5;","frame_eqs_str":"","point_eqs_str":"a.x=.001*rand(1001);a.y=.001*rand(1001);a.g=.5*above(.001*rand(1001),.9);a.b=0;a.r=0;","init_eqs_eel":"t8 = 1;\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\ny = rand(1001)*.001;\n\n//r = rand(1001)*.001;\ng=above(rand(1001)*.001,.9)*.5;\nb = 0;\nr = 0;\n"},{"baseVals":{"samples":61,"additive":1,"scaling":0.0124,"smoothing":0,"b":0,"enabled":0},"init_eqs_str":"t8 = 1;\nt1 = q5;","frame_eqs_str":"","point_eqs_str":"x = (sample-.5)*.02 + .2;\ny = .5;\nr = 1;\ng = 1;\nb = 1;","init_eqs_eel":"t8 = 1;\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = (sample-.5)*.02 + .2;\ny = .5;\nr = 1;\ng = 1;\nb = 1;"},{"baseVals":{"samples":31,"usedots":1,"thick":1,"scaling":0.01303,"smoothing":0,"enabled":0},"init_eqs_str":"t8 = 1;\nt1 = q5;","frame_eqs_str":"t1 = q5;\nt2 = q4;\nt3 = q6;","point_eqs_str":"t8 = -t8;\nd1 = 0.15 + t8*0.01 - value1*0.1*(t8+1);\ndir1 = t2;\ndir2 = t2*0.5 + t1*3/2 - t3*3;\ndir3 = sample*asin(1)*4 + t3 - t2*5/6 + t1*3/2;\n\nx = 0.5 + sin(dir1)*0.1 + sin(dir2)*0.05 + sin(dir3)*d1;\ny = 0.5 + cos(dir1)*0.1 + cos(dir2)*0.05 + cos(dir3)*d1;\ny = (y-0.5)*1.2 + 0.5;","init_eqs_eel":"t8 = 1;\nt1 = q5;","frame_eqs_eel":"t1 = q5;\nt2 = q4;\nt3 = q6;","point_eqs_eel":"t8 = -t8;\nd1 = 0.15 + t8*0.01 - value1*0.1*(t8+1);\ndir1 = t2;\ndir2 = t2*0.5 + t1*3/2 - t3*3;\ndir3 = sample*asin(1)*4 + t3 - t2*5/6 + t1*3/2;\n\nx = 0.5 + sin(dir1)*0.1 + sin(dir2)*0.05 + sin(dir3)*d1;\ny = 0.5 + cos(dir1)*0.1 + cos(dir2)*0.05 + cos(dir3)*d1;\ny = (y-0.5)*1.2 + 0.5;"},{"baseVals":{"samples":511,"sep":4,"thick":1,"additive":1,"scaling":0.02345,"smoothing":0,"a":0.99,"enabled":0},"init_eqs_str":"t2 = 0;\nt3 = 0;\nt4 = 0;\nab = 1;","frame_eqs_str":"t1 = q4*0.75;\nt2 = q5*0.75;\nt3 = q6*0.75;\nt4 = q4*0.75;\nt5 = q5*0.75;\nt6 = q6*0.75;\nt8 = 1;","point_eqs_str":"\npi = asin(1);\nn = 80;\nt8 = -t8;\nrd = 0.075+0.02*(t8+1)/2;\nxx = sin(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\nyy = cos(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\nzz = sin(sample*pi*n)*rd;\n\nd = sqrt( xx*xx + yy*yy + zz*zz)*0.004;\nd1 = 1;\nxx = xx*d1;\nyy = yy*d1;\nzz = zz*d1;\n\n\n\n\nw1 = d*t4;\nw2 = d*t5;\nw3 = d*t6;\n\ns1 = sin(t1*1+w1);\ns2 = sin(t2*1+w2);\ns3 = sin(t3*1+w3);\nc1 = cos(t1*1+w1);\nc2 = cos(t2*1+w2);\nc3 = cos(t3*1+w3);\n\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\n\na = 0.5;\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\nx = 0.5 + zoom*x1;\ny = 0.5 + zoom*y1;\n\npi3 = 3.1415*2*0.3333;\nt = -z*2 - time*0.8;//sample*pi*4-0*time +t4*3;\nc=2;\nr = sin(t)*c;\n\ng = sin(t+pi3)*c;\n\nb = sin(t-pi3)*c;\n\nj = 0.71;\n//r = 0.5+xx*j;\n//g = 0.5+yy*j;\n//b = 0.5+zz*j;\n\nr = if(above(r,1),1,r);\nr = if(below(r,0),0,r);\ng = if(above(g,1),1,g);\ng = if(below(g,0),0,g);\nb = if(above(b,1),1,b);\nb = if(below(b,0),0,b);\n\na = sigmoid(-z,7)+0.;\n","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\nab = 1;","frame_eqs_eel":"t1 = q4*0.75;\nt2 = q5*0.75;\nt3 = q6*0.75;\nt4 = q4*0.75;\nt5 = q5*0.75;\nt6 = q6*0.75;\nt8 = 1;","point_eqs_eel":"\npi = asin(1);\nn = 80;\nt8 = -t8;\nrd = 0.075+0.02*(t8+1)/2;\nxx = sin(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\nyy = cos(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\nzz = sin(sample*pi*n)*rd;\n\nd = sqrt( xx*xx + yy*yy + zz*zz)*0.004;\nd1 = 1;\nxx = xx*d1;\nyy = yy*d1;\nzz = zz*d1;\n\n\n\n\nw1 = d*t4;\nw2 = d*t5;\nw3 = d*t6;\n\ns1 = sin(t1*1+w1);\ns2 = sin(t2*1+w2);\ns3 = sin(t3*1+w3);\nc1 = cos(t1*1+w1);\nc2 = cos(t2*1+w2);\nc3 = cos(t3*1+w3);\n\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\n\na = 0.5;\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\nx = 0.5 + zoom*x1;\ny = 0.5 + zoom*y1;\n\npi3 = 3.1415*2*0.3333;\nt = -z*2 - time*0.8;//sample*pi*4-0*time +t4*3;\nc=2;\nr = sin(t)*c;\n\ng = sin(t+pi3)*c;\n\nb = sin(t-pi3)*c;\n\nj = 0.71;\n//r = 0.5+xx*j;\n//g = 0.5+yy*j;\n//b = 0.5+zz*j;\n\nr = if(above(r,1),1,r);\nr = if(below(r,0),0,r);\ng = if(above(g,1),1,g);\ng = if(below(g,0),0,g);\nb = if(above(b,1),1,b);\nb = if(below(b,0),0,b);\n\na = sigmoid(-z,7)+0.;\n"}],"init_eqs_str":"a.du=0;a.q1=0;a.mult=0;a.ang2=0;a.dv=0;a.q4=0;a.q2=0;a.dist=0;a.q3=0;","frame_eqs_str":"a.wave_r+=.35*(.6*Math.sin(.98*a.time)+.4*Math.sin(1.047*a.time));a.wave_g+=.35*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.wave_b+=.35*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.q1=2*a.cx-1+.32*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.q2=2*a.cy-1+.52*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.q3=2*a.cx-1+.32*(.6*Math.sin(.174*-a.time)+.4*Math.sin(.364*a.time));a.q4=2*a.cy-1+.52*(.6*Math.sin(.234*a.time)+.4*Math.sin(.271*-a.time));\na.decay-=.01*equal(mod(a.frame,5),0);","pixel_eqs_str":"a.du=2*a.x-1-a.q1;a.dv=2*a.y-1-a.q2;a.dist=sqrt(a.du*a.du+a.dv*a.dv);a.ang2=Math.atan2(a.du,a.dv);a.mult=div(.012,a.dist+.4);a.dx=a.mult*Math.sin(a.ang2-1.5);a.dy=a.mult*Math.cos(a.ang2-1.5);a.du=2*a.x-1-a.q3;a.dv=2*a.y-1-a.q4;a.dist=sqrt(a.du*a.du+a.dv*a.dv);a.ang2=Math.atan2(a.du,a.dv);a.mult=div(.012,a.dist+.4);a.dx+=a.mult*Math.sin(a.ang2+1.5);a.dy+=a.mult*Math.cos(a.ang2+1.5);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\nq1 = (cx*2-1) + 0.32*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\nq2 = (cy*2-1) + 0.52*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\nq3 = (cx*2-1) + 0.32*( 0.60*sin(0.174*-time) + 0.40*sin(0.364*time) );\nq4 = (cy*2-1) + 0.52*( 0.60*sin(0.234*time) + 0.40*sin(0.271*-time) );\ndecay = decay - 0.01*equal(frame%5,0);","pixel_eqs_eel":"du = x*2-1 - q1;\ndv = y*2-1 - q2;\ndist = sqrt(du*du+dv*dv);\nang2 = atan2(du,dv);\nmult = 0.012/(dist+0.4);\ndx = mult*sin(ang2-1.5);\ndy = mult*cos(ang2-1.5);\ndu = x*2-1 - q3;\ndv = y*2-1 - q4;\ndist = sqrt(du*du+dv*dv);\nang2 = atan2(du,dv);\nmult = 0.012/(dist+0.4);\ndx = dx + mult*sin(ang2+1.5);\ndy = dy + mult*cos(ang2+1.5);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) * 0.2));\n  ret_1 = (ret_1 - 0.02);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv2_3.x = ((uv_1.x * -0.497265) - (uv_1.y * 0.8675987));\n  uv2_3.y = ((uv_1.x * 0.8675987) + (uv_1.y * -0.497265));\n  uv3_2.x = ((uv_1.x * -0.5000263) - (uv_1.y * -0.8660102));\n  uv3_2.y = ((uv_1.x * -0.8660102) + (uv_1.y * -0.5000263));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = max (max (texture (sampler_main, (uv_1 + 0.5)).xyz, texture (sampler_main, (uv2_3 + 0.5)).xyz), texture (sampler_main, (uv3_2 + 0.5)).xyz);\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // PAINTERLY EFFECT:\n    float2 uv2 = uv;\n    const float mipbias = 0;\n    float2 delta2 = texsize.zw*float2(1,1);\n    float3 blurry_color = tex2D( sampler_main, uv2 + delta2 ).xyz;\n    //uv2.xy += (blurry_color.xy-0.37) * 0.005;\n\n  \n    // sample previous frame\n    ret = tex2D( sampler_main, uv2 ).xyz;\n\n    ret += (ret - GetBlur1(uv2))*0.2;\n\n    // darken over time\n    ret -= 0.02;    \n}","comp_hlsl":"shader_body\n{\n    float2 uv2, uv3;\n    float ang2, c, s;\n\n    uv -= 0.5;\n    uv *= aspect.xy;    \n\n    ang2 = 6.28*0.333;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    ang2 = 6.28*0.667;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv3.x =  uv.x*c - uv.y*s;\n    uv3.y =  uv.x*s + uv.y*c;\n\n    ret = tex2D(sampler_main, uv + 0.5).xyz;\n    ret = max(ret, tex2D(sampler_main,uv2 + 0.5).xyz);\n    ret = max(ret, tex2D(sampler_main,uv3 + 0.5).xyz);\n\n    //ret *= 1.3; // a little bit of overbright\n}\n\n"}