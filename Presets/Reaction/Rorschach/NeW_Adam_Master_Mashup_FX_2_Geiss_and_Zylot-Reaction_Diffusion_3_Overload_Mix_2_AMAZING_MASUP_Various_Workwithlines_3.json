{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":4.1,"wave_scale":2.85,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"wave_g":0,"wave_b":0,"mv_x":12.8,"mv_y":38.4,"mv_l":0.8,"mv_r":0.44,"mv_g":0.65,"mv_b":0.81,"mv_a":0},"shapes":[{"baseVals":{"sides":23,"additive":1,"textured":1,"y":0.7,"rad":0.15493,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"y=bass_att*0.5+0.2;\nx=cos(time*2)*0.5+0.5;","init_eqs_eel":"","frame_eqs_eel":"y=bass_att*0.5+0.2;\nx=cos(time*2)*0.5+0.5;"},{"baseVals":{"textured":1,"rad":1.802,"tex_ang":3.14159,"tex_zoom":0.57268,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//ang = ang + (bass*.2) + (time*.4);\n//rad=1.781+(bass*0.025);\nang=above(0.5,treb_att)*.063;","init_eqs_eel":"","frame_eqs_eel":"//ang = ang + (bass*.2) + (time*.4);\n//rad=1.781+(bass*0.025);\nang=above(0.5,treb_att)*.063;"},{"baseVals":{"sides":100,"additive":1,"textured":1,"x":0.9,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = sin(time*5) * .4 + .5;\ny=treb_att*0.5;\n\npow( (bass*.15),2);","init_eqs_eel":"","frame_eqs_eel":"x = sin(time*5) * .4 + .5;\ny=treb_att*0.5;\n\npow( (bass*.15),2);"},{"baseVals":{"sides":100,"textured":1,"rad":0.033,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=.5+(bass*0.07);","init_eqs_eel":"","frame_eqs_eel":"x=.5+(bass*0.07);"}],"waves":[{"baseVals":{"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"basstime=basstime+(bass*bass);\nt1=basstime*0.003;\n","point_eqs_str":"//plot x,y,z to point on circle\nsmp=sample*6.283;\nxp=sin(smp )*0.35;\nyp=cos(smp )*0.35;\nzp=0;\n\n\n//alter shape;\nangy=sin(sample*6.28*4 +t1 )*6.28;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n\n//rotate on y axis;\nangy=t1*0.1;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n//rotate on x axis\naxs1 = sin(t1*0.15) + 1.6;\nyq= yp*cos(axs1) - zp*sin(axs1);\nzq= yp*sin(axs1) + zp*cos(axs1);\nyp=yq;\nzp=zq;\n\n//rotate on y axis again\naxs2 = sin(t1*0.1)*3.3;\nxq=xp*cos(axs2) - zp*sin(axs2);\nzq=xp*sin(axs2) + zp*cos(axs2);\nxp=xq;\nzp=zq;\n\n//stretch y axis to compensate for aspect ratio\nyp=yp*1.2;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5+q4;\ny=ys+0.5+q5;\n\nr=1-q1;\ng=1-q2;\nb=1-q3;","init_eqs_eel":"","frame_eqs_eel":"basstime=basstime+(bass*bass);\nt1=basstime*0.003;\n","point_eqs_eel":"//plot x,y,z to point on circle\nsmp=sample*6.283;\nxp=sin(smp )*0.35;\nyp=cos(smp )*0.35;\nzp=0;\n\n\n//alter shape;\nangy=sin(sample*6.28*4 +t1 )*6.28;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n\n//rotate on y axis;\nangy=t1*0.1;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n//rotate on x axis\naxs1 = sin(t1*0.15) + 1.6;\nyq= yp*cos(axs1) - zp*sin(axs1);\nzq= yp*sin(axs1) + zp*cos(axs1);\nyp=yq;\nzp=zq;\n\n//rotate on y axis again\naxs2 = sin(t1*0.1)*3.3;\nxq=xp*cos(axs2) - zp*sin(axs2);\nzq=xp*sin(axs2) + zp*cos(axs2);\nxp=xq;\nzp=zq;\n\n//stretch y axis to compensate for aspect ratio\nyp=yp*1.2;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5+q4;\ny=ys+0.5+q5;\n\nr=1-q1;\ng=1-q2;\nb=1-q3;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.warp=0;a.wave_r=a.wave_r+.4*Math.sin(.333*a.time)+.2*a.bass_att;a.wave_g=a.wave_g+.4*Math.sin(.555*a.time)+.2*a.treb_att;a.wave_b=a.wave_b+.4*Math.sin(.444*a.time)+.2*a.mid_att;a.q1=.3*a.bass*Math.sin(a.time);a.q2=.3*a.bass*Math.sin(.3344556*a.time);","pixel_eqs_str":"a.dy+=.05*a.y;a.dx=.02*a.bass*Math.sin(a.y*a.mid*15*a.treb*(a.y+1+.5*Math.sin(a.time))*2)*a.y;","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\nwave_r = wave_r + .4*sin(time*.333)+bass_att*.2;\nwave_g = wave_g + .4*sin(time*.555)+treb_att*.2;\nwave_b = wave_b + .4*sin(time*.444)+mid_att*.2;\nq1 = (bass*.3)*sin(time);\nq2 = (bass*.3)*sin(time*.3344556);","pixel_eqs_eel":"dy = dy+(y*.05);\ndx = bass*((.02*sin(y*mid*(15*treb*(y+1+.5*(sin(time)))*2)))*y);","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + ((\n    (ret_1 - mix (((texture (sampler_blur2, uv).xyz * scale2) + bias2), ((texture (sampler_blur1, uv).xyz * scale1) + bias1), uv_orig.xxx))\n   * 0.3) - (0.00666 * \n    (((bass + treb) + mid) - 0.5)\n  )));\n  ret_1 = (ret_1 * 0.95);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 122.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = rad;\n  tmpvar_2.y = (ang / 6.28);\n  ret_1 = (texture (sampler_main, tmpvar_2).xyz + ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1));\n  ret_1 = (ret_1 * vec3(1.04, 0.64, 0.4));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret.xyz = tex2D( sampler_main, uv ).xyz;\n\n      // take the difference between the crisp and blurred images,\n      // then add it back into the image.  Creates spots and stripes over time.\n      float3 b = lerp(GetBlur2(uv),GetBlur1(uv),uv_orig.x);//GetBlur2(uv);\n      ret.xyz += (ret.xyz - b)*0.3 - (((bass+treb+mid-0.5)*.333)*.02);\n      ret.xyz *= 0.95;\n\n      // add noise:\n      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 * saturate(treb_att-1);\n\n      // desaturate over time, to keep the globs white\n      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);\n}","comp_hlsl":"shader_body\n{\n    //uv = lerp(uv, float2(rad,uv.x), roam_cos.x);\n    //uv = lerp(uv, float2(uv.y,rad), roam_cos.y);\n    uv = float2(rad,ang/6.28);\n\n    ret = tex2D(sampler_main, uv).xyz;\n    ret += GetBlur1(uv);\n    ret *= float3(1.3,0.8,0.5)*0.8;    \n}"}