{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_mode":5,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"darken":1,"wave_a":1.136,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":5.42874,"zoom":1.00951,"warp":0.16217,"wave_r":0,"wave_g":0,"wave_b":0,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"num_inst":92,"x":0.8,"rad":0.1979,"ang":1.5708,"tex_ang":1.25664,"tex_zoom":3.07268,"g":1,"b":1,"g2":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.xang=0;a.ampl=0;a.fov=0;a.t1=0;a.yang=0;a.my=0;a.oz=0;a.k1=0;a.t_rel=0;a.k2=0;a.mz=0;a.oy=0;a.mx=0;a.zang=0;a.sample=0;a.t_abs=0;a.ox=0;","frame_eqs_str":"a.t1=a.time-Math.floor(a.time);a.sample=div(a.instance,a.num_inst);a.t_abs=3*a.sample;a.t_rel=a.sample-div(a.time,5);a.ampl=div(2*a.t_abs,2);a.k1=Math.sin(div(a.time,13));a.k2=Math.sin(div(a.time,12));a.ox=a.ampl*Math.sin(a.t_abs*(31+5*a.k1))+Math.sin(div(a.time,25))*(1-a.t_abs)*.4;a.oy=a.ampl*Math.cos(a.t_abs*(31+5*a.k2));a.oz=-1;a.r=sqr(Math.sin(3.4*a.t_rel));a.g=sqr(Math.sin(a.t_rel));a.b=sqr(Math.cos(1.8*a.t_rel));a.xang=div(a.time,9.5);a.yang=div(0*a.time,7);a.zang=div(-a.time,\n22);a.fov=.5;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz-=6;a.x=div(a.ox*a.fov,a.oz)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;a.sides=Math.floor(rand(100));a.ang=div(Math.floor(rand(628)),100);a.a=\ndiv(Math.floor(rand(1E3)),1E3);a.rad=div(Math.floor(rand(1E3)),4E3);","init_eqs_eel":"","frame_eqs_eel":"t1 = time - int (time);\nsample = instance/num_inst;\nt_abs = sample*3;\nt_rel = sample-time/5;\n\nampl = 2*t_abs/2 ;\n\nk1=sin(time/13);\nk2=sin(time/12);\nox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;\noy = ampl*cos (t_abs*(31+5*k2));\noz = -1  ;\n\n\nr = sqr(sin(t_rel*3.4));\ng = sqr(sin(t_rel));\nb = sqr (cos(t_rel*1.8));\n\n//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;\n\nxang = time/9.5;\nyang = 0*time/7;\nzang = -time/22;\nfov = 0.5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\nsides=int(rand(100));\nang=int(rand(628))/100;\na=int(rand(1000))/1000;\nrad=int(rand(1000))/4000;"},{"baseVals":{"sides":63,"textured":1,"rad":1.99863,"tex_zoom":0.49981,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"t1 = time - int (time);","point_eqs_str":"\nt_abs = sample*3;\nt_rel = sample-time/5;\n\nampl = 2*t_abs/2 ;\n\nk1=sin(time/13);\nk2=sin(time/12);\nox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;\noy = ampl*cos (t_abs*(31+5*k2));\noz = -1  ;\n\n\nr = sqr(sin(t_rel*3.4));\ng = sqr(sin(t_rel));\nb = sqr (cos(t_rel*1.8));\n\na=0.1*(sin(t_abs*3)) \n  + 0.6*q3*below (abs(1-t_abs-t1 ),0.3);\n\nxang = time/9.5;\nyang = 0*time/7;\nzang = -time/22;\nfov = 0.5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"t1 = time - int (time);","point_eqs_eel":"\nt_abs = sample*3;\nt_rel = sample-time/5;\n\nampl = 2*t_abs/2 ;\n\nk1=sin(time/13);\nk2=sin(time/12);\nox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;\noy = ampl*cos (t_abs*(31+5*k2));\noz = -1  ;\n\n\nr = sqr(sin(t_rel*3.4));\ng = sqr(sin(t_rel));\nb = sqr (cos(t_rel*1.8));\n\na=0.1*(sin(t_abs*3)) \n  + 0.6*q3*below (abs(1-t_abs-t1 ),0.3);\n\nxang = time/9.5;\nyang = 0*time/7;\nzang = -time/22;\nfov = 0.5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_str":"ang = 0;\nlen = t4;\nmad = .6;\n\nit = if(above(sample,0),(it+equal(lev,7)),1);\nita = (ita + 1)*above(sample,0);\n\nmod = if(equal(it%2,0),1,  if(equal((it+1)%4,0),2,  if(equal((it+3)%8,0),3,  if(equal((it+7)%16,0),4,  if(equal((it+15)%32,0),5,  if(equal((it+31)%64,0),6,  if(equal((it+63)%128,0),7,7)  ))))));\n\nsw = sw - 1;\nsw = if(equal(lev,7),mod,sw)*above(sample,0);\n\nlev = if(above(sample,0),if(above(sw,0),lev-1,lev+1),7);\na = lev*.1*1.46;\n\nar = if(above(sample,0),ar,1);\nar = if(equal(lev,0),ar*-1,ar);\nbr = if(above(sample,0),br,1);\nbr = if(equal(lev,1),br*-1,br);\ncr = if(above(sample,0),cr,1);\ncr = if(equal(lev,2),cr*-1,cr);\ndr = if(above(sample,0),dr,1);\ndr = if(equal(lev,3),dr*-1,dr);\ner = if(above(sample,0),er,1);\ner = if(equal(lev,4),er*-1,er);\nfr = if(above(sample,0),fr,1);\nfr = if(equal(lev,5),fr*-1,fr);\ngr = if(above(sample,0),gr,1);\ngr = if(equal(lev,6),gr*-1,gr);\n\nmlev = lev*above(sample,0);\n\nswi = equal(q4,0)*equal(sample,0);\n\nha = if(swi,1-2*int(rand(2)),ha);\nhb = if(swi,1-2*int(rand(2)),hb);\nhc = if(swi,1-2*int(rand(2)),hc);\nhd = if(swi,1-2*int(rand(2)),hd);\nhe = if(swi,1-2*int(rand(2)),he);\nhf = if(swi,1-2*int(rand(2)),hf);\nhg = if(swi,1-2*int(rand(2)),hg);\n\naang = if(above(sample,0),aang,aang + (q1*.8 + q2*.1 + q3*.1)*ha*1);\nbang = if(above(sample,0),bang,bang + (q1*.57 + q2*.33 + q3*.1)*hb*1.33);\ncang = if(above(sample,0),cang,cang + (q1*.33 + q2*.57 + q3*.1)*hc*1.67);\ndang = if(above(sample,0),dang,dang + (q1*.1 + q2*.8 + q3*.1)*hd*2);\neang = if(above(sample,0),eang,eang + (q1*.1 + q2*.57 + q3*.33)*he*2.33);\nfang = if(above(sample,0),fang,fang + (q1*.1 + q2*.33 + q3*.57)*hf*2.67);\ngang = if(above(sample,0),gang,gang + (q1*.1 + q2*.1 + q3*.8)*hg*3);\n\naang = 1.57;\nbang = 1.57;\ncang = 1.57;\ndang = 1.57;\neang = 1.57;\nfang = 1.57;\ngang = 1.57;\n\noz = 0;\n\nlen = len*mad;\nox = above(lev,0)*sin(aang)*len*ar;\noy = above(lev,0)*cos(aang)*len;\n\nan = (ar*aang + br*bang)*br;\nlen = len*mad;\noy = oy + above(lev,1)*sin(an)*len*br;\noz = oz + above(lev,1)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang)*cr;\nlen = len*mad;\nox = ox + above(lev,2)*sin(an)*len*cr;\noz = oz + above(lev,2)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang)*dr;\nlen = len*mad;\nox = ox + above(lev,3)*sin(an)*len*dr;\noy = oy + above(lev,3)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang)*er;\nlen = len*mad;\nox = ox + above(lev,4)*sin(an)*len*er;\noz = oz + above(lev,4)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang + fr*fang)*fr;\nlen = len*mad;\nox = ox + above(lev,5)*sin(an)*len*fr;\noz = oz + above(lev,5)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang + fr*fang + gr*gang)*gr;\nlen = len*mad;\noy = oy + above(lev,6)*sin(an)*len*gr;\nox = ox + above(lev,6)*cos(an)*len;\n\n\nxang = time*1.132;\nxang = q5;\nyang = time*1.153;\nyang = q6;\nzang = time*1.110;\nzang = q7 + 1.57;\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_eel":"ang = 0;\nlen = t4;\nmad = .6;\n\nit = if(above(sample,0),(it+equal(lev,7)),1);\nita = (ita + 1)*above(sample,0);\n\nmod = if(equal(it%2,0),1,  if(equal((it+1)%4,0),2,  if(equal((it+3)%8,0),3,  if(equal((it+7)%16,0),4,  if(equal((it+15)%32,0),5,  if(equal((it+31)%64,0),6,  if(equal((it+63)%128,0),7,7)  ))))));\n\nsw = sw - 1;\nsw = if(equal(lev,7),mod,sw)*above(sample,0);\n\nlev = if(above(sample,0),if(above(sw,0),lev-1,lev+1),7);\na = lev*.1*1.46;\n\nar = if(above(sample,0),ar,1);\nar = if(equal(lev,0),ar*-1,ar);\nbr = if(above(sample,0),br,1);\nbr = if(equal(lev,1),br*-1,br);\ncr = if(above(sample,0),cr,1);\ncr = if(equal(lev,2),cr*-1,cr);\ndr = if(above(sample,0),dr,1);\ndr = if(equal(lev,3),dr*-1,dr);\ner = if(above(sample,0),er,1);\ner = if(equal(lev,4),er*-1,er);\nfr = if(above(sample,0),fr,1);\nfr = if(equal(lev,5),fr*-1,fr);\ngr = if(above(sample,0),gr,1);\ngr = if(equal(lev,6),gr*-1,gr);\n\nmlev = lev*above(sample,0);\n\nswi = equal(q4,0)*equal(sample,0);\n\nha = if(swi,1-2*int(rand(2)),ha);\nhb = if(swi,1-2*int(rand(2)),hb);\nhc = if(swi,1-2*int(rand(2)),hc);\nhd = if(swi,1-2*int(rand(2)),hd);\nhe = if(swi,1-2*int(rand(2)),he);\nhf = if(swi,1-2*int(rand(2)),hf);\nhg = if(swi,1-2*int(rand(2)),hg);\n\naang = if(above(sample,0),aang,aang + (q1*.8 + q2*.1 + q3*.1)*ha*1);\nbang = if(above(sample,0),bang,bang + (q1*.57 + q2*.33 + q3*.1)*hb*1.33);\ncang = if(above(sample,0),cang,cang + (q1*.33 + q2*.57 + q3*.1)*hc*1.67);\ndang = if(above(sample,0),dang,dang + (q1*.1 + q2*.8 + q3*.1)*hd*2);\neang = if(above(sample,0),eang,eang + (q1*.1 + q2*.57 + q3*.33)*he*2.33);\nfang = if(above(sample,0),fang,fang + (q1*.1 + q2*.33 + q3*.57)*hf*2.67);\ngang = if(above(sample,0),gang,gang + (q1*.1 + q2*.1 + q3*.8)*hg*3);\n\naang = 1.57;\nbang = 1.57;\ncang = 1.57;\ndang = 1.57;\neang = 1.57;\nfang = 1.57;\ngang = 1.57;\n\noz = 0;\n\nlen = len*mad;\nox = above(lev,0)*sin(aang)*len*ar;\noy = above(lev,0)*cos(aang)*len;\n\nan = (ar*aang + br*bang)*br;\nlen = len*mad;\noy = oy + above(lev,1)*sin(an)*len*br;\noz = oz + above(lev,1)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang)*cr;\nlen = len*mad;\nox = ox + above(lev,2)*sin(an)*len*cr;\noz = oz + above(lev,2)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang)*dr;\nlen = len*mad;\nox = ox + above(lev,3)*sin(an)*len*dr;\noy = oy + above(lev,3)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang)*er;\nlen = len*mad;\nox = ox + above(lev,4)*sin(an)*len*er;\noz = oz + above(lev,4)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang + fr*fang)*fr;\nlen = len*mad;\nox = ox + above(lev,5)*sin(an)*len*fr;\noz = oz + above(lev,5)*cos(an)*len;\n\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang + fr*fang + gr*gang)*gr;\nlen = len*mad;\noy = oy + above(lev,6)*sin(an)*len*gr;\nox = ox + above(lev,6)*cos(an)*len;\n\n\nxang = time*1.132;\nxang = q5;\nyang = time*1.153;\nyang = q6;\nzang = time*1.110;\nzang = q7 + 1.57;\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.lbbtime=0;a.mq29=0;a.cthr=0;a.mq1=0;a.tic=0;a.bbtime=0;a.q25=0;a.beatb=0;a.q12=0;a.q22=0;a.q21=0;a.vt=0;a.des=0;a.q13=0;a.q29=0;a.q6=0;a.dbass=0;a.avgbeatrate=0;a.bt=0;a.q1=0;a.mq31=0;a.q5=0;a.avgvol=0;a.xd=0;a.mq21=0;a.mq24=0;a.mid_avg=0;a.chng=0;a.mq28=0;a.dis=0;a.tt=0;a.tin=0;a.mq23=0;a.beatrate=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.bass_avg=0;a.vav=0;a.atime=0;a.yd=0;a.an=0;a.q4=0;a.lbass=0;a.q26=0;a.mt=0;a.sz=0;a.mq27=0;a.ra=0;a.rawbeatb=0;a.mq25=0;a.treb_avg=0;a.mq22=\n0;a.db=0;a.vol=0;a.mq26=0;a.bc=0;a.q2=0;a.q27=0;a.q3=0;a.q7=0;a.q28=0;a.rb=0;a.mtime=0;a.q8=0;a.avgdb=0;a.beatrate=5;a.avgbeatrate=1;a.bbtime=1;a.lbbtime=.5;a.avgdb=.5;a.vol=1;a.avgvol=.2;a.mtime=1E3;a.tt=1E3*a.treb;a.bt=1E3*a.bass;a.mt=1E3*a.mid;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.db=(a.bass-\na.lbass)*a.fps;a.lbass=a.bass;a.avgdb=.99*a.avgdb+.01*Math.abs(a.db);a.rawbeatb=above(a.db,2*a.avgdb);a.beatb=a.rawbeatb*above(a.time-a.lbbtime,.75*a.avgbeatrate)*above(a.bass_att,.3);a.bbtime=a.time*a.beatb;a.beatrate=a.beatb*(a.bbtime-a.lbbtime)+(1-a.beatb)*a.beatrate;a.avgbeatrate=a.beatb*(.999*a.avgbeatrate+.001*a.beatrate)+(1-a.beatb)*a.avgbeatrate;a.lbbtime=a.time*a.beatb+(1-a.beatb)*a.lbbtime;a.bc+=a.beatb;a.vol=a.rawbeatb*(a.db-a.avgdb)*.01;a.avgvol=.99*a.avgvol+.05*a.vol;a.mtime+=Math.min(.5*\na.avgvol,.25);a.warp=0;a.wrap=1;a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.ra=10;a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.rb=1;a.vav=a.tic*(a.vav*(div(1,a.tic)-a.rb)+a.rb*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb_avg;a.mt+=a.tic*a.mid_avg;a.bt+=a.tic*a.bass_avg;a.vt+=a.tic*(a.treb_avg+a.mid_avg+a.bass_avg)*.33333;a.sz=.2;a.q1=.5+a.sz*Math.sin(.629*\na.tt)-a.sz*Math.sin(.107*a.tt);a.q2=.5+a.sz*Math.sin(.987*a.tt)-a.sz*Math.sin(.456*a.tt);a.q3=.5+a.sz*Math.sin(.654*a.mt)-a.sz*Math.sin(.355*a.mt);a.q4=.5+a.sz*Math.sin(.548*a.mt)-a.sz*Math.sin(.875*a.mt);a.q5=.5+a.sz*Math.sin(.687*a.bt)-a.sz*Math.sin(.318*a.bt);a.q6=.5+a.sz*Math.sin(.465*a.bt)-a.sz*Math.sin(.526*a.bt);a.q7=a.mtime;a.q8=a.dbass;","pixel_eqs_str":"a.xd=a.q1-a.x;a.yd=a.q2-a.y;a.dis=pow(a.xd*a.xd+a.yd*a.yd,.5);a.des=1-.7071068*a.dis;a.des=pow(a.des,10*a.q8)*-a.treb;a.an=Math.acos(div(Math.abs(a.xd),a.dis));a.dx=.01*sign(a.xd)*Math.cos(a.an)*a.des;a.dy=.01*sign(a.yd)*Math.sin(a.an)*a.des;a.dx-=sign(a.yd)*Math.sin(a.q7+a.an)*.001*a.treb_att*a.des;a.dy+=sign(a.xd)*Math.cos(a.q7+a.an)*.001*a.treb*a.des;a.sy=1+a.dx*a.des;a.sx=1-a.dy*a.des;a.xd=a.q3-a.x;a.yd=a.q4-a.y;a.dis=pow(a.xd*a.xd+a.yd*a.yd,.5);a.des=1-.7071068*a.dis;a.des=\npow(a.des,10*a.q8)*-a.mid;a.an=Math.acos(div(Math.abs(a.xd),a.dis));a.dx+=.01*sign(a.xd)*Math.cos(a.an)*a.des;a.dy+=.01*sign(a.yd)*Math.sin(a.an)*a.des;a.dx-=sign(a.yd)*Math.sin(a.q7+a.an)*.001*a.mid_att*a.des;a.dy+=sign(a.xd)*Math.cos(a.q7+a.an)*.001*a.mid*a.des;a.sy=1+a.dx*a.des;a.sx=1-a.dy*a.des;a.xd=a.q5-a.x;a.yd=a.q6-a.y;a.dis=pow(a.xd*a.xd+a.yd*a.yd,.5);a.des=1-.7071068*a.dis;a.des=pow(a.des,10*a.q8)*-a.bass;a.an=Math.acos(div(Math.abs(a.xd),a.dis));a.dx+=.01*sign(a.xd)*Math.cos(a.an)*a.des;\na.dy+=.01*sign(a.yd)*Math.sin(a.an)*a.des;a.dx-=sign(a.yd)*Math.sin(a.q7+a.an)*.001*a.bass_att*a.des;a.dy+=sign(a.xd)*Math.cos(a.q7+a.an)*.001*a.bass*a.des;a.sy=1+a.dx*a.des;a.sx=1-a.dy*a.des;","init_eqs_eel":"beatrate=5;\navgbeatrate=1;\nbbtime=1;\nlbbtime=.5;\navgdb=.5;\nvol=1;\navgvol=.2;\nmtime=1000;\n\ntt=1000*treb;\nbt=1000*bass;\nmt=1000*mid;","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\ndb=(bass-lbass)*fps;\nlbass=bass;\navgdb=avgdb*.99+abs(db)*.01;\n\n//beatdection\nrawbeatb=above(db,avgdb*2);\nbeatb=rawbeatb*above(time-lbbtime,.75*avgbeatrate)*above(bass_att,.3);\n\n//beatrate calc\nbbtime=time*beatb;\nbeatrate=beatb*(bbtime-lbbtime)+(1-beatb)*beatrate;\navgbeatrate=beatb*(avgbeatrate*.999+beatrate*.001)+(1-beatb)*avgbeatrate;\nlbbtime=time*beatb+(1-beatb)*lbbtime;\n\nbc=bc+beatb;\n\n\n\nvol=(rawbeatb*(db-(avgdb))*.01);\navgvol=avgvol*.99+vol*.05;\n\nmtime=mtime+min(avgvol*.5,.25);\n\n//decay=.99;\nwarp=0;\nwrap=1;\n\n\nwarp = 0;\n\ntic = min(time - tin,.1);\ntin = time;\n\nra = 10;\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\n\nrb = 1;\nvav = tic*(vav*(1/tic - rb) + rb*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb_avg;\nmt = mt + tic*mid_avg;\nbt = bt + tic*bass_avg;\nvt = vt + tic*(treb_avg+mid_avg+bass_avg)*.33333;\n\nsz = .2;\n\nq1 = .5 + sz*sin(tt*.629) - sz*sin(tt*.107);\nq2 = .5 + sz*sin(tt*.987) - sz*sin(tt*.456);\n\nq3 = .5 + sz*sin(mt*.654) - sz*sin(mt*.355);\nq4 = .5 + sz*sin(mt*.548) - sz*sin(mt*.875);\n\nq5 = .5 + sz*sin(bt*.687) - sz*sin(bt*.318);\nq6 = .5 + sz*sin(bt*.465) - sz*sin(bt*.526);\n\n\nq7=mtime;\nq8=dbass;","pixel_eqs_eel":"xd = q1-x;\nyd = q2-y;\n\ndis = pow(xd*xd+yd*yd,.5);\ndes = 1 - dis*.7071068;\ndes = pow(des,10*q8)*-treb;\nan = acos(abs(xd)/dis);\n\ndx = sign(xd)*.01*cos(an)*des;\ndy = sign(yd)*.01*sin(an)*des;\n\n//dy = dy + sign(xd)*treb*.05*cos(an)*des;\n//dx = dx + sign(yd)*treb*.05*sin(an)*des*-1;\n\n\ndx=dx-sign(yd)*sin(q7+an)*.001*treb_att*des;\ndy=dy+sign(xd)*cos(q7+an)*.001*treb*des;\n\nsy=1+dx*des;\nsx=1-dy*des;\n\n\nxd = q3-x;\nyd = q4-y;\n\ndis = pow(xd*xd+yd*yd,.5);\ndes = 1 - dis*.7071068;\ndes = pow(des,10*q8)*-mid;\nan = acos(abs(xd)/dis);\n\ndx = dx + sign(xd)*.01*cos(an)*des;\ndy = dy + sign(yd)*.01*sin(an)*des;\n\n//dy = dy + sign(xd)*mid*.05*cos(an)*des;\n//dx = dx + sign(yd)*mid*.05*sin(an)*des*-1;\n\n\ndx=dx-sign(yd)*sin(q7+an)*.001*mid_att*des;\ndy=dy+sign(xd)*cos(q7+an)*.001*mid*des;\n\nsy=1+dx*des;\nsx=1-dy*des;\n\nxd = q5-x;\nyd = q6-y;\n\ndis = pow(xd*xd+yd*yd,.5);\ndes = 1 - dis*.7071068;\ndes = pow(des,10*q8)*-bass;\nan = acos(abs(xd)/dis);\n\ndx = dx + sign(xd)*.01*cos(an)*des;\ndy = dy + sign(yd)*.01*sin(an)*des;\n\n//dy = dy + sign(xd)*bass*.05*cos(an)*des;\n//dx = dx + sign(yd)*bass*.05*sin(an)*des*-1;\n\n\ndx=dx-sign(yd)*sin(q7+an)*.001*bass_att*des;\ndy=dy+sign(xd)*cos(q7+an)*.001*bass*des;\n\nsy=1+dx*des;\nsx=1-dy*des;","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6 = mix (uv_orig, uv, vec2(0.35, 0.35));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.y;\n  tmpvar_7.y = tmpvar_5.y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (tmpvar_6 - ((tmpvar_7 * texsize.zw) * 4.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_4.z;\n  tmpvar_9.y = tmpvar_5.z;\n  vec2 tmpvar_10;\n  tmpvar_10 = (tmpvar_6 - ((tmpvar_9 * texsize.zw) * 4.0));\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_10.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_11.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_11.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_11.z * 0.5));\n  };\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur1, uv);\n  vec4 tmpvar_13;\n  tmpvar_13 = texture (sampler_main, uv_orig);\n  ret_1.y = (((\n    (texture (sampler_main, tmpvar_8).y - (((\n      (tmpvar_12.xyz * scale1)\n     + bias1).y - texture (sampler_main, tmpvar_8).y) * 0.024))\n   - 0.009) + (\n    (1.0 - tmpvar_13.x)\n   * 0.014)) + (tmpvar_2 * 0.02)).x;\n  ret_1.z = (((\n    (texture (sampler_main, tmpvar_10).z - (((\n      (tmpvar_12.xyz * scale1)\n     + bias1).z - texture (sampler_main, tmpvar_10).z) * 0.024))\n   - 0.009) + (tmpvar_13.x * 0.014)) + (tmpvar_2 * 0.02)).x;\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\n  ret_1.x = (ret_1.x + ((\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\n   * 0.4) + (tmpvar_2 * 0.004)).x);\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_1;\n  ret = tmpvar_14.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  ret_1 = (ret_1 + ((texture (sampler_blur1, \n    (uv + ret_1.xy)\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_2;\n  tmpvar_2.x = (uv.x - ret_1.y);\n  tmpvar_2.y = (uv.y - ret_1.y);\n  ret_1 = (ret_1 + ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3 = pow (((\n    sqrt(dot (ret_1, ret_1))\n   * ret_1) * 1.33), (0.89 - (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3)));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_3.x > (q26 * q13)) && (tmpvar_3.x <= (q23 * q11)))) {\n    ret_1.z = (tmpvar_3.z - (tmpvar_4.x * 0.5));\n  };\n  if (((tmpvar_3.y > (q25 * q11)) && (tmpvar_3.y <= (q22 * q12)))) {\n    ret_1.x = (tmpvar_3.x - (tmpvar_4.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\n    ret_1.y = (tmpvar_3.y - (tmpvar_4.z * 0.5));\n  };\n  ret_1 = (ret_1 * ret_1.z);\n  ret_1 = (ret_1 - texture (sampler_main, uv).xyz);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"\nshader_body\n{\n\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat3 rand = tex2D(sampler_noise_lq, dither_uv).xyz-0.5;\n\nfloat2 d = texsize.zw * 4;\nfloat3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\nfloat3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\nd = lerp(uv_orig,uv,0.35);\nfloat2 uv_y =d - float2(dx.y,dy.y)*texsize.zw*4;\nfloat2 uv_z =d - float2(dx.z,dy.z)*texsize.zw*4;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv_z.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \nret.y = GetPixel(uv_y).y - (GetBlur1(uv).y-GetPixel(uv_y).y)*0.024 - 0.009 + (1-GetPixel(uv_orig).x)*0.014 + rand*0.02;\nret.z = GetPixel(uv_z).z - (GetBlur1(uv).z-GetPixel(uv_z).z)*0.024 - 0.009 + (0+GetPixel(uv_orig).x)*0.014 + rand*0.02;\n\nret.x = tex2D( sampler_fc_main, uv+rand*texsize.zw*.5 ).x;\nret.x += (ret.x - GetBlur3(uv).x)*0.4 + rand*0.004;\n\n//ret = 0;\n}","comp_hlsl":"shader_body\n{\n\nret=GetBlur1(uv);\nret+=GetBlur1(float2(uv.x+ret.x,uv.y+ret.y));\nret+=GetBlur1(float2(uv.x-ret.y,uv.y-ret.y));\nret=pow(length(ret)*ret*1.33,0.89-GetBlur3(uv));\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret*=ret.z;\nret=ret-GetPixel(uv);\n}"}