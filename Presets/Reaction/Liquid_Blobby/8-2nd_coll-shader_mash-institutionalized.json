{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"wave_mode":7,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.107,"wave_smoothing":0.648,"wave_mystery":-0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.99817,"zoom":1.05048,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0.7,"mv_g":0.7,"mv_b":0.7,"mv_a":0},"shapes":[{"baseVals":{"additive":1,"thickoutline":1,"textured":1,"rad":0.36457,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r = q1;\nb = q2;\ng = q3;\nr2 = 1-abs(q1);\nb2 = q2;\ng2 = q3;\nang = ang + 12*tan(time);\nx = x + 0.15*sin(time);\ny = y + 0.15*cos(time);\na = 0.5 + 0.5*sin(bass_att);\na2 = 0.5 + 0.5*cos(bass_att);","init_eqs_eel":"","frame_eqs_eel":"r = q1;\nb = q2;\ng = q3;\nr2 = 1-abs(q1);\nb2 = q2;\ng2 = q3;\nang = ang + 12*tan(time);\nx = x + 0.15*sin(time);\ny = y + 0.15*cos(time);\na = 0.5 + 0.5*sin(bass_att);\na2 = 0.5 + 0.5*cos(bass_att);"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.8,"rad":1.08925,"tex_zoom":0.74192,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//this shape is a hidden trick...","init_eqs_eel":"","frame_eqs_eel":"//this shape is a hidden trick..."},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"scaling":2.70481,"g":0.4,"b":0.4},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;a.dvy=0;a.vx=0;a.vy=0;a.vang=0;a.xv=0;a.dvx=0;a.bb=0;a.q2=0;a.q3=0;a.yv=0;","frame_eqs_str":"a.q1=.5+.4*Math.sin(.43*a.time+.12*a.bass_att);a.q2=.5+.4*Math.sin(.63*a.time+.14*a.bass_att);a.q3=.5+.4*Math.sin(.83*a.time+.16*a.bass_att);a.ob_b=.01*mod(a.frame,40);a.bb=.016*a.bass_att+.98*a.bb;a.mv_x=30*a.bb;a.mv_dx=a.mv_dx+.1*Math.sin(a.time)+.01*a.mv_x-.3;a.monitor=a.mv_x;a.wave_mystery=.01*rand(150)-.01*rand(150);","pixel_eqs_str":"a.xv=Math.sin(.333*a.time)*a.x*Math.cos(.667*a.time)*a.x;a.yv=Math.cos(.333*a.time)*a.y*Math.sin(.667*a.time)*a.y;a.x=a.xv;a.y=a.yv;a.vang=.0628318*Math.sin(.2*a.time)-1.68;a.vx=(a.x-.5)*Math.cos(a.vang)-(a.y-.5)*Math.sin(a.vang)+.5;a.vy=(a.x-.5)*Math.sin(a.vang)+(a.y-.5)*Math.cos(a.vang)+.5;a.dvx=.01+.01*rand(2);a.dvy=-.01;a.dx=a.dvx*Math.cos(a.vang)-a.dvy*Math.sin(a.vang);a.dy=-a.dvx*Math.sin(a.vang)-a.dvy*Math.cos(a.vang);a.dy=below(a.y,.2)*a.dy+.01*above(a.y,.1);a.dx=below(a.x,\n.2)*a.dx+.01*above(a.x,.1);a.sx+=.075*Math.sin(3*a.x);a.sy+=.075*Math.sin(3.1*a.y);a.cx=.5+.2*Math.sin(.57*a.time);a.cy=.5+.2*Math.cos(.61*a.time);a.rot=a.rot+.01*Math.sin(10*a.rad-1.5*a.time)*a.treb_att-.005*Math.cos(a.time*a.rad);","init_eqs_eel":"","frame_eqs_eel":"q1 = 0.5+0.4*sin(0.43*time+0.12*bass_att);\nq2 = 0.5+0.4*sin(0.63*time+0.14*bass_att);\nq3 = 0.5+0.4*sin(0.83*time+0.16*bass_att);\n\nob_b= frame%40*.01;\nbb= (bass_att*.8)*.02+bb*.98;\nmv_x = bb*30;\nmv_dx = mv_dx+sin(time)*.1+mv_x*.01-.3;\n\nmonitor = mv_x;\n\nwave_mystery = rand(150)*0.01 - rand(150)*0.01;","pixel_eqs_eel":"//Have fun with the shaders kids!\n\n//xy transform code (Yes, it is based off of Flexi's from the previous collaboration)\nxv = sin(time*.333)*x*cos(time*.667)*x;\nyv = cos(time*.333)*y*sin(time*.667)*y;\nx = xv; \ny = yv;\n//end x/y transform code\n\nvang = sin(time*.2)*3.14159*.02-1.68;\nvx = (x-.5)*cos(vang) - (y-.5)*sin(vang)+.5;\nvy = (x-.5)*sin(vang) +(y-.5)*cos(vang)+.5;\n\ndvx = .01+rand(2)*.01;\ndvy = -.01;\n\ndx = dvx*cos(vang) - dvy*sin(vang);\ndy = -dvx*sin(vang) - dvy*cos(vang);\n\ndy=below(y,.2)*dy+above(y,.1)*.01;\ndx=below(x,.2)*dx+above(x,.1)*.01;\n\nsx=sx+.075*sin(x*3);\nsy=sy+.075*sin(y*3.1);\n\ncx = .5 + 0.2*sin(time*.57);\ncy = .5 + 0.2*cos(time*.61);\n\nrot=rot+.01*sin(rad*10-time*1.5)*treb_att-.005*cos(time*rad);","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = vec2((texsize.x * 10.0));\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.y;\n  tmpvar_5.y = tmpvar_4.y;\n  vec2 tmpvar_6;\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv_orig * texsize.xy);\n  tmpvar_6 = (((tmpvar_7 * texsize_noise_lq.zw) * 0.8) + rand_frame.xy);\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_3.x;\n  tmpvar_8.y = tmpvar_4.x;\n  vec2 tmpvar_9;\n  vec2 tmpvar_10;\n  tmpvar_10 = (uv_orig - uv);\n  tmpvar_9 = (((uv_orig - \n    (tmpvar_10 * 0.4)\n  ) + (\n    (tmpvar_8 * texsize.zw)\n   * 2.0)) + ((\n    (texture (sampler_noise_lq, tmpvar_6).xy - 0.5)\n   * texsize.zw) * 4.0));\n  ret_1.x = (((texture (sampler_main, tmpvar_9).x - \n    ((texture (sampler_main, tmpvar_9).x - ((texture (sampler_blur3, tmpvar_9).xyz * scale3) + bias3).x) * 0.02)\n  ) - 0.008) + ((texture (sampler_noise_lq, tmpvar_6).x - 0.5) * 0.1));\n  ret_1.y = texture (sampler_main, (uv - (tmpvar_5 * texsize.zw))).y;\n  ret_1.y = (ret_1.y + ((\n    (ret_1.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y)\n   * 0.2) - 0.004));\n  ret_1.z = (texture (sampler_main, ((uv_orig - \n    (tmpvar_10 * 2.0)\n  ) + (\n    ((texture (sampler_noise_lq, ((tmpvar_7 * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5).xy * texsize.zw)\n   * 3.0))).z - 0.012);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  float tmpvar_2;\n  tmpvar_2 = dot (ret_1.xxx, vec3(0.32, 0.49, 0.29));\n  float tmpvar_3;\n  tmpvar_3 = dot (ret_1.yyy, vec3(0.32, 0.49, 0.29));\n  ret_1 = (ret_1 + texture (sampler_main, uv).xyz);\n  ret_1 = (ret_1 / ret_1);\n  ret_1 = (ret_1 * clamp (ret_1, 0.0, 1.0));\n  vec2 tmpvar_4;\n  tmpvar_4.x = (uv.x + ret_1.z);\n  tmpvar_4.y = (uv.y * ret_1.x);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_main, tmpvar_4);\n  ret_1 = (tmpvar_5.xyz * (sqrt(\n    dot (tmpvar_5.xyz, tmpvar_5.xyz)\n  ) + tmpvar_5.z));\n  ret_1 = (ret_1 * clamp (ret_1, 0.0, 1.0));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_blur1, uv);\n  ret_1 = (ret_1 * ((\n    (((tmpvar_6.xyz * scale1) + bias1) - ret_1.x)\n   - ret_1.y) * (\n    (texture (sampler_blur1, ret_1.xy).xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 * ((\n    (tmpvar_2 * 5.0)\n   + \n    (tmpvar_3 * 5.0)\n  ) + (\n    ((tmpvar_6.xyz * scale1) + bias1)\n  .x * 5.0)));\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.0;\n  tmpvar_7.xy = ret_1.xy;\n  ret_1 = (ret_1 + (dot (tmpvar_7, vec3(0.32, 0.49, 0.29)) * 3.0));\n  ret_1 = (ret_1 * 10.0);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_1;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n   float2 d = texsize.x*10;\n    float2 uv_y = uv;//0.5 + (uv_orig-0.5)*1.00 + float2(0,-0.8)*texsize.zw*0;\n    float3 dx = ( GetBlur1(uv_y + float2(1,0)*d) - GetBlur1(uv_y-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv_y + float2(0,1)*d) - GetBlur1(uv_y-float2(0,1)*d) );\n    uv_y = uv_y - float2(dx.y,dy.y)*texsize.zw;\n\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*0.8 + rand_frame.xy;\n    float2 uv_bg = uv_orig -(uv_orig-uv)*0.4 + float2(dx.x,dy.x)*texsize.zw*2 + (tex2D(sampler_noise_lq, dither_uv).xy-0.5)*texsize.zw*4;\n\nret.x = GetPixel(uv_bg).x - (GetPixel(uv_bg).x - GetBlur3(uv_bg).x)*0.02 - 0.008 + \n(tex2D(sampler_noise_lq, dither_uv).x-0.5)*0.1;\n\n\n   ret.y = tex2D( sampler_main, uv_y ).y;\n   ret.y += (ret.y - GetBlur1(uv).y)*0.2 - 0.004;\n   dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n\nuv_bg = uv_orig -(uv_orig-uv)*2 + (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)*texsize.zw*3;\nret.z = GetPixel(uv_bg).z - 0.012;\n}","comp_hlsl":"shader_body\n{\n\n    float blxy=GetBlur1(uv.xy);\n    float blumx=lum(ret.x);\n    float blumy=lum(ret.y);\n\nret+=GetPixel(uv);\nret/=ret.xyz;\nret*=saturate(ret);\nret=GetPixel(float2(uv.x+(ret.z),uv.y*ret.x));\nret*=length(ret)+ret.z;\nret*=saturate(ret);\nret*=(GetBlur1(uv)-ret.x-ret.y)*GetBlur1(ret.xy);\n\n    ret*=blumx*5+blumy*5+blxy*5;\n    ret+=lum(ret.xy)*3;\n    ret*=10;\n\n\n}\n\n"}