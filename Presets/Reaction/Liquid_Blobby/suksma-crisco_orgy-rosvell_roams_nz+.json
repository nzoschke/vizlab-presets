{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.94,"echo_zoom":0.597,"echo_orient":1,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":13.29089,"dx":-0.28,"dy":-0.32,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":12.8,"mv_y":9.6,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"rad":0.49138,"r":0,"g":1,"b":1,"r2":0.7,"b2":1,"border_a":0},"init_eqs_str":"a.q4=0;a.q5=0;a.vol=0;a.zoom=0;","frame_eqs_str":"a.x=.5+a.q4;a.y=.5+a.q5;a.a=a.bass_att+a.mid_att+a.treb_att;a.a*=.25;a.a=a.a*a.a*1.5;a.r2=.5*Math.sin(1.31*a.bass);a.g2=.5*Math.sin(1.32*a.bass);a.b2=.5*Math.sin(1.33*a.bass);a.rad=Math.sin(a.bass+a.vol);a.r=a.bass+1.31*a.time;a.g=a.bass+div(1.32*a.time,2);a.b=a.bass+div(1.33*a.time,3);a.zoom=Math.sin(a.bass);","init_eqs_eel":"","frame_eqs_eel":"x=.5+q4;y=.5+q5;\na=bass_att+mid_att+treb_att;\na=a*0.25;\na=a*a*1.5;\nr2 = 0.5*sin(bass*1.31);\ng2 = 0.5*sin(bass*1.32);\nb2 = 0.5*sin(bass*1.33);\nrad = sin(bass+vol);\nr = bass+1.31*time;\ng = bass+1.32*time/2;\nb = bass+1.33*time/3;\nzoom = sin(bass);"},{"baseVals":{"sides":24,"rad":0.01842,"tex_zoom":0.81954,"g":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_ang=0.01;\nx=.5-q4;\ny=.5-q5;","init_eqs_eel":"","frame_eqs_eel":"tex_ang=0.01;\nx=.5-q4;\ny=.5-q5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q6=0;a.mq31=0;a.q5=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.musictime=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.atime=0;a.q4=0;a.zm=0;a.q26=0;a.rd=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.q27=0;a.q28=0;a.q8=0;a.zoom=1;a.xpos=0;a.ypos=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.q4=Math.sin(.03*\na.atime);a.q5=Math.cos(.030383824*a.atime);a.q6=Math.tan(.029384834*a.atime);a.decay=1;a.vol=.55*(a.bass+a.mid+a.treb);a.vol=a.vol;a.mv_r=.5+.4*Math.sin(1.324*a.time);a.mv_g=.5+.4*Math.cos(1.371*a.time);a.zoom=1;a.musictime+=a.vol;a.dx=.07*Math.sin(.1*a.musictime);a.dy=.07*Math.cos(.069*a.musictime);a.q8=a.musictime;a.q4=.1*Math.sin(.015*a.musictime);a.q5=.1*Math.cos(.06*a.musictime);a.monitor=a.rot;","pixel_eqs_str":"a.rd=sqrt(sqr(1.7*(a.x-.5-a.q4))+sqr(1.2*(a.y-.5+a.q5)))+.001;a.cx=.5+a.q4;a.cy=.5-a.q5;a.zm=2*pow(a.rd,Math.sin(.02*a.q8)+2.5);a.zm=Math.max(a.zm,.5);a.sx=a.zm;a.sy=a.zm;","init_eqs_eel":"zoom=1;\nxpos=0;\nypos=0;","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\nq4=sin(atime*.03);\nq5=cos(atime*.030383824);\nq6=tan(atime*.029384834);\n\ndecay=1;\n\nvol= (bass+mid+treb)*0.55;\nvol=vol;\n\n\nmv_r = 0.5 + 0.4*sin(time*1.324);\nmv_g = 0.5 + 0.4*cos(time*1.371);\n\n\n\n\nzoom=1;\n\nmusictime=musictime+vol;\n\n//=sin(musictime*0.02)*0.3;\n//q5=sin(musictime*0.01)*0.3;\n\ndx=sin(musictime*0.1)*0.07;\ndy=cos(musictime*0.069)*0.07;\n\nq8=musictime;\n\n\nq4=sin(musictime*0.03*0.5)*0.1;\nq5=cos(musictime*0.03*2)*0.1;\n\nmonitor=rot;","pixel_eqs_eel":"rd=sqrt( sqr( (x-0.5-q4)*1.7) + sqr( (y-0.5+q5)*1.2 ) )+0.001;\ncx=0.5+q4;\ncy=0.5-q5;\n\nzm=pow(rd,sin(q8*0.02)+2.5)*2;\nzm=max(zm,0.5);\nsx=zm;\nsy=zm","warp":" shader_body { \n  vec2 my_uv2_1;\n  vec2 dz_2;\n  vec3 dy_3;\n  vec3 dx_4;\n  vec3 ret_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (texsize.zw * 4.0);\n  vec3 tmpvar_7;\n  tmpvar_7 = ((2.0 * (\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_6))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_6))).xyz * scale1)\n   + bias1)));\n  vec3 tmpvar_8;\n  tmpvar_8 = ((2.0 * (\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_6))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_6))).xyz * scale1)\n   + bias1)));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_7.x;\n  tmpvar_9.y = tmpvar_8.x;\n  vec2 tmpvar_10;\n  tmpvar_10 = (tmpvar_9 * texsize.zw);\n  ret_5.x = (texture (sampler_fw_main, (uv - tmpvar_10)).x - ((\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3).x - (\n    (texture (sampler_blur1, (uv + tmpvar_10)).xyz * scale1)\n   + bias1).x));\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_7.y;\n  tmpvar_11.y = tmpvar_8.y;\n  dz_2 = (-(tmpvar_11) * texsize.zw);\n  ret_5.y = ((texture (sampler_fw_main, (uv - dz_2)).y - 0.06) - ((\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  .y - \n    ((texture (sampler_blur1, (uv + dz_2)).xyz * scale1) + bias1)\n  .y) * 1.3));\n  vec2 tmpvar_12;\n  tmpvar_12 = ((uv_orig - 0.5) * (1.8 - (\n    (bass_att - treb_att)\n   * 0.015)));\n  vec2 tmpvar_13;\n  tmpvar_13.x = ((tmpvar_12.x * tmpvar_12.x) - (tmpvar_12.y * tmpvar_12.y));\n  tmpvar_13.y = ((2.0 * tmpvar_12.x) * tmpvar_12.y);\n  my_uv2_1 = (tmpvar_13 + vec2(0.28, 0.4));\n  dx_4 = ((2.0 * (\n    (texture (sampler_blur1, (my_uv2_1 + (vec2(1.0, 0.0) * tmpvar_6))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (my_uv2_1 - (vec2(1.0, 0.0) * tmpvar_6))).xyz * scale1)\n   + bias1)));\n  dy_3 = ((2.0 * (\n    (texture (sampler_blur1, (my_uv2_1 + (vec2(0.0, 1.0) * tmpvar_6))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (my_uv2_1 - (vec2(0.0, 1.0) * tmpvar_6))).xyz * scale1)\n   + bias1)));\n  vec2 tmpvar_14;\n  tmpvar_14.x = dx_4.z;\n  tmpvar_14.y = dy_3.z;\n  dz_2 = (tmpvar_14 * texsize.zw);\n  ret_5.z = (texture (sampler_main, clamp ((my_uv2_1 + dz_2), 0.0, 1.0)).z - 0.014);\n  vec3 tmpvar_15;\n  tmpvar_15.x = dy_3.y;\n  tmpvar_15.y = dz_2.x;\n  tmpvar_15.z = dx_4.x;\n  vec4 tmpvar_16;\n  tmpvar_16 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_15.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_5.x > (q21 * q13)) && (ret_5.x <= (q24 * q11)))) {\n    ret_5.y = (ret_5.y + (tmpvar_16.x * 0.5));\n  };\n  if (((ret_5.y > (q22 * q11)) && (ret_5.y <= (q25 * q12)))) {\n    ret_5.z = (ret_5.z + (tmpvar_16.y * 0.5));\n  };\n  if (((ret_5.z > (q23 * q12)) && (ret_5.z <= (q26 * q13)))) {\n    ret_5.x = (ret_5.x + (tmpvar_16.z * 0.5));\n  };\n  ret_5 = (ret_5 - ((slow_roam_sin.xyz * roam_cos.wzy) * 0.4));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_5;\n  ret = tmpvar_17.xyz;\n }","comp":" shader_body { \n  vec2 dz_1;\n  vec3 dy_2;\n  vec3 dx_3;\n  vec2 mirror_uv_4;\n  vec3 ret_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((q4 * tmpvar_6.x) - (q3 * tmpvar_6.y));\n  tmpvar_7.y = ((q3 * tmpvar_6.x) + (q4 * tmpvar_6.y));\n  vec2 tmpvar_8;\n  tmpvar_8 = (0.5 + (tmpvar_7 * 2.0));\n  vec2 numerator_9;\n  numerator_9 = (tmpvar_8 - vec2(0.0, 0.5));\n  vec2 denominator_10;\n  denominator_10 = (tmpvar_8 - vec2(1.0, 0.5));\n  vec2 tmpvar_11;\n  tmpvar_11.x = ((numerator_9.x * denominator_10.x) + (numerator_9.y * denominator_10.y));\n  tmpvar_11.y = ((numerator_9.y * denominator_10.x) - (numerator_9.x * denominator_10.y));\n  vec2 tmpvar_12;\n  tmpvar_12 = (((tmpvar_11 / \n    ((denominator_10.x * denominator_10.x) + (denominator_10.y * denominator_10.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_13;\n  tmpvar_13 = sqrt(dot (tmpvar_12, tmpvar_12));\n  float tmpvar_14;\n  float tmpvar_15;\n  tmpvar_15 = (min (abs(\n    (tmpvar_12.x / tmpvar_12.y)\n  ), 1.0) / max (abs(\n    (tmpvar_12.x / tmpvar_12.y)\n  ), 1.0));\n  float tmpvar_16;\n  tmpvar_16 = (tmpvar_15 * tmpvar_15);\n  tmpvar_16 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_16) + 0.05368138) * tmpvar_16) - 0.1173503)\n     * tmpvar_16) + 0.1938925) * tmpvar_16) - 0.3326756)\n   * tmpvar_16) + 0.9999793) * tmpvar_15);\n  tmpvar_16 = (tmpvar_16 + (float(\n    (abs((tmpvar_12.x / tmpvar_12.y)) > 1.0)\n  ) * (\n    (tmpvar_16 * -2.0)\n   + 1.570796)));\n  tmpvar_14 = (tmpvar_16 * sign((tmpvar_12.x / tmpvar_12.y)));\n  if ((abs(tmpvar_12.y) > (1e-08 * abs(tmpvar_12.x)))) {\n    if ((tmpvar_12.y < 0.0)) {\n      if ((tmpvar_12.x >= 0.0)) {\n        tmpvar_14 += 3.141593;\n      } else {\n        tmpvar_14 = (tmpvar_14 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_14 = (sign(tmpvar_12.x) * 1.570796);\n  };\n  vec2 tmpvar_17;\n  tmpvar_17.x = (tmpvar_14 * 0.1591549);\n  tmpvar_17.y = tmpvar_13;\n  vec2 tmpvar_18;\n  tmpvar_18.x = ((tmpvar_17.x * 2.0) + q11);\n  tmpvar_18.y = ((0.3 * log(tmpvar_13)) + q12);\n  vec2 tmpvar_19;\n  tmpvar_19 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_18 * 0.5)) * 2.0) - 1.0)\n  )));\n  vec2 tmpvar_20;\n  tmpvar_20 = (texsize.zw * 3.0);\n  vec3 tmpvar_21;\n  tmpvar_21 = ((2.0 * (\n    (texture (sampler_blur1, (tmpvar_19 + (vec2(1.0, 0.0) * tmpvar_20))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (tmpvar_19 - (vec2(1.0, 0.0) * tmpvar_20))).xyz * scale1)\n   + bias1)));\n  vec3 tmpvar_22;\n  tmpvar_22 = ((2.0 * (\n    (texture (sampler_blur1, (tmpvar_19 + (vec2(0.0, 1.0) * tmpvar_20))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (tmpvar_19 - (vec2(0.0, 1.0) * tmpvar_20))).xyz * scale1)\n   + bias1)));\n  vec2 tmpvar_23;\n  tmpvar_23.x = tmpvar_21.x;\n  tmpvar_23.y = tmpvar_22.x;\n  mirror_uv_4 = (tmpvar_19 + ((tmpvar_23 * texsize.zw) * 4.0));\n  ret_5 = ((mix (ret_5, vec3(1.0, 1.0, 1.0), \n    ((((texture (sampler_blur1, mirror_uv_4).xyz * scale1) + bias1).x * (1.0 - (\n      (texture (sampler_blur2, mirror_uv_4).xyz * scale2)\n     + bias2).x)) * (pow (hue_shader, vec3(4.0, 4.0, 4.0)) * 1.4))\n  ) * texture (sampler_main, mirror_uv_4).xxx) + ((\n    (1.0 - texture (sampler_main, mirror_uv_4).x)\n   * \n    ((texture (sampler_blur1, mirror_uv_4).xyz * scale1) + bias1)\n  .x) * vec3(3.0, 3.0, 3.0)));\n  vec2 tmpvar_24;\n  tmpvar_24.x = tmpvar_21.x;\n  tmpvar_24.y = tmpvar_22.x;\n  mirror_uv_4 = (mirror_uv_4 - ((tmpvar_24 * texsize.zw) * 24.0));\n  dx_3 = ((2.0 * (\n    (texture (sampler_blur1, (mirror_uv_4 + (vec2(1.0, 0.0) * tmpvar_20))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (mirror_uv_4 - (vec2(1.0, 0.0) * tmpvar_20))).xyz * scale1)\n   + bias1)));\n  dy_2 = ((2.0 * (\n    (texture (sampler_blur1, (mirror_uv_4 + (vec2(0.0, 1.0) * tmpvar_20))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (mirror_uv_4 - (vec2(0.0, 1.0) * tmpvar_20))).xyz * scale1)\n   + bias1)));\n  vec2 tmpvar_25;\n  tmpvar_25.x = -(dx_3.y);\n  tmpvar_25.y = dy_2.y;\n  vec2 tmpvar_26;\n  tmpvar_26 = (tmpvar_25 * 0.25);\n  vec3 tmpvar_27;\n  tmpvar_27 = mix (ret_5, vec3(1.0, 1.0, 1.0), (mix (vec3(1.0, 0.7, 0.2), vec3(0.15, 0.0, 0.5), vec3(\n    ((((\n      ((mirror_uv_4.x * 0.8) - mirror_uv_4.y)\n     + 0.75) + tmpvar_26.x) + tmpvar_26.y) - 0.1)\n  )) * texture (sampler_main, mirror_uv_4).y));\n  vec2 tmpvar_28;\n  vec2 tmpvar_29;\n  tmpvar_29 = ((0.5 + (\n    (uv - 0.5)\n   * aspect.wz)) - vec2(0.5, 0.5));\n  vec2 tmpvar_30;\n  tmpvar_30.x = ((q4 * tmpvar_29.x) - (q3 * tmpvar_29.y));\n  tmpvar_30.y = ((q3 * tmpvar_29.x) + (q4 * tmpvar_29.y));\n  tmpvar_28 = (vec2(0.5, 0.5) + tmpvar_30);\n  mirror_uv_4 = tmpvar_28.yx;\n  vec2 tmpvar_31;\n  tmpvar_31 = (vec2(1.0, 0.0) * texsize.zw);\n  dx_3 = ((2.0 * texture (sampler_main, (tmpvar_28.yx + tmpvar_31)).xyz) - (2.0 * texture (sampler_main, (tmpvar_28.yx - tmpvar_31)).xyz));\n  vec2 tmpvar_32;\n  tmpvar_32 = (vec2(0.0, 1.0) * texsize.zw);\n  dy_2 = ((2.0 * texture (sampler_main, (tmpvar_28.yx + tmpvar_32)).xyz) - (2.0 * texture (sampler_main, (tmpvar_28.yx - tmpvar_32)).xyz));\n  vec2 tmpvar_33;\n  tmpvar_33.x = dx_3.z;\n  tmpvar_33.y = dy_2.z;\n  dz_1 = -(tmpvar_33);\n  ret_5 = (tmpvar_27 - ((slow_roam_sin.wzy * roam_cos.xyz) * 0.4));\n  vec3 tmpvar_34;\n  tmpvar_34.x = dy_2.z;\n  tmpvar_34.y = dx_3.y;\n  tmpvar_34.z = dz_1.x;\n  vec4 tmpvar_35;\n  tmpvar_35 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_34) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_5.x > (q26 * q13)) && (ret_5.x <= (q23 * q11)))) {\n    ret_5.z = (ret_5.z - (tmpvar_35.x * 0.5));\n  };\n  if (((ret_5.y > (q25 * q11)) && (ret_5.y <= (q22 * q12)))) {\n    ret_5.x = (ret_5.x - (tmpvar_35.y * 0.5));\n  };\n  if (((ret_5.z > (q24 * q12)) && (ret_5.z <= (q21 * q13)))) {\n    ret_5.y = (ret_5.y - (tmpvar_35.z * 0.5));\n  };\n  ret_5 = (1.0 - mix (ret_5, vec3(0.9, 0.9, 1.0), vec3((1.0 - texture (sampler_main, \n    (tmpvar_28.yx + dz_1)\n  ).z))));\n  vec4 tmpvar_36;\n  tmpvar_36.w = 1.0;\n  tmpvar_36.xyz = ret_5;\n  ret = tmpvar_36.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*4;\n    float3 dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) );\nfloat2 dz = float2(dx.x,dy.x)*texsize.zw;\n\n//ret = GetPixel(uv);\nret = 0;\nret.x = tex2d(sampler_fw_main,uv - dz).x - 0.0 - (GetBlur3(uv).x-GetBlur1(uv+dz).x) ;\n\ndz = -float2(dx.y,dy.y)*texsize.zw;\nret.y = tex2d(sampler_fw_main,uv - dz).y - 0.06 - (GetBlur2(uv).y-GetBlur1(uv+dz).y)*1.3 ;\n\nfloat zoom = 1.8-(bass_att-treb_att)*0.015;\nfloat2 cntr = float2(0,0);\nfloat2 c = float2(0.28,0.4);\n\n float2 my_uv2 = (uv_orig-0.5-cntr)*zoom; // using uv_orig here - no contortion to the nice julia island\n my_uv2 = float2(my_uv2.x*my_uv2.x - my_uv2.y*my_uv2.y, 2*my_uv2.x*my_uv2.y) + c; // u -> u^2 + c\nuv = my_uv2;\nd = texsize.zw*4;\ndx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) );\ndy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) );\ndz = float2(dx.z,dy.z)*texsize.zw*1;\n\nret.z = GetPixel(saturate(my_uv2+dz)).z - 0.014;\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((float3(dy.y,dz.x,dx.x).xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \nret-=slow_roam_sin*roam_cos.wzy*.4;\n\n}","comp_hlsl":"float2 complex_div(float2 numerator, float2 denominator){\n   return float2( numerator.x*denominator.x + numerator.y*denominator.y,\n                  numerator.y*denominator.x - numerator.x*denominator.y)/\n          (denominator.x*denominator.x + denominator.y*denominator.y);\n}\n\nfloat2 uv_polar(float2 domain, float2 center){\n   float2 c = domain - center;\n   float rad_hq = length(c);\n   float ang_hq = atan2(c.x,c.y);\n   return float2(ang_hq*M_INV_PI_2, rad_hq);\n}\n\nfloat2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){\n   float2 polar = uv_polar(domain, center);\n   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);\n}\n\nfloat2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){\n   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;\n}\n\nfloat2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){\n   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);\n   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);\n}\n\n\nfloat2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){\n   float2 uv_r = (domain-center);\n   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;\n}\n\n\nshader_body\n{\nfloat2 uvo = uv;\n\nfloat2 rotate_uv = 0.5+uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q3, q4, 2);\nfloat2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.3, float2(q11,q12));\nfloat2 mirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));\n\nfloat2 d = texsize.zw*3;\nfloat3 dx = ( 2*GetBlur1(mirror_uv+float2(1,0)*d)-2*GetBlur1(mirror_uv-float2(1,0)*d) );\nfloat3 dy = ( 2*GetBlur1(mirror_uv+float2(0,1)*d)-2*GetBlur1(mirror_uv-float2(0,1)*d) );\n\nmirror_uv += float2(dx.x,dy.x)*texsize.zw*4;\n\nfloat3 aura = pow(hue_shader,4)*1.4;\nfloat3 glow = 3;\nfloat3 blob = float3(1,0.75,0)*0;\n\nfloat2 uv_red = mirror_uv;\nret = lerp(ret,1,(GetBlur1(uv_red).x)*(1-GetBlur2(uv_red).x)*aura);\nret = lerp(blob, ret, GetPixel(uv_red).x);\nret += (1-GetPixel(uv_red).x)*GetBlur1(uv_red).x*glow;\n\nmirror_uv-= float2(dx.x,dy.x)*texsize.zw*24;\ndx = ( 2*GetBlur1(mirror_uv+float2(1,0)*d)-2*GetBlur1(mirror_uv-float2(1,0)*d) );\ndy = ( 2*GetBlur1(mirror_uv+float2(0,1)*d)-2*GetBlur1(mirror_uv-float2(0,1)*d) );\nfloat2 dz = +float2(-dx.y,dy.y)*0.25;\nfloat3 bg = lerp(float3(1,0.7,0.2),float3(0.15,0,0.5),mirror_uv.x*0.8 - mirror_uv.y + 0.75+dz.x+dz.y-0.1)*(GetPixel(mirror_uv).y);\nret = lerp(ret,1,bg);\n\nmirror_uv = uv_rotate(0.5 + (uvo-0.5)*aspect.wz, 0.5, q3, q4, 1).yx;\n\nd = texsize.zw;\ndx = ( 2*GetPixel(mirror_uv+float2(1,0)*d)-2*GetPixel(mirror_uv-float2(1,0)*d) );\ndy = ( 2*GetPixel(mirror_uv+float2(0,1)*d)-2*GetPixel(mirror_uv-float2(0,1)*d) );\ndz = -float2(dx.z,dy.z);\n\nret-=slow_roam_sin.wzy*roam_cos*.4;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((float3(dy.z,dx.y,dz.x)*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret = 1-lerp(ret,float3(0.9,0.9,1),1-GetPixel(mirror_uv+dz).z) ;\n}"}