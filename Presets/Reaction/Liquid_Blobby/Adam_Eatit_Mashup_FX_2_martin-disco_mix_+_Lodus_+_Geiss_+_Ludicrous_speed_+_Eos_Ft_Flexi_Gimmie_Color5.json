{"version":2,"baseVals":{"rating":5,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":100,"warpscale":0.089,"zoomexp":0.59124,"zoom":1.00951,"warp":0.35949,"sy":1.00183,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":6.4,"mv_y":43.2,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"rad":0.22167,"r":0.8,"b":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=.5+q4;y=.5+q5;","init_eqs_eel":"","frame_eqs_eel":"x=.5+q4;y=.5+q5;"},{"baseVals":{"textured":1,"rad":0.44484,"tex_zoom":0.81954,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_ang=0.01;\nx=.5+q4;y=.5+q5;","init_eqs_eel":"","frame_eqs_eel":"tex_ang=0.01;\nx=.5+q4;y=.5+q5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_str":"a.xp=0;a.y1=0;a.yp=0;a.x1=0;a.scale=0;a.scale1=0;a.q5=0;a.flip=0;a.q4=0;a.scale2=0;a.scale3=0;a.x2=0;a.y2=0;","frame_eqs_str":"","point_eqs_str":"a.flip+=1;a.flip=.00001<Math.abs(above(a.flip,1))?0:a.flip;a.xp=Math.sin(6.283*a.sample);a.yp=Math.cos(6.283*a.sample);a.scale1=Math.sin(18.849*a.sample);a.scale2=Math.sin(6.283*a.sample*9);a.scale3=Math.sin(6.283*a.sample*5);a.scale=a.scale1+.7*a.scale2+.4*a.scale3;a.scale*=.5;a.xp*=a.scale;a.yp*=a.scale;a.x1=.25*a.xp+.5;a.y1=.33325*a.yp+.5;a.x2=.5+a.q4;a.y2=.5+a.q5;a.x=a.x1*a.flip+a.x2*(1-a.flip);a.y=a.y1*a.flip+a.y2*(1-a.flip);a.a=.05*a.flip;a.r=.5*Math.sin(a.time)+.5;a.g=\n.5*Math.sin(a.time+2.1)+.5;a.b=.5*Math.sin(a.time+4.2)+.5;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"flip=flip+1;\nflip=if(above(flip,1),0,flip);\n\nxp=sin(sample*6.283);\nyp=cos(sample*6.283);\n\nscale1=sin(sample*6.283*3);\nscale2=sin(sample*6.283*9);\nscale3=sin(sample*6.283*5);\nscale=scale1+scale2*0.7+scale3*0.4;\nscale=scale*0.5;\n\nxp=xp*scale;\nyp=yp*scale;\n\nx1=xp*0.25 +0.5;\ny1=yp*0.25*1.333 + 0.5;\nx2=0.5+q4;\ny2=0.5+q5;\nx=x1*flip + x2*(1-flip);\ny=y1*flip + y2*(1-flip);\n\na=flip*0.05;\nr=sin(time)*0.5+0.5;\ng=sin(time+2.1)*0.5+0.5;\nb=sin(time+4.2)*0.5+0.5;"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_str":"a.xp=0;a.y1=0;a.yp=0;a.x1=0;a.scale=0;a.scale1=0;a.q5=0;a.flip=0;a.q4=0;a.scale2=0;a.scale3=0;a.x2=0;a.y2=0;","frame_eqs_str":"","point_eqs_str":"a.flip+=1;a.flip=.00001<Math.abs(above(a.flip,1))?0:a.flip;a.xp=Math.sin(6.283*a.sample);a.yp=Math.cos(6.283*a.sample);a.scale1=Math.sin(18.849*a.sample+.2*a.time);a.scale2=Math.sin(6.283*a.sample*9+a.time);a.scale3=Math.sin(6.283*a.sample*5-a.time);a.scale=a.scale1+.7*a.scale2+.4*a.scale3;a.scale*=.5;a.xp*=a.scale;a.yp*=a.scale;a.x1=.25*a.xp+.5;a.y1=.33325*a.yp+.5;a.x2=.5+a.q4;a.y2=.5+a.q5;a.x=a.x1*a.flip+a.x2*(1-a.flip);a.y=a.y1*a.flip+a.y2*(1-a.flip);a.a=.05*a.flip;a.r=.5*\nMath.sin(a.time)+.5;a.g=.5*Math.sin(a.time+2.1)+.5;a.b=.5*Math.sin(a.time+4.2)+.5;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"flip=flip+1;\nflip=if(above(flip,1),0,flip);\n\nxp=sin(sample*6.283);\nyp=cos(sample*6.283);\n\nscale1=sin(sample*6.283*3+time*0.2);\nscale2=sin(sample*6.283*9+time);\nscale3=sin(sample*6.283*5-time);\nscale=scale1+scale2*0.7+scale3*0.4;\nscale=scale*0.5;\n\nxp=xp*scale;\nyp=yp*scale;\n\nx1=xp*0.25 +0.5;\ny1=yp*0.25*1.333 + 0.5;\nx2=0.5+q4;\ny2=0.5+q5;\nx=x1*flip + x2*(1-flip);\ny=y1*flip + y2*(1-flip);\n\na=flip*0.05;\nr=sin(time)*0.5+0.5;\ng=sin(time+2.1)*0.5+0.5;\nb=sin(time+4.2)*0.5+0.5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r=.5*a.bass;a.wave_b=.5*a.bass;a.rot+=.02*(rand(10)-5)*a.treb;","pixel_eqs_str":"a.zoom+=above(a.y,.5)*Math.sin(a.time)*.1;a.zoom+=below(a.y,.5)*Math.cos(a.time)*.1;","init_eqs_eel":"","frame_eqs_eel":"wave_r=bass*.5;\nwave_b=bass*.5;\nrot=rot+((rand(10)-5)*.02*treb);","pixel_eqs_eel":"zoom=zoom+(above(y,.5)*sin(time)*.1);\nzoom=zoom+(below(y,.5)*cos(time)*.1);","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  , vec3(0.32, 0.49, 0.29))));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 8.0)\n   + \n    (rand_frame * 6.0)\n  .xy)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.1 * (vec3((0.1 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_3.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv + (tmpvar_3 * 0.55));\n  vec3 tmpvar_5;\n  tmpvar_5 = mix (ret_1, (1.0 - ret_1), ((0.7 * \n    ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1)\n  ) + (0.2 * texture (sampler_main, uv).xyz)));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (tmpvar_5, ((\n    (tmpvar_5 - (0.1 * ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3)))\n   + \n    (0.1 * ((texture (sampler_blur1, (\n      (tmpvar_4 * 1.25)\n     - 0.125)).xyz * scale1) + bias1))\n  ) + (0.42 * texture (sampler_main, tmpvar_4).xyz)), vec3(0.25, 0.25, 0.25));\n  vec3 x_7;\n  x_7 = (tmpvar_6 - 0.5);\n  ret_1 = (tmpvar_6 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) + 1.25);\n  ret_1 = (ret_1 * (ret_1 * 0.45));\n  ret_1 = (ret_1 * mix (ret_1, (\n    (1.3 * ret_1)\n   * \n    ((((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1)) - (0.25 * ((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2)))\n  ), pow (hue_shader.zxy, ret_1)));\n  ret_1 = (ret_1 + 0.03);\n  ret_1 = (ret_1 * ret_1);\n  ret_1 = (ret_1 * hue_shader.zxy);\n  ret_1 = (ret_1 * 1.75);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_1;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .01*lum(GetBlur1(uv))*float2 (0,1);\n\n\nuv6 = .4*sin(uv*8+rand_frame*6);\nmus = .1/(length(uv6));\nmus *= (1+roam_cos)/2;\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .1*mus;\n//float2 uv2 = (uv_orig-.5)-float2(.5,.5+0.1*q25);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"shader_body\n{\n\n//Code bits by Flexi and Geiss\n\n    float2 d = texsize.zw*8;\n    float1 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) ).y;\n    float1 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) ).y;\n    float2 uv_y = uv+float2(dx,dy)*0.55;  \n    float2 uv_y2 = (uv_y*1.25)-.125;  \n\n  \n    ret = lerp(ret,1-ret,.7*GetBlur1(uv_y)+.2*GetPixel(uv));\n    ret = lerp(ret,ret-.1*GetBlur3(uv_y)+.1*GetBlur1(uv_y2)+.42*GetPixel(uv_y),.25);\n    //ret *= .75;\n    ret *= saturate(length(ret-0.5)*5);\n    //ret = ret.xy;\n    ret = lum(ret);\n    ret += 1.25;\n    ret *= ret*.45;\n    float3 mask = GetBlur3(uv)-GetBlur1(uv)-.25*GetBlur2(uv_y);\n    ret *= lerp(ret,1.3*ret*mask,pow(hue_shader.zxy,ret));\n    ret += .03;\n    ret *= ret;\n    ret *= hue_shader.zxy;\n    ret *= 1.75;\n\n}"}