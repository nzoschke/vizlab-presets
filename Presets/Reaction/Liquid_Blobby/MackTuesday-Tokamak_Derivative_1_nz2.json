{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":1.0039,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"additive":1,"num_inst":2,"x":0.49,"rad":0.11589,"tex_zoom":4.36077,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = rand(1000)/1000;\ny = rand(1000)/1000;\nang = rand(150)/100;","init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\ny = rand(1000)/1000;\nang = rand(150)/100;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"r":0,"g":0.3,"b":0.75,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"r":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\nma=ma-(above(mid,1)*3.1415*.05*mid);\n\nmx=mx+(.0001*cos(ma));\nmy=my+(.0001*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"g":0.5,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.3));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0004*cos(ma));\nmy=my+(.0004*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"r":0.4,"g":0,"b":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));"}],"init_eqs_str":"a.du=0;a.q1=0;a.dv=0;a.q2=0;a.dist=0;a.ang2=0;a.mult=0;","frame_eqs_str":"a.q1=2*a.cx-1+.6*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.q2=2*a.cy-1+.6*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.warp=0;","pixel_eqs_str":"a.du=2*a.x-1-a.q1;a.dv=2*a.y-1-a.q2;a.dist=sqrt(a.du*a.du+a.dv*a.dv);a.ang2=Math.atan2(a.du,a.dv)+.15*a.time;a.mult=.05*Math.sin(.05*a.dist);a.dx=a.mult*Math.sin(2*a.ang2-1.5);a.dy=a.mult*Math.cos(2*a.ang2-1.5);","init_eqs_eel":"","frame_eqs_eel":"q1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\nwarp = 0;","pixel_eqs_eel":"du = (x*2-1) - q1;\ndv = (y*2-1) - q2;\ndist = sqrt(du*du+dv*dv);\nang2 = atan2(du,dv) + time*0.15;\nmult = 0.05*sin(dist*0.05);\ndx = mult*sin(ang2*2-1.5);\ndy = mult*cos(ang2*2-1.5);","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.xy * texsize_noise_lq.zw);\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv_orig * tmpvar_2) * 0.1);\n  ret_1 = ((texture (sampler_main, uv).xyz * 0.7) + 0.15);\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \n    (((tmpvar_3 * tmpvar_2) / (sqrt(\n      dot (tmpvar_3, tmpvar_3)\n    ) + 0.01)) * 0.1)\n  ) - 0.5) * 0.05).xyz);\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \n    (((uv_orig * tmpvar_2) * 1.5) + rand_frame.xy)\n  ) - 0.5) * 0.035).xyz);\n  ret_1 = (ret_1 - min (min (ret_1.x, ret_1.y), ret_1.z));\n  ret_1 = (ret_1 / (max (\n    max (ret_1.x, ret_1.y)\n  , ret_1.z) + 0.01));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.0;\n  tmpvar_2.x = texsize.z;\n  vec2 tmpvar_3;\n  tmpvar_3.x = 0.0;\n  tmpvar_3.y = texsize.w;\n  vec3 x_4;\n  x_4 = (1.0 - ((\n    (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz)\n   + \n    (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz)\n  ) * 0.05));\n  ret_1 = (clamp ((\n    (45.0 * ((0.294 * sqrt(\n      dot (x_4, x_4)\n    )) - 0.5))\n   + 0.02), 0.0, 1.0) * (1.1 + (0.9 * texture (sampler_main, uv).xyz)));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noisevol_hq, (((uv.xyy * vec3(0.035, 0.035, 0.0)) * (texsize.xyy * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\n  if ((ret_1.x > 0.3)) {\n    ret_1.z = (ret_1.z * (tmpvar_5 * 0.2).x);\n  };\n  if ((ret_1.y > 0.8)) {\n    ret_1.y = (ret_1.y * (tmpvar_5 * 0.8).x);\n  };\n  if ((ret_1.z < 0.5)) {\n    ret_1.x = (ret_1.x + (tmpvar_5 * 1.2).x);\n  };\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 texpix = texsize.xy * texsize_noise_lq.zw;\nfloat2 dither_uv_big = uv_orig*texpix*0.1;// + rand_frame.xy;\ndither_uv_big = dither_uv_big*texpix/(length(dither_uv_big)+0.01)*0.1;\nfloat2 dither_uv = uv_orig*texpix*1.5 + rand_frame.xy;\n//uv -= (float2(0,1)*(length(GetPixel(uv)-0.5))*texsize.zw*64) * 0.03;\nret = GetPixel(uv) * 0.7 + 0.15;\nret += (tex2D(sampler_noise_lq, dither_uv_big)-0.5) * 0.05;\nret += (tex2D(sampler_noise_lq, dither_uv)-0.5) * 0.035;\nfloat minchan = min(min(ret.x, ret.y), ret.z);\nret -= minchan;\nfloat maxchan = max(max(ret.x, ret.y), ret.z);\nret /= maxchan + 0.01;\n}","comp_hlsl":"shader_body\n{\n\nfloat2 uv1 = uv-.5;\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nfloat3 dx = GetPixel (uv-hor) - GetPixel (uv+hor);\nfloat3 dy = GetPixel (uv-ver) - GetPixel (uv+ver);\nfloat3 dz = (dx + dy) * 0.05;\n\nfloat dots = saturate(45.0*(0.294*length(1.0 - dz) - 0.5) + 0.02);\n\nret = dots * (1.1 + 0.9 * GetPixel(uv));\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*.7\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.2\n                     );\nif(ret.x>.3)ret.z*=(noise2)*.2;\nif(ret.y>.8)ret.y*=(noise2)*.8;\nif(ret.z<.5)ret.x+=(noise2)*1.2; \n}"}