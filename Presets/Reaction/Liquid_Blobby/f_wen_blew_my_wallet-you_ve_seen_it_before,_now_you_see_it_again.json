{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":5.428,"warpscale":6.986,"zoomexp":1.48886,"zoom":1.00034,"warp":2.15546,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"g2":0,"border_r":0.4,"border_g":0.5},"init_eqs_str":"a.frametest=0;a.monitor=0;","frame_eqs_str":"a.r=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.234*a.time):.1*Math.sin(1.234*a.time);a.g=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.345*a.time):.1*Math.sin(1.345*a.time);a.b=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.456*a.time):.1*Math.sin(1.456*a.time);a.border_a=.25*Math.sin(a.time);a.ang+=.67*Math.sin(a.time);a.rad+=.1*a.bass;a.frametest=equal(mod(a.frame,2),0);a.x-=.1*Math.tan(3.14*a.time);a.y-=.1*Math.sin(3.14*a.time);a.x=.00001<Math.abs(a.frametest)?\na.x:1-a.x;a.y=.00001<Math.abs(a.frametest)?a.y:1-a.y;a.r=.00001<Math.abs(a.frametest)?a.r:a.b;a.b=.00001<Math.abs(a.frametest)?a.b:a.g;a.monitor=a.frametest;","init_eqs_eel":"","frame_eqs_eel":"r = if(above(bass, 1.2), .5*sin(time*1.234), .1*sin(time*1.234));\ng = if(above(bass, 1.2), .5*sin(time*1.345), .1*sin(time*1.345));\nb = if(above(bass, 1.2), .5*sin(time*1.456), .1*sin(time*1.456));\nborder_a = .25*sin(time);\n\nang = ang + .67*sin(time);\nrad = rad + bass*.1;\n\nframetest = equal(frame%2, 0);\n\n//x = if(frametest, x - .25*sin(time), x + .25*sin(time);\nx = x - .1*tan(time*3.14);\ny = y - .1*sin(time*3.14);\nx = if(frametest, x, 1-x);\ny = if(frametest, y, 1-y);\nr = if(frametest, r, b);\nb = if(frametest, b, g);\n\nmonitor = frametest;"},{"baseVals":{"enabled":1,"additive":1,"rad":2.41456,"g2":0,"border_r":0.4,"border_g":0.5},"init_eqs_str":"a.frametest=0;a.monitor=0;","frame_eqs_str":"a.r=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(2.234*a.time):0;a.g=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(2.345*a.time):0;a.b=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(2.456*a.time):0;a.border_a=.25*Math.sin(a.time);a.ang+=.67*Math.sin(a.time);a.rad+=.1*a.bass;a.frametest=equal(mod(a.frame,2),0);a.x-=.2*Math.sin(2*a.time);a.y-=.2*Math.tan(2*a.time);a.x=.00001<Math.abs(a.frametest)?a.x:1-a.x;a.y=.00001<Math.abs(a.frametest)?a.y:1-a.y;a.r=.00001<Math.abs(a.frametest)?\na.r:a.b;a.b=.00001<Math.abs(a.frametest)?a.b:a.g;a.monitor=a.frametest;","init_eqs_eel":"","frame_eqs_eel":"r = if(above(bass, 1.2), .5*sin(time*2.234), 0);\ng = if(above(bass, 1.2), .5*sin(time*2.345), 0);\nb = if(above(bass, 1.2), .5*sin(time*2.456), 0);\nborder_a = .25*sin(time);\n\nang = ang + .67*sin(time);\nrad = rad + bass*.1;\n\nframetest = equal(frame%2, 0);\n\n//x = if(frametest, x - .25*sin(time), x + .25*sin(time);\nx = x - .2*sin(time*2);\ny = y - .2*tan(time*2);\nx = if(frametest, x, 1-x);\ny = if(frametest, y, 1-y);\nr = if(frametest, r, b);\nb = if(frametest, b, g);\n\nmonitor = frametest;"},{"baseVals":{"enabled":1,"sides":30,"additive":1,"textured":1,"rad":0.44484,"r":0,"a2":1},"init_eqs_str":"","frame_eqs_str":"a.r2=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.523*a.time):1;a.g2=.00001<Math.abs(above(a.bass,1.2))?.5*Math.sin(1.983*a.time):1;a.b2=.00001<Math.abs(above(a.bass,1.2))?.75+.5*Math.sin(1.194*a.time):1;a.rad-=.4*a.bass_att;a.x+=.5*Math.sin(a.time);a.y-=.2*Math.cos(a.time);","init_eqs_eel":"","frame_eqs_eel":"r2 = if(above(bass, 1.2), 0.5*sin(time*1.523), 1);\ng2 = if(above(bass, 1.2), 0.5*sin(time*1.983), 1);\nb2 = if(above(bass, 1.2), 0.75+.5*sin(time*1.194), 1);\nrad = rad - .4*bass_att;\n\nx = x +.5*sin(time);\ny = y -.2*cos(time);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tg3=0;a.rg2=0;a.pfdx_r=0;a.pfthresh=0;a.ocog=0;a.thresh=0;a.q1=0;a.q5=0;a.cog=0;a.x=0;a.dy_r=0;a.tg2=0;a.tg1=0;a.rg3=0;a.pfdy_r=0;a.rg1=0;a.q4=0;a.xy1=0;a.dx_r=0;a.y=0;a.q2=0;a.q3=0;a.xy2=0;","frame_eqs_str":"a.wave_r+=.5*(.6*Math.sin(1.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.5*(.6*Math.sin(.909*a.time)+.4*Math.sin(1.956*a.time));a.wave_b+=.5*(.6*Math.sin(2.91*a.time)+.4*Math.sin(.992*a.time));a.cog=a.ocog+.005*(a.bass+a.bass_att+a.bass*a.bass_att-2);a.ocog=below(a.cog,3E4)*a.cog;a.q4=a.cog;a.xy1=a.x*above(Math.sin(a.time),0)+a.y*below(Math.sin(a.time),0);a.xy2=a.x*below(Math.sin(a.time),0)+a.y*above(Math.sin(a.time),0);a.q1=a.xy1;a.q2=a.xy2;a.thresh=2*above(a.bass_att,\na.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.pfthresh=2*above(a.bass_att,a.pfthresh)+(1-above(a.bass_att,a.pfthresh))*(.96*(a.pfthresh-1.3)+1.3);a.pfdx_r=.015*equal(a.pfthresh,2)*Math.sin(5*a.time)+(1-equal(a.pfthresh,2))*a.pfdx_r;a.pfdy_r=.015*equal(a.pfthresh,2)*Math.sin(6*a.time)+(1-equal(a.pfthresh,2))*a.pfdy_r;a.rg1=\nMath.abs(Math.sin(4.2*a.q4));a.rg2=0*above(a.rg1,.5)+1*below(a.rg1,.5);a.rg3=.00001<Math.abs(equal(a.pfthresh,2))?a.rg2:a.rg3;a.q1=a.wave_r;a.q2=a.wave_g;a.q3=a.wave_b;a.q5=a.rg3;a.ob_r=.1*Math.floor(rand(100));a.ob_g=.1*Math.floor(rand(100));a.ob_b=.1*Math.floor(rand(100));","pixel_eqs_str":"a['thresh']=((above(a['bass_att'], a['thresh'])*2)+((1-above(a['bass_att'], a['thresh']))*(((a['thresh']-1.3)*0.96)+1.3))); a['dx_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((5*a['time'])))+((1-equal(a['thresh'], 2))*a['dx_r'])); a['dy_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((6*a['time'])))+((1-equal(a['thresh'], 2))*a['dy_r'])); a['zoom']=(a['zoom']+Math.abs((0.05*(((3*(0.5-a['rad']))*a['bass_att'])*4)))); a['zoom']=(a['zoom']+((Math.abs(above(a['bass_att'], 1.2))>0.00001)?((0.06*Math.sin((24*a['time'])))):(0))); a['thresh']=((above(a['bass_att'], a['thresh'])*2)+((1-above(a['bass_att'], a['thresh']))*(((a['thresh']-1.3)*0.96)+1.3))); a['dx_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((5*a['time'])))+((1-equal(a['thresh'], 2))*a['dx_r'])); a['dy_r']=(((equal(a['thresh'], 2)*0.015)*Math.sin((6*a['time'])))+((1-equal(a['thresh'], 2))*a['dy_r'])); a['tg1']=Math.abs(Math.sin(a['time'])); a['tg2']=(((8*above(a['tg1'], 0.75))+(12*below(a['tg1'], 0.25)))+((16*above(a['tg1'], 0.25))*below(a['tg1'], 0.5))); ((24*above(a['tg1'], 0.5))*below(a['tg1'], 0.75)) a['tg3']=((Math.abs(equal(a['thresh'], 2))>0.00001)?(a['tg2']):(a['tg3'])); a['zoom']=(a['zoom']+((0.1*Math.abs((a['dx_r']*a['q4'])))*above(a['rad'], (0.5*Math.sin((8*a['q4'])))))); a['dx']=(a['dx']+((a['dx_r']*Math.sin(Math.sin((3+(a['tg3']*a['y'])))))*Math.sin((3+(a['tg3']*a['x']))))); a['dy']=(a['dy']+((a['dy_r']*Math.sin(Math.sin((3+(a['tg3']*a['y'])))))*Math.sin((3+(a['tg3']+a['x']))))); a['zoom']=(a['zoom']-(0.3*Math.abs(Math.cos((3*a['q4']))))); a['rot']=(a['rot']+(((0.4*Math.sin(a['q4']))*12)*a['dx_r']));","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.500*(0.60*sin(1.933*time) + 0.40*sin(1.045*time));\nwave_g = wave_g + 0.500*(0.60*sin(0.909*time) + 0.40*sin(1.956*time));\nwave_b = wave_b + 0.500*(0.60*sin(2.910*time) + 0.40*sin(0.992*time));\n\n\ncog = ocog+0.005*(bass+bass_att+(bass*bass_att)-2);\nocog = below(cog,30000)*cog;\nq4 = cog;\n\nxy1 = x*above(sin(time),0)+y*below(sin(time),0);\nxy2 = x*below(sin(time),0)+y*above(sin(time),0);\nq1 = xy1;\nq2 = xy2;\n\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\n//echo_orient = echo_orient + 50*dy_r;\n//echo_alpha = echo_alpha + 50*dx_r;\n\n//decay = min(0.995+abs(0.05*sin(time)),1);\npfthresh = above(bass_att,pfthresh)*2+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);\npfdx_r = equal(pfthresh,2)*0.015*sin(5*time)+(1-equal(pfthresh,2))*pfdx_r;\npfdy_r = equal(pfthresh,2)*0.015*sin(6*time)+(1-equal(pfthresh,2))*pfdy_r;\nrg1 = abs(sin(4.2*q4));\nrg2 = 0*above(rg1,0.5) + 1*below(rg1,0.5);\nrg3 = if(equal(pfthresh,2),rg2,rg3);\n//invert = rg3;\n//darken = 1-invert;\n//brighten = invert;\nq1 = wave_r;\nq2 = wave_g;\nq3 = wave_b;\nq5 = rg3;\n\nob_r = int(rand(100))*0.1;\nob_g = int(rand(100))*0.1;\nob_b = int(rand(100))*0.1;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\n\nzoom = zoom + abs(0.05*(3*(0.5-rad)*bass_att*4));\nzoom = zoom + if(above(bass_att,1.2),(0.06*sin(24*time)),0);\n\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\ntg1 = abs(sin(time));\ntg2 = 8*above(tg1,0.75) + 12*below(tg1,0.25) + 16*above(tg1,0.25)*below(tg1,0.5);\n24*above(tg1,0.5)*below(tg1,0.75);\ntg3 = if(equal(thresh,2),tg2,tg3);\n\nzoom = zoom + 0.1*abs(dx_r*q4)*above(rad,0.5*sin(8*q4));\ndx = dx + dx_r*sin(sin(3+(tg3*y)))*(sin(3+(tg3*x)));\ndy = dy + dy_r*sin(sin(3+(tg3*y)))*(sin(3+(tg3+x)));\nzoom = zoom - 0.3*abs(cos(3*q4));\nrot = rot + 0.4*sin(q4)*12*dx_r;","warp":" shader_body { \n  float conwab_1;\n  float conwag_2;\n  float conwar_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = -(texsize.zw);\n  vec2 tmpvar_6;\n  tmpvar_6 = (vec2(0.0, -1.0) * texsize.zw);\n  conwar_3 = (texture (sampler_pw_main, (uv + tmpvar_5)).x + texture (sampler_pw_main, (uv + tmpvar_6)).x);\n  vec2 tmpvar_7;\n  tmpvar_7 = (vec2(1.0, -1.0) * texsize.zw);\n  conwar_3 = (conwar_3 + texture (sampler_pw_main, (uv + tmpvar_7)).x);\n  vec2 tmpvar_8;\n  tmpvar_8 = (vec2(-1.0, 0.0) * texsize.zw);\n  conwar_3 = (conwar_3 + texture (sampler_pw_main, (uv + tmpvar_8)).x);\n  vec2 tmpvar_9;\n  tmpvar_9 = (vec2(1.0, 0.0) * texsize.zw);\n  conwar_3 = (conwar_3 + texture (sampler_pw_main, (uv + tmpvar_9)).x);\n  vec2 tmpvar_10;\n  tmpvar_10 = (vec2(-1.0, 1.0) * texsize.zw);\n  conwar_3 = (conwar_3 + texture (sampler_pw_main, (uv + tmpvar_10)).x);\n  conwar_3 = (conwar_3 + texture (sampler_pw_main, (uv + (vec2(0.0, 1.0) * texsize.zw))).x);\n  vec2 tmpvar_11;\n  tmpvar_11 = (uv + texsize.zw);\n  conwar_3 = (conwar_3 + texture (sampler_pw_main, tmpvar_11).x);\n  conwag_2 = (texture (sampler_pw_main, (uv + tmpvar_10)).z + texture (sampler_pw_main, (uv + tmpvar_7)).z);\n  conwag_2 = (conwag_2 + texture (sampler_pw_main, (uv + tmpvar_7)).z);\n  conwag_2 = (conwag_2 + texture (sampler_pw_main, (uv + tmpvar_8)).z);\n  conwag_2 = (conwag_2 + texture (sampler_pw_main, (uv + tmpvar_9)).z);\n  conwag_2 = (conwag_2 + texture (sampler_pw_main, (uv + tmpvar_10)).z);\n  conwag_2 = (conwag_2 + texture (sampler_pw_main, (uv + tmpvar_10)).z);\n  conwag_2 = (conwag_2 + texture (sampler_pw_main, (uv + tmpvar_6)).z);\n  conwab_1 = (texture (sampler_pw_main, (uv + tmpvar_7)).y + texture (sampler_pw_main, tmpvar_11).y);\n  conwab_1 = (conwab_1 + texture (sampler_pw_main, (uv + tmpvar_6)).y);\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_pw_main, uv);\n  conwab_1 = (conwab_1 + tmpvar_12.y);\n  conwab_1 = (conwab_1 + texture (sampler_pw_main, (uv + tmpvar_5)).y);\n  conwab_1 = (conwab_1 + texture (sampler_pw_main, (uv + tmpvar_10)).y);\n  conwab_1 = (conwab_1 + texture (sampler_pw_main, (uv + tmpvar_10)).y);\n  conwab_1 = (conwab_1 + texture (sampler_pw_main, (uv + tmpvar_7)).y);\n  float tmpvar_13;\n  tmpvar_13 = clamp (tmpvar_12.x, 0.0, 1.0);\n  ret_4.x = (clamp ((1.0 - \n    abs((conwar_3 - 3.0))\n  ), 0.0, 1.0) * ((\n    (1.0 + roam_sin.z)\n   * 0.75) - tmpvar_13));\n  ret_4.y = (clamp ((1.0 - \n    abs((conwag_2 - 3.0))\n  ), 0.0, 1.0) * ((\n    (1.0 + roam_cos.y)\n   * 0.8) - tmpvar_13));\n  ret_4.z = (clamp ((1.0 - \n    abs((conwab_1 - 3.0))\n  ), 0.0, 1.0) * ((\n    (1.0 + roam_sin.x)\n   * 0.86) - tmpvar_13));\n  ret_4.x = (ret_4.x + (clamp (\n    max ((1.0 - abs((conwar_3 - 2.0))), (((1.0 + roam_cos.z) * 0.93) - abs((conwag_2 - 3.0))))\n  , 0.0, 1.0) * tmpvar_13));\n  ret_4.y = (ret_4.y + (clamp (\n    max ((1.0 - abs((conwag_2 - 2.0))), (((1.0 + roam_sin.y) * 1.01) - abs((conwab_1 - 3.0))))\n  , 0.0, 1.0) * tmpvar_13));\n  ret_4.z = (ret_4.z + (clamp (\n    max ((1.0 - abs((conwab_1 - 2.0))), (((1.0 + roam_cos.x) * 1.1) - abs((conwar_3 - 3.0))))\n  , 0.0, 1.0) * tmpvar_13));\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_4;\n  ret = tmpvar_14.xyz;\n }","comp":" shader_body { \n  vec2 uv1_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    (((uv - 0.5) * 2.0) + 1.7)\n  )) - (2.0 * tmpvar_5));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\n  )) * (-0.08 + tmpvar_2)));\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat1 conwar = tex2D( sampler_pw_main, uv + float2(-1,-1)*pixelsize).x;\n       conwar += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).x;\n       conwar += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).x;\n\n       conwar += tex2D( sampler_pw_main, uv + float2(-1,0)*pixelsize).x;\n       conwar += tex2D( sampler_pw_main, uv + float2(1,0)*pixelsize).x;\n\n       conwar += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).x;\n       conwar += tex2D( sampler_pw_main, uv + float2(0,1)*pixelsize).x;\n       conwar += tex2D( sampler_pw_main, uv + float2(1,1)*pixelsize).x;\n\nfloat1 conwag = tex2D( sampler_pw_main, uv + float2(-1, 1)*pixelsize).z;\n       conwag += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).z;\n       conwag += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).z;\n\n       conwag += tex2D( sampler_pw_main, uv + float2(-1,0)*pixelsize).z;\n       conwag += tex2D( sampler_pw_main, uv + float2(1,0)*pixelsize).z;\n\n       conwag += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).z;\n       conwag += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).z;\n       conwag += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).z;\n\nfloat1 conwab = tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).y;\n       conwab += tex2D( sampler_pw_main, uv + float2(1,1)*pixelsize).y;\n       conwab += tex2D( sampler_pw_main, uv + float2(0,-1)*pixelsize).y;\n\n       conwab += tex2D( sampler_pw_main, uv + float2(0,0)*pixelsize).y;\n       conwab += tex2D( sampler_pw_main, uv + float2(-1,-1)*pixelsize).y;\n\n       conwab += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).y;\n       conwab += tex2D( sampler_pw_main, uv + float2(-1,1)*pixelsize).y;\n       conwab += tex2D( sampler_pw_main, uv + float2(1,-1)*pixelsize).y;\n\nfloat1 p = saturate (tex2D( sampler_pw_main, uv).x);\n\n\nret.x = saturate((1-abs(conwar-3)))*((1+roam_sin.z)*.75-p);\nret.y = saturate((1-abs(conwag-3)))*((1+roam_cos.y)*.8-p);\nret.z = saturate((1-abs(conwab-3)))*((1+roam_sin.x)*.86-p);\nret.x += saturate(max(1-abs(conwar-2),(1+roam_cos.z)*.93-abs(conwag-3)))*p;\nret.y += saturate(max(1-abs(conwag-2),(1+roam_sin.y)*1.01-abs(conwab-3)))*p;\nret.z += saturate(max(1-abs(conwab-2),(1+roam_cos.x)*1.10-abs(conwar-3)))*p;\n\n}","comp_hlsl":"shader_body\n{\n\nfloat2 uv1 = uv-.5;\n\nfloat3 ret1 = tex2D(sampler_main, uv) +tex2D(sampler_main, 1-uv)*0;\n\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nfloat dx = GetPixel (uv-hor) - GetPixel (uv+hor);\nfloat dy = GetPixel (uv-ver) - GetPixel (uv+ver);\nfloat2 dz = float2 (dx,dy);\n\nuv1 = .3*cos(uv1*2+1.7) -2*dz;;\nfloat3 dots = saturate(.03/length(uv1));\n\n\nret1 = (-ret1/4) + 6*dots*(-0.08+ret1);\n\nret = ret1;\n}"}