{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":5.42874,"zoom":1.00951,"warp":0.16217,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"r":0,"b":1,"g2":0,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.x=a.q1;a.y=1-a.q2;a.b=1;a.r=.3+.3*Math.sin(1.342*a.time);a.g=.3+.3*Math.sin(1.342*a.time);a.rad=.1*a.treb;","init_eqs_eel":"","frame_eqs_eel":"x=q1;\ny=1-q2;\n\nb = 1;\nr = .3 + .3*sin(time*1.342);\ng = .3 + .3*sin(time*1.342);\n\nrad = treb*.1;"},{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"r":0,"g":1,"g2":0,"border_a":0},"init_eqs_str":"a.q3=0;a.q4=0;","frame_eqs_str":"a.x=a.q3;a.y=1-a.q4;a.g=1;a.b=.5+.5*Math.sin(1.081*a.time);a.r=0;a.rad=.1*a.mid;","init_eqs_eel":"","frame_eqs_eel":"x=q3;\ny=1-q4;\n\ng = 1;\nb = .5 + .5*sin(time*1.081);\nr = 0;\n\nrad = .1*mid;"},{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"g2":0,"border_a":0},"init_eqs_str":"a.q5=0;a.q6=0;","frame_eqs_str":"a.x=a.q5;a.y=1-a.q6;a.r=1;a.g=.4+.4*Math.sin(1.342*a.time);a.b=0;a.rad=.1*a.bass;","init_eqs_eel":"","frame_eqs_eel":"x=q5;\ny=1-q6;\nr = 1;\ng = .4 + .4*sin(time*1.342);\nb = 0;\n\nrad = .1*bass;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":51,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"sep":51,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"sep":51,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"sep":51,"usedots":1,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\ntm = time*.5 + sample*2;\n\nr = .5 + .5*sin(tm*1.132);\ng = .5 + .5*sin(tm*1.121);\nb = .5 + .5*sin(tm*1.187);"}],"init_eqs_str":"a.lbbtime=0;a.tic=0;a.bbtime=0;a.beatb=0;a.vt=0;a.des=0;a.q6=0;a.dbass=0;a.avgbeatrate=0;a.bt=0;a.q1=0;a.q5=0;a.avgvol=0;a.xd=0;a.mid_avg=0;a.dis=0;a.tt=0;a.tin=0;a.beatrate=0;a.bass_avg=0;a.vav=0;a.yd=0;a.an=0;a.q4=0;a.lbass=0;a.mt=0;a.sz=0;a.ra=0;a.rawbeatb=0;a.treb_avg=0;a.db=0;a.vol=0;a.bc=0;a.q2=0;a.q3=0;a.q7=0;a.rb=0;a.mtime=0;a.q8=0;a.avgdb=0;a.beatrate=5;a.avgbeatrate=1;a.bbtime=1;a.lbbtime=.5;a.avgdb=.5;a.vol=1;a.avgvol=.2;a.mtime=1E3;a.tt=1E3*a.treb;a.bt=1E3*a.bass;\na.mt=1E3*a.mid;","frame_eqs_str":"a.db=(a.bass-a.lbass)*a.fps;a.lbass=a.bass;a.avgdb=.99*a.avgdb+.01*Math.abs(a.db);a.rawbeatb=above(a.db,2*a.avgdb);a.beatb=a.rawbeatb*above(a.time-a.lbbtime,.75*a.avgbeatrate)*above(a.bass_att,.3);a.bbtime=a.time*a.beatb;a.beatrate=a.beatb*(a.bbtime-a.lbbtime)+(1-a.beatb)*a.beatrate;a.avgbeatrate=a.beatb*(.999*a.avgbeatrate+.001*a.beatrate)+(1-a.beatb)*a.avgbeatrate;a.lbbtime=a.time*a.beatb+(1-a.beatb)*a.lbbtime;a.bc+=a.beatb;a.vol=a.rawbeatb*(a.db-a.avgdb)*.01;a.avgvol=.99*\na.avgvol+.05*a.vol;a.mtime+=Math.min(.5*a.avgvol,.25);a.warp=0;a.wrap=1;a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.ra=10;a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.rb=1;a.vav=a.tic*(a.vav*(div(1,a.tic)-a.rb)+a.rb*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb_avg;a.mt+=a.tic*a.mid_avg;a.bt+=a.tic*a.bass_avg;a.vt+=a.tic*(a.treb_avg+a.mid_avg+a.bass_avg)*\n.33333;a.sz=.2;a.q1=.5+a.sz*Math.sin(.629*a.tt)-a.sz*Math.sin(.107*a.tt);a.q2=.5+a.sz*Math.sin(.987*a.tt)-a.sz*Math.sin(.456*a.tt);a.q3=.5+a.sz*Math.sin(.654*a.mt)-a.sz*Math.sin(.355*a.mt);a.q4=.5+a.sz*Math.sin(.548*a.mt)-a.sz*Math.sin(.875*a.mt);a.q5=.5+a.sz*Math.sin(.687*a.bt)-a.sz*Math.sin(.318*a.bt);a.q6=.5+a.sz*Math.sin(.465*a.bt)-a.sz*Math.sin(.526*a.bt);a.q7=a.mtime;a.q8=a.dbass;","pixel_eqs_str":"a.xd=a.q1-a.x;a.yd=a.q2-a.y;a.dis=pow(a.xd*a.xd+a.yd*a.yd,.5);a.des=1-.7071068*a.dis;a.des=pow(a.des,10*a.q8)*-a.treb;a.an=Math.acos(div(Math.abs(a.xd),a.dis));a.dx=.01*sign(a.xd)*Math.cos(a.an)*a.des;a.dy=.01*sign(a.yd)*Math.sin(a.an)*a.des;a.dx-=sign(a.yd)*Math.sin(a.q7+a.an)*.001*a.treb_att*a.des;a.dy+=sign(a.xd)*Math.cos(a.q7+a.an)*.001*a.treb*a.des;a.sy=1+a.dx*a.des;a.sx=1-a.dy*a.des;a.xd=a.q3-a.x;a.yd=a.q4-a.y;a.dis=pow(a.xd*a.xd+a.yd*a.yd,.5);a.des=1-.7071068*a.dis;a.des=\npow(a.des,10*a.q8)*-a.mid;a.an=Math.acos(div(Math.abs(a.xd),a.dis));a.dx+=.01*sign(a.xd)*Math.cos(a.an)*a.des;a.dy+=.01*sign(a.yd)*Math.sin(a.an)*a.des;a.dx-=sign(a.yd)*Math.sin(a.q7+a.an)*.001*a.mid_att*a.des;a.dy+=sign(a.xd)*Math.cos(a.q7+a.an)*.001*a.mid*a.des;a.sy=1+a.dx*a.des;a.sx=1-a.dy*a.des;a.xd=a.q5-a.x;a.yd=a.q6-a.y;a.dis=pow(a.xd*a.xd+a.yd*a.yd,.5);a.des=1-.7071068*a.dis;a.des=pow(a.des,10*a.q8)*-a.bass;a.an=Math.acos(div(Math.abs(a.xd),a.dis));a.dx+=.01*sign(a.xd)*Math.cos(a.an)*a.des;\na.dy+=.01*sign(a.yd)*Math.sin(a.an)*a.des;a.dx-=sign(a.yd)*Math.sin(a.q7+a.an)*.001*a.bass_att*a.des;a.dy+=sign(a.xd)*Math.cos(a.q7+a.an)*.001*a.bass*a.des;a.sy=1+a.dx*a.des;a.sx=1-a.dy*a.des;","init_eqs_eel":"beatrate=5;\navgbeatrate=1;\nbbtime=1;\nlbbtime=.5;\navgdb=.5;\nvol=1;\navgvol=.2;\nmtime=1000;\n\ntt=1000*treb;\nbt=1000*bass;\nmt=1000*mid;","frame_eqs_eel":"db=(bass-lbass)*fps;\nlbass=bass;\navgdb=avgdb*.99+abs(db)*.01;\n\n//beatdection\nrawbeatb=above(db,avgdb*2);\nbeatb=rawbeatb*above(time-lbbtime,.75*avgbeatrate)*above(bass_att,.3);\n\n//beatrate calc\nbbtime=time*beatb;\nbeatrate=beatb*(bbtime-lbbtime)+(1-beatb)*beatrate;\navgbeatrate=beatb*(avgbeatrate*.999+beatrate*.001)+(1-beatb)*avgbeatrate;\nlbbtime=time*beatb+(1-beatb)*lbbtime;\n\nbc=bc+beatb;\n\n\n\nvol=(rawbeatb*(db-(avgdb))*.01);\navgvol=avgvol*.99+vol*.05;\n\nmtime=mtime+min(avgvol*.5,.25);\n\n//decay=.99;\nwarp=0;\nwrap=1;\n\n\nwarp = 0;\n\ntic = min(time - tin,.1);\ntin = time;\n\nra = 10;\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\n\nrb = 1;\nvav = tic*(vav*(1/tic - rb) + rb*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb_avg;\nmt = mt + tic*mid_avg;\nbt = bt + tic*bass_avg;\nvt = vt + tic*(treb_avg+mid_avg+bass_avg)*.33333;\n\nsz = .2;\n\nq1 = .5 + sz*sin(tt*.629) - sz*sin(tt*.107);\nq2 = .5 + sz*sin(tt*.987) - sz*sin(tt*.456);\n\nq3 = .5 + sz*sin(mt*.654) - sz*sin(mt*.355);\nq4 = .5 + sz*sin(mt*.548) - sz*sin(mt*.875);\n\nq5 = .5 + sz*sin(bt*.687) - sz*sin(bt*.318);\nq6 = .5 + sz*sin(bt*.465) - sz*sin(bt*.526);\n\n\nq7=mtime;\nq8=dbass;","pixel_eqs_eel":"xd = q1-x;\nyd = q2-y;\n\ndis = pow(xd*xd+yd*yd,.5);\ndes = 1 - dis*.7071068;\ndes = pow(des,10*q8)*-treb;\nan = acos(abs(xd)/dis);\n\ndx = sign(xd)*.01*cos(an)*des;\ndy = sign(yd)*.01*sin(an)*des;\n\n//dy = dy + sign(xd)*treb*.05*cos(an)*des;\n//dx = dx + sign(yd)*treb*.05*sin(an)*des*-1;\n\n\ndx=dx-sign(yd)*sin(q7+an)*.001*treb_att*des;\ndy=dy+sign(xd)*cos(q7+an)*.001*treb*des;\n\nsy=1+dx*des;\nsx=1-dy*des;\n\n\nxd = q3-x;\nyd = q4-y;\n\ndis = pow(xd*xd+yd*yd,.5);\ndes = 1 - dis*.7071068;\ndes = pow(des,10*q8)*-mid;\nan = acos(abs(xd)/dis);\n\ndx = dx + sign(xd)*.01*cos(an)*des;\ndy = dy + sign(yd)*.01*sin(an)*des;\n\n//dy = dy + sign(xd)*mid*.05*cos(an)*des;\n//dx = dx + sign(yd)*mid*.05*sin(an)*des*-1;\n\n\ndx=dx-sign(yd)*sin(q7+an)*.001*mid_att*des;\ndy=dy+sign(xd)*cos(q7+an)*.001*mid*des;\n\nsy=1+dx*des;\nsx=1-dy*des;\n\nxd = q5-x;\nyd = q6-y;\n\ndis = pow(xd*xd+yd*yd,.5);\ndes = 1 - dis*.7071068;\ndes = pow(des,10*q8)*-bass;\nan = acos(abs(xd)/dis);\n\ndx = dx + sign(xd)*.01*cos(an)*des;\ndy = dy + sign(yd)*.01*sin(an)*des;\n\n//dy = dy + sign(xd)*bass*.05*cos(an)*des;\n//dx = dx + sign(yd)*bass*.05*sin(an)*des*-1;\n\n\ndx=dx-sign(yd)*sin(q7+an)*.001*bass_att*des;\ndy=dy+sign(xd)*cos(q7+an)*.001*bass*des;\n\nsy=1+dx*des;\nsx=1-dy*des;","warp":"vec3 xlat_mutablenoise2;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv6;\n shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1 = vec3((dot ((\n    (texture (sampler_blur1, fract(uv)).xyz * scale1)\n   + bias1), vec3(0.32, 0.49, 0.29)) * q1));\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.0;\n  tmpvar_2.x = texsize.z;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((tmpvar_2 * 8.0) * tmpvar_1.xy);\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((tmpvar_4 * 8.0) * tmpvar_1.xy);\n  vec2 tmpvar_6;\n  tmpvar_6.x = dot ((texture (sampler_main, (uv + tmpvar_3)) - texture (sampler_main, (uv - tmpvar_3))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_6.y = dot ((texture (sampler_main, (uv + tmpvar_5)) - texture (sampler_main, (uv - tmpvar_5))), vec4(0.32, 0.49, 0.29, 0.0));\n  float tmpvar_7;\n  tmpvar_7 = abs((uv.x - 0.5));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (uv.y - 0.5);\n  vec2 x_9;\n  x_9 = (tmpvar_8 - vec2(0.1, -0.1));\n  float tmpvar_10;\n  tmpvar_10 = pow (clamp ((0.02 / \n    sqrt(dot (x_9, x_9))\n  ), 0.0, 1.0), 4.0);\n  float tmpvar_11;\n  float tmpvar_12;\n  tmpvar_12 = (tmpvar_8.y - q3);\n  tmpvar_11 = pow (clamp ((0.05 / \n    sqrt((((tmpvar_7 * tmpvar_7) * q2) + ((\n      ((0.05 / (0.01 + (q4 * tmpvar_7))) * (1.0 + q15))\n     / q16) * (tmpvar_12 * tmpvar_12))))\n  ), 0.0, 1.0), 3.0);\n  float tmpvar_13;\n  tmpvar_13 = max (tmpvar_10, tmpvar_11);\n  vec2 x_14;\n  x_14 = (tmpvar_8 - vec2(0.1, -0.1));\n  vec2 tmpvar_15;\n  tmpvar_15.x = 0.0;\n  tmpvar_15.y = (q10 - -0.1);\n  vec2 x_16;\n  x_16 = ((tmpvar_8 - vec2(0.1, -0.1)) - (0.02 * tmpvar_15));\n  xlat_mutableuv1 = (tmpvar_8 + (vec2((tmpvar_10 + \n    (tmpvar_11 * q16)\n  )) / 4.0));\n  xlat_mutableuv6 = (xlat_mutableuv1 + (xlat_mutableuv1 * (2.0 * texture (sampler_noise_hq, \n    ((xlat_mutableuv1 / 4.0) + (time / 180.0))\n  ).xy)));\n  xlat_mutablenoise2 = (vec3(((\n    (abs((cos(\n      (xlat_mutableuv6.y * 18.0)\n    ) + sin(\n      (xlat_mutableuv6.x * 18.0)\n    ))) / 6.0)\n   * \n    (1.0 + abs((q1 / 16.0)))\n  ) + 0.2)) * vec3(1.0, 0.9, 0.8));\n  vec3 tmpvar_17;\n  tmpvar_17 = mix (mix (xlat_mutablenoise2, vec3((\n    (sin(((tmpvar_7 * 142.0) + (1.5 * \n      sign((tmpvar_8.y - q3))\n    ))) - ((q16 * 0.008) / abs((tmpvar_8.y - q3))))\n   * tmpvar_11)), vec3(tmpvar_11)), ((\n    ((clamp (cos(\n      (70.0 * sqrt(dot (x_14, x_14)))\n    ), 0.0, 1.0) / 3.0) * roam_sin)\n   * 2.0).xyz - float(\n    (sqrt(dot (x_16, x_16)) < (0.01 * q15))\n  )), vec3(tmpvar_10));\n  xlat_mutablenoise2 = tmpvar_17;\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = (((\n    (texture (sampler_main, fract((uv + (tmpvar_6 * 0.003)))).xyz + vec3(-((sqrt(\n      dot (tmpvar_6, tmpvar_6)\n    ) * 0.1))))\n   * \n    (0.99 - (tmpvar_13 / 2.0))\n  ) - 0.01) + (tmpvar_17 * (0.045 + tmpvar_13)));\n  ret = tmpvar_18.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  ret_1 = (ret_1 + ((texture (sampler_blur1, \n    (uv + ret_1.xy)\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_2;\n  tmpvar_2.x = (uv.x - ret_1.y);\n  tmpvar_2.y = (uv.y - ret_1.y);\n  ret_1 = (ret_1 + ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3 = pow (((\n    sqrt(dot (ret_1, ret_1))\n   * ret_1) * 1.33), (0.89 - (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3)));\n  ret_1 = (tmpvar_3 * tmpvar_3.z);\n  ret_1 = (ret_1 - texture (sampler_main, uv).xyz);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"sampler sampler_sampler_pw_noise_lq;\nfloat hole;\nfloat2 dz,uv1,uv2,uv3,uv4,uv6, mod;\nfloat3 blur, blur2, noise2, noise3;\nstatic float2 eyepos = float2(.1,-.1);\nstatic float eyerad = .02;\nstatic float mouth_y = q3;\nstatic float direct = 1;\nstatic float crumple = q1;\nstatic float mwidth = q2;\nstatic float mopen = q16;\nstatic float mshape= q4;\nstatic float dist = q11;\nshader_body {\n\nfloat3 blur = lum(GetBlur1(frac(uv)))*crumple;\nfloat2 hor = float2 (texsize.z,0)*8*blur;\nfloat2 ver = float2 (0,texsize.w)*8*blur;\nfloat dx = lum(tex2D(sampler_main,uv+hor) - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) - tex2D(sampler_main,uv-ver));\nfloat2 dz = float2 (dx + (uv.x-.5)*.0,dy+.0);\n\nuv1 = float2 (abs(uv.x-.5),uv.y-.5);\n//uv1 = float2(8*uv1.x*uv1.x,uv1.y*uv1.y*8);\n\nfloat teeth = sin((uv1.x)*142+1.5*sign(uv1.y-mouth_y))-mopen*.008/abs(uv1.y-mouth_y);\n\nfloat eyes = saturate(eyerad/length(uv1-eyepos));\neyes = pow(eyes,4);\nfloat mouth = saturate(.05/sqrt(uv1.x*uv1.x*mwidth + (.05/(.01+mshape*uv1.x))*(1+q15)/mopen*pow(uv1.y-mouth_y,2)));\nmouth = pow(mouth,3);\nmod = eyes + mouth*mopen;\nhole = pow(max(eyes,mouth),1);\n\nfloat3 eyeball = saturate(cos(1.4/eyerad*length(uv1-eyepos)))/3*(2-direct)*roam_sin*2;\neyeball = eyeball - (length(uv1-eyepos-.02*float2(q9*0,q10-eyepos.y)) < .01*q15);\n\nnoise3 = lum(tex2D(sampler_noise_lq,uv1))+.5;\nuv1 += mod/4;\nteeth *= (mouth);\n\nfloat2 ang2= tex2D (sampler_noise_hq,uv1/4+time/180).xy;\n//uv6 = mul(uv1,float2x2(ang2.y,-ang2.x,ang2.x,ang2.y));\nuv6 = uv1 + .5*(uv1*4*ang2);\nfloat mus = cos(uv6.y*18)+(sin(uv6.x*18));\nnoise2 = abs(mus)/6*(1+abs(crumple/16))+.2;\nnoise2 *= float3 (1,.9,.8);\nnoise2 = lerp(noise2,teeth,mouth);\nnoise2 = lerp(noise2,eyeball,eyes);\nblur2 = GetBlur2(frac(noise3));\n\nfloat3 crisp = GetPixel(frac(uv+dz*.003));\n//crisp = max(crisp, .8*float3(1,1,1)*GetPixel(uv*1+.3)*saturate(1-2*lum(GetPixel(uv+.31))));\ncrisp += -0.0*blur2 - length(dz)*.1;\n\n\nret = crisp * (.99-hole/2*direct) -  .01 + noise2*(.045+hole*direct)  ;\n//ret = hole;\n//ret = 1-eyes;\n//ret = tex2D (sampler_shub1,uv1);\n}","comp_hlsl":"shader_body\n{\n\nret=GetBlur1(uv);\nret+=GetBlur1(float2(uv.x+ret.x,uv.y+ret.y));\nret+=GetBlur1(float2(uv.x-ret.y,uv.y-ret.y));\nret=pow(length(ret)*ret*1.33,0.89-GetBlur3(uv));\n//ret=saturate(ret);\n//ret*=tex2D(sampler_noise_lq,uv*ret.y);\nret*=ret.z;\nret=ret-GetPixel(uv);\n}"}