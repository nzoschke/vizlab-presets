{"version":2,"baseVals":{"rating":5,"gammaadj":1.14,"decay":1,"echo_zoom":1.002,"echo_orient":1,"wave_mode":1,"wave_a":0.3,"wave_scale":1.17,"wave_smoothing":0.5,"zoom":1.0201,"sx":1.06152,"sy":1.06152,"wave_r":0,"wave_g":0,"wave_y":0.47,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.yank_x=0;a.bass_residual=0;a.yank_y=0;a.old_treb_flop=0;a.bass_flop=0;a.spank_rad=0;a.q1=0;a.whip_me=0;a.q5=0;a.treb_flop=0;a.bass_thresh=0;a.old_bass_flop=0;a.treb_thresh=0;a.spank_x=0;a.pulse=0;a.yank_rad=0;a.bass_changed=0;a.mid_thresh=0;a.q4=0;a.mid_changed=0;a.old_mid_flop=0;a.mid_residual=0;a.spank_y=0;a.anti_rad=0;a.treb_residual=0;a.vol=0;a.chaos=0;a.mid_flop=0;a.q2=0;a.treb_changed=0;a.q3=0;","frame_eqs_str":"a.warp=0;a.old_bass_flop=a.bass_flop;a.old_treb_flop=a.treb_flop;a.old_mid_flop=a.mid_flop;a.chaos=.9+.1*Math.sin(a.pulse);a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*((a.bass_thresh-1.3)*a.chaos+1.3);a.bass_flop=Math.abs(a.bass_flop-equal(a.bass_thresh,2));a.treb_thresh=2*above(a.treb_att,a.treb_thresh)+(1-above(a.treb_att,a.treb_thresh))*((a.treb_thresh-1.3)*a.chaos+1.3);a.treb_flop=Math.abs(a.treb_flop-equal(a.treb_thresh,2));a.mid_thresh=\n2*above(a.mid_att,a.mid_thresh)+(1-above(a.mid_att,a.mid_thresh))*((a.mid_thresh-1.3)*a.chaos+1.3);a.mid_flop=Math.abs(a.mid_flop-equal(a.mid_thresh,2));a.bass_changed=bnot(equal(a.old_bass_flop,a.bass_flop));a.mid_changed=bnot(equal(a.old_mid_flop,a.mid_flop));a.treb_changed=bnot(equal(a.old_treb_flop,a.treb_flop));a.bass_residual=a.bass_changed*Math.sin(a.time*a.bass_thresh)+bnot(a.bass_changed)*a.bass_residual;a.treb_residual=a.treb_changed*Math.sin(a.time*a.treb_thresh)+bnot(a.treb_changed)*a.treb_residual;\na.mid_residual=a.mid_changed*Math.sin(a.time*a.mid_thresh)+bnot(a.mid_changed)*a.mid_residual;a.vol=.03*Math.max(Math.max(a.mid,a.bass),a.treb);a.pulse=.00001<Math.abs(above(Math.abs(a.pulse),5E3))?-5E3:a.pulse+2*a.vol*bor(bor(a.bass_changed,a.treb_changed),a.mid_changed)+a.vol;a.q1=a.mid_residual;a.q2=a.bass_residual;a.q3=a.treb_residual;a.q4=Math.sin(a.pulse);a.q5=Math.cos(a.pulse);a.wave_r+=.5*a.bass_residual;a.wave_r=a.wave_g+.5*a.mid_residual;a.wave_r=a.wave_b+.5*a.treb_residual;a.zoom+=.03*\na.q5;a.rot=.03*a.q4;","pixel_eqs_str":"a.anti_rad=1-a.rad;a.yank_x=10*(2*a.x-a.rad);a.spank_x=10*(2*a.x-a.anti_rad);a.yank_y=10*(2*a.y-a.rad);a.spank_y=10*(2*a.x-a.anti_rad);a.yank_rad=10*(2*a.rad+a.x);a.spank_rad=10*(2*a.rad+a.y);a.whip_me=.1*Math.cos(a.yank_x*a.q1-a.spank_x*a.q4+a.yank_y*a.q2-a.spank_y*a.q5+a.yank_rad*a.q3-a.spank_rad*Math.sin(a.time));a.zoom-=a.whip_me;","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\nold_bass_flop=bass_flop;\nold_treb_flop=treb_flop;\nold_mid_flop=mid_flop;\nchaos=.9+.1*sin(pulse);\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);\nbass_flop=abs(bass_flop-equal(bass_thresh,2));\ntreb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);\ntreb_flop=abs(treb_flop-equal(treb_thresh,2));\nmid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);\nmid_flop=abs(mid_flop-equal(mid_thresh,2));\nbass_changed=bnot(equal(old_bass_flop,bass_flop));\nmid_changed=bnot(equal(old_mid_flop,mid_flop));\ntreb_changed=bnot(equal(old_treb_flop,treb_flop));\nbass_residual = bass_changed*sin(time*bass_thresh) + bnot(bass_changed)*bass_residual;\ntreb_residual = treb_changed*sin(time*treb_thresh) + bnot(treb_changed)*treb_residual;\nmid_residual = mid_changed*sin(time*mid_thresh) + bnot(mid_changed)*mid_residual;\nvol=max(max(mid,bass),treb)*.03;\npulse=if(above(abs(pulse),5000),-5000,pulse+vol*2*bor(bor(bass_changed,treb_changed),mid_changed)+vol);\nq1=mid_residual;\nq2=bass_residual;\nq3=treb_residual;\nq4=sin(pulse);\nq5=cos(pulse);\nwave_r=wave_r+.5*bass_residual;\nwave_r=wave_g+.5*mid_residual;\nwave_r=wave_b+.5*treb_residual;\nzoom=zoom+.03*q5;\nrot=q4*.03;","pixel_eqs_eel":"anti_rad=1-rad;\nyank_x=(x*2-rad)*10;\nspank_x=(x*2-anti_rad)*10;\nyank_y=(y*2-rad)*10;\nspank_y=(x*2-anti_rad)*10;\nyank_rad=(rad*2+x)*10;\nspank_rad=(rad*2+y)*10;\nwhip_me=cos(yank_x*q1-spank_x*q4+yank_y*q2-spank_y*q5+yank_rad*q3-spank_rad*sin(time))*.1;\nzoom=zoom-whip_me;","warp":" shader_body { \n  vec3 b_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - uv_orig);\n  tmpvar_3 = (uv_orig + (tmpvar_4 * 1.2));\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv_orig + (tmpvar_4 * 0.6));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_orig + tmpvar_4);\n  ret_2.x = texture (sampler_main, tmpvar_3).x;\n  ret_2.y = texture (sampler_main, tmpvar_5).y;\n  ret_2.z = texture (sampler_main, tmpvar_6).z;\n  b_1.x = mix (((texture (sampler_blur2, tmpvar_3).xyz * scale2) + bias2), ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1), vec3(0.5, 0.5, 0.5)).x;\n  b_1.y = mix (((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2), ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1), vec3(0.5, 0.5, 0.5)).y;\n  b_1.z = mix (((texture (sampler_blur2, tmpvar_6).xyz * scale2) + bias2), ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1), vec3(0.5, 0.5, 0.5)).z;\n  ret_2 = (ret_2 + ((ret_2 - b_1) * 0.3));\n  ret_2 = (ret_2 * 0.95);\n  ret_2 = (ret_2 + 0.04);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_2;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (abs((\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\n  ret_2 = (ret_2 * 1.333);\n  ret_2 = (vec3(1.0, 1.0, 1.0) - ret_2);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n\nfloat2 uv1 = uv_orig + (uv-uv_orig)*1.2;\nfloat2 uv2 = uv_orig + (uv-uv_orig)*0.6;\nfloat2 uv3 = uv_orig + (uv-uv_orig)*1;\n\n    // sample previous frame\n    ret.x = tex2D( sampler_main, uv1 ).x;\n    ret.y = tex2D( sampler_main, uv2 ).y;\n    ret.z = tex2D( sampler_main, uv3 ).z;\n\n    float3 b;\n    b.x = lerp(GetBlur2(uv1),GetBlur1(uv1),0.5).x;\n    b.y = lerp(GetBlur2(uv2),GetBlur1(uv2),0.5).y;\n    b.z = lerp(GetBlur2(uv3),GetBlur1(uv3),0.5).z;\n\n      ret += (ret - b)*0.3;\n      ret *= 0.95;\n      ret += 0.04;\n}","comp_hlsl":"\n\n\n\nshader_body\n{\n    uv = 0.05 + 0.9*uv;\n    ret = tex2D(sampler_main, uv).xyz;\n      // SUPER GLOW EDGES - looks awesome w/octopus\n      float3 avg_col = GetBlur3(uv);\n      ret = abs(avg_col - ret)*6;\n    ret *= 1.333; // a little bit of overbright\nret.x=1-ret.x;\nret.y=1-ret.y;\nret.z=1-ret.z;\n}"}