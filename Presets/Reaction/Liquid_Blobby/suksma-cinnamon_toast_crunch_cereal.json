{"version":2,"baseVals":{"rating":5,"gammaadj":1.994,"decay":1,"echo_zoom":1.157,"echo_alpha":0.2,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"solarize":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":1.00049,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.002,"ob_a":1,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"x":0,"rad":0.98609,"r":0.6,"g":0.6,"b":0.6,"a":0.02,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q4=0;a.q5=0;a.q6=0;","frame_eqs_str":"a.r2=a.r;a.g2=a.g;a.b2=a.b;a.a=Math.max(.1*(a.q4+a.q5+a.q6),.02);","init_eqs_eel":"","frame_eqs_eel":"r2 = r;g2=g;b2=b;\n\n//x = int(rand(1001))*.001;\n\na = max((q4 + q5 + q6)*.1,.02);"},{"baseVals":{"enabled":1,"sides":100,"x":1,"rad":0.98609,"r":0.6,"g":0.6,"b":0.6,"a":0.02,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q4=0;a.q5=0;a.q6=0;","frame_eqs_str":"a.r2=a.r;a.g2=a.g;a.b2=a.b;a.a=Math.max(.1*(a.q4+a.q5+a.q6),.02);","init_eqs_eel":"","frame_eqs_eel":"r2 = r;g2=g;b2=b;\n\n//x = int(rand(1001))*.001;\n\na = max((q4 + q5 + q6)*.1,.02);"},{"baseVals":{"enabled":1,"sides":100,"x":0.33,"rad":0.98609,"r":0.6,"g":0.6,"b":0.6,"a":0.02,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q4=0;a.q5=0;a.q6=0;","frame_eqs_str":"a.r2=a.r;a.g2=a.g;a.b2=a.b;a.a=Math.max(.1*(a.q4+a.q5+a.q6),.02);","init_eqs_eel":"","frame_eqs_eel":"r2 = r;g2=g;b2=b;\n\n//x = int(rand(1001))*.001;\n\na = max((q4 + q5 + q6)*.1,.02);"},{"baseVals":{"enabled":1,"sides":100,"x":0.67,"rad":0.98609,"r":0.6,"g":0.6,"b":0.6,"a":0.02,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q4=0;a.q5=0;a.q6=0;","frame_eqs_str":"a.r2=a.r;a.g2=a.g;a.b2=a.b;a.a=Math.max(.1*(a.q4+a.q5+a.q6),.02);","init_eqs_eel":"","frame_eqs_eel":"r2 = r;g2=g;b2=b;\n\n//x = int(rand(1001))*.001;\n\na = max((q4 + q5 + q6)*.1,.02);"}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ti = time*1;\nr = .5 + .5*sin(ti*1.789);\ng = .5 + .5*sin(ti*1.123);\nb = .5 + .5*sin(ti*1.465);","point_eqs_str":"x = int(rand(1001))*.001;\nY = int(rand(1001))*.001;\n\n//a = min(1,value1 + value2);","init_eqs_eel":"","frame_eqs_eel":"ti = time*1;\nr = .5 + .5*sin(ti*1.789);\ng = .5 + .5*sin(ti*1.123);\nb = .5 + .5*sin(ti*1.465);","point_eqs_eel":"x = int(rand(1001))*.001;\nY = int(rand(1001))*.001;\n\n//a = min(1,value1 + value2);"},{"baseVals":{"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ti = time*1 + 1.57;\nr = .5 + .5*sin(ti*1.789);\ng = .5 + .5*sin(ti*1.123);\nb = .5 + .5*sin(ti*1.465);","point_eqs_str":"x = int(rand(1001))*.001;\nY = int(rand(1001))*.001;\n\n//a = min(1,value1 + value2);","init_eqs_eel":"","frame_eqs_eel":"ti = time*1 + 1.57;\nr = .5 + .5*sin(ti*1.789);\ng = .5 + .5*sin(ti*1.123);\nb = .5 + .5*sin(ti*1.465);","point_eqs_eel":"x = int(rand(1001))*.001;\nY = int(rand(1001))*.001;\n\n//a = min(1,value1 + value2);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tic=0;a.st=0;a.q6=0;a.bt=0;a.q1=0;a.q5=0;a.mid_avg=0;a.tt=0;a.base=0;a.my=0;a.tin=0;a.ti=0;a.bass_avg=0;a.q4=0;a.zm=0;a.mt=0;a.ra=0;a.mx=0;a.treb_avg=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.ra=.25*div(1,a.tic);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;a.q1=4*a.tt;a.q2=4*a.mt;a.q3=4*a.bt;a.st=.1;a.base=.15;a.q4=a.base+a.treb_avg*a.st;a.q5=a.base+a.mid_avg*a.st;a.q6=a.base+a.bass_avg*a.st;","pixel_eqs_str":"a.ti=.3*a.time;a.mx=a.x-.5+.25*(Math.sin(1.1278*a.ti)+Math.sin(.7458*a.ti));a.my=a.y-.5+.25*(Math.sin(.9454*a.ti)+Math.sin(1.2378*a.ti));a.zm=Math.cos(16*pow(a.mx*a.mx*1.5+a.my*a.my,.5)-a.q1)*a.q4;a.dx=a.zm*(a.x-a.mx);a.dy=a.zm*(a.y-a.my);a.mx=a.x-.5+.25*(Math.sin(1.3488*a.ti)+Math.sin(.8552*a.ti));a.my=a.y-.5+.25*(Math.sin(.7366*a.ti)+Math.sin(1.1447*a.ti));a.zm=Math.cos(16*pow(a.mx*a.mx*1.5+a.my*a.my,.5)-a.q2)*a.q5;a.dx+=a.zm*a.mx;a.dy+=a.zm*a.my;a.mx=a.x-.5+.25*(Math.sin(1.3544*\na.ti)+Math.sin(.8926*a.ti));a.my=a.y-.5+.25*(Math.sin(.9021*a.ti)+Math.sin(1.2468*a.ti));a.zm=Math.cos(16*pow(a.mx*a.mx*1.5+a.my*a.my,.5)-a.q3)*a.q6;a.dx+=a.zm*a.mx;a.dy+=a.zm*a.my;","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\ntic = min(time-tin,.1);\ntin = time;\n\nra = 1/tic*.25;\n\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\n\nq1 = tt*4;\nq2 = mt*4;\nq3 = bt*4;\n\nst = .1;\nbase = .15;\nq4 = base + treb_avg*st;\nq5 = base + mid_avg*st;\nq6 = base + bass_avg*st;","pixel_eqs_eel":"ti = time*.3;\n\nmx = x - .5 + .25*(sin(ti*1.1278) + sin(ti*.7458));\nmy = y - .5 + .25*(sin(ti*.9454) + sin(ti*1.2378));\nzm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;\ndx = zm*(x-mx);\ndy = zm*(y-my);\n\nmx = x - .5 + .25*(sin(ti*1.3488) + sin(ti*.8552));\nmy = y - .5 + .25*(sin(ti*.7366) + sin(ti*1.1447));\nzm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q2)*q5;\ndx = dx + zm*mx;\ndy = dy + zm*my;\n\nmx = x - .5 + .25*(sin(ti*1.3544) + sin(ti*.8926));\nmy = y - .5 + .25*(sin(ti*.9021) + sin(ti*1.2468));\nzm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q3)*q6;\ndx = dx + zm*mx;\ndy = dy + zm*my;","warp":"uniform sampler2D sampler_devboxb;\n shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_devboxb, uv).xyz;\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.0);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\n  ), pow (hue_shader, ret_2)));\n  ret_2 = (ret_2 * hue_shader);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"sampler sampler_devboxb;\n\nshader_body\n{\n    // sample previous frame\n   ret = tex2D( sampler_devboxb, uv);\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1;\n    float3 what = lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader,ret));\n    ret *=what;\n    ret *= hue_shader;\n\n    //ret *= 1.5; //old gamma effect    \n}"}