{"version":2,"baseVals":{"rating":5,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":6,"additive":1,"rad":0.04556,"g":0.7,"b":0.3,"g2":0,"border_a":0},"init_eqs_str":"a.yq=0;a.xp=0;a.yr=0;a.xs=0;a.yp=0;a.xr=0;a.q1=0;a.xq=0;a.flip=0;a.ca=0;a.ys=0;a.sa=0;a.zq=0;a.tm=0;a.zp=0;a.zr=0;","frame_eqs_str":"a.tm=a.q1;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=0;a.zp=0;a.ang=20*a.tm+.4*Math.sin(76*a.tm+4*a.time);a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xr=a.xp*a.sa+a.yp*a.ca;a.yr=a.xp*a.ca-a.yp*a.sa;a.zr=a.zp;a.xp=a.xr;a.yp=a.yr+.05+.2*(.5*Math.sin(a.tm)+.5)+.05;a.zp=a.zr;a.ang=Math.sin(2*a.tm);a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.ang=8*a.tm;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xp=a.xq*a.sa+a.yq*a.ca;\na.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.3;a.ang=3.14+2.5*Math.sin(2*a.tm-.5);a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.ang=-1+Math.cos(3*a.tm+.5);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(1*a.tm)-1.05;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xq=a.xp*a.sa+a.zp*a.ca;a.yq=a.yp;a.zq=a.xp*a.ca-a.zp*a.sa;a.ang=Math.cos(a.tm);a.xp=a.xq;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yp=a.yq*a.ca-\na.zq*a.sa;a.zp=a.yq*a.sa+a.zq*a.ca;a.zp+=1.5;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=.7;","init_eqs_eel":"","frame_eqs_eel":"tm=q1;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=0;\nzp=0;\n\n//spin;\nang=tm*20 + sin(tm*76 + time*4)*0.4;\nsa=sin(ang);ca=cos(ang);\nxr=xp*sa + yp*ca;\nyr=xp*ca - yp*sa;\nzr=zp;\n\nxp=xr;\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\nzp=zr;\n\n//wrist movement;\nang=sin(tm*2);\n\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n\nang=tm*8;\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*2.5;\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*1)*1.75 - 1.05;\nsa=sin(ang);ca=cos(ang);\nxq=xp*sa + zp*ca;\nyq=yp;\nzq=xp*ca - zp*sa;\n\n//upper arm up down;\nang=cos(tm);\nxp=xq;\nsa=sin(ang);ca=cos(ang);\nyp=yq*ca - zq*sa;\nzp=yq*sa + zq*ca;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+1.5;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=0.7;\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"b":0.7},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.yr=0;a.xs=0;a.yp=0;a.xr=0;a.q1=0;a.xq=0;a.flip=0;a.ca=0;a.ys=0;a.sa=0;a.zq=0;a.phs=0;a.ang=0;a.tm=0;a.zp=0;a.zr=0;","frame_eqs_str":"","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+4*a.phs;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=(.1*a.flip-.05)*a.sample;a.zp=0;a.ang=20*a.tm+.4*Math.sin(76*a.tm+4*a.time);a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xr=a.xp*a.sa+a.yp*a.ca;a.yr=a.xp*a.ca-a.yp*a.sa;a.zr=a.zp;a.xp=a.xr;a.yp=a.yr+.05+.2*(.5*Math.sin(a.tm)+.5)+.05;a.zp=a.zr;a.ang=Math.sin(2*a.tm);a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.ang=8*a.tm;\na.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.3;a.ang=3.14+2.5*Math.sin(2*a.tm-.5);a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.ang=-1+Math.cos(3*a.tm+.5);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(1*a.tm)-1.05;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xq=a.xp*a.sa+a.zp*a.ca;a.yq=a.yp;a.zq=a.xp*a.ca-a.zp*a.sa;a.ang=Math.cos(a.tm);\na.xp=a.xq;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yp=a.yq*a.ca-a.zq*a.sa;a.zp=a.yq*a.sa+a.zq*a.ca;a.zp+=1.5;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=1-a.sample;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs*4;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=(flip*0.1-0.05)*(sample);\nzp=0;\n\n//spin;\nang=tm*20 + sin(tm*76 + time*4)*0.4;\nsa=sin(ang);ca=cos(ang);\nxr=xp*sa + yp*ca;\nyr=xp*ca - yp*sa;\nzr=zp;\n\nxp=xr;\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\nzp=zr;\n\n//wrist movement;\nang=sin(tm*2);\n\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n\nang=tm*8;\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*2.5;\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*1)*1.75 - 1.05;\nsa=sin(ang);ca=cos(ang);\nxq=xp*sa + zp*ca;\nyq=yp;\nzq=xp*ca - zp*sa;\n\n//upper arm up down;\nang=cos(tm);\nxp=xq;\nsa=sin(ang);ca=cos(ang);\nyp=yq*ca - zq*sa;\nzp=yq*sa + zq*ca;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+1.5;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample);\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.9,"b":0.8},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.yr=0;a.xs=0;a.yp=0;a.xr=0;a.q1=0;a.xq=0;a.flip=0;a.ca=0;a.ys=0;a.sa=0;a.zq=0;a.phs=0;a.ang=0;a.tm=0;a.zp=0;a.zr=0;","frame_eqs_str":"","point_eqs_str":"a.n=6.283*a.sample;a.phs=.4*-a.sample;a.tm=a.q1+2*a.phs-.01;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=(.2*a.flip-.1)*a.sample;a.zp=0;a.ang=29*-a.tm+.4*Math.sin(76*a.tm+4*a.time);a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xr=a.xp*a.sa+a.yp*a.ca;a.yr=a.xp*a.ca-a.yp*a.sa;a.zr=a.zp;a.xp=a.xr;a.yp=a.yr+.05+.2*(.5*Math.sin(a.tm)+.5)+.05;a.zp=a.zr;a.ang=Math.sin(2*a.tm);a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.ang=\n8*a.tm;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.3;a.ang=3.14+2.5*Math.sin(2*a.tm-.5);a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.ang=-1+Math.cos(3*a.tm+.5);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(1*a.tm)-1.05;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xq=a.xp*a.sa+a.zp*a.ca;a.yq=a.yp;a.zq=a.xp*a.ca-a.zp*a.sa;a.ang=Math.cos(a.tm);\na.xp=a.xq;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yp=a.yq*a.ca-a.zq*a.sa;a.zp=a.yq*a.sa+a.zq*a.ca;a.zp+=1.5;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=1-a.sample;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.4 ;\ntm=q1 + phs*2 - 0.01;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=(flip*0.2-0.1)*(sample);\nzp=0;\n\n//spin;\nang=-tm*29 + sin(tm*76 + time*4)*0.4;;\nsa=sin(ang);ca=cos(ang);\nxr=xp*sa + yp*ca;\nyr=xp*ca - yp*sa;\nzr=zp;\n\nxp=xr;\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\nzp=zr;\n\n//wrist movement;\nang=sin(tm*2);\n\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n\nang=tm*8;\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*2.5;\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*1)*1.75 - 1.05;\nsa=sin(ang);ca=cos(ang);\nxq=xp*sa + zp*ca;\nyq=yp;\nzq=xp*ca - zp*sa;\n\n//upper arm up down;\nang=cos(tm);\nxp=xq;\nsa=sin(ang);ca=cos(ang);\nyp=yq*ca - zq*sa;\nzp=yq*sa + zq*ca;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+1.5;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample);\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.72,"b":0.1},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.yr=0;a.xs=0;a.yp=0;a.xr=0;a.q1=0;a.xq=0;a.flip=0;a.ca=0;a.ys=0;a.sa=0;a.zq=0;a.phs=0;a.ang=0;a.tm=0;a.zp=0;a.zr=0;","frame_eqs_str":"","point_eqs_str":"a.n=6.283*a.sample;a.phs=.4*-a.sample;a.tm=a.q1+2*a.phs-.02;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=(.4*a.flip-.2)*a.sample;a.zp=0;a.ang=23*a.tm+.3*Math.sin(76*a.tm+4*a.time);a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xr=a.xp*a.sa+a.yp*a.ca;a.yr=a.xp*a.ca-a.yp*a.sa;a.zr=a.zp;a.xp=a.xr;a.yp=a.yr+.05+.2*(.5*Math.sin(a.tm)+.5)+.05;a.zp=a.zr;a.ang=Math.sin(2*a.tm);a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.ang=\n8*a.tm;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.3;a.ang=3.14+2.5*Math.sin(2*a.tm-.5);a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.ang=-1+Math.cos(3*a.tm+.5);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(1*a.tm)-1.05;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xq=a.xp*a.sa+a.zp*a.ca;a.yq=a.yp;a.zq=a.xp*a.ca-a.zp*a.sa;a.ang=Math.cos(a.tm);\na.xp=a.xq;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yp=a.yq*a.ca-a.zq*a.sa;a.zp=a.yq*a.sa+a.zq*a.ca;a.zp+=1.5;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=1-a.sample;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.4 ;\ntm=q1 + phs*2 - 0.02;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=(flip*0.4-0.2)*(sample);\nzp=0;\n\n//spin;\nang=tm*23 + sin(tm*76 + time*4)*0.3;;\nsa=sin(ang);ca=cos(ang);\nxr=xp*sa + yp*ca;\nyr=xp*ca - yp*sa;\nzr=zp;\n\nxp=xr;\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\nzp=zr;\n\n//wrist movement;\nang=sin(tm*2);\n\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n\nang=tm*8;\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*2.5;\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*1)*1.75 - 1.05;\nsa=sin(ang);ca=cos(ang);\nxq=xp*sa + zp*ca;\nyq=yp;\nzq=xp*ca - zp*sa;\n\n//upper arm up down;\nang=cos(tm);\nxp=xq;\nsa=sin(ang);ca=cos(ang);\nyp=yq*ca - zq*sa;\nzp=yq*sa + zq*ca;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+1.5;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample);"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.7,"b":0.5},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.yr=0;a.xs=0;a.yp=0;a.xr=0;a.q1=0;a.xq=0;a.flip=0;a.ca=0;a.ys=0;a.sa=0;a.zq=0;a.phs=0;a.ang=0;a.tm=0;a.zp=0;a.zr=0;","frame_eqs_str":"","point_eqs_str":"a.n=6.283*a.sample;a.phs=.4*-a.sample;a.tm=a.q1+2*a.phs-.03;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=(.6*a.flip-.3)*a.sample;a.zp=0;a.ang=4*-a.tm+.2*Math.sin(76*a.tm+4*a.time);a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xr=a.xp*a.sa+a.yp*a.ca;a.yr=a.xp*a.ca-a.yp*a.sa;a.zr=a.zp;a.xp=a.xr;a.yp=a.yr+.05+.2*(.5*Math.sin(a.tm)+.5)+.05;a.zp=a.zr;a.ang=Math.sin(2*a.tm);a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.ang=\n8*a.tm;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.3;a.ang=3.14+2.5*Math.sin(2*a.tm-.5);a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.ang=-1+Math.cos(3*a.tm+.5);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.35;a.ang=1.75*Math.cos(1*a.tm)-1.05;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xq=a.xp*a.sa+a.zp*a.ca;a.yq=a.yp;a.zq=a.xp*a.ca-a.zp*a.sa;a.ang=Math.cos(a.tm);\na.xp=a.xq;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yp=a.yq*a.ca-a.zq*a.sa;a.zp=a.yq*a.sa+a.zq*a.ca;a.zp+=1.5;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=1-a.sample;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.4 ;\ntm=q1 + phs*2 - 0.03;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=(flip*0.6-0.3)*(sample);\nzp=0;\n\n//spin;\nang=-tm*4 + sin(tm*76 + time*4)*0.2;;\nsa=sin(ang);ca=cos(ang);\nxr=xp*sa + yp*ca;\nyr=xp*ca - yp*sa;\nzr=zp;\n\nxp=xr;\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\nzp=zr;\n\n//wrist movement;\nang=sin(tm*2);\n\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n\nang=tm*8;\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*2.5;\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*1)*1.75 - 1.05;\nsa=sin(ang);ca=cos(ang);\nxq=xp*sa + zp*ca;\nyq=yp;\nzq=xp*ca - zp*sa;\n\n//upper arm up down;\nang=cos(tm);\nxp=xq;\nsa=sin(ang);ca=cos(ang);\nyp=yq*ca - zq*sa;\nzp=yq*sa + zq*ca;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+1.5;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample);"}],"init_eqs_str":"a.rad=0;a.t1=0;a.bamx=0;a.bom=0;a.q6=0;a.speedb=0;a.q1=0;a.q5=0;a.x=0;a.rox=0;a.wecrut=0;a.t3=0;a.t6=0;a.weconz=0;a.rhox=0;a.q4=0;a.t7=0;a.daz=0;a.speedc=0;a.nut=0;a.q2=0;a.boom=0;a.wec=0;a.speeda=0;a.speed=0;a.q3=0;a.t4=0;a.shox=0;a.tri=0;a.q8=0;a.mv_x=60;a.mv_y=89;a.monitor=a.echo_zoom;","frame_eqs_str":"a.zoom=Math.sin(a.echo_zoom-a.q4);a.rot=a.nut-a.q4;a.nut=Math.min(.2*a.bass,.2*a.treb);a.rot=a.q4;a.decay=.99999;a.wec=Math.sin(a.time-1);a.weconz=(a.q4-a.q2)*a.wec;a.wecrut=3*a.tri-Math.sin(a.time-a.rad);a.tri=a.q8;a.t1=a.wec+a.x;a.t3=a.tri*a.weconz;a.t6=a.wecrut;a.t7=a.wec*a.time;a.q1=a.wec;a.q2=a.tri-a.t1;a.q6=div(2*a.weconz,a.time);","pixel_eqs_str":"a.bamx=Math.sin(a.time-a.bass);a.boom=Math.sin(mod(a.bamx,a.boom)*a.bass*a.time);a.bom=2*rand(.1*(a.time-a.boom)*(a.time-a.bamx));a.speed=mod(Math.sin((a.speeda-a.speedb)*(a.speedb-a.speeda)),a.speedc);a.speeda=Math.sin((3*a.bass-a.speedb)*a.time);a.speedb=Math.sin((3*a.mid+a.speedc)*a.time);a.speedc=Math.sin((3*a.treb-a.speeda)*a.time);a.shox=Math.cos(a.q3-a.q8)*a.speed;a.rhox=mod(Math.sin(a.q5+a.speedb),a.speed);a.rox=div(a.shox-a.rhox,2);a.daz=a.speed*(a.time-1)*a.bass*.5+\n.5;a.zoom=1-Math.tan(a.zoom-1)*a.bass;a.wec=Math.sin(a.time-1);a.weconz=a.t4-a.q4;a.wecrut=3*a.tri-Math.sin(a.time-a.rad);a.tri=a.q8;a.q3=a.treb*a.bom;a.q8=a.bass*a.boom;a.q5=a.mid*a.rox;a.q6=mod(a.rox,a.speed);a.q4=a.daz-a.q4;a.wec=Math.sin(a.time-1);a.weconz=(a.q4-a.q2)*a.wec;a.wecrut=3*a.tri-Math.sin(a.time-a.rad);a.tri=a.q8;a.t1=a.wec+a.x;a.t3=a.tri*a.weconz;a.t6=a.wecrut;a.t7=a.wec*a.time;","init_eqs_eel":"mv_x = (60);\nmv_y = 89;\nmonitor = echo_zoom;","frame_eqs_eel":"zoom =sin( echo_zoom-q4);\n\nrot = nut-q4;\nnut = min(bass*0.2, treb*0.2);\n\nrot = q4;\n\n\n\n\n\n\n\n\n\ndecay = .99999;\n\n\n\n\n\n\n\n\n\nwec=sin(time-1);\nweconz=(q4-q2)*wec;\nwecrut=(tri*3)-(sin(time-rad));\ntri= q8;\n\n\n\nt1 = wec+x;\nt3 = tri*weconz;\nt6 = wecrut;\nt7 = wec * time;\n\n\nq1 = wec;\nq2 = tri-t1;\nq6 = (weconz*2)/time;","pixel_eqs_eel":"bamx=sin(time-bass);\nboom=sin(((bamx%boom)*bass)*time);\nbom=(rand(0.1*(time-boom)*(time-bamx))*2);\n\n\nspeed = sin(((speedA-speedB)*(speedB-speedA)))%speedC;\nspeedA =  sin((bass*3 - speedB )* time);\nspeedB =  sin((mid*3 + speedC ) * time);\nspeedC = sin((treb*3 - speedA ) * time);\n\nshox = cos(q3 - q8)*speed;\nrhox = sin(q5 + speedB)%speed;\nrox = (shox - rhox)/2;\n\ndaz=((speed*(time-1))*bass)* 0.5 + 0.5;\n\nzoom = 1-tan(zoom-1)*bass;\n\n\nwec=sin(time-1);\nweconz=t4-q4;\nwecrut=(tri*3)-(sin(time-rad));\ntri= q8;\n\n\n\n\nq3 = treb*bom;\nq8 = bass* boom;\nq5 = mid*rox;\nq6 = rox%speed;\nq4 = daz - q4;\n\n\nwec=sin(time-1);\nweconz=(q4-q2)*wec;\nwecrut=(tri*3)-(sin(time-rad));\ntri= q8;\n\n\n\nt1 = wec+x;\nt3 = tri*weconz;\nt6 = wecrut;\nt7 = wec * time;","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  , vec3(0.32, 0.49, 0.29))));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 8.0)\n   + \n    (rand_frame * 6.0)\n  .xy)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.1 * (vec3((0.1 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_3.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv + (tmpvar_3 * 0.55));\n  vec3 tmpvar_5;\n  tmpvar_5 = mix (ret_1, (1.0 - ret_1), ((0.7 * \n    ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1)\n  ) + (0.2 * texture (sampler_main, uv).xyz)));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (tmpvar_5, ((\n    (tmpvar_5 - (0.1 * ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3)))\n   + \n    (0.1 * ((texture (sampler_blur1, (\n      (tmpvar_4 * 1.25)\n     - 0.125)).xyz * scale1) + bias1))\n  ) + (0.42 * texture (sampler_main, tmpvar_4).xyz)), vec3(0.25, 0.25, 0.25));\n  vec3 x_7;\n  x_7 = (tmpvar_6 - 0.5);\n  ret_1 = (tmpvar_6 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) + 1.25);\n  ret_1 = (ret_1 * (ret_1 * 0.6));\n  ret_1 = (ret_1 * mix ((0.7 * ret_1), (\n    (1.3 * ret_1)\n   * \n    ((((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1)) - (0.25 * ((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2)))\n  ), pow (hue_shader.zxy, ret_1)));\n  ret_1 = (ret_1 + 0.03);\n  ret_1 = (ret_1 * ret_1);\n  ret_1 = (ret_1 * hue_shader.zxy);\n  ret_1 = (ret_1 * 2.0);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_1;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .01*lum(GetBlur1(uv))*float2 (0,1);\n\n\nuv6 = .4*sin(uv*8+rand_frame*6);\nmus = .1/(length(uv6));\nmus *= (1+roam_cos)/2;\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .1*mus;\n//float2 uv2 = (uv_orig-.5)-float2(.5,.5+0.1*q25);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"shader_body\n{\n\n//Code bits by Flexi and Geiss\n\n    float2 d = texsize.zw*8;\n    float1 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) ).y;\n    float1 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) ).y;\n    float2 uv_y = uv+float2(dx,dy)*0.55;  \n    float2 uv_y2 = (uv_y*1.25)-.125;  \n\n  \n    ret = lerp(ret,1-ret,.7*GetBlur1(uv_y)+.2*GetPixel(uv));\n    ret = lerp(ret,ret-.1*GetBlur3(uv_y)+.1*GetBlur1(uv_y2)+.42*GetPixel(uv_y),.25);\n    //ret *= .75;\n    ret *= saturate(length(ret-0.5)*5);\n    //ret = ret.xy;\n    ret = lum(ret);\n    ret += 1.25;\n    ret *= ret*.6;\n    float3 mask = GetBlur3(uv)-GetBlur1(uv)-.25*GetBlur2(uv_y);\n    ret *= lerp(0.7*ret,1.3*ret*mask,pow(hue_shader.zxy,ret));\n    ret += .03;\n    ret *= ret;\n    ret *= hue_shader.zxy;\n    ret *= 2.00;\n\n}"}