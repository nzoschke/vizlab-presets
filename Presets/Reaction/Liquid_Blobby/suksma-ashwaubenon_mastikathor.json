{"version":2,"baseVals":{"rating":5,"gammaadj":1.91,"decay":0.97,"echo_zoom":0.997,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":1.331,"zoom":1.00049,"warp":0.01,"sx":1.22019,"sy":1.22019,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.98609,"tex_zoom":1.0303,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.q4=0;","frame_eqs_str":"a.x+=a.q3;a.y+=a.q4;","init_eqs_eel":"","frame_eqs_eel":"x = x + q3;\ny = y + q4"},{"baseVals":{"enabled":1,"sides":24,"textured":1,"rad":0.98609,"tex_ang":1.88496,"tex_zoom":1.0303,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.q4=0;","frame_eqs_str":"a.x+=a.q3;a.y+=a.q4;","init_eqs_eel":"","frame_eqs_eel":"x = x + q3;\ny = y + q4"},{"baseVals":{"r":0,"g2":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = x + q3;\ny = y + q4","init_eqs_eel":"","frame_eqs_eel":"x = x + q3;\ny = y + q4"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = x + q3;\ny = y + q4","init_eqs_eel":"","frame_eqs_eel":"x = x + q3;\ny = y + q4"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.2,"g":0.7},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.xs=0;a.yp=0;a.t1=0;a.ps=0;a.xq=0;a.sang=0;a.ys=0;a.zq=0;a.ang=0;a.spp=0;a.t2=0;a.zp=0;a.q2=0;","frame_eqs_str":"a.t1=1;a.t2=2*-Math.sin(a.time)+2;","point_eqs_str":"a.spp=2*Math.abs(a.sample-.5);a.n=6.283*a.spp*a.t2;a.ang=6.283*div(Math.floor(12*a.spp),12);a.ps=.1*a.time;a.t1=2*above(a.sample,.5)-1;a.xp=a.t1*(1-a.spp)*.3;a.yp=2.3;a.zp=0;a.ang=6*a.q2+div(a.n,3);a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.yp*a.cang;a.yq=a.xp*a.cang-a.yp*a.sang;a.zq=a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=9.5*a.q2+div(a.n,3);a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;\na.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=1.7*a.q2+div(a.n,3);a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sang+a.zp*a.cang;a.zq=a.yp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.zp+=8;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;","init_eqs_eel":"","frame_eqs_eel":"t1=1;\nt2 = -sin(time)*2+2","point_eqs_eel":"spp = abs( sample-0.5 )*2;\nn=spp*6.283*t2;\nang=int(spp*12)/12 * 6.283;\nps=time*0.1;\nt1= above(sample,0.5)*2 - 1;\n\n//circle;\nxp=t1 * (1-spp) * 0.3;\nyp=2.3;\nzp=0;\n\nang = q2*6 + n/3;\nsang = sin(ang);cang = cos(ang);\nxq = xp*sang + yp*cang;\nyq = xp*cang - yp*sang;\nzq = zp;\nxp=xq;yp=yq;zp=zq;\n\nang = q2*9.5 + n/3;\nsang = sin(ang);cang = cos(ang);\nxq = xp*sang + zp*cang;\nyq = yp;\nzq = xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\nang = q2*1.7 + n/3;\nsang = sin(ang);cang = cos(ang);\nxq = xp;\nyq = yp*sang + zp*cang;\nzq = yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp=zp+8;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;"},{"baseVals":{"usedots":1,"thick":1,"additive":1,"g":0.5,"b":0.2,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\nang=int(sample*12)/12 * 6.283;\nps=time*0.1;\n\n//circle;\nxp=sin(n*12+ps)*0.5;\nyp=cos(n*12+ps)*0.5;\nzp=2 + q1*0.03;\n\n//positions on x axis\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//rotate on x;\nxp=xq;\nyp=yq*sin(q2) + zq*cos(q2);\nzp=yq*cos(q2) - zq*sin(q2);\n\n//rotate on z;\nxq=xp*sin(q2) + yp*cos(q2);\nyq=xp*cos(q2) - yp*sin(q2);\nzq=zp;\n\n\nxp=xq ;\nyp=yq ;\nzp=zq;\n\nzp=zp+8;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5 + q3;\ny=ys*1.3+0.5 + q4;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nang=int(sample*12)/12 * 6.283;\nps=time*0.1;\n\n//circle;\nxp=sin(n*12+ps)*0.5;\nyp=cos(n*12+ps)*0.5;\nzp=2 + q1*0.03;\n\n//positions on x axis\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//rotate on x;\nxp=xq;\nyp=yq*sin(q2) + zq*cos(q2);\nzp=yq*cos(q2) - zq*sin(q2);\n\n//rotate on z;\nxq=xp*sin(q2) + yp*cos(q2);\nyq=xp*cos(q2) - yp*sin(q2);\nzq=zp;\n\n\nxp=xq ;\nyp=yq ;\nzp=zq;\n\nzp=zp+8;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5 + q3;\ny=ys*1.3+0.5 + q4;"},{"baseVals":{"usedots":1,"thick":1,"additive":1,"g":0.5,"b":0.2,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\nang=int(sample*12)/12 * 6.283;\nps=time*0.1;\n\n//circle;\nxp=sin(n*12+ps)*0.5;\nyp=cos(n*12+ps)*0.5;\nzp=2 + q1*0.03;\n\n//positions on x axis\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//rotate on x;\nxp=xq;\nyp=yq*sin(q2) + zq*cos(q2);\nzp=yq*cos(q2) - zq*sin(q2);\n\n//rotate on z;\nang = q2 + 1.61;\nxq=xp*sin(ang) + yp*cos(ang);\nyq=xp*cos(ang) - yp*sin(ang);\nzq=zp;\n\n\nxp=xq;\nyp=yq;\nzp=zq;\n\nzp=zp+8;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5 +q3;\ny=ys*1.3+0.5 +q4;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nang=int(sample*12)/12 * 6.283;\nps=time*0.1;\n\n//circle;\nxp=sin(n*12+ps)*0.5;\nyp=cos(n*12+ps)*0.5;\nzp=2 + q1*0.03;\n\n//positions on x axis\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n//rotate on x;\nxp=xq;\nyp=yq*sin(q2) + zq*cos(q2);\nzp=yq*cos(q2) - zq*sin(q2);\n\n//rotate on z;\nang = q2 + 1.61;\nxq=xp*sin(ang) + yp*cos(ang);\nyq=xp*cos(ang) - yp*sin(ang);\nzq=zp;\n\n\nxp=xq;\nyp=yq;\nzp=zq;\n\nzp=zp+8;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5 +q3;\ny=ys*1.3+0.5 +q4;"},{"baseVals":{"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\n\nxp=sin(n+phase)*flip;\nyp=cos(n+phase)*flip;\nzp=0;\n\n//rotate on y during draw\nang=n*2+phase*0.2;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\nr1=0.1;g1=0.6;b1=1;\nr2=1.0;g2=0.7;b2=0.1;\nfade=xq*0.5 + 0.5;\nr=r1*fade + r2*(1-fade);\ng=g1*fade + g2*(1-fade);\nb=b1*fade + b2*(1-fade);\n\n//rotation;\nang=time*0.1;\nxp=xq*sin(ang) + zq*cos(ang);\nyp=yq;\nzp=xq*cos(ang) - zq*sin(ang);\n\nang=time*0.17;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n\n//push into viewspace\nzq=zq+3.1;\n\n\n//project into screenspace\nxs=xq/zq;\nys=yq/zq;\n\n\nx=xs+0.5;\ny=ys*1.3+0.5;\na=(1-flip)*0.03*q1;\n\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\n\nxp=sin(n+phase)*flip;\nyp=cos(n+phase)*flip;\nzp=0;\n\n//rotate on y during draw\nang=n*2+phase*0.2;\nxq=xp*sin(ang) + zp*cos(ang);\nyq=yp;\nzq=xp*cos(ang) - zp*sin(ang);\n\nr1=0.1;g1=0.6;b1=1;\nr2=1.0;g2=0.7;b2=0.1;\nfade=xq*0.5 + 0.5;\nr=r1*fade + r2*(1-fade);\ng=g1*fade + g2*(1-fade);\nb=b1*fade + b2*(1-fade);\n\n//rotation;\nang=time*0.1;\nxp=xq*sin(ang) + zq*cos(ang);\nyp=yq;\nzp=xq*cos(ang) - zq*sin(ang);\n\nang=time*0.17;\nxq=xp;\nyq=yp*sin(ang) + zp*cos(ang);\nzq=yp*cos(ang) - zp*sin(ang);\n\n\n//push into viewspace\nzq=zq+3.1;\n\n\n//project into screenspace\nxs=xq/zq;\nys=yq/zq;\n\n\nx=xs+0.5;\ny=ys*1.3+0.5;\na=(1-flip)*0.03*q1;\n\n"}],"init_eqs_str":"a.tic=0;a.slide=0;a.toc=0;a.sw=0;a.vt=0;a.bt=0;a.q1=0;a.mid_avg=0;a.dis=0;a.tt=0;a.tin=0;a.bass_avg=0;a.vav=0;a.lim=0;a.q4=0;a.a=0;a.mt=0;a.mod=0;a.b=0;a.treb_avg=0;a.vol=0;a.sp=0;a.q2=0;a.q3=0;a.q7=0;","frame_eqs_str":"a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.vol=.333333*(a.bass_att+a.treb_att+a.mid_att);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-10)+10*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-10)+10*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-10)+10*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-10)+10*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;a.vt+=a.tic*a.vav;a.sp=.1*Math.abs(a.vav-a.slide);a.slide=(.00001<Math.abs(above(a.slide,\na.vav))?a.slide-a.tic*a.sp:a.slide+a.tic*a.sp)+(1-a.toc)*a.vav*.1;a.toc=1;a.q1=Math.floor(rand(2));a.q2=a.time;a.q3=3+Math.floor(rand(3))+Math.floor(rand(3));a.q4=a.vt;a.sw=1-a.sw;a.q7=a.sw;","pixel_eqs_str":"a.a=.5;a.b=.5;a.dis=pow((a.x-a.a)*(a.x-a.a)+.5625*(a.y-a.b)*(a.y-a.b),.5);a.sw=below(a.dis,.2+.03*a.treb);a.mod=-.18+.18*pow(1-4*a.dis,.8);a.dx=.00001<Math.abs(a.sw)?a.mod*(a.x-.5):0;a.dy=.00001<Math.abs(a.sw)?a.mod*(a.y-.5):0;a.mod=.005-.01*Math.sin(12.5664*a.rad);a.dx=.00001<Math.abs(a.sw)?a.dx+Math.sin(a.ang)*a.mod:0;a.dy=.00001<Math.abs(a.sw)?a.dy+Math.cos(a.ang)*a.mod:0;a.sx=.00001<Math.abs(a.sw)?a.sx:1;a.sy=.00001<Math.abs(a.sw)?a.sy:1;a.a=above(a.x,.5);a.b=above(a.y,\n.5);a.dis=pow((a.x-a.a)*(a.x-a.a)+.5625*(a.y-a.b)*(a.y-a.b),.5);a.lim=below(a.dis,.25);a.dx=.00001<Math.abs(a.lim)?.5*(1-2*below(a.x,.5)):a.dx;a.dy=.00001<Math.abs(a.lim)?.5*(1-2*below(a.y,.5)):a.dy;a.mod=-1;a.a=4*Math.sin(.02347*a.q4);a.b=4*Math.cos(.03348*a.q4);a.dx=.00001<Math.abs(a.lim+a.sw)?a.dx:a.mod*(a.x-a.a);a.dy=.00001<Math.abs(a.lim+a.sw)?a.dy:a.mod*(a.y-a.b);","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\ntic = min(time-tin,.1);\ntin = time;\n\nvol = (bass_att + treb_att + mid_att)*.333333;\n\ntreb_avg = tic*(treb_avg*(1/tic - 10) + 10*treb);\nmid_avg = tic*(mid_avg*(1/tic - 10) + 10*mid);\nbass_avg = tic*(bass_avg*(1/tic - 10) + 10*bass);\nvav = tic*(vav*(1/tic - 10) + 10*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\nvt = vt + tic*vav;\n\nsp = abs(vav - slide)*.1;\nslide = if(above(slide,vav),slide-tic*sp,slide+tic*sp) + (1-toc)*vav*.1;\ntoc = 1;\n\nq1 = int(rand(2)); // shapecode\nq2 = time; // colourcycle\nq3 = 3 + int(rand(3)) + int(rand(3)); // branching\n\nq4 = vt;\n\nsw = 1-sw;\n\nq7 = sw;","pixel_eqs_eel":"a = .5;\nb = .5;\ndis = pow((x-a)*(x-a) + .5625*(y-b)*(y-b),.5);\nsw = below(dis,(.2+(treb*0.03)));\n\nmod = -.18 + .18*pow(1-dis*4,.8);\ndx = if(sw,mod*(x-.5),0);\ndy = if(sw,mod*(y-.5),0);\n\n\nmod = .005 - .01*sin(rad*6.2832*2);\ndx = if(sw,dx + sin(ang)*mod,0);\ndy = if(sw,dy + cos(ang)*mod,0);\n\nsx = if(sw,sx,1);\nsy = if(sw,sy,1);\n\n\na = above(x,.5);\nb = above(y,.5);\ndis = pow((x-a)*(x-a) + .5625*(y-b)*(y-b),.5);\n\nlim = below(dis,.25);\n\ndx = if(lim,.5*(1-2*below(x,.5)),dx);\ndy = if(lim,.5*(1-2*below(y,.5)),dy);\n\n\nmod = -1;\n\na = sin(q4*.02347)*4;\nb = cos(q4*.03348)*4;\n//a = 1;\n//b = -2;\ndx = if(lim + sw,dx,mod*(x-a));\ndy = if(lim + sw,dy,mod*(y-b));\n\n//rot = if(lim + sw,rot,1.5708);","warp":"uniform sampler2D sampler_prayerwheel;\n shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\n  ).xyz - 0.5) / 256.0));\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_prayerwheel, uv_orig);\n  vec2 x_3;\n  x_3 = (uv - uv_orig);\n  ret_1 = (mix (ret_1, tmpvar_2.xyz, vec3(clamp (\n    (1.0 - (abs((\n      dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29))\n     - \n      fract((time * 0.2))\n    )) * 33.0))\n  , 0.0, 1.0))) * (0.97 + (0.03 * \n    clamp ((sqrt(dot (x_3, x_3)) * 200.0), 0.0, 1.0)\n  )));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * treb_att))\n  ), pow (hue_shader.xzy, vec3(bass_att))));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"#define sampler_pic sampler_prayerwheel\nsampler2D sampler_pic;\n\nshader_body\n{\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*1;\n\n    // mix in img...\n    float3 pic = tex2D(sampler_pic, uv_orig).xyz;\n    float lum = lum(pic);\n    float use_it = abs(lum - frac(time*0.2));\n    use_it = saturate(1 - use_it*33);\n    ret = lerp(ret, pic, use_it.xxx);\n\n    // darken over time\n    //ret -= 0.004;\n    //ret *= 0.99;\n    ret *= 0.97 + 0.03*saturate( length(uv - uv_orig)*200 );  // center only\n}\n","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)*treb_att),pow(hue_shader.xzy,bass_att));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}