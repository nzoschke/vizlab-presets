{"version":2,"baseVals":{"rating":5,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"solarize":1,"wave_a":0.001,"warp":0.01,"wave_r":0,"wave_g":0.4,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.66718,"tex_zoom":0.37409,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"a2":0.4},"init_eqs_str":"a.basstime=0;a.ob_r=0;a.ob_g=0;a.ob_b=0;","frame_eqs_str":"a.ang=a.basstime;a.tex_ang=Math.sin(a.basstime);a.ob_r=.5*Math.sin(1.12*a.basstime);a.ob_g=.5*Math.sin(1.5*a.basstime);a.ob_b=.5*Math.sin(2.12*a.basstime);","init_eqs_eel":"","frame_eqs_eel":"ang = basstime;\ntex_ang = sin(basstime);\n\nob_r = 0.5 * sin(basstime*1.12);\nob_g = 0.5 * sin(basstime*1.5);\nob_b = 0.5 * sin(basstime*2.12);"},{"baseVals":{"enabled":1,"textured":1,"rad":2.66718,"tex_zoom":0.37713,"g":1,"b":1,"a":0.7,"r2":0.8,"b2":1,"a2":0.5},"init_eqs_str":"a.tex_capture=0;","frame_eqs_str":"a.tex_capture=above(a.bass,1);","init_eqs_eel":"","frame_eqs_eel":"tex_capture = above(bass,1);"},{"baseVals":{"enabled":1,"sides":100,"r2":1},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"x":0.54,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.basstime=0;a.q2=0;a.q1=0;a.q4=0;a.q5=0;a.state=0;a.q3=0;","frame_eqs_str":"a.basstime+=.0006*a.bass;a.q2=a.basstime;a.q1=.001*a.basstime;a.q4=Math.cos(a.basstime);a.q5=Math.sin(a.basstime);a.state=.00001<Math.abs(above(a.state,5))?-4:a.state;a.state+=above(a.bass,1.5);a.monitor=a.state;a.q3=a.state;","pixel_eqs_str":"a.zoom=1;a.rot=0;","init_eqs_eel":"","frame_eqs_eel":"basstime  = basstime + bass*0.0006;\nq2 = basstime;\nq1 = basstime*0.001;\n\n\nq4 = cos(basstime);\nq5 = sin(basstime);\n\nstate = if(above(state,5),-4, state);\nstate = state + above(bass,1.5);\n\nmonitor = state;\nq3 = state;","pixel_eqs_eel":"zoom = 1;\nrot = 0;","warp":" shader_body { \n  float final_noise_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)].x = q5;\n  tmpvar_2[uint(0)].y = -(q4);\n  tmpvar_2[1u].x = q4;\n  tmpvar_2[1u].y = q5;\n  vec3 tmpvar_3;\n  tmpvar_3.xy = uv;\n  tmpvar_3.z = (q2 * 5.0);\n  final_noise_1 = ((texture (sampler_noisevol_lq, (tmpvar_3 * \n    pow (q3, 0.0)\n  )) * 2.0) - 1.0).x;\n  final_noise_1 = (final_noise_1 + (0.5 * (\n    (texture (sampler_noisevol_lq, (tmpvar_3 * q3)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.25 * (\n    (texture (sampler_noisevol_lq, (tmpvar_3 * (q3 * q3))) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.125 * (\n    (texture (sampler_noisevol_lq, (tmpvar_3 * pow (q3, 3.0))) * 2.0)\n   - 1.0)).x);\n  final_noise_1 += 1.0;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = texture (sampler_main, (((\n    ((uv - 0.5) * tmpvar_2)\n   * \n    (1.0 - ((rad * 3.0) * (1.0 - (bass * 0.1))))\n  ) * final_noise_1) + 0.5)).xyz;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)].x = q4;\n  tmpvar_2[uint(0)].y = -(q5);\n  tmpvar_2[1u].x = q5;\n  tmpvar_2[1u].y = q4;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  ret_1 = (mix (texture (sampler_main, fract(\n    (((tmpvar_3 * tmpvar_2) * 0.9) + 0.5)\n  )).xyz, texture (sampler_main, fract(\n    ((((\n      (-(tmpvar_3) + 0.5)\n     - 0.5) * -(tmpvar_2)) * 0.9) + 0.5)\n  )).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\n  vec3 tmpvar_4;\n  tmpvar_4.x = (ret_1.x * 5.0);\n  tmpvar_4.y = ret_1.y;\n  tmpvar_4.z = (ret_1.z * 5.0);\n  ret_1 = (1.0 - tmpvar_4);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body\n{\n    \n    float2x2 rot =  {  q5, q4,\n                       -q4, q5 };\n\n    float3 txr = float3(uv,q2*5);\n\n    float final_noise = 0;\n    final_noise += (1.0/pow(2,0))*(tex3D(sampler_noisevol_lq, txr*pow(q3,0))*2-1);\n    final_noise += (1.0/pow(2,1))*(tex3D(sampler_noisevol_lq, txr*pow(q3,1))*2-1);\n    final_noise += (1.0/pow(2,2))*(tex3D(sampler_noisevol_lq, txr*pow(q3,2))*2-1);\n    final_noise += (1.0/pow(2,3))*(tex3D(sampler_noisevol_lq, txr*pow(q3,3))*2-1);\n\n    final_noise =  (final_noise+1);\n    \n\n    ret = tex2D( sampler_main, mul(uv-0.5,rot)*(1-rad*3*(1 - bass*0.1))*final_noise + 0.5).xyz; \n   \n    // darken (decay) over time\n    ret = ret; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    float2x2 rot =  {  q4, q5,\n                       -q5, q4 };\n\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = lerp( tex2D(sampler_main, frac(mul(uv-0.5, rot)*0.9 + 0.5)).xyz, \n                tex2D(sampler_main, frac(mul(uv_echo-0.5, -rot)*0.9 + 0.5)).xyz, \n                0.50 \n              ); //video echo\n    ret *= 2.00; //gamma\n    float3 retp = ret; 1 - ret*(1-ret); //solarize\n    ret = 1 - (float3(retp[0]*5,retp[1],ret[2]*5));\n}"}