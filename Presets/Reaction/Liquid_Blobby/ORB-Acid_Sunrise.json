{"version":2,"baseVals":{"rating":5,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"solarize":1,"wave_a":0.001,"warp":0.01,"wave_r":0,"wave_g":0.4,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.66718,"tex_zoom":0.37742,"g":1,"b":1,"a":0.8,"g2":0,"a2":0.4},"init_eqs_str":"","frame_eqs_str":"a.tex_ang=-.01;","init_eqs_eel":"","frame_eqs_eel":"tex_ang = -0.01;"},{"baseVals":{"textured":1,"rad":2.66718,"tex_ang":0.00628,"tex_zoom":0.37747,"r":0,"b":1,"a":0.8,"r2":1,"b2":1,"a2":0.7,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r = 0.6 * 0.4*sin(q3*0.111);\ng = 0.6 * 0.4*sin(q3*0.171);\nb = 0.6 * 0.4*sin(q3*0.197);\n\ntex_ang = 0.01;","init_eqs_eel":"","frame_eqs_eel":"r = 0.6 * 0.4*sin(q3*0.111);\ng = 0.6 * 0.4*sin(q3*0.171);\nb = 0.6 * 0.4*sin(q3*0.197);\n\ntex_ang = 0.01;"},{"baseVals":{"enabled":1,"sides":100,"g":1,"b":1,"a":0.8,"a2":0.6,"border_r":0,"border_g":0,"border_b":0},"init_eqs_str":"a.q3=0;a.q5=0;","frame_eqs_str":"a.r2=.24*Math.sin(.178*a.q3);a.g2=.24*Math.sin(.138*a.q3);a.b2=.24*Math.sin(.118*a.q3);a.r=.24*Math.sin(.158*a.q3);a.g=.24*Math.sin(.258*a.q3);a.b=.24*Math.sin(.41*a.q3);a.x=.5+.01*Math.sin(a.q3);a.y=.5+.01*Math.cos(a.q3)*a.q5;","init_eqs_eel":"","frame_eqs_eel":"r2 = 0.6 * 0.4*sin(q3*0.178);\ng2 = 0.6 * 0.4*sin(q3*0.138);\nb2 = 0.6 * 0.4*sin(q3*0.118);\n\nr = 0.6 * 0.4*sin(q3*0.158);\ng = 0.6 * 0.4*sin(q3*0.258);\nb = 0.6 * 0.4*sin(q3*0.41);\n\n\nx = 0.5 + 0.01 * sin(q3);\ny = 0.5 + 0.01 * cos(q3)*q5;"},{"baseVals":{"enabled":1,"sides":100,"a":0.8,"a2":0.6},"init_eqs_str":"a.q3=0;","frame_eqs_str":"a.r2=.24*Math.sin(.258*a.q3);a.g2=.24*Math.sin(.158*a.q3);a.b2=.24*Math.sin(.108*a.q3);a.r=.24*Math.sin(.158*a.q3);a.g=.24*Math.sin(.258*a.q3);a.b=.24*Math.sin(.11*a.q3);","init_eqs_eel":"","frame_eqs_eel":"r2 = 0.6 * 0.4*sin(q3*0.258);\ng2 = 0.6 * 0.4*sin(q3*0.158);\nb2 = 0.6 * 0.4*sin(q3*0.108);\n\nr = 0.6 * 0.4*sin(q3*0.158);\ng = 0.6 * 0.4*sin(q3*0.258);\nb = 0.6 * 0.4*sin(q3*0.11);\n\n\n"}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.basstime=0;a.q2=0;a.q1=0;a.othertime=0;a.q3=0;a.basstime=.1*rand(1E3);a.othertime=.1*rand(1E3);","frame_eqs_str":"a.basstime+=.0003*a.bass;a.q2=a.basstime;a.q1=.00001*a.basstime;a.othertime+=.03*a.bass;a.q3=a.othertime;","pixel_eqs_str":"a.zoom=1;a.rot=0;","init_eqs_eel":"basstime = rand(1000)*0.1;\nothertime = rand(1000)*0.1;","frame_eqs_eel":"basstime  = basstime + bass*0.0003;\nq2 = basstime;\nq1 = basstime*0.00001;\n\nothertime  = othertime + bass*0.03;\nq3 = othertime;","pixel_eqs_eel":"zoom = 1;\nrot = 0;","warp":" shader_body { \n  float final_noise_1;\n  vec3 tmpvar_2;\n  tmpvar_2.xy = uv;\n  tmpvar_2.z = (q2 * 10.0);\n  final_noise_1 = ((texture (sampler_noisevol_lq, tmpvar_2) * 2.0) - 1.0).x;\n  final_noise_1 = (final_noise_1 + (0.5 * (\n    (texture (sampler_noisevol_lq, (tmpvar_2 * 2.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.25 * (\n    (texture (sampler_noisevol_lq, (tmpvar_2 * 4.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.125 * (\n    (texture (sampler_noisevol_lq, (tmpvar_2 * 8.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = ((final_noise_1 + 1.0) * 0.5);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = texture (sampler_main, (((\n    (uv - 0.5)\n   * 1.5) * final_noise_1) + 0.5)).xyz;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\n    (0.5 - uv)\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\n  ret_1 = (1.0 - (1.0 - (\n    (ret_1 * (1.0 - ret_1))\n   * 4.0)));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    float3 txr = float3(uv,q2*10);\n\n    float final_noise = 0;\n\n    //perlin noise\n    final_noise += ((1.0/pow(2,0))*((tex3D(sampler_noisevol_lq, txr*pow(2,0))*2)-1)); \n    final_noise += ((1.0/pow(2,1))*((tex3D(sampler_noisevol_lq, txr*pow(2,1))*2)-1)); \n    final_noise += ((1.0/pow(2,2))*((tex3D(sampler_noisevol_lq, txr*pow(2,2))*2)-1)); \n    final_noise += ((1.0/pow(2,3))*((tex3D(sampler_noisevol_lq, txr*pow(2,3))*2)-1)); \n   \n\n    final_noise =  (final_noise+1)*0.5;\n    \n\n    ret = tex2D( sampler_main, (uv-0.5)*1.5*final_noise + 0.5 ).xyz; \n   \n    // darken (decay) over time\n    ret = ret; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo).xyz, \n                0.50 \n              ); //video echo\n    ret *= 2.00; //gamma\n    float3 retish = 1 - ret*(1-ret)*4; //solarize\n    ret = 1 - retish;\n}"}