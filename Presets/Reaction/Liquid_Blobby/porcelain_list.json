{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"invert":1,"wave_a":0.001,"wave_scale":0.958,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_x":25.6,"mv_y":9.6,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.04012,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0.5,"g":1,"b":0.9,"a":0.5,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.4*Math.sin(div(a.time,3));a.y=.5+.4*Math.sin(div(a.time,4));","init_eqs_eel":"","frame_eqs_eel":"x = .5+.4*sin(time/3);\ny = .5+.4*sin(time/4);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0},"init_eqs_str":"a.g0=0;a.y0=0;a.q1=0;a.x0=0;a.q24=0;a.r0=0;a.trig=0;a.q2=0;a.b0=0;a.rad0=0;","frame_eqs_str":"a.trig=a.q24;a.x0=a.x0*bnot(a.trig)+a.trig*(.5+div(Math.floor(rand(100)),200));a.y0=a.y0*bnot(a.trig)+a.trig*(.5+div(Math.floor(rand(100)),200));a.x0+=div(.3*a.q1,a.fps);a.y0+=div(.3*a.q2,a.fps);a.x0-=Math.floor(a.x0);a.y0-=Math.floor(a.y0);a.x=a.x0;a.y=a.y0;a.rad0=a.rad0*bnot(a.trig)+a.trig*(.01+div(Math.floor(rand(100)),800));a.rad=a.rad0;a.r0=bnot(a.trig)*a.r0+div(a.trig*Math.floor(rand(10)),10);a.g0=bnot(a.trig)*a.g0+div(a.trig*Math.floor(rand(10)),10);a.b0=bnot(a.trig)*\na.b0+div(a.trig*Math.floor(rand(10)),10);a.r=a.r0;a.b=a.b0;a.g=a.g0;a.r2=a.b;a.b2=a.g;a.g2=a.r;a.a=.4;a.a2=0;","init_eqs_eel":"","frame_eqs_eel":"trig = q24;\n\nx0 = x0*bnot(trig) + trig*(.5+ int(rand(100))/200); \ny0 = y0*bnot(trig) + trig*(.5+ int(rand(100))/200); \n\n\nx0 = x0 + .3*q1/fps;\ny0 = y0 + .3*q2/fps;\n\nx0 = x0 - int(x0);\ny0 = y0 - int(y0);\n\nx = x0; y = y0;\nrad0 = rad0*bnot(trig) + trig*(.01+int(rand(100))/800);\nrad = rad0;\n\n\nr0 = bnot(trig)*r0 + trig * int(rand(10))/10;\ng0 = bnot(trig)*g0 + trig * int(rand(10))/10;\nb0 = bnot(trig)*b0 + trig * int(rand(10))/10;\n\nr = r0; b = b0; g = g0;\nr2 = b; b2 = g; g2 = r;\na= .4; a2 = .0; "},{"baseVals":{"enabled":1,"sides":44,"additive":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"a.g0=0;a.y0=0;a.q1=0;a.x0=0;a.q24=0;a.r0=0;a.trig=0;a.q2=0;a.b0=0;a.rad0=0;","frame_eqs_str":"a.trig=a.q24;a.x0=a.x0*bnot(a.trig)+a.trig*(.5+div(Math.floor(rand(100)),200));a.y0=a.y0*bnot(a.trig)+a.trig*(.5+div(Math.floor(rand(100)),200));a.x0+=div(.3*a.q1,a.fps);a.y0+=div(.3*a.q2,a.fps);a.x0-=Math.floor(a.x0);a.y0-=Math.floor(a.y0);a.x=a.x0;a.y=a.y0;a.rad0=a.rad0*bnot(a.trig)+a.trig*(.04+div(Math.floor(rand(100)),800));a.rad=a.rad0;a.r0=bnot(a.trig)*a.r0+div(a.trig*Math.floor(rand(10)),10);a.g0=bnot(a.trig)*a.g0+div(a.trig*Math.floor(rand(10)),10);a.b0=bnot(a.trig)*\na.b0+div(a.trig*Math.floor(rand(10)),10);a.r=a.r0;a.b=a.b0;a.g=a.g0;a.r2=0;a.b2=0;a.g2=0;a.a=.4;a.a2=0;","init_eqs_eel":"","frame_eqs_eel":"trig = q24;\n\nx0 = x0*bnot(trig) + trig*(.5+ int(rand(100))/200); \ny0 = y0*bnot(trig) + trig*(.5+ int(rand(100))/200); \n\n\nx0 = x0 + .3*q1/fps;\ny0 = y0 + .3*q2/fps;\n\nx0 = x0 - int(x0);\ny0 = y0 - int(y0);\n\nx = x0; y = y0;\nrad0 = rad0*bnot(trig) + trig*(.04+int(rand(100))/800);\nrad = rad0;\n\n\nr0 = bnot(trig)*r0 + trig * int(rand(10))/10;\ng0 = bnot(trig)*g0 + trig * int(rand(10))/10;\nb0 = bnot(trig)*b0 + trig * int(rand(10))/10;\n\nr = r0; b = b0; g = g0;\nr2 = 0; b2 = 0; g2 = 0;\na= .4; a2 = .0; "},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.49981,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rad = q2+.02\n;","init_eqs_eel":"","frame_eqs_eel":"rad = q2+.02\n;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"thick":1,"additive":1,"scaling":3.91581,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t2 = t2 + bass_att;","point_eqs_str":"\nx = .5 + sample*((100*sample)%2-.5);\nk1 = (100*sample)%4;\nx = sample ;\n\nval = value1;\ny = val * (.25-(sample-.5)*(sample-.5)) + .5;\n\nk1 = (10*bass_att)%4;\n\nr = .8; g = .8; b = 1;\na = bnot(k1); a=.1;","init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"\nx = .5 + sample*((100*sample)%2-.5);\nk1 = (100*sample)%4;\nx = sample ;\n\nval = value1;\ny = val * (.25-(sample-.5)*(sample-.5)) + .5;\n\nk1 = (10*bass_att)%4;\n\nr = .8; g = .8; b = 1;\na = bnot(k1); a=.1;"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"xi = int(rand(100))/100;\nyi = int(rand(100))/100;\n\nx = xi; y = yi;\n\na = q21/15;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = int(rand(100))/100;\nyi = int(rand(100))/100;\n\nx = xi; y = yi;\n\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.trel3=0;a.index2=0;a.q25=0;a.index=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.movex=0;a.q1=0;a.dec_med=0;a.q5=0;a.q9=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q11=0;a.q4=0;a.q16=0;a.q26=0;a.trot=0;a.p2=0;a.mov=0;a.avg=0;a.movez=0;a.trel4=0;a.q19=0;a.beat=0;a.q17=0;a.trel2=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q14=0;a.movey=0;a.trel1=0;a.q3=0;a.t0=0;a.q7=0;a.q28=0;a.q30=0;a.q20=0;a.q8=0;a.dirx=1;","frame_eqs_str":"a.dec_med=pow(.7,div(30,a.fps));a.dec_slow=pow(.9,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,a.avg+a.peak)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+\na.treb;a.q29=2*(mod(a.index2,2)-.5);a.q25=Math.min(1,div(a.q22,2));a.k1=a.is_beat*equal(mod(a.index,4),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q27=a.index;a.q28=a.index2;a.mov=a.mov*a.dec_med+(1-a.dec_med)*above(mod(a.index,8),2);a.movez+=div(1,a.fps)*a.mov;a.q30=a.movez;a.q8=a.movex;a.q9=a.movey;a.trel1+=div(a.q1*a.q22*3,a.fps);a.trel2+=div(a.q2*a.q22*2,a.fps);a.trel3+=\ndiv(4*(1-a.mov),a.fps);a.trel4+=div(1*a.mov,a.fps);a.q11=.3*Math.sin(a.trel1);a.q12=.1*Math.cos(a.trel2);a.q13=8+6*Math.sin(a.trel3);a.q14=.3*Math.sin(a.trel2);a.q15=.2*Math.cos(a.trel3);a.q16=6+3*Math.sin(a.trel1);a.q17=.3*Math.sin(a.trel4);a.q18=.3*Math.cos(a.trel2);a.q19=3+Math.sin(a.trel3);a.trot=div(a.trel1,2);a.trot=div(6.28*a.index2,4);a.q5=Math.cos(a.trot);a.q6=Math.sin(a.trot);a.q7=-a.q6;a.q8=a.q5;","pixel_eqs_str":"","init_eqs_eel":"dirx = 1;","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, avg+peak) * above (time, t0+.1);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%4;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\nq29 = 2 * (index2%2-.5);\nq25 = min(1,q22/2);\n\nk1 =  is_beat*equal(index%4,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n\nq27 = index;\nq28 = index2;\n\nmov = mov*dec_med + (1-dec_med)*above(index%8,2);\nmovez = movez + 1/fps*mov;\nq30 = movez;\n//**************************\n\nq8 = movex; q9 = movey;\n\ntrel1 = trel1 + (q1*q22*3)/fps;\ntrel2 = trel2 + (q2*q22*2)/fps;\ntrel3 = trel3 + 4*(1-mov)/fps;\ntrel4 = trel4 + 1 * mov/fps;\n\nq11 = .3*sin(trel1); \nq12 = .1*cos(trel2); \nq13 = 8 + 6*sin(trel3);\n\nq14 = .3*sin(trel2); \nq15 = .2*cos(trel3) ; \nq16 = 6 + 3*sin(trel1);\n\nq17 = .3*sin(trel4); \nq18 = .3*cos(trel2); \nq19 = 3 + sin(trel3);\n\ntrot = trel1/2;\ntrot = index2*6.28/4;\nq5 = cos(trot);\nq6 = sin(trot);\nq7 = -q6;\nq8 = q5;","pixel_eqs_eel":"","warp":"uniform sampler2D sampler_lichen;\n shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, (uv + ((texture (sampler_main, \n    (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)\n  ).xy - 0.5) * q1)));\n  ret_1 = (tmpvar_2.xyz - (vec3(0.001, 0.001, 0.0) * (\n    (clamp (((tmpvar_2.xyz - 0.5) * 99.0), 0.0, 1.0) * 2.0)\n   - 1.0)));\n  vec2 tmpvar_3;\n  tmpvar_3.x = slow_roam_cos.w;\n  tmpvar_3.y = slow_roam_sin.z;\n  ret_1 = (ret_1 * (0.998 - (0.1 * \n    clamp (((texture (sampler_lichen, (\n      (tmpvar_3 * 0.7)\n     + \n      (uv_orig * 0.2)\n    )).y * 5.0) - 3.7), 0.0, 1.0)\n  )));\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 15.0));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec3 xlat_mutableret2;\nvec2 xlat_mutablesam;\n shader_body { \n  vec2 uv_1;\n  xlat_mutablesam = (texture (sampler_main, (uv * 0.5)).xy * ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, (xlat_mutablesam + uv));\n  float tmpvar_3;\n  tmpvar_3 = (0.5 * bass_att);\n  xlat_mutableret1 = ((tmpvar_2.x * (\n    (tmpvar_3 * uv_orig.y)\n   + tmpvar_2.xyz)) + (tmpvar_2.x * texture (sampler_main, uv).xyz));\n  xlat_mutableret1 = (xlat_mutableret1 * ((xlat_mutableret1 + 1.0) / 2.0));\n  uv_1 = (((uv - 0.5) * 0.3) + 0.5);\n  xlat_mutablesam = (texture (sampler_main, (uv_1 * 0.5)).xy * ((\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv_1).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, (xlat_mutablesam + uv_1));\n  xlat_mutableret2 = ((tmpvar_4.x * (\n    (tmpvar_3 * uv_orig.y)\n   + tmpvar_4.xyz)) + (tmpvar_4.x * texture (sampler_main, uv_1).xyz));\n  xlat_mutableret2 = (xlat_mutableret2 * (xlat_mutableret1 + 1.0));\n  vec3 tmpvar_5;\n  tmpvar_5 = max (xlat_mutableret1, xlat_mutableret2);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (tmpvar_5 * (0.5 + (0.5 * \n    dot (tmpvar_5, vec3(0.32, 0.49, 0.29))\n  )));\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"sampler sampler_lichen;\n\nshader_body\n{\n    // PAINTERLY EFFECT:\n    float2 uv2 = uv;\n    float2 delta2 = texsize.zw*float2(1,1);\n    float3 blurry_color = tex2D( sampler_main, \n        lerp(uv,uv_orig,-1) + delta2 ).xyz;\n    uv2.xy += (blurry_color.xy-0.5) * q1;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv2 ).xyz;\n\n    // push all colors toward 0.5:\n    ret.xyz -= (saturate((ret.xyz-0.5)*99)*2-1)*float3(1,1,0)*0.001;\n\n    float2 uv3 = float2(slow_roam_cos.w,slow_roam_sin.z)*0.7 + uv_orig.xy*0.2;\n    ret.xyz *= 0.998 - 0.1*saturate(tex2D(sampler_lichen, uv3).y*5-3.7);\n\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*15;\n}","comp_hlsl":"float3 ret1, ret2, reta;\nfloat2 sam;\nshader_body\n{\n    sam = tex2D(sampler_main,uv*.5);\n    ret1 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret1 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret1;\n    ret1 *= (ret1+1)/2; //gamma\n\nuv = (uv-.5)*.3+.5;\n    sam = tex2D(sampler_main,uv*.5);\n    ret2 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret2 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret2;\n    ret2 *= (ret1+1); //gamma\n\n\n\nret = max(ret1, ret2);\nret *= .5+.5*lum(ret);\n//ret = (1+ret1)*ret2;\n\n}\n\n"}