{"version":2,"baseVals":{"rating":5,"decay":0.9,"echo_zoom":1,"wave_mode":3,"wave_dots":1,"wrap":0,"wave_a":0.9,"wave_scale":2.905,"wave_smoothing":0.6,"wave_mystery":-0.3,"warpanimspeed":2.449,"warpscale":1.331,"zoomexp":2.70481,"zoom":1.0001,"dy":-0.1,"warp":0.01,"sy":1.69446,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.runtreb=0;a.q25=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.q5=0;a.vb=0;a.trel=0;a.q9=0;a.bass_thresh=0;a.pi23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.atime=0;a.q4=0;a.q16=0;a.q26=0;a.runbass=0;a.q19=0;a.beat=0;a.q17=0;a.vol=0;a.runmids=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.vvm=0;a.q32=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.trele=0;a.mtime=0;a.vvt=0;a.q8=0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(Math.abs(a.bass-a.bass_att),2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(Math.abs(a.mid-a.mid_att),2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(Math.abs(a.treb-a.treb_att),2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.runbass+=a.vvb;a.runmids+=a.vvm;a.runtreb+=a.vvt;a.pi23=1.33333333333332*Math.asin(-1);\na.atime=1.85*(a.runtreb+a.runmids+a.runbass);a.q8=.4*(Math.sin(a.atime-0*a.pi23)+1);a.q9=.4*(Math.sin(a.atime-1*a.pi23)+1);a.q10=.4*(Math.sin(a.atime-2*a.pi23)+1);a.vb=.95*a.vb+(1-a.vb)*pow(Math.abs(a.bass-a.bass_att),2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(Math.abs(a.mid-a.mid_att),2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(Math.abs(a.treb-a.treb_att),2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,\nMath.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=10*(a.vvt+a.vvm+a.vvb);a.q2=10*(a.vvt+a.vvm+a.vvb);a.q3=10*(a.vvt+a.vvm+a.vvb);a.q4=10*(a.vvt+a.vvm+a.vvb);a.q5=10*(a.vvt+a.vvm+a.vvb);a.q6=10*(a.vvt+a.vvm+a.vvb);a.q4=10*(a.vvt+a.vvm+a.vvb);a.q5=10*(a.vvt+a.vvm+a.vvb);a.q6=10*(a.vvt+a.vvm+a.vvb);a.q7=10*(a.vvt+a.vvm+a.vvb);a.q11=10*(a.vvt+a.vvm+a.vvb);a.q12=10*(a.vvt+a.vvm+a.vvb);a.q13=10*(a.vvt+a.vvm+a.vvb);a.q14=10*(a.vvt+a.vvm+a.vvb);a.q15=10*(a.vvt+a.vvm+a.vvb);a.q16=10*(a.vvt+a.vvm+\na.vvb);a.q17=10*(a.vvt+a.vvm+a.vvb);a.q18=10*(a.vvt+a.vvm+a.vvb);a.q19=10*(a.vvt+a.vvm+a.vvb);a.q20=10*(a.vvt+a.vvm+a.vvb);a.q21=10*(a.vvt+a.vvm+a.vvb);a.q22=10*(a.vvt+a.vvm+a.vvb);a.q23=10*(a.vvt+a.vvm+a.vvb);a.q24=10*(a.vvt+a.vvm+a.vvb);a.q25=10*(a.vvt+a.vvm+a.vvb);a.q26=10*(a.vvt+a.vvm+a.vvb);a.q27=10*(a.vvt+a.vvm+a.vvb);a.q28=10*(a.vvt+a.vvm+a.vvb);a.q29=10*(a.vvt+a.vvm+a.vvb);a.q30=10*(a.vvt+a.vvm+a.vvb);a.q31=10*(a.vvt+a.vvm+a.vvb);a.q32=10*(a.vvt+a.vvm+a.vvb);a.bass_thresh=2*above(a.bass_att,\na.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.91*(a.bass_thresh-1.3)+1.3);a.vol=.1*(9*a.vol+.333333*(a.bass_att+a.mid_att+a.treb_att));a.q11=a.vol;a.mtime+=.1*a.vol;a.q10=.1*a.mtime;a.trel+=div(1+div(a.vol,2),a.fps);a.q1=.44*a.trel;a.q2=.32*a.trel;a.q3=.285*a.trel;a.q7=.1*a.trele;a.q4=.2*Math.sin(.4*a.trel);a.q5=.2*Math.cos(.634*a.trel);a.q6=-.2*Math.sin(.58*a.trel);a.beat=1*equal(a.bass_thresh,2)+(1-equal(a.bass_thresh,2))*a.beat*.95;a.q8=a.beat;a.monitor=a.beat;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//martin no religion / my omniversal absence for changing the background light\nvb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nrunbass=runbass+vvb;\nrunmids=runmids+vvm ;\nruntreb=runtreb+vvt;\npi23=4*asin(-1)*.33333333333333;\natime=(runtreb+runmids+runbass)*1.85;\nq8= (sin(atime-0*pi23)+1)*.4;\nq9= (sin(atime-1*pi23)+1)*.4;\nq10=(sin(atime-2*pi23)+1)*.4;\n\nvb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = (vvt+vvm+vvb)*10;\nq2 = (vvt+vvm+vvb)*10;\nq3 = (vvt+vvm+vvb)*10;\nq4 =(vvt+vvm+vvb)*10;\nq5 =(vvt+vvm+vvb)*10;\nq6 =(vvt+vvm+vvb)*10;\nq4 =(vvt+vvm+vvb)*10;\nq5 =(vvt+vvm+vvb)*10;\nq6 =(vvt+vvm+vvb)*10;\nq7 =(vvt+vvm+vvb)*10;\nq11=(vvt+vvm+vvb)*10;\nq12=(vvt+vvm+vvb)*10;\nq13=(vvt+vvm+vvb)*10;\nq14=(vvt+vvm+vvb)*10;\nq15=(vvt+vvm+vvb)*10;\nq16=(vvt+vvm+vvb)*10;\nq17=(vvt+vvm+vvb)*10;\nq18=(vvt+vvm+vvb)*10;\nq19=(vvt+vvm+vvb)*10;\nq20=(vvt+vvm+vvb)*10;\nq21=(vvt+vvm+vvb)*10;\nq22=(vvt+vvm+vvb)*10;\nq23=(vvt+vvm+vvb)*10;\nq24=(vvt+vvm+vvb)*10;\nq25=(vvt+vvm+vvb)*10;\nq26=(vvt+vvm+vvb)*10;\nq27=(vvt+vvm+vvb)*10;\nq28=(vvt+vvm+vvb)*10;\nq29=(vvt+vvm+vvb)*10;\nq30=(vvt+vvm+vvb)*10;\nq31=(vvt+vvm+vvb)*10;\nq32=(vvt+vvm+vvb)*10;\n\n// Black Rebel Motorcycle Club - Lien On Your Dreams\n\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.91+1.3);\n\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\nq11 = vol;\n\nmtime = mtime+vol*0.1;\n\nq10 = mtime*0.1;\n\ntrel = trel + (1+vol/2)/fps;\n\nq1 = trel*0.44;\nq2 = trel*0.32;\nq3 = trel*0.285;\nq7 = trele*0.1;\n\nq4 = 0.2*sin(trel*0.4);\nq5 = 0.2*cos(trel*0.634);\nq6 = -0.2*sin(trel*0.58);\n\n//sy = sy + vol;\n\nbeat = equal(bass_thresh, 2)*1 + (1-equal(bass_thresh, 2))*beat*0.95;\nq8 = beat;\nmonitor=beat;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, (uv + texsize.zx)) - 0.5).xyz;\n  uv_1 = (uv + (tmpvar_2 * 0.01).xy);\n  uv_1.y = (uv_1.y - (abs(\n    (tmpvar_2 * 0.01)\n  ) + (bass_att * 0.01)).x);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (texture (sampler_main, ((\n    (uv_1 - 0.5)\n   + 0.5) - (\n    ((texture (sampler_blur1, ((\n      (uv_1 - 0.5)\n     * 0.9) + 0.5)).xyz * scale1) + bias1)\n   * 0.01).xy)).xyz - 0.002);\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv2_3.x = ((uv_1.x * -0.497265) - (uv_1.y * 0.8675987));\n  uv2_3.y = ((uv_1.x * 0.8675987) + (uv_1.y * -0.497265));\n  uv3_2.x = ((uv_1.x * -0.5000263) - (uv_1.y * -0.8660102));\n  uv3_2.y = ((uv_1.x * -0.8660102) + (uv_1.y * -0.5000263));\n  ret_4 = (max (max (texture (sampler_main, \n    (uv_1 + 0.5)\n  ).xyz, texture (sampler_main, \n    (uv2_3 + 0.5)\n  ).xyz), texture (sampler_main, (uv3_2 + 0.5)).xyz) * 1.3);\n  ret_4 = (ret_4 * ((hue_shader * 4.0) - 2.0));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_4;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    float3 txr = float3(uv,q1*0.1);\n    float2  uv2 =  uv;\n    uv2 = uv + texsize.zx;\n    float3 color = tex2D(sampler_noise_lq, uv2) - 0.5; \n    uv += color*0.01; \n    uv.y -= abs(color*0.01) + bass_att*0.01;\n    \n    ret = tex2D( sampler_main, (uv-0.5)*(1) + 0.5  - GetBlur1((uv - 0.5)*0.9 + 0.5)*0.01).xyz;    \n    ret = ret-0.002;// - 0.08; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2, uv3;\n    float ang2, c, s;\n\n    uv -= 0.5;\n    uv *= aspect.xy;    \n\n    ang2 = 6.28*0.333;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    ang2 = 6.28*0.667;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv3.x =  uv.x*c - uv.y*s;\n    uv3.y =  uv.x*s + uv.y*c;\n\n    ret = tex2D(sampler_main, uv + 0.5).xyz;\n    ret = max(ret, tex2D(sampler_main,uv2 + 0.5).xyz);\n    ret = max(ret, tex2D(sampler_main,uv3 + 0.5).xyz);\n\n    ret *= 1.3;\n    ret *= hue_shader*4-2;\n\n}\n\n"}