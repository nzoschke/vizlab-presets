{"version":2,"baseVals":{"rating":5,"gammaadj":1.998,"wave_mode":2,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wave_a":1.004,"wave_scale":100,"wave_smoothing":0.9,"wave_mystery":0.5,"modwavealphastart":0.7,"modwavealphaend":0.38,"warpscale":2.853,"zoomexp":1.00815,"zoom":1.02008,"dx":0.005,"warp":0,"ob_r":0.66,"ob_g":0.29,"ob_b":0.57,"ob_a":1,"ib_size":0,"ib_r":0,"mv_x":64,"mv_y":48,"mv_l":1.05,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"rad":0.1416,"tex_zoom":3.26172,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.aba=0;a[\"switch\"]=0;","frame_eqs_str":"a.dx=0;a.aba+=.1*a.bass;a[\"switch\"]=mod(a[\"switch\"]-above(a.bass,1),2);a.monitor=a[\"switch\"];","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"dx=0;\naba=aba+bass*0.1;\nswitch=(switch-above(bass,1))%2;\nmonitor=switch;\n//dx=sin(aba)*0.02+dx;\n//dy=cos(aba*0.2)*0.02+dy;\n//zoom=zoom+0.07*switch;\n//rot=zoom*switch*dx*dy*200;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.0;\n  float tmpvar_3;\n  tmpvar_3 = (texsize.z * 4.0);\n  tmpvar_2.y = tmpvar_3;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = tmpvar_3;\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv_orig + tmpvar_2)\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - tmpvar_4)\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6.y = 0.0;\n  float tmpvar_7;\n  tmpvar_7 = (texsize.w * 4.0);\n  tmpvar_6.x = tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8.y = 0.0;\n  tmpvar_8.x = tmpvar_7;\n  vec3 tmpvar_9;\n  tmpvar_9 = (((texture (sampler_blur1, \n    (uv_orig + tmpvar_6)\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - tmpvar_8)\n  ).xyz * scale1) + bias1));\n  ret_1 = (texture (sampler_main, uv_orig).xyz * (1.0/((1.0 + \n    (tmpvar_5 * tmpvar_9)\n  ))));\n  ret_1 = (ret_1 * (0.99 - (\n    abs((tmpvar_5 + tmpvar_9))\n   * 0.5)));\n  ret_1 = ((mix (ret_1, texture (sampler_main, uv).xyz, vec3(\n    (rad + 0.1)\n  )) * 1.01) + 0.002);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_1;\n  ret = tmpvar_10.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  ret_1 = (ret_1 + ((texture (sampler_blur1, \n    (uv + ret_1.xy)\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_2;\n  tmpvar_2.x = (uv.x - ret_1.y);\n  tmpvar_2.y = (uv.y - ret_1.y);\n  ret_1 = (ret_1 + ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3 = pow ((ret_1 * 0.6), vec3(8.0, 8.0, 8.0));\n  ret_1 = (tmpvar_3 + pow (texture (sampler_main, uv).xyz, tmpvar_3));\n  ret_1 = (ret_1 - 1.0);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 olduv=uv;\nuv=uv_orig;\nret=GetPixel(uv);\nfloat s=4;\n    float3 dx =(GetBlur1(uv + float2(0,texsize.z*s)) - GetBlur1(uv-float2(0,texsize.z*s)));\n    float3 dy =(GetBlur1(uv + float2(texsize.w*s,0)) - GetBlur1(uv-float2(texsize.w*s,0)));\nret*=(1/(1+dx*dy));\nret*=0.99-abs(dx+dy)*0.5;\nret=lerp(ret,GetPixel(olduv),rad+0.1);\nret=ret*1.01+0.002;\n}","comp_hlsl":"shader_body\n{\nret=GetBlur1(uv);\nret+=GetBlur1(float2(uv.x+ret.x,uv.y+ret.y));\nret+=GetBlur1(float2(uv.x-ret.y,uv.y-ret.y));\nret=pow(ret*0.6,8);\n//ret*=ret.z;\nret+=pow(GetPixel(uv),ret);\nret-=1;\n//ret=GetPixel(uv);\n}"}