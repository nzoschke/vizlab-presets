{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.94,"echo_zoom":0.597,"echo_orient":1,"wave_mode":7,"additivewave":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":100,"wave_scale":2.685,"wave_smoothing":0.702,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.012,"warpscale":100,"zoomexp":0.1584,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"num_inst":160,"rad":0.31559,"ang":0.7854,"tex_ang":0.77911,"tex_zoom":1.85321,"g":0.65,"b":0.55,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"num_inst":53,"rad":0.54279,"tex_zoom":0.8622,"g":0.51,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.01058,"enabled":0},"init_eqs_str":"pulse = 0;","frame_eqs_str":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\npulse = pulse*above(pulse,0);\nt1 = pulse;","point_eqs_str":"x = sqrt(sample*mid*.05);\ny = .5 + (.1+t1)*cos(sample*20);","init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\npulse = pulse*above(pulse,0);\nt1 = pulse;","point_eqs_eel":"x = sqrt(sample*mid*.05);\ny = .5 + (.1+t1)*cos(sample*20);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.d=0;a.w=0;a.frame3=0;a.b3=0;a.t5=0;a.m3=0;a.m7=0;a.t1=0;a.b4=0;a.cz=0;a.m4=0;a.q1=0;a.b7=0;a.py2=0;a.q9=0;a.py3=0;a.vx1=0;a.cr=0;a.t3=0;a.my=0;a.b5=0;a.t6=0;a.px1=0;a.q10=0;a.py1=0;a.t7=0;a.dir=0;a.b6=0;a.m2=0;a.mx=0;a.b2=0;a.px3=0;a.t2=0;a.vy2=0;a.m6=0;a.px2=0;a.vy1=0;a.q2=0;a.m1=0;a.vx2=0;a.q3=0;a.s1=0;a.s2=0;a.t4=0;a.m5=0;a.c=0;a.b1=0;a.sigmoide=0;","frame_eqs_str":"a.frame3=mod(a.frame,3);a.w=-a.time;a.w=4*Math.sin(.1*a.time)+4*Math.sin(.21618*a.time);a.c=.2;a.px1=.5+a.c*Math.sin(a.w);a.py1=.5+a.c*Math.cos(a.w);a.px2=.5+a.c*Math.sin(a.w+4.1888);a.py2=.5+a.c*Math.cos(a.w+4.1888);a.px3=.5+a.c*Math.sin(a.w+2.0944);a.py3=.5+a.c*Math.cos(a.w+2.0944);a.wave_x=.00001<Math.abs(equal(a.frame3,0))?a.px1:.00001<Math.abs(equal(a.frame3,1))?a.px2:a.px3;a.wave_y=.00001<Math.abs(equal(a.frame3,0))?a.py1:.00001<Math.abs(equal(a.frame3,1))?a.py2:a.py3;\na.wave_r=1;a.wave_g=1;a.wave_b=0;a.b7=a.b6;a.b6=a.b5;a.b5=a.b4;a.b4=a.b3;a.b3=a.b2;a.b2=a.b1;a.b1=a.bass;a.m7=a.m6;a.m6=a.m5;a.m5=a.m4;a.m4=a.m3;a.m3=a.m2;a.m2=a.m1;a.m1=a.mid;a.t7=a.t6;a.t6=a.t5;a.t5=a.t4;a.t4=a.t3;a.t3=a.t2;a.t2=a.t1;a.t1=a.treb;a.q1=div(a.b1+a.b2+a.b3+a.b4+a.b5+a.b6+a.b7,7);a.q2=div(a.m1+a.m2+a.m3+a.m4+a.m5+a.m6+a.m7,7);a.q3=div(a.t1+a.t2+a.t3+a.t4+a.t5+a.t6+a.t7,7);a.q9=div(1,a.aspecty);a.q10=div(1,a.aspectx);","pixel_eqs_str":"a.x=.5+(a.x-.5)*a.q9;a.y=.5+(a.y-.5)*a.q10;a.w=4*Math.sin(.1*a.time)+4*Math.sin(.21618*a.time);a.y=.5+.75*(a.y-.5);a.d=.3-.05*(a.q1-a.bass);a.px1=.5+a.d*Math.sin(a.w);a.py1=.5-a.d*Math.cos(a.w);a.d=.3-.05*(a.q2-a.mid);a.px3=.5+a.d*Math.sin(a.w+4.1888);a.py3=.5-a.d*Math.cos(a.w+4.1888);a.d=.3-.05*(a.q3-a.treb);a.px2=.5+a.d*Math.sin(a.w+2.0944);a.py2=.5-a.d*Math.cos(a.w+2.0944);a.mx=div(a.px1+a.px2+a.px3,3);a.my=div(a.py1+a.py2+a.py3,3);a.vx1=a.px2-a.px1;a.vy1=a.py2-a.py1;a.vx2=\na.x-a.px1;a.vy2=a.y-a.py1;a.c=150-50*a.bass;a.sigmoide=1;a.dir=Math.acos(div(a.vx1*a.vx2+a.vy1*a.vy2,sqrt(a.vx1*a.vx1+a.vy1*a.vy1)*sqrt(a.vx2*a.vx2+a.vy2*a.vy2)))-1;a.sigmoide=div(a.sigmoide,1+pow(2,a.c*a.dir));a.vx1=a.px3-a.px2;a.vy1=a.py3-a.py2;a.vx2=a.x-a.px2;a.vy2=a.y-a.py2;a.dir=Math.acos(div(a.vx1*a.vx2+a.vy1*a.vy2,sqrt(a.vx1*a.vx1+a.vy1*a.vy1)*sqrt(a.vx2*a.vx2+a.vy2*a.vy2)))-1;a.sigmoide=div(1*a.sigmoide,1+pow(2,a.c*a.dir));a.vx1=a.px1-a.px3;a.vy1=a.py1-a.py3;a.vx2=a.x-a.px3;a.vy2=a.y-a.py3;\na.dir=Math.acos(div(a.vx1*a.vx2+a.vy1*a.vy2,sqrt(a.vx1*a.vx1+a.vy1*a.vy1)*sqrt(a.vx2*a.vx2+a.vy2*a.vy2)))-1.2;a.sigmoide=div(a.sigmoide,1+pow(2,a.c*a.dir));a.cz=.05+.01*a.bass;a.cr=.02+.1*a.treb;a.s1=a.sigmoide+.1*(a.q1-a.bass);a.s2=a.cr*(a.sigmoide+.1*(a.q3-a.treb));a.dx=.05*Math.sin(a.w)*(1-.5*a.treb)*(a.sigmoide-.5);a.dy=.05*-Math.cos(a.w)*(1-.5*a.treb)*(a.sigmoide-.5);","init_eqs_eel":"","frame_eqs_eel":"frame3 = frame%3;\n//wave_x = if(equal(frame3,0),0.25,if(equal(frame3,1),0.5,.75));\n//wave_y = if(equal(frame3,0),0.5,if(equal(frame3,1),0.5,0.5));\n\nw = -time*1;\nw = sin(time*0.1)*4+sin(time*0.21618)*4;\nc = 0.2;//bass*0.1;\npx1 = 0.5+ c*sin(w);\npy1 = 0.5+ c*cos(w);\n\npx2 = 0.5+ c*sin(w+1.0472*4);\npy2 = 0.5+ c*cos(w+1.0472*4);\n\npx3 = 0.5+ c*sin(w+2.0944);\npy3 = 0.5+ c*cos(w+2.0944);\n\n\nwave_x = if(equal(frame3,0),px1,if(equal(frame3,1),px2,px3));\nwave_y = if(equal(frame3,0),py1,if(equal(frame3,1),py2,py3));\n//wave_y = -wave_y;\n\nwave_r = 1;//if(equal(frame3,0),1,if(equal(frame3,1),0,0));\nwave_g = 1;//if(equal(frame3,0),0,if(equal(frame3,1),1,0));\nwave_b = 0;//if(equal(frame3,0),0,if(equal(frame3,1),0,1));\n\n\n//wave_mystery = if(equal(frame3,0),(b7 - bass)*0.1 -0.5,if(equal(frame3,1),(m7 - mid)*0.1  -0.5,(t7 - treb)*0.1 -0.5));\n\nb7 = b6;\nb6 = b5;\nb5 = b4;\nb4 = b3;\nb3 = b2;\nb2 = b1;\nb1 = bass;\n\nm7 = m6;\nm6 = m5;\nm5 = m4;\nm4 = m3;\nm3 = m2;\nm2 = m1;\nm1 = mid;\n\nt7 = t6;\nt6 = t5;\nt5 = t4;\nt4 = t3;\nt3 = t2;\nt2 = t1;\nt1 = treb;\n\nq1 = (b1+b2+b3+b4+b5+b6+b7)/7;\nq2 = (m1+m2+m3+m4+m5+m6+m7)/7;\nq3 = (t1+t2+t3+t4+t5+t6+t7)/7;\nq9 = 1/aspectY;\nq10 = 1/aspectX;","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q9;\ny = 0.5 + (y-0.5)*q10;\n\nw = sin(time*0.1)*4+sin(time*0.21618)*4;\ny = 0.5 + (y-0.5)*0.75;\n\nd = 0.3 - (q1-bass)*0.05;\npx1 = 0.5+ d*sin(w);\npy1 = 0.5- d*cos(w);\n\nd = 0.3 - (q2-mid)*0.05;\npx3 = 0.5+ d*sin(w+1.0472*4);\npy3 = 0.5- d*cos(w+1.0472*4);\n\nd = 0.3 - (q3-treb)*0.05;\npx2 = 0.5+ d*sin(w+2.0944);\npy2 = 0.5- d*cos(w+2.0944);\n\nmx = (px1+px2+px3)/3;\nmy = (py1+py2+py3)/3;\n\nvx1 = px2 - px1;\nvy1 = py2 - py1;\nvx2 = x - px1;\nvy2 = y - py1;\n\nc = 150-50*bass;\nsigmoide = 1;\n\n\ndir = acos((vx1*vx2+vy1*vy2)/(sqrt(vx1*vx1+vy1*vy1)*sqrt(vx2*vx2+vy2*vy2)))-1;\nsigmoide = sigmoide/(1+pow(2,c*dir));\n\nvx1 = px3 - px2;\nvy1 = py3 - py2;\nvx2 = x - px2;\nvy2 = y - py2;\n\ndir = acos((vx1*vx2+vy1*vy2)/(sqrt(vx1*vx1+vy1*vy1)*sqrt(vx2*vx2+vy2*vy2)))-1;\nsigmoide = sigmoide*1/(1+pow(2,c*dir));\n\nvx1 = px1 - px3;\nvy1 = py1 - py3;\nvx2 = x - px3;\nvy2 = y - py3;\n\ndir = acos((vx1*vx2+vy1*vy2)/(sqrt(vx1*vx1+vy1*vy1)*sqrt(vx2*vx2+vy2*vy2)))-1.2;\nsigmoide = sigmoide/(1+pow(2,c*dir));\n\n\n\ncz = 0.05+bass*0.01;\ncr = 0.02+treb*0.1;\n\ns1 = sigmoide+0.1*(q1-bass);\ns2 = cr*(sigmoide+0.1*(q3-treb));\n\ndx = (sin(w))*0.05*(1-treb*0.5)*(sigmoide-0.5);//s2*sin(my-y) +(x-mx)*cz*s1;\ndy = -(cos(w))*0.05*(1-treb*0.5)*(sigmoide-0.5);//-s2*sin(mx-x) +(y-my)*cz*s1;","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz - (tmpvar_2.xyz * 0.5));\n  ret_1 = ((ret_1 * abs(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2) - 0.5)\n  )) * 5.0);\n  ret_1 = (ret_1 - 0.01);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":"uniform sampler2D sampler_rand00;\n shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = ((texture (sampler_rand00, fract(\n    ((1.0 - ((\n      (texture (sampler_blur2, uv).xyz * scale2)\n     + bias2).yx * 0.6)) + (time * vec2(0.057, 0.036)))\n  )) * (\n    (1.0 + texture (sampler_main, uv).x)\n   + \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  .y)) * 0.4).xyz;\n  ret_1 = tmpvar_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (texsize.xyy * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.4) * time)));\n  if ((((tmpvar_2.x + tmpvar_2.y) + tmpvar_2.z) < 0.7)) {\n    ret_1 = (tmpvar_2 + (tmpvar_3 * 0.5).xyz);\n  };\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    \n    // darken (decay) over time\n    ret = ret- (ret*.5);\n    ret = ret*(abs(GetBlur2(uv)-.5))*5;\n    ret = ret - .01;\n}","comp_hlsl":"sampler sampler_rand00;\nshader_body\n{\nret = tex2D(sampler_rand00, frac(1-GetBlur2(uv).yx*0.6 + time*float2(0.057,.036)))\n*(1+GetPixel(uv).x + GetBlur1(uv).y)*0.4;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nif(ret.x+ret.y+ret.z<.7)ret += (noise2)*.5; \n\n}"}