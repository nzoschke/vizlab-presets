{"version":2,"baseVals":{"rating":5,"decay":0.973,"echo_zoom":1.047,"wave_mode":1,"additivewave":1,"wrap":0,"darken_center":1,"darken":1,"solarize":1,"wave_a":0,"wave_scale":0,"wave_smoothing":0.6,"wave_mystery":-0.3,"warpanimspeed":0.1,"warpscale":2.853,"zoomexp":0.99984,"zoom":0.99968,"warp":0,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"ob_size":0,"ib_size":0,"mv_x":14,"mv_y":18,"mv_l":0.01,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35},"shapes":[{"baseVals":{"sides":40,"ang":0.25,"tex_ang":0.25,"tex_zoom":0.65,"r2":1,"a2":1,"border_r":0,"border_g":0,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=x+cos(time*2)/4.5;\ny=y+sin(time*2)/2.5;\nr2=above(treb,mid*1.1)*sin(time*1.2)*bass;\ng2=above(treb,bass)*sin(time*1.0)*bass;\nb2=above(bass,mid*1.1)*sin(time*1.4)*treb;\nrad=rad+treb/13;","init_eqs_eel":"","frame_eqs_eel":"x=x+cos(time*2)/4.5;\ny=y+sin(time*2)/2.5;\nr2=above(treb,mid*1.1)*sin(time*1.2)*bass;\ng2=above(treb,bass)*sin(time*1.0)*bass;\nb2=above(bass,mid*1.1)*sin(time*1.4)*treb;\nrad=rad+treb/13;"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"thickoutline":1,"ang":0.25,"tex_ang":0.25,"tex_zoom":0.95,"r":0,"b":1,"r2":1,"a2":1,"border_g":0,"border_b":0,"border_a":1},"init_eqs_str":"a.x1=0;a.y1=0;a.rade=0;","frame_eqs_str":"a.x1=a.x+div(Math.sin(a.time),3.5)+.3*Math.sin(.2*a.time);a.y1=a.y+div(Math.cos(a.time),3.5)+.3*Math.cos(.25*a.time);a.r2=above(a.treb,1.1*a.mid)*Math.cos(1.2*a.time)*a.bass;a.g2=above(a.treb,a.bass)*Math.cos(1*a.time)*a.bass;a.b2=above(a.bass,1.1*a.mid)*Math.cos(1.4*a.time)*a.treb;a.rade=a.rad+div(a.mid,12);","init_eqs_eel":"","frame_eqs_eel":"x1=x+sin(time)/3.5+sin(time*0.2)*0.3;\ny1=y+cos(time)/3.5+cos(time*0.25)*0.3;\nr2=above(treb,mid*1.1)*cos(time*1.2)*bass;\ng2=above(treb,bass)*cos(time*1.0)*bass;\nb2=above(bass,mid*1.1)*cos(time*1.4)*treb;\nrade=rad+mid/12;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":90,"usedots":1,"thick":1,"scaling":3.29076,"g":0,"b":0,"a":0.2,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"t1+bass;\n\nx=(cos(t1)*.4)+.5;\ny=(sin(t1)*.4)+.5;\n\nx=x+(cos(t1)*value1*.3);\ny=y+(sin(t1)*value1*.3);\n\nt1=below(t1,6.28)*t1;\n\nr=bass*.5;\ng=treb*.5;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t1+bass;\n\nx=(cos(t1)*.4)+.5;\ny=(sin(t1)*.4)+.5;\n\nx=x+(cos(t1)*value1*.3);\ny=y+(sin(t1)*value1*.3);\n\nt1=below(t1,6.28)*t1;\n\nr=bass*.5;\ng=treb*.5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.re1=0;a.cyw=0;a.micro=0;a.arg=0;a.q1=0;a.dy8=0;a.re2=0;a.dx8=0;a.signal=0;a.sx8=0;a.react=0;a.rot4=0;a.hook=0;","frame_eqs_str":"1 a['wave_b']=(1-Math.sin((Math.sin((a['time']*0.1122))*pow(a['mid_att'], 8)))); a['wave_r']=(1-Math.sin((Math.sin((a['time']*0.7122))*pow(a['treb_att'], 9)))); a['wave_g']=(1-Math.sin((Math.sin((a['time']*0.3122))*pow(a['bass_att'], 7)))); a['ob_r']=(a['ob_r']+(0.2*Math.sin((a['time']*0.5413)))); a['ob_g']=(a['ob_g']+(0.2*Math.sin((a['time']*0.6459)))); a['ob_b']=(a['ob_b']+(0.2*Math.sin((a['time']*0.4354)))); a['arg']=((a['bass_att']+a['mid_att'])+a['treb_att']); a['re2']=above(a['treb_att'], a['mid_att']); a['re1']=above(a['bass_att'], a['mid_att']); a['react']=pow((a['bass_att']+1), ((a['mid_att']+a['bass_att'])+2)); a['mv_g']=(10*(a['wave_r']-a['wave_b'])); a['mv_b']=(10*(a['wave_g']-a['wave_g'])); a['mv_r']=(10*(a['wave_b']-a['wave_r'])); a['q1']=div((0.1*pow((a['bass_att']+1), ((a['treb_att']*8)+1))),a['fps']); a['micro']=(((a['bass_att']+1)-a['treb_att'])+((div(a['treb'],a['treb_att'])*a['mid_att'])*0.1)); a['dx8']=((0.007*a['mid_att'])-(0.006*a['bass'])); a['dy8']=-0.01;","pixel_eqs_str":"a.hook=sqr(sqrt(2*a.x+2*a.y)-.2*a.rad);a.signal=above(a.hook+Math.sin(a.ang),Math.cos(31.4*a.rad));a.zoom=.985+above(.01*sqr(sqr(Math.tan(1.5*a.time+sqrt(Math.asin(a.rad)+Math.acos(a.y)))))-.12,a.rad);a.rot4=.00001<Math.abs(above(a.hook,a.rad))?.07*sqr(sqr(Math.tan(a.ang*a.rad*2))):a.rot;a.sx8=a.sx+.1*sqrt(1+sqr(sqr(Math.tan(a.rad*a.bass*4))))*above(a.mid_att,1.05*a.treb_att);a.cyw=a.dy+.005*sqrt(1+sqr(sqr(Math.tan(a.rad*a.treb*4))))*below(Math.sin(.7*a.time),.08);","init_eqs_eel":"","frame_eqs_eel":"1;\nwave_b=1-sin(sin(time*0.1122)*pow(mid_att,8));\nwave_r=1-sin(sin(time*0.7122)*pow(treb_att,9));\nwave_g=1-sin(sin(time*0.3122)*pow(bass_att,7));\nob_r = ob_r + 0.2*sin(time*0.5413);\nob_g = ob_g + 0.2*sin(time*0.6459);\nob_b = ob_b + 0.2*sin(time*0.4354);\narg=bass_att+mid_Att+treb_Att;\nre2=above(treb_att,mid_att);\nre1=above(bass_att,mid_att);\nreact=pow(bass_att+1,mid_att+bass_att+2);\nmv_g =10*(wave_r-wave_b) ;\nmv_b =10*(wave_g-wave_g) ;\nmv_r =10*(wave_b-wave_r) ;\nq1=0.1*pow(bass_att+1,treb_att*8+1)/fps;\nmicro=bass_att+1-treb_Att+treb/treb_att*mid_att*0.1;\ndx8=0.007*mid_att-0.006*bass;\ndy8=-0.01;","pixel_eqs_eel":"hook=sqr(sqrt(2*x+2*y)-0.2*rad);\nsignal=above(hook+sin(ang),cos(rad*31.4));\nzoom=0.985+above(sqr(sqr(tan(time*1.5+sqrt(asin(rad)+acos(y)))))*0.01-0.12,rad);\nrot4=if(above(hook,rad),sqr(sqr(tan(ang*rad*2)))*0.07,rot);\nsx8=sx+0.1*sqrt(1+sqr(sqr(tan(rad*bass*4))))*above(mid_att,treb_att*1.05);\ncyw=dy+0.005*sqrt(1+sqr(sqr(tan(rad*treb*4))))*below(sin(time*0.7),0.08)","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (((texture (sampler_blur2, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale2) + bias2)).z;\n  tmpvar_3.y = -(((\n    (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\n   + bias2)).z);\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv + ((tmpvar_3 * texsize.zw) * 60.0));\n  vec2 x_5;\n  x_5 = (tmpvar_4 - uv);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, uv);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_blur1, uv);\n  ret_1.z = (((texture (sampler_main, tmpvar_4).z + \n    (((tmpvar_6.z - (\n      (tmpvar_7.xyz * scale1)\n     + bias1).z) * 200.0) * sqrt(dot (x_5, x_5)))\n  ) * 0.96) - 0.02);\n  vec2 tmpvar_8;\n  tmpvar_8.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_8.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  ret_1.y = ((texture (sampler_main, (uv_orig + \n    ((tmpvar_8 * texsize.zw) * 6.0)\n  )).y + (\n    (tmpvar_6.y - ((tmpvar_7.xyz * scale1) + bias1).y)\n   * 0.1)) - 0.016);\n  vec3 tmpvar_9;\n  tmpvar_9.z = 0.0;\n  tmpvar_9.xy = roam_sin.xy;\n  vec3 tmpvar_10;\n  tmpvar_10.z = 0.0;\n  tmpvar_10.xy = roam_cos.yx;\n  vec3 tmpvar_11;\n  tmpvar_11.z = 0.0;\n  tmpvar_11.x = dot (tmpvar_9, vec3(0.32, 0.49, 0.29));\n  tmpvar_11.y = dot (tmpvar_10, vec3(0.32, 0.49, 0.29));\n  ret_1 = (ret_1 * (texture (sampler_noisevol_hq, (\n    (vec3(0.05, 0.05, 0.0) * (((uv.xyy + \n      (tmpvar_11 * 0.5)\n    ) * texsize.xyy) * texsize_noisevol_hq.zww))\n   + \n    (vec3(0.0, 0.0, 0.2) * time)\n  )) * 3.0).xyz);\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_1;\n  ret = tmpvar_12.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec2 dz_2;\n  vec3 dy_3;\n  vec3 dx_4;\n  vec2 d_5;\n  vec3 ret_6;\n  uv_1 = (uv + ((time * 0.001) * roam_sin).xy);\n  vec2 tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_7.x = (texture (sampler_main, (uv_1 + tmpvar_8)).xyz - texture (sampler_main, (uv_1 - tmpvar_8)).xyz).y;\n  vec2 tmpvar_9;\n  tmpvar_9 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_7.y = (texture (sampler_main, (uv_1 + tmpvar_9)).xyz - texture (sampler_main, (uv_1 - tmpvar_9)).xyz).y;\n  d_5 = (texsize.zw * 2.0);\n  dx_4 = (((2.0 * \n    ((texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * d_5))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * d_5))).xyz * scale1) + bias1)\n  )) * 0.5);\n  dy_3 = (((2.0 * \n    ((texture (sampler_blur1, (uv_1 + (vec2(0.0, 1.0) * d_5))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_1 - (vec2(0.0, 1.0) * d_5))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec2 tmpvar_10;\n  tmpvar_10.x = dx_4.y;\n  tmpvar_10.y = dy_3.y;\n  dz_2 = ((tmpvar_7 * 3.0) + tmpvar_10);\n  ret_6 = (vec3(((\n    pow ((sqrt(dot (dz_2, dz_2)) * 0.8), 0.7)\n   * 2.0) + (\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\n  .y * 2.0))) * vec3(0.2, 0.3, 0.6));\n  vec2 tmpvar_11;\n  tmpvar_11.x = q19;\n  tmpvar_11.y = q20;\n  vec2 tmpvar_12;\n  tmpvar_12 = fract(((0.5 + \n    (uv_1 - 0.5)\n  ) + (tmpvar_11 * vec2(-1.0, 1.0))));\n  vec2 tmpvar_13;\n  tmpvar_13.x = dx_4.y;\n  tmpvar_13.y = dy_3.y;\n  ret_6 = ((mix (ret_6, vec3(3.0, 2.0, 1.0), \n    ((texture (sampler_blur3, (tmpvar_12 - tmpvar_13)).xyz * scale3) + bias3)\n  .xxx) * (vec3(1.0, 1.0, 1.0) - \n    ((texture (sampler_blur2, (tmpvar_12 - dz_2)).xyz * scale2) + bias2)\n  .xxx)) - (roam_sin.wzy * roam_cos.xyz));\n  vec3 tmpvar_14;\n  tmpvar_14.z = 0.0;\n  tmpvar_14.xy = roam_sin.xy;\n  vec3 tmpvar_15;\n  tmpvar_15.z = 0.0;\n  tmpvar_15.xy = roam_cos.yx;\n  vec3 tmpvar_16;\n  tmpvar_16.z = 0.0;\n  tmpvar_16.x = dot (tmpvar_14, vec3(0.32, 0.49, 0.29));\n  tmpvar_16.y = dot (tmpvar_15, vec3(0.32, 0.49, 0.29));\n  ret_6 = (ret_6 * texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * \n    (((uv_1.xyy + (tmpvar_16 * 0.5)) * texsize.xyy) * texsize_noisevol_hq.zww)\n  ) + (vec3(0.0, 0.0, 0.2) * time))).xyz);\n  ret_6 = (mix ((\n    (ret_6 * (vec3(1.0, 1.0, 1.0) - vec3((0.75 * texture (sampler_main, tmpvar_12).x))))\n   * \n    (vec3(1.0, 1.0, 1.0) - vec3((((texture (sampler_blur1, uv_1).xyz * scale1) + bias1).z * 4.0)))\n  ), vec3(2.0, 2.0, 2.0), texture (sampler_main, uv_1).zzz) - (roam_sin.xyz * roam_cos.zxy));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_6;\n  ret = tmpvar_17.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    float2 d = texsize.zw*4;\n    float3 dx = ( GetBlur2(uv + float2(1,0)*d) - GetBlur2(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur2(uv + float2(0,1)*d) - GetBlur2(uv-float2(0,1)*d) );\n    float2 uv_dz = uv + float2(dy.z,-dx.z)*texsize.zw*60;\n    ret.z = (GetPixel(uv_dz).z + (GetPixel(uv).z - GetBlur1(uv).z)*200*length(uv_dz-uv))*0.96 - 0.02;\n\n\n    d = texsize.zw*4;\n    dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n\n    float2 uv_dy = uv_orig + float2(dx.y,dy.y)*texsize.zw*6;\n    ret.y = GetPixel(uv_dy).y + (GetPixel(uv).y - GetBlur1(uv).y)*0.1 - 0.016;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy+float3(lum(roam_sin.xy),\n                                           lum(roam_cos.yx),\n                                           0)*0.5\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.2 \n                     );\nret *= (noise2)*3; \n//ret.y = 0;\n}","comp_hlsl":"shader_body\n{\nuv+=time*.001*roam_sin;\n    float2 d = texsize.zw;\n    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );\n    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );\nfloat2 dz = float2(dx.y,dy.y)*3;\n\nd = texsize.zw*2;\ndx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) )*0.5;\ndy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) )*0.5;\n\ndz +=float2(dx.y,dy.y);\n\nfloat3 bg = pow(length(dz)*0.8+0,0.7)*2 + GetBlur1(uv).y*2;\n\nret = bg*float3(0.2,0.3,0.6);\nfloat2 uv_swimmer =frac(0.5 + (uv-0.5)+float2(q19,q20)*float2(-1,1));\nret = lerp(ret,float3(3,2,1),GetBlur3(uv_swimmer -float2(dx.y,dy.y)).x);\nret = lerp(ret,0,GetBlur2(uv_swimmer-dz).x);\nret-=roam_sin.wzy*roam_cos;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy+float3(lum(roam_sin.xy),\n                                           lum(roam_cos.yx),\n                                           0)*0.5\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.2 \n                     );\nret *= (noise2)*1; \nret = lerp(ret,float3(0,0,0),0.75*GetPixel(uv_swimmer).x);\nret = lerp(ret,0,GetBlur1(uv).z*4);\nret = lerp(ret,2,GetPixel(uv).z);\n//ret = GetPixel(uv);\nret-=roam_sin*roam_cos.zxy;\n}"}