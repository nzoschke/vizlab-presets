{"version":2,"baseVals":{"rating":5,"gammaadj":3.42,"decay":0.955,"wave_thick":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"invert":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":5.278,"warpscale":0.01,"zoomexp":0.99998,"fshader":1,"zoom":1.0201,"warp":0.01,"ob_size":0.005,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"rad":0.34,"ang":0.53,"r":0.56,"g":0.36,"r2":0.9,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + time;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + time;"},{"baseVals":{"sides":3,"rad":0.41,"r":0,"g":0.8,"b":0.7,"g2":0.4,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang - time*.333;","init_eqs_eel":"","frame_eqs_eel":"ang = ang - time*.333;"},{"baseVals":{"sides":3,"rad":0.21,"r":0.84,"r2":1,"g2":0.58,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + time*4;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + time*4;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.2*a.bass*Math.sin(20*a.sample*a.time*a.treb);a.y=.5+.2*a.bass*Math.cos(20*a.sample*a.time*a.treb);a.r=1+.5*Math.sin(.1*a.sample+10*a.time*a.bass);a.g=1+.5*Math.sin(2*a.sample+50*a.time*a.treb);a.b=1+.5*Math.sin(5*a.sample+20*a.time*a.mid);a.a=a.r;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));\ny = .5 + (bass*.2)*cos(sample*2*(time*10*treb));\nr = 1 + .5*sin(sample*.10+(time*10*bass));\ng = 1 + .5*sin(sample*2+(time*50*treb));\nb = 1 + .5*sin(sample*5+(time*20*mid));\na = r;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.yrand=0;a.xpos=0;a.ceny=0;a.bt=0;a.q1=0;a.xrand=0;a.q5=0;a.cenx=0;a.count=0;a.mc=0;a.is_beat=0;a.bd=0;a.acount=0;a.q4=0;a.timp=0;a.ypos=0;a.brad=0;a.mt=0;a.reha=0;a.bimp=0;a.mimp=0;a.tc=0;a.bc=0;a.bb=0;a.q2=0;a.q3=0;a.c=0;a.xpos=.5;a.ypos=.5;","frame_eqs_str":"a.acount=.00001<Math.abs(below(a.acount,9))?a.acount+1:0;a.count+=1;a.bc+=a.bass;a.tc+=a.treb;a.mc+=a.mid;a.bb=.5*a.bd+.5*a.bass_att;a.bt=.5*a.bt+.5*a.treb_att;a.mt=.5*a.mt+.5*a.mid_att;a.bimp=.00001<Math.abs(above(3*a.bass,a.bass+a.treb+a.mid))?1:0;a.timp=.00001<Math.abs(above(3*a.treb,a.bass+a.treb+a.mid))?1:0;a.mimp=.00001<Math.abs(above(3*a.mid,a.bass+a.treb+a.mid))?1:0;a.is_beat=.00001<Math.abs(above(.9*a.bb,div(a.bc,a.count)))?1*a.bimp:.00001<Math.abs(above(.9*a.bt,div(a.tc,\na.count)))?1*a.timp:.00001<Math.abs(above(.9*a.mt,div(a.mc,a.count)))?1*a.mimp:0;a.is_beat=.00001<Math.abs(above(a.reha,0))?0:a.is_beat;a.reha=.00001<Math.abs(a.is_beat)?.25*a.fps:.00001<Math.abs(below(a.reha,1))?0:a.reha-1;a.xrand=.00001<Math.abs(a.is_beat)?.1+div(rand(800),1E3):a.xrand;a.xpos+=div(a.bass_att*(a.xrand-a.xpos),40);a.yrand=.00001<Math.abs(a.is_beat)?.1+div(rand(800),1E3):a.yrand;a.ypos+=div(a.bass_att*(a.yrand-a.ypos),40);a.q1=a.xpos;a.q2=a.ypos*(2-a.aspectx);a.q3=a.acount;a.q4=a.aspectx;\na.q5=a.aspecty;a.wave_x=a.q1;a.wave_y=a.q2;","pixel_eqs_str":"a.cenx=a.q1;a.ceny=1-a.q2;a.brad=2*sqrt(pow(a.x-a.cenx,2)+pow(a.y-a.ceny,2));a.c=20;a.sx=1.175-.25*sigmoid(a.brad-.75,a.c);a.sy=1.175-.25*sigmoid(a.brad-.75,a.c);a.cy=a.ceny;a.cx=a.cenx;","init_eqs_eel":"xpos = .5;\nypos = .5;","frame_eqs_eel":"acount = if(below(acount,9),acount+1,0);\n\ncount = count+1;\nbc = bc+bass;\ntc = tc+treb;\nmc = mc+mid;\nbb = .5*bd+.5*bass_att;\nbt = .5*bt+.5*treb_att;\nmt = .5*mt+.5*mid_att;\nbimp = if(above(3*bass,bass+treb+mid),1,0);\ntimp = if(above(3*treb,bass+treb+mid),1,0);\nmimp = if(above(3*mid,bass+treb+mid),1,0);\nis_beat = if(above(bb*.9,bc/count),1*bimp,if(above(bt*.9,tc/count),1*timp,if(above(mt*.9,mc/count),1*mimp,0))); \nis_beat = if(above(reha,0),0,is_beat);\nreha = if(is_beat,fps*.25,if(below(reha,1),0,reha-1));\n\nxrand = if(is_beat,.1+rand(800)/1000,xrand);\nxpos = xpos+bass_att*(xrand-xpos)/40;\n\nyrand = if(is_beat,.1+rand(800)/1000,yrand);\nypos = ypos+bass_att*(yrand-ypos)/40;\n\nq1 = xpos;\nq2 = ypos*(2-aspectx);\nq3 = acount;\nq4 = aspectx;\nq5 = aspecty;\n//zoom = .99 + 0.1*bass_att+0.05*bass;\n\nwave_x = q1;\nwave_y = q2;","pixel_eqs_eel":"cenx = q1;\nceny = 1-q2;\nbrad = 2*sqrt( pow(x-cenx,2) + pow (y-ceny,2));\n\nc = 20; // sharpness\n//rot = .1-.1*sigmoid(brad-.3,c); //rotation\n\nsx = 1.175-.25*sigmoid(brad-.75,c); //zoom lens x\nsy = 1.175-.25*sigmoid(brad-.75,c); //zoom lens y\n\ncy = ceny;\ncx = cenx;","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((texture (sampler_main, (\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \n      mix (uv_orig, uv, vec2(4.0, 4.0))\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\n      ((texture (sampler_blur2, mix (uv_orig, uv, vec2(-12.0, -12.0))).xyz * scale2) + bias2)\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\n   + \n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\n  )).xyz + (\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\n   * 0.006).xyz) + -0.0006);\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  ret_1 = (ret_1 + ((texture (sampler_blur1, \n    (uv + ret_1.xy)\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_2;\n  tmpvar_2.x = (uv.x - ret_1.y);\n  tmpvar_2.y = (uv.y - ret_1.y);\n  ret_1 = (ret_1 + ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3 = pow (((\n    sqrt(dot (ret_1, ret_1))\n   * ret_1) * 1.33), (0.89 - (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3)));\n  ret_1 = (tmpvar_3 * tmpvar_3.z);\n  ret_1 = (ret_1 - texture (sampler_main, uv).xyz);\n  ret_1 = (1.4 - ret_1);\n  ret_1 = (ret_1 - (roam_sin.wyx * roam_cos.zwx));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n\n\nfloat error     = 0.5;        // maximum random pixel offset\nfloat diffusion = 0.006;      // dither strength\nfloat fadeout   = -0.0006;    // may be minor 1/256 due to the error diffusion dither;\n\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;\nfloat magic = lum(GetPixel(lerp(uv_orig,uv, 4))) - lum(GetBlur2(lerp(uv_orig,uv,-12)));\nuv = lerp(uv_orig,uv, magic*12 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;\nret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;\n\n}","comp_hlsl":"shader_body\n{\n\nret=GetBlur1(uv);\nret+=GetBlur1(float2(uv.x+ret.x,uv.y+ret.y));\nret+=GetBlur1(float2(uv.x-ret.y,uv.y-ret.y));\nret=pow(length(ret)*ret*1.33,0.89-GetBlur3(uv));\n//ret=saturate(ret);\n//ret*=tex2D(sampler_noise_lq,uv*ret.y);\nret*=ret.z;\nret=ret-GetPixel(uv);\nret=1.4-ret;\nret-=roam_sin.wyx*roam_cos.zwx;\n}"}