{"version":2,"baseVals":{"rating":5,"gammaadj":3.94,"decay":0.995,"echo_zoom":1.405,"echo_alpha":0.56,"wave_mode":1,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":1.008,"wave_scale":1.002,"wave_smoothing":0,"wave_mystery":0.5,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":0.99999,"fshader":1,"zoom":0.9999,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":0.5,"ob_g":0.1,"ob_b":0.2,"ob_a":0.5,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.5,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0.7},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.isrow1=0;a.diakrot=0;a.q6=0;a.movex=0;a.q1=0;a.scroll=0;a.q5=0;a.row3dist=0;a.v=0;a.q4=0;a.isrow3=0;a.row2dist=0;a.diakpos=0;a.q2=0;a.movey=0;a.q3=0;a.row2ang=0;a.q7=0;a.isrow2=0;a.q8=0;a.frame=-100;","frame_eqs_str":"a.wave_g=Math.abs(Math.cos(1.4*a.time+.89+Math.sin(2.1*a.time+.73)));a.wave_b=Math.abs(Math.cos(.7*a.time+.64));a.wave_r=Math.abs(Math.sin(1.526*a.time+.321));a.wave_x=Math.abs(Math.sin(2*a.time+.368));a.warp=0;a.diakpos=.00001<Math.abs(below(mod(a.frame,500),200))?0:1;a.diakrot=.00001<Math.abs(below(mod(a.frame,500),100))?0:1;a.diakrot=.00001<Math.abs(above(mod(a.frame,500),400))?0:a.diakrot;a.q1=.125;a.q6=a.diakrot*Math.sin(div(a.time,3)+.783+Math.cos(a.time+2.814));a.q8=\nsign(Math.sin(2.356*a.time+.385+2*Math.cos(.6*a.time+2.9)));a.q7=.375*(1+a.diakpos*Math.sin(Math.cos(2.31*a.time+1.972)+1.34*a.time+1.69));a.q5=.5+.1*a.diakpos*Math.sin(a.time+Math.cos(3*a.time+.256));a.q4=.625+2*a.diakpos*a.q1*Math.sin(Math.cos(.67*a.time+.711)+2.1*a.time+1.314);a.q2=.875-3*a.diakpos*a.q1*Math.abs(Math.sin(Math.cos(2*a.time+1.23)+.8*a.time+1.72));a.q3=.25+div(a.mid_att+a.treb_att+a.bass_att,6);a.monitor=a.mid+a.treb+a.bass;a.v=Math.floor(rand(200));a.sx=.00001<Math.abs(equal(a.v,\n9))?-1:a.sx;a.sy=.00001<Math.abs(equal(a.v,8))?-1:a.sy;a.zoom=.00001<Math.abs(equal(a.v,7))?.5:1;","pixel_eqs_str":"a.isrow1=.00001<Math.abs(below(div(Math.abs(a.q6*(a.x-.5)+(1-a.q6)*(a.y-a.q7)),sqr(a.q6)+sqr(1-a.q6)),a.q1))?1:0;a.isrow2=.00001<Math.abs(below(div(Math.abs((1-a.q6)*(a.x-a.q5)+a.q6*(a.y-a.q4)),sqr(a.q6)+sqr(1-a.q6)),a.q1))?1:0;a.q6*=1.5;a.row3dist=div(-a.q6*(a.x-.5)+(1-a.q6)*(a.y-a.q2),sqr(a.q6)+sqr(1-a.q6));a.isrow3=.00001<Math.abs(below(Math.abs(a.row3dist),a.q1))?1:0;a.scroll=sign(Math.sin(div(a.time,4)+2.312));a.dy+=.01*(1-a.isrow1)*(1-a.isrow2)*(1-a.isrow3)*a.scroll*a.q3;\na.movex=.006*a.isrow1*(Math.sin(38*(a.x-.5)+3*a.time)+Math.sin(26*(a.y-a.q7)+1*a.time)+Math.sin(a.time+1.95));a.movey=.006*a.isrow1*(Math.sin(23*(a.x-.5)+2*a.time)+Math.sin(40*(a.y-a.q7)+6*a.time)+Math.sin(2.5*a.time+1.23));a.dx+=a.q3*a.movex;a.dy+=a.q3*a.movey;a.zoom+=5*a.q3*(a.movex+a.movey);a.row2ang=-Math.atan2(a.x-a.q5,a.y-a.q4);a.row2dist=sqrt(sqr(a.x-a.q5)+sqr(a.y-a.q4));a.movex=.03*a.isrow2*Math.cos(a.row2ang)*a.q8;a.movey=.03*a.isrow2*Math.sin(a.row2ang)*a.q8;a.dx+=a.q3*a.movex;a.dy+=a.q3*\na.movey;a.zoom+=a.isrow2*(.05+.2*a.q3*pow(-1+a.row2dist,3));a.movex=.007*Math.sin(100*a.time);a.dx+=a.isrow3*a.q3*a.movex;a.zoom+=.1*a.isrow3*div(a.row3dist,a.q1)*Math.sin(3*a.time)*a.q3;a.zoom+=.05*Math.sin(div(a.time,2))*(.5-a.x);","init_eqs_eel":"frame=-100;","frame_eqs_eel":"wave_g = abs(cos(time*1.4+.89 + sin(time*2.1+.73)));\nwave_b= abs(cos(time*.7+.64));\nwave_r = abs(sin(time*1.526 + .321 ));\nwave_x=abs(sin(time*2+.368));\nwarp=0;\ndiakPos=if( below(frame%500,200),0,1);\ndiakRot=if(below(frame%500,100),0,1);\ndiakRot=if(above(frame%500,400),0,diakRot);\nq1=.125;\nq6=diakRot*sin(time/3+.783+cos(time+2.814)); //rotation\nq8=sign( sin(2.356*time+.385+2*cos(.6*time+2.9)));\nq7=.375*(1+diakPos*sin( cos(time*2.31+1.972)+time*1.34+1.69));  // row1 x y coords\nq5=.5+(diakPos*.1*sin(time+cos(time*3+.256)));\nq4=.625+diakPos*2*q1*(sin( cos(time*.67+.711)+time*2.1+1.314)); // row2 x y cords\n\nq2=.875-diakPos*3*q1*(abs(sin( cos(2*time+1.23)+.8*time+1.72)));\nq3=.25+(mid_att+treb_att+bass_att)/6;\nmonitor = mid+treb+bass;\nv=int(rand(200));\nsx=if( equal(v,9),-1,sx);\nsy=if( equal(v,8),-1,sy);\nzoom=if( equal(v,7),.5,1);","pixel_eqs_eel":"IsRow1=if( below( abs(  (q6*(x-.5)+(1-q6)*(y-q7)))/(sqr(q6)+sqr(1-q6)),q1),1,0);\nIsRow2=if( below( abs( ((1-q6)*(x-q5)+(q6)*(y-q4)))/(sqr(q6)+sqr(1-q6)),q1),1,0);\nq6=q6*1.5;\nRow3dist=( (-q6*(x-.5)+(1-q6)*(y-q2) )/(sqr(q6)+sqr(1-q6)));\nIsRow3=if( below( abs(Row3dist),q1),1,0);\nscroll=sign(sin(time/4+2.312));\ndy=dy+.01*(1-IsRow1)*(1-IsRow2)*(1-IsRow3)*scroll*q3;\n//row1\nmoveX=IsRow1*.006*(sin(38*(x-.5)+time*3) + sin(26*(y-q7)+time*1)+sin(time+1.95));\nmoveY=IsRow1*.006*(sin(23*(x-.5)+time*2)+sin(40*(y-q7)+time*6)+sin(time*2.5+1.23));\ndx=dx+q3*moveX;\ndy=dy+q3*moveY;\nzoom=zoom+5*q3*(moveX+moveY);\n\n//row2\nrow2ang=-atan2(x-q5,y-q4);\nrow2dist=sqrt( sqr(x-q5)+sqr(y-q4) );\nmoveX=IsRow2*.03*cos(row2ang)*q8;\nmoveY=IsRow2*.03*sin(row2ang)*q8;\ndx=dx+q3*moveX;\ndy=dy+q3*moveY;\nzoom=zoom+IsRow2*(.05+.2*q3*pow((-1+row2dist),3));\n\n//row3\nmoveX=.007*sin(time*100);\ndx=dx+IsRow3*q3*moveX;\nzoom=zoom+.1*IsRow3*( Row3dist/q1)*sin(time*3)*q3;\nzoom=zoom+.05*sin(time/2)*(.5-x);","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (0.02 * aspect.zw);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur2, \n    ((uv + (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv + (vec2(1.0, 0.0) * tmpvar_3))))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    ((uv - (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv - (vec2(1.0, 0.0) * tmpvar_3))))\n  ).xyz * scale2) + bias2));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur2, \n    ((uv + (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv + (vec2(0.0, 1.0) * tmpvar_3))))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    ((uv - (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv - (vec2(0.0, 1.0) * tmpvar_3))))\n  ).xyz * scale2) + bias2));\n  vec3 tmpvar_6;\n  tmpvar_6 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.y;\n  tmpvar_7.y = tmpvar_5.y;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_5.x;\n  tmpvar_8.y = -(tmpvar_4.x);\n  vec2 tmpvar_9;\n  tmpvar_9 = ((uv - (tmpvar_7 * vec2(0.01, 0.01))) - (tmpvar_8 * -0.02));\n  ret_2.y = texture (sampler_fc_main, (tmpvar_9 - floor(tmpvar_9))).y;\n  ret_2.y = (ret_2.y + ((\n    (ret_2.y - tmpvar_6.y)\n   * 0.02) + 0.005));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.x;\n  tmpvar_10.y = tmpvar_5.x;\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_5.z;\n  tmpvar_11.y = -(tmpvar_4.z);\n  my_uv_1 = ((uv - (tmpvar_10 * vec2(0.01, 0.01))) - (tmpvar_11 * -0.02));\n  ret_2.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\n  ret_2.x = (ret_2.x + ((\n    (ret_2.x - tmpvar_6.x)\n   * 0.02) + 0.005));\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_4.z;\n  tmpvar_12.y = tmpvar_5.z;\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_5.y;\n  tmpvar_13.y = -(tmpvar_4.y);\n  my_uv_1 = ((uv - (tmpvar_12 * vec2(0.01, 0.01))) - (tmpvar_13 * -0.02));\n  ret_2.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\n  ret_2.z = (ret_2.z + ((\n    (ret_2.z - tmpvar_6.z)\n   * 0.02) + 0.005));\n  vec3 tmpvar_14;\n  tmpvar_14.z = 0.0;\n  tmpvar_14.xy = roam_sin.xy;\n  vec3 tmpvar_15;\n  tmpvar_15.z = 0.0;\n  tmpvar_15.xy = roam_cos.yx;\n  vec3 tmpvar_16;\n  tmpvar_16.z = 0.0;\n  tmpvar_16.x = dot (tmpvar_14, vec3(0.32, 0.49, 0.29));\n  tmpvar_16.y = dot (tmpvar_15, vec3(0.32, 0.49, 0.29));\n  ret_2 = (ret_2 * (texture (sampler_noisevol_hq, (\n    (vec3(0.05, 0.05, 0.0) * (((uv.xyy + \n      (tmpvar_16 * 0.5)\n    ) * texsize.xyy) * texsize_noisevol_hq.zww))\n   + \n    (vec3(0.0, 0.0, 0.2) * time)\n  )) * 3.0).xyz);\n  ret_2 = (0.4 - ret_2);\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_2;\n  ret = tmpvar_17.xyz;\n }","comp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\nvec2 xlat_mutableuv_y;\n shader_body { \n  vec3 ret_1;\n  xlat_mutabled = (texsize.zw * 4.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_2;\n  tmpvar_2.x = xlat_mutabledx.y;\n  tmpvar_2.y = xlat_mutabledy.y;\n  xlat_mutableuv_y = (uv - (tmpvar_2 * 0.4));\n  xlat_mutabled = (texsize.zw * 18.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (xlat_mutableuv_y + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (xlat_mutableuv_y - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (xlat_mutableuv_y + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (xlat_mutableuv_y - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  float tmpvar_3;\n  tmpvar_3 = ((-(xlat_mutabledx) + xlat_mutabledy) + 1.0).x;\n  xlat_mutabled = (texsize.zw * 2.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (xlat_mutableuv_y + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (xlat_mutableuv_y - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (xlat_mutableuv_y + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (xlat_mutableuv_y - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.x;\n  tmpvar_4.y = xlat_mutabledy.x;\n  float tmpvar_5;\n  tmpvar_5 = sqrt(dot (tmpvar_4, tmpvar_4));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, uv);\n  ret_1 = (mix ((\n    (vec3(0.5, 0.3, 0.0) * tmpvar_6.x)\n   * tmpvar_3), (vec3(8.0, 7.0, 0.0) * tmpvar_5), vec3(tmpvar_5)) - (roam_sin.wzy * roam_cos.xyz));\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.0;\n  tmpvar_7.xy = roam_sin.xy;\n  vec3 tmpvar_8;\n  tmpvar_8.z = 0.0;\n  tmpvar_8.xy = roam_cos.yx;\n  vec3 tmpvar_9;\n  tmpvar_9.z = 0.0;\n  tmpvar_9.x = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\n  tmpvar_9.y = dot (tmpvar_8, vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_blur1, uv);\n  ret_1 = (mix (mix (ret_1, vec3(0.8, 0.5, 1.0), vec3(\n    (((tmpvar_10.xyz * scale1) + bias1).y * 0.5)\n  )), vec3(1.0, 1.0, 1.0), vec3((tmpvar_6.z * \n    (1.0 - (((tmpvar_10.xyz * scale1) + bias1).y * 2.0))\n  ))) * (texture (sampler_noisevol_hq, (\n    (vec3(0.05, 0.05, 0.0) * (((uv.xyy + \n      (tmpvar_9 * 0.5)\n    ) * texsize.xyy) * texsize_noisevol_hq.zww))\n   + \n    (vec3(0.0, 0.0, 0.2) * time)\n  )) * 3.0).xyz);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    float2 d = 0.02*aspect.zw;\n    float3 dx = ( GetBlur2(uv+float2(1,0)*d-floor(uv+float2(1,0)*d))-GetBlur2(uv-float2(1,0)*d-floor(uv-float2(1,0)*d)) );\n    float3 dy = ( GetBlur2(uv+float2(0,1)*d-floor(uv+float2(0,1)*d))-GetBlur2(uv-float2(0,1)*d-floor(uv-float2(0,1)*d)) );\n    float3 b1 = GetBlur1(uv) - 0;\n    d = 0.01;\n    float d2 = -0.02;\n    float1 thr = 0;\n    float1 c = 0.005;\n\n\n    float2 my_uv = uv - float2(dx.y,dy.y)*d - float2(dy.x,-dx.x)*d2;\n    ret.y = tex2D( sampler_fc_main, my_uv-floor(my_uv)).y;\n    ret.y += (ret.y - b1.y - thr)*.02 +c;\n\n\n    my_uv = uv - float2(dx.x,dy.x)*d - float2(dy.z,-dx.z)*d2;\n    ret.x = tex2D( sampler_fc_main, my_uv-floor(my_uv)).x;\n    ret.x += (ret.x - b1.x - thr)*.02 +c;\n\n\n    my_uv = uv - float2(dx.z,dy.z)*d - float2(dy.y,-dx.y)*d2;\n    ret.z = tex2D( sampler_fc_main, my_uv-floor(my_uv)).z;\n    ret.z += (ret.z - b1.z - thr)*.02 +c;\n\n\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy+float3(lum(roam_sin.xy),\n                                           lum(roam_cos.yx),\n                                           0)*0.5\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.2 \n                     );\nret *= (noise2)*3; \nret=.4-ret;\n}","comp_hlsl":"float2 d, uv_y;\nfloat3 dx, dy;\nshader_body\n{\n\n    d = texsize.zw*4;\n    dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n    uv_y = uv-float2(dx.y,dy.y)*0.4;\n\n\n    d = texsize.zw*18;\n    dx = ( GetBlur1(uv_y+float2(1,0)*d)-GetBlur1(uv_y-float2(1,0)*d) );\n    dy = ( GetBlur1(uv_y+float2(0,1)*d)-GetBlur1(uv_y-float2(0,1)*d) );\n\nfloat base = GetPixel(uv);\nfloat emboss = (-dx + dy + 1);\n\n    d = texsize.zw*2;\n    dx = ( GetBlur1(uv_y+float2(1,0)*d)-GetBlur1(uv_y-float2(1,0)*d) );\n    dy = ( GetBlur1(uv_y+float2(0,1)*d)-GetBlur1(uv_y-float2(0,1)*d) );\n\nfloat grad = length(float2(dx.x,dy.x));\n\nret = lerp( float3(0.5,0.3,0)*base.x*emboss,\n            float3(8,7,0)*grad,\n            grad\n          ); \n\nret-=roam_sin.wzy*roam_cos;\nret = lerp(ret,float3(0.8,0.5,1), GetBlur1(uv).y*0.5);\nret = lerp(ret,1,GetPixel(uv).z*(1-GetBlur1(uv).y*2));\n\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy+float3(lum(roam_sin.xy),\n                                           lum(roam_cos.yx),\n                                           0)*0.5\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.2 \n                     );\nret *= (noise2)*3; \n}\n"}