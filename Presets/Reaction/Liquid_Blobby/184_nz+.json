{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.96,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":0.189,"zoom":0.38022,"rot":0.02,"warp":0.19805,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":6,"textured":1,"rad":0.32353,"ang":0.31416,"tex_zoom":4.72208,"g":1,"b":1,"r2":1,"g2":0.8,"b2":0.7,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a=q8","init_eqs_eel":"","frame_eqs_eel":"a=q8"},{"baseVals":{"enabled":1,"sides":36,"additive":1,"textured":1,"rad":0.91974,"tex_zoom":0.9803,"r":0,"a":0,"r2":1,"b2":0.94,"a2":0.06,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.tex_zoom+=.2*Math.sin(.3*a.time);a.ang=.01*Math.sin(.5*a.time);","init_eqs_eel":"","frame_eqs_eel":"tex_zoom=tex_zoom+ (sin(time*0.3)*0.2);\n\nang=sin(time*0.5)*0.01;"},{"baseVals":{"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":24,"g":1,"b":1,"a":0,"r2":0.5,"g2":0.7,"b2":0.8,"border_a":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.06,"g":0.04,"b":0.11},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.step1=0;a.pos=0;a.xs=0;a.yp=0;a.t1=0;a.scale=0;a.q1=0;a.points=0;a.t8=0;a.cycle=0;a.xq=0;a.third=0;a.sang=0;a.t3=0;a.ys=0;a.step2=0;a.zq=0;a.black=0;a.ang=0;a.t2=0;a.zp=0;a.q2=0;","frame_eqs_str":"a.t1=.5*a.time;a.t2=.33*a.time;a.t3=.23*a.time;a.t8=-1;","point_eqs_str":"a.scale=1+a.q1;a.n=25.132*a.sample;a.third=div(6.283,3);a.cycle=Math.floor(4*a.sample);a.pos=a.t8;a.pos=.00001<Math.abs(equal(a.pos,1))?-1:a.pos+1;a.pos=.00001<Math.abs(equal(4*a.sample-a.cycle,0))?0:a.pos;a.t8=a.pos;a.points=equal(a.pos,0);a.a=equal(a.pos,0)*a.q2;a.xp=.05*Math.sin(a.n)*a.points*a.scale;a.yp=a.pos;a.zp=.05*Math.cos(a.n)*a.points*a.scale;a.ang=div(3.1415,2)-above(a.cycle,.99)*a.third;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.yp*a.cang;\na.yq=a.xp*a.cang-a.yp*a.sang;a.zq=a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=div(3.1415,2);a.step1=equal(a.cycle,2)*a.third;a.step2=equal(a.cycle,3)*a.third*2;a.ang=a.ang+a.step1+a.step2;a.ang=a.ang;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=.23*a.time;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sang+a.zp*a.cang;a.zq=a.yp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;\na.ang=.6*a.time;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.zp+=4.1;a.xs=div(a.xp,a.zp)+.5;a.ys=1.333*div(a.yp,a.zp)+.5;a.x=a.xs;a.y=a.ys;a.black=1-equal(a.pos,0);a.r*=a.black;a.g*=a.black;a.b*=a.black;","init_eqs_eel":"","frame_eqs_eel":"t1=time*0.5;\nt2=time*0.33;\nt3=time*0.23;\nt8=-1","point_eqs_eel":"scale=1+q1;\n\nn=sample*6.283*4;\nthird=6.283/3;\ncycle=int(sample*4);\npos=t8;\npos=if( equal(pos,1) , -1 , pos+1 );\npos=if( equal(sample*4-cycle,0) , 0 , pos);\nt8=pos;\npoints= equal(pos,0);\na=equal(pos,0)*q2;\n\nxp=sin(n) * 0.05 *points *scale;\nyp=pos;\nzp=cos(n) * 0.05 *points *scale;\n\n//rot x\nang=3.1415/2 - above(cycle,0.99) * third;\n\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + yp*cang;\nyq=xp*cang - yp*sang;\nzq=zp;\nxp=xq;yp=yq;zp=zq;\n\n//rot y\nang=3.1415/2;\nstep1=equal(cycle,2)*third;\nstep2=equal(cycle,3)*third*2;\nang=ang+step1+step2;\nang=ang ;\n\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\nang=time*0.23;\nsang=sin(ang);cang=cos(ang);\nxq=xp;;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\nang=time*0.6;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp=zp+4.1;\nxs=xp/zp + 0.5;\nys=yp/zp *1.333 + 0.5;\n\nx=xs;y=ys;\n\n\n\nblack=1 - equal(pos,0);\nr=r*black;\ng=g*black;\nb=b*black;"},{"baseVals":{"enabled":1,"additive":1,"r":0.06,"g":0.04,"b":0.02},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.step1=0;a.pos=0;a.xs=0;a.yp=0;a.scale=0;a.q1=0;a.points=0;a.t8=0;a.cycle=0;a.xq=0;a.third=0;a.sang=0;a.ys=0;a.step2=0;a.zq=0;a.ang=0;a.zp=0;a.q2=0;a.q8=0;","frame_eqs_str":"","point_eqs_str":"a.scale=1+a.q1;a.n=25.132*a.sample;a.third=div(6.283,3);a.cycle=Math.floor(4*a.sample);a.pos=a.t8;a.pos=.00001<Math.abs(equal(a.pos,1))?-1:a.pos+1;a.pos=.00001<Math.abs(equal(4*a.sample-a.cycle,0))?0:a.pos;a.t8=a.pos;a.points=equal(a.pos,0);a.a=equal(a.pos,0)*a.q2;a.xp=.05*Math.sin(a.n)*a.points*a.scale;a.yp=a.pos;a.zp=.05*Math.cos(a.n)*a.points*a.scale;a.ang=div(3.1415,2)-above(a.cycle,.99)*a.third;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.yp*a.cang;\na.yq=a.xp*a.cang-a.yp*a.sang;a.zq=a.zp;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=div(3.1415,2);a.step1=equal(a.cycle,2)*a.third;a.step2=equal(a.cycle,3)*a.third*2;a.ang=a.ang+a.step1+a.step2;a.ang=a.ang;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.yp=-a.yp;a.ang=.23*a.time;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.sang+a.zp*a.cang;a.zq=a.yp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;\na.zp=a.zq;a.ang=.6*a.time;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.sang+a.zp*a.cang;a.yq=a.yp;a.zq=a.xp*a.cang-a.zp*a.sang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.zp+=4.1;a.xs=div(a.xp,a.zp)+.5;a.ys=1.333*div(a.yp,a.zp)+.5;a.x=a.xs;a.y=a.ys;a.a*=1-.5*a.q8;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"scale=1+q1;\n\nn=sample*6.283*4;\nthird=6.283/3;\ncycle=int(sample*4);\npos=t8;\npos=if( equal(pos,1) , -1 , pos+1 );\npos=if( equal(sample*4-cycle,0) , 0 , pos);\nt8=pos;\npoints= equal(pos,0);\na=equal(pos,0)*q2;\n\nxp=sin(n) * 0.05 *points *scale;\nyp=pos;\nzp=cos(n) * 0.05 *points *scale;\n\n//rot x\nang=3.1415/2 - above(cycle,0.99) * third;\n\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + yp*cang;\nyq=xp*cang - yp*sang;\nzq=zp;\nxp=xq;yp=yq;zp=zq;\n\n//rot y\nang=3.1415/2;\nstep1=equal(cycle,2)*third;\nstep2=equal(cycle,3)*third*2;\nang=ang+step1+step2;\nang=ang ;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\nyp=-yp;\nang=time*0.23;\nsang=sin(ang);cang=cos(ang);\nxq=xp;;\nyq=yp*sang + zp*cang;\nzq=yp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\nang=time*0.6;\nsang=sin(ang);cang=cos(ang);\nxq=xp*sang + zp*cang;\nyq=yp;\nzq=xp*cang - zp*sang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp=zp+4.1;\nxs=xp/zp + 0.5;\nys=yp/zp *1.333 + 0.5;\n\nx=xs;y=ys;\n\n\na=a*(1-q8*0.5);"},{"baseVals":{"enabled":1,"additive":1,"r":0.21,"g":0.12,"b":0.05},"init_eqs_str":"a.xp=0;a.s=0;a.yp=0;a.t1=0;a.advance=0;a.x_screen=0;a.y_screen=0;a.ag=0;a.zp=0;","frame_eqs_str":"a.advance+=.005;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(24.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(47.4*a.s)+Math.cos(27.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=1.333*div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.ag=Math.atan(div(a.y-.5,\na.x-.5));","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"\ns=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp*1.333 + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nag=atan( (y-0.5)/(x-0.5) );\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0.61,"g":0.72,"b":0.95},"init_eqs_str":"a.xp=0;a.s=0;a.yp=0;a.t1=0;a.advance=0;a.sparkle=0;a.x_screen=0;a.y_screen=0;a.ag=0;a.zp=0;","frame_eqs_str":"a.advance+=.008;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.sparkle=.5*Math.sin(18.849*a.sample+5*a.time)+.5;a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(24.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(17.4*a.s)+Math.sin(37.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(47.4*a.s)+Math.cos(27.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.a*=a.sparkle;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=1.333*div(a.yp,\na.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.ag=Math.atan(div(a.y-.5,a.x-.5));","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.008;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"sparkle=sin(sample*6.283*3+time*5)*0.5+0.5;\n\ns=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\na=a*sparkle;\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp*1.333 + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nag=atan( (y-0.5)/(x-0.5) );\n"}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.mq31=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.atime=0;a.q26=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.q27=0;a.q28=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.wave_r=a.bass-\n1;a.wave_g=a.mid-2.2;a.wave_b=a.treb-.5;","pixel_eqs_str":"a.rot=.1*pow(a.ang,3);a.zoom=Math.sin(pow(a.rad,a.mid))+.8;","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\nwave_r = bass-1;\nwave_g = mid-2.2;\nwave_b = treb-.5;","pixel_eqs_eel":"rot=0.1*pow(ang,3);\nzoom=sin(pow(rad,mid))+.8;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = ret_1;\n  vec4 tmpvar_4;\n  tmpvar_4 = max (tmpvar_3, (texture (sampler_main, (uv + tmpvar_2)) * 0.97));\n  ret_1 = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((tmpvar_4.x > (q21 * q13)) && (tmpvar_4.x <= (q24 * q11)))) {\n    ret_1.y = (tmpvar_4.y - (tmpvar_5.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (tmpvar_4.z - (tmpvar_5.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (tmpvar_4.x - (tmpvar_5.z * 0.5));\n  };\n  vec4 tmpvar_6;\n  tmpvar_6.w = 0.0;\n  tmpvar_6.xyz = ret_1;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 0.0;\n  tmpvar_7.xyz = max (tmpvar_6, (texture (sampler_main, (uv - tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_8;\n  tmpvar_8.w = 0.0;\n  tmpvar_8.xyz = max (tmpvar_7, (texture (sampler_main, (uv + \n    (tmpvar_2 * 2.0)\n  )) * 0.9)).xyz;\n  ret_1 = (max (tmpvar_8, (texture (sampler_main, \n    (uv - (tmpvar_2 * 2.0))\n  ) * 0.9)).xyz * 0.95);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_1;\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec3 ret3_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv - 0.5) * vec2(-1.0, 1.0)) + 0.5);\n  vec3 tmpvar_4;\n  tmpvar_4 = mix ((texture (sampler_main, uv).xyz * clamp (\n    ((((texture (sampler_blur2, uv).xyz * scale2) + bias2) * 2.8) - 0.13)\n  , 0.0, 1.0)), (texture (sampler_main, tmpvar_3).xyz * clamp (\n    ((((texture (sampler_blur2, tmpvar_3).xyz * scale2) + bias2) * 2.8) - 0.13)\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\n  ret3_1 = (tmpvar_4 * tmpvar_4);\n  ret3_1 = (ret3_1 * vec3(0.9, 1.6, 2.3));\n  ret3_1 = (ret3_1 * 2.0);\n  vec2 tmpvar_5;\n  tmpvar_5.x = rad;\n  tmpvar_5.y = uv_orig.y;\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_5.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\n    ret_2.z = (ret_2.z - (tmpvar_6.x * 0.5));\n  };\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\n    ret_2.x = (ret_2.x - (tmpvar_6.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\n    ret_2.y = (ret_2.y - (tmpvar_6.z * 0.5));\n  };\n  ret_2 = (ret_2 * vec3(0.9, 1.6, 2.3));\n  ret_2 = (ret_2 * 3.0);\n  vec3 tmpvar_7;\n  tmpvar_7 = mix (ret3_1, ret_2.zxy, vec3(0.25, 0.25, 0.25));\n  ret_2 = tmpvar_7;\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = tmpvar_7;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n\n//Geiss's Motion Blur\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // this vector points exactly one pixel, in the direction of motion\n    float2 v = normalize(uv-uv_orig)*texsize.zw;\n\n    float3 s;\n    ret = max(ret, tex2D(sampler_main, uv+v)*0.97);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; \n    ret = max(ret, tex2D(sampler_main, uv-v)*0.97);\n    ret = max(ret, tex2D(sampler_main, uv+v*2)*0.90);\n    ret = max(ret, tex2D(sampler_main, uv-v*2)*0.90);\n\n    // darken over time\n    ret *= 0.95;\n\n    // add noise\n    //float2 uv_noise = uv*texsize_noise_lq.zw*texsize.xy + rand_frame.xy;\n      //ret += (tex2D(sampler_noise_lq, uv_noise)*2-1)*0.02;\n}","comp_hlsl":"shader_body\n{\n\n\n    float2 uv_echo2 = (uv - 0.5)*1.000*float2(-1,1) + 0.5;\n    float3 ret3 = tex2D(sampler_main, uv).xyz*+saturate(GetBlur2(uv)*2.8 - 0.13); \n    float3 ret4 = tex2D(sampler_main, uv_echo2).xyz*+saturate(GetBlur2(uv_echo2)*2.8 - 0.13);\n    ret3 = lerp(ret3,ret4,.5);\n    ret3 *= ret3; //darken\n    ret3 *= float3(.9,1.6,2.3);\n    ret3 *= 2; //gamma\n    //ret3 = pow(ret3,1-ret3);\n   \n\nuv =(6+2*sin(q1))*uv-sin(q1);\nfloat2 m = floor(frac(uv*0.5)*2);\nuv = frac(uv)*(1-m) + (m)*frac(1-uv);\n    uv = float2(rad,uv_orig.y);\n\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n//  ret = tex2D(sampler_main, uv).xyz*+saturate(GetBlur2(uv)*2.8 - 0.13); \n    float3 ret2 = tex2D(sampler_main, uv_echo).xyz*+saturate(GetBlur2(uv_echo)*2.8 - 0.13);\n//  ret = lerp(ret,ret2,.5);\n//  ret *= ret; //darken\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \n    ret *= float3(.9,1.6,2.3);\n    ret *= 3; //gamma\n    //ret -= lum(ret3); \n    //ret *= 2;\n    //ret = pow(ret,5);\n    //ret = ret;\n    ret = lerp(ret3.xyz,ret.zxy,.25);\n}"}