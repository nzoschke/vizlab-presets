{"version":2,"baseVals":{"rating":5,"gammaadj":1.99,"echo_zoom":1,"wave_mode":1,"wave_dots":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.73,"wave_smoothing":0.9,"modwavealphastart":0.5,"modwavealphaend":1,"zoomexp":1.00016,"fshader":1,"zoom":1.00022,"warp":0,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.1,"ib_size":0.15,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;a.pi23=0;a.t1=0;","frame_eqs_str":"a.ma+=3.1415*above(a.bass,1)*.01*a.bass;a.ma-=3.1415*above(a.treb,1)*.01*a.treb;a.mx+=.0002*Math.cos(a.ma);a.my+=.0002*Math.tan(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=1-a.mx;a.y=1-a.my;a.ang=3*(Math.sin(.35*a.time)+1);a.pi23=1.333333332*Math.asin(1);a.t1=a.bass+a.mid+a.treb;","init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*tan(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=1-my;\n\nang=(sin(time*.35)+1)*3;\n//a=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nt1=bass+mid+treb;"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;","frame_eqs_str":"a.trans=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.trans2=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.trans3=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+div(rand(Math.floor(a.q30)),15)+\na.instance-a.instance;a.r=.1*rand(a.q30)+a.instance-a.instance;a.g=.1*rand(a.q30)+a.instance-a.instance;a.b=.1*rand(a.q30)+a.instance-a.instance;a.r2=.1*rand(a.q30)+a.instance-a.instance;a.g2=.1*rand(a.q30)+a.instance-a.instance;a.b2=.1*rand(a.q30)+a.instance-a.instance;a.border_r=.1*rand(a.q30)+a.instance-a.instance;a.border_g=.1*rand(a.q30)+a.instance-a.instance;a.border_b=.1*rand(a.q30)+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\ntrans2 = rand(int(q30))/15+instance-instance;\ntrans3 = rand(int(q30))/15+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + rand(int(q30))/15+instance-instance;\nr=rand(q30)*.1+instance-instance;\ng=rand(q30)*.1+instance-instance;\nb=rand(q30)*.1+instance-instance;\nr2=rand(q30)*.1+instance-instance;\ng2=rand(q30)*.1+instance-instance;\nb2=rand(q30)*.1+instance-instance;\nborder_r=rand(q30)*.1+instance-instance;\nborder_g=rand(q30)*.1+instance-instance;\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;a.pi23=0;a.t1=0;","frame_eqs_str":"a.ma+=3.1415*above(a.bass,1)*.01*a.bass;a.ma-=3.1415*above(a.treb,1)*.01*a.treb;a.mx+=.0002*Math.cos(a.ma);a.my+=.0002*Math.tan(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=1-a.mx;a.y=1-a.my;a.ang=3*(Math.sin(.35*a.time)+1);a.pi23=1.333333332*Math.asin(1);a.t1=a.bass+a.mid+a.treb;","init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*tan(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=1-my;\n\nang=(sin(time*.35)+1)*3;\n//a=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.beatfreq=0;a.q25=0;a.angsector=0;a.pulsefreq=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q6=0;a.wm=0;a.bt=0;a.q1=0;a.mq31=0;a.wx=0;a.q5=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.lastbeat=0;a.radsector=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.pulse=0;a.q11=0;a.ccx=0;a.atime=0;a.q4=0;a.wy=0;a.q26=0;a.le=0;a.btblock=0;a.mq27=0;a.mq25=0;a.minorccl=0;a.mq22=0;a.beat=0;a.vol=0;a.hccp=0;a.ccl=0;a.mq26=0;a.q2=0;a.q27=0;a.lastpulse=0;a.q3=0;a.arad=0;a.th=0;a.q7=\n0;a.q28=0;a.q30=0;a.aang=0;a.ccy=0;a.q8=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.le=1.4*a.bass_att+\n.1*a.bass+.5*a.treb;a.pulse=above(a.le,a.th);a.pulsefreq=.00001<Math.abs(equal(a.pulsefreq,0))?2:.00001<Math.abs(a.pulse)?.8*a.pulsefreq+.2*(a.time-a.lastpulse):a.pulsefreq;a.lastpulse=.00001<Math.abs(a.pulse)?a.time:a.lastpulse;a.bt=div(a.time-a.lastbeat,.5*a.beatfreq+.5*a.pulsefreq);a.hccp=div(.03,a.bt+.2)+.5*(.00001<Math.abs(band(above(a.bt,.8),below(a.bt,1.2)))?pow(Math.sin(7.854*(a.bt-1)),4)-1:0);a.beat=band(above(a.le,a.th+a.hccp),a.btblock);a.btblock=1-above(a.le,a.th+a.hccp);a.lastbeat=.00001<\nMath.abs(a.beat)?a.time:a.lastbeat;a.beatfreq=.00001<Math.abs(equal(a.beatfreq,0))?2:.00001<Math.abs(a.beat)?.8*a.beatfreq+.2*(a.time-a.lastbeat):a.beatfreq;a.th=.00001<Math.abs(above(a.le,a.th))?a.le+div(114,a.le+10)-7.407:a.th+div(.07*a.th,a.th-12)+.1*below(a.th,2.7)*(2.7-a.th);a.th=.00001<Math.abs(above(a.th,6))?6:a.th;a.q8=div(10,a.fps);a.ccl+=a.beat;a.minorccl+=a.q8*a.le;a.q5=a.ccl+.0032*a.minorccl;a.q6=a.ccl;a.ccx=.00001<Math.abs(a.beat)?.5+.2*Math.sin(Math.floor(rand(354))):a.ccx;a.cx=a.ccx+\n.1*Math.sin(.01*a.minorccl);a.q1=a.ccx;a.ccy=.00001<Math.abs(a.beat)?.5+.2*Math.sin(Math.floor(rand(354))):a.ccy;a.cy=a.ccx+.1*Math.sin(.013*a.minorccl);a.q2=a.ccy;a.q3=div(4,a.th);a.q4=.01*a.minorccl;a.q7=a.th;a.decay=1-.02*a.q8;a.monitor=a.decay;a.wx=.00001<Math.abs(a.pulse)?.1*Math.floor(rand(10)):a.wx;a.wave_x=a.wx;a.wy=.00001<Math.abs(a.pulse)?.1*Math.floor(rand(10)):a.wy;a.wave_y=a.wy;a.wm=.00001<Math.abs(a.pulse)?.1*Math.floor(rand(20))-1:a.wm;a.wave_mystery=a.wm;a.mv_r=.5+.2*Math.sin(a.q5)+\n.3*Math.sin(36.2*a.q5);a.mv_g=.5+.2*Math.sin(a.q5+2.09)+.3*Math.sin(38.7*a.q5);a.mv_b=.5+.2*Math.sin(a.q5+4.18)+.3*Math.sin(37.4*a.q5);a.wave_r=.5+.5*Math.sin(36.2*a.q5);a.wave_g=.5+.5*Math.sin(38.7*a.q5);a.wave_b=.5+.5*Math.sin(37.4*a.q5);a.q30=a.bass+a.treb+a.mid;","pixel_eqs_str":"a.aang=Math.atan2(a.y-a.q2,a.x-a.q1)+a.q4;a.arad=sqrt(sqr(a.y-a.q2)+sqr(a.x-a.q1))*a.q3;a.radsector=mod(4*a.arad,3);a.angsector=mod(1.273*a.aang,8);a.zoom=1+.1*a.q8*Math.sin(14*mod(a.angsector,4)*a.q6+a.radsector*a.q5);a.rot=.1*a.q8*Math.sin(a.q7)*Math.sin(1.3*a.angsector*a.q5+2.7*a.radsector*a.q6);","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\n// timed sidon sensor\n// le = signal level; desired average value = 2\nle=1.4*bass_att+.1*bass+.5*treb;\npulse=above(le,th);\n// pulsefreq = running average of interval between last 5 pulses\npulsefreq=if(equal(pulsefreq,0),2,\nif(pulse,.8*pulsefreq+.2*(time-lastpulse),pulsefreq));\nlastpulse=if(pulse,time,lastpulse);\n// bt = relative time; 0 = prev beat; 1 = expected beat\nbt=(time-lastbeat)/(.5*beatfreq+.5*pulsefreq);\n// hccp = handcicap for th driven by bt\nhccp=(.03/(bt+.2))+.5*if(band(above(bt,.8),below(bt,1.2)),\n(pow(sin((bt-1)*7.854),4)-1),0);\nbeat=band(above(le,th+hccp),btblock);\nbtblock=1-above(le,th+hccp);\nlastbeat=if(beat,time,lastbeat);\nbeatfreq=if(equal(beatfreq,0),2,\nif(beat,.8*beatfreq+.2*(time-lastbeat),beatfreq));\n// th = threshold\nth=if(above(le,th),le+114/(le+10)-7.407,\nth+th*.07/(th-12)+below(th,2.7)*.1*(2.7-th));\nth=if(above(th,6),6,th);\n\nq8=10/fps;\nccl=ccl+beat;\nminorccl=minorccl+q8*le;\n\nq5=ccl+.0032*minorccl;\nq6=ccl;\n\nccx=if(beat,.5+.2*sin(int(rand(354))),ccx);\ncx=ccx+.1*sin(.01*minorccl);\nq1=ccx;\nccy=if(beat,.5+.2*sin(int(rand(354))),ccy);\ncy=ccx+.1*sin(.013*minorccl);\nq2=ccy;\nq3=4/th;\nq4=.01*minorccl;\nq7=th;\n\ndecay=1-q8*.02;\nmonitor=decay;\n\n\nwx=if(pulse,int(rand(10))*.1,wx);\nwave_x=wx;\nwy=if(pulse,int(rand(10))*.1,wy);\nwave_y=wy;\nwm=if(pulse,int(rand(20))*.1-1,wm);\nwave_mystery=wm;\n\nmv_r=.5+.2*sin(q5)+.3*sin(q5*36.2);\nmv_g=.5+.2*sin(q5+2.09)+.3*sin(q5*38.7);\nmv_b=.5+.2*sin(q5+4.18)+.3*sin(q5*37.4);\nwave_r=.5+.5*sin(q5*36.2);\nwave_g=.5+.5*sin(q5*38.7);\nwave_b=.5+.5*sin(q5*37.4);\nq30=bass+treb+mid;","pixel_eqs_eel":"// coordinates transfomation\n// q1,q2 = position; q3 = 1/zoom; q4 = rotation\naang=atan2(y-q2,x-q1)+q4;\narad=sqrt(sqr(y-q2)+sqr(x-q1))*q3;\n\nradsector=(arad*4)%3;\nangsector=(aang*1.273)%8;\n\nzoom=1+q8*.1*sin(14*(angsector%4)*q6+radsector*q5);\nrot=.1*q8*sin(q7)*sin(1.3*angsector*q5+2.7*radsector*q6);","warp":" shader_body { \n  vec3 mxv_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv);\n  ret_2 = tmpvar_3.xyz;\n  mxv_1 = (abs((\n    ((((\n      ((((texture (sampler_blur2, \n        (uv + (texsize.zw * vec2(1.0, 0.0)))\n      ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n        (uv + (texsize.zw * vec2(0.0, 1.0)))\n      ).xyz * scale2) + bias2)) + ((texture (sampler_blur2, (uv + \n        (texsize.zw * vec2(-1.0, 0.0))\n      )).xyz * scale2) + bias2))\n     - \n      ((texture (sampler_blur2, (uv + (texsize.zw * vec2(0.0, -1.0)))).xyz * scale2) + bias2)\n    ) + (\n      (texture (sampler_blur2, (uv + (texsize.zw * vec2(5.656848, -5.656848)))).xyz * scale2)\n     + bias2)) - ((texture (sampler_blur2, \n      (uv + (texsize.zw * vec2(-5.656848, 5.656848)))\n    ).xyz * scale2) + bias2)) + ((texture (sampler_blur2, (uv + \n      (texsize.zw * vec2(5.656848, 5.656848))\n    )).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur2, (uv + (texsize.zw * vec2(-5.656848, -5.656848)))).xyz * scale2) + bias2)\n  )) * 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((tmpvar_3.x > (q21 * q13)) && (tmpvar_3.x <= (q24 * q11)))) {\n    ret_2.y = (tmpvar_3.y + (tmpvar_4.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (tmpvar_3.z + (tmpvar_4.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (tmpvar_3.x + (tmpvar_4.z * 0.5));\n  };\n  ret_2 = (ret_2 * (mxv_1 + 0.99));\n  ret_2 = (((\n    (ret_2 - (mxv_1 * 2.0))\n   + 0.1) + (0.1 * \n    (0.15 - texture (sampler_noise_lq, ((uv * rand_frame.xy) * 9.0)))\n  ).xyz) - (0.1 * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec2 uv1_1;\n  vec3 ret_2;\n  vec3 tmpvar_3;\n  tmpvar_3 = (texture (sampler_main, uv) * (1.0 - rad)).xyz;\n  vec2 tmpvar_4;\n  tmpvar_4.y = 0.0;\n  tmpvar_4.x = texsize.z;\n  vec2 tmpvar_5;\n  tmpvar_5.x = 0.0;\n  tmpvar_5.y = texsize.w;\n  vec2 tmpvar_6;\n  tmpvar_6.x = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\n  tmpvar_6.y = (texture (sampler_main, (uv - tmpvar_5)).xyz - texture (sampler_main, (uv + tmpvar_5)).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    ((uv - 0.5) * 2.0)\n  )) - tmpvar_6);\n  float tmpvar_7;\n  tmpvar_7 = clamp ((0.04 / sqrt(\n    dot (uv1_1, uv1_1)\n  )), 0.0, 1.0);\n  uv1_1 = ((0.3 * cos(\n    (uv1_1 * 12.0)\n  )) - (9.0 * tmpvar_6));\n  ret_2 = ((-(tmpvar_3) + tmpvar_7) + ((12.0 * vec3(\n    clamp ((0.04 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\n  )) * sqrt(tmpvar_3)));\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv1_1.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\n    ret_2.z = (ret_2.z - (tmpvar_8.x * 0.5));\n  };\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\n    ret_2.x = (ret_2.x - (tmpvar_8.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\n    ret_2.y = (ret_2.y - (tmpvar_8.z * 0.5));\n  };\n  ret_2 = (0.51 - ret_2);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{\n//ret=GetPixel(uv_orig+texsize.zw*float2(q6,q7)); \nfloat2 newuv=uv;\nret=GetPixel(newuv);\nfloat3 lum1=0,lum2=0,lum3=0,lum4=0,lum5=0,lum6=0,lum7=0,lum8=0;\nfloat3 mxv=0;\nfloat r=8;\n//Blur1: r=4 (pixels);\n//Blur2: r=8 (pixels);\n//Blur3: r=9 (pixels);\nfloat ro=0.707106*r;\ntexsize.zw*r;\nlum1=GetBlur2(newuv+texsize.zw*float2(1,0));\nlum2=GetBlur2(newuv+texsize.zw*float2(0,1));\nlum3=GetBlur2(newuv+texsize.zw*float2(-1,0));\nlum4=GetBlur2(newuv+texsize.zw*float2(0,-1));\nlum5=GetBlur2(newuv+texsize.zw*float2(ro,-ro));\nlum6=GetBlur2(newuv+texsize.zw*float2(-ro,ro));\nlum7=GetBlur2(newuv+texsize.zw*float2(ro,ro));\nlum8=GetBlur2(newuv+texsize.zw*float2(-ro,-ro));\nmxv=abs(lum1-lum2+lum3-lum4+lum5-lum6+lum7-lum8)*0.5;\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \nret*=mxv+0.99;\nret=ret-mxv*2+0.1+0.1*(0.15-tex2D(sampler_noise_lq,uv*rand_frame.xy*9))-0.1*GetBlur1(uv);\n\n}","comp_hlsl":"shader_body\n{\n\nfloat2 uv1 = uv-.5;\n\nfloat3 ret1 = tex2D(sampler_main, uv) * (1-rad);\n\n\nfloat2 hor = float2 (texsize.z,0);\nfloat2 ver = float2 (0,texsize.w);\nfloat dx = GetPixel (uv-hor) - GetPixel (uv+hor);\nfloat dy = GetPixel (uv-ver) - GetPixel (uv+ver);\nfloat2 dz = float2 (dx,dy);\n\nuv1 = uv1*0+.3*cos(uv1*2) - dz;;\nfloat dots = saturate(.04/length(uv1));\nuv1 = uv1*0+.3*cos(uv1*12) - 9*dz;;\nfloat3 dots2 = saturate(.04/length(uv1));\n\n\nret = (-ret1) + dots + .0 + 12*dots2*(-0+sqrt(ret1));\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv1.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret=.51-ret;\n}"}