{"version":2,"baseVals":{"rating":5,"gammaadj":2.47,"decay":0.93,"echo_zoom":0.997,"echo_orient":1,"wave_mode":3,"wave_dots":1,"modwavealphabyvolume":1,"wrap":0,"brighten":1,"darken":1,"invert":1,"wave_scale":16.217,"wave_mystery":-0.44,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_r":0.1,"ob_g":0.1,"ob_a":1,"ib_size":0.05,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"textured":1,"rad":2.66718,"tex_zoom":0.40034,"g":1,"b":1,"a":0.2,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"additive":1,"textured":1,"rad":1.08925,"ang":6.28319,"tex_zoom":3.20918,"g":1,"b":1,"a":0.2,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = 3+sin(time);","init_eqs_eel":"","frame_eqs_eel":"ang = 3+sin(time);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.d=0;a.cjsy=0;a.mq1=0;a.xpos=0;a.cksx=0;a.cjzm=0;a.yamptarg=0;a.cjwp=0;a.crs=0;a.q25=0;a.ckwp=0;a.crx=0;a.q12=0;a.cb=0;a.cjdx=0;a.du=0;a.cjsx=0;a.q22=0;a.q21=0;a.y_pos=0;a.ydir=0;a.q13=0;a.meanbass_att=0;a.q29=0;a.q6=0;a.ci=0;a.thresh=0;a.q1=0;a.newrad=0;a.mq31=0;a.myx=0;a.q5=0;a.ckdx=0;a.mq21=0;a.mq24=0;a.myy=0;a.dy_r=0;a.cr2=0;a.chng=0;a.mq28=0;a.ckrt=0;a.ckdy=0;a.cr=0;a.lastbeat=0;a.mult=0;a.mq23=0;a.cjdy=0;a.beatrate=0;a.q31=0;a.q23=0;a.q24=0;a.cksy=0;\na.q11=0;a.ckzm=0;a.peakbass_att=0;a.xamptarg=0;a.ang2=0;a.dv=0;a.atime=0;a.xamp=0;a.xspeed=0;a.ckcy=0;a.q4=0;a.rad_cycle=0;a.cjcy=0;a.dx_r=0;a.ypos=0;a.newx=0;a.movement=0;a.q26=0;a.cjrt=0;a.att=0;a.r=0;a.cjcx=0;a.mq27=0;a.mq25=0;a.volume=0;a.mq22=0;a.beat=0;a.vol=0;a.newzoom=0;a.crr=0;a.mq26=0;a.q2=0;a.q27=0;a.cqr=0;a.volt=0;a.dist=0;a.kx1=0;a.yamp=0;a.ckcx=0;a.cr1=0;a.q3=0;a.jx1=0;a.q7=0;a.xdir=0;a.q28=0;a.newy=0;a.q8=0;a.yspeed=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.warp=0;a.volume=\n.3*(a.bass+a.mid+a.att);a.xamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.25*a.volume*a.bass_att,.5):a.xamptarg;a.xamp+=.5*(a.xamptarg-a.xamp);a.xdir=.00001<Math.abs(above(Math.abs(a.xpos),a.xamp))?-sign(a.xpos):.00001<Math.abs(below(Math.abs(a.xspeed),.1))?2*above(a.xpos,0)-1:a.xdir;a.xspeed=a.xspeed+a.xdir*a.xamp-a.xpos-.055*a.xspeed*below(Math.abs(a.xpos),a.xamp);a.xpos+=.001*a.xspeed;a.yamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.15*a.volume*a.treb_att,.5):a.yamptarg;\na.yamp+=.5*(a.yamptarg-a.yamp);a.ydir=.00001<Math.abs(above(Math.abs(a.ypos),a.yamp))?-sign(a.ypos):.00001<Math.abs(below(Math.abs(a.yspeed),.1))?2*above(a.ypos,0)-1:a.ydir;a.yspeed=a.yspeed+a.ydir*a.yamp-a.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.ypos+=.001*a.yspeed;a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,\na.peakbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-a.beat)*a.peakbass_att*(.95*above(a.time-a.lastbeat,2*a.beatrate)+.995*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=\nMath.max(a.peakbass_att,1.1*a.meanbass_att);a.wave_x=a.xpos+.5;a.wave_y=1-(a.ypos+.5);a.wave_r=.5+.499*(.6*Math.sin(.0098*a.time)+.4*Math.sin(.01047*a.time));a.wave_g=.5+.499*(.6*Math.sin(.00835*a.time)+.4*Math.sin(.01081*a.time));a.wave_b=.5+.499*(.6*Math.sin(.00814*a.time)+.4*Math.sin(.01011*a.time));a.wave_mystery=-.17+.03*(.6*Math.sin(.637*a.time*.01)+.4*Math.sin(.00949*a.time));a.mv_r=.00001<Math.abs(a.beat)?1:a.ib_r;a.mv_b=.00001<Math.abs(a.beat)?a.wave_b:a.ib_b;a.q3=a.wave_mystery;a.q1=a.wave_x;\na.q2=1-a.wave_y;a.q2=a.ypos+.5;a.warp=0;a.ob_r=Math.sin(2*a.time);a.ob_b=Math.sin(6.8*a.time);a.ob_g=Math.sin(9.3*a.time);a.monitor=a.wave_y;a.movement+=.4*div(a.bass+a.bass_att+.1*pow(a.bass+.6*a.bass_att+.2*a.treb_att,3),a.fps);a.movement=.00001<Math.abs(above(a.movement,1E4))?0:a.movement;a.rot=Math.sin(a.movement);a.cx=a.wave_x;a.cy=a.y_pos+.5;a.q8=a.movement;","pixel_eqs_str":"a.rad_cycle=a.rad*a.rad*a.x*60*a.rad*Math.sin(a.q1);a.rot=.00001<Math.abs(above(a.q2,a.q8))?.06*Math.sin(a.rad_cycle-3*Math.sin(a.q3)-a.x*a.ang*a.q3)*equal(a.rad,a.x+a.y)*Math.sin(a.q6)-.3*Math.sin(a.q7):.02*Math.sin(a.q3);a.zoom=.00001<Math.abs(above(a.q2,a.q8))?2*a.rot*a.rad+1-.01*a.q1*a.rad-(1-a.y-.3*Math.sin(a.q4))+.25*a.y*Math.sin(a.q2):1.1;a.zoomexp=1-.1*a.rad;a.dx=.00001<Math.abs(above(a.q2,a.q8))?div(equal(a.x,a.rad)*Math.sin(a.q3),a.y)*Math.sin(a.q1):.009*Math.sin(a.q5)*\na.x*a.rad+a.d*Math.sin(a.q2);a.dy=.00001<Math.abs(above(a.q2,a.q8))?div(equal(a.y,a.rad)*Math.sin(a.q2),a.x)*Math.sin(a.q5):.009*Math.sin(a.q3)*a.y*a.rad+a.r*Math.sin(a.q1);a.d=above(a.y,Math.sin(3*a.ang+a.time));a.r=above(a.y,Math.sin(3*a.ang+a.time));a.rot=.00001<Math.abs(above(bnot(1*a.bass),bnot(1*a.treb)))?a.rot*Math.sin(a.rad*Math.sin(a.time)):-a.rot*Math.sin(a.rad*Math.cos(a.time));a.cx=.5+2.62786984*pow(a.warp*a.q1,a.q2*a.q3);a.warp=1.331+a.rot-a.bass_att;a.q2=a.q1+a.sy;a.dx=2.98454583*pow(a.sy+\na.rot,a.warp+a.q3);a.dy=2.33245909*pow(a.rad+a.warp,a.bass_att*a.time);a.warp=.00001<Math.abs(below(a.warp,.01))?.01:a.warp;a.warp=.00001<Math.abs(above(a.warp,100))?100:a.warp;a.cx=.00001<Math.abs(below(a.cx,-1))?-1:a.cx;a.cx=.00001<Math.abs(above(a.cx,2))?2:a.cx;a.dx=.00001<Math.abs(below(a.dx,-1))?-1:a.dx;a.dx=.00001<Math.abs(above(a.dx,1))?1:a.dx;a.dy=.00001<Math.abs(below(a.dy,-1))?-1:a.dy;a.dy=.00001<Math.abs(above(a.dy,1))?1:a.dy;a.cx=.1*bitand(5,10*a.x-.5)+.05;a.cy=.1*bitand(5,10*a.y-.5);\na.newx=a.q1-a.x;a.newy=a.q2-a.y;a.newrad=div(sqrt(a.newx*a.newx+.5625*a.newy*a.newy),2);a.newzoom=pow(1.05+.03*a.newrad,pow(.01+Math.sin(a.newrad*a.newrad),2*a.newrad-1));a.dx=a.newx*a.newzoom-a.newx;a.dy=a.newy*a.newzoom-a.newy;a.dx*=.25;a.dy*=.1;a.sx=-1;a.cx=.5;a.cy=.5;a.rot=1.7*a.x*Math.sin(div(a.time,3.76))*3;a.rot=div(a.rot,3)*Math.tan(1-a.rad);a.myy=a.x-a.q1;a.myx=a.y-a.q2+.1;a.dx=6*Math.sin(.675*a.q8)*a.myx*a.myy;a.dy=3*Math.sin(.675*a.q8)*(a.myx*a.myx-a.myy*a.myy);a.thresh=2*above(a.bass_att,\na.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.rot=a.rot+.000006*a.time+.5*\n(.5-a.rad)+a.rad;a.rot-=.1*sqr(.5*Math.cos(a.ang*a.time)*a.bass_att);a.zoom-=.005625*Math.sin(1-a.rad)*(5-a.rad);a.zoom-=.05*above(a.y,.5)*sqr(.05*Math.sin(a.ang*a.time)*a.bass_att);a.zoom-=.05*below(a.y,.5)*sqr(.05*Math.cos(a.ang*a.time)*a.treb_att);a.du=2*a.x-1-a.q1;a.dv=2*a.y-1-a.q2;a.dist=sqrt(a.du*a.du+a.dv*a.dv);a.ang2=Math.atan2(a.du,a.dv)+.15*a.time;a.mult=.65*Math.sin(.05*a.dist);a.dx=a.mult*Math.sin(2*a.ang2-1.5);a.dy=a.mult*Math.cos(2*a.ang2-1.5);a.rot=.1*pow(-a.ang,3)-1.18*Math.sin(a.ang);\na.zoom=2*Math.sin(-a.rad)+1.3+Math.sin(a.rad);a.dx+=.09*Math.sin(.785*a.q8);a.dy+=.09*Math.sin(.675*a.q8);a.zoom+=a.q7;a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.15*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.15*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.zoom-=.01;a.zoom+=3*a.dx_r*Math.tan(2*a.dy_r*(.5*Math.sin(3*a.bass_att)-a.rad*(2-a.rad)*Math.sin(12*a.rad))*a.bass_att*4);a.zoom-=3*\na.dy_r*Math.tan(2*a.dx_r*Math.sin(4*a.bass_att)*(.75-a.rad)*Math.sin(6*a.ang)*a.bass_att*4);a.ckdx=a.dx;a.ckdy=a.dy;a.cksx=a.sx;a.cksy=a.sy;a.ckrt=a.rot;a.ckzm=a.zoom;a.ckcx=a.cx;a.ckcy=a.cy;a.ckwp=a.warp;a.dx=0;a.dy=0;a.sx=1;a.sy=1;a.rot=0;a.zoom=1;a.cx=.5;a.cy=.5;a.warp=0;a.volt=div(a.bass*a.mid*a.treb,3);a.warp+=.00001<Math.abs(above(a.x,.45+.6*Math.sin(div(3*a.time,a.volt))))?.00001<Math.abs(below(a.x,.55+.6*Math.sin(div(3*a.time,a.volt))))?.00001<Math.abs(below(a.y,.75))?.00001<Math.abs(above(a.rad,\n0))?1+.3*Math.sin(a.bass):0:0:0:0;a.sy+=.00001<Math.abs(above(a.y,.49+.38*Math.sin(div(3*a.time,a.volt))))?.00001<Math.abs(below(a.y,.51+.38*Math.sin(div(3*a.time,a.volt))))?.00001<Math.abs(below(a.rad,1))?-.03*Math.sin(a.bass):0:0:0;a.dy=5*(a.dy+(.00001<Math.abs(above(a.x,.45+.6*Math.sin(1.11*a.time)))?.00001<Math.abs(below(a.x,.55+.6*Math.sin(1.11*a.time)))?.00001<Math.abs(above(a.y,.45+.6*Math.sin(1.5*a.time)))?.00001<Math.abs(below(a.y,.55+.6*Math.sin(1.5*a.time)))?.00001<Math.abs(below(a.y,.75))?\n-.02*Math.sin(a.time):0:0:0:0:0));a.cr1=Math.floor(div(Math.sin(div(a.time,1)),2)+.5+.99);a.cr1=Math.floor(div(Math.sin(a.mid*a.treb*12),2)+.5+.9);a.cr2=a.cr1;a.ci=a.rad;a.cb=.25;a.crs=2;a.cr=pow(div(Math.sin(6.3*a.ci-6.3*a.cb),2)+.5,a.crs)*a.crx+a.cr1;a.cqr=.00001<Math.abs(above(a.ci,.25+a.cb))?a.cr:a.crx+a.cr1;a.crr=.00001<Math.abs(below(a.ci,1.5))?a.cqr:a.crx+a.cr1;a.jx1=a.crr;a.kx1=1-a.crr;a.cjdx=a.dx;a.cjdy=a.dy;a.cjsx=a.sx;a.cjsy=a.sy;a.cjrt=a.rot;a.cjzm=a.zoom;a.cjcx=a.cx;a.cjcy=a.cy;a.cjwp=\na.warp;a.dx=a.jx1*a.cjdx+a.kx1*a.ckdx;a.dy=a.jx1*a.cjdy+a.kx1*a.ckdy;a.sx=a.jx1*a.cjsx+a.kx1*a.cksx;a.sy=a.jx1*a.cjsy+a.kx1*a.cksy;a.rot=a.jx1*a.cjrt+a.kx1*a.ckrt;a.zoom=a.jx1*a.cjzm+a.kx1*a.ckzm;a.cx=a.jx1*a.cjcx+a.kx1*a.ckcx;a.cy=a.jx1*a.cjcy+a.kx1*a.ckcy;a.warp=a.jx1*a.cjwp+a.kx1*a.ckwp;","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\nwarp = 0;\nvolume = 0.3*(bass+mid+att);\nxamptarg = if(equal(frame%15,0),min(0.25*volume*bass_att,0.5),xamptarg);\nxamp = xamp + 0.5*(xamptarg-xamp);\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\nxpos = xpos + 0.001*xspeed;\nyamptarg = if(equal(frame%15,0),min(0.15*volume*treb_att,0.5),yamptarg);\nyamp = yamp + 0.5*(yamptarg-yamp);\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\nypos = ypos + 0.001*yspeed;\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\nwave_x = xpos + 0.5;\nwave_y = 1-(ypos + 0.5);\nwave_r = 0.5 + 0.499*( 0.60*sin(0.980*time*0.01) + 0.40*sin(1.047*time*0.01) );\nwave_g = 0.5 + 0.499*( 0.60*sin(0.835*time*0.01) + 0.40*sin(1.081*time*0.01) );\nwave_b = 0.5 + 0.499*( 0.60*sin(0.814*time*0.01) + 0.40*sin(1.011*time*0.01) );\nwave_mystery = -0.17 + 0.03*(0.6*sin(0.637*time*0.01) + 0.4*sin(0.949*time*0.01));\nmv_r = if(beat, 1, ib_r);\nmv_b = if(beat, wave_b, ib_b);\n//mv_a = if(beat, 0.1, ib_a);\n//ib_a = 0.015;\nq3 = wave_mystery;\nq1 = wave_x;\nq2 = 1-wave_y;\nq2 = ypos+0.5;\nwarp=0;\n\n//q2 = 1-(ypos + 0.5);\n//q1 = 0.5;\n//q2=0.5;\nob_r = sin(time*2);\nob_b = sin(time*6.8);\nob_g = sin(time*9.3);\n\nmonitor = wave_y;\nmovement =movement + 0.4*(((bass+bass_att + 0.1*pow((bass+0.6*bass_att+0.2*treb_att),3)))/fps);\nmovement = if(above(movement,10000), 0, movement);\nrot =1*sin(movement);\ncx = wave_x;\ncy = y_pos+0.5;\n\nq8 = movement;","pixel_eqs_eel":"rad_cycle=rad*rad*x*60*rad*sin(q1);\nrot=if(above(q2,q8),.06*sin(rad_cycle-3*Sin(Q3)-x*ang*q3)*equal(Rad,x+y)*sin(Q6)-.3*sin(Q7\n),.02*sin(Q3));\nzoom =if(above(q2,q8), 2*rot*rad + 1 - 0.01*q1*rad-(1-y-.3*sin(Q4))+(y*.25*sin(Q2)),1.10);;\nzoomexp = 1 - 0.1*rad;\ndx=if(above(q2,q8),equal(x,raD)*sin(Q3)/y*sin(Q1),.009*sin(q5)*x*rad+d*sin(q2));\ndy=if(above(q2,q8),equal(y,rad)*sin(q2)/x*sin(q5),.009*sin(Q3)*y*rad+r*sin(q1));\n//there was a semicolon here, it's gone now\nd=above(y,sin(ang*3+time));\nr=above(y,sin(ang*3+time));\nrot=if(above(bnot(1*bass),bnot(1*treb)),rot*sin(rad*sin(time)),-rot*sin(rad*cos(time)));\ncx = 0.5 + 2.62786984*pow(warp * q1 , q2 * q3);\nwarp = 1.331 + rot - bass_att;\nq2 = q1 + sy;\ndx = 0 + 2.98454583*pow(sy + rot , warp + q3);\ndy = 0 + 2.33245909*pow(rad + warp , bass_att * time);\nwarp=if(below(warp,0.01), 0.01, warp);\nwarp=if(above(warp,100.0), 100.0, warp);\ncx=if(below(cx,-1.0), -1.0, cx);\ncx=if(above(cx,2.0), 2.0, cx);\ndx=if(below(dx,-1), -1, dx);\ndx=if(above(dx,1.0), 1.0, dx);\ndy=if(below(dy,-1), -1, dy);\ndy=if(above(dy,1.0), 1.0, dy);\ncx = (5&(x*10-0.5))*0.1+0.05;\ncy = (5&(y*10-0.5))*0.1;\nnewx = q1-x;\nnewy = q2-y;\nnewrad = sqrt((newx)*(newx)+0.5625*(newy)*(newy))/2;\nnewzoom = pow(1.05 + 0.03*newrad, pow(0.01+sin(newrad*newrad), newrad*2-1));\ndx = (newx)*newzoom - newx;\ndy = (newy)*newzoom - newy;\ndx=dx*0.25;      //+sin(time/5)*0.15;\ndy=dy*0.1;\n//rot = 1*newrad*(0.5*(0.5-rad)+0.1);\n//sx=-1;\nsx=-1;\ncx = 0.5;//(0&(x+q1))-q1;\ncy = 0.5;//(0&(y+q2))-q2;\nrot=1.7*x*sin(time/3.76)*3;\n//rot=(0.15+sin(time*0.07)*0.061)*pow(-ang,3)-1.18*atan(ang)*sin(zoom*1.5)+0.01*sin(time*0.223)*1.4;\n\n\nrot=rot/3*tan(1-rad);\nmyy = x-q1;\nmyx = y-q2+0.1;\ndx = 3*sin(q8*0.675)*(2*myx*myy);\ndy = 3*sin(q8*0.675)*((myx*myx) - (myy*myy));\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\n\n//zoom = zoom +q7;\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\nrot = rot + 0.00006*(0.1*(time))+(0.5*(0.5-rad))+rad;\nrot = rot - 0.1*sqr(0.5*cos(ang*time)*bass_att);\nzoom = zoom - 0.09*(sin(1-rad)*0.25*(0.25*(5-rad)));\nzoom = zoom - 0.05*above(y,0.5)*sqr(0.5*sin(ang*time)*0.1*bass_att);\nzoom = zoom - 0.05*below(y,0.5)*sqr(0.5*cos(ang*time)*0.1*treb_att);\ndu = (x*2-1) - q1;\ndv = (y*2-1) - q2;\ndist = sqrt(du*du+dv*dv);\nang2 = atan2(du,dv) + time*0.15;\nmult = 0.65*sin(dist*0.05);\ndx = mult*sin(ang2*2-1.5);\ndy = mult*cos(ang2*2-1.5);\nrot=0.1*pow(-ang,3)-1.18*sin(ang);\nzoom=2*sin(-rad)+1.3+ sin(rad);\ndx = dx + 0.09*sin(q8*0.785);\ndy = dy + 0.09*sin(q8*0.675);\nzoom = zoom +q7;\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.15*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.15*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\nzoom = zoom - 0.01;\nzoom = zoom + dx_r*3*tan(dy_r*(2*(sin(3*bass_att)*0.5-rad*(2-rad)*sin(12*rad))*bass_att*4));\nzoom = zoom - dy_r*3*tan(dx_r*(2*(sin(4*bass_att)*(0.75-rad)*sin(6*ang))*bass_att*4));\nckdx=dx;//////////////////////////////////////////\nckdy=dy;\ncksx=sx;\ncksy=sy;\nckrt=rot;\nckzm=zoom;\nckcx=cx;\nckcy=cy;\nckwp=warp;\n\ndx=0;\ndy=0;\nsx=1;\nsy=1;\nrot=0;\nzoom=1;\ncx=.5;\ncy=.5;\nwarp=0;/////////////////////////////////////////////////////\n\nVolt = (bass*mid*treb)/3;\nwarp = warp + if (above(x, 0.45 + 0.6*sin(3*time/Volt)), if(below(x, 0.55 + 0.6*sin(3*time/Volt)), if(below(y, 0.75), if(above(rad,0.0), 1 + 0.3*sin(bass) , 0), 0), 0), 0);\nsy = sy + if (above(y, 0.49 + 0.38*sin(3*time/Volt)), if(below(y, 0.51 + 0.38*sin(3*time/Volt)), if(below(rad, 1), -0.03*sin(bass), 0), 0), 0);\ndy = (dy + if\n(above(x, 0.45 + 0.6*sin(1.11*time)), if\n(below(x, 0.55 + 0.6*sin(1.11*time)), if\n(above(y, 0.45 + 0.6*sin(1.5*time)), if\n(below(y, 0.55 + 0.6*sin(1.5*time)), if\n(below(y, 0.75), -0.02*sin(time), 0), 0), 0), 0), 0))*5;\n///////////////////////////////////////\ncr1=(int(sin(time/1)/2+.5+.99));\ncr1=(int(sin(mid*treb*12)/2+.5+.9));\ncr2=cr1;\nci=rad;\ncb=.25  ;\ncrs=2;\ncr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;\ncqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);\njx1=crr;\nkx1=1-crr;\n\ncjdx=dx;\ncjdy=dy;\ncjsx=sx;\ncjsy=sy;\ncjrt=rot;\ncjzm=zoom;\ncjcx=cx;\ncjcy=cy;\ncjwp=warp;\n\ndx=(jx1*cjdx+kx1*ckdx);\ndy=(jx1*cjdy+kx1*ckdy);\nsx=(jx1*cjsx+kx1*cksx);\nsy=(jx1*cjsy+kx1*cksy);\nrot=(jx1*cjrt+kx1*ckrt);\nzoom=(jx1*cjzm+kx1*ckzm);\ncx=(jx1*cjcx+kx1*ckcx);\ncy=(jx1*cjcy+kx1*ckcy);\nwarp=(jx1*cjwp+kx1*ckwp);////////////////////////////////////////////////////","warp":" shader_body { \n  vec3 rsamp_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_pw_main, uv);\n  ret_2 = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.xy - 0.5)\n   * 12.0) * texsize.zw)));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  rsamp_1 = tmpvar_6;\n  float tmpvar_7;\n  vec2 x_8;\n  x_8 = (tmpvar_4.xy - uv);\n  tmpvar_7 = sqrt(dot (x_8, x_8));\n  float tmpvar_9;\n  vec2 x_10;\n  x_10 = (tmpvar_5.xy - uv);\n  tmpvar_9 = sqrt(dot (x_10, x_10));\n  if ((tmpvar_7 > tmpvar_9)) {\n    ret_2.xy = tmpvar_6.xy;\n  };\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\n    ret_2.y = (ret_2.y + (tmpvar_11.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (tmpvar_4.z + (tmpvar_11.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (ret_2.x + (tmpvar_11.z * 0.5));\n  };\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.zw - 0.5)\n   * 48.0) * texsize.zw)));\n  rsamp_1 = tmpvar_12.xyz;\n  float tmpvar_13;\n  vec2 x_14;\n  x_14 = (ret_2.xy - uv);\n  tmpvar_13 = sqrt(dot (x_14, x_14));\n  float tmpvar_15;\n  vec2 x_16;\n  x_16 = (tmpvar_12.xy - uv);\n  tmpvar_15 = sqrt(dot (x_16, x_16));\n  if ((tmpvar_13 > tmpvar_15)) {\n    ret_2.xy = rsamp_1.xy;\n  };\n  ret_2.z = texture (sampler_fw_main, ret_2.xy).z;\n  ret_2.z = (ret_2.z - (q1 * 0.005));\n  if ((ret_2.z < 0.09)) {\n    ret_2 = vec3(0.0, 0.0, 0.0);\n  };\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_2;\n  ret = tmpvar_17.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 5.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.y;\n  tmpvar_5.y = tmpvar_4.y;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.y;\n  tmpvar_6.y = -(tmpvar_3.y);\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.x;\n  tmpvar_7.y = tmpvar_4.y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (((\n    (vec2(0.5, 0.5) + ((uv - vec2(0.5, 0.5)) * (1.0 - (bass_att * 0.04))))\n   - \n    ((tmpvar_6 * texsize.zw) * 16.0)\n  ) - (\n    (tmpvar_7 * texsize.zw)\n   * 8.0)) + (vec2(16.0, -16.0) * texsize.zw));\n  vec3 tmpvar_9;\n  tmpvar_9 = (vec3(((\n    ((texture (sampler_blur1, (uv - (tmpvar_5 * 0.2))).xyz * scale1) + bias1)\n  .y * 0.75) + (\n    ((-(tmpvar_3) + tmpvar_4).y + 0.5)\n   * 0.25))) * (vec3(1.0, 1.0, 1.0) - vec3(clamp (\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 1.2)\n  , 0.0, 1.0))));\n  ret_1 = tmpvar_9;\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_8.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_9.x > (q26 * q13)) && (tmpvar_9.x <= (q23 * q11)))) {\n    ret_1.z = (tmpvar_9.z - (tmpvar_10.x * 0.5));\n  };\n  if (((tmpvar_9.y > (q25 * q11)) && (tmpvar_9.y <= (q22 * q12)))) {\n    ret_1.x = (tmpvar_9.x - (tmpvar_10.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\n    ret_1.y = (tmpvar_9.y - (tmpvar_10.z * 0.5));\n  };\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_3.x;\n  tmpvar_11.y = tmpvar_4.x;\n  vec2 tmpvar_12;\n  tmpvar_12.x = -(tmpvar_4.z);\n  tmpvar_12.y = tmpvar_3.z;\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_3.x;\n  tmpvar_13.y = tmpvar_4.x;\n  vec2 tmpvar_14;\n  tmpvar_14.x = -(tmpvar_4.z);\n  tmpvar_14.y = tmpvar_3.z;\n  ret_1 = (mix (mix (\n    mix (ret_1, (ret_1 * vec3(2.0, 1.0, 0.0)), vec3((texture (sampler_main, uv).z * 3.0)))\n  , vec3(0.0, -0.2, -1.0), vec3(\n    (((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1).x * 2.4)\n  )), (vec3(0.0, 0.5, 1.0) * \n    (0.9 + (-(tmpvar_3) + tmpvar_4).x)\n  ), vec3(max (texture (sampler_main, \n    ((uv + ((tmpvar_11 * texsize.zw) * 6.0)) + ((tmpvar_12 * texsize.zw) * 24.0))\n  ).x, texture (sampler_main, \n    ((uv + ((tmpvar_13 * texsize.zw) * 6.0)) - ((tmpvar_14 * texsize.zw) * 24.0))\n  ).x))) - ((slow_roam_sin.wzy * slow_roam_cos.zxy) * 0.4));\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = ret_1;\n  ret = tmpvar_15.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv;//_orig;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));\nret.xyz = tex2D( sampler_pw_main,uvm).xyz;\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uvm.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n\nrsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nret.z = tex2D(sampler_fw_main,ret.xy).z;\n\nret.z -= q1*.005;\n\nif (ret.z < .09) {\nret*=0;\n}\n\n\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*5;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\nfloat2 uv1 = uv - float2(dx.y,dy.y)*0.2;\nret = GetBlur1(uv1).y*0.75 + ((-dx+dy).y+0.5)*0.25;\n\nfloat2 c = 0.5;\nfloat2 uv2 = c + (uv-c)*(1-bass_att*0.04) - float2(dy.y,-dx.y)*texsize.zw*16 - float2(dx.x,dy.y)*texsize.zw*8 + float2(1,-1)*texsize.zw*16;\nret = lerp(ret,0,saturate(GetBlur1(uv).z*1.2));\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv2.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret = lerp(ret,ret*float3(2,1,0),GetPixel(uv).z*3);\nret = lerp(ret*float3(1,1,1),float3(0,-0.2,-1),GetBlur1(uv2).x*2.4);\nfloat2 uv3 = uv + float2(dx.x,dy.x)*texsize.zw*6 + float2(-dy.z,dx.z)*texsize.zw*24;\nfloat2 uv31 = uv + float2(dx.x,dy.x)*texsize.zw*6 - float2(-dy.z,dx.z)*texsize.zw*24;\nfloat x = max(GetPixel(uv3).x,GetPixel(uv31).x);\nret = lerp(ret,float3(0,0.5,1)*(0.9+(-dx+dy).x),x);\n//ret = GetPixel(uv).z;\nret-=slow_roam_sin.wzy*slow_roam_cos.zxy*.4;\n}"}