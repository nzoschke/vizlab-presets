{"version":2,"baseVals":{"rating":5,"gammaadj":2.7,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"wave_a":0.303,"wave_scale":6.086,"wave_smoothing":0.9,"warpanimspeed":2.289,"warpscale":5.472,"zoomexp":0.01,"zoom":0.9901,"warp":1.8566,"wave_r":0.5,"wave_g":0.5,"wave_b":0.8,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q12=0;a.w2=0;a.q22=0;a.q21=0;a.q29=0;a.q6=0;a.q1=0;a.q5=0;a.mq21=0;a.mq24=0;a.q9=0;a.chng=0;a.mq28=0;a.mq23=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.atime=0;a.mq30=0;a.q26=0;a.w1=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.q2=0;a.q27=0;a.q3=0;a.q7=0;a.q28=0;a.q30=0;a.q8=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq30=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq30;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q30=a.mq30;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q1=.4+.4*Math.sin(.006*a.atime);a.q2=.4+.4*Math.cos(.00613828348*a.atime);a.q3=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q3;a.q1=a.aspectx;\na.q2=a.aspecty;a.w1=.7*Math.asin(1);a.w2=1.3*Math.asin(1);a.q5=Math.sin(a.w1);a.q6=Math.cos(a.w1);a.q7=Math.sin(a.w2);a.q8=Math.cos(a.w2);a.w1=.7*Math.asin(1);a.w2=1.3*Math.asin(1);a.q9=Math.sin(a.w1);a.q10=Math.cos(a.w1);a.q11=Math.sin(a.w2);a.q12=Math.cos(a.w2);a.zoom=.998;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq30=if(above(chng,cthr),rand(1)*.3,mq30);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq1=.4+sin(atime*.006        )*.4;\nq2=.4+cos(atime*.00613828348)*.4;\nq3=.4+sin(atime*.00598593455)*.4;\nmonitor=q3;\n\nq1 = aspectX;\nq2 = aspectY;\nw1 = asin(1)*0.7;\nw2 = asin(1)*1.3;\nq5 = sin(w1);\nq6 = cos(w1);\nq7 = sin(w2);\nq8 = cos(w2);\nw1 = asin(1)*0.7;\nw2 = asin(1)*1.3;\nq9 = sin(w1);\nq10 = cos(w1);\nq11 = sin(w2);\nq12 = cos(w2);\nzoom = 0.998;","pixel_eqs_eel":"","warp":" shader_body { \n  vec4 lums_1;\n  vec3 ret_2;\n  vec3 tmpvar_3;\n  tmpvar_3.z = 0.0;\n  tmpvar_3.xy = texsize.zw;\n  vec3 tmpvar_4;\n  tmpvar_4 = (tmpvar_3 * 4.0);\n  lums_1.x = dot (texture (sampler_main, (uv + (texsize.zw * tmpvar_4.xz))).xyz, vec3(0.32, 0.49, 0.29));\n  lums_1.y = dot (texture (sampler_main, (uv - (texsize.zw * tmpvar_4.xz))).xyz, vec3(0.32, 0.49, 0.29));\n  lums_1.z = dot (texture (sampler_main, (uv + (texsize.zw * tmpvar_4.zy))).xyz, vec3(0.32, 0.49, 0.29));\n  lums_1.w = dot (texture (sampler_main, (uv - (texsize.zw * tmpvar_4.zy))).xyz, vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_5;\n  tmpvar_5.x = (lums_1.x - lums_1.y);\n  tmpvar_5.y = (lums_1.z - lums_1.w);\n  ret_2 = (texture (sampler_fc_main, (uv + (\n    (((clamp (\n      ((((2800.0 * tmpvar_5) / 4.0) * 0.5) + 0.5)\n    , 0.0, 1.0) * 2.0) - 1.0) * 1.4)\n   * texsize.zw))).xyz * 0.983);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * q3)) && (ret_2.x <= (q24 * q1)))) {\n    ret_2.y = (ret_2.y - (tmpvar_6.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q1)) && (ret_2.y <= (q25 * q2)))) {\n    ret_2.z = (ret_2.z - (tmpvar_6.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q2)) && (ret_2.z <= (q26 * q3)))) {\n    ret_2.x = (ret_2.x - (tmpvar_6.z * 0.5));\n  };\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_2;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = ((0.5 - uv) + 0.5);\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, tmpvar_2).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (1.0 - ((ret_1 * \n    (1.0 - ret_1)\n  ) * 4.0));\n  vec3 tmpvar_4;\n  tmpvar_4.xy = (tmpvar_3.xy * vec2(0.5, 0.5));\n  tmpvar_4.z = tmpvar_3.z;\n  ret_1 = (tmpvar_4 * 0.5);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_2.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((ret_1.x > (q26 * q3)) && (ret_1.x <= (q23 * q1)))) {\n    ret_1.z = (ret_1.z - (tmpvar_5.x * 0.5));\n  };\n  if (((ret_1.y > (q25 * q1)) && (ret_1.y <= (q22 * q2)))) {\n    ret_1.x = (ret_1.x - (tmpvar_5.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q2)) && (ret_1.z <= (q21 * q3)))) {\n    ret_1.y = (ret_1.y - (tmpvar_5.z * 0.5));\n  };\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"#define MyGet GetPixel //GetBlur1\nshader_body\n{\n    // GROW EFFECT - bright pixels spread radially outward.\n    // BE CAREFUL - this can really thrash the texture cache! (SLOW)\n    float grad_rad = 4;  //TWEAK - should be a least 4 for max. compatibility!\n    float str = 2.8;      //TWEAK\n    float3 d = float3(texsize.zw, 0) * grad_rad;\n    float4 lums = 0;\n    lums.x = lum( MyGet(uv + texsize.zw*d.xz) );\n    lums.y = lum( MyGet(uv - texsize.zw*d.xz) );\n    lums.z = lum( MyGet(uv + texsize.zw*d.zy) );\n    lums.w = lum( MyGet(uv - texsize.zw*d.zy) );\n    float2 grad = float2(lums.x-lums.y, lums.z-lums.w)*str*1000/grad_rad;\n    grad = (saturate(grad*0.5+0.5)*2-1)*1.4;\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv + grad*texsize.zw ).xyz;\n\n    // darken (decay) over time\n    ret *= 0.983; //or try: ret -= 0.004;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q3         && ret.x<= q24*q1        )ret.y -= (noise9).x*.5; \nif(ret.y> q22*q1         && ret.y<= q25*q2        )ret.z -= (noise9).y*.5; \nif(ret.z> q23*q2         && ret.z<= q26*q3        )ret.x -= (noise9).z*.5; \n}","comp_hlsl":"shader_body\n{\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo).xyz, \n                0.50 \n              ); //video echo\n    ret *= 2.00; //gamma\n    float3 retish = 1 - ret*(1-ret)*4; //solarize\n    ret = float3(retish[0]*0.5,retish[1]*0.5,retish[2]);\n    ret *= 0.5;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv_echo.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q30 \n                     );\nif(ret.x> q26*q3         && ret.x<= q23*q1        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q1         && ret.y<= q22*q2        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q2         && ret.z<= q21*q3        )ret.y -= (noise9).z*.5; \n}"}