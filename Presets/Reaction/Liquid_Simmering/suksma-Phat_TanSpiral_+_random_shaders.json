{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":0.01,"echo_orient":2,"wave_mode":5,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.002,"wave_scale":4.44,"wave_smoothing":0.9,"modwavealphastart":0,"modwavealphaend":0,"warpanimspeed":0.01,"warpscale":100,"zoom":1.18647,"rot":-1,"cx":0.47,"cy":0.53,"warp":1.02841,"sx":0.84438,"sy":0.78756,"wave_r":0,"wave_b":0.93,"wave_y":0.4,"ob_size":0,"ob_g":0.69,"ob_a":0.27,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":12.8,"mv_y":0,"mv_l":5,"mv_r":0.48,"mv_g":0.4,"mv_b":0.47,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"additive":1,"rad":0.72142,"tex_zoom":1.48886,"a":0.2,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.r=.23*Math.sin(a.time);a.g=.59*Math.sin(a.time);a.b=.89*Math.sin(a.time);a.r2=.23*Math.cos(a.time);a.g2=.59*Math.cos(a.time);a.b2=.89*Math.cos(a.time);","init_eqs_eel":"","frame_eqs_eel":"r=sin(time)*0.23;\ng=sin(time)*0.59;\nb=sin(time)*0.89;\nr2=cos(time)*0.23;\ng2=cos(time)*0.59;\nb2=cos(time)*0.89;"},{"baseVals":{"sides":16,"textured":1,"y":0.6,"rad":0.80814,"tex_ang":0.12566,"tex_zoom":0.05428,"a":0.1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r=bass*0.9;\ng=bass*0.2;\nb=sin(time)*0.3","init_eqs_eel":"","frame_eqs_eel":"r=bass*0.9;\ng=bass*0.2;\nb=sin(time)*0.3"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"rad":0.98609,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.ob_g=.6*Math.sin(a.time);a.ob_b=.5*Math.cos(a.time);a.ob_r=Math.sin(a.time);a.decay=.99;a.rot=.1;","pixel_eqs_str":"a.warp=Math.atan(a.x*a.treb*10)+Math.tan(a.y*a.treb*10)+a.treb;a.dx=.01*Math.sin(30*a.y);a.dy=.01*Math.cos(30*a.x);a.dx=.02*a.dy*a.bass;a.dy=.02*a.dx*a.bass;","init_eqs_eel":"","frame_eqs_eel":"ob_g=sin(time)*0.6;\nob_b=cos(time)*0.5;\nob_r=sin(time);\ndecay=0.99;\nrot=0.1","pixel_eqs_eel":"warp=atan(x*treb*10) + tan(y*treb*10) + treb;\n\ndx=(sin(y*30))*0.01;\ndy=(cos(x*30))*0.01;\n\ndx=dy*(bass*0.02);\ndy=dx*(bass*0.02)","warp":" shader_body { \n  vec3 rsamp_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_pw_main, uv);\n  ret_2 = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.xy - 0.5)\n   * 12.0) * texsize.zw)));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  rsamp_1 = tmpvar_6;\n  float tmpvar_7;\n  vec2 x_8;\n  x_8 = (tmpvar_4.xy - uv);\n  tmpvar_7 = sqrt(dot (x_8, x_8));\n  float tmpvar_9;\n  vec2 x_10;\n  x_10 = (tmpvar_5.xy - uv);\n  tmpvar_9 = sqrt(dot (x_10, x_10));\n  if ((tmpvar_7 > tmpvar_9)) {\n    ret_2.xy = tmpvar_6.xy;\n  };\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.zw - 0.5)\n   * 48.0) * texsize.zw)));\n  rsamp_1 = tmpvar_11.xyz;\n  float tmpvar_12;\n  vec2 x_13;\n  x_13 = (ret_2.xy - uv);\n  tmpvar_12 = sqrt(dot (x_13, x_13));\n  float tmpvar_14;\n  vec2 x_15;\n  x_15 = (tmpvar_11.xy - uv);\n  tmpvar_14 = sqrt(dot (x_15, x_15));\n  if ((tmpvar_12 > tmpvar_14)) {\n    ret_2.xy = rsamp_1.xy;\n  };\n  ret_2.z = texture (sampler_fw_main, ret_2.xy).z;\n  ret_2.z = (ret_2.z - (q1 * 0.005));\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_2;\n  ret = tmpvar_16.xyz;\n }","comp":" shader_body { \n  vec2 uv1_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\n  tmpvar_2.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    (((uv - 0.5) * aspect.xy) * 9.0)\n  )) - tmpvar_2);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (-0.5 * (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1)))\n   + \n    clamp (((0.04 * bass_att) / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\n  ) + 0.2) * 2.0);\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,0,0) - float3(.0,.0,.0));\nret.xyz = tex2D( sampler_pw_main,uvm).xyz;\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nrsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nret.z = tex2D(sampler_fw_main,ret.xy).z;\n\nret.z -= q1*.005;\n\n\n}","comp_hlsl":"shader_body\n{\n\nfloat2 uv1 = (uv-.5)*aspect.xy;\n\n\nfloat3 ret1 = tex2D(sampler_main, uv) + GetBlur1(uv);\n\nfloat2 hor = float2 (.001,0);\nfloat2 ver = float2 (0,.001);\nfloat dx = GetPixel (uv-hor) - GetPixel (uv+hor);\nfloat dy = GetPixel (uv-ver) - GetPixel (uv+ver);\nfloat2 dz = float2 (dx,dy);\n\nuv1 = uv1*0+.3*cos(uv1*9) -dz;\n\nfloat dots = saturate(.04*bass_att/length(uv1));\n\n\nret1 = (-.5*ret1) + dots + .2;\n\nret = ret1*2;\n}"}