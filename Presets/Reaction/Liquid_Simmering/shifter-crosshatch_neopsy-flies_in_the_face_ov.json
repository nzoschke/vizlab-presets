{"version":2,"baseVals":{"rating":5,"gammaadj":1.91,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"solarize":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.303,"warpscale":3.259,"zoom":0.99951,"warp":0.09861,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"rad":2.41456,"r":0,"b":1,"r2":1,"g2":0,"a2":1},"init_eqs_str":"a.q8=0;","frame_eqs_str":"a.a=a.q8;a.a2=a.q8;","init_eqs_eel":"","frame_eqs_eel":"a = q8;\na2 = q8;"},{"baseVals":{"sides":3,"rad":0.6892,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a = q8;\na2 = q8;\nx = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\nang = int(rand(1001))*.001*6.2832;\nx = .25;","init_eqs_eel":"","frame_eqs_eel":"a = q8;\na2 = q8;\nx = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\n\nang = int(rand(1001))*.001*6.2832;\nx = .25;"},{"baseVals":{"sides":3,"rad":0.6892,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a = q8;\na2 = q8;\nx = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\nang = int(rand(1001))*.001*6.2832;\n\nx = .75;","init_eqs_eel":"","frame_eqs_eel":"a = q8;\na2 = q8;\nx = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\nang = int(rand(1001))*.001*6.2832;\n\nx = .75;"},{"baseVals":{"sides":3,"rad":0.6892,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a = q8;\na2 = q8;\nx = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\nang = int(rand(1001))*.001*6.2832;","init_eqs_eel":"","frame_eqs_eel":"a = q8;\na2 = q8;\nx = int(rand(1001))*.001;\ny = int(rand(1001))*.001;\nang = int(rand(1001))*.001*6.2832;"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"r":0,"b":0},"init_eqs_str":"a.it=0;a.modx=0;a.mody=0;a.q8=0;","frame_eqs_str":"a.it+=1;a.a=equal(mod(a.it,10),0);a.a=a.q8;","point_eqs_str":"a.x=.5;a.y=.5;a.it=(a.it+1)*above(a.sample,0);a.modx=.00001<Math.abs(1-equal(mod(a.it,4),0)+Math.floor(rand(10)))?a.modx:.001*Math.floor(rand(1001));a.y=.5+.6*(1-2*(equal(mod(a.it,4),0)+equal(mod(a.it+1,4),0)));a.mody=.00001<Math.abs(equal(mod(a.it,2),0))?a.sample:a.mody;a.x=a.modx+.49*a.mody;","init_eqs_eel":"","frame_eqs_eel":"it = it + 1;\n\na = equal(it%10,0);\na = q8;","point_eqs_eel":"x = .5;\ny = .5;\n\nit = (it+1)*above(sample,0);\n\nmodx = if((1-equal(it%4,0)) + int(rand(10)),modx,int(rand(1001))*.001);\n\ny = .5 + .6*(1 - 2*(equal(it%4,0) + equal((it+1)%4,0)));\n\nmody = if(equal(it%2,0),sample,mody);\nx = modx + mody*.49;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"r":0,"g":0,"b":0},"init_eqs_str":"a.it=0;a.modx=0;a.mody=0;a.q8=0;","frame_eqs_str":"a.it+=1;a.a=equal(mod(a.it,10),0);a.a=a.q8;","point_eqs_str":"a.x=.5;a.y=.5;a.it=(a.it+1)*above(a.sample,0);a.modx=.00001<Math.abs(1-equal(mod(a.it,4),0)+Math.floor(rand(10)))?a.modx:.001*Math.floor(rand(1001));a.x=.5+.6*(1-2*(equal(mod(a.it,4),0)+equal(mod(a.it+1,4),0)));a.mody=.00001<Math.abs(equal(mod(a.it,2),0))?a.sample:a.mody;a.y=a.modx+.49*a.mody;","init_eqs_eel":"","frame_eqs_eel":"it = it + 1;\n\na = equal(it%10,0);\na = q8;","point_eqs_eel":"x = .5;\ny = .5;\n\nit = (it+1)*above(sample,0);\n\nmodx = if((1-equal(it%4,0)) + int(rand(10)),modx,int(rand(1001))*.001);\n\nx = .5 + .6*(1 - 2*(equal(it%4,0) + equal((it+1)%4,0)));\n\nmody = if(equal(it%2,0),sample,mody);\ny = modx + mody*.49;"},{"baseVals":{"spectrum":1,"thick":1,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"it = it + 1;\n\na = equal(it%10,0);\na = q8;","point_eqs_str":"x = .5;\ny = .5;\n\nit = (it+1)*above(sample,0);\n\nmodx = if((1-equal(it%4,0)) + int(rand(10)),modx,int(rand(1001))*.001);\n\ny = .5 + .6*(1 - 2*(equal(it%4,0) + equal((it+1)%4,0)));\n\nmody = if(equal(it%2,0),sample,mody);\nx = modx + mody*.49;","init_eqs_eel":"","frame_eqs_eel":"it = it + 1;\n\na = equal(it%10,0);\na = q8;","point_eqs_eel":"x = .5;\ny = .5;\n\nit = (it+1)*above(sample,0);\n\nmodx = if((1-equal(it%4,0)) + int(rand(10)),modx,int(rand(1001))*.001);\n\ny = .5 + .6*(1 - 2*(equal(it%4,0) + equal((it+1)%4,0)));\n\nmody = if(equal(it%2,0),sample,mody);\nx = modx + mody*.49;"},{"baseVals":{"spectrum":1,"thick":1,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"it = it + 1;\n\na = equal(it%10,0);\na = q8;","point_eqs_str":"x = .5;\ny = .5;\n\nit = (it+1)*above(sample,0);\n\nmodx = if((1-equal(it%4,0)) + int(rand(10)),modx,int(rand(1001))*.001);\n\nx = .5 + .6*(1 - 2*(equal(it%4,0) + equal((it+1)%4,0)));\n\nmody = if(equal(it%2,0),sample,mody);\ny = modx + mody*.49;","init_eqs_eel":"","frame_eqs_eel":"it = it + 1;\n\na = equal(it%10,0);\na = q8;","point_eqs_eel":"x = .5;\ny = .5;\n\nit = (it+1)*above(sample,0);\n\nmodx = if((1-equal(it%4,0)) + int(rand(10)),modx,int(rand(1001))*.001);\n\nx = .5 + .6*(1 - 2*(equal(it%4,0) + equal((it+1)%4,0)));\n\nmody = if(equal(it%2,0),sample,mody);\ny = modx + mody*.49;"}],"init_eqs_str":"a.tic=0;a.st=0;a.vt=0;a.meanbass_att=0;a.q29=0;a.q6=0;a.bt=0;a.q1=0;a.q5=0;a.mid_avg=0;a.tt=0;a.tin=0;a.lastbeat=0;a.beatrate=0;a.bass_avg=0;a.peakbass_att=0;a.vav=0;a.q4=0;a.mt=0;a.ra=0;a.treb_avg=0;a.volume=0;a.beat=0;a.vol=0;a.q2=0;a.beatcount=0;a.q3=0;a.q8=0;","frame_eqs_str":"a.volume=.3*(a.bass+a.mid);a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.05*(19*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,a.peakbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,\n2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-a.beat)*a.peakbass_att*(.96*above(a.time-a.lastbeat,2*a.beatrate)+.996*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.ra=.25*div(1,a.tic);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-\na.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;a.vt+=a.tic*a.vav;a.zoom=1;a.q1=4*a.tt;a.q2=4*a.mt;a.q3=4*a.bt;a.st=.015;a.q4=a.treb_avg*a.st;a.q5=a.mid_avg*a.st;a.q6=a.bass_avg*a.st;a.warp=.1+.3*a.vav;a.zoom=1;a.beatcount+=a.beat;a.monitor=a.beatcount;a.q8=a.beat;a.vol=a.bass+a.treb+a.mid;a.q29=a.vol;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//begin beat code\nvolume = 0.3*(bass+mid);\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.05*(meanbass_att*19 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\n//Adjust responsiveness: To increase responsiveness, set the \"0.96 and \"0.996\" on the next line to slightly lower values. Higher values decrease responsiveness.\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\n//end beat code\n\n//warp = 0;\ntic = min(time-tin,.1);\ntin = time;\n\nra = 1/tic*.25;\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\nvt = vt + tic*vav;\n\nzoom = 1;\n\nq1 = tt*4;\nq2 = mt*4;\nq3 = bt*4;\n\nst = .015;\nq4 = treb_avg*st;\nq5 = mid_avg*st;\nq6 = bass_avg*st;\n\nwarp = .1 + vav*.3;\n\nzoom = 1;\n//decay = 1 - beat;\nbeatcount = beatcount + beat;\nmonitor = beatcount;\nq8 = beat;\nvol=bass+treb+mid;\nq29=vol;","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_4);\n  tmpvar_5[uint(0)].y = sin(tmpvar_4);\n  tmpvar_5[1u].x = -(sin(tmpvar_4));\n  tmpvar_5[1u].y = cos(tmpvar_4);\n  uv6_2 = (tmpvar_3 * tmpvar_5);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_3)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_6;\n  tmpvar_6 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_7.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_7 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_7, tmpvar_7))\n   * tmpvar_6)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((crisp_1 - \n    (dot (tmpvar_6, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_8.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec3 xlat_mutableret2;\nvec2 xlat_mutablesam;\n shader_body { \n  vec2 uv_1;\n  xlat_mutablesam = (texture (sampler_main, (uv * 0.5)).xy * ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, (xlat_mutablesam + uv));\n  float tmpvar_3;\n  tmpvar_3 = (0.5 * bass_att);\n  xlat_mutableret1 = ((tmpvar_2.x * (\n    (tmpvar_3 * uv_orig.y)\n   + tmpvar_2.xyz)) + (tmpvar_2.x * texture (sampler_main, uv).xyz));\n  xlat_mutableret1 = (xlat_mutableret1 * ((xlat_mutableret1 + 1.0) / 2.0));\n  uv_1 = (((uv - 0.5) * 0.3) + 0.5);\n  xlat_mutablesam = (texture (sampler_main, (uv_1 * 0.5)).xy * ((\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv_1).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, (xlat_mutablesam + uv_1));\n  xlat_mutableret2 = ((tmpvar_4.x * (\n    (tmpvar_3 * uv_orig.y)\n   + tmpvar_4.xyz)) + (tmpvar_4.x * texture (sampler_main, uv_1).xyz));\n  xlat_mutableret2 = (xlat_mutableret2 * (xlat_mutableret1 + 1.0));\n  vec3 tmpvar_5;\n  tmpvar_5 = max (xlat_mutableret1, xlat_mutableret2);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (tmpvar_5 * (0.5 + (0.5 * \n    dot (tmpvar_5, vec3(0.32, 0.49, 0.29))\n  )));\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"float3 color, mus;\nfloat dx,dy;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\n\nfloat2 uv1 = (uv-.5);\nfloat2 uv6 = uv1;\n\nfloat rota = lum(tex2D (sampler_noise_hq,uv/4))*q31;\n\nuv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));\nuv6 += sin(q32*uv1);\nmus = .2/(sqrt(uv6.x)+.2);\n\nmus *= float3 (1.1,1,.95);\nmus *= .9+.1*tex2D (sampler_noise_hq,uv);\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (0.005,0);\nfloat2 ver = float2 (0,.005);\n\nfloat dx = lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\n\nfloat2 zz = float2 (dx,dy);\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\nfloat3 crisp2 = tex2D(sampler_main,uv);\ncrisp += crisp2/2;\ncrisp *= .67;\ncrisp +=.08 * mus - length(zz)*blur;\n\nfloat3 ret1 = crisp - lum(blur)*.04;\nret = ret1 * .99 -  .04 ;\n}","comp_hlsl":"float3 ret1, ret2, reta;\nfloat2 sam;\nshader_body\n{\n    sam = tex2D(sampler_main,uv*.5);\n    ret1 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret1 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret1;\n    ret1 *= (ret1+1)/2; //gamma\n\nuv = (uv-.5)*.3+.5;\n    sam = tex2D(sampler_main,uv*.5);\n    ret2 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret2 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret2;\n    ret2 *= (ret1+1); //gamma\n\n\n\nret = max(ret1, ret2);\nret *= .5+.5*lum(ret);\n//ret = (1+ret1)*ret2;\n\n}\n\n"}