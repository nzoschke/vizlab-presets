{"version":2,"baseVals":{"rating":5,"gammaadj":4.5,"echo_zoom":1.488,"darken":1,"solarize":1,"wave_a":0.001,"zoom":0.99,"rot":6.2,"warp":0.00826,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1},"init_eqs_str":"a.val=0;a.dx=0;a.dy=0;a.dz=0;a.q1=0;a.time_vol=0;a.basstime=0;a.t1=0;","frame_eqs_str":"a.basstime+=.02*a.bass_att;a.t1=a.basstime;","point_eqs_str":"a.val=60*a.sample;a.dx=pow(Math.cos(a.sample),2);a.dy=Math.sin(a.sample);a.dz=5*Math.log(Math.sin(a.sample))*Math.sin(a.q1);a.time_vol+=.1*(a.bass+a.mid);a.x=.5*div(a.dx,a.dz)+.5+.1*Math.sin(a.time_vol);a.y=.5*div(a.dy,a.dz)+.5+.1*Math.cos(a.time_vol);a.g=.5+.5*Math.sin(2.55*a.time);a.r=.5+.5*Math.sin(1.66*a.time);a.b=.5+.5*Math.sin(2*a.time);","init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass_att*0.02;\nt1 = basstime;","point_eqs_eel":"val = sample*6*10;\n\ndx = pow(cos(sample),2);\ndy = sin(sample);\ndz = log(sin(sample))*5*sin(q1);\n\ntime_vol = time_vol + (bass+mid)*0.1;\n\nx = dx/dz*0.5 + 0.5 + sin(time_vol)*0.1;\ny = dy/dz*0.5 +  0.5 + cos(time_vol)*0.1;\n\ng = 0.5 + 0.5*sin(time*2.55);\nr = 0.5 + 0.5*sin(time*1.66);\nb = 0.5 + 0.5*sin(time*2);"},{"baseVals":{"enabled":1,"usedots":1},"init_eqs_str":"a.val=0;a.dx=0;a.dy=0;a.dz=0;a.q1=0;a.time_vol=0;a.basstime=0;a.t1=0;","frame_eqs_str":"a.basstime+=.02*a.bass_att;a.t1=a.basstime;","point_eqs_str":"a.val=60*a.sample;a.dx=pow(Math.cos(a.sample),2);a.dy=Math.sin(a.sample);a.dz=5*Math.log(Math.sin(a.sample))*Math.sin(a.q1);a.time_vol+=.1*(a.bass+a.mid);a.x=.5*div(a.dx,a.dz)+.5+.1*Math.sin(a.time_vol);a.y=.5*div(a.dy,a.dz)+.5+.1*Math.cos(a.time_vol);a.x=-a.x+1;a.g=.5+.5*Math.sin(2.55*a.time);a.r=.5+.5*Math.sin(1.66*a.time);a.b=.5+.5*Math.sin(2*a.time);","init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass_att*0.02;\nt1 = basstime;","point_eqs_eel":"val = sample*6*10;\n\ndx = pow(cos(sample),2);\ndy = sin(sample);\ndz = log(sin(sample))*5*sin(q1);\n\ntime_vol = time_vol + (bass+mid)*0.1;\n\nx = dx/dz*0.5 + 0.5 + sin(time_vol)*0.1;\ny = dy/dz*0.5 +  0.5 + cos(time_vol)*0.1;\n\nx = -x + 1;\n\n\ng = 0.5 + 0.5*sin(time*2.55);\nr = 0.5 + 0.5*sin(time*1.66);\nb = 0.5 + 0.5*sin(time*2);"},{"baseVals":{"enabled":1,"usedots":1},"init_eqs_str":"a.val=0;a.dx=0;a.dy=0;a.dz=0;a.q1=0;a.time_vol=0;a.basstime=0;a.t1=0;","frame_eqs_str":"a.basstime+=.02*a.bass_att;a.t1=a.basstime;","point_eqs_str":"a.val=60*a.sample;a.dx=pow(Math.cos(a.sample),2);a.dy=Math.sin(a.sample);a.dz=5*Math.log(Math.sin(a.sample))*Math.sin(a.q1);a.time_vol+=.1*(a.bass+a.mid);a.x=.5*div(a.dx,a.dz)+.5+.1*Math.sin(a.time_vol);a.y=.5*div(a.dy,a.dz)+.5+.1*Math.cos(a.time_vol);a.x=-a.x+1;a.y=-a.y+1;a.g=.5+.5*Math.sin(2.55*a.time);a.r=.5+.5*Math.sin(1.66*a.time);a.b=.5+.5*Math.sin(2*a.time);","init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass_att*0.02;\nt1 = basstime;","point_eqs_eel":"val = sample*6*10;\n\ndx = pow(cos(sample),2);\ndy = sin(sample);\ndz = log(sin(sample))*5*sin(q1);\n\ntime_vol = time_vol + (bass+mid)*0.1;\n\nx = dx/dz*0.5 + 0.5 + sin(time_vol)*0.1;\ny = dy/dz*0.5 +  0.5 + cos(time_vol)*0.1;\n\nx = -x + 1;\ny = -y + 1;;\n\ng = 0.5 + 0.5*sin(time*2.55);\nr = 0.5 + 0.5*sin(time*1.66);\nb = 0.5 + 0.5*sin(time*2);"},{"baseVals":{"enabled":1,"usedots":1},"init_eqs_str":"a.val=0;a.dx=0;a.dy=0;a.dz=0;a.q1=0;a.time_vol=0;a.basstime=0;a.t1=0;","frame_eqs_str":"a.basstime+=.02*a.bass_att;a.t1=a.basstime;","point_eqs_str":"a.val=60*a.sample;a.dx=pow(Math.cos(a.sample),2);a.dy=Math.sin(a.sample);a.dz=5*Math.log(Math.sin(a.sample))*Math.sin(a.q1);a.time_vol+=.1*(a.bass+a.mid);a.x=.5*div(a.dx,a.dz)+.5+.1*Math.sin(a.time_vol);a.y=.5*div(a.dy,a.dz)+.5+.1*Math.cos(a.time_vol);a.y=-a.y+1;a.g=.5+.5*Math.sin(2.55*a.time);a.r=.5+.5*Math.sin(1.66*a.time);a.b=.5+.5*Math.sin(2*a.time);","init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass_att*0.02;\nt1 = basstime;","point_eqs_eel":"val = sample*6*10;\n\ndx = pow(cos(sample),2);\ndy = sin(sample);\ndz = log(sin(sample))*5*sin(q1);\n\ntime_vol = time_vol + (bass+mid)*0.1;\n\nx = dx/dz*0.5 + 0.5 + sin(time_vol)*0.1;\ny = dy/dz*0.5 +  0.5 + cos(time_vol)*0.1;\n\ny = -y +1;\n\ng = 0.5 + 0.5*sin(time*2.55);\nr = 0.5 + 0.5*sin(time*1.66);\nb = 0.5 + 0.5*sin(time*2);"}],"init_eqs_str":"a.bass_clip=0;a.marker=0;a.q1=0;","frame_eqs_str":"a.bass_clip=2*above(a.bass_att,a.bass_clip)+(1-above(a.bass_att,a.bass_clip))*(.96*(a.bass_clip-1.3)+1.3);a.marker+=equal(a.bass_clip,2)*rand(100)*.1;a.q1=a.marker;a.monitor=a.marker;","pixel_eqs_str":"a.zoom=1.05;a.rot=5;","init_eqs_eel":"","frame_eqs_eel":"bass_clip = above(bass_att,bass_clip)*2 + (1-above(bass_att,bass_clip))*((bass_clip-1.3)*0.96+1.3);\nmarker = marker + equal(bass_clip,2)*rand(100)*0.1;\nq1 = marker;\n\nmonitor  = marker;","pixel_eqs_eel":"zoom = 1.05;\nrot = 5;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = clamp (((texture (sampler_pw_main, uv_orig).xyz * vec3(1.0, 1.0, 0.97)) - vec3(0.0, 0.0, 0.001)), 0.0, 1.0);\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_pw_main, (uv_orig + ((\n    (texture (sampler_noise_hq, fract(((\n      ((uv_orig * texsize.xy) * texsize_noise_lq.zw)\n     + rand_frame.xy) * 8.0))).xy - 0.5)\n   * 6.0) * texsize.zw)));\n  vec3 tmpvar_3;\n  tmpvar_3 = tmpvar_2.xyz;\n  float tmpvar_4;\n  vec2 x_5;\n  x_5 = (ret_1.xy - uv_orig);\n  tmpvar_4 = sqrt(dot (x_5, x_5));\n  float tmpvar_6;\n  vec2 x_7;\n  x_7 = (tmpvar_2.xy - uv_orig);\n  tmpvar_6 = sqrt(dot (x_7, x_7));\n  if ((tmpvar_4 > tmpvar_6)) {\n    ret_1.xy = tmpvar_3.xy;\n    ret_1.z = tmpvar_3.z;\n  };\n  ret_1.xy = (ret_1.xy * pow (ret_1.z, 0.01));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_1;\n  ret = tmpvar_8.xyz;\n }","comp":"","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv_orig;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_hq, frac(noise_uv*8));\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,.97) - float3(.0,.0,.001));\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*6*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;ret.z = rsamp.z;}\n\n//rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*2*pixelsize).xyz;\n//if (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\n//ret.xy = rsamp.xy;ret.z = rsamp.z;}\n\n\nret.xy *= pow(ret.z,.01);\n\n\n}","comp_hlsl":""}