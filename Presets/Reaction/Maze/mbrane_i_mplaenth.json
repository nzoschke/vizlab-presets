{"version":2,"baseVals":{"rating":5,"gammaadj":3.87,"decay":1,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":4,"additivewave":1,"wrap":0,"brighten":1,"solarize":1,"wave_a":0.001,"wave_scale":0.01,"warpanimspeed":0.01,"warpscale":1.766,"zoomexp":1.00016,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":30,"num_inst":500,"rad":0.03646,"tex_zoom":1.00183,"r":0,"b":1,"a":0.01,"r2":0.58,"g2":0.24,"b2":0.09,"border_a":0.02},"init_eqs_str":"a.my_z=0;a.d=0;a.y3=0;a.z2=0;a.y1=0;a.w=0;a.w2=0;a.x1=0;a.q6=0;a.zoom=0;a.p=0;a.q1=0;a.r1=0;a.q5=0;a.z3=0;a.w3=0;a.my_x=0;a.x3=0;a.my_y=0;a.q11=0;a.q10=0;a.w1=0;a.x2=0;a.l=0;a.y2=0;a.q2=0;a.msample=0;a.z1=0;a.q3=0;a.sample=0;","frame_eqs_str":"a.sample=div(a.instance,a.num_inst);a.msample=.00001<Math.abs(above(a.sample,.5))?a.sample:1+3*a.bass*a.sample;a.r1=50*a.sample;a.q10=30*a.sample;a.q11=20*a.msample;a.my_x=a.r1*Math.cos(a.q10)*a.sample;a.my_y=a.r1*Math.sin(a.q10)*a.sample;a.my_z=10-a.q11;a.d=1E3;a.zoom=10;a.w3=a.q2;a.w2=a.q3;a.w1=a.q1;a.x1=Math.cos(a.w1)*a.my_x+Math.sin(a.w1)*a.my_y;a.y1=-Math.sin(a.w1)*a.my_x+Math.cos(a.w1)*a.my_y;a.z1=a.my_z;a.x2=Math.cos(a.w2)*a.x1+Math.sin(a.w2)*a.z1;a.z2=-Math.sin(a.w2)*\na.x1+Math.cos(a.w2)*a.z1;a.y2=a.y1;a.y3=Math.cos(a.w3)*a.y2+Math.sin(a.w3)*a.z2;a.z3=-Math.sin(a.w3)*a.y2+Math.cos(a.w3)*a.z2;a.x3=a.x2;a.l=sqrt(a.x3*a.x3+a.y3*a.y3);a.w=Math.atan2(a.x3,a.y3);a.p=Math.tan(Math.asin(1)+Math.atan2(a.d+a.z3,a.l));a.d=sqrt(a.x3*a.x3+a.y3*a.y3+(a.z3+a.d)*(a.z3+a.d));a.my_x=a.zoom*Math.sin(a.w)*a.p;a.my_y=a.zoom*Math.cos(a.w)*a.p;a.x=.5+div(a.my_x,a.q6);a.y=.5+div(a.my_y,a.q5);a.rad=.25*a.sample;a.ang=a.sample*a.time*15;a.b=a.sample;a.g=a.b;a.r=a.b;","init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\n\n///// Cylinder\n\nmsample=if(above(sample,.5),sample,1+3*bass*sample);\nr1= 50*sample;\n\nq10= 30*sample;\nq11= 20*msample;\n\nmy_x = r1*cos(q10)*(sample);\nmy_y = r1*sin(q10)*(sample);\nmy_z = 10-q11;\n\n\n/////// rotations... by flexi\nd = 1000;\nzoom = 10;\n\nw3 = q2;\nw2 = q3;\nw1 = q1;\n\nx1 = cos(w1)*my_x + sin(w1)*my_y;\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\nz1 = my_z;\n\nx2 = cos(w2)*x1 + sin(w2)*z1;\nz2 = -sin(w2)*x1 + cos(w2)*z1;\ny2 = y1;\n\ny3 = cos(w3)*y2 + sin(w3)*z2;\nz3 = -sin(w3)*y2 + cos(w3)*z2;\nx3 = x2;\n\n// perspective calculation\n\nl = sqrt(x3*x3 + y3*y3);\nw = atan2(x3,y3);\np = tan(asin(1) + atan2(d+z3,l));\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\n\nmy_x = zoom*sin(w)*p;\nmy_y = zoom*cos(w)*p;\n\nx = 0.5 + my_x/q6;\ny = 0.5 + my_y/q5;\n\n\nrad=.25*sample;\nang=sample*time*15;\n\nb=sample;\ng=b;\nr=b;"},{"baseVals":{"sides":3,"num_inst":500,"r":0,"a":0.07,"g2":0,"b2":0.6,"border_a":0.15,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"r":0.8,"g":0.8,"a":0.16,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.20929,"smoothing":0,"r":0.8,"g":0.8,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"r":0.8,"g":0.7,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.jzm=0;a.mkrt=0;a.kdx=0;a.xx=0;a.w=0;a.decay_rate=0;a.res=0;a.crs=0;a.crx=0;a.q12=0;a.cb=0;a.mksx=0;a.mjcy=0;a.q18=0;a.q13=0;a.q15=0;a.ci=0;a.jcy=0;a.mjwp=0;a.q1=0;a.kzm=0;a.jdx=0;a.jwp=0;a.kwp=0;a.cr2=0;a.mkdx=0;a.jrt=0;a.diff=0;a.cr=0;a.qv=0;a.jdy=0;a.prev_beat=0;a.is_beat=0;a.mksy=0;a.q11=0;a.jsx=0;a.ksy=0;a.kcy=0;a.mjsx=0;a.ksx=0;a.q4=0;a.mkcy=0;a.mjsy=0;a.q16=0;a.dqv=0;a.jsy=0;a.min_att=0;a.mjcx=0;a.mjdx=0;a.mkwp=0;a.mkdy=0;a.kcx=0;a.mjdy=0;a.beat=0;a.q17=0;a.vol=0;a.jcx=\n0;a.decay_to=0;a.crr=0;a.mkzm=0;a.q2=0;a.q14=0;a.cqr=0;a.kx1=0;a.mjrt=0;a.cr1=0;a.q3=0;a.m=0;a.beat_level=0;a.mkcx=0;a.jx1=0;a.yy=0;a.kdy=0;a.krt=0;a.mjzm=0;","frame_eqs_str":"a.wave_r=a.wave_r+.35*Math.sin(1.14*a.time)+.16*Math.sin(1.5*a.time);a.wave_g=a.wave_g+.36*Math.sin(1.27*a.time)+.15*Math.sin(1.11*a.time);a.wave_b=a.wave_b+.37*Math.sin(1.284*a.time)+.15*Math.sin(1.3*a.time);a.warp=0;a.ob_r=a.wave_g;a.ob_b=a.wave_r;a.ob_g=a.wave_b;a.ib_r=a.wave_r;a.ib_b=a.wave_g;a.ib_g=a.wave_r;a.vol=8*a.bass+5*a.mid+3*a.treb;a.m=.97*a.m+.08*a.vol;a.monitor=a.vol;a.beat=above(a.vol,a.res)*above(a.vol,a.m)*above(a.vol,16);a.diff=(1-a.beat)*a.diff+a.beat*(a.vol-\na.res);a.res=a.beat*(a.vol+.04*a.m)+(1-a.beat)*(a.res-div(60*(.1+.02*a.diff),a.fps));a.res=Math.max(0,a.res);a.w=.00001<Math.abs(a.beat)?div(Math.floor(rand(4096)),1024)*Math.asin(1):a.w;a.xx=.00001<Math.abs(a.beat)?.1+div(Math.floor(rand(800)),1E3):a.xx;a.yy=.00001<Math.abs(a.beat)?.1+div(Math.floor(rand(800)),1E3):a.yy;a.decay_rate=pow(.99,a.fps);a.min_att=2.2;a.decay_to=.9;a.beat=div(a.bass,Math.max(a.min_att,a.bass_att));a.beat=Math.max(a.beat,div(a.mid,Math.max(a.min_att,a.mid_att)));a.beat=\nMath.max(a.beat,div(a.treb,Math.max(a.min_att,a.treb_att)));a.beat=Math.max(a.beat,(a.prev_beat-a.decay_to)*a.decay_rate+a.decay_to);a.beat_level=24*(a.beat-a.prev_beat-.07);a.is_beat=above(a.beat_level,.5);a.prev_beat=a.beat;a.w=.00001<Math.abs(a.is_beat)?a.w+div(Math.floor(rand(256))-128,512):a.w;a.xx=.00001<Math.abs(a.is_beat)?a.xx+div(Math.floor(rand(256))-128,4096):a.xx;a.yy=.00001<Math.abs(a.is_beat)?a.yy+div(Math.floor(rand(256))-128,4096):a.yy;a.q11=Math.sin(a.w);a.q12=Math.cos(a.w);a.q13=\na.xx;a.q14=a.yy;a.q15=4;a.q16=.06;a.q17=Math.sin(-a.w);a.q18=Math.cos(-a.w);","pixel_eqs_str":"a.dx+=div(Math.sin(-Math.floor(4*a.y)+4*a.y-.5),13);a.dy+=div(Math.sin(Math.floor(5*a.x)-5*a.x+.5),13);a.dx=a.dx;a.kdy=a.dy;a.ksx=a.sx;a.ksy=a.sy;a.krt=a.rot;a.kzm=a.zoom;a.kcx=a.cx;a.kcy=a.cy;a.kwp=a.warp;a.dx=0;a.dy=0;a.sx=1;a.sy=1;a.rot=0;a.zoom=1;a.cx=.5;a.cy=.5;a.warp=0;a.qv=above(a.x,.5)-above(a.y,.5);a.rot=Math.sin(Math.sin(a.rad*(13+5*Math.sin(.01*a.q2))+.06*a.q2)*a.q1*.01);a.zoom=1+.1*(.00001<Math.abs(a.q3)?a.dqv:1)*Math.sin(7*a.ang+.03*a.q2);a.zoom=.00001<Math.abs(a.q4)?\n.00001<Math.abs(below(a.rad,.8*sqr(Math.sin(.016*a.q2))))?.75+.4*Math.cos(.021*a.q2):a.zoom:a.zoom;a.cr1=.5;a.cr2=.8;a.crx=a.cr2-a.cr1;a.ci=a.rad;a.cb=.25;a.crs=2;a.cr=pow(div(Math.sin(6.3*a.ci-6.3*a.cb),2)+.5,a.crs)*a.crx+a.cr1;a.cqr=.00001<Math.abs(above(a.ci,.25+a.cb))?a.cr:a.crx+a.cr1;a.crr=.00001<Math.abs(below(a.ci,1.5))?a.cqr:a.crx+a.cr1;a.jx1=a.crr;a.kx1=1-a.crr;a.jdx=a.dx;a.jdy=a.dy;a.jsx=a.sx;a.jsy=a.sy;a.jrt=a.rot;a.jzm=a.zoom;a.jcx=a.cx;a.jcy=a.cy;a.jwp=a.warp;a.dx=a.jx1*a.jdx+a.kx1*a.kdx;\na.dy=a.jx1*a.jdy+a.kx1*a.kdy;a.sx=a.jx1*a.jsx+a.kx1*a.ksx;a.sy=a.jx1*a.jsy+a.kx1*a.ksy;a.rot=a.jx1*a.jrt+a.kx1*a.krt;a.zoom=a.jx1*a.jzm+a.kx1*a.kzm;a.cx=a.jx1*a.jcx+a.kx1*a.kcx;a.cy=a.jx1*a.jcy+a.kx1*a.kcy;a.warp=a.jx1*a.jwp+a.kx1*a.kwp;a.mkdx=a.dx;a.mkdy=a.dy;a.mksx=a.sx;a.mksy=a.sy;a.mkrt=a.rot;a.mkzm=a.zoom;a.mkcx=a.cx;a.mkcy=a.cy;a.mkwp=a.warp;a.dx=0;a.dy=0;a.sx=1;a.sy=1;a.rot=0;a.zoom=1;a.cx=.5;a.cy=.5;a.warp=0;a.dx=div(Math.sin(5213.832*a.y),599);a.dy=div(Math.sin(5111.16*a.x),559);a.zoom=.9996;\na.cr1=.9;a.cr2=0;a.crx=a.cr2-a.cr1;a.ci=1.5*(1-div(1-Math.abs(div(-2*(a.x+a.y),2)+1)+(1-Math.abs(-2*(1-div(a.x+(1-a.y),2))+1)),2))+.25;a.cb=.25;a.crs=2;a.cr=pow(div(Math.sin(6.3*a.ci-6.3*a.cb),2)+.5,a.crs)*a.crx+a.cr1;a.cqr=.00001<Math.abs(above(a.ci,.25+a.cb))?a.cr:a.crx+a.cr1;a.crr=.00001<Math.abs(below(a.ci,1.5))?a.cqr:a.crx+a.cr1;a.jx1=a.crr;a.kx1=1-a.crr;a.mjdx=a.dx;a.mjdy=a.dy;a.mjsx=a.sx;a.mjsy=a.sy;a.mjrt=a.rot;a.mjzm=a.zoom;a.mjcx=a.cx;a.mjcy=a.cy;a.mjwp=a.warp;a.dx=a.jx1*a.mjdx+a.kx1*a.mkdx;\na.dy=a.jx1*a.mjdy+a.kx1*a.mkdy;a.sx=a.jx1*a.mjsx+a.kx1*a.mksx;a.sy=a.jx1*a.mjsy+a.kx1*a.mksy;a.rot=a.jx1*a.mjrt+a.kx1*a.mkrt;a.zoom=a.jx1*a.mjzm+a.kx1*a.mkzm;a.cx=a.jx1*a.mjcx+a.kx1*a.mkcx;a.cy=a.jx1*a.mjcy+a.kx1*a.mkcy;a.warp=a.jx1*a.mjwp+a.kx1*a.mkwp;","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.35*sin(1.14*time) + 0.16*sin(1.5*time);\nwave_g = wave_g + 0.36*sin(1.27*time) + 0.15*sin(1.11*time);\nwave_b = wave_b + 0.37*sin(1.284*time) + 0.15*sin(1.3*time);\nwarp = 0;\n\nob_r = wave_g;\nob_b = wave_r;\nob_g = wave_b;\nib_r = wave_r;\nib_b = wave_g;\nib_g = wave_r;\n\n\n//lines below belong to the composite shader (rotated mirror)\n\n\n//flexi's concise beat detection\nvol = bass*8 + mid*5 + treb*3;\nm = m*0.97 + vol*0.08;\nmonitor = vol;\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\ndiff = (1-beat)*diff + beat*(vol-res);\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\nres = max(0,res);\n\nw = if(beat, int(rand(4096))/1024*asin(1),w); // on beat: randomize pos and angle of the mirror\nxx = if(beat, 0.1 + int(rand(800))/1000, xx);\nyy = if(beat, 0.1 + int(rand(800))/1000, yy);\n\n//geiss' custom beat detection code: (fps-independent; quiet songs don't freak out)\ndecay_rate = pow(0.99, fps);  // lower # = more hasty to declare a beat\nmin_att    = 2.2;               // lower # = quieter songs can declare beats\ndecay_to   = 0.9;               // lower # = more hasty to declare a beat\nbeat =           bass/max(min_att,bass_att);\nbeat = max(beat, mid /max(min_att,mid_att ));\nbeat = max(beat, treb/max(min_att,treb_att));\nbeat = max( beat, (prev_beat-decay_to)*decay_rate + decay_to );\nbeat_level     = (beat - prev_beat - 0.07)*24;\nis_beat = above(beat_level, 0.5);\nprev_beat = beat;\n\nw  = if(is_beat, w + (int(rand(256))-128)/512, w);  // on beat: random increment of pos and angle\nxx = if(is_beat, xx + (int(rand(256))-128)/4096, xx);\nyy = if(is_beat, yy + (int(rand(256))-128)/4096, yy);\n\n\nq11 = sin(w);\nq12 = cos(w);\nq13 = xx;\nq14 = yy;\nq15 = 4;\nq16 = 0.06;\nq17 = sin(-w);\nq18 = cos(-w);","pixel_eqs_eel":"dx=dx+sin(-int(y*4)+y*4-.5)/13;\ndy=dy+sin(int(x*5)-x*5+.5)/13;\n//zoom=.996;\n\n///rot=.015;\ndx=dx;\nkdy=dy;\nksx=sx;\nksy=sy;\nkrt=rot;\nkzm=zoom;\nkcx=cx;\nkcy=cy;\nkwp=warp;\n\ndx=0;\ndy=0;\nsx=1;\nsy=1;\nrot=0;\nzoom=1;\ncx=.5;\ncy=.5;\nwarp=0;\n\nqv=above(x,.5)-above(y,.5);\nrot=sin(sin(rad*(13+5*sin(.01*q2))+.06*q2)*q1*.01);\nzoom=1+if(q3,dqv,1)*.1*sin(7*ang+.03*q2);\nzoom=if(q4,if(below(rad,.8*sqr(sin(.016*q2))),.75+.4*cos(.021*q2),zoom),zoom);\ncr1=50*.01;\ncr2=80*.01;\ncrx=cr2-cr1;\nci=rad;\ncb=.25  ;\ncrs=2;\ncr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;\ncqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);\njx1=crr;\nkx1=1-crr;\n\njdx=dx;\njdy=dy;\njsx=sx;\njsy=sy;\njrt=rot;\njzm=zoom;\njcx=cx;\njcy=cy;\njwp=warp;\n\ndx=(jx1*jdx+kx1*kdx);\ndy=(jx1*jdy+kx1*kdy);\nsx=(jx1*jsx+kx1*ksx);\nsy=(jx1*jsy+kx1*ksy);\nrot=(jx1*jrt+kx1*krt);\nzoom=(jx1*jzm+kx1*kzm);\ncx=(jx1*jcx+kx1*kcx);\ncy=(jx1*jcy+kx1*kcy);\nwarp=(jx1*jwp+kx1*kwp);\n\nmkdx=dx;//////////////////////////////////////////\nmkdy=dy;\nmksx=sx;\nmksy=sy;\nmkrt=rot;\nmkzm=zoom;\nmkcx=cx;\nmkcy=cy;\nmkwp=warp;\n\ndx=0;\ndy=0;\nsx=1;\nsy=1;\nrot=0;\nzoom=1;\ncx=.5;\ncy=.5;\nwarp=0;/////////////////////////////////////////////////////\n\ndx=sin((y*7.864)*663)/599;\ndy=sin((x*7.64)*669)/559;\nzoom=.9996;\n///////////////////////////////////////\ncr1=90*.01;\ncr2=0*.01;\ncrx=cr2-cr1;\nci=(1-(1-abs(-2*(x+y)/2+1)+(1-abs(-2*(1-(x+(1-y))/2)+1)))/2)*1.5+.25;\ncb=.25  ;\ncrs=2;\ncr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;\ncqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);\njx1=crr;\nkx1=1-crr;\n\nmjdx=dx;\nmjdy=dy;\nmjsx=sx;\nmjsy=sy;\nmjrt=rot;\nmjzm=zoom;\nmjcx=cx;\nmjcy=cy;\nmjwp=warp;\n\ndx=(jx1*mjdx+kx1*mkdx);\ndy=(jx1*mjdy+kx1*mkdy);\nsx=(jx1*mjsx+kx1*mksx);\nsy=(jx1*mjsy+kx1*mksy);\nrot=(jx1*mjrt+kx1*mkrt);\nzoom=(jx1*mjzm+kx1*mkzm);\ncx=(jx1*mjcx+kx1*mkcx);\ncy=(jx1*mjcy+kx1*mkcy);\nwarp=(jx1*mjwp+kx1*mkwp);////////////////////////////////////////////////////","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec3 tmpvar_2;\n  tmpvar_2.z = 0.0;\n  tmpvar_2.xy = abs((uv - uv_orig));\n  float tmpvar_3;\n  tmpvar_3 = ((dot (tmpvar_2, vec3(0.32, 0.49, 0.29)) * 0.6) + 0.003);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (uv.x - tmpvar_3);\n  tmpvar_4.y = uv.y;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (uv.x - tmpvar_3);\n  tmpvar_5.y = (uv.y + tmpvar_3);\n  vec2 tmpvar_6;\n  tmpvar_6.x = uv.x;\n  tmpvar_6.y = (uv.y - tmpvar_3);\n  vec2 tmpvar_7;\n  tmpvar_7.x = uv.x;\n  tmpvar_7.y = (uv.y + tmpvar_3);\n  vec2 tmpvar_8;\n  tmpvar_8.x = (uv.x + tmpvar_3);\n  tmpvar_8.y = (uv.y - tmpvar_3);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (uv.x + tmpvar_3);\n  tmpvar_9.y = uv.y;\n  vec3 tmpvar_10;\n  tmpvar_10 = clamp (max (max (\n    max (abs((tmpvar_1.xyz - texture (sampler_main, (uv - vec2(tmpvar_3))).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_4).xyz)))\n  , \n    max (abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_5).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_6).xyz)))\n  ), max (\n    max (max (abs((tmpvar_1.xyz - tmpvar_1.xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_7).xyz))), max (abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_8).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_9).xyz))))\n  , \n    abs((tmpvar_1.xyz - texture (sampler_main, (uv + vec2(tmpvar_3))).xyz))\n  )), 0.0, 1.0);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ((tmpvar_10 + (texture (sampler_main, \n    (uv + (tmpvar_10.xy * 0.01))\n  ).xyz * 0.8)) / 1.4);\n  ret = tmpvar_11.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv2_1).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = texture (sampler_main, uv2_1).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = texture (sampler_main, uv2_1).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.08;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - texture (sampler_main, uv2_1).x);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_main, (((uv - 0.5) * 0.4) + 0.5));\n  ret_2 = (pow (tmpvar_7.xyz, (\n    (tmpvar_7.yzx * 2.0)\n   - 1.0)) * clamp (dot (\n    normalize(tmpvar_6)\n  , vec3(0.9070111, -0.3930381, 0.1511685)), 0.0, 1.0));\n  ret_2 = (ret_2 * (hue_shader * 1.1));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{ret=GetPixel(uv);\nfloat d=lum(abs(uv-uv_orig))*0.6+0.003;\nfloat3 one,two,three,four,five;\nfloat3 sex,drugs,rock,roll,bugs;\nfloat3 maxx;\none=max(\nabs(ret-GetPixel(float2(uv.x-d,uv.y-d))),\nabs(ret-GetPixel(float2(uv.x-d,uv.y)))\n);\ntwo=max(\nabs(ret-GetPixel(float2(uv.x-d,uv.y+d))),\nabs(ret-GetPixel(float2(uv.x,uv.y-d)))\n);\nthree=max(\nabs(ret-GetPixel(float2(uv.x,uv.y))),\nabs(ret-GetPixel(float2(uv.x,uv.y+d)))\n);\nfour=max(\nabs(ret-GetPixel(float2(uv.x+d,uv.y-d))),\nabs(ret-GetPixel(float2(uv.x+d,uv.y)))\n);\nfive=abs(ret-GetPixel(float2(uv.x+d,uv.y+d)));\nsex=abs(one-ret);\ndrugs=abs(two-ret);\nrock=abs(three-ret);\nroll=abs(four-ret);\nbugs=abs(five-ret);\nmaxx=max(one,max(two,max(three,max(four,five))));\nmaxx=saturate(maxx);\nret=maxx;\nret=(ret+GetPixel(uv+ret.xy*0.01)*0.8)/1.4;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    // the weights of the 4 height value frequencies:\n    float4 c = float4(1,0,0,0);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2).x*c.x + GetBlur1(uv2).x*c.y + GetBlur2(uv2).x*c.z + GetBlur3(uv2).x*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2).x*c.x + GetBlur1(uv2).x*c.y + GetBlur2(uv2).x*c.z + GetBlur3(uv2).x*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2).x*c.x + GetBlur1(uv2).x*c.y + GetBlur2(uv2).x*c.z + GetBlur3(uv2).x*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2).x*c.x + GetBlur1(uv2).x*c.y + GetBlur2(uv2).x*c.z + GetBlur3(uv2).x*c.w;\n\n    // compute gradient vector:\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.08));\n\n    // hacked default lighting from it:\n    float3 dir1 = normalize(float3(0.3,-0.13,0.05));\n    //float3 col1 = float3(1.3,0.9,0.6)*1.5;\n    float3 a = tex2D(sampler_main, (uv-0.5)*0.4+0.5);\n    float3 col1 = pow(a.xyz, a.yzx*2-1);\n    ret = col1 * saturate(dot(g,dir1));\n    ret *= hue_shader*1.1;\n}"}