{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":2,"wave_brighten":0,"wrap":0,"wave_a":1,"wave_scale":0,"wave_smoothing":0.9,"wave_mystery":0.173,"warpscale":1.331,"zoom":1.004,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_g":0,"wave_b":0,"wave_x":0.448,"wave_y":0.122,"ob_size":0,"ob_r":1,"ob_a":0.7,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":1,"mv_y":1,"mv_dx":0.087,"mv_dy":0.343,"mv_l":1.663,"mv_r":0.89,"mv_g":0.03,"mv_b":0.881,"mv_a":0.199,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.88,"y":0.8,"rad":0.33004,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q8=0;","frame_eqs_str":"a.x=.5+.4*Math.sin(.2765*a.time+.341*a.q8);a.y=.5+.4*Math.sin(.311*a.time+.213*a.q8);a.ang=3.1415-3.1415*Math.cos(.1389*a.time);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.2765*time+0.341*q8);\ny = 0.5+ 0.4*sin(0.311*time+0.213*q8);\nang = 3.1415-3.1415*cos(time*0.1389);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.88,"y":0.2,"rad":0.33004,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q8=0;","frame_eqs_str":"a.x=.5+.4*Math.sin(.212*a.time+.1*a.q8);a.y=.5+.4*Math.sin(.2891*a.time+.121*a.q8);a.ang=3.1415+3.1415*Math.sin(.181*a.time);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.212*time+0.1*q8);\ny = 0.5+ 0.4*sin(0.2891*time+0.121*q8);\nang = 3.1415+3.1415*sin(time*0.181);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.12,"y":0.8,"rad":0.33004,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q6=0;","frame_eqs_str":"a.x=.5+.4*Math.sin(.0932*a.time+.421*a.q6);a.y=.5+.4*Math.sin(.1178*a.time+.2135*a.q6);a.ang=3.1415-3.1415*Math.cos(.1154*a.time);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.0932*time+0.421*q6);\ny = 0.5+ 0.4*sin(0.1178*time+0.2135*q6);\nang = 3.1415-3.1415*cos(time*0.1154);"},{"baseVals":{"sides":100,"textured":1,"x":0.12,"y":0.2,"rad":0.33004,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = 0.5+ 0.4*sin(0.105*time+0.3*q4);\ny = 0.5+ 0.4*sin(0.1267*time+0.323*q4);\nang = 3.1415+3.1415*sin(time*0.2654);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.105*time+0.3*q4);\ny = 0.5+ 0.4*sin(0.1267*time+0.323*q4);\nang = 3.1415+3.1415*sin(time*0.2654);"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":0.46374,"smoothing":0},"init_eqs_str":"a.y3=0;a.z2=0;a.y1=0;a.t5=0;a.t1=0;a.x1=0;a.z4=0;a.nsample=0;a.t8=0;a.z3=0;a.t3=0;a.rotz=0;a.x3=0;a.x4=0;a.tvar=0;a.x2=0;a.t2=0;a.y2=0;a.svar=0;a.fvar=0;a.z1=0;a.roty=0;a.t4=0;a.y4=0;a.rotx=0;a.t8=4.900884534;a.t5=1;","frame_eqs_str":"a.rotx+=a.bass;a.roty+=a.mid;a.rotz+=a.treb;a.t1=div(a.t8*a.rotx,180);a.t2=div(a.t8*a.roty,180);a.t3=div(a.t8*a.rotz,180);a.t4=12+13*Math.sin(a.time+2.46*a.t8);a.t5=2+8*Math.cos(a.time+1.66*a.t8);a.r=1;a.b=0;a.g=0;","point_eqs_str":"a.fvar=512*a.sample;a.svar=128*a.fvar;a.tvar=bitand(0,a.svar);a.nsample=4.5*a.tvar;a.x1=-.5+2.5*Math.sin(a.sample);a.y1=Math.cos(a.t8*a.nsample);a.z1=Math.sin(a.t8*a.nsample);a.y2=a.y1*Math.cos(a.t1)-a.z1*Math.sin(a.t1);a.z2=a.y1*Math.sin(a.t1)+a.z1*Math.cos(a.t1);a.x2=a.z2*Math.sin(a.t2)+a.x1*Math.cos(a.t2);a.z3=a.z2*Math.cos(a.t2)-a.x1*Math.sin(a.t2);a.x3=a.x2*Math.cos(a.t3)-a.y2*Math.sin(a.t3);a.y3=a.y2*Math.cos(a.t3)+a.x2*Math.sin(a.t3);a.x4=a.x3;a.y4=a.y3;a.z4=a.z3+5;a.x=\n.5-1*div(a.x4,1+.5*a.z4);a.y=.5-1*div(a.y4,1+.5*a.z4);a.a=-.9+Math.sin(a.nsample+a.time);a.a=.00001<Math.abs(below(a.a,0))?0:a.a;a.a=1;a.g=a.y2;a.b=a.x2;a.r=a.z2+a.z3;","init_eqs_eel":"//pi\nt8=3.14159265*1.56;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 12+13*sin(time+2.46*t8);\nt5 = 2+8*cos(time+1.66*t8);\nr = 1;\nb = 0;\ng=0;","point_eqs_eel":"//Define 3D Shape\n\n//Sphere\nfvar = sample*512;\nsvar = fvar*128;\ntvar = 0&svar;\nnsample = tvar*4.5;\nx1 = -.5+(2.5)*sin(sample);\ny1 = (1)*cos(t8*nsample);\nz1 = (1)*sin(t8*nsample);\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3;\ny4 = y3;\nz4 = z3+5;\n//draw 3d shape in 2d\nx=0.5-1*(x4/(1+z4*0.5));\ny=0.5-1*(y4/(1+z4*0.5));\n\na = -.9+sin(nsample+time);\na = if(below(a,0),0,a);\na=1;\ng=y2;\nb=x2;\nr= z2+z3;"},{"baseVals":{"enabled":1,"samples":262,"r":0,"g":0,"b":0},"init_eqs_str":"a.blue=0;a.rad=0;a.t5=0;a.t1=0;a.dx=0;a.t3=0;a.t6=0;a.spin=0;a.t7=0;a.green=0;a.ddy=0;a.red=0;a.t=0;a.dy=0;a.t2=0;a.t4=0;a.q7=0;a.t3=128*Math.acos(-1);a.t4=div(4,3);","frame_eqs_str":"a.spin+=.01;a.t2=a.spin;a.red=-1*Math.cos(a.time)+Math.abs(-1*Math.cos(a.time))+.2*(Math.cos(Math.sin(a.time))+(Math.abs(Math.cos(Math.sin(a.time)))+Math.cos(Math.sin(a.time))));a.green=Math.abs(Math.sin(a.time));a.blue=Math.cos(a.time)+Math.abs(Math.cos(a.time));a.r=.00001<Math.abs(above(a.red,1))?1:.00001<Math.abs(above(a.red,0))?Math.abs(a.red):0;a.g=.00001<Math.abs(above(a.green,1))?1:.00001<Math.abs(above(a.green,0))?Math.abs(a.green):0;a.b=.00001<Math.abs(above(a.blue,\n1))?1:.00001<Math.abs(above(a.blue,0))?Math.abs(a.blue):0;a.t5=a.r;a.t6=a.g;a.t7=a.b-Math.sin(a.time);","point_eqs_str":"a.dx=Math.cos(.1*a.sample*a.t1+a.t1*(a.t7-Math.floor(a.t5)))-.5;a.dy=.3*Math.cos(a.sample*a.t1+7+a.t1*(a.t7-Math.floor(a.t6)));a.ddy=-1*a.dy;a.t=Math.abs(Math.sin(a.q7));a.rad=a.sample*a.t3+a.t2;a.x=.1*Math.cos(div(a.rad,32))+.05*Math.sin(a.rad)+a.dx*a.t;a.y=Math.sin(div(a.rad,64))*a.t4*.1+Math.cos(a.rad)*a.t4*.05+a.dy*a.t+a.ddy*a.t*a.t;","init_eqs_eel":"t3 = acos(-1)*128;\nt4 = 4/3;","frame_eqs_eel":"spin = spin + .01;\nt2 = spin;\nred = (-1 * cos(time))  + abs(-1 * cos(time)) + 0.2 * (cos(sin(time))+(abs(cos(sin(time)))+cos(sin(time))));\ngreen = abs(sin(time)) ;\nblue = cos(time)  + abs(cos(time));\nr = if(above(red,1),1,if(above(red,0), abs(red),0));\ng = if(above(green,1),1,if(above(green,0), abs(green),0));\nb = if(above(blue,1),1,if(above(blue,0), abs(blue),0));\nt5 = r;\nt6 = g;\nt7 = b-sin(time);","point_eqs_eel":"dx = cos(sample*.1*t1 + t1*(t7-int(t5)))-.5;\ndy = 0.3*cos(sample*t1 + 7 + t1*(t7-int(t6)));\nddy = -1*dy;\nt = abs(sin(q7));\nrad = sample*t3+t2;\nx = cos(rad/32)*0.10 + sin(rad)*0.05 +dx*t;\ny = sin(rad/64)*t4*0.10 + cos(rad)*t4*0.05+dy*t + ddy * t * t;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"scaling":0.46374,"smoothing":0},"init_eqs_str":"a.y3=0;a.z2=0;a.y1=0;a.t5=0;a.t1=0;a.x1=0;a.z4=0;a.nsample=0;a.t8=0;a.z3=0;a.t3=0;a.rotz=0;a.x3=0;a.x4=0;a.tvar=0;a.x2=0;a.t2=0;a.y2=0;a.svar=0;a.fvar=0;a.z1=0;a.roty=0;a.t4=0;a.y4=0;a.rotx=0;a.t8=div(3.14159265,2);a.t5=1;","frame_eqs_str":"a.rotx+=a.bass;a.roty+=a.mid;a.rotz+=a.treb;a.t1=div(a.t8*a.rotx,180);a.t2=div(a.t8*a.roty,180);a.t3=div(a.t8*a.rotz,180);a.t4=Math.sin(a.bass+.86*a.t8);a.t5=10+8*Math.cos(a.time+.56*a.t8);","point_eqs_str":"a.fvar=512*a.sample;a.svar=128*a.fvar;a.tvar=bitand(0,a.svar);a.nsample=4.5*a.tvar;a.x1=-2.5+1.5*Math.sin(a.sample);a.y1=-1*Math.cos(a.t8*a.nsample);a.z1=-1*Math.sin(a.t8*a.nsample);a.y2=a.y1*Math.cos(a.t1)-a.z1*Math.sin(a.t1);a.z2=a.y1*Math.sin(a.t1)+a.z1*Math.cos(a.t1);a.x2=a.z2*Math.sin(a.t2)+a.x1*Math.cos(a.t2);a.z3=a.z2*Math.cos(a.t2)-a.x1*Math.sin(a.t2);a.x3=a.x2*Math.cos(a.t3)-a.y2*Math.sin(a.t3);a.y3=a.y2*Math.cos(a.t3)+a.x2*Math.sin(a.t3);a.x4=a.x3;a.y4=a.y3;a.z4=a.z3+\n5;a.x=.5+.5*div(a.x4,1+.5*a.z4);a.y=.5+.5*div(a.y4,1+.5*a.z4);a.a=-.9+Math.sin(a.nsample+a.time);a.a=.00001<Math.abs(below(a.a,0))?0:a.a;a.a=1;a.r=.5*Math.sin(Math.abs(a.x2*Math.sin(a.time)))+.5;a.b=.5*Math.sin(Math.abs(a.y3+Math.sin(.8765*a.time)))+.5;a.g=a.x2*a.z2;","init_eqs_eel":"//pi\nt8=3.14159265/2;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = sin(bass+0.86*t8);\nt5 = 10+8*cos(time+0.56*t8);","point_eqs_eel":"//Define 3D Shape\n\n//Sphere\nfvar = sample*512;\nsvar = fvar*128;\ntvar = 0&svar;\nnsample = tvar*4.5;\nx1 = -2.5+(1.5)*sin(sample);\ny1 = (-1)*cos(t8*nsample);\nz1 = (-1)*sin(t8*nsample);\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3;\ny4 = y3;\nz4 = z3+5;\n//draw 3d shape in 2d\nx=0.5+0.5*(x4/(1+z4*0.5));\ny=0.5+0.5*(y4/(1+z4*0.5));\n\na = -.9+sin(nsample+time);\na = if(below(a,0),0,a);\na=1;\nr =sin(abs(x2*sin(time)))*0.5 + 0.5;\nb = sin(abs(y3+sin(0.8765*time)))*0.5 + 0.5;\ng = x2*z2;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":0.46374,"smoothing":0},"init_eqs_str":"a.y3=0;a.z2=0;a.y1=0;a.t5=0;a.t1=0;a.x1=0;a.z4=0;a.nsample=0;a.t8=0;a.z3=0;a.t3=0;a.rotz=0;a.x3=0;a.x4=0;a.tvar=0;a.x2=0;a.t2=0;a.y2=0;a.svar=0;a.fvar=0;a.z1=0;a.roty=0;a.t4=0;a.y4=0;a.rotx=0;a.t8=3.14159265;a.t5=1;","frame_eqs_str":"a.rotx+=a.bass;a.roty+=a.mid;a.rotz+=a.treb;a.t1=div(a.t8*a.rotx,180);a.t2=div(a.t8*a.roty,180);a.t3=div(a.t8*a.rotz,180);a.t4=3*Math.sin(a.time+.776*a.t8);a.t5=10+8*Math.cos(a.time+.56*a.t8);","point_eqs_str":"a.fvar=512*a.sample;a.svar=128*a.fvar;a.tvar=bitand(0,a.svar);a.nsample=4.5*a.tvar;a.x1=-.75+1.5*Math.sin(a.sample);a.y1=Math.cos(a.t8*a.nsample);a.z1=Math.sin(a.t8*a.nsample);a.y2=a.y1*Math.cos(a.t1)-a.z1*Math.sin(a.t1);a.z2=a.y1*Math.sin(a.t1)+a.z1*Math.cos(a.t1);a.x2=a.z2*Math.sin(a.t2)+a.x1*Math.cos(a.t2);a.z3=a.z2*Math.cos(a.t2)-a.x1*Math.sin(a.t2);a.x3=a.x2*Math.cos(a.t3)-a.y2*Math.sin(a.t3);a.y3=a.y2*Math.cos(a.t3)+a.x2*Math.sin(a.t3);a.x4=a.x3;a.y4=a.y3;a.z4=a.z3+5;\na.x=.5+.75*div(a.x4,1+.5*a.z4);a.y=.5+.75*div(a.y4,1+.5*a.z4);a.a=-.9+Math.sin(a.nsample+a.time);a.a=.00001<Math.abs(below(a.a,0))?0:a.a;a.a=1;a.r=a.y2*a.z2;a.b=a.z3+a.y3;a.g=div(a.z3,a.x2);","init_eqs_eel":"//pi\nt8=3.14159265;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 3*sin(time+0.776*t8);\nt5 = 10+8*cos(time+0.56*t8);\n","point_eqs_eel":"//Define 3D Shape\n\n//Sphere\nfvar = sample*512;\nsvar = fvar*128;\ntvar = 0&svar;\nnsample = tvar*4.5;\nx1 = -.75+(1.5)*sin(sample);\ny1 = (1)*cos(t8*nsample);\nz1 = (1)*sin(t8*nsample);\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3;\ny4 = y3;\nz4 = z3+5;\n//draw 3d shape in 2d\nx=0.5+0.75*(x4/(1+z4*0.5));\ny=0.5+0.75*(y4/(1+z4*0.5));\n\na = -.9+sin(nsample+time);\na = if(below(a,0),0,a);\na=1;\nr = y2*z2;\nb = z3+y3;\ng = z3/x2;"}],"init_eqs_str":"a.du=0;a.q1=0;a.dv=0;a.q2=0;a.dist=0;a.ang2=0;a.mult=0;","frame_eqs_str":"a.mv_r+=.2*(.6*Math.sin(.98*a.time)+.4*Math.sin(1.047*a.time));a.mv_g+=.2*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.mv_b+=.2*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.q1=2*a.cx-1+.6*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.q2=2*a.cy-1+.6*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.ob_r=1-.4*Math.abs(a.q1);a.ob_g=.3*Math.abs(a.q2);a.ob_b=.4*Math.abs(a.q1);a.wave_x=1-Math.abs(a.q2)-.05;a.wave_y=1-Math.abs(a.q1)-.06;a.wave_r+=.4*\n(.6*Math.sin(.514*a.time)+.4*Math.sin(1.211*a.time));a.wave_b+=.4*(.6*Math.sin(.714*a.time)+.4*Math.sin(a.q2));a.wave_g+=.4*(.6*Math.sin(10*a.q1)+.4*Math.sin(10*a.q2));","pixel_eqs_str":"a.du=2*a.x-1-a.q1;a.dv=2*a.y-1-a.q2;a.dist=sqrt(a.du*a.du+a.dv*a.dv);a.ang2=Math.atan2(a.du,a.dv)+.15*a.time;a.mult=-.2*Math.sin(.05*a.dist);a.dx=a.mult*Math.sin(2*a.ang2-1.5)*a.aspectx;a.dy=a.mult*Math.cos(2*a.ang2-1.5)*a.aspecty;","init_eqs_eel":"","frame_eqs_eel":"mv_r = mv_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\nmv_g = mv_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\nmv_b = mv_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\nob_r = 1- 0.4*abs(q1);\nob_g = 0.3*abs(q2);\nob_b = 0.4*abs(q1);\nwave_x = 1-abs(q2)-0.05;\nwave_y = 1-abs(q1)-0.06;\nwave_r = wave_r + 0.4*( 0.60*sin(0.514*time) + 0.40*sin(1.211*time) );\nwave_b = wave_b + 0.4*( 0.60*sin(0.714*time) + 0.40*sin(q2) );\nwave_g = wave_g + 0.4*( 0.60*sin(10*q1) + 0.40*sin(10*q2) );","pixel_eqs_eel":"du = (x*2-1) - q1;\ndv = (y*2-1) - q2;\ndist = sqrt(du*du+dv*dv);\nang2 = atan2(du,dv) + time*0.15;\nmult = -0.2*sin(dist*0.05);\ndx = mult*sin(ang2*2-1.5)*aspectx;\ndy = mult*cos(ang2*2-1.5)*aspecty;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec3 tmpvar_2;\n  tmpvar_2.z = 0.0;\n  tmpvar_2.xy = abs((uv - uv_orig));\n  float tmpvar_3;\n  tmpvar_3 = ((dot (tmpvar_2, vec3(0.32, 0.49, 0.29)) * 0.6) + 0.003);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (uv.x - tmpvar_3);\n  tmpvar_4.y = uv.y;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (uv.x - tmpvar_3);\n  tmpvar_5.y = (uv.y + tmpvar_3);\n  vec2 tmpvar_6;\n  tmpvar_6.x = uv.x;\n  tmpvar_6.y = (uv.y - tmpvar_3);\n  vec2 tmpvar_7;\n  tmpvar_7.x = uv.x;\n  tmpvar_7.y = (uv.y + tmpvar_3);\n  vec2 tmpvar_8;\n  tmpvar_8.x = (uv.x + tmpvar_3);\n  tmpvar_8.y = (uv.y - tmpvar_3);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (uv.x + tmpvar_3);\n  tmpvar_9.y = uv.y;\n  vec3 tmpvar_10;\n  tmpvar_10 = clamp (max (max (\n    max (abs((tmpvar_1.xyz - texture (sampler_main, (uv - vec2(tmpvar_3))).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_4).xyz)))\n  , \n    max (abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_5).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_6).xyz)))\n  ), max (\n    max (max (abs((tmpvar_1.xyz - tmpvar_1.xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_7).xyz))), max (abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_8).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_9).xyz))))\n  , \n    abs((tmpvar_1.xyz - texture (sampler_main, (uv + vec2(tmpvar_3))).xyz))\n  )), 0.0, 1.0);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ((tmpvar_10 + (texture (sampler_main, \n    (uv + (tmpvar_10.xy * 0.01))\n  ).xyz * 0.8)) / 1.4);\n  ret = tmpvar_11.xyz;\n }","comp":" shader_body { \n  vec2 uv3_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur1, uv);\n  ret_2 = (mix (vec3((\n    ((tmpvar_4.xyz * scale1) + bias1)\n  .x + \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  .x)), tmpvar_3.xxx, pow (tmpvar_3.xxx, vec3(0.5, 0.5, 0.5))) * 2.7);\n  uv3_1 = (((0.5 - uv) * (1.0 - \n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xy * 0.01)\n  )) + 0.5);\n  vec3 tmpvar_5;\n  tmpvar_5 = (ret_2 + clamp ((\n    pow (texture (sampler_main, uv3_1).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    ((1.0 - ((tmpvar_4.xyz * scale1) + bias1).x) - ret_2.x)\n  ), 0.0, 1.0));\n  vec3 tmpvar_6;\n  tmpvar_6 = (tmpvar_5 + clamp ((\n    pow (((texture (sampler_blur1, uv3_1).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    ((1.0 - ((tmpvar_4.xyz * scale1) + bias1).x) - tmpvar_5.x)\n  ), 0.0, 1.0));\n  vec2 tmpvar_7;\n  tmpvar_7 = (1.0 - uv3_1);\n  uv3_1 = tmpvar_7;\n  vec3 tmpvar_8;\n  tmpvar_8 = (tmpvar_6 + clamp ((\n    pow (texture (sampler_main, tmpvar_7).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    ((1.0 - ((tmpvar_4.xyz * scale1) + bias1).x) - tmpvar_6.x)\n  ), 0.0, 1.0));\n  ret_2 = (((\n    pow ((tmpvar_8 + clamp ((\n      pow (((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\n     * \n      ((1.0 - ((tmpvar_4.xyz * scale1) + bias1).x) - tmpvar_8.x)\n    ), 0.0, 1.0)), vec3(3.0, 0.95, 0.6))\n   * 1.25) - 0.25) - ((tmpvar_3.yyy * tmpvar_3.yyy) * 3.0));\n  ret_2.xy = (ret_2.xy + ((ret_2.yy - ret_2.xy) * 0.5));\n  ret_2 = (ret_2 * ret_2);\n  ret_2 = (ret_2 - 0.05);\n  ret_2 = (ret_2 + (sqrt(\n    dot (ret_2, ret_2)\n  ) * 0.08));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{ret=GetPixel(uv);\nfloat d=lum(abs(uv-uv_orig))*0.6+0.003;\nfloat3 one,two,three,four,five;\nfloat3 sex,drugs,rock,roll,bugs;\nfloat3 maxx;\none=max(\nabs(ret-GetPixel(float2(uv.x-d,uv.y-d))),\nabs(ret-GetPixel(float2(uv.x-d,uv.y)))\n);\ntwo=max(\nabs(ret-GetPixel(float2(uv.x-d,uv.y+d))),\nabs(ret-GetPixel(float2(uv.x,uv.y-d)))\n);\nthree=max(\nabs(ret-GetPixel(float2(uv.x,uv.y))),\nabs(ret-GetPixel(float2(uv.x,uv.y+d)))\n);\nfour=max(\nabs(ret-GetPixel(float2(uv.x+d,uv.y-d))),\nabs(ret-GetPixel(float2(uv.x+d,uv.y)))\n);\nfive=abs(ret-GetPixel(float2(uv.x+d,uv.y+d)));\nsex=abs(one-ret);\ndrugs=abs(two-ret);\nrock=abs(three-ret);\nroll=abs(four-ret);\nbugs=abs(five-ret);\nmaxx=max(one,max(two,max(three,max(four,five))));\nmaxx=saturate(maxx);\nret=maxx;\nret=(ret+GetPixel(uv+ret.xy*0.01)*0.8)/1.4;\n}","comp_hlsl":"shader_body\n{\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\n\nfloat2 uvm = uv;\nret = tex2D(sampler_main, uvm).x,\n\nret = lerp (\nGetBlur1(uvm).x + GetBlur3(uvm).x,\nret,\npow(ret,.5));\n\nret *= 2.7;\n\nfloat2 uv3 = (.5-uv)*(1-GetBlur1(uvm).zz)+.5;\nuv3 = (.5-uv)*(1-noiseVal.xy*.01)+.5;\n\nret += saturate(pow(tex2D(sampler_main, uv3).zzz,.5)*(1-GetBlur1(uvm).x -ret.x)),\nret += saturate(pow(GetBlur1(uv3).zzz,.5)*(1-GetBlur1(uvm).x -ret.x)),\nuv3 = 1-uv3;\nret += saturate(pow(tex2D(sampler_main, uv3).zzz,.5)*(1-GetBlur1(uvm).x -ret.x)),\nret += saturate(pow(GetBlur1(uv3).zzz,.5)*(1-GetBlur1(uvm).x -ret.x)),\n  \nret = pow(ret,float3(3,.95,.6))*1.25 -.25;\nret -= pow(tex2D(sampler_main, uvm).yyy,2)*3;\nret.xy += (ret.yy-ret.xy)*.5;\nret *= ret;\n \nret-= .05;\nret += length(ret)*.08;\n//ret = pow(ret,float3(.5,1,2));\n//ret *= ret;\n//ret += tex2D(sampler_main, uvm).yyy*2,\n\n}"}