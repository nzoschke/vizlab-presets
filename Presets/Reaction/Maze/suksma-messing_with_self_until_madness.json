{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.96,"echo_zoom":1,"wave_mode":6,"additivewave":1,"wrap":0,"darken":1,"wave_a":1.008,"wave_scale":1.259,"wave_smoothing":0,"wave_mystery":-1,"modwavealphastart":0.5,"modwavealphaend":1,"zoomexp":1.00183,"fshader":1,"zoom":0.9999,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.34,"wave_g":0.26,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.01,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1.75,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.d=0;a.z=0;a.tb=0;a.maxdbass=0;a.s=0;a.pw=0;a.pg=0;a.dbass=0;a.q1=0;a.cheat=0;a.lastbeat=0;a.interval=0;a.q4=0;a.pbass=0;a.dir=0;a.gsync=0;a.contvol=0;a.beat=0;a.bc=0;a.q2=0;a.q3=0;a.pb=0;a.pr=0;a.sure=0;a.q20=0;a.avgbassenergy=.9;a.lastbeat=a.frame-1;a.interval=20;a.pctg=1;","frame_eqs_str":"a.sure=.00001<Math.abs(equal(a.sure,0))?.6:a.sure;a.interval=.00001<Math.abs(equal(a.interval,0))?40:a.interval;a.lastbeat=.00001<Math.abs(equal(a.lastbeat,0))?a.frame-a.fps:a.lastbeat;a.dbass=div(a.bass-a.pbass,a.fps);a.beat=above(a.dbass,.6*a.maxdbass)*above(a.frame-a.lastbeat,div(a.fps,3));a.sure=.00001<Math.abs(a.beat*below(Math.abs(a.frame-(a.interval+a.lastbeat)),div(a.fps,5)))?Math.min(.095+a.sure,1):a.beat*(a.sure-.095)+(1-a.beat)*a.sure*.9996;a.sure=Math.max(.5,a.sure);\na.cheat=.00001<Math.abs(above(a.frame,a.lastbeat+a.interval+Math.floor(div(a.fps,10)))*above(a.sure,.91))?1:a.cheat;a.beat=.00001<Math.abs(a.cheat)?1:a.beat;a.sure=.00001<Math.abs(a.cheat)?.95*a.sure:a.sure;a.maxdbass=Math.max(.999*a.maxdbass,a.dbass);a.maxdbass=Math.max(.012,a.maxdbass);a.maxdbass=Math.min(.02,a.maxdbass);a.interval=.00001<Math.abs(a.beat)?a.frame-a.lastbeat:a.interval;a.lastbeat=.00001<Math.abs(a.beat)?a.frame-a.cheat*Math.floor(div(a.fps,10)):a.lastbeat;a.cheat=0;a.pbass=a.bass;\na.gsync=.9*div(75,a.fps);a.warp=0;a.pw=.00001<Math.abs(equal(a.pw,0))?.5:a.pw;a.contvol=.0033*(a.bass_att+a.mid_att+a.treb_att)+.99*a.contvol;a.wave_r=.00001<Math.abs(equal(a.beat,1))?.3+div(.7*Math.floor(rand(100)),100):a.pr;a.wave_g=.00001<Math.abs(equal(a.beat,1))?.3+div(.7*Math.floor(rand(100)),100):a.pg;a.wave_b=.00001<Math.abs(equal(a.beat,1))?.3+div(.7*Math.floor(rand(100)),100):a.pb;a.tb+=above(Math.floor(rand(10)),1)*a.beat;a.dir=a.beat*(1-2*mod(a.tb,2))+(1-a.beat)*a.dir;a.s=div(a.beat*(2+\nMath.floor(rand(5))),1E3)+(1-a.beat)*a.s;a.bc=div(10*(a.frame-a.lastbeat),a.interval);a.wave_x=a.pw+a.s*a.dir*a.gsync*sqrt(10-a.bc);a.decay=Math.min(.96+.004*a.bc,1);a.z=below(a.wave_x,.15)*equal(a.dir,-1);a.wave_x=.16*a.z+(1-a.z)*a.wave_x;a.dir=a.z+(1-a.z)*a.dir;a.z=above(a.wave_x,.85)*equal(a.dir,1);a.wave_x=.84*a.z+(1-a.z)*a.wave_x;a.dir=a.z+(1-a.z)*a.dir;a.pw=a.wave_x;a.pr=a.wave_r;a.pg=a.wave_g;a.pb=a.wave_b;a.q1=a.wave_x;a.q2=a.dir;a.q3=a.s;a.q4=div(a.bc,10);a.sy=-a.beat+(1-a.beat);a.monitor=\na.decay;a.q20=10.4*(a.bass+a.treb+a.mid);","pixel_eqs_str":"a.d=1-pow(Math.abs(a.q1-a.x),3);a.warp=.00001<Math.abs(equal(a.q2,1)*below(a.q1,a.x))?1E3*a.q3*a.d:a.warp;a.warp=.00001<Math.abs(equal(a.q2,-1)*above(a.q1,a.x))?1E3*a.q3*a.d:a.warp;","init_eqs_eel":"AvgBassEnergy = 0.9;//sqr( bass);\nlastBeat = frame-1;\ninterval = 20;\npctg=1;","frame_eqs_eel":"// -------------------------------- Beat Detective v0.07 ----------------------------------\nsure=if(equal(sure,0),.6,sure);\ninterval=if(equal(interval,0),40,interval);\nlastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);\ndbass=(bass-pbass)/FPS;\nbeat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);\nsure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),\nmin(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);\nsure=max(.5,sure);\ncheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);\nbeat=if(cheat,1,beat);\nsure=if(cheat,.95*sure,sure);\nmaxdbass=max(maxdbass*.999,dbass);\nmaxdbass=max(.012,maxdbass);\nmaxdbass=min(.02,maxdbass);\ninterval=if(beat, frame-lastbeat,interval);\nlastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);\ncheat=0;\npbass=bass;\n// ----------------------------------------------------------------------------------------------\ngsync=.9*(75/FPS); warp=0;\npw=if(equal(pw,0),.5,pw);\ncontVol=(bass_att+mid_att+treb_att)*.0033+.99*contVol;\nwave_r=if(equal(beat,1),.3+.7*int(rand(100))/100,pr);\nwave_g=if(equal(beat,1),.3+.7*int(rand(100))/100,pg);\nwave_b=if(equal(beat,1),.3+.7*int(rand(100))/100,pb);\ntb=tb+above(int(rand(10)),1)*beat;\ndir=beat*(1-2*(tb%2))+(1-beat)*dir;\ns=beat*(2+int(rand(5)))/1000+(1-beat)*s;\nbc=10*(frame-lastbeat)/interval;\nwave_x=pw+s*dir*gsync*sqrt(10-bc);\ndecay=min(.96+.004*bc,1);\nz=below(wave_x,.15)*equal(dir,-1);\nwave_x=z*.16+(1-z)*wave_x;\ndir=z+(1-z)*dir;\nz=above(wave_x,.85)*equal(dir,1);\nwave_x=z*.84+(1-z)*wave_x;\ndir=z+(1-z)*dir;\npw=wave_x;\npr=wave_r;\npg=wave_g;\npb=wave_b;\nq1=wave_x;\nq2=dir;\nq3=s;\nq4=bc/10;\nsy=-beat+(1-beat);\nmonitor=decay;\nq20=(bass+treb+mid)*10.4;","pixel_eqs_eel":"d=1-pow(abs(q1-x),3);\nwarp=if(equal(q2,1)*below(q1,x),1000*q3*d,warp);\nwarp=if(equal(q2,-1)*above(q1,x),1000*q3*d,warp);","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec3 tmpvar_2;\n  tmpvar_2.z = 0.0;\n  tmpvar_2.xy = abs((uv - uv_orig));\n  float tmpvar_3;\n  tmpvar_3 = ((dot (tmpvar_2, vec3(0.32, 0.49, 0.29)) * 0.6) + 0.003);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (uv.x - tmpvar_3);\n  tmpvar_4.y = uv.y;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (uv.x - tmpvar_3);\n  tmpvar_5.y = (uv.y + tmpvar_3);\n  vec2 tmpvar_6;\n  tmpvar_6.x = uv.x;\n  tmpvar_6.y = (uv.y - tmpvar_3);\n  vec2 tmpvar_7;\n  tmpvar_7.x = uv.x;\n  tmpvar_7.y = (uv.y + tmpvar_3);\n  vec2 tmpvar_8;\n  tmpvar_8.x = (uv.x + tmpvar_3);\n  tmpvar_8.y = (uv.y - tmpvar_3);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (uv.x + tmpvar_3);\n  tmpvar_9.y = uv.y;\n  vec3 tmpvar_10;\n  tmpvar_10 = clamp (max (max (\n    max (abs((tmpvar_1.xyz - texture (sampler_main, (uv - vec2(tmpvar_3))).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_4).xyz)))\n  , \n    max (abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_5).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_6).xyz)))\n  ), max (\n    max (max (abs((tmpvar_1.xyz - tmpvar_1.xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_7).xyz))), max (abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_8).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_9).xyz))))\n  , \n    abs((tmpvar_1.xyz - texture (sampler_main, (uv + vec2(tmpvar_3))).xyz))\n  )), 0.0, 1.0);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ((tmpvar_10 + (texture (sampler_main, \n    (uv + (tmpvar_10.xy * 0.01))\n  ).xyz * 0.8)) / 1.4);\n  ret = tmpvar_11.xyz;\n }","comp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = rad;\n  tmpvar_1.y = uv.y;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = texture (sampler_main, tmpvar_1).xyz;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{ret=GetPixel(uv);\nfloat d=lum(abs(uv-uv_orig))*0.6+0.003;\nfloat3 one,two,three,four,five;\nfloat3 sex,drugs,rock,roll,bugs;\nfloat3 maxx;\none=max(\nabs(ret-GetPixel(float2(uv.x-d,uv.y-d))),\nabs(ret-GetPixel(float2(uv.x-d,uv.y)))\n);\ntwo=max(\nabs(ret-GetPixel(float2(uv.x-d,uv.y+d))),\nabs(ret-GetPixel(float2(uv.x,uv.y-d)))\n);\nthree=max(\nabs(ret-GetPixel(float2(uv.x,uv.y))),\nabs(ret-GetPixel(float2(uv.x,uv.y+d)))\n);\nfour=max(\nabs(ret-GetPixel(float2(uv.x+d,uv.y-d))),\nabs(ret-GetPixel(float2(uv.x+d,uv.y)))\n);\nfive=abs(ret-GetPixel(float2(uv.x+d,uv.y+d)));\nsex=abs(one-ret);\ndrugs=abs(two-ret);\nrock=abs(three-ret);\nroll=abs(four-ret);\nbugs=abs(five-ret);\nmaxx=max(one,max(two,max(three,max(four,five))));\nmaxx=saturate(maxx);\nret=maxx;\nret=(ret+GetPixel(uv+ret.xy*0.01)*0.8)/1.4;\n}","comp_hlsl":"shader_body\n{\n    //uv = lerp(uv, float2(rad,uv.x), roam_cos.x);\n    //uv = lerp(uv, float2(uv.y,rad), roam_cos.y);\n    uv = float2(rad,uv.y);\n\n    ret = tex2D(sampler_main, uv).xyz;\n    //ret += GetBlur1(uv);\n    //ret *= float3(1.3,0.8,0.5)*0.8;    \n}"}