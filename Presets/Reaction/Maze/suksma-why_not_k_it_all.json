{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":3,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":4.1,"wave_scale":1.023,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":3.0727,"zoom":0.99984,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_y":12.024,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r=Math.sin(a.time*a.bass_att*Math.sin(1.543*a.time));a.wave_g=Math.sin(1.6432*a.time*a.mid_att*Math.sin(1.721*a.time));a.wave_b=Math.sin(1.37563*a.time*a.treb_att*Math.sin(1.666*a.time));","pixel_eqs_str":"a.rot=Math.abs(Math.sin(a.ang*Math.cos(a.time)*Math.sin(1.8232*a.time)*.09));a.zoom=a.zoom+Math.sin(a.rad*Math.sin(a.time)*Math.sin(1.562543*a.time)*.3)+.1;","init_eqs_eel":"","frame_eqs_eel":"wave_r=sin(time*bass_att*sin(time*1.543));\nwave_g=sin(time*1.6432*mid_att*sin(time*1.721));\nwave_b=sin(time*1.37563*treb_att*sin(time*1.666));","pixel_eqs_eel":"rot=abs(sin(ang*cos(time)*sin(time*1.8232)*.09));\nzoom=zoom+sin(rad*sin(time)*sin(time*1.562543)*.3)+.1;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec3 tmpvar_2;\n  tmpvar_2.z = 0.0;\n  tmpvar_2.xy = abs((uv - uv_orig));\n  float tmpvar_3;\n  tmpvar_3 = ((dot (tmpvar_2, vec3(0.32, 0.49, 0.29)) * 0.6) + 0.003);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (uv.x - tmpvar_3);\n  tmpvar_4.y = uv.y;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (uv.x - tmpvar_3);\n  tmpvar_5.y = (uv.y + tmpvar_3);\n  vec2 tmpvar_6;\n  tmpvar_6.x = uv.x;\n  tmpvar_6.y = (uv.y - tmpvar_3);\n  vec2 tmpvar_7;\n  tmpvar_7.x = uv.x;\n  tmpvar_7.y = (uv.y + tmpvar_3);\n  vec2 tmpvar_8;\n  tmpvar_8.x = (uv.x + tmpvar_3);\n  tmpvar_8.y = (uv.y - tmpvar_3);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (uv.x + tmpvar_3);\n  tmpvar_9.y = uv.y;\n  vec3 tmpvar_10;\n  tmpvar_10 = clamp (max (max (\n    max (abs((tmpvar_1.xyz - texture (sampler_main, (uv - vec2(tmpvar_3))).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_4).xyz)))\n  , \n    max (abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_5).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_6).xyz)))\n  ), max (\n    max (max (abs((tmpvar_1.xyz - tmpvar_1.xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_7).xyz))), max (abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_8).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_9).xyz))))\n  , \n    abs((tmpvar_1.xyz - texture (sampler_main, (uv + vec2(tmpvar_3))).xyz))\n  )), 0.0, 1.0);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ((tmpvar_10 + (texture (sampler_main, \n    (uv + (tmpvar_10.xy * 0.01))\n  ).xyz * 0.8)) / 1.4);\n  ret = tmpvar_11.xyz;\n }","comp":" shader_body { \n  vec3 myblur_1;\n  myblur_1 = ((texture (sampler_main, uv).xyz * 3.0) + (texture (sampler_main, (uv - texsize.zw)) * 0.75).xyz);\n  myblur_1 = (myblur_1 + (texture (sampler_main, (uv + texsize.zw)) * 0.75).xyz);\n  myblur_1 = (myblur_1 + (texture (sampler_main, (uv + \n    (vec2(1.0, -1.0) * texsize.zw)\n  )) * 0.75).xyz);\n  myblur_1 = (myblur_1 + (texture (sampler_main, (uv + \n    (vec2(-1.0, 1.0) * texsize.zw)\n  )) * 0.75).xyz);\n  myblur_1 = (myblur_1 + texture (sampler_main, (uv + (vec2(0.0, -1.0) * texsize.zw))).xyz);\n  myblur_1 = (myblur_1 + texture (sampler_main, (uv + (vec2(0.0, 1.0) * texsize.zw))).xyz);\n  myblur_1 = (myblur_1 + texture (sampler_main, (uv + (vec2(-1.0, 0.0) * texsize.zw))).xyz);\n  myblur_1 = (myblur_1 + texture (sampler_main, (uv + (vec2(1.0, 0.0) * texsize.zw))).xyz);\n  myblur_1 = (myblur_1 * 0.1);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((myblur_1 * myblur_1) * myblur_1);\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{ret=GetPixel(uv);\nfloat d=lum(abs(uv-uv_orig))*0.6+0.003;\nfloat3 one,two,three,four,five;\nfloat3 sex,drugs,rock,roll,bugs;\nfloat3 maxx;\none=max(\nabs(ret-GetPixel(float2(uv.x-d,uv.y-d))),\nabs(ret-GetPixel(float2(uv.x-d,uv.y)))\n);\ntwo=max(\nabs(ret-GetPixel(float2(uv.x-d,uv.y+d))),\nabs(ret-GetPixel(float2(uv.x,uv.y-d)))\n);\nthree=max(\nabs(ret-GetPixel(float2(uv.x,uv.y))),\nabs(ret-GetPixel(float2(uv.x,uv.y+d)))\n);\nfour=max(\nabs(ret-GetPixel(float2(uv.x+d,uv.y-d))),\nabs(ret-GetPixel(float2(uv.x+d,uv.y)))\n);\nfive=abs(ret-GetPixel(float2(uv.x+d,uv.y+d)));\nsex=abs(one-ret);\ndrugs=abs(two-ret);\nrock=abs(three-ret);\nroll=abs(four-ret);\nbugs=abs(five-ret);\nmaxx=max(one,max(two,max(three,max(four,five))));\nmaxx=saturate(maxx);\nret=maxx;\nret=(ret+GetPixel(uv+ret.xy*0.01)*0.8)/1.4;\n}","comp_hlsl":"shader_body\n{\n    float3 pre = tex2D(sampler_main, uv).xyz;\n    float2 pix = texsize.zw;\n    float3 myblur  = pre*3;\n           myblur += tex2D(sampler_main, uv + float2(-1,-1)*pix)*0.75;\n           myblur += tex2D(sampler_main, uv + float2( 1, 1)*pix)*0.75;\n           myblur += tex2D(sampler_main, uv + float2( 1,-1)*pix)*0.75;\n           myblur += tex2D(sampler_main, uv + float2(-1, 1)*pix)*0.75;\n           myblur += tex2D(sampler_main, uv + float2( 0,-1)*pix);\n           myblur += tex2D(sampler_main, uv + float2( 0, 1)*pix);\n           myblur += tex2D(sampler_main, uv + float2(-1, 0)*pix);\n           myblur += tex2D(sampler_main, uv + float2( 1, 0)*pix);\n    myblur*=0.1;\n    float3 pre3 = myblur*myblur*myblur;//pre*pre*pre;\n    ret = pre3;//pre*pre*pre;\n}"}