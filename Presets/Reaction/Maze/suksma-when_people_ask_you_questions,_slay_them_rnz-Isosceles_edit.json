{"version":2,"baseVals":{"rating":5,"gammaadj":1.42,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.528,"wave_scale":5.278,"wave_smoothing":0.63,"wave_mystery":-0.28,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"sx":1.00183,"sy":1.00183,"wave_r":0.65,"wave_g":0.65,"wave_b":0.3,"ob_size":0.005,"ob_b":0.4,"ob_a":0.08,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":33.152,"mv_y":28.8,"mv_dx":0.006,"mv_l":2.5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.48454,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ang = sample*6.282*8+time*.2;\nrad = sin(sample*6.282+time*.2)*.1+.2;\nrad = rad+.01*value1;\nx = .5+rad*cos(ang)+sin(time*.211)*.3;\ny = .5+rad*sin(ang)+sin(time*.205)*.3;\nr = sin(sample*6.258+time*.21)*.3+.5;\nb = sin(sample*6.258+time*.315)*.4+.5;\n\na =max(0,sin(sample*6.282*(sin(time*.2)*10+15)));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ang = sample*6.282*8+time*.2;\nrad = sin(sample*6.282+time*.2)*.1+.2;\nrad = rad+.01*value1;\nx = .5+rad*cos(ang)+sin(time*.211)*.3;\ny = .5+rad*sin(ang)+sin(time*.205)*.3;\nr = sin(sample*6.258+time*.21)*.3+.5;\nb = sin(sample*6.258+time*.315)*.4+.5;\n\na =max(0,sin(sample*6.282*(sin(time*.2)*10+15)));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tb=0;a.cy_b=0;a.q1=0;a.tt=0;a.rot_b=0;a.q4=0;a.cy_c=0;a.tm=0;a.sect_a=0;a.sect_b=0;a.sect_c=0;a.q2=0;a.rot_c=0;a.rot_a=0;a.q3=0;a.cy_a=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.decay=.997;a.zoom=1;a.q1=.08;a.tb+=div(a.bass,65);a.rot_a=.01*Math.sin(a.tb);a.tm+=div(a.mid,65);a.rot_b=.01*Math.sin(a.tm);a.tt+=div(a.treb,65);a.rot_c=.01*Math.sin(a.tt);a.q2=a.rot_a;a.q3=a.rot_b;a.q4=a.rot_c;","pixel_eqs_str":"a.sx=1.015;a.sy=1.015;a.sect_a=.00001<Math.abs(below(a.x,.333))?1:0;a.sect_b=.00001<Math.abs(below(a.x,.666))?1:0;a.sect_b=.00001<Math.abs(above(a.x,.333))?a.sect_b:0;a.sect_c=.00001<Math.abs(above(a.x,.666))?1:0;a.cy_a=(Math.sin(div(a.time,4))+Math.sin(div(a.time,1.3)))*a.q1+.5;a.cy_b=(Math.sin(div(a.time,3))+Math.sin(div(a.time,1.1)))*a.q1+.5;a.cy_c=(Math.sin(div(a.time,2))+Math.sin(div(a.time,.7)))*a.q1+.5;a.cx=.166*a.sect_a+.5*a.sect_b+.833*a.sect_c;a.cy=a.sect_a*a.cy_a+\na.sect_b*a.cy_b+a.sect_c*a.cy_c;a.rot=a.sect_a*a.q2+a.sect_b*a.q3+a.sect_c*a.q4;","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"decay=0.997;\nzoom=1.000;\nq1=0.08;\n\ntb=tb+bass/65;\nrot_a=sin(tb)*0.01;\ntm=tm+mid/65;\nrot_b=sin(tm)*0.01;\ntt=tt+treb/65;\nrot_c=sin(tt)*0.01;\n\nq2=rot_a;\nq3=rot_b;\nq4=rot_c","pixel_eqs_eel":"sx=1.015;\nsy=1.015;\n\n\nsect_a=if ( below(x,0.333), 1, 0 );\nsect_b=if ( below(x,0.666), 1, 0 );\nsect_b=if ( above(x,0.333), sect_b, 0 );\nsect_c=if ( above(x,0.666), 1, 0 );\n\ncy_a=( sin(time/4)+sin(time/1.3) )*q1 + 0.5;\ncy_b=( sin(time/3)+sin(time/1.1) )*q1 + 0.5;\ncy_c=( sin(time/2)+sin(time/0.7) )*q1 + 0.5;\n\ncx=sect_a*0.166 + sect_b*0.5 + sect_c*0.833;\ncy=sect_a*cy_a + sect_b*cy_b + sect_c*cy_c;\n\n\nrot=sect_a*q2 + sect_b*q3 + sect_c*q4","warp":" shader_body { \n  vec3 two_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec3 tmpvar_3;\n  tmpvar_3.z = 0.0;\n  tmpvar_3.xy = abs((uv - uv_orig));\n  float tmpvar_4;\n  tmpvar_4 = ((dot (tmpvar_3, vec3(0.32, 0.49, 0.29)) * 0.6) + 0.003);\n  vec2 tmpvar_5;\n  tmpvar_5.x = (uv.x - tmpvar_4);\n  tmpvar_5.y = uv.y;\n  vec2 tmpvar_6;\n  tmpvar_6.x = (uv.x - tmpvar_4);\n  tmpvar_6.y = (uv.y + tmpvar_4);\n  vec2 tmpvar_7;\n  tmpvar_7.x = uv.x;\n  tmpvar_7.y = (uv.y - tmpvar_4);\n  two_1 = (max (abs(\n    (tmpvar_2.xyz - texture (sampler_main, tmpvar_6).xyz)\n  ), abs(\n    (tmpvar_2.xyz - texture (sampler_main, tmpvar_7).xyz)\n  )) - (roam_sin.xyz * roam_cos.zxy));\n  vec3 tmpvar_8;\n  tmpvar_8.z = 0.0;\n  tmpvar_8.xy = roam_sin.xy;\n  vec3 tmpvar_9;\n  tmpvar_9.z = 0.0;\n  tmpvar_9.xy = roam_cos.yx;\n  vec3 tmpvar_10;\n  tmpvar_10.z = 0.0;\n  tmpvar_10.x = dot (tmpvar_8, vec3(0.32, 0.49, 0.29));\n  tmpvar_10.y = dot (tmpvar_9, vec3(0.32, 0.49, 0.29));\n  two_1 = (two_1 * texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * \n    (((uv.xyy + (tmpvar_10 * 0.5)) * texsize.xyy) * texsize_noisevol_hq.zww)\n  ) + (vec3(0.0, 0.0, 0.2) * time))).xyz);\n  vec2 tmpvar_11;\n  tmpvar_11.x = uv.x;\n  tmpvar_11.y = (uv.y + tmpvar_4);\n  vec2 tmpvar_12;\n  tmpvar_12.x = (uv.x + tmpvar_4);\n  tmpvar_12.y = (uv.y - tmpvar_4);\n  vec2 tmpvar_13;\n  tmpvar_13.x = (uv.x + tmpvar_4);\n  tmpvar_13.y = uv.y;\n  vec3 tmpvar_14;\n  tmpvar_14 = clamp (max (max (\n    max (abs((tmpvar_2.xyz - texture (sampler_main, (uv - vec2(tmpvar_4))).xyz)), abs((tmpvar_2.xyz - texture (sampler_main, tmpvar_5).xyz)))\n  , two_1), max (\n    max (max (abs((tmpvar_2.xyz - tmpvar_2.xyz)), abs((tmpvar_2.xyz - texture (sampler_main, tmpvar_11).xyz))), max (abs((tmpvar_2.xyz - texture (sampler_main, tmpvar_12).xyz)), abs((tmpvar_2.xyz - texture (sampler_main, tmpvar_13).xyz))))\n  , \n    abs((tmpvar_2.xyz - texture (sampler_main, (uv + vec2(tmpvar_4))).xyz))\n  )), 0.0, 1.0);\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = ((tmpvar_14 + (texture (sampler_main, \n    (uv + (tmpvar_14.xy * 0.01))\n  ).xyz * 0.8)) / 1.4);\n  ret = tmpvar_15.xyz;\n }","comp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  vec3 base_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (0.448 + q9);\n  tmpvar_2.y = (0.701 + q10);\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * 1.81);\n  vec2 tmpvar_4;\n  tmpvar_4.x = ((tmpvar_3.x * tmpvar_3.x) - (tmpvar_3.y * tmpvar_3.y));\n  tmpvar_4.y = ((2.0 * tmpvar_3.x) * tmpvar_3.y);\n  xlat_mutabled = (texsize.zw * 3.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  base_1 = (texture (sampler_main, uv).xyz - (roam_sin.wzy * roam_cos.xyz));\n  vec3 tmpvar_5;\n  tmpvar_5.z = 0.0;\n  tmpvar_5.xy = roam_sin.xy;\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.0;\n  tmpvar_6.xy = roam_cos.yx;\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.0;\n  tmpvar_7.x = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  tmpvar_7.y = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  base_1 = (base_1 * texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * \n    (((uv.xyy + (tmpvar_7 * 0.5)) * texsize.xyy) * texsize_noisevol_hq.zww)\n  ) + (vec3(0.0, 0.0, 0.2) * time))).xyz);\n  vec2 tmpvar_8;\n  tmpvar_8.x = xlat_mutabledx.x;\n  tmpvar_8.y = xlat_mutabledy.x;\n  float tmpvar_9;\n  tmpvar_9 = sqrt(dot (tmpvar_8, tmpvar_8));\n  vec2 tmpvar_10;\n  tmpvar_10.x = xlat_mutabledx.y;\n  tmpvar_10.y = xlat_mutabledy.y;\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = mix (mix (mix (\n    mix (((vec3(0.6, 0.5, 0.4) * base_1.x) * ((\n      (-(xlat_mutabledx) + xlat_mutabledy)\n     + 1.0) * 1.4).x), (vec3(4.0, 2.0, 1.0) * tmpvar_9), vec3((tmpvar_9 * 2.0)))\n  , vec3(0.3, 0.0, 0.0), vec3(\n    (texture (sampler_main, (tmpvar_4 + tmpvar_2)).z * 4.0)\n  )), vec3(0.0, 0.0, 1.4), vec3((\n    sqrt(dot (tmpvar_10, tmpvar_10))\n   * 1.4))), vec3(0.5, 0.5, 0.5), vec3((base_1.y * 2.0)));\n  ret = tmpvar_11.xyz;\n }","warp_hlsl":"shader_body\n{ret=GetPixel(uv);\nfloat d=lum(abs(uv-uv_orig))*0.6+0.003;\nfloat3 one,two,three,four,five;\nfloat3 sex,drugs,rock,roll,bugs;\nfloat3 maxx;\none=max(\nabs(ret-GetPixel(float2(uv.x-d,uv.y-d))),\nabs(ret-GetPixel(float2(uv.x-d,uv.y)))\n);\ntwo=max(\nabs(ret-GetPixel(float2(uv.x-d,uv.y+d))),\nabs(ret-GetPixel(float2(uv.x,uv.y-d)))\n);\ntwo-=roam_sin*roam_cos.zxy;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy+float3(lum(roam_sin.xy),\n                                           lum(roam_cos.yx),\n                                           0)*0.5\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.2 \n                     );\ntwo *= (noise2)*1; \nthree=max(\nabs(ret-GetPixel(float2(uv.x,uv.y))),\nabs(ret-GetPixel(float2(uv.x,uv.y+d)))\n);\nfour=max(\nabs(ret-GetPixel(float2(uv.x+d,uv.y-d))),\nabs(ret-GetPixel(float2(uv.x+d,uv.y)))\n);\nfive=abs(ret-GetPixel(float2(uv.x+d,uv.y+d)));\nsex=abs(one-ret);\ndrugs=abs(two-ret);\nrock=abs(three-ret);\nroll=abs(four-ret);\nbugs=abs(five-ret);\nmaxx=max(one,max(two,max(three,max(four,five))));\nmaxx=saturate(maxx);\nret=maxx;\nret=(ret+GetPixel(uv+ret.xy*0.01)*0.8)/1.4;\n}","comp_hlsl":"float2 d, uv_y;\nfloat3 dx, dy;\nshader_body\n{\n\n float zoom =1.81;\n float2 c = float2(0.448+q9,0.701+q10);\n float2 my_uv2 = (uv-0.5)*zoom;\n my_uv2 = float2(my_uv2.x*my_uv2.x - my_uv2.y*my_uv2.y, 2*my_uv2.x*my_uv2.y) + c;\n float julia = GetPixel(my_uv2).z;\n\n    d = texsize.zw*3;\n    dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat3 base = GetPixel(uv);\nbase-=roam_sin.wzy*roam_cos;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy+float3(lum(roam_sin.xy),\n                                           lum(roam_cos.yx),\n                                           0)*0.5\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.2 \n                     );\nbase *= (noise2)*1; \nfloat3 emboss = (-dx + dy + 1)*1.4;\nfloat grad_x = length(float2(dx.x,dy.x));\nfloat grad_y = length(float2(dx.y,dy.y));\n\n\nret = lerp( float3(0.6,0.5,0.4)*base.x*emboss.x,\n            float3(4,2,1)*grad_x,\n            grad_x*2\n          ); \n\n\nret = lerp(ret, float3(0.3,0,0), julia*4);\nret = lerp(ret, float3(0,0,1.4), grad_y*1.4);\nret = lerp(ret, 0.5, base.y*2);\n}\n"}