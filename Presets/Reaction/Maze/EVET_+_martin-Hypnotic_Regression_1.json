{"version":2,"baseVals":{"rating":5,"gammaadj":1.21,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wave_a":0.625,"wave_scale":0.242,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":16.016,"zoomexp":11.56276,"fshader":1,"zoom":1.05971,"warp":0.13126,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"scaling":2.0231,"smoothing":0,"r":0},"init_eqs_str":"a.tt3=0;a.tt2=0;a.tt1=0;a.d=0;a.t2=0;a.t3=0;a.t4=0;a.cl=0;","frame_eqs_str":"","point_eqs_str":"a.tt3=.6*a.tt3+1*a.value1;a.tt2=.7*a.tt2+.2*a.tt3;a.tt1=.8*a.tt1+.1*a.tt2;a.d=.9*a.d+.2*a.tt1;a.y=.5+a.d*a.sample*(1-a.sample)*4;a.x=-.05+1.1*a.sample;","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\ntt2 = tt2*0.7 + tt3*0.2;\ntt1 = tt1*0.8 + tt2*0.1;\nd = d*0.9 + tt1*0.2;\n\ny = 0.5 + d*sample*(1-sample)*4;\nx =  -0.05 + sample*1.1;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.y3=0;a.y1=0;a.xx=0;a.q12=0;a.x1=0;a.vx3=0;a.q6=0;a.dt=0;a.q1=0;a.q5=0;a.q9=0;a.d1=0;a.si1=0;a.vx4=0;a.grav=0;a.x3=0;a.d2=0;a.q11=0;a.q10=0;a.xx2=0;a.q4=0;a.yy1=0;a.vy4=0;a.dir=0;a.bounce=0;a.x4=0;a.r=0;a.x2=0;a.vy2=0;a.y2=0;a.q2=0;a.m1=0;a.spring=0;a.si2=0;a.vx2=0;a.q3=0;a.resist=0;a.yy=0;a.y4=0;a.q7=0;a.vy3=0;a.xx1=0;a.b1=0;a.q8=0;","frame_eqs_str":"a.xx1=.9*a.xx1+.01*a.bass;a.xx2=.9*a.xx2+.01*a.treb;a.yy1=.94*a.yy1+.0075*(a.treb+a.bass);a.x1=.5+2*(a.xx1-a.xx2);a.y1=.4+a.yy1;a.x1=Math.max(0,Math.min(1,a.x1));a.y1=Math.max(0,Math.min(1,a.y1));a.spring=10;a.grav=.5;a.resist=1;a.bounce=.75;a.dt=.0005*div(60,a.fps);a.vx2=a.vx2*(1-a.resist*a.dt)+a.dt*(a.x1+a.x3-2*a.x2)*a.spring;a.vy2=a.vy2*(1-a.resist*a.dt)+a.dt*((a.y1+a.y3-2*a.y2)*a.spring-a.grav);a.vx3=a.vx3*(1-a.resist*a.dt)+a.dt*(a.x2+a.x4-2*a.x3)*a.spring;a.vy3=a.vy3*(1-\na.resist*a.dt)+a.dt*((a.y2+a.y4-2*a.y3)*a.spring-a.grav);a.vx4=a.vx4*(1-a.resist*a.dt)+a.dt*(a.x3-a.x4)*a.spring;a.vy4=a.vy4*(1-a.resist*a.dt)+a.dt*((a.y3-a.y4)*a.spring-a.grav);a.x2+=a.vx2;a.y2+=a.vy2;a.x3+=a.vx3;a.y3+=a.vy3;a.x4+=a.vx4;a.y4+=a.vy4;a.vx2=.00001<Math.abs(above(a.x2,0))?a.vx2:Math.abs(a.vx2)*a.bounce;a.vx2=.00001<Math.abs(below(a.x2,1))?a.vx2:-Math.abs(a.vx2)*a.bounce;a.vx3=.00001<Math.abs(above(a.x3,0))?a.vx3:Math.abs(a.vx3)*a.bounce;a.vx3=.00001<Math.abs(below(a.x3,1))?a.vx3:-Math.abs(a.vx3)*\na.bounce;a.vx4=.00001<Math.abs(above(a.x4,0))?a.vx4:Math.abs(a.vx4)*a.bounce;a.vx4=.00001<Math.abs(below(a.x4,1))?a.vx4:-Math.abs(a.vx4)*a.bounce;a.vy2=.00001<Math.abs(above(a.y2,0))?a.vy2:Math.abs(a.vy2)*a.bounce;a.vy2=.00001<Math.abs(below(a.y2,1))?a.vy2:-Math.abs(a.vy2)*a.bounce;a.vy3=.00001<Math.abs(above(a.y3,0))?a.vy3:Math.abs(a.vy3)*a.bounce;a.vy3=.00001<Math.abs(below(a.y3,1))?a.vy3:-Math.abs(a.vy3)*a.bounce;a.vy4=.00001<Math.abs(above(a.y4,0))?a.vy4:Math.abs(a.vy4)*a.bounce;a.vy4=.00001<\nMath.abs(below(a.y4,1))?a.vy4:-Math.abs(a.vy4)*a.bounce;a.q1=a.x1;a.q2=a.x2;a.q3=a.x3;a.q4=a.x4;a.q5=a.y1;a.q6=a.y2;a.q7=a.y3;a.q8=a.y4;a.q9=div(1,a.aspectx);a.q10=div(1,a.aspecty);a.zoom=1;a.r=.96*a.r+(a.x1-.5);a.rot=.1*a.r;a.q12=Math.atan2(a.vx4,a.vy4);a.q11=sqrt(a.vx4*a.vx4+a.vy4*a.vy4);a.zoom=1.001;a.rot=0;a.warp=.2;a.wave_a=0;","pixel_eqs_str":"a.dir=-a.q12+Math.asin(1);a.b1=.1;a.m1=25*a.q11;a.xx=a.q4;a.yy=1-a.q8;a.x1=a.xx-Math.sin(a.dir)*a.b1;a.y1=a.yy-Math.cos(a.dir)*a.b1;a.x2=a.xx+Math.sin(a.dir)*a.b1;a.y2=a.yy+Math.cos(a.dir)*a.b1;a.d1=sqrt((a.x1-a.x)*(a.x1-a.x)+(a.y1-a.y)*(a.y1-a.y))-2*a.b1;a.d2=sqrt((a.x2-a.x)*(a.x2-a.x)+(a.y2-a.y)*(a.y2-a.y))-2*a.b1;a.si1=sigmoid(-a.d1,1E3);a.si2=sigmoid(-a.d2,1E3);a.dx=2*(a.si1*Math.sin(a.y1-a.y)*a.m1*a.d1-a.si2*Math.sin(a.y2-a.y)*a.m1*a.d2);a.dy=2*(-a.si1*Math.sin(a.x1-a.x)*\na.m1*a.d1+a.si2*Math.sin(a.x2-a.x)*a.m1*a.d2);","init_eqs_eel":"","frame_eqs_eel":"xx1 = xx1*0.9 + (bass)*0.01;\nxx2 = xx2*0.9 + (treb)*0.01;\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\n\nx1 = 0.5 + (xx1-xx2)*2;\ny1 = 0.4 + yy1;\n\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\n\nspring = 10;\ngrav = .5;\nresist = 1;\nbounce = 0.75;\ndt = 0.0005*(60/fps);\n\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\n\nx2 = x2 + vx2;\ny2 = y2 + vy2;\nx3 = x3 + vx3;\ny3 = y3 + vy3;\nx4 = x4 + vx4;\ny4 = y4 + vy4;\n\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\n\n\nq1 = x1; q2 = x2; q3 = x3; q4 = x4;\nq5 = y1; q6 = y2; q7 = y3; q8 = y4;\nq9 =1/ aspectX;\nq10 = 1/aspectY;\n\nzoom = 1;\nr = r*0.96 +(x1-0.5);\nrot = (r*0.1);\n\nq12 = atan2(vx4,vy4);\nq11 = sqrt(vx4*vx4 + vy4*vy4);\n\nzoom = 1.001;\nrot = 0.00;\nwarp = 0.2;\nwave_a = 0;","pixel_eqs_eel":"dir = -q12 + asin(1);\n\nb1 = 0.1;\nm1 = q11*25;\n\nxx = q4;\nyy = 1-q8;\n\n\nx1 = xx  -sin(dir)*b1;\ny1 = yy  -cos(dir)*b1;\nx2 = xx  +sin(dir)*b1;\ny2 = yy  +cos(dir)*b1;\n\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\n\nsi1 = sigmoid(-d1,1000);\nsi2 = sigmoid(-d2,1000);\n\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2)*2;\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2)*2;","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec3 tmpvar_3;\n  tmpvar_3.z = 0.0;\n  tmpvar_3.xy = abs((uv - uv_orig));\n  float tmpvar_4;\n  tmpvar_4 = ((dot (tmpvar_3, vec3(0.32, 0.49, 0.29)) * 0.6) + 0.003);\n  vec2 tmpvar_5;\n  tmpvar_5.x = (uv.x - tmpvar_4);\n  tmpvar_5.y = uv.y;\n  vec2 tmpvar_6;\n  tmpvar_6.x = (uv.x - tmpvar_4);\n  tmpvar_6.y = (uv.y + tmpvar_4);\n  vec2 tmpvar_7;\n  tmpvar_7.x = uv.x;\n  tmpvar_7.y = (uv.y - tmpvar_4);\n  vec2 tmpvar_8;\n  tmpvar_8.x = uv.x;\n  tmpvar_8.y = (uv.y + tmpvar_4);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (uv.x + tmpvar_4);\n  tmpvar_9.y = (uv.y - tmpvar_4);\n  vec2 tmpvar_10;\n  tmpvar_10.x = (uv.x + tmpvar_4);\n  tmpvar_10.y = uv.y;\n  vec3 tmpvar_11;\n  tmpvar_11 = clamp (max (max (\n    max (abs((tmpvar_2.xyz - texture (sampler_main, (uv - vec2(tmpvar_4))).xyz)), abs((tmpvar_2.xyz - texture (sampler_main, tmpvar_5).xyz)))\n  , \n    max (abs((tmpvar_2.xyz - texture (sampler_main, tmpvar_6).xyz)), abs((tmpvar_2.xyz - texture (sampler_main, tmpvar_7).xyz)))\n  ), max (\n    max (max (abs((tmpvar_2.xyz - tmpvar_2.xyz)), abs((tmpvar_2.xyz - texture (sampler_main, tmpvar_8).xyz))), max (abs((tmpvar_2.xyz - texture (sampler_main, tmpvar_9).xyz)), abs((tmpvar_2.xyz - texture (sampler_main, tmpvar_10).xyz))))\n  , \n    abs((tmpvar_2.xyz - texture (sampler_main, (uv + vec2(tmpvar_4))).xyz))\n  )), 0.0, 1.0);\n  ret_1 = tmpvar_11;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((tmpvar_11.x > (q21 * q13)) && (tmpvar_11.x <= (q24 * q11)))) {\n    ret_1.y = (tmpvar_11.y + (tmpvar_12.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (tmpvar_11.z + (tmpvar_12.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (tmpvar_11.x + (tmpvar_12.z * 0.5));\n  };\n  ret_1 = ((ret_1 + (texture (sampler_main, \n    (uv + (ret_1.xy * 0.01))\n  ).xyz * 0.8)) / 1.4);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_1;\n  ret = tmpvar_13.xyz;\n }","comp":"vec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv2;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_3 = (1.0 - fract((0.25 + q29)));\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\n  vec2 tmpvar_4;\n  tmpvar_4 = fract(((\n    (2.0 * uv_1)\n   * dist_3) + 0.5));\n  xlat_mutableneu = (((\n    (texture (sampler_blur1, tmpvar_4).xyz * scale1)\n   + bias1) * 1.5) - texture (sampler_main, tmpvar_4).xyz);\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\n  xlat_mutableuv2.x = -(uv_1.y);\n  xlat_mutableuv2.y = uv_1.x;\n  dist_3 = (1.0 - fract((0.5 + q29)));\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\n  vec2 tmpvar_5;\n  tmpvar_5 = fract(((\n    (2.0 * xlat_mutableuv2)\n   * dist_3) + 0.5));\n  xlat_mutableneu = (((\n    (texture (sampler_blur1, tmpvar_5).xyz * scale1)\n   + bias1) * 1.5) - texture (sampler_main, tmpvar_5).xyz);\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  dist_3 = (1.0 - fract((0.75 + q29)));\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\n  vec2 tmpvar_6;\n  tmpvar_6 = fract(((\n    (2.0 * uv_1)\n   * dist_3) + 0.5));\n  xlat_mutableneu = (((\n    (texture (sampler_blur1, tmpvar_6).xyz * scale1)\n   + bias1) * 1.5) - texture (sampler_main, tmpvar_6).xyz);\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  xlat_mutableuv2.x = -(uv_1.y);\n  xlat_mutableuv2.y = uv_1.x;\n  dist_3 = (1.0 - fract((1.0 + q29)));\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\n  vec2 tmpvar_7;\n  tmpvar_7 = fract(((\n    (2.0 * xlat_mutableuv2)\n   * dist_3) + 0.5));\n  xlat_mutableneu = (((\n    (texture (sampler_blur1, tmpvar_7).xyz * scale1)\n   + bias1) * 1.5) - texture (sampler_main, tmpvar_7).xyz);\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (xlat_mutableret1 * 6.0);\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{ret=GetPixel(uv);\nfloat d=lum(abs(uv-uv_orig))*0.6+0.003;\nfloat3 one,two,three,four,five;\nfloat3 sex,drugs,rock,roll,bugs;\nfloat3 maxx;\none=max(\nabs(ret-GetPixel(float2(uv.x-d,uv.y-d))),\nabs(ret-GetPixel(float2(uv.x-d,uv.y)))\n);\ntwo=max(\nabs(ret-GetPixel(float2(uv.x-d,uv.y+d))),\nabs(ret-GetPixel(float2(uv.x,uv.y-d)))\n);\nthree=max(\nabs(ret-GetPixel(float2(uv.x,uv.y))),\nabs(ret-GetPixel(float2(uv.x,uv.y+d)))\n);\nfour=max(\nabs(ret-GetPixel(float2(uv.x+d,uv.y-d))),\nabs(ret-GetPixel(float2(uv.x+d,uv.y)))\n);\nfive=abs(ret-GetPixel(float2(uv.x+d,uv.y+d)));\nsex=abs(one-ret);\ndrugs=abs(two-ret);\nrock=abs(three-ret);\nroll=abs(four-ret);\nbugs=abs(five-ret);\nmaxx=max(one,max(two,max(three,max(four,five))));\nmaxx=saturate(maxx);\nret=maxx;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \nret=(ret+GetPixel(uv+ret.xy*0.01)*0.8)/1.4;\n}","comp_hlsl":"float3 ret1, neu;\nfloat2 uv2, uv3;\nshader_body\n{\nfloat c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat dist = 1;\nfloat inten = 1;\nret1 = 0;\nint anz = 4;\nint n = 1;\nwhile (n <= anz) {\n    c = n%2;\n    s = (n+1)%2;\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n//    uv2 *= aspect.yx;\n    dist = 1-frac(1.0/anz*n+q29);\n    inten =  sqrt(dist)*(1-dist*dist);\n    uv3 = frac(2*uv2*dist +.5-.0*dist);\n\n    neu = GetBlur1(uv3)*1.5-GetPixel(uv3);\n\n    ret1 = max(ret1,neu*inten);\nn++;\n}\n\nret = ret1*6;\n\n}"}