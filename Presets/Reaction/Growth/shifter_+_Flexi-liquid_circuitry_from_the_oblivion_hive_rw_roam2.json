{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_dots":1,"wave_brighten":0,"wave_a":4.1,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":0.107,"zoomexp":4.10046,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_x":0.1,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.33004,"tex_zoom":1.22019,"border_a":0},"init_eqs_str":"a.s=0;a.f=0;a.q=0;a.gg=0;a.p=0;a.vola=0;a.volb=0;a.t=0;a.l=0;a.bb=0;a.h=0;a.m=0;a.monitor=0;a.rr=0;a.cc=0;","frame_eqs_str":"a.vola=.1*(a.bass_att+a.mid_att+a.treb_att);a.volb=.3*a.treb_att;a.h=.45*Math.sin(.1*(a.time+20))+.45;a.s=Math.min(a.volb,.9);a.l=Math.min(a.vola,.9);a.monitor=a.h;a.cc=mod(6*a.h,6);a.f=6*a.h-a.cc;a.m=a.l;a.p=a.l*(1-a.s);a.q=a.l*(1-a.s*a.f);a.t=a.l*(1-a.s*(1-a.f));a.rr=.00001<Math.abs(equal(a.cc,0))?a.m:.00001<Math.abs(equal(a.cc,1))?a.q:.00001<Math.abs(equal(a.cc,2))?a.p:.00001<Math.abs(equal(a.cc,3))?a.p:.00001<Math.abs(equal(a.cc,4))?a.t:a.m;a.gg=.00001<Math.abs(equal(a.cc,\n0))?a.t:.00001<Math.abs(equal(a.cc,1))?a.m:.00001<Math.abs(equal(a.cc,2))?a.m:.00001<Math.abs(equal(a.cc,3))?a.q:(equal(a.cc,4),a.p);a.bb=.00001<Math.abs(equal(a.cc,0))?a.p:.00001<Math.abs(equal(a.cc,1))?a.p:.00001<Math.abs(equal(a.cc,2))?a.t:.00001<Math.abs(equal(a.cc,3))?a.m:.00001<Math.abs(equal(a.cc,4))?a.m:a.q;a.r=a.rr;a.g=a.gg;a.b=a.bb;a.r2=a.rr;a.g2=a.gg;a.b2=a.bb;a.x=.4*(.4*Math.cos(a.time)+.4+.2*Math.sin(.3*a.time))+.4;a.y=.4*(.4*Math.sin(a.time)+.4+.2*Math.sin(.5*a.time))+.4;","init_eqs_eel":"","frame_eqs_eel":"\nvolA=(bass_att+mid_att+treb_att)*.1;\nvolB=treb_att*.3;\n\nh=sin((time+20)*.1)*.45+.45;\ns=min(volB,.9);\nl=min(volA,.9);\nmonitor=h;\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//\n//                            HSL to RGB  by PieturP\n//\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\n//\ncc=6*h%6;f=6*h-cc;m=l;p=l*(1-s);q=l*(1-s*f);t=l*(1-s*(1-f));\nrr=if(equal(cc,0),m,if(equal(cc,1),q,if(equal(cc,2),p,if(equal(cc,3),p,if(equal(cc,4),t,m)))));\ngg=if(equal(cc,0),t,if(equal(cc,1),m,if(equal(cc,2),m,if(equal(cc,3),q,if(equal(cc,4),p,p)))));\nbb=if(equal(cc,0),p,if(equal(cc,1),p,if(equal(cc,2),t,if(equal(cc,3),m,if(equal(cc,4),m,q)))));\n///////////////////////////////////////////////////////////////////////////////////////////////\nr=rr;\ng=gg;\nb=bb;\nr2=rr;\ng2=gg;\nb2=bb;\nx=((cos(time)*.4+.4)+sin(time*.3)*.2)*.4+.4;\ny=((sin(time)*.4+.4)+sin(time*.5)*.2)*.4+.4;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.36457,"border_a":0.02},"init_eqs_str":"a.s=0;a.f=0;a.q=0;a.gg=0;a.p=0;a.vola=0;a.volb=0;a.t=0;a.l=0;a.bb=0;a.h=0;a.m=0;a.monitor=0;a.rr=0;a.cc=0;","frame_eqs_str":"a.vola=.1*(a.bass_att+a.mid_att+a.treb_att);a.volb=.3*a.treb_att;a.h=.45*Math.sin(.1*(a.time+10))+.45;a.s=Math.min(a.volb,.9);a.l=Math.min(a.vola,.9);a.monitor=a.h;a.cc=mod(6*a.h,6);a.f=6*a.h-a.cc;a.m=a.l;a.p=a.l*(1-a.s);a.q=a.l*(1-a.s*a.f);a.t=a.l*(1-a.s*(1-a.f));a.rr=.00001<Math.abs(equal(a.cc,0))?a.m:.00001<Math.abs(equal(a.cc,1))?a.q:.00001<Math.abs(equal(a.cc,2))?a.p:.00001<Math.abs(equal(a.cc,3))?a.p:.00001<Math.abs(equal(a.cc,4))?a.t:a.m;a.gg=.00001<Math.abs(equal(a.cc,\n0))?a.t:.00001<Math.abs(equal(a.cc,1))?a.m:.00001<Math.abs(equal(a.cc,2))?a.m:.00001<Math.abs(equal(a.cc,3))?a.q:(equal(a.cc,4),a.p);a.bb=.00001<Math.abs(equal(a.cc,0))?a.p:.00001<Math.abs(equal(a.cc,1))?a.p:.00001<Math.abs(equal(a.cc,2))?a.t:.00001<Math.abs(equal(a.cc,3))?a.m:.00001<Math.abs(equal(a.cc,4))?a.m:a.q;a.r=a.rr;a.g=a.gg;a.b=a.bb;a.r2=a.rr;a.g2=a.gg;a.b2=a.bb;a.y=.4*(.4*Math.cos(a.time)+.4+.2*Math.sin(.3*a.time))+.4;a.x=.4*(.4*Math.sin(a.time)+.4+.2*Math.sin(.5*a.time))+.4;a.border_r=\na.rr;a.border_g=a.gg;a.border_b=a.bb;a.ang=a.time;a.rad=.5*Math.sin(a.time)+.5;","init_eqs_eel":"","frame_eqs_eel":"\nvolA=(bass_att+mid_att+treb_att)*.1;\nvolB=treb_att*.3;\n\nh=sin((time+10)*.1)*.45+.45;\ns=min(volB,.9);\nl=min(volA,.9);\nmonitor=h;\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//\n//                            HSL to RGB  by PieturP\n//\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\n//\ncc=6*h%6;f=6*h-cc;m=l;p=l*(1-s);q=l*(1-s*f);t=l*(1-s*(1-f));\nrr=if(equal(cc,0),m,if(equal(cc,1),q,if(equal(cc,2),p,if(equal(cc,3),p,if(equal(cc,4),t,m)))));\ngg=if(equal(cc,0),t,if(equal(cc,1),m,if(equal(cc,2),m,if(equal(cc,3),q,if(equal(cc,4),p,p)))));\nbb=if(equal(cc,0),p,if(equal(cc,1),p,if(equal(cc,2),t,if(equal(cc,3),m,if(equal(cc,4),m,q)))));\n///////////////////////////////////////////////////////////////////////////////////////////////\nr=rr;\ng=gg;\nb=bb;\nr2=rr;\ng2=gg;\nb2=bb;\ny=((cos(time)*.4+.4)+sin(time*.3)*.2)*.4+.4;\nx=((sin(time)*.4+.4)+sin(time*.5)*.2)*.4+.4;\nborder_r=rr;\nborder_g=gg;\nborder_b=bb;\nang=time;\nrad=sin(time)*.5+.5;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.36457,"border_a":0.02},"init_eqs_str":"a.s=0;a.f=0;a.q=0;a.gg=0;a.p=0;a.vola=0;a.volb=0;a.t=0;a.l=0;a.bb=0;a.h=0;a.m=0;a.monitor=0;a.rr=0;a.cc=0;","frame_eqs_str":"a.vola=.1*(a.bass_att+a.mid_att+a.treb_att);a.volb=.3*a.treb_att;a.h=.45*Math.sin(.1*(a.time+30))+.45;a.s=Math.min(a.volb,.9);a.l=Math.min(a.vola,.9);a.monitor=a.h;a.cc=mod(6*a.h,6);a.f=6*a.h-a.cc;a.m=a.l;a.p=a.l*(1-a.s);a.q=a.l*(1-a.s*a.f);a.t=a.l*(1-a.s*(1-a.f));a.rr=.00001<Math.abs(equal(a.cc,0))?a.m:.00001<Math.abs(equal(a.cc,1))?a.q:.00001<Math.abs(equal(a.cc,2))?a.p:.00001<Math.abs(equal(a.cc,3))?a.p:.00001<Math.abs(equal(a.cc,4))?a.t:a.m;a.gg=.00001<Math.abs(equal(a.cc,\n0))?a.t:.00001<Math.abs(equal(a.cc,1))?a.m:.00001<Math.abs(equal(a.cc,2))?a.m:.00001<Math.abs(equal(a.cc,3))?a.q:(equal(a.cc,4),a.p);a.bb=.00001<Math.abs(equal(a.cc,0))?a.p:.00001<Math.abs(equal(a.cc,1))?a.p:.00001<Math.abs(equal(a.cc,2))?a.t:.00001<Math.abs(equal(a.cc,3))?a.m:.00001<Math.abs(equal(a.cc,4))?a.m:a.q;a.r=a.rr;a.g=a.gg;a.b=a.bb;a.r2=a.rr;a.g2=a.gg;a.b2=a.bb;a.y=.4*(.53*Math.cos(a.time)+.4+.2*Math.sin(.32*a.time))+.4;a.x=.4*(.5*Math.sin(a.time)+.4+.2*Math.sin(.45*a.time))+.4;a.border_r=\na.rr;a.border_g=a.gg;a.border_b=a.bb;a.ang=a.time;","init_eqs_eel":"","frame_eqs_eel":"\nvolA=(bass_att+mid_att+treb_att)*.1;\nvolB=treb_att*.3;\n\nh=sin((time+30)*.1)*.45+.45;\ns=min(volB,.9);\nl=min(volA,.9);\nmonitor=h;\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//\n//                            HSL to RGB  by PieturP\n//\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\n//\ncc=6*h%6;f=6*h-cc;m=l;p=l*(1-s);q=l*(1-s*f);t=l*(1-s*(1-f));\nrr=if(equal(cc,0),m,if(equal(cc,1),q,if(equal(cc,2),p,if(equal(cc,3),p,if(equal(cc,4),t,m)))));\ngg=if(equal(cc,0),t,if(equal(cc,1),m,if(equal(cc,2),m,if(equal(cc,3),q,if(equal(cc,4),p,p)))));\nbb=if(equal(cc,0),p,if(equal(cc,1),p,if(equal(cc,2),t,if(equal(cc,3),m,if(equal(cc,4),m,q)))));\n///////////////////////////////////////////////////////////////////////////////////////////////\nr=rr;\ng=gg;\nb=bb;\nr2=rr;\ng2=gg;\nb2=bb;\ny=((cos(time)*.53+.4)+sin(time*.32)*.2)*.4+.4;\nx=((sin(time)*.5+.4)+sin(time*.45)*.2)*.4+.4;\nborder_r=rr;\nborder_g=gg;\nborder_b=bb;\nang=time;\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\nvolA=(bass_att+mid_att+treb_att)*.1;\nvolB=treb_att*.3;\n\nh=sin(time*.1)*.45+.45;\ns=min(volB,.9);\nl=min(volA,.9);\nmonitor=h;\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//\n//                            HSL to RGB  by PieturP\n//\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\n//\ncc=6*h%6;f=6*h-cc;m=l;p=l*(1-s);q=l*(1-s*f);t=l*(1-s*(1-f));\nrr=if(equal(cc,0),m,if(equal(cc,1),q,if(equal(cc,2),p,if(equal(cc,3),p,if(equal(cc,4),t,m)))));\ngg=if(equal(cc,0),t,if(equal(cc,1),m,if(equal(cc,2),m,if(equal(cc,3),q,if(equal(cc,4),p,p)))));\nbb=if(equal(cc,0),p,if(equal(cc,1),p,if(equal(cc,2),t,if(equal(cc,3),m,if(equal(cc,4),m,q)))));\n///////////////////////////////////////////////////////////////////////////////////////////////\nr=rr;\ng=gg;\nb=bb;","point_eqs_str":"x=sample;\ny=value1;","init_eqs_eel":"","frame_eqs_eel":"\nvolA=(bass_att+mid_att+treb_att)*.1;\nvolB=treb_att*.3;\n\nh=sin(time*.1)*.45+.45;\ns=min(volB,.9);\nl=min(volA,.9);\nmonitor=h;\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//\n//                            HSL to RGB  by PieturP\n//\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\n//\ncc=6*h%6;f=6*h-cc;m=l;p=l*(1-s);q=l*(1-s*f);t=l*(1-s*(1-f));\nrr=if(equal(cc,0),m,if(equal(cc,1),q,if(equal(cc,2),p,if(equal(cc,3),p,if(equal(cc,4),t,m)))));\ngg=if(equal(cc,0),t,if(equal(cc,1),m,if(equal(cc,2),m,if(equal(cc,3),q,if(equal(cc,4),p,p)))));\nbb=if(equal(cc,0),p,if(equal(cc,1),p,if(equal(cc,2),t,if(equal(cc,3),m,if(equal(cc,4),m,q)))));\n///////////////////////////////////////////////////////////////////////////////////////////////\nr=rr;\ng=gg;\nb=bb;","point_eqs_eel":"x=sample;\ny=value1;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tic=0;a.sw=0;a.q12=0;a.meanbass_att=0;a.q1=0;a.q5=0;a.q9=0;a.tin=0;a.lastbeat=0;a.beatrate=0;a.q11=0;a.peakbass_att=0;a.q10=0;a.an=0;a.alt=0;a.volume=0;a.beat=0;a.vol=0;a.sp=0;a.q2=0;a.q7=0;a.q8=0;","frame_eqs_str":"a.volume=.3*(a.bass+a.mid);a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.05*(19*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,a.peakbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,\n2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-a.beat)*a.peakbass_att*(.96*above(a.time-a.lastbeat,2*a.beatrate)+.996*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.zoom=1;a.decay=1;a.warp=0;a.wave_a=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.q2=1;a.q1=1;a.vol+=(div(a.alt+a.bass+a.mid,3)-a.vol)*a.tic;a.q5=a.vol*a.vol*a.vol*\n2;a.q8=.5*Math.sin(a.time);a.q9=.5*Math.sin(.75*a.time);a.sw=Math.abs(a.sw-a.beat);a.an+=.5*a.tic*(1-2*a.sw);a.q7=1+1*(pow(a.q8,2)+pow(a.q9,2));a.q10=Math.sin(a.an);a.q11=Math.cos(a.an);a.sp+=a.tic*a.vol*a.vol*.5;a.q12=a.sp;a.monitor=a.q12;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//begin beat code\nvolume = 0.3*(bass+mid);\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.05*(meanbass_att*19 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\n//Adjust responsiveness: To increase responsiveness, set the \"0.96 and \"0.996\" on the next line to slightly lower values. Higher values decrease responsiveness.\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\n//end beat code\n\nzoom = 1;\ndecay = 1;\nwarp = 0;\nwave_a = 0;\n\ntic = min(time-tin,.1);\ntin = time;\n\nq2 = 1;\n\nq1=1;\nvol = vol + ((alt + bass + mid)/3-vol)*tic*1;\nq5 = vol*vol*vol*2;\n\n\nq8 = sin(time)*.5;\nq9 = sin(time*.75)*.5;\n\nsw = abs(sw - beat);\nan = an + tic*.5*(1-2*sw);\n\n\nq7 = 1+(pow(q8,2) + pow(q9,2))*1;\nq10 = sin(an);\nq11 = cos(an);\n\nsp = sp + tic*vol*vol*.5;\n\nq12 = sp;\n\nmonitor = q12;","pixel_eqs_eel":"//zoom = pow(rad,2)+.01;","warp":" shader_body { \n  float conway_1;\n  vec3 ret_2;\n  ret_2 = ((texture (sampler_main, uv_orig).xyz * vec3(0.97, 1.0, 0.97)) - vec3(0.03, 0.0, 0.03));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_blur1, uv_orig);\n  ret_2.z = (ret_2.z + ((\n    (tmpvar_3.xyz * scale1)\n   + bias1).z * 0.45));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur3, uv_orig);\n  ret_2.x = (ret_2.x + ((\n    ((tmpvar_3.xyz * scale1) + bias1)\n  .z * 0.05) + (\n    ((tmpvar_4.xyz * scale3) + bias3)\n  .z * 0.05)));\n  ret_2.z = (ret_2.z - ret_2.x);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, uv_orig);\n  ret_2.y = clamp (tmpvar_5.y, 0.0, 1.0);\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).y + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(0.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).y);\n  float tmpvar_6;\n  tmpvar_6 = (((q5 * \n    (1.0 - ((tmpvar_3.xyz * scale1) + bias1).y)\n  ) * (1.0 - \n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\n  .y)) * (1.0 - (\n    (tmpvar_4.xyz * scale3)\n   + bias3).y));\n  conway_1 = (conway_1 - tmpvar_5.x);\n  if ((conway_1 > 0.0)) {\n    float tmpvar_7;\n    tmpvar_7 = clamp (ret_2.y, 0.0, 1.0);\n    if ((tmpvar_7 == 0.0)) {\n      ret_2.y = (floor((tmpvar_6 * 1.8)) * q1);\n    };\n  };\n  ret_2.y = (ret_2.y - ret_2.x);\n  ret_2 = (ret_2 - (1.0 - q2));\n  ret_2 = (ret_2 - (roam_sin.wzy * roam_cos.zxy));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec2 dz_1;\n  vec3 dy_2;\n  vec3 dx_3;\n  vec2 d_4;\n  vec3 ret_5;\n  vec2 tmpvar_6;\n  vec2 tmpvar_7;\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\n  d_4 = (texsize.zw * 2.0);\n  dx_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * d_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * d_4))\n  ).xyz * scale1) + bias1));\n  dy_2 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * d_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * d_4))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_9;\n  tmpvar_9.x = dx_3.y;\n  tmpvar_9.y = dy_2.y;\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\n  ret_5 = (vec3(((\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\n   * 2.0) + (\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  .y * 2.0))) * vec3(0.2, 0.3, 0.6));\n  vec2 tmpvar_10;\n  tmpvar_10.x = q19;\n  tmpvar_10.y = q20;\n  vec2 tmpvar_11;\n  tmpvar_11 = fract(((0.5 + \n    (uv - 0.5)\n  ) + (tmpvar_10 * vec2(-1.0, 1.0))));\n  vec2 tmpvar_12;\n  tmpvar_12.x = dx_3.y;\n  tmpvar_12.y = dy_2.y;\n  vec3 tmpvar_13;\n  tmpvar_13 = ((mix (ret_5, vec3(3.0, 2.0, 1.0), \n    ((texture (sampler_blur3, (tmpvar_11 - tmpvar_12)).xyz * scale3) + bias3)\n  .xxx) * (vec3(1.0, 1.0, 1.0) - \n    ((texture (sampler_blur2, (tmpvar_11 - dz_1)).xyz * scale2) + bias2)\n  .xxx)) * (vec3(1.0, 1.0, 1.0) - vec3((1.5 * texture (sampler_main, tmpvar_11).x))));\n  ret_5 = tmpvar_13;\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = tmpvar_13;\n  ret = tmpvar_14.xyz;\n }","warp_hlsl":"\nshader_body\n{\n\nret.xyz = tex2D(sampler_main, uv_orig).xyz*float3(.97,1,.97) - float3(.03,0,.03);\n\nret.z += GetBlur1(uv_orig).z*.45;\nret.x += GetBlur1(uv_orig).z*.05 + GetBlur3(uv_orig).z*.05;\nret.z -= ret.x;\n\nfloat2 pixelsize = texsize.zw;\nret.y = saturate(tex2D( sampler_pw_main,uv_orig).y);\n\nfloat1 conway = tex2D( sampler_pw_main, uv_orig + float2(-1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,1)*pixelsize).y;\n\nfloat1 test = q5*(1-GetBlur1(uv_orig).y)*(1-GetBlur2(uv_orig).y)*(1-GetBlur3(uv_orig).y);\n\nconway -= tex2D( sampler_pw_main, uv_orig).x;\n\n\nif (conway > 0) {\nif (saturate(ret.y) == 0) {\nret.y = floor(test*1.8)*q1;\n}\n}\n\nret.y -= ret.x;\n\nret.xyz -= 1-q2;\nret-=roam_sin.wzy*roam_cos.zxy;\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw;\n    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );\n    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );\nfloat2 dz = float2(dx.y,dy.y)*3;\n\nd = texsize.zw*2;\ndx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\ndy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\ndz +=float2(dx.y,dy.y);\n\nfloat3 bg = pow(length(dz)*0.8+0,0.7)*2 + GetBlur1(uv).y*2;\n\nret = bg*float3(0.2,0.3,0.6);\nfloat2 uv_swimmer =frac(0.5 + (uv-0.5)+float2(q19,q20)*float2(-1,1));\nret = lerp(ret,float3(3,2,1),GetBlur3(uv_swimmer -float2(dx.y,dy.y)).x);\nret = lerp(ret,0,GetBlur2(uv_swimmer-dz).x);\nret = lerp(ret,float3(0,0,0),1.5*GetPixel(uv_swimmer).x);\n\n//ret = GetPixel(uv);\n}"}