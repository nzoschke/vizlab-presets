{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"darken_center":1,"wave_a":4.1,"wave_scale":1.261,"wave_smoothing":0.54,"wave_mystery":-0.38,"modwavealphastart":1.07,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":3.639,"zoom":1.01961,"warp":0.08493,"wave_g":0.12,"wave_b":0,"ob_size":0.5,"ib_size":0.215,"mv_l":5,"mv_r":0.99,"mv_g":0.2,"mv_b":0.93,"mv_a":0,"b1ed":0.15},"shapes":[{"baseVals":{"sides":24,"textured":1,"y":0.29,"tex_zoom":1.87174,"g2":0.3,"b2":0.63,"border_r":0.23,"border_g":0.54,"border_a":0.02,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = sin(mid_att);","init_eqs_eel":"","frame_eqs_eel":"x = sin(mid_att);"},{"baseVals":{"sides":29,"thickoutline":1,"rad":0.04292,"r":0.47,"g":0.37,"b":1,"g2":0.31,"a2":0.55,"border_r":0,"border_g":0,"border_b":0,"border_a":0.35,"enabled":0},"init_eqs_str":"","frame_eqs_str":"y = treb_att;","init_eqs_eel":"","frame_eqs_eel":"y = treb_att;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":315,"sep":90,"usedots":1,"thick":1,"additive":1,"scaling":2.4485,"smoothing":0,"r":0.24,"g":0.21,"b":0.22},"init_eqs_str":"","frame_eqs_str":"a.r=Math.sin(a.time);a.g=Math.cos(a.time);a.b=Math.tan(a.time);","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"r = sin(time);\ng = cos(time);\nb = tan(time);","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.rot=.01*Math.sin(a.time);a.wave_g=.1*a.treb_att;a.wave_b=.1*a.treb_att;a.q1=Math.sin(a.time);a.q2=Math.cos(a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//zoom = sin(time);\n//warp = bass_att*.5;\nrot = sin(time) * .01;\nwave_g = treb_att * .1;\nwave_b = treb_att * .1;\nq1 = sin(time);\nq2 = cos(time);","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_fc_main, (uv + ((vec2(q1) * vec2(\n    ((1.0 - mid_att) * 0.067)\n  )) * texture (sampler_main, uv).xy)));\n  ret_1 = tmpvar_2.xyz;\n  float tmpvar_3;\n  tmpvar_3 = dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29));\n  if ((tmpvar_3 >= 0.2)) {\n    ret_1 = (tmpvar_2.xyz * 0.99);\n    ret_1 = (ret_1 - 0.0005);\n  } else {\n    float tmpvar_4;\n    tmpvar_4 = dot (ret_1, vec3(0.32, 0.49, 0.29));\n    if ((tmpvar_4 <= ((1.0 - treb) / 10.0))) {\n      ret_1 = (ret_1 * 0.8);\n    } else {\n      ret_1 = (ret_1 * 0.75);\n      ret_1.y = (ret_1.y + (rand_frame.x / 0.5));\n      ret_1.z = (ret_1.z + (rand_frame.y / 0.5));\n      ret_1.x = (ret_1.x + (rand_frame.z / 0.5));\n    };\n  };\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz * (clamp (\n    (bass_att + 0.5)\n  , 0.0, 1.0) * (\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2)));\n  ret_1 = (ret_1 * ((rad * 20.0) * (rad * treb_att)));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    float rateRand = .5;\n    float ratePaint = (1-mid_att)*.067;\n    float3 temp = tex2D(sampler_main, uv);\n    float2 myuv = float2( uv.x+(q1*ratePaint)*temp.x, uv.y+(q1*ratePaint)*temp.y);\n    //ret = tex2D(sampler_fc_main, uv);\n    ret = tex2D(sampler_fc_main, myuv);\n    if(lum(ret) >= .2)\n    {\n        ret *= .99;\n        ret -= 0.0005;\n    }\n    else if (lum(ret) <= (1-treb)/10)\n    {\n        ret *= .8;\n    }\n    else \n    {\n        ret *= .75;\n        ret.g += rand_frame.r / rateRand;\n        ret.b += rand_frame.g / rateRand;\n        ret.r += rand_frame.b / rateRand;\n        \n    }\n    //ret *= .75 + (1 - rad * treb_att);\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret *= saturate(bass_att+.5) * GetBlur2(uv);\n    //ret *= 1/bass_att; //gamma\n    //ret *= 2.5;\n    ret *= (rad*20*(rad))*(treb_att);\n}"}