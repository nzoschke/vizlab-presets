{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":2.853,"fshader":1,"zoom":1.01993,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ib_size":0,"mv_x":12.8,"mv_y":9.6,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"rad":0.49138,"tex_zoom":0.36971,"g":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=.5+q4;y=.5+q5;","init_eqs_eel":"","frame_eqs_eel":"x=.5+q4;y=.5+q5;"},{"baseVals":{"sides":24,"rad":0.01842,"tex_zoom":0.81954,"g":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_ang=0.01;\nx=.5-q4;\ny=.5-q5;","init_eqs_eel":"","frame_eqs_eel":"tex_ang=0.01;\nx=.5-q4;\ny=.5-q5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mrad=0;a.prova=0;a.xpos=0;a.yspos=0;a.ypos=0;a.bass_trig=0;","frame_eqs_str":"a.wave_r=Math.min(1,Math.max(0,.2*a.bass));a.wave_g=Math.min(1,Math.max(0,.2*a.mid));a.wave_b=Math.min(1,Math.max(0,.2*a.treb));a.xpos=.01*Math.floor(rand(80));a.yspos=.01*Math.floor(rand(80));a.ypos=div(Math.max(0,a.bass_att-.3),2);a.wave_x=a.wave_x+a.xpos-.4;a.wave_y+=Math.min(a.yspos-.4,.9);a.decay=Math.min(a.decay+.016*div(a.treb+a.mid+a.bass,3),1);a.bass_trig=Math.max(a.bass_att-1.2,0);a.dy+=.9*Math.sin(.2*a.time)*(.015+.2*(Math.abs(a.zoom)-1));a.dx+=.9*Math.sin(.5*a.time)*\n(.015+.2*(Math.abs(a.zoom)-1));a.monitor=a.rot;","pixel_eqs_str":"a.mrad=sqr(pow(a.x-(.5-.5*Math.sin(.5*a.time)),2)+pow(a.y-(.5-.5*Math.sin(.2*a.time)),2))*sqr(2);a.zoom+=.01+.05*a.mrad*a.prova;a.prova=.13*Math.max(a.bass_att-1.3,0);","init_eqs_eel":"","frame_eqs_eel":"wave_r = min(1,max(0,0.2*bass));\nwave_g = min(1,max(0,0.2*mid));\nwave_b = min(1,max(0,0.2*treb));\nxpos = 0.01*int(rand(80));\nyspos = 0.01*int(rand(80));\nypos = max(0,bass_att-0.3)/2;\nwave_x = wave_x + xpos - 0.4;\nwave_y = wave_y + (min(yspos-0.4,0.9));\ndecay = min(decay+ 0.016*((treb + mid + bass)/3),1);\nbass_trig = max(bass_att-1.2,0);\n//zoom = zoom + 0.04 * (0.3+sin(time*0.3+(bass_trig*6))) ;\ndy = dy +(sin(time*0.2))*0.9*(.015+((abs(zoom)-1)*10)*.02);\ndx = dx +(sin(time*0.5))*0.9*(.015+((abs(zoom)-1)*10)*.02);\n//rot = rot +(if(above(bass_trig,0),int(rand(10))-5,0)*0.1)*bass*.5;\nmonitor = rot;","pixel_eqs_eel":"mrad = sqr(pow(x-(0.5-(sin(time*0.5)*0.5)),2)+pow(y-(0.5-(sin(time*0.2)*0.5)),2))*sqr(2);\n//dy = dy +(sin(time*0.2))*0.5*(.015+(y+sin(time*0.2)*0.5*((zoom-1)*10))*.01);\n//dx = dx +(sin(time*0.5))*0.5*(.015+(x+sin(time*0.5)*0.5*((zoom-1)*10))*.01);\nzoom = zoom +(.01 + (mrad *0.05*prova));\nprova = 0.13 * max(bass_att-1.3,0);","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 3.0));\n  vec3 tmpvar_2;\n  tmpvar_2 = fract((ret_1 - 0.005));\n  ret_1 = tmpvar_2;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = tmpvar_2;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((texture (sampler_main, (\n    ((hue_shader * 2.0) + q20)\n  .xy + \n    fract((_qa.xy + (tmpvar_1.xy * 0.2)))\n  )) * tmpvar_1.z) * 3.0).xyz;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*3;\n\n    // darken over time\n    //ret -= 0.004;\n    //ret *= 0.99;\n    //ret *= 0.97 + 0.03*saturate( length(uv - uv_orig)*200 );  // center only\n    ret = frac(ret - 0.005);\n}\n","comp_hlsl":"//sampler sampler_rand00;    // this will choose a random texture from disk!\n\nshader_body         \n{\n    ret = tex2D(sampler_main, uv).xyz;\n    //float lum = ret.x;\n    //ret = lum;\n\n    float2 texc = frac(_qa + ret.xy*0.2);\n    ret = tex2D(sampler_main,hue_shader*2+q20+ texc) * ret.z*3;\n\n    // add some stripes:\n    //ret += 0.04*cos(lum*29+2.8);\n}\n\n"}