{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":0.387,"tex_zoom":1.69447,"g":1,"b":1,"r2":0.8,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":5,"additive":1,"textured":1,"x":0.61,"y":0.41,"rad":0.4817,"ang":1.00531,"tex_zoom":1.10462,"g":1,"b":1,"a":0.4,"r2":0.4,"g2":0.6,"b2":1,"border_a":0},"init_eqs_str":"a.flip=0;a.q7=0;a.vol=0;a.flip=1;","frame_eqs_str":"a.flip=-a.flip;a.x=.2*Math.sin(a.q7)*a.flip+.5;a.y=.26*Math.cos(a.q7)+.5;a.ang=.5*-a.time;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.a*=Math.min(a.vol,1);","init_eqs_eel":"flip=1","frame_eqs_eel":"flip=-flip;\n\nx=sin(q7)*0.2*flip + 0.5;\ny=cos(q7)*0.2*1.3 + 0.5;\nang=-time*0.5;\n\nvol=(bass+mid+treb)*0.25;\nvol=vol*vol;\n\na=a*min(vol,1);"},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":0.28999,"tex_zoom":2.59927,"g":1,"b":1,"r2":1,"g2":0.5,"b2":0.7,"border_a":0},"init_eqs_str":"a.q8=0;a.q7=0;a.sang=0;a.cang=0;a.xn=0;a.yn=0;","frame_eqs_str":"a.x=.2*Math.sin(2*a.q8);a.y=.2*Math.cos(2*a.q8);a.x+=.2;a.ang=1*a.q7;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xn=a.x*a.sang+a.y*a.cang;a.yn=a.x*a.cang-a.y*a.sang;a.x=a.xn+.5;a.y=1.3*a.yn+.5;a.ang=2*-a.time;","init_eqs_eel":"","frame_eqs_eel":"x=sin(q8*2)*0.2;\ny=cos(q8*2)*0.2;\n\n\n\nx=x+0.2;\nang=q7*1;\nsang=sin(ang);cang=cos(ang);\nxn=x*sang + y*cang;\nyn=x*cang - y*sang;\nx=xn + 0.5;\ny=yn*1.3 + 0.5;\n\n\nang=-time*2;"},{"baseVals":{"enabled":1,"sides":15,"additive":1,"rad":0.17987,"g":0.6,"b":0.5,"g2":0.6,"b2":1,"border_a":0},"init_eqs_str":"a.vol=0;","frame_eqs_str":"a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.a=Math.min(a.vol,1);","init_eqs_eel":"","frame_eqs_eel":"vol=(bass+mid+treb)*0.25;\nvol=vol*vol;\n\na=min(vol,1);"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.45,"g":0.65},"init_eqs_str":"a.cang=0;a.n=0;a.xp=0;a.yp=0;a.t1=0;a.advance=0;a.q6=0;a.zn=0;a.q1=0;a.sang=0;a.step3=0;a.step2=0;a.xn=0;a.q4=0;a.tm=0;a.yn=0;a.zp=0;a.q2=0;a.q3=0;a.step=0;","frame_eqs_str":"a.advance+=.006*a.q6;a.advance=.00001<Math.abs(above(a.advance,1))?a.advance-1:a.advance;a.t1=a.advance;","point_eqs_str":"a.n=6.283*a.sample;a.step=128*a.sample;a.step2=6.283*div(Math.floor(a.step),128);a.step3=a.step-Math.floor(a.step);a.tm=6.283*a.t1-3.1415;a.xp=.4*Math.sin(a.step2);a.yp=.4*Math.cos(a.step2);a.zp=3.1415*Math.sin(19.3*a.step2)+.35*a.step3-a.tm;a.zp=.00001<Math.abs(below(a.zp,-3.1415))?a.zp+6.283:a.zp;a.a=.00001<Math.abs(below(a.step3,.36))?0:1;a.a=.00001<Math.abs(above(a.step3,.64))?0:a.a;a.a=.00001<Math.abs(below(a.zp,-3))?0:a.a;a.a=.00001<Math.abs(above(a.zp,3))?0:a.a;a.a*=\n1-a.step3;a.a=Math.min(Math.max(a.a,0),1);a.zp=2*a.zp-3.1415;a.a*=1-div(a.zp+2.1415,6.283);a.a=.00001<Math.abs(below(a.zp,-1.5))?0:a.a;a.a=.00001<Math.abs(above(a.zp,4))?0:a.a;a.zp-=2*a.q4;a.sang=Math.sin(a.q1);a.cang=Math.cos(a.q1);a.xn=a.xp*a.sang+a.yp*a.cang;a.yn=a.xp*a.cang-a.yp*a.sang;a.zn=a.zp;a.xp=a.xn;a.yp=a.yn;a.zp=a.zn;a.sang=Math.sin(a.q2);a.cang=Math.cos(a.q2);a.xn=a.xp*a.sang+a.zp*a.cang;a.yn=a.yp;a.zn=a.xp*a.cang-a.zp*a.sang;a.xp=a.xn;a.yp=a.yn;a.zp=a.zn;a.sang=Math.sin(a.q3);a.cang=\nMath.cos(a.q3);a.xn=a.xp;a.yn=a.yp*a.sang+a.zp*a.cang;a.zn=a.yp*a.cang-a.zp*a.sang;a.xp=a.xn;a.yp=a.yn;a.zp=a.zn;a.zp=2*a.zp+1.55;a.a*=above(a.zp,.75);a.x=div(a.xp,a.zp)+.5;a.y=1.3*div(a.yp,a.zp)+.5;a.a*=.5;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+0.006*q6;\nadvance=if(above(advance,1), advance-1, advance);\nt1=advance;","point_eqs_eel":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 0.4;\nyp=cos(step2) * 0.4;\nzp=sin(step2*19.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;\n\na=a*0.5"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.45,"g":0.65},"init_eqs_str":"a.cang=0;a.n=0;a.xp=0;a.yp=0;a.t1=0;a.advance=0;a.q6=0;a.zn=0;a.q1=0;a.sang=0;a.step3=0;a.step2=0;a.xn=0;a.q4=0;a.tm=0;a.yn=0;a.zp=0;a.q2=0;a.q3=0;a.step=0;","frame_eqs_str":"a.advance+=.005*a.q6;a.advance*=below(a.advance,1);a.t1=a.advance;","point_eqs_str":"a.n=6.283*a.sample;a.step=128*a.sample;a.step2=6.283*div(Math.floor(a.step),128);a.step3=a.step-Math.floor(a.step);a.tm=6.283*a.t1-3.1415;a.xp=.4*Math.sin(a.step2);a.yp=.4*Math.cos(a.step2);a.zp=3.1415*Math.sin(19.3*a.step2)+.35*a.step3-a.tm;a.zp=.00001<Math.abs(below(a.zp,-3.1415))?a.zp+6.283:a.zp;a.a=.00001<Math.abs(below(a.step3,.36))?0:1;a.a=.00001<Math.abs(above(a.step3,.64))?0:a.a;a.a=.00001<Math.abs(below(a.zp,-3))?0:a.a;a.a=.00001<Math.abs(above(a.zp,3))?0:a.a;a.a*=\n1-a.step3;a.a=Math.min(Math.max(a.a,0),1);a.zp=2*a.zp-3.1415;a.a*=1-div(a.zp+2.1415,6.283);a.a=.00001<Math.abs(below(a.zp,-1.5))?0:a.a;a.a=.00001<Math.abs(above(a.zp,4))?0:a.a;a.zp-=2*a.q4;a.sang=Math.sin(a.q1);a.cang=Math.cos(a.q1);a.xn=a.xp*a.sang+a.yp*a.cang;a.yn=a.xp*a.cang-a.yp*a.sang;a.zn=a.zp;a.xp=a.xn;a.yp=a.yn;a.zp=a.zn;a.sang=Math.sin(a.q2);a.cang=Math.cos(a.q2);a.xn=a.xp*a.sang+a.zp*a.cang;a.yn=a.yp;a.zn=a.xp*a.cang-a.zp*a.sang;a.xp=a.xn;a.yp=a.yn;a.zp=a.zn;a.sang=Math.sin(a.q3);a.cang=\nMath.cos(a.q3);a.xn=a.xp;a.yn=a.yp*a.sang+a.zp*a.cang;a.zn=a.yp*a.cang-a.zp*a.sang;a.xp=a.xn;a.yp=a.yn;a.zp=a.zn;a.zp=2*a.zp+1.55;a.a*=above(a.zp,.75);a.x=div(-a.xp,a.zp)+.5;a.y=1.3*div(a.yp,a.zp)+.5;a.a*=.5;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+0.005*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_eel":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 0.4;\nyp=cos(step2) * 0.4;\nzp=sin(step2*19.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=-xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;\na=a*0.5"},{"baseVals":{"thick":1,"additive":1,"r":0.3,"g":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"advance=advance+0.005*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_str":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 1.1;\nyp=cos(step2) * 1.1;\nzp=sin(step2*15.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+0.005*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_eel":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 1.1;\nyp=cos(step2) * 1.1;\nzp=sin(step2*15.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;"},{"baseVals":{"thick":1,"additive":1,"r":0,"g":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"advance=advance+0.004*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_str":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 1.6;\nyp=cos(step2) * 1.6;\nzp=sin(step2*11.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+0.004*q6;\nadvance=advance * below(advance,1);\nt1=advance;","point_eqs_eel":"n=sample*6.283;\nstep=sample*128;\nstep2=(int(step)/128)*6.283;\nstep3=(step - int(step));\ntm = t1 * 6.283 - 3.1415;\n\n//star lines\nxp=sin(step2) * 1.6;\nyp=cos(step2) * 1.6;\nzp=sin(step2*11.3)*3.1415 + step3*0.35 - tm;\nzp=if(below(zp,-3.1415), zp+6.283 , zp);\n\n\n//kill stray lines from front to back\na=if(below(step3,0.36) , 0 , 1);\na=if(above(step3,0.64) , 0 , a);\na=if(below(zp,-3) , 0 , a);\na=if(above(zp,3) , 0 , a);\n\n//a=a*(zp/6.08);\na=a*(1-step3);\na=min( max(a,0) , 1);\n\n\nzp=zp*2 - 3.1415;\n\n//zp=if(below(zp,-3.1415), zp+6.283 , zp);\n\na=a * (1-(zp+2.1415)/6.283);\n\na=if(below(zp,-1.5) , 0 , a);\na=if(above(zp,4.0) , 0 , a);\n\n//shift back when pointing away from camera\nzp=zp-q4*2;\n\n\n//z rotation\nsang=sin(q1);cang=cos(q1);\nxn=xp*sang + yp*cang;\nyn=xp*cang - yp*sang;\nzn=zp;\nxp=xn;yp=yn;zp=zn;\n\n//y rotation;\nsang=sin(q2);cang=cos(q2);\nxn=xp*sang + zp*(cang);\nyn=yp;\nzn=xp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n//x rotation;\nsang=sin(q3);cang=cos(q3);\nxn=xp;\nyn=yp*sang + zp*cang;\nzn=yp*cang - zp*sang;\nxp=xn;yp=yn;zp=zn;\n\n\n\nzp=zp*2+1.55;\n\n//near clipping plane\na=a*above(zp,0.75);\n//a=a*below(zp,8.55);\n\nx=xp/zp+ 0.5;\ny=yp/zp * 1.3 + 0.5;"}],"init_eqs_str":"a.index2=0;a.index=0;a.q18=0;a.q22=0;a.q21=0;a.q6=0;a.movex=0;a.q1=0;a.dec_med=0;a.q5=0;a.trel=0;a.q9=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.tran=0;a.spd=0;a.q4=0;a.ran=0;a.q26=0;a.p2=0;a.rott_=0;a.avg=0;a.movez=0;a.q19=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q32=0;a.q7=0;a.q28=0;a.q30=0;a.q20=0;a.q8=0;a.p1=2E3;a.p2=200;a.p3=50;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.9,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.1+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),5);a.monitor=a.index2;a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;\na.q26=a.bass+a.mid+a.treb;a.q27=a.index;a.q28=a.index2;a.k1=a.is_beat*equal(mod(a.index,2),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott_=div(3.1416*a.p2,4);a.rott+=div(6,a.fps)*a.q2;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.ran=bnot(a.q24)*a.ran+a.q24*(Math.floor(rand(50))-24);a.tran=Math.tan(a.ran);a.tran=Math.max(a.tran,-5);a.tran=Math.min(a.tran,5);a.trel=a.trel+div(.6,a.fps)*a.tran+a.q24;a.q5=Math.cos(a.trel);a.q6=Math.sin(a.trel);\na.q7=-a.q6;a.q8=a.q5;a.movex=a.movex*a.dec_slow+div(3*Math.sin(a.rott),a.fps);a.q9=a.movex;a.spd=a.spd*bnot(a.q24)+a.q26*a.q24;a.movez+=div(.15,a.fps)*a.spd;a.q30=a.movez;a.mv_x=20;a.mv_y=15;a.mv_a=.1;a.mv_l=0;a.q18=Math.sin(div(a.time,7));a.q19=Math.sin(div(a.time,11));a.q32=pow(.98,div(30,a.fps));","pixel_eqs_str":"a.zoom=1;a.warp=.1;","init_eqs_eel":"p1 = 2000; p2 = 200; p3=50;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .1+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%5;\nmonitor = index2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\nq27 = index;\nq28 = index2;\n\nk1 =  is_beat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott_ = p2 * 3.1416/4;\n\nrott =  rott +  .2*30/fps*q2;\n\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nran = bnot(q24)*ran + q24 * (int(rand(50))-24);\ntran = tan(ran);\ntran = max(tran,-5);\ntran = min(tran,5);\n\ntrel = trel + .02*30/fps*tran+q24;\nq5 = cos(trel);\nq6 = sin(trel);\nq7 = -q6;\nq8 = q5;\n\nmovex = movex*dec_slow + .1*sin(rott)*30/fps;\nq9 = movex;\n\nspd = spd*bnot(q24) + q26*q24;\nmovez = movez + .005*30/fps*spd;\nq30 = movez;\n//q30 = .3* (sin(time/45) + 1.5);\n\nmv_x = 20;\nmv_y = 15;\nmv_a = .1;\nmv_l = 0;\n\nq18 = sin(time/7);\nq19 = sin(time/11);\n\nq32 = pow(0.98, 30/fps); //fade","pixel_eqs_eel":"zoom = 1;\nwarp = .1;","warp":" shader_body { \n  float conway_1;\n  vec3 ret_2;\n  ret_2 = ((texture (sampler_main, uv_orig).xyz * vec3(0.97, 1.0, 0.97)) - vec3(0.03, 0.0, 0.03));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_blur1, uv_orig);\n  ret_2.z = (ret_2.z + ((\n    (tmpvar_3.xyz * scale1)\n   + bias1).z * 0.4));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur3, uv_orig);\n  ret_2.x = (ret_2.x + ((\n    ((tmpvar_3.xyz * scale1) + bias1)\n  .z * 0.05) + (\n    ((tmpvar_4.xyz * scale3) + bias3)\n  .z * 0.05)));\n  ret_2.z = (ret_2.z - ret_2.x);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, uv_orig);\n  ret_2.y = clamp (tmpvar_5.y, 0.0, 1.0);\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).y + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(0.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).y);\n  float tmpvar_6;\n  tmpvar_6 = (((q5 * \n    (1.0 - ((tmpvar_3.xyz * scale1) + bias1).y)\n  ) * (1.0 - \n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\n  .y)) * (1.0 - (\n    (tmpvar_4.xyz * scale3)\n   + bias3).y));\n  conway_1 = (conway_1 - tmpvar_5.x);\n  if ((conway_1 > 0.0)) {\n    float tmpvar_7;\n    tmpvar_7 = clamp (ret_2.y, 0.0, 1.0);\n    if ((tmpvar_7 == 0.0)) {\n      ret_2.y = (floor((tmpvar_6 * 1.8)) * q1);\n    };\n  };\n  ret_2.y = (ret_2.y - ret_2.x);\n  vec2 tmpvar_8;\n  tmpvar_8 = (1.0 - uv);\n  ret_2.y = (ret_2.y * (1.0 - (\n    (((texture (sampler_blur2, tmpvar_8).xyz * scale2) + bias2).x + ((texture (sampler_blur2, tmpvar_8).xyz * scale2) + bias2).z)\n   * 16.0)));\n  ret_2 = (ret_2 - 0.3);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (1.0 - uv.x);\n  tmpvar_2.y = uv.y;\n  vec3 tmpvar_3;\n  tmpvar_3 = vec3((texture (sampler_main, uv).x + texture (sampler_main, tmpvar_2).x));\n  vec2 tmpvar_4;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_blur1, uv);\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \n    ((tmpvar_5.xyz * scale1) + bias1)\n  .zzz).xy) + 0.5);\n  vec3 tmpvar_6;\n  tmpvar_6 = (tmpvar_3 + clamp ((\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    (1.0 - (tmpvar_3.x * 2.0))\n  ), 0.0, 1.0));\n  vec3 tmpvar_7;\n  tmpvar_7 = (tmpvar_6 + clamp ((\n    pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    (1.0 - (tmpvar_6.x * 2.0))\n  ), 0.0, 1.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = uv.x;\n  tmpvar_8.y = (1.0 - uv.y);\n  ret_1 = (pow (mix (\n    (vec3((((tmpvar_5.xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)) + (((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1).x + ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3).x))\n  , tmpvar_7, tmpvar_7), vec3(5.0, 1.0, 0.5)) + pow ((texture (sampler_main, tmpvar_8).yyy + texture (sampler_main, \n    (1.0 - uv)\n  ).yyy), vec3(0.6, 0.95, 5.0)));\n  ret_1 = (ret_1 - (roam_sin.xyz * roam_cos.zxy));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_1;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"\nshader_body\n{\n\nret.xyz = tex2D(sampler_main, uv_orig).xyz*float3(.97,1,.97) - float3(.03,0,.03);\n\nret.z += GetBlur1(uv_orig).z*.4;\nret.x += GetBlur1(uv_orig).z*.05 + GetBlur3(uv_orig).z*.05;\nret.z -= ret.x;\n\nfloat2 pixelsize = texsize.zw;\nret.y = saturate(tex2D( sampler_pw_main,uv_orig).y);\n\nfloat1 conway = tex2D( sampler_pw_main, uv_orig + float2(-1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,1)*pixelsize).y;\n\nfloat1 test = q5*(1-GetBlur1(uv_orig).y)*(1-GetBlur2(uv_orig).y)*(1-GetBlur3(uv_orig).y);\n\nconway -= tex2D( sampler_pw_main, uv_orig).x;\n\n\nif (conway > 0) {\nif (saturate(ret.y) == 0) {\nret.y = floor(test*1.8)*q1;\n}\n}\n\nret.y -= ret.x;\n\nret.y *= (1-(GetBlur2(1-uv).x+GetBlur2(1-uv).z)*16);\n\n\nret.xyz -= .3;\n}","comp_hlsl":"shader_body\n{\n\n\n\nfloat2 uva = uv;\nfloat2 uvb = float2(1-uv.x,uv.y);\n\nret = tex2D(sampler_main, uva).x + tex2D(sampler_main, uvb).x;\n\nfloat3 blurs = GetBlur1(uva).x + GetBlur3(uva).x;\nblurs += GetBlur1(uvb).x + GetBlur3(uvb).x;\n\n\nfloat2 uv3 = (uv-.5)*(1-GetBlur1(uv).zzz)+.5;\nret += saturate(pow(tex2D(sampler_main, uv3).zzz,.5)*(1-ret.x*2)),\nret += saturate(pow(GetBlur1(uv3).zzz,.5)*(1-ret.x*2)),\n\n\nret = lerp (\nblurs,\nret,\npow(ret,1));\n\nret = pow(ret,float3(5,1,.5));\n\nret += pow(tex2D(sampler_main, float2(uv.x,1-uv.y)).yyy+tex2D(sampler_main, 1-uv).yyy,float3(.6,.95,5));\n\nret-=roam_sin*roam_cos.zxy;\n\n}"}