{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1.112,"echo_alpha":1,"echo_orient":2,"wave_mode":2,"darken":1,"solarize":1,"wave_a":0.408,"wave_scale":1.17,"wave_smoothing":0.5,"warpscale":1.331,"zoom":1.004,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_r":0.8,"wave_g":0.5,"wave_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.du=0;a.q1=0;a.dv=0;a.q2=0;a.dist=0;a.ang2=0;a.mult=0;","frame_eqs_str":"a.wave_r+=.2*(.6*Math.sin(.98*a.time)+.4*Math.sin(1.047*a.time));a.wave_g+=.2*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.wave_b+=.2*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.q1=2*a.cx-1+.6*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.q2=2*a.cy-1+.6*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));","pixel_eqs_str":"a.du=2*a.x-1-a.q1;a.dv=2*a.y-1-a.q2;a.dist=sqrt(a.du*a.du+a.dv*a.dv);a.ang2=Math.atan2(a.du,a.dv)+.15*a.time;a.mult=.65*Math.sin(.05*a.dist);a.dx=a.mult*Math.sin(2*a.ang2-1.5);a.dy=a.mult*Math.cos(2*a.ang2-1.5);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\nwave_g = wave_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\nwave_b = wave_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );","pixel_eqs_eel":"du = (x*2-1) - q1;\ndv = (y*2-1) - q2;\ndist = sqrt(du*du+dv*dv);\nang2 = atan2(du,dv) + time*0.15;\nmult = 0.65*sin(dist*0.05);\ndx = mult*sin(ang2*2-1.5);\ndy = mult*cos(ang2*2-1.5);","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 3.0));\n  vec3 tmpvar_2;\n  tmpvar_2 = fract((ret_1 - 0.005));\n  ret_1 = tmpvar_2;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = tmpvar_2;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.5 + ((uv - 0.5) * 0.92));\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 8.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  float tmpvar_6;\n  tmpvar_6 = (texsize.zw * 32.0).x;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.y;\n  tmpvar_7.y = tmpvar_5.y;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_4.z;\n  tmpvar_8.y = tmpvar_5.z;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_4.x;\n  tmpvar_9.y = tmpvar_5.x;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.z;\n  tmpvar_10.y = tmpvar_5.z;\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_4.y;\n  tmpvar_11.y = tmpvar_5.y;\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_4.x;\n  tmpvar_12.y = tmpvar_5.x;\n  ret_2.x = texture (sampler_main, (uv_1 + ((tmpvar_7 + tmpvar_8) * tmpvar_6))).x;\n  ret_2.y = texture (sampler_main, (uv_1 + ((tmpvar_9 + tmpvar_10) * tmpvar_6))).y;\n  ret_2.z = texture (sampler_main, (uv_1 + ((tmpvar_11 + tmpvar_12) * tmpvar_6))).z;\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_2;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"shader_body\n{\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*3;\n\n    // darken over time\n    //ret -= 0.004;\n    //ret *= 0.99;\n    //ret *= 0.97 + 0.03*saturate( length(uv - uv_orig)*200 );  // center only\n    ret = frac(ret - 0.005);\n}\n","comp_hlsl":"shader_body\n{\nuv = 0.5 + (uv - 0.5)*0.92;\nfloat2 d = texsize.zw*8;\nfloat3 dx = (GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv - float2(1,0)*d));\nfloat3 dy = (GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv - float2(0,1)*d));\nfloat strength = +texsize.zw*32;\nfloat2 uv_x = uv + (float2(dx.y,dy.y)+float2(dx.z,dy.z))*strength;\nfloat2 uv_y = uv + (float2(dx.x,dy.x)+float2(dx.z,dy.z))*strength; \nfloat2 uv_z = uv + (float2(dx.y,dy.y)+float2(dx.x,dy.x))*strength;\nret.x = GetPixel(uv_x).x;\nret.y = GetPixel(uv_y).y;\nret.z = GetPixel(uv_z).z;\n//ret = ret.z;\n}"}