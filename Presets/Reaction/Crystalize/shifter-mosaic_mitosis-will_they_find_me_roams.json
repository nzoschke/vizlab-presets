{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":6,"wave_brighten":0,"wrap":0,"wave_a":0.005,"wave_scale":0.167,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":0.107,"zoomexp":4.10046,"warp":0.01,"wave_x":0.95,"wave_y":1,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"x":1,"rad":0.01143,"tex_zoom":0.5033,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"a.mx=0;a.my=0;a.vx=0;a.vy=0;","frame_eqs_str":"a.mx=.001*Math.floor(rand(1001));a.my=.001*Math.floor(rand(1001));a.mx*=6.283;a.my=pow(a.my,4);a.x=.5+a.my*Math.sin(a.mx);a.y=.5+a.my*Math.cos(a.mx);a.r=a.x;a.g=1-a.y;a.b=1;a.r2=a.r;a.g2=a.g;a.b2=a.b;a.a=above(a.bass*a.mid*a.treb,.002*Math.floor(rand(1001)));a.a2=a.a;","init_eqs_eel":"vx = 0;\nvy = 0;","frame_eqs_eel":"mx = int(rand(1001))*.001;\nmy = int(rand(1001))*.001;\n\nmx = mx*6.283;\nmy = pow(my,4);\n\nx = .5 + my*sin(mx);\ny = .5 + my*cos(mx);\n\n\nr = x;\ng = 1-y;\nb = 1;\nr2=r;\ng2=g;\nb2=b;\n\n\na = above(bass*mid*treb,int(rand(1001))*.001*2);\n\na2 = a;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"rad":0.05615,"tex_zoom":0.5033,"r":0,"b":1,"g2":0,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"vx = 0;\nvy = 0;","frame_eqs_str":"","init_eqs_eel":"vx = 0;\nvy = 0;","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":1.00591,"tex_zoom":0.5033,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"vx = 0;\nvy = 0;","frame_eqs_str":"x = 1.2;\ny = q3- 0.4;","init_eqs_eel":"vx = 0;\nvy = 0;","frame_eqs_eel":"x = 1.2;\ny = q3- 0.4;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":52,"usedots":1,"thick":1,"scaling":0.01,"smoothing":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"t8 = 1;\nt1 = q5;","frame_eqs_str":"","point_eqs_str":"x = int(rand(1001))/1000;\ny = int(rand(1001))/1000;\nr = x;\ng = 1-y;\nb = 1;\n\na = below(int(rand(100)),2);","init_eqs_eel":"t8 = 1;\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = int(rand(1001))/1000;\ny = int(rand(1001))/1000;\nr = x;\ng = 1-y;\nb = 1;\n\na = below(int(rand(100)),2);"},{"baseVals":{"enabled":1,"samples":12,"usedots":1,"thick":1,"scaling":0.0124,"smoothing":0,"r":0.5,"g":0.6},"init_eqs_str":"a.ti=0;a.q2=0;a.q20=0;a.t8=1;a.t1=a.q5;","frame_eqs_str":"","point_eqs_str":"a.ti=.9*a.q2-5*a.sample;a.x=Math.sin(.95*a.ti)+Math.sin(1.35*a.ti);a.y=Math.sin(1.12*a.ti)+Math.sin(.45*a.ti);a.x=Math.max(a.x,-a.x);a.y=Math.max(a.y,-a.y);a.x-=Math.floor(a.x);a.y-=Math.floor(a.y);a.r=a.x;a.g=1-a.y;a.y=div(a.y-.5,a.q20)+.5;a.x+=.005*(.001*Math.floor(rand(1001))-.5);a.y+=.005*(.001*Math.floor(rand(1001))-.5);a.a=below(Math.floor(rand(5)),2);","init_eqs_eel":"t8 = 1;\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"ti = q2*.9 - sample*5;\n\nx = (sin(ti*.95) + sin(ti*1.35));\ny = (sin(ti*1.12) + sin(ti*.45));\n\nx = max(x,-x);\ny = max(y,-y);\n\nx = x-int(x);\ny = y-int(y);\n\nr = x;\ng = 1-y;\n\ny = (y-.5)/q20+.5;\n\nx = x + .005*(int(rand(1001))*.001*1 -.5);\ny = y + .005*(int(rand(1001))*.001*1 -.5);\n\na = below(int(rand(5)),2);"},{"baseVals":{"samples":12,"usedots":1,"scaling":0.01303,"smoothing":0,"enabled":0},"init_eqs_str":"t8 = 1;\nt1 = q5;","frame_eqs_str":"t1=sin(time)*0.5+0.5;\nt2=sin(time+2.1)*0.5+0.5;\nt3=sin(time+4.2)*0.5+0.5;\n\nt4=sin(time+1.1)*0.5+0.5;\nt5=sin(time+3.1)*0.5+0.5;\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_str":"ti = q3*.9 - sample*0;\n\nx = .5 + (sin(ti*1.05) + sin(ti*.785))*.25;\ny = .5 + (sin(ti*.882) + sin(ti*1.45))*.25;\n\nr = x;\ng = 1-y;\n\ny = (y-.5)/q20+.5;\n\nx = x + .005*(int(rand(1001))*.001*1 -.5);\ny = y + .005*(int(rand(1001))*.001*1 -.5);\n\na = below(int(rand(50)),2);","init_eqs_eel":"t8 = 1;\nt1 = q5;","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\nt2=sin(time+2.1)*0.5+0.5;\nt3=sin(time+4.2)*0.5+0.5;\n\nt4=sin(time+1.1)*0.5+0.5;\nt5=sin(time+3.1)*0.5+0.5;\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"ti = q3*.9 - sample*0;\n\nx = .5 + (sin(ti*1.05) + sin(ti*.785))*.25;\ny = .5 + (sin(ti*.882) + sin(ti*1.45))*.25;\n\nr = x;\ng = 1-y;\n\ny = (y-.5)/q20+.5;\n\nx = x + .005*(int(rand(1001))*.001*1 -.5);\ny = y + .005*(int(rand(1001))*.001*1 -.5);\n\na = below(int(rand(50)),2);"},{"baseVals":{"samples":511,"sep":4,"usedots":1,"scaling":0.02345,"smoothing":0,"enabled":0},"init_eqs_str":"t2 = 0;\nt3 = 0;\nt4 = 0;\nab = 1;","frame_eqs_str":"t1 = q4*0.75;\nt2 = q5*0.75;\nt3 = q6*0.75;\nt4 = q4*0.75;\nt5 = q5*0.75;\nt6 = q6*0.75;\nt8 = 1;","point_eqs_str":"ti = q4*.9 - sample*0;\n\nx = .5 + (sin(ti*.545) + sin(ti*1.156))*.25;\ny = .5 + (sin(ti*.4782) + sin(ti*1.068))*.25;\n\nr = x;\ng = 1-y;\n\ny = (y-.5)/q20+.5;\n\nx = x + .005*(int(rand(1001))*.001*1 -.5);\ny = y + .005*(int(rand(1001))*.001*1 -.5);\n","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\nab = 1;","frame_eqs_eel":"t1 = q4*0.75;\nt2 = q5*0.75;\nt3 = q6*0.75;\nt4 = q4*0.75;\nt5 = q5*0.75;\nt6 = q6*0.75;\nt8 = 1;","point_eqs_eel":"ti = q4*.9 - sample*0;\n\nx = .5 + (sin(ti*.545) + sin(ti*1.156))*.25;\ny = .5 + (sin(ti*.4782) + sin(ti*1.068))*.25;\n\nr = x;\ng = 1-y;\n\ny = (y-.5)/q20+.5;\n\nx = x + .005*(int(rand(1001))*.001*1 -.5);\ny = y + .005*(int(rand(1001))*.001*1 -.5);\n"}],"init_eqs_str":"a.tic=0;a.q12=0;a.vt=0;a.bt=0;a.q1=0;a.q5=0;a.tt=0;a.tin=0;a.ti=0;a.q11=0;a.q10=0;a.q4=0;a.mt=0;a.t2=0;a.q2=0;a.q3=0;a.q20=0;","frame_eqs_str":"a.wave_a=0;a.zoom=1;a.decay=1;a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.ti+=24*a.tic;a.q1=above(a.ti,1);a.ti*=below(a.ti,1);a.t2+=a.tic*a.bass*a.bass;a.t2*=below(a.t2,.01);a.q5=equal(a.t2,0);a.q5=1-a.tic*(.5+.1*a.bass*a.bass);a.vt+=a.bass*a.mid*a.treb*a.tic*.2;a.bt+=a.bass*a.tic*.4;a.mt+=a.mid*a.tic*.4;a.tt+=a.treb*a.tic*.4;a.q2=a.bt;a.q3=a.mt;a.q4=a.tt;a.q10=a.vt;a.q11=.5+.25*Math.sin(1.12*a.bt);a.q12=.5+.25*Math.sin(.98*a.bt);a.monitor=above(a.bass*a.mid*a.treb,\n.002*Math.floor(rand(1001)));a.q20=a.aspecty;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\nzoom = 1;\ndecay = 1;\nwarp = 0;\n\n//decay = 0.1;\n\n\ntic = min(time-tin,.1);\ntin = time;\n\nti = ti + tic*24;\nq1 = above(ti,1);\nti = ti*below(ti,1);\n\n\n\nt2 = t2 + tic*bass*bass;\nt2 = t2*below(t2,.01);\nq5 = equal(t2,0);\nq5 = 1-tic*(.5 + .1*bass*bass);\n\n//t2 = 1-t2;\n//q5 = t2;\n\n\nvt = vt + bass*mid*treb*tic*.2;\n\nbt = bt + bass*tic*.4;\nmt = mt + mid*tic*.4;\ntt = tt + treb*tic*.4;\nq2=bt;\nq3=mt;\nq4=tt;\n\nq10 = vt;\n\nq11 = .5 + .25*sin(bt*1.12);\nq12 = .5 + .25*sin(bt*0.98);\n\nmonitor = above(bass*mid*treb,int(rand(1001))*.001*2);\n\nq20=aspecty;","pixel_eqs_eel":"","warp":" shader_body { \n  vec4 len_1;\n  vec3 rsamp_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5.x = q11;\n  tmpvar_5.y = q12;\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  ret_4.xy = texture (sampler_pw_main, (((uv_orig - tmpvar_5) * q5) + tmpvar_5)).xy;\n  ret_4.xy = (((ret_4.xy - tmpvar_5) / q5) + tmpvar_5);\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv_orig + ((\n    (tmpvar_6.xy - 0.5)\n   * 12.0) * texsize.zw));\n  uv2_3 = tmpvar_7;\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_pw_main, fract(tmpvar_7));\n  rsamp_2.z = tmpvar_8.z;\n  rsamp_2.xy = (((tmpvar_8.xy - tmpvar_5) / q5) + tmpvar_5);\n  vec4 tmpvar_9;\n  tmpvar_9.xy = ret_4.xy;\n  tmpvar_9.zw = rsamp_2.xy;\n  vec4 tmpvar_10;\n  tmpvar_10 = (tmpvar_9 - uv_orig.xyxy);\n  len_1 = tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = sqrt(dot (tmpvar_10.xy, tmpvar_10.xy));\n  float tmpvar_12;\n  tmpvar_12 = sqrt(dot (tmpvar_10.zw, tmpvar_10.zw));\n  if ((tmpvar_11 > tmpvar_12)) {\n    ret_4.xy = rsamp_2.xy;\n  };\n  uv2_3 = (uv_orig + ((\n    (tmpvar_6.zw - 0.5)\n   * 48.0) * texsize.zw));\n  rsamp_2 = (texture (sampler_pw_main, fract(uv2_3)).xyz - (roam_sin.wzy * roam_cos.zxy));\n  rsamp_2.xy = (((rsamp_2.xy - tmpvar_5) / q5) + tmpvar_5);\n  len_1.zw = (rsamp_2.xy - uv_orig);\n  float tmpvar_13;\n  tmpvar_13 = sqrt(dot (len_1.zw, len_1.zw));\n  if ((tmpvar_11 > tmpvar_13)) {\n    ret_4.xy = rsamp_2.xy;\n  };\n  ret_4.z = 0.0;\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_4;\n  ret = tmpvar_14.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_3;\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 4.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_6;\n  tmpvar_6 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.0;\n  tmpvar_7.x = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  tmpvar_7.y = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\n    ((uv_1.xyy + (tmpvar_7 * 0.5)) * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\n  vec2 tmpvar_9;\n  tmpvar_9.x = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  tmpvar_9.y = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  uv_1 = (uv_1 - (tmpvar_9 * 0.04));\n  ret_3 = (abs((\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n  )) - (roam_sin.zyx * roam_cos.ywx));\n  ret_3 = (ret_3 * (dot (tmpvar_8, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  vec3 tmpvar_10;\n  tmpvar_10 = pow (ret_3, vec3(0.5, 0.5, 0.5));\n  ret_3 = tmpvar_10;\n  for (int i_2 = 0; i_2 < 16; i_2++) {\n  };\n  vec3 tmpvar_11;\n  tmpvar_11.z = 0.04;\n  vec2 tmpvar_12;\n  tmpvar_12 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_11.x = (texture (sampler_main, (uv_1 + tmpvar_12)).xyz - texture (sampler_main, (uv_1 - tmpvar_12)).xyz).x;\n  vec2 tmpvar_13;\n  tmpvar_13 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_11.y = (texture (sampler_main, (uv_1 + tmpvar_13)).xyz - texture (sampler_main, (uv_1 - tmpvar_13)).xyz).x;\n  vec3 tmpvar_14;\n  tmpvar_14 = normalize(tmpvar_11);\n  vec3 tmpvar_15;\n  tmpvar_15.z = 0.6;\n  tmpvar_15.xy = (fract(uv_1) - 0.5);\n  vec3 tmpvar_16;\n  tmpvar_16.z = 0.6;\n  tmpvar_16.xy = (fract(uv_1) - 0.5);\n  vec3 tmpvar_17;\n  tmpvar_17 = mix (tmpvar_10, mix (tmpvar_10, vec3(1.1, 0.8, 0.5), vec3((\n    ((dot (tmpvar_14, tmpvar_15) * 0.5) + 0.5)\n   * texture (sampler_main, \n    fract(uv_1)\n  ).x))), vec3(q20));\n  ret_3 = (1.0 - mix (tmpvar_17, mix (tmpvar_17, \n    mix (tmpvar_10, vec3(1.1, 0.8, 0.5), vec3((((\n      dot (tmpvar_14, tmpvar_16)\n     * 0.5) + 0.5) * texture (sampler_main, fract(uv_1)).x)))\n  , vec3(\n    (sin(time) * 100.0)\n  )), vec3(q20)));\n  ret_3 = (ret_3 * (treb_att * 0.5));\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = ret_3;\n  ret = tmpvar_18.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\n\nfloat zm = q5;\nfloat2 cen = float2(q11,q12);\nfloat2 uvo = (uv_orig-cen)*zm + cen;\n\nfloat2 uvm = uv_orig;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xy = tex2D( sampler_pw_main,uvo).xy;\nret.xy = (ret.xy-cen)/zm+cen;\n\nfloat2 uv2 = uv_orig  + (noiseVal.xy-.5)*12*pixelsize;\nfloat3 rsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;\n\nrsamp.xy = (rsamp.xy-cen)/zm+cen;\n\nfloat4 len = (float4(ret.xy,rsamp.xy) - uvm.xyxy);\nfloat l1 = length(len.xy);\nif (l1 > length(len.zw)) ret.xy = rsamp.xy;\n\nuv2 = uv_orig  + (noiseVal.zw-.5)*48*pixelsize;\nrsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;\nrsamp-=roam_sin.wzy*roam_cos.zxy;\nrsamp.xy = (rsamp.xy-cen)/zm+cen;\nlen.zw = rsamp.xy - uvm.xy;\nif (l1 > length(len.zw)) ret.xy = rsamp.xy;\n\n//uv2 = uv_orig  + (noiseVal.zw-.5)*6*pixelsize;\n//rsamp = tex2D(sampler_pw_main,frac(uv2)).xyz;\n//len = abs(float4(ret.xy,rsamp.xy) - uvm.xyxy);\n//if (length(len.xy) > length(len.zw)) ret.xy = rsamp.xy;\n\n//float2 uvo = (uv_orig-cen)*zm + cen;\n//if (q5) {\n//ret.xy = tex2D( sampler_pw_main,uvo).xy;\n//}\n\nret.z = 0;\n\n}","comp_hlsl":"float3 reta;\nfloat3 retb;\nfloat3 retc;\n\nshader_body\n{\n\n\n\nuv = 0.5 + (uv-0.5)*0.98;\n    float2 d = texsize.zw*4;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nuv -= float2(lum(dx),lum(dy))*0.04;\nret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));\nret-=roam_sin.zyx*roam_cos.ywx;\nret *= lum(noise)*3; \nret = pow(ret,0.5);\n\n\n\nfloat2 uv2 = uv*0.25;\nfloat3 col = 0;\nfloat2 uv3 = uv2;\nfor(int i = 0; i<16; i++){\n    uv3 += i*float2(0.25,0) - (0==(i)%4)*float2(0,0.25);\n    col = lerp(col,i/16.0,saturate(-GetPixel(uv3).y+tex2d(sampler_pw_main,frac(uv3)).y));\n\n\n}\n\n\nreta = lerp(GetPixel(uv).z*float3(0.6,0.2,1),float3(1,1,1),col*saturate(1-GetBlur1(uv).x*2));\nretb = lerp(GetPixel(uv).z*float3(0.6,0.2,1),float3(1,1,1),col*saturate(1-GetBlur1(uv).x*2));\n    float gx = GetPixel(uv+float2(1,0)*texsize.zw) - GetPixel(uv-float2(1,0)*texsize.zw);\n    float gy = GetPixel(uv+float2(0,1)*texsize.zw) - GetPixel(uv-float2(0,1)*texsize.zw);\n    float3 g = normalize(float3(gx, gy, .04));\n\n    reta = lerp(ret,float3(1.1,0.8,0.5),(dot(g.xyz,float3(frac(uv)-0.5,0.6))*0.5+0.5)*GetPixel(frac(uv)).x);\n    retb = lerp(ret,float3(1.1,0.8,0.5),(dot(g.xyz,float3(frac(uv)-0.5,0.6))*0.5+0.5)*GetPixel(frac(uv)).x);\n\n//retc = lerp(ret,retb,(sin(time)*100));\nret = lerp(ret,reta,q20);\nretc = lerp(ret,retb,(sin(time)*100));\nret = lerp(ret,retc,q20);\n\nret = 1 - ret;\nret *= treb_att * .5;\n}"}