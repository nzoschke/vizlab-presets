{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":5,"additivewave":1,"wave_dots":1,"wave_a":0.001,"wave_scale":0.844,"wave_smoothing":0.9,"warpscale":3.138,"zoom":1.00189,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.8,"mv_a":0,"b1x":0.75},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.midif=0;a.trebif=0;a.trebfix=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q15=0;a.q1=0;a.bassfix=0;a.q23=0;a.q11=0;a.q16=0;a.midfix=0;a.q2=0;a.q14=0;a.bassif=0;","frame_eqs_str":"a.q1=.5+(.1*Math.sin(.41*a.time)+.05*Math.sin(.62*a.time)+.05*Math.sin(.44*a.time));a.q2=.5+(.1*Math.sin(.11*a.time)+.05*Math.sin(.32*a.time)+.05*Math.sin(.95*a.time));a.bassfix=.05+.01*a.bass;a.midfix=.05+.01*a.mid;a.trebfix=.05+.01*a.treb;a.bassif=.00001<Math.abs(above(a.bass_att,1))?a.bassif+a.bassfix:.00001<Math.abs(above(a.bassif,85))?0:.96*a.bassif;a.midif=.00001<Math.abs(above(a.mid_att,1))?a.midif+a.midfix:.00001<Math.abs(above(a.midif,.85))?0:.96*a.midif;a.trebif=.00001<\nMath.abs(above(a.treb_att,1))?a.trebif+a.trebfix:.00001<Math.abs(above(a.trebif,.85))?0:.96*a.trebif;a.q11=a.bassif;a.q12=a.midif;a.q13=a.trebif;a.q14=Math.abs(Math.cos(a.bassif-a.time));a.q15=Math.abs(Math.cos(a.midif-a.time));a.q16=Math.abs(Math.cos(a.trebif-a.time));a.q21=.03*Math.sin(.52*a.time)*Math.cos(1.31*a.time)*Math.sin(.8*a.time);a.q22=.02*Math.sin(.12*a.time)*Math.cos(.19*a.time)*Math.sin(1.29*a.time);a.q23=.02*Math.sin(.23*a.time)*Math.cos(.91*a.time)*Math.sin(1.1*a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"q1=.5+(.1*sin(time*.41)+.05*sin(time*.62)+.05*sin(time*.44));\nq2=.5+(.1*sin(time*.11)+.05*sin(time*.32)+.05*sin(time*.95));\n\nbassfix=.05+.01*bass;\nmidfix=.05+.01*mid;\ntrebfix=.05+.01*treb;\nbassif=if(above(bass_att,1),bassif+bassfix,if(above(bassif,85),0,bassif*.96));\nmidif=if(above(mid_att,1),midif+midfix,if(above(midif,.85),0,midif*.96));\ntrebif=if(above(treb_att,1),trebif+trebfix,if(above(trebif,.85),0,trebif*.96));\n\nq11=bassif;\nq12=midif;\nq13=trebif;\nq14=abs(cos(bassif-time));\nq15=abs(cos(midif-time));\nq16=abs(cos(trebif-time));\n\n\nq21=.03*(sin(time*.52)*cos(time*1.31)*sin(time*.8));\nq22=.02*(sin(time*.12)*cos(time*.19)*sin(time*1.29));\nq23=.02*(sin(time*.23)*cos(time*.91)*sin(time*1.1));","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 xy1_1;\n  vec2 uv3_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4.x = q1;\n  tmpvar_4.y = q2;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - tmpvar_4);\n  float tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (min (abs(\n    (tmpvar_5.x / tmpvar_5.y)\n  ), 1.0) / max (abs(\n    (tmpvar_5.x / tmpvar_5.y)\n  ), 1.0));\n  float tmpvar_8;\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\n  tmpvar_8 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\n  tmpvar_8 = (tmpvar_8 + (float(\n    (abs((tmpvar_5.x / tmpvar_5.y)) > 1.0)\n  ) * (\n    (tmpvar_8 * -2.0)\n   + 1.570796)));\n  tmpvar_6 = (tmpvar_8 * sign((tmpvar_5.x / tmpvar_5.y)));\n  if ((abs(tmpvar_5.y) > (1e-08 * abs(tmpvar_5.x)))) {\n    if ((tmpvar_5.y < 0.0)) {\n      if ((tmpvar_5.x >= 0.0)) {\n        tmpvar_6 += 3.141593;\n      } else {\n        tmpvar_6 = (tmpvar_6 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_6 = (sign(tmpvar_5.x) * 1.570796);\n  };\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_6;\n  tmpvar_9.y = (0.25 / sqrt(dot (tmpvar_5, tmpvar_5)));\n  vec2 tmpvar_10;\n  tmpvar_10 = (uv - vec2(0.5, 0.5));\n  float tmpvar_11;\n  tmpvar_11 = (time * 0.5);\n  xy1_1.x = ((sin(tmpvar_11) * tmpvar_10.x) - (cos(tmpvar_11) * tmpvar_10.y));\n  xy1_1.y = ((cos(tmpvar_11) * tmpvar_10.x) + (sin(tmpvar_11) * tmpvar_10.y));\n  uv3_2 = (tmpvar_9 + xy1_1);\n  ret_3 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  float tmpvar_12;\n  tmpvar_12 = texture (sampler_noise_hq, uv3_2).x;\n  vec3 tmpvar_13;\n  tmpvar_13.x = (0.94 + (0.5 * q21));\n  tmpvar_13.y = (0.943 + (0.5 * q22));\n  tmpvar_13.z = (0.941 + (0.5 * q23));\n  ret_3 = (mix (ret_3, vec3(tmpvar_12), vec3(clamp (\n    ((1.0 - (abs(\n      (((dot (vec3(tmpvar_12), vec3(0.32, 0.49, 0.29)) * 0.8) + 0.05) - roam_sin)\n    ).x * (3.0 + \n      (9.0 * rand_preset.x)\n    ))) - ((texture (sampler_noise_lq, (\n      (uv3_2 * 0.1)\n     + \n      (time * 0.01)\n    )).x * 6.0) - 2.0))\n  , 0.0, 1.0))) * tmpvar_13);\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_3;\n  ret = tmpvar_14.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q1;\n  tmpvar_2.y = q2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - tmpvar_2);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q2;\n  tmpvar_4.y = q1;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - tmpvar_4);\n  float tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (min (abs(\n    (tmpvar_5.x / tmpvar_5.y)\n  ), 1.0) / max (abs(\n    (tmpvar_5.x / tmpvar_5.y)\n  ), 1.0));\n  float tmpvar_8;\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\n  tmpvar_8 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\n  tmpvar_8 = (tmpvar_8 + (float(\n    (abs((tmpvar_5.x / tmpvar_5.y)) > 1.0)\n  ) * (\n    (tmpvar_8 * -2.0)\n   + 1.570796)));\n  tmpvar_6 = (tmpvar_8 * sign((tmpvar_5.x / tmpvar_5.y)));\n  if ((abs(tmpvar_5.y) > (1e-08 * abs(tmpvar_5.x)))) {\n    if ((tmpvar_5.y < 0.0)) {\n      if ((tmpvar_5.x >= 0.0)) {\n        tmpvar_6 += 3.141593;\n      } else {\n        tmpvar_6 = (tmpvar_6 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_6 = (sign(tmpvar_5.x) * 1.570796);\n  };\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_main, fract(uv));\n  vec3 tmpvar_10;\n  tmpvar_10 = (((tmpvar_9.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) - sin(time)) * (tmpvar_9.xyz / (1.3 - \n    cos(((tmpvar_6 - (12.0 * \n      sqrt(dot (tmpvar_3, tmpvar_3))\n    )) - ((0.2 * q11) - time)))\n  )).x);\n  vec3 tmpvar_11;\n  tmpvar_11 = (1.0 - tmpvar_10);\n  ret_1 = ((texture (sampler_main, uv).xyz * tmpvar_11) + (0.55 * tmpvar_10));\n  vec3 tmpvar_12;\n  tmpvar_12 = mix (ret_1, tmpvar_11, vec3((1.5 * clamp (\n    dot (tmpvar_10, tmpvar_11)\n  , 0.0, 1.0))));\n  ret_1 = tmpvar_12;\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = tmpvar_12;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"shader_body\n{\n\nfloat2 center=float2(q1,q2);\n\nfloat2 uv2=uv;\nuv2.x=uv.x+sin(uv2.x*10);\nuv2.y=uv.y+cos(uv2.y*10);\n\nfloat2 uv2m=uv2;\nuv2m.y+=time*.11;\n\nfloat2 uv1 = uv-center;\nfloat2 uv3=float2(atan2(uv1.x,uv1.y), .25/length(uv1));\n\n//You can change the speed and direction of rotation by changing this variable\nfloat rot=.5;\n\n//This variable defines the center of rotation (cx, cy)\nfloat2 cxy=float2(.5,.5);\n\nfloat2 xymod=uv-cxy;\nfloat2 xy1=0;\n\n//Rotate xy plane\nxy1.x=sin(time*rot)*xymod.x-cos(time*rot)*xymod.y;\nxy1.y=cos(time*rot)*xymod.x+sin(time*rot)*xymod.y;\n\nfloat2 rt=(xy1);\nfloat2 rmod=rt;\n\nuv3+=rmod;\n\n//ret = tex2D( sampler_main, uv ).xyz;\nret=GetBlur1(uv);\n    // mix in img...\n    float pic = tex2D(sampler_noise_hq, uv3).xyz;\n    float lum = lum(pic);\n    float use_it = abs(lum*0.8+0.05 - (roam_sin));\n    float LFNoise = tex2D(sampler_noise_lq, uv3*0.1 + time*0.01).x*6-2;\n    use_it = saturate(1 - use_it*(3+9*rand_preset.x) - LFNoise);\n    ret = lerp(ret, pic.x, use_it.x);\n\n//ret=tex2D(sampler_main, uv2m);\n\nret*=float3(.94+.5*q21,.943+.5*q22,.941+.5*q23);\n}\n","comp_hlsl":"shader_body\n{\n\nfloat2 uvc = uv-.5;\nfloat2 uv1 = uv-float2(q1,q2);\nfloat2 uv1a= uv-float2(q2,q1);\nfloat2 uvm = float2(atan2(uvc.x,uvc.y), 1/length(uvc));\nuvm=uv;\n\nfloat tun=atan2(uv1a.x,uv1a.y)-12*length(uv1);\ntun-=.2*q11-time;\n\n\nfloat3 blur = GetBlur1(uvm);\nfloat3 sharp = tex2D(sampler_main, uvm);\nfloat3 fix = GetPixel(frac(uvm));\n\nfloat mod = (fix/((1.3)-cos(tun)));\n\nfloat3 fret = (fix-blur-sin(time))*mod;\nfloat3 inv = 1-fret;\n\nfloat melt = dot(fret, inv);\n\nret=tex2D(sampler_main, float2(uv.x, uv.y))*inv+.55*fret;\nret=lerp(ret, inv, 1.5*saturate(melt));\n\n//ret=GetPixel(uv);\n}"}