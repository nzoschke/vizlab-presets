{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.9995,"warp":0.01,"ob_size":0,"ob_r":0.01,"ib_size":0,"mv_x":6.4,"mv_y":4.8,"mv_l":5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","pixel_eqs_eel":"//sx=sx+.25*sin(x*3);\n//sy=sy+.25*sin(y*3.1);\n\n//dx=dx+.01*cos(y*20+.1*cos(time*.11));\n//dy=dy+.01*sin(x*20+.1*sin(time*.09));","warp":" shader_body { \n  float tmpvar_1;\n  tmpvar_1 = texture (sampler_noise_hq, (((\n    (uv_orig * aspect.xy)\n   * 0.5) + (0.1 * roam_cos).xy) + (0.1 * time))).x;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (mix (texture (sampler_fc_main, uv).xyz, vec3(tmpvar_1), vec3((\n    (1.0 - abs(((\n      dot (vec3(tmpvar_1), vec3(0.32, 0.49, 0.29))\n     + 0.25) - (0.5 + \n      (roam_cos.xy * 0.15)\n    ))).x)\n   - \n    (20.0 * texture (sampler_noise_hq, (tmpvar_1 - ((uv.yx * 8.0) + (time * 0.15)))).x)\n  ))).xxx * 0.95);\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz;\n\n    // mix in code based off of Geiss's\n    float pic = tex2D(sampler_noise_hq, uv_orig*aspect.xy*.5+.1*roam_cos+.1*time).xyz;\n    float lum = lum(pic);\n    float use_it = abs(lum+.25 - (0.5+roam_cos.xy*0.15));\n    float LFNoise = tex2D(sampler_noise_hq, pic-(uv.yx*8 + (time*.15)));\n    use_it = (1-use_it - (20*LFNoise));\n    float tex = lerp(ret, pic, use_it.xxx)*1;\n\nret=tex;\n    // darken (decay) over time\n    ret *= 0.95; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n}"}