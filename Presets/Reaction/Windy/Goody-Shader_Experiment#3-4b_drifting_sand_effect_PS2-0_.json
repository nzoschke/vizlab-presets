{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.9995,"warp":0.01,"ob_size":0,"ob_r":0.01,"ib_size":0,"mv_x":6.4,"mv_y":4.8,"mv_l":5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"x":0.22,"rad":1.46815,"tex_zoom":0.57853,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","pixel_eqs_eel":"","warp":" shader_body { \n  float tmpvar_1;\n  tmpvar_1 = texture (sampler_noise_mq, (((uv_orig * 0.3) + (0.2 * roam_sin).xy) + (0.05 * time))).x;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = vec3(mix (texture (sampler_pw_main, (uv_orig - 0.003)).x, tmpvar_1, clamp ((\n    (1.0 - abs(((\n      dot (vec3(tmpvar_1), vec3(0.32, 0.49, 0.29))\n     + 0.25) - (0.5 + \n      (roam_cos.xy * 0.15)\n    ))).x)\n   - \n    (1.5 - texture (sampler_noise_mq, (tmpvar_1 - (uv.yx * 10.0))).x)\n  ), 0.0, 1.0)));\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_fw_main, uv).xyz * vec3(1.97, 1.78, 1.4));\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    //Drifting sand code based on the mix in code by Geiss\n    // sample previous frame's unwarped image and move it\n    float mov = tex2D( sampler_pw_main, uv_orig-.003 ).xyz;\n\n    float img = tex2D(sampler_noise_mq, uv_orig*.3+.2*roam_sin+.05*time).xyz;\n    float lum = lum(img);\n    float use_it = abs(lum+.25 - (0.5+roam_cos.xy*0.15));\n    float LFNoise = tex2D(sampler_noise_mq, img-(uv.yx*10 ));\n    use_it = saturate(1-use_it - (1.5-LFNoise));\n    float tex = lerp(mov, img, use_it);\n\n//float3 3dnoise = tex3D(sampler_noisevol_hq, uvw);\n\nret=tex;\n\nret=ret;\n}","comp_hlsl":"shader_body\n{\n\nret = tex2D(sampler_fw_main, uv).xyz;\n\nret*=float3(1.97,1.78,1.4);\n\n}"}