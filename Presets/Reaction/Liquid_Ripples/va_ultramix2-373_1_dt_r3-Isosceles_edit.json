{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":5,"wave_brighten":0,"wrap":0,"brighten":1,"wave_a":0.001,"wave_scale":0.721,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":0.33004,"tex_zoom":1.64463,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"shpt = above(bass_att,shpt)*2+(1-above(bass_att,shpt))*((shpt-1.3)*0.96+1.3);\nsdx_r = equal(shpt,2)*0.015*sin(5*time)+(1-equal(shpt,2))*sdx_r;\nsdy_r = equal(shpt,2)*0.015*sin(6*time)+(1-equal(shpt,2))*sdy_r;\n\na1x = .5 + 0.42*cos(1-sin(3.2*time));\na1y = .5 + 0.47*sin(0.72*time-cos(1.1*time));\na2y = .5 + 0.42*cos(1-sin(1.82*time));\na2x = .5 + 0.47*sin(0.72*time-cos(1.72*time));\na3x = .5 + 0.42*sin(1-cos(2.12*time));\na3y = .5 + 0.47*cos(0.72*time-sin(2.7*time));\na4y = .5 + 0.42*sin(1-cos(1.72*time));\na4x = .5 + 0.47*cos(0.72*time-sin(1.2*time));\n\n\nsg1 = abs(sin(time));\nsg2 = a1x*above(sg1,0.75) + a2x*below(sg1,0.25) + a3x*above(sg1,0.25)*below(sg1,0.5)+\na4x*above(sg1,0.5)*below(sg1,0.75);\nsg3 = if(above(shpt,1.3),sg2,sg3);\nsg4 = a1y*above(sg1,0.75) + a2y*below(sg1,0.25) + a3y*above(sg1,0.25)*below(sg1,0.5)+\na4y*above(sg1,0.5)*below(sg1,0.75);\nsg5 = if(above(shpt,1.3),sg4,sg5);\n\n\nx = sg3;\ny = sg5;\nborder_r = q1;\nborder_b = q2;\nborder_g = q3;","init_eqs_eel":"","frame_eqs_eel":"shpt = above(bass_att,shpt)*2+(1-above(bass_att,shpt))*((shpt-1.3)*0.96+1.3);\nsdx_r = equal(shpt,2)*0.015*sin(5*time)+(1-equal(shpt,2))*sdx_r;\nsdy_r = equal(shpt,2)*0.015*sin(6*time)+(1-equal(shpt,2))*sdy_r;\n\na1x = .5 + 0.42*cos(1-sin(3.2*time));\na1y = .5 + 0.47*sin(0.72*time-cos(1.1*time));\na2y = .5 + 0.42*cos(1-sin(1.82*time));\na2x = .5 + 0.47*sin(0.72*time-cos(1.72*time));\na3x = .5 + 0.42*sin(1-cos(2.12*time));\na3y = .5 + 0.47*cos(0.72*time-sin(2.7*time));\na4y = .5 + 0.42*sin(1-cos(1.72*time));\na4x = .5 + 0.47*cos(0.72*time-sin(1.2*time));\n\n\nsg1 = abs(sin(time));\nsg2 = a1x*above(sg1,0.75) + a2x*below(sg1,0.25) + a3x*above(sg1,0.25)*below(sg1,0.5)+\na4x*above(sg1,0.5)*below(sg1,0.75);\nsg3 = if(above(shpt,1.3),sg2,sg3);\nsg4 = a1y*above(sg1,0.75) + a2y*below(sg1,0.25) + a3y*above(sg1,0.25)*below(sg1,0.5)+\na4y*above(sg1,0.5)*below(sg1,0.75);\nsg5 = if(above(shpt,1.3),sg4,sg5);\n\n\nx = sg3;\ny = sg5;\nborder_r = q1;\nborder_b = q2;\nborder_g = q3;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"rad":0.15774,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=1.571;a.x=.1111*Math.floor(rand(11));a.y=.4*Math.floor(rand(11));a.r=.01*Math.floor(rand(100));a.g=.01*Math.floor(rand(100));a.b=.01*Math.floor(rand(100));a.r2=.01*Math.floor(rand(100));a.g2=.01*Math.floor(rand(100));a.b2=.01*Math.floor(rand(100));","init_eqs_eel":"","frame_eqs_eel":"ang = 1.571;\nx = int(rand(11))*.1111;\ny = int(rand(11))*.4;\n\nr = int(rand(100))*.01;\ng = int(rand(100))*.01;\nb = int(rand(100))*.01;\nr2 = int(rand(100))*.01;\ng2 = int(rand(100))*.01;\nb2 = int(rand(100))*.01;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"scaling":0.2248},"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"","point_eqs_str":"a.r=a.q1;a.g=a.q2;a.b=a.q3;a.x+=.42*Math.cos(1-Math.sin(3.2*a.time));a.y+=.47*Math.sin(.72*a.time-Math.cos(1.1*a.time));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"r = q1;\ng = q2;\nb = q3;\n\nx = x + 0.42*cos(1-sin(3.2*time));\ny = y + 0.47*sin(0.72*time-cos(1.1*time));"},{"baseVals":{"enabled":1,"scaling":0.2248},"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"","point_eqs_str":"a.r=1-Math.abs(a.q1);a.g=1-Math.abs(a.q2);a.b=1-Math.abs(a.q3);a.y+=.42*Math.cos(1-Math.sin(1.82*a.time));a.x+=.47*Math.sin(.72*a.time-Math.cos(1.72*a.time));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"r = 1-abs(q1);\ng = 1-abs(q2);\nb = 1-abs(q3);\n\ny = y + 0.42*cos(1-sin(1.82*time));\nx = x + 0.47*sin(0.72*time-cos(1.72*time));"},{"baseVals":{"enabled":1,"scaling":0.2248},"init_eqs_str":"a.q2=0;a.q3=0;a.q1=0;","frame_eqs_str":"","point_eqs_str":"a.r=1-Math.abs(a.q2);a.g=a.q3;a.b=1-Math.abs(.5*a.q2+.5*a.q1);a.x+=.42*Math.sin(1-Math.cos(2.12*a.time));a.y+=.47*Math.cos(.72*a.time-Math.sin(2.7*a.time));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"r = 1-abs(q2);\ng = q3;\nb = 1-abs(0.5*q2 + 0.5*q1);\n\nx = x + 0.42*sin(1-cos(2.12*time));\ny = y + 0.47*cos(0.72*time-sin(2.7*time));"},{"baseVals":{"enabled":1,"scaling":0.2248},"init_eqs_str":"a.q3=0;a.q1=0;a.q2=0;","frame_eqs_str":"","point_eqs_str":"a.r=a.q3;a.g=a.q1;a.b=a.q2;a.y+=.42*Math.sin(1-Math.cos(1.72*a.time));a.x+=.47*Math.cos(.72*a.time-Math.sin(1.2*a.time));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"r = q3;\ng = q1;\nb = q2;\n\ny = y + 0.42*sin(1-cos(1.72*time));\nx = x + 0.47*cos(0.72*time-sin(1.2*time));"}],"init_eqs_str":"a.jzm=0;a.kdx=0;a.tg3=0;a.rg2=0;a.crs=0;a.pfdx_r=0;a.pfthresh=0;a.crx=0;a.cb=0;a.ci=0;a.jcy=0;a.thresh=0;a.q1=0;a.kzm=0;a.jdx=0;a.jwp=0;a.kwp=0;a.dy_r=0;a.cr2=0;a.jrt=0;a.tg2=0;a.cr=0;a.tg1=0;a.jdy=0;a.rg3=0;a.jsx=0;a.pfdy_r=0;a.ksy=0;a.kcy=0;a.rg1=0;a.ksx=0;a.dx_r=0;a.jsy=0;a.kcx=0;a.jcx=0;a.crr=0;a.q2=0;a.cqr=0;a.kx1=0;a.cr1=0;a.q3=0;a.jx1=0;a.kdy=0;a.krt=0;","frame_eqs_str":"a.wave_r=.5+.5*Math.sin(1.6*a.time);a.wave_g=.5+.5*Math.sin(4.1*a.time);a.wave_b=-1+(1-a.wave_r+1-a.wave_g);a.warp=0;a.pfthresh=2*above(a.bass_att,a.pfthresh)+(1-above(a.bass_att,a.pfthresh))*(.96*(a.pfthresh-1.3)+1.3);a.pfdx_r=.015*equal(a.pfthresh,2)*Math.sin(5*a.time)+(1-equal(a.pfthresh,2))*a.pfdx_r;a.pfdy_r=.015*equal(a.pfthresh,2)*Math.sin(6*a.time)+(1-equal(a.pfthresh,2))*a.pfdy_r;a.rg1=Math.abs(Math.sin(a.time));a.rg2=12*a.pfdx_r*above(a.rg1,.5)+12*a.pfdy_r*below(a.rg1,\n.5);a.rg3=.00001<Math.abs(equal(a.pfthresh,2))?a.rg2:a.rg3;a.q1=a.wave_r;a.q2=a.wave_g;a.q3=a.wave_b;","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.tg1=Math.abs(Math.sin(a.time));a.tg2=12*a.dx_r*above(a.tg1,.5)+12*a.dy_r*below(a.tg1,.5);a.tg3=.00001<Math.abs(equal(a.thresh,2))?a.tg2:a.tg3;a.zoom-=.01;a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*\n(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.warp+=above(a.x,.05+.5*Math.sin(a.bass_att))*below(a.x,.1+.5*Math.sin(a.bass_att))*below(a.y,.4)*5;a.warp+=below(a.x,.95-.5*Math.sin(a.treb_att))*above(a.x,.9-.5*Math.sin(a.treb_att))*above(a.y,.6)*5;a.warp+=above(a.y,.05+.5*Math.sin(a.mid_att))*below(a.y,.1+.5*Math.sin(a.mid_att))*above(a.x,.6)*5;a.warp+=below(a.y,.95-.5*\nMath.cos(a.mid_att))*above(a.y,.9-.5*Math.cos(a.mid_att))*below(a.x,.4)*5;a.zoom-=.5*below(a.rad,.05);a.rot+=.1*below(a.rad,.2);a.zoom+=.005*above(a.rad,.2)*a.bass_att;a.zoom-=.05*below(a.rad,.2);a.kdx=a.dx;a.kdy=a.dy;a.ksx=a.sx;a.ksy=a.sy;a.krt=a.rot;a.kzm=a.zoom;a.kcx=a.cx;a.kcy=a.cy;a.kwp=a.warp;a.dx=0;a.dy=0;a.sx=1;a.sy=1;a.rot=0;a.zoom=1;a.cx=.5;a.cy=.5;a.warp=0;a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*\na.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.dy+=8*a.dy_r*(.25*Math.cos(12*a.rad)+.5*Math.sin(12*a.rad*(a.rad*Math.cos(a.thresh*a.time)-a.rad))*a.rad)*Math.cos(12*a.ang);a.dx+=8*a.dy_r*(.25*Math.sin(12*a.rad)+.5*Math.cos(12*a.rad*(a.rad*Math.cos(a.thresh*a.time)-a.rad))*a.rad)*Math.sin(12*a.ang);a.cr1=.8;a.cr2=0;a.crx=a.cr2-a.cr1;a.ci=a.rad;a.cb=.25;a.crs=2;a.cr=pow(div(Math.sin(6.3*a.ci-6.3*a.cb),2)+.5,a.crs)*a.crx+a.cr1;a.cqr=\n.00001<Math.abs(above(a.ci,.25+a.cb))?a.cr:a.crx+a.cr1;a.crr=.00001<Math.abs(below(a.ci,1.5))?a.cqr:a.crx+a.cr1;a.jx1=a.crr;a.kx1=1-a.crr;a.jdx=a.dx;a.jdy=a.dy;a.jsx=a.sx;a.jsy=a.sy;a.jrt=a.rot;a.jzm=a.zoom;a.jcx=a.cx;a.jcy=a.cy;a.jwp=a.warp;a.dx=a.jx1*a.jdx+a.kx1*a.kdx;a.dy=a.jx1*a.jdy+a.kx1*a.kdy;a.sx=a.jx1*a.jsx+a.kx1*a.ksx;a.sy=a.jx1*a.jsy+a.kx1*a.ksy;a.rot=a.jx1*a.jrt+a.kx1*a.krt;a.zoom=a.jx1*a.jzm+a.kx1*a.kzm;a.cx=a.jx1*a.jcx+a.kx1*a.kcx;a.cy=a.jx1*a.jcy+a.kx1*a.kcy;a.warp=a.jx1*a.jwp+a.kx1*\na.kwp;","init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(1.6*time);\nwave_g = 0.5 + 0.5*sin(4.1*time);\nwave_b = -1 + (1-wave_r + 1-wave_g);\nwarp = 0;\npfthresh = above(bass_att,pfthresh)*2+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);\npfdx_r = equal(pfthresh,2)*0.015*sin(5*time)+(1-equal(pfthresh,2))*pfdx_r;\npfdy_r = equal(pfthresh,2)*0.015*sin(6*time)+(1-equal(pfthresh,2))*pfdy_r;\nrg1 = abs(sin(time));\nrg2 = 12*pfdx_r*above(rg1,0.5) + 12*pfdy_r*below(rg1,0.5);\nrg3 = if(equal(pfthresh,2),rg2,rg3);\n\nq1 = wave_r;\nq2 = wave_g;\nq3 = wave_b;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\ntg1 = abs(sin(time));\ntg2 = 12*dx_r*above(tg1,0.5) + 12*dy_r*below(tg1,0.5);\ntg3 = if(equal(thresh,2),tg2,tg3);\n\n\nzoom = zoom - 0.01;\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\nwarp = warp + above(x,0.05 + 0.5*sin(bass_att))*below(x,0.1 + 0.5*sin(bass_att))\n*below(y,0.4)*5;\nwarp = warp + below(x,0.95 - 0.5*sin(treb_att))*above(x,0.9 - 0.5*sin(treb_att))*\nabove(y,0.6)*5;\nwarp = warp + above(y,0.05 + 0.5*sin(mid_att))*below(y,0.1 + 0.5*sin(mid_att))\n*above(x,0.6)*5;\nwarp = warp + below(y,0.95 - 0.5*cos(mid_att))*above(y,0.9 - 0.5*cos(mid_att))*\nbelow(x,0.4)*5;\nzoom = zoom - below(rad,0.05)*0.5;\nrot = rot + below(rad,0.2)*0.1;\nzoom = zoom + 0.005*above(rad,0.2)*(bass_att);\nzoom = zoom - 0.05*below(rad,0.2);\nkdx=dx;//////////////////////////////////////////\nkdy=dy;\nksx=sx;\nksy=sy;\nkrt=rot;\nkzm=zoom;\nkcx=cx;\nkcy=cy;\nkwp=warp;\n\ndx=0;\ndy=0;\nsx=1;\nsy=1;\nrot=0;\nzoom=1;\ncx=.5;\ncy=.5;\nwarp=0;/////////////////////////////////////////////////////\n\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\ndy = dy + dy_r*8*(0.25*cos(12*rad)+0.5*sin((12*rad)*(rad*cos(thresh*time)-rad))\n*rad)*cos(12*ang);\ndx = dx + dy_r*8*(0.25*sin(12*rad)+0.5*cos((12*rad)*(rad*cos(thresh*time)-rad))\n*rad)*sin(12*ang);\n///////////////////////////////////////\ncr1=80*.01;\ncr2=0*.01;\ncrx=cr2-cr1;\nci=rad;\ncb=.25  ;\ncrs=2;\ncr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;\ncqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);\njx1=crr;\nkx1=1-crr;\n\njdx=dx;\njdy=dy;\njsx=sx;\njsy=sy;\njrt=rot;\njzm=zoom;\njcx=cx;\njcy=cy;\njwp=warp;\n\ndx=(jx1*jdx+kx1*kdx);\ndy=(jx1*jdy+kx1*kdy);\nsx=(jx1*jsx+kx1*ksx);\nsy=(jx1*jsy+kx1*ksy);\nrot=(jx1*jrt+kx1*krt);\nzoom=(jx1*jzm+kx1*kzm);\ncx=(jx1*jcx+kx1*kcx);\ncy=(jx1*jcy+kx1*kcy);\nwarp=(jx1*jwp+kx1*kwp);////////////////////////////////////////////////////","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\n  tmpvar_4 = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  float tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\n  tmpvar_7 = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4;\n  tmpvar_10.y = tmpvar_7;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  tmpvar_11.y = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x + 0.004);\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_7;\n  tmpvar_13.y = -(tmpvar_4);\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_14;\n  x_14 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\n   * 180.0) / sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )));\n  ret_2.z = (ret_2.z * 0.8);\n  ret_2.z = (ret_2.z + 0.004);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_7);\n  tmpvar_15.y = tmpvar_4;\n  my_uv_1 = (tmpvar_15 * 0.045);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_3.x);\n  tmpvar_16.y = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_3.y);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\n   * 0.1) + 0.01));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_2;\n  ret = tmpvar_17.xyz;\n }","comp":" shader_body { \n  vec2 uv_rr_1;\n  vec2 uv_r_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4.x = q13;\n  tmpvar_4.y = q14;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((uv - tmpvar_4) * aspect.xy);\n  vec2 tmpvar_6;\n  tmpvar_6.x = ((q12 * tmpvar_5.x) - (q11 * tmpvar_5.y));\n  tmpvar_6.y = ((q11 * tmpvar_5.x) + (q12 * tmpvar_5.y));\n  uv_r_2 = (q15 * tmpvar_6);\n  uv_r_2 = (tmpvar_4 + (uv_r_2 * aspect.zw));\n  uv_r_2 = (1.0 - abs((\n    (fract((uv_r_2 * 0.5)) * 2.0)\n   - 1.0)));\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv_r_2 - tmpvar_4);\n  vec2 tmpvar_8;\n  tmpvar_8.x = ((q18 * tmpvar_7.x) - (q17 * tmpvar_7.y));\n  tmpvar_8.y = ((q17 * tmpvar_7.x) + (q18 * tmpvar_7.y));\n  uv_rr_1 = (q16 * tmpvar_8);\n  uv_rr_1 = (tmpvar_4 + uv_rr_1);\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv_rr_1 - 0.5);\n  float tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = (min (abs(\n    (tmpvar_9.x / tmpvar_9.y)\n  ), 1.0) / max (abs(\n    (tmpvar_9.x / tmpvar_9.y)\n  ), 1.0));\n  float tmpvar_12;\n  tmpvar_12 = (tmpvar_11 * tmpvar_11);\n  tmpvar_12 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_12) + 0.05368138) * tmpvar_12) - 0.1173503)\n     * tmpvar_12) + 0.1938925) * tmpvar_12) - 0.3326756)\n   * tmpvar_12) + 0.9999793) * tmpvar_11);\n  tmpvar_12 = (tmpvar_12 + (float(\n    (abs((tmpvar_9.x / tmpvar_9.y)) > 1.0)\n  ) * (\n    (tmpvar_12 * -2.0)\n   + 1.570796)));\n  tmpvar_10 = (tmpvar_12 * sign((tmpvar_9.x / tmpvar_9.y)));\n  if ((abs(tmpvar_9.y) > (1e-08 * abs(tmpvar_9.x)))) {\n    if ((tmpvar_9.y < 0.0)) {\n      if ((tmpvar_9.x >= 0.0)) {\n        tmpvar_10 += 3.141593;\n      } else {\n        tmpvar_10 = (tmpvar_10 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_10 = (sign(tmpvar_9.x) * 1.570796);\n  };\n  vec2 tmpvar_13;\n  tmpvar_13.x = ((tmpvar_10 * q21) * 1.5);\n  tmpvar_13.y = (((0.666 * \n    log(sqrt(dot (tmpvar_9, tmpvar_9)))\n  ) - (tmpvar_10 * q21)) + q22);\n  ret_3 = (texture (sampler_main, clamp ((0.5 + \n    ((0.5 - abs((\n      (fract((tmpvar_13 * 0.5)) * 2.0)\n     - 1.0))) * vec2(0.96, 1.02))\n  ), 0.0, 1.0)).xyz - (roam_sin.wzy * roam_cos.xyz));\n  vec3 tmpvar_14;\n  tmpvar_14 = pow (((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) / bass_att), vec3((1.0 - dot (\n    clamp (pow (((\n      (texture (sampler_blur1, uv).xyz * scale1)\n     + bias1) / treb_att), vec3((1.0 - dot (\n      clamp (ret_3, 0.0, 1.0)\n    , vec3(0.32, 0.49, 0.29))))), 0.0, 1.0)\n  , vec3(0.32, 0.49, 0.29)))));\n  ret_3 = tmpvar_14;\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = tmpvar_14;\n  ret = tmpvar_15.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with\n    float1 d = 0.005;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float2 my_uv = uv - float2(dx,dy)*0.01 + float2(dxb,dyb)*0.003;\n\n\n\n    float2 v = 0.01;\n    ret.x = tex2D( sampler_fw_main, my_uv -floor(my_uv)*0).x;\n\n    \n    ret.x += (ret.x - GetBlur3(uv).x)*.1;\n    ret.x += 0.004;\n\n\n//--------------------------------\n\n    my_uv = uv + float2(dy,-dx)*0.05*(1.2-GetBlur3(uv).y);\n\n\n\n    v = 0.01;\n    ret.z = tex2D( sampler_fw_main, my_uv).z;\n    \n    ret.z += (ret.z - GetBlur1(uv).z)*length(my_uv-uv)*180/length(scale);\n    ret.z *= 0.8;\n    ret.z += 0.004;\n\n\n\n//--------------------------------\n\n    d = 0.01;\n    my_uv = float2(-dy,dx)*0.045;\n\n    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;\n    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;\n    my_uv += uv - float2(dx,dy)*0.03;\n\n\n\n    v = 0.01;\n    ret.y =tex2D( sampler_fw_main, my_uv).y;\n\n    \n    ret.y += (ret.y - GetBlur3(my_uv).y)*0.1 + 0.01;\n//ret-=roam_sin*roam_cos.zxy;\n//ret = 0;\n}","comp_hlsl":"shader_body\n{\n//ret=tex2D(sampler_main,uv);\n// ***** Flexis rotating caleidoscope code *****\nfloat2 cntr = float2(q13,q14); float sin = q11; float cos = q12; float scale = q15;\nfloat2 uv_r = (uv-cntr)*aspect.xy;\n       uv_r = scale*float2( cos*uv_r.x - sin*uv_r.y, sin*uv_r.x + cos*uv_r.y); // rotation\n       uv_r = cntr + uv_r*aspect.zw;\n       uv_r = 1.0 - abs( frac( uv_r * 0.5 ) * 2.0 - 1.0 ); // mirror\nsin = q17; cos = q18; scale = q16;\nfloat2 uv_rr = (uv_r-cntr);\n       uv_rr = scale*float2( cos*uv_rr.x - sin*uv_rr.y, sin*uv_rr.x + cos*uv_rr.y); // counter-rotation\n       uv_rr = cntr + (uv_rr);\nfloat t = q22;\nfloat2 c = ((uv_rr-0.5));\nfloat1 ang_hq = atan2(c.x,c.y);\nfloat2 spiral = float2(ang_hq*q21*1.5,0.666*log(length(c))-ang_hq*q21+t);\nspiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*float2(0.96,1.02); // mirror\nret = GetPixel(saturate(spiral));\nret-=roam_sin.wzy*roam_cos;\n\n\n//ret=lum(ret)>0+(lum(ret)<=0.75)*ret;\nret=pow(GetBlur1(uv).xyz/treb_att,1-lum(saturate(ret.xyz)));\nret=pow(GetBlur2(uv).xyz/bass_att,1-lum(saturate(ret.xyz)));\n//ret=1-ret;\n}"}