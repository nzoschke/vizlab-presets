{"version":2,"baseVals":{"rating":5,"gammaadj":8,"decay":1,"echo_zoom":1,"wave_brighten":0,"solarize":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":495,"sep":4,"spectrum":1,"thick":1,"scaling":100,"smoothing":1,"a":0.99},"init_eqs_str":"a.d=0;a.n=0;a.y1=0;a.xx=0;a.z=0;a.w=0;a.t5=0;a.t1=0;a.x1=0;a.q6=0;a.zoom=0;a.q1=0;a.q5=0;a.t8=0;a.d1=0;a.t3=0;a.t6=0;a.pi=0;a.pi3=0;a.q4=0;a.t7=0;a.c2=0;a.s3=0;a.rd=0;a.t=0;a.zz=0;a.c3=0;a.t2=0;a.q2=0;a.q3=0;a.s1=0;a.s2=0;a.t4=0;a.yy=0;a.c=0;a.c1=0;a.t2=0;a.t3=0;a.t4=0;a.ab=1;","frame_eqs_str":"a.t1=a.q1;a.t2=a.q2;a.t3=a.q3;a.t4=a.q4;a.t5=a.q5;a.t6=a.q6;a.t8=.07;a.t7=1;","point_eqs_str":"a.t7=-a.t7;a.pi=Math.asin(1);a.n=180;a.rd=.075;a.xx=.5*Math.sin(a.sample*a.pi*4+(a.t7+1)*a.t8)+Math.cos(a.sample*a.pi*a.n)*a.rd*Math.sin(a.sample*a.pi*4+(a.t7+1)*a.t8);a.yy=.5*Math.cos(a.sample*a.pi*4+(a.t7+1)*a.t8)+Math.cos(a.sample*a.pi*a.n)*a.rd*Math.cos(a.sample*a.pi*4+(a.t7+1)*a.t8);a.zz=Math.sin(a.sample*a.pi*a.n)*a.rd;a.d=sqrt(a.xx*a.xx+a.yy*a.yy+a.zz*a.zz);a.d1=1;a.xx*=a.d1;a.yy*=a.d1;a.zz*=a.d1;a.w=-a.d*a.t5*0;a.s1=Math.sin(1*a.t2+a.w);a.s2=Math.sin(1*a.t3+a.w);a.s3=\nMath.sin(1*a.t4+a.w);a.c1=Math.cos(1*a.t2+a.w);a.c2=Math.cos(1*a.t3+a.w);a.c3=Math.cos(1*a.t4+a.w);a.z=(a.c3*a.s1*a.c2+a.s3*a.s2)*a.xx-(a.c3*a.s1*a.s2-a.s3*a.c2)*a.yy+a.c3*a.c1*a.zz;a.x1=a.c1*a.c2*a.xx+a.c1*a.s2*a.yy-a.s1*a.zz;a.y1=(a.s3*a.s1*a.c2-a.c3*a.s2)*a.xx+(a.s3*a.s1*a.s2+a.c3*a.c2)*a.yy+a.s3*a.c1*a.zz;a.d=sqrt(a.x1*a.x1+a.y1*a.y1);a.w=Math.atan2(a.x1,a.y1);a.a=1;a.zoom=.5*Math.atan2(a.a,a.a+a.z)*a.d;a.x=.5+a.zoom*Math.sin(a.w);a.y=.5+a.zoom*Math.cos(a.w);a.pi3=2.09418562716;a.t=6*a.sample+\n2*a.t3;a.c=.5015;a.r=(Math.sin(a.t)+1)*a.c;a.g=(Math.sin(a.t-a.pi3)+1)*a.c;a.b=(Math.sin(a.t-2*a.pi3)+1)*a.c;","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\nab = 1;","frame_eqs_eel":"t1 = q1;\nt2 = q2;\nt3 = q3;\nt4 = q4;\nt5 = q5;\nt6 = q6;\nt8 = .07;\nt7 = 1;","point_eqs_eel":" //myFreq     = log10(log10(sample)+3)*10000;\n //myAltFreq  = time*0.2+myFreq*4-0.8; \n //fade       = 20*(1.1-myFreq);//*value1 \n t7 = -t7;\n pi = asin(1);\n n = 180;\n rd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\n xx = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4+(t7+1)*t8);\n yy = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4+(t7+1)*t8);\nzz = sin(sample*pi*n)*rd;\n\nd = sqrt( xx*xx + yy*yy + zz*zz);\nd1 = 1;\nxx = xx*d1;\nyy = yy*d1;\nzz = zz*d1;\n\nw = -d*t5*0;\ns1 = sin(t2*1+w);\ns2 = sin(t3*1+w);\ns3 = sin(t4*1+w);\nc1 = cos(t2*1+w);\nc2 = cos(t3*1+w);\nc3 = cos(t4*1+w);\n\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\n\nd = sqrt( x1*x1 + y1*y1);\nw = atan2(x1,y1);\na = 1;\nzoom = 0.5*atan2(a,a+z)*d;//0.4*atan2(a+d,a+z);//0.5*(1/(z+a));\nx = 0.5 + zoom*sin(w);\ny = 0.5 + zoom*cos(w);\n\npi3 = 3.1415926*2*0.3333;\nt = sample*6.0 + t3*2;\nc=0.5015;\n\nr = (sin(t      )+1)*c;\ng = (sin(t-  pi3)+1)*c;\nb = (sin(t-2*pi3)+1)*c;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.px=0;a.mq1=0;a.index2=0;a.speed_=0;a.q25=0;a.index=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.mq31=0;a.dec_med=0;a.q5=0;a.py=0;a.mq21=0;a.movz=0;a.mq24=0;a.trel=0;a.q9=0;a.chng=0;a.mq28=0;a.rott=0;a.vol__=0;a.mq23=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.vx=0;a.dec_slow=0;a.q11=0;a.q10=0;a.atime=0;a.vy=0;a.vz=0;a.q4=0;a.dir=0;a.q16=0;a.q26=0;a.p2=0;a.avg=0;a.mq27=0;a.mq25=0;a.trig=0;a.mq22=0;a.beat=0;a.q17=0;a.vol=0;a.p1=0;a.peak=\n0;a.mq26=0;a.q2=0;a.q27=0;a.speed=0;a.q3=0;a.t0=0;a.vol_=0;a.q7=0;a.q28=0;a.q20=0;a.q8=0;a.ang0=0;a.speed_=1;a.vx=0;a.vy=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.dec_med=\npow(.9,div(30,a.fps));a.dec_slow=pow(.96,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.2+a.avg+a.peak)*above(a.time,a.t0+.5);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),8);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q24=a.is_beat;a.vol=a.bass_att+a.mid_att+a.treb_att;a.vol_=a.dec_med*a.vol_+\n(1-a.dec_med)*a.vol;a.vol__=a.dec_med*a.vol__+(1-a.dec_med)*a.vol_;a.q27=a.index+1;a.q28=a.index2+1;a.k1=a.is_beat*equal(mod(a.index,4),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.trig=a.q24*bnot(mod(a.index,8));a.vx=a.vx*bnot(a.trig)+a.trig*(div(Math.floor(rand(100)),100)-.5);a.vy=a.vy*bnot(a.trig)+a.trig*(div(Math.floor(rand(100)),100)-.5);a.vz=a.vz*bnot(a.trig)+a.trig*(div(Math.floor(rand(100)),\n100)-.5);a.q10=.2+a.vy*a.vy*4;a.q11=.5*Math.sin(div(a.time,9))+.3;a.speed=Math.min(a.vol_-a.vol__+.5,1);a.speed=Math.max(a.speed,-.5);a.speed_=bnot(a.trig)*a.speed_+a.trig*a.speed;a.movz+=div(2,a.fps)*a.speed_;a.q9=a.movz;a.q12=2*Math.min(a.q22,6);a.trig=bnot(mod(a.index,4))*a.q24;a.dir=bnot(a.trig)*a.dir+a.trig*(Math.floor(rand(10))-5);a.trel+=div(.2,a.fps)*a.dir;a.q5=Math.cos(a.trel);a.q6=Math.sin(a.trel+0*a.q27*mod(a.q28,2));a.q7=-a.q6;a.q8=a.q5;a.px=a.px*a.dec_med+(1-a.dec_med)*a.vx;a.py=a.py*\na.dec_med+(1-a.dec_med)*a.vy;a.q15=div(a.px,3);a.q16=div(a.py,3);a.q13=Math.min(2,1+Math.abs(8*a.px*a.py));a.ang0=a.ang0*a.dec_med+a.vz*(1-a.dec_med);a.q17=2*a.ang0;a.zoom=1.1;a.rot=.2*Math.sin(bnot(mod(a.q28,2))*a.q28);a.dx=0;a.monitor=a.q17;","pixel_eqs_str":"","init_eqs_eel":"speed_=1;vx = 0; vy = 0;","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\ndec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.96, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.5);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%8;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq24 = is_beat;\nvol = bass_att + mid_att + treb_att;\nvol_ = dec_med * vol_ + (1-dec_med)* vol;\nvol__ = dec_med * vol__ + (1-dec_med)* vol_;\nq27 = index + 1;\nq28 = index2 + 1;\n\nk1 =  is_beat*equal(index%4,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\ntrig = q24 * bnot(index%8);\nvx = vx*bnot(trig) + trig* (int(rand(100))/100-.5);\nvy = vy*bnot(trig) + trig* (int(rand(100))/100-.5);\nvz = vz*bnot(trig) + trig* (int(rand(100))/100-.5);\n\nq10 = 0.2+vy*vy*4;\nq11 = sin(time/9)*.5+.3;\n\nspeed = min(vol_-vol__+.5,1);\nspeed = max(speed,-.5);\nspeed_ = bnot(trig)*speed_ + trig*speed;\nmovz = movz + 2/fps*speed_;\nq9 = movz;\n\nq12 = min(q22,6)*2;\n//q13 = 1.5+sin(time/5);\ntrig = bnot(index%4) * q24;\ndir = bnot(trig)*dir + trig*(int(rand(10))-5);\n\ntrel = trel + .2/fps*dir;\n\nq5 = cos(trel);\nq6 = sin(trel+0*q27*(q28%2));\nq7 = -q6;\nq8 = q5;\n\npx = px * dec_med + (1-dec_med)*vx;\npy = py * dec_med + (1-dec_med)*vy;\nq15 = px/3;\nq16 = py/3;\n\nq13 = min(2,1+abs(8*px*py));\n\n\nang0 = ang0*dec_med + vz*(1-dec_med);\nq17 = ang0*2; \n\nzoom = 1.1;\nrot = .2*sin(bnot(q28%2)*q28) ;\ndx = .00;\n\nmonitor = q17;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.z;\n  tmpvar_5.y = tmpvar_4.z;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\n  ret_1.z = (((texture (sampler_main, tmpvar_6).z - \n    ((texture (sampler_main, tmpvar_6).z - ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3).z) * 0.02)\n  ) - 0.008) + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\n  ).xyz - 0.5) * 0.1)).x;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.x;\n  tmpvar_7.y = tmpvar_4.x;\n  vec2 tmpvar_8;\n  tmpvar_8 = ((0.5 + (uv - 0.5)) - (tmpvar_7 * texsize.zw));\n  ret_1.x = texture (sampler_main, tmpvar_8).x;\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_8.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_9.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_9.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_9.z * 0.5));\n  };\n  ret_1.x = (ret_1.x + ((\n    (ret_1.x - ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3))\n  .x * 0.4) + 0.006));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_3.x;\n  tmpvar_10.y = tmpvar_4.x;\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_3.y;\n  tmpvar_11.y = tmpvar_4.y;\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_3.z;\n  tmpvar_12.y = tmpvar_4.z;\n  ret_1.y = texture (sampler_fc_main, (((uv - \n    ((tmpvar_10 * texsize.zw) * 8.0)\n  ) + (\n    (tmpvar_11 * texsize.zw)\n   * 4.0)) + ((tmpvar_12 * texsize.zw) * 8.0))).y;\n  ret_1.y = (ret_1.y * (1.0 + (ret_1.x * 0.1)));\n  ret_1.y = (ret_1.y - (0.004 + (\n    clamp (ret_1.z, 0.0, 1.0)\n   * 0.04)));\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_1;\n  ret = tmpvar_13.xyz;\n }","comp":" shader_body { \n  vec3 uv_sphere_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 5.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.y;\n  tmpvar_6.y = tmpvar_5.y;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_5.y;\n  tmpvar_7.y = -(tmpvar_4.y);\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_4.x;\n  tmpvar_8.y = tmpvar_5.y;\n  vec2 tmpvar_9;\n  tmpvar_9 = (((\n    (vec2(0.5, 0.5) + ((uv - vec2(0.5, 0.5)) * (1.0 - (bass_att * 0.04))))\n   - \n    ((tmpvar_7 * texsize.zw) * 16.0)\n  ) - (\n    (tmpvar_8 * texsize.zw)\n   * 8.0)) + (vec2(16.0, -16.0) * texsize.zw));\n  vec3 tmpvar_10;\n  tmpvar_10 = (vec3(((\n    ((texture (sampler_blur1, (uv - (tmpvar_6 * 0.2))).xyz * scale1) + bias1)\n  .y * 0.75) + (\n    ((-(tmpvar_4) + tmpvar_5).y + 0.5)\n   * 0.25))) * (vec3(1.0, 1.0, 1.0) - vec3(clamp (\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 1.2)\n  , 0.0, 1.0))));\n  vec3 tmpvar_11;\n  tmpvar_11 = mix (tmpvar_10, (tmpvar_10 * vec3(2.0, 1.0, 0.0)), vec3((texture (sampler_main, uv).z * 3.0)));\n  ret_2 = tmpvar_11;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_9.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_11.x > (q26 * q13)) && (tmpvar_11.x <= (q23 * q11)))) {\n    ret_2.z = (tmpvar_11.z - (tmpvar_12.x * 0.5));\n  };\n  if (((tmpvar_11.y > (q25 * q11)) && (tmpvar_11.y <= (q22 * q12)))) {\n    ret_2.x = (tmpvar_11.x - (tmpvar_12.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\n    ret_2.y = (tmpvar_11.y - (tmpvar_12.z * 0.5));\n  };\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_4.x;\n  tmpvar_13.y = tmpvar_5.x;\n  vec2 tmpvar_14;\n  tmpvar_14.x = -(tmpvar_5.z);\n  tmpvar_14.y = tmpvar_4.z;\n  vec2 tmpvar_15;\n  tmpvar_15.x = tmpvar_4.x;\n  tmpvar_15.y = tmpvar_5.x;\n  vec2 tmpvar_16;\n  tmpvar_16.x = -(tmpvar_5.z);\n  tmpvar_16.y = tmpvar_4.z;\n  uv_sphere_1.xy = (fract(uv) * 2.0);\n  uv_sphere_1.xy = (1.0 - abs((uv_sphere_1.xy - 1.0)));\n  vec4 tmpvar_17;\n  tmpvar_17 = texture (sampler_main, uv_sphere_1.xy, -0.5);\n  uv_sphere_1 = tmpvar_17.xyz;\n  ret_2 = (mix (mix (ret_2, vec3(0.0, -0.2, -1.0), vec3(\n    (((texture (sampler_blur1, tmpvar_9).xyz * scale1) + bias1).x * 2.4)\n  )), (vec3(0.0, 0.5, 1.0) * \n    (0.9 + (-(tmpvar_4) + tmpvar_5).x)\n  ), vec3(max (texture (sampler_main, \n    ((uv + ((tmpvar_13 * texsize.zw) * 6.0)) + ((tmpvar_14 * texsize.zw) * 24.0))\n  ).x, texture (sampler_main, \n    ((uv + ((tmpvar_15 * texsize.zw) * 6.0)) - ((tmpvar_16 * texsize.zw) * 24.0))\n  ).x))) + tmpvar_17.xyz);\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = ret_2;\n  ret = tmpvar_18.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw * 8;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1 + rand_frame.xy;\n\nfloat2 uv_blue = lerp(uv_orig,uv,1) + float2(dx.z,dy.z)*texsize.zw*4;\nret.z = GetPixel(uv_blue).z  - (GetPixel(uv_blue).z - GetBlur3(uv_blue).z)*0.02 - 0.008\n            +(tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0.1;\n\n\nfloat2 uv_red = 0.5 + (uv-0.5) - float2(0,0)*texsize.zw - float2(dx.x,dy.x)*texsize.zw;\nret.x = tex2D( sampler_main, uv_red ).x;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv_red.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \nret.x += (ret.x - GetBlur3(uv_red)).x*0.4 + 0.006;\n\n\nfloat2 uv_green = lerp(uv_orig,uv,1) - float2(dx.x,dy.x)*texsize.zw*8\n                                       + float2(dx.y,dy.y)*texsize.zw*4\n                                       + float2(dx.z,dy.z)*texsize.zw*8;\nret.y = tex2d(sampler_fc_main,uv_green).y;\nret.y *= 1 + ret.x*0.1;\nret.y -= 0.004 + saturate(ret.z)*0.04;\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*5;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\nfloat2 uv1 = uv - float2(dx.y,dy.y)*0.2;\nret = GetBlur1(uv1).y*0.75 + ((-dx+dy).y+0.5)*0.25;\n\nfloat2 c = 0.5;\nfloat2 uv2 = c + (uv-c)*(1-bass_att*0.04) - float2(dy.y,-dx.y)*texsize.zw*16 - float2(dx.x,dy.y)*texsize.zw*8 + float2(1,-1)*texsize.zw*16;\nret = lerp(ret,0,saturate(GetBlur1(uv).z*1.2));\nret = lerp(ret,ret*float3(2,1,0),GetPixel(uv).z*3);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv2.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret = lerp(ret*float3(1,1,1),float3(0,-0.2,-1),GetBlur1(uv2).x*2.4);\nfloat2 uv3 = uv + float2(dx.x,dy.x)*texsize.zw*6 + float2(-dy.z,dx.z)*texsize.zw*24;\nfloat2 uv31 = uv + float2(dx.x,dy.x)*texsize.zw*6 - float2(-dy.z,dx.z)*texsize.zw*24;\nfloat x = max(GetPixel(uv3).x,GetPixel(uv31).x);\nret = lerp(ret,float3(0,0.5,1)*(0.9+(-dx+dy).x),x);\n//ret = GetPixel(uv).z;\nfloat3 uv_sphere;\nuv_sphere.xy = uv;\nuv_sphere.xy = frac( uv_sphere.xy  ) * 2.0;\nuv_sphere.xy = 1.0 - abs( uv_sphere.xy - 1.0 );\nuv_sphere = tex2Dbias( sampler_main, float4(uv_sphere.xy,0.0,-0.5) );\nret += uv_sphere;\n\n}"}