{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":1,"additivewave":1,"wave_thick":1,"wave_brighten":0,"darken_center":1,"wave_a":0.002,"wave_scale":0.219,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.303,"warpscale":3.259,"zoomexp":0.45112,"zoom":1.02979,"warp":0.09861,"wave_g":0,"wave_b":0.65,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"scaling":0.99999,"smoothing":0},"init_eqs_str":"a.freqlvll=0;a.myampl=0;a.myfreql=0;a.mycoll=0;a.myfreqr=0;a.logsample=0;a.pi=0;a.pi23=0;","frame_eqs_str":"","point_eqs_str":"a.freqlvll=div(-10.4*pow(a.value1,1.81),pow(a.value1,1.8))+10.2;a.myampl=.00001<Math.abs(below(a.freqlvll,.5))?a.freqlvll:.49;a.myfreql=13.5*pow(a.sample,.01)-12.645;a.mycoll=15*(1-a.myfreqr);a.logsample=-log10(a.sample);a.pi=3.14159265359;a.pi23=.66666666666*a.pi;a.r=Math.sin(a.time+a.value1+a.myfreql-0*a.pi23)+div(1,1-div(1,a.value1));a.g=Math.sin(a.time+a.value1+a.myfreql-1*a.pi23)+div(1,1-div(1,a.value1));a.b=Math.sin(a.time+a.value1+a.myfreql-2*a.pi23)+div(1,1-div(1,a.value1));\na.x=a.myampl;a.y=a.myfreql;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":" freqLvlL = -10.4*pow(value1,1.81)/pow(value1,1.8)+10.2;\n myAmpL = if(below(freqLvlL,0.5),freqLvlL,0.49);  \n myFreqL = 13.5*pow(sample,0.01)-12.645;\n myColL = 15*(1-myFreqR);\n logSample = -log10(sample);\n Pi = 3.14159265359;\n Pi23 = 2*Pi*0.33333333333;\n\n\nr = sin(time+value1+myFreqL-0*Pi23)+1/(1-1/value1);// 4*(sin(myFreqL-0*Pi23)+1)/2;//15*(1-myFreqL)+0.222222;//x/(1-y)-sin(time);           \ng = sin(time+value1+myFreqL-1*Pi23)+1/(1-1/value1);//15*(1-myFreqL)+0.555555;//x/sin(time);      \nb = sin(time+value1+myFreqL-2*Pi23)+1/(1-1/value1);//15*(1-myFreqL)+0.888888;//y-x+sin(time);         \nx = myAmpL;\ny = myFreqL;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_str":"a.freqlvlr=0;a.myampr=0;a.myfreqr=0;a.mycolr=0;a.mycolrinv=0;a.pi=0;a.pi23=0;a.myfreql=0;","frame_eqs_str":"","point_eqs_str":"a.freqlvlr=div(10.4*pow(a.value2,1.01),a.value2)-9.2;a.myampr=.00001<Math.abs(above(a.freqlvlr,.5))?a.freqlvlr:.51;a.myfreqr=13.5*pow(a.sample,.01)-12.645;a.mycolr=15*a.myfreqr;a.mycolrinv=1-a.mycolr;a.pi=3.14159265358;a.pi23=.66666666666*a.pi;a.r=Math.sin(a.time-a.value1-a.myfreql+0*a.pi23)+div(1,1-div(1,a.value1));a.g=Math.sin(a.time-a.value1-a.myfreql+1*a.pi23)+div(1,1-div(1,a.value1));a.b=Math.sin(a.time-a.value1-a.myfreql+2*a.pi23)+div(1,1-div(1,a.value1));a.x=a.myampr;\na.y=a.myfreqr;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":" freqLvlR = 10.4*pow(value2,1.01)/value2-9.2;\n myAmpR = if(above(freqLvlR,0.5),freqLvlR,0.51);\n myFreqR = 13.5*pow(sample,0.01)-12.645;\n myColR = 15*myFreqR;\n myColRInv = 1-myColR;\n Pi = 3.14159265358;\n Pi23 = 2*Pi*0.33333333333;//myDith = if(equal(int(myColR)%2,0),myColR,myColRInv);\n\n\nr = sin(time-value1-myFreqL+0*Pi23)+1/(1-1/value1);//myDith;\ng = sin(time-value1-myFreqL+1*Pi23)+1/(1-1/value1);//myDith;//myDith+0.333333;//if(above(0.666666,myColR),myColR-0.6666666,0.000000);//x/sin(time);      \nb = sin(time-value1-myFreqL+2*Pi23)+1/(1-1/value1);//myDith;//myColR+0.333333;//y-x+sin(time);         \nx = myAmpR;\ny = myFreqR;  "},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.r=1-a.sample;a.g=a.mid;a.b=a.sample;a.x=div(10.4*pow(a.value1,1.81),pow(a.value1,1.8))-9.7;a.y=13.5*pow(a.sample,.01)-12.645;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"r = 1-sample;//1-sample;\ng = mid;//mid;\nb = sample;//sample;\nx = 10.4*pow(value1,1.81)/pow(value1,1.8)-9.7;\ny = 13.5*pow(sample,0.01)-12.645;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.r=1-a.sample;a.g=a.mid;a.b=a.sample;a.x=div(-10.4*pow(a.value2,1.81),pow(a.value2,1.8))+10.7;a.y=13.5*pow(a.sample,.01)-12.645;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"r = 1-sample;//1-sample;\ng = mid;//mid;\nb = sample;//sample;\nx = -10.4*pow(value2,1.81)/pow(value2,1.8)+10.7;\ny = 13.5*pow(sample,0.01)-12.645;"}],"init_eqs_str":"a.tic=0;a.st=0;a.vt=0;a.q6=0;a.bt=0;a.q1=0;a.q5=0;a.mid_avg=0;a.tt=0;a.tin=0;a.bass_avg=0;a.vav=0;a.q4=0;a.mt=0;a.ra=0;a.treb_avg=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.ra=.25*div(1,a.tic);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;a.vt+=a.tic*a.vav;a.q1=4*a.tt;a.q2=4*a.mt;a.q3=4*a.bt;a.st=.04;a.q4=a.treb_avg*a.st;a.q5=a.mid_avg*\na.st;a.q6=a.bass_avg*a.st;a.warp=.2*a.vav;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"tic = min(time-tin,.1);\ntin = time;\n\nra = 1/tic*.25;\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\nvt = vt + tic*vav;\n\n\nq1 = tt*4;\nq2 = mt*4;\nq3 = bt*4;\n\nst = .04;\nq4 = treb_avg*st;\nq5 = mid_avg*st;\nq6 = bass_avg*st;\n\nwarp = vav*.2;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.6));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 12.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.08, 0.08, 0.08));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  uv_1.y = uv.y;\n  vec3 ret2_2;\n  vec3 ret_3;\n  uv_1.x = (1.0 - uv.x);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, uv_1);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_main, uv);\n  vec2 tmpvar_6;\n  tmpvar_6.x = (uv_1.x + 0.001);\n  tmpvar_6.y = uv_1.y;\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_main, tmpvar_6);\n  vec2 tmpvar_8;\n  tmpvar_8.x = (uv.x + 0.001);\n  tmpvar_8.y = uv.y;\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_main, tmpvar_8);\n  float tmpvar_10;\n  tmpvar_10 = abs(((\n    (((tmpvar_4.x + tmpvar_4.y) + tmpvar_4.z) - tmpvar_7.x)\n   - tmpvar_7.y) - tmpvar_7.z));\n  if ((tmpvar_10 > 0.1)) {\n    ret_3 = ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2);\n  } else {\n    ret_3 = ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3);\n  };\n  float tmpvar_11;\n  tmpvar_11 = abs(((\n    (((tmpvar_5.x + tmpvar_5.y) + tmpvar_5.z) - tmpvar_9.x)\n   - tmpvar_9.y) - tmpvar_9.z));\n  if ((tmpvar_11 > 0.1)) {\n    ret2_2 = ((texture (sampler_blur2, uv).xyz * scale2) + bias2);\n  } else {\n    ret2_2 = ((texture (sampler_blur3, uv).xyz * scale3) + bias3);\n  };\n  ret_3 = (ret_3 + ((\n    (texture (sampler_blur2, uv_1).xyz * scale2)\n   + bias2) + normalize(\n    (ret_3 - 0.1)\n  )));\n  ret2_2 = (ret2_2 + ((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) + normalize(\n    (ret2_2 - 0.1)\n  )));\n  ret_3 = (ret_3 - ret2_2);\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_3;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // take the difference between the crisp and blurred images,\n    // then add it back into the image.  Creates spots and stripes over time.\n    ret += (ret - GetBlur2(uv))*0.6;\n    ret *= 0.9;\n\n   // add noise:\n   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n   ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 12 * saturate(treb_att-1);\n\n   // desaturate over time, to keep the globs white\n   ret = lerp(ret, lum(ret), 0.08);\n}","comp_hlsl":"shader_body\n{\nfloat2 uv2 = uv;\nuv.x=1-uv.x;\nfloat3 orig,nex;\nfloat3 orig2,nex2;\norig=tex2D(sampler_main,uv);\norig2=tex2D(sampler_main,uv2);\nnex=tex2D(sampler_main,float2(uv.x+0.001,uv.y));\nnex2=tex2D(sampler_main,float2(uv2.x+0.001,uv2.y));\nif(abs(orig.x+orig.y+orig.z-nex.x-nex.y-nex.z)>0.1)\n{ret=GetBlur2(uv);}else\n{ret=GetBlur3(uv);}; \n\nfloat3 ret2;\nif(abs(orig2.x+orig2.y+orig2.z-nex2.x-nex2.y-nex2.z)>0.1)\n{ret2=GetBlur2(uv2);}else\n{ret2=GetBlur3(uv2);}; \n\nret+=GetBlur2(uv)+normalize(ret-0.1);\nret2+=GetBlur2(uv2)+normalize(ret2-0.1);\nret-=ret2;\n}"}