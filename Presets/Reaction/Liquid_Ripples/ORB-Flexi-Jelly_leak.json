{"version":2,"baseVals":{"rating":5,"decay":1,"echo_orient":3,"wave_mode":1,"wave_a":0.001,"zoom":0.96,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_a":0.1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.29318,"tex_ang":1.25664,"tex_zoom":24.1456,"r":0,"a":0.4,"g2":0,"a2":0.3,"border_a":0},"init_eqs_str":"a.q1=0;a.q3=0;","frame_eqs_str":"a.x=.5+.5*Math.sin(.05*a.q1);a.y=.5+.5*Math.sin(.04*a.q1);a.rad=.1*a.q3;","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 +  0.5*sin(q1*0.05);\ny = 0.5 +  0.5*sin(q1*0.04);\nrad = q3*0.1;"},{"baseVals":{"enabled":1,"sides":100},"init_eqs_str":"a.q1=0;a.q3=0;","frame_eqs_str":"a.x=.5+.5*Math.sin(.053*a.q1);a.y=.5+.5*Math.sin(.043*a.q1);a.rad=.1*a.q3;","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 +  0.5*sin(q1*0.053);\ny = 0.5 +  0.5*sin(q1*0.043);\nrad = q3*0.1;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":21,"spectrum":1,"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":21,"spectrum":1,"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":21,"spectrum":1,"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":1,"spectrum":1,"additive":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.05*Math.cos(10*a.sample);a.y=.5+.05*Math.sin(10*a.sample+a.value1);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = 0.5 + 0.05*cos(sample*10);\ny = 0.5 + 0.05*sin(sample*10 + value1);"}],"init_eqs_str":"a.basstime=0;a.stickybit=0;a.volavg2=0;a.q1=0;a.decay_r=0;a.sample1=0;a.difftime=0;a.diff=0;a.decay_b=0;a.edge=0;a.volavg=0;a.bit2=0;a.vol=0;a.rarr=0;a.q3=0;a.basssum=0;a.decay_g=0;a.sample2=0;","frame_eqs_str":"a.basstime=.00001<Math.abs(below(a.basstime,1E3))?1E3:a.basstime;a.basstime+=.03*a.bass_att;a.vol=pow(2*a.bass,2);a.basssum=a.vol;a.stickybit=mod(a.time,2);a.volavg+=a.vol*equal(a.stickybit,1);a.sample1+=equal(a.stickybit,1);a.volavg2+=a.vol*equal(a.stickybit,0);a.sample2+=equal(a.stickybit,0);a.edge=bnot(equal(a.bit2,a.stickybit));a.volavg-=a.volavg*a.edge*a.stickybit;a.volavg2-=a.volavg2*a.edge*equal(a.stickybit,0);a.sample1-=a.sample1*a.edge*a.stickybit;a.sample2-=a.sample2*\na.edge*equal(a.stickybit,0);a.diff=.00001<Math.abs(equal(a.stickybit,1))?div(a.basssum,div(a.volavg2,a.sample2)):0;a.diff=.00001<Math.abs(equal(a.stickybit,0))?div(a.basssum,div(a.volavg,a.sample1)):a.diff;a.diff=.00001<Math.abs(below(a.diff,.1))?0:a.diff;a.q3=a.diff;a.bit2=mod(a.time,2);a.difftime=a.difftime+.09*a.diff+.1*a.bass_att;a.q1=a.difftime;a.difftime=.00001<Math.abs(above(a.difftime,2E3))?0:a.difftime;a.monitor=3.14*Math.abs(Math.cos(a.time));a.rarr=.01*Math.floor(rand(100));a.decay_r=.7+\n.2*Math.abs(Math.sin(a.diff+a.rarr));a.decay_g=.7+.25*Math.abs(Math.cos(a.diff+a.rarr));a.decay_b=.7+.3*Math.abs(Math.atan(a.diff+a.rarr));a.ob_r=.5+.5*Math.sin(.5*a.difftime);a.ob_g=.5+.5*Math.sin(.3*a.difftime);a.ob_b=.5+.5*Math.sin(.4*a.difftime);","pixel_eqs_str":"a.zoom=1;a.rot=0;","init_eqs_eel":"","frame_eqs_eel":"//start in most active range\nbasstime = if(below(basstime,1000),1000,basstime);\n//basstime = if(above(basstime,495),450,basstime);\n\nbasstime = basstime + bass_att*0.03;\nvol = pow(bass*2,2);\nbasssum = vol;\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\ndiff = if(below(diff,0.1),0,diff);\n\n\nq3 = diff;\n\nbit2 = time%2;\n\ndifftime = difftime + diff*0.09 + bass_att*0.1;\nq1 = difftime;\n\n//fix a strange error\ndifftime = if(above(difftime,2000),0, difftime);\n\nmonitor = abs(cos(time))*3.14;\n\nrarr = int(rand(100))*0.01;\n\ndecay_r = 0.7 + 0.2*(abs(sin(diff+rarr)));\ndecay_g = 0.7 + 0.25*(abs(cos(diff+rarr)));\ndecay_b = 0.7 + 0.30*(abs(atan(diff+rarr)));\n\nob_r = 0.5 + 0.5*sin(difftime*0.5);\nob_g = 0.5 + 0.5*sin(difftime*0.3);\nob_b = 0.5 + 0.5*sin(difftime*0.4);","pixel_eqs_eel":"zoom = 1;\nrot = 0;\n//cx = 0.5 + 0.5*sin(q2);\n//cy = cx;\n//zoom = 1;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  tmpvar_1.xyz = texture (sampler_main, (((\n    (((tmpvar_2 * (0.97 + \n      (rad * 0.02)\n    )) + 0.5) + (((texture (sampler_blur1, \n      ((tmpvar_2 * 0.9) + 0.5)\n    ).xyz * scale1) + bias1) * 0.01).xy)\n   - 0.5) + 0.5) - 0.005)).xyz;\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec3 ret2_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 6.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = dot (((\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_4.y = dot (((\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_blur3, uv);\n  ret_2 = (0.25 * clamp ((2.0 * \n    ((tmpvar_6.xyz * scale3) + bias3)\n  ), 0.0, 1.0));\n  ret_2 = (ret_2 - (0.8 * clamp (\n    ((20.0 * ((0.6 * \n      ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n    ) - 0.01)) - 2.0)\n  , 0.0, 1.0)));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_blur1, uv);\n  ret_2 = (ret_2 + clamp ((\n    (30.0 * ((texture (sampler_main, uv).xyz + (\n      ((tmpvar_7.xyz * scale1) + bias1)\n     * 0.15)) - 0.01))\n   - 2.0), 0.0, 1.0));\n  ret_2 = (ret_2 + 0.75);\n  float tmpvar_8;\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_9;\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * dot (\n    (((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3) - ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1))\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader, vec3(tmpvar_8)));\n  ret2_1 = (vec3((-0.5 * dot (\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\n  , vec3(0.32, 0.49, 0.29)))) + (0.8 * (\n    (texture (sampler_blur1, tmpvar_5).xyz * scale1)\n   + bias1)));\n  ret2_1 = (ret2_1 - (0.9 * texture (sampler_main, tmpvar_5).xyz));\n  ret2_1 = (ret2_1 - 0.75);\n  float tmpvar_10;\n  tmpvar_10 = dot (ret2_1, vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_11;\n  tmpvar_11 = mix (vec3(tmpvar_10), (vec3(tmpvar_10) * dot (\n    (((tmpvar_6.xyz * scale3) + bias3) - ((tmpvar_7.xyz * scale1) + bias1))\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader.zxy, tmpvar_9));\n  ret2_1 = tmpvar_11;\n  vec3 tmpvar_12;\n  tmpvar_12 = abs((tmpvar_9 - (2.0 * tmpvar_11)));\n  ret_2 = (tmpvar_12 * tmpvar_12);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_2;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"sampler sampler_grad3;\n\nshader_body\n{\n\n    float3 txr = float3(uv,q1*0.1);\n    float2  uv2 =  uv;\n    uv2 = uv + texsize.zx*(q3,q3);\n    float3 color = tex2D(sampler_noise_lq, uv2) - 0.5; \n    color += tex2D(sampler_noise_mq, uv2) - 0.5; \n    color += tex2D(sampler_noise_hq, uv2) - 0.5; \n\n\n    ret = tex2D( sampler_main, (\n                               (((uv-0.5)*(0.97 + rad*0.02)) + 0.5  \n                                + GetBlur1((uv - 0.5)*0.9 + 0.5)*0.01  + 0.0) - 0.5\n                                )*(1 - pow(rad,1)*0.0) + 0.5   - 0.005).xyz;    \n //   ret = ret-0.002 - q6;// - 0.08; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n\n//Code bits by Flexi and Geiss\n\n    float2 d = texsize.zw*6;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\nfloat2 uv_y = uv-0.25*(float2(lum(dx),lum(dy)));\n\nret = .25*saturate(2*GetBlur3(uv));\nret -= .8*saturate(20*(0.6*GetBlur2(uv)-.01)-2);\nret += saturate(30*((GetPixel(uv)+GetBlur1(uv)*.15)-.01)-2);\nret += .75;\nret = lum(ret);\nret = lerp(ret,ret*lum(GetBlur3(uv_y)-GetBlur1(uv_y)),pow(hue_shader,ret));\n\nfloat3 ret2 = -.5*lum(GetBlur3(uv_y));\nret2 += .8*GetBlur1(uv_y);\nret2 -= .9*GetPixel(uv_y);\nret2 -= .75;\nret2 = lum(ret2);\nret2 = lerp(ret2,ret2*lum(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader.zxy,ret));\n\nret = abs(ret-2*ret2);\n//ret = ret2;\n\nret *= ret;\n\n}"}