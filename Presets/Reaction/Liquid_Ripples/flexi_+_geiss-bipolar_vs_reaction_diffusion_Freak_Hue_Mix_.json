{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.853,"rot":0.006,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.dx_residual=0;a.dy_residual=0;a.bass_thresh=0;","frame_eqs_str":"a.wave_r+=.1*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.05*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.decay-=.01*equal(mod(a.frame,40),0);a.rot+=.01*Math.sin(.113*a.time);a.rot+=.01*Math.sin(.533*a.time);a.rot+=.02*Math.sin(-.323*a.time);a.dx+=a.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.0072*equal(a.bass_thresh,2)*Math.sin(7*a.time)+\n(1-equal(a.bass_thresh,2))*a.dx_residual;a.dy_residual=.0054*equal(a.bass_thresh,2)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2))*a.dy_residual;","pixel_eqs_str":"a.zoom=.9615+.1*a.rad;a.rot=3*a.rot*(1-pow(2*a.rad-1,2));","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.100*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\nwave_g = wave_g + 0.050*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\ndecay = decay - 0.01*equal(frame%40,0);\nrot = rot + 0.01*sin(time*0.113);\nrot = rot + 0.01*sin(time*0.533);\nrot = rot + 0.02*sin(time*-0.323);\ndx = dx + dx_residual;\ndy = dy + dy_residual;\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\ndx_residual = equal(bass_thresh,2)*0.0072*sin(time*7) + (1-equal(bass_thresh,2))*dx_residual;\ndy_residual = equal(bass_thresh,2)*0.0054*sin(time*9) + (1-equal(bass_thresh,2))*dy_residual;","pixel_eqs_eel":"zoom=0.9615+rad*0.1;\nrot = rot * 3*(1-pow(rad*2-1,2));","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + ((ret_1 - \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  ) * 0.35));\n  ret_1 = (ret_1 - 0.004);\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)\n  ).xyz - 0.5) * 0.18));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 ret2_1;\n  vec3 ret_2;\n  ret_2 = (texture (sampler_main, uv).xyz - (0.6 * (\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2)));\n  vec2 tmpvar_3;\n  tmpvar_3 = ((0.5 - uv) + 0.5);\n  vec3 tmpvar_4;\n  tmpvar_4 = (texture (sampler_main, tmpvar_3).xyz - (0.6 * (\n    (texture (sampler_blur2, tmpvar_3).xyz * scale2)\n   + bias2)));\n  vec3 tmpvar_5;\n  tmpvar_5 = ((hue_shader * 8.0) - 6.5);\n  ret_2 = (ret_2 + sqrt(ret_2));\n  ret_2 = (dot (ret_2, vec3(0.32, 0.49, 0.29)) * tmpvar_5);\n  ret2_1 = (tmpvar_4 + sqrt(tmpvar_4));\n  ret2_1 = (dot (ret2_1, vec3(0.32, 0.49, 0.29)) * tmpvar_5);\n  ret_2 = (ret_2 * ret_2);\n  ret2_1 = (ret2_1 * ret2_1);\n  ret_2 = (ret_2 - ret2_1);\n  ret_2 = (ret_2 * ret_2);\n  ret_2 = (ret_2 * sqrt(ret_2));\n  ret_2 = (ret_2 * 0.4);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    // sample previous frame\n    ret.xyz = tex2D( sampler_main, uv ).xyz;\n\n      // take the difference between the crisp and blurred images,\n      // then add it back into the image.  Creates spots and stripes over time.\n      ret.xyz += (ret - GetBlur3(uv))*0.35;\n      ret.xyz -= 0.004;\n\n      // add noise:\n      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)*0.18;\n\n      // desaturate over time, to keep the globs white\n      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz-0.6*GetBlur2(uv);\n    float2 uv_echo = (uv - 0.5)*float2(-1,-1) + 0.5;\n    float3 ret2 = tex2D(sampler_main, uv_echo).xyz-0.6*GetBlur2(uv_echo);\n    float3 hue_shader_plus = (hue_shader*8)-6.5;\n    ret += lerp(ret,sqrt(ret),1);\n    ret = lum(ret)*hue_shader_plus;\n    ret2 += lerp(ret2,sqrt(ret2),1);\n    ret2 = lum(ret2)*hue_shader_plus;\n    ret *= ret;\n    ret2 *= ret2;\n    ret -= ret2;\n    ret *= ret;\n    ret *= sqrt(ret);\n    ret *= 0.4;    \n}"}