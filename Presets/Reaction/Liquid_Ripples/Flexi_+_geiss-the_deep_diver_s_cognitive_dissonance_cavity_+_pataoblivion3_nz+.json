{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":0.997,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.803,"warpscale":1.22,"zoomexp":0.99999,"warp":0.31218,"ob_size":0.005,"ob_r":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"rad":0.34,"ang":0.53,"r":0.56,"g":0.36,"r2":0.9,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + time;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + time;"},{"baseVals":{"sides":3,"rad":0.41,"r":0,"g":0.8,"b":0.7,"g2":0.4,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang - time*.333;","init_eqs_eel":"","frame_eqs_eel":"ang = ang - time*.333;"},{"baseVals":{"sides":3,"rad":0.21,"r":0.84,"r2":1,"g2":0.58,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + time*4;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + time*4;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.2*a.bass*Math.sin(20*a.sample*a.time);a.y=.5+.2*a.bass*Math.cos(20*a.sample*a.time);a.r=1+.5*Math.sin(.1*a.sample+10*a.time);a.g=1+.5*Math.sin(2*a.sample+50*a.time);a.b=1+.5*Math.sin(5*a.sample+20*a.time);a.a=a.r;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.2)*sin(sample*2*(time*10));\ny = .5 + (bass*.2)*cos(sample*2*(time*10));\nr = 1 + .5*sin(sample*.10+(time*10));\ng = 1 + .5*sin(sample*2+(time*50));\nb = 1 + .5*sin(sample*5+(time*20));\na = r;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.d=0;a.n=0;a.y1=0;a.xx=0;a.mq1=0;a.w=0;a.dx2=0;a.ww=0;a.q25=0;a.q12=0;a.q18=0;a.du=0;a.x1=0;a.q22=0;a.q21=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.dy1=0;a.q1=0;a.mq31=0;a.q5=0;a.mq21=0;a.mq24=0;a.q9=0;a.x=0;a.v=0;a.ww1=0;a.chng=0;a.mq28=0;a.mm=0;a.tt=0;a.mult=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.angle=0;a.vx=0;a.q11=0;a.q10=0;a.ang2=0;a.dv=0;a.atime=0;a.vy=0;a.q4=0;a.a=0;a.q16=0;a.q26=0;a.t=0;a.w1=0;a.dy2=0;a.y=0;a.mq27=0;a.mq25=0;a.mx=0;a.mn=0;a.q19=0;a.mq22=0;\na.q17=0;a.vol=0;a.y2=0;a.dx1=0;a.mq26=0;a.bb=0;a.q2=0;a.q27=0;a.q14=0;a.dist=0;a.v1=0;a.xo=0;a.q3=0;a.q32=0;a.yy=0;a.q7=0;a.q28=0;a.v2=0;a.q20=0;a.q8=0;a.yo=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.warp=0;a.zoom=\n1;a.wave_a=0;a.w=a.w1;a.ww=-(a.y1-a.y2)*(1+2*(div(70,a.fps)-1))-.8*a.y1;a.w-=5*a.ww;a.q1=Math.cos(a.ww);a.q2=Math.sin(a.ww);a.q3=1.12;a.q4=.042*Math.sin(a.w);a.q5=.042*Math.cos(a.w);a.a=.5*Math.asin(1);a.d=.08;a.q6=Math.cos(a.a+0*a.ww);a.q7=Math.sin(a.a+0*a.ww);a.q8=3.3;a.q9=Math.cos(-a.w+Math.asin(1))*a.d*a.aspectx;a.q10=Math.sin(-a.w+Math.asin(1))*a.d*a.aspecty;a.q11=Math.cos(-a.a+0*a.ww);a.q12=Math.sin(-a.a+0*a.ww);a.q13=a.q8;a.q14=Math.cos(-a.w+Math.asin(1))*a.d*a.aspectx;a.q15=Math.sin(-a.w+\nMath.asin(1))*a.d*a.aspecty;a.bb=.97*a.bb+.04*a.bass;a.mm=.97*a.mm+.04*a.mid;a.tt=.97*a.tt+.04*a.treb;a.w1+=a.ww1*sqrt(a.vx*a.vx+a.vy*a.vy)*a.a*2;a.ww1=.94*a.ww1+.1*a.y1;a.q16=.2*(a.bb-a.tt);a.y1+=.1*a.v1;a.y2+=.2*a.v2;a.v1=.95*a.v1-.1*(a.y1-a.q16);a.v2=.99*a.v2-.2*(a.y2-a.y1);a.a=div(2.2*Math.abs(a.y2-a.y1),a.fps);a.q17=Math.sin(a.w)*a.a;a.q18=-Math.cos(a.w)*a.a;a.v=.25;a.x+=a.vx*a.v;a.x=Math.min(1,Math.max(-1,a.x));a.y+=a.vy*a.v;a.y=Math.min(1,Math.max(-1,a.y));a.vx=.97*a.vx+Math.sin(a.w)*a.a+.2*\n(equal(a.x,-1)-equal(a.x,1));a.vy=.97*a.vy-Math.cos(a.w)*a.a+.2*(equal(a.y,-1)-equal(a.y,1));a.q19=.5*a.x;a.q20=.5*a.y;a.q21=-a.w1-0*a.ww;a.mx=Math.max(Math.max(a.bb,a.mm),a.tt);a.mn=Math.min(Math.min(a.bb,a.mm),a.tt);a.ob_r=div(a.bb-a.mn,a.mx-a.mn);a.ob_g=div(a.mm-a.mn,a.mx-a.mn);a.ob_b=div(a.tt-a.mn,a.mx-a.mn);a.v=div(1,a.fps);a.xx+=a.v*(a.ob_r-a.ob_g);a.yy+=a.v*(a.ob_g-a.ob_b);a.q32=a.xx;a.q31=a.yy;","pixel_eqs_str":"a.xo=a.x;a.yo=a.y;a.x=.5+(a.x-.5)*a.aspectx;a.y=.5+(a.y-.5)*a.aspecty;a.du=2*a.x-1-2*a.q19;a.dv=2*a.y-1+2*a.q20;a.dist=sqrt(a.du*a.du+a.dv*a.dv);a.ang2=3*Math.atan2(a.du,a.dv)+2*a.q21;a.mult=.02*-pow(a.dist,2);a.dx2=a.mult*Math.sin(a.ang2)*a.aspectx;a.dy2=a.mult*Math.cos(a.ang2)*a.aspecty;a.x=a.xo;a.y=a.yo;a.angle=a.q21+1.579;a.x1=(a.x-.5)*a.aspectx;a.y1=(a.y-.5)*a.aspecty;a.x=Math.cos(-a.angle)*a.x1-Math.sin(-a.angle)*a.y1;a.y=Math.sin(-a.angle)*a.x1+Math.cos(-a.angle)*a.y1;\na.t=2*a.time;a.v=.003;a.n=25;a.dx=a.v*(Math.cos((-a.x+a.y)*a.n+a.t)+Math.sin((a.x+a.y)*a.n+a.t));a.dy=a.v*(Math.cos((a.x-a.y)*a.n-a.t)+Math.sin((-a.x-a.y)*a.n-a.t));a.dx1=Math.cos(a.angle)*a.dx-Math.sin(a.angle)*a.dy;a.dy1=Math.sin(a.angle)*a.dx+Math.cos(a.angle)*a.dy;a.dx=a.dx1*a.aspectx;a.dy=a.dy1*a.aspecty;a.dx+=a.dx2;a.dy+=a.dy2;","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\nwarp = 0;\nzoom = 1;\nwave_a = 0;\nw = w1; // forward vector angle\nww = -(y1-y2)*(1+(70/fps-1)*2) - y1*0.8; // bending indication\nw = w - ww*5;\nq1 = cos(ww);\nq2 = sin(ww);\nq3 = 1.12;\nq4 = sin(w)*0.042;\nq5 = cos(w)*0.042;\na = asin(1)*0.5;\nd = 0.08;\nq6 = cos(a+0*ww);\nq7 = sin(a+0*ww);\nq8 = 3.3;\nq9 = cos(-w + asin(1))*d*aspectx;\nq10 = sin(-w+asin(1))*d*aspecty;\nq11 = cos(-a+0*ww);\nq12 = sin(-a+0*ww);\nq13 = q8;\nq14 = cos(-w + asin(1))*d*aspectx;\nq15 = sin(-w+asin(1))*d*aspecty;\nbb = bb*0.97 + bass*0.04;\nmm = mm*0.97 + mid*0.04;\ntt = tt*0.97 + treb*0.04;\nw1 = w1 + ww1*sqrt(vx*vx+vy*vy)*a*2;\nww1 = ww1*0.94 + y1*0.1;\nq16 = (bb-tt)*0.2;\ny1 = y1 + v1*0.1;\ny2 = y2 + v2*0.2;\nv1 = v1*0.95 - (y1-q16)*0.1;\nv2 = v2*0.99 - (y2-y1)*0.2;\na = abs(y2-y1)*2.2/fps;\nq17 = sin(w)*a;\nq18 = -cos(w)*a;\nv = 0.25;\nx = x + vx*v; x=min(1,max(-1,x));\ny = y + vy*v; y=min(1,max(-1,y));\nvx = vx*0.97 +sin(w)*a  + (equal(x,-1)- equal(x,1))*0.2;\nvy = vy*0.97 -cos(w)*a  + (equal(y,-1)- equal(y,1))*0.2;\nq19 = x*0.5;\nq20 = y*0.5;\n\nq21 = -w1 - ww*4*0;\n\nmx = max(max(bb,mm),tt);\nmn = min(min(bb,mm),tt);\nob_r  = (bb-mn)/(mx-mn);\nob_g = (mm-mn)/(mx-mn);\nob_b = (tt-mn)/(mx-mn);\nv = 1/fps;\nxx = xx + v*(ob_r-ob_g);\nyy = yy + v*(ob_g-ob_b);\nq32 = xx;\nq31 = yy;","pixel_eqs_eel":"xo = x;\nyo = y;\n\nx = 0.5 +(x-0.5)*aspectx;\ny = 0.5 +(y-0.5)*aspecty;\n\n// geiss' tokamak code\ndu = (x*2-1) - q19*2;\ndv = (y*2-1) + q20*2;\ndist = sqrt(du*du+dv*dv);\nang2 = (atan2(du,dv))*3 + q21*2;// + q22;\nmult = -pow(dist,2)*0.02;\ndx2 = mult*sin(ang2)*aspectx;\ndy2 = mult*cos(ang2)*aspecty;\n\n\nx = xo;\ny = yo;\n\n\n// have a nice warp effect? - rotate it like a shape!\n\n  angle = q21  + 1.579;\n\n/////////////////////////////////////////////////////////\nX1 = (x-0.5)*aspectx; // center\nY1 = (y-0.5)*aspecty;\nx = cos(-angle)*X1 -sin(-angle)*Y1; // rotate the x/y pane\ny = sin(-angle)*X1 +cos(-angle)*Y1;\n/////////////////////////////////////////////////////////\n\n  // place your original code here\n\n  t = time*2;\n  v = 0.003;\n  n = 25;\n\n  dx = v*(cos((-x+y)*n+t) + sin((x+y)*n+t));\n  dy = v*(cos((x-y)*n-t) + sin((-x-y)*n-t));\n\n\n/////////////////////////////////////////////////////////\ndx1 = cos(angle)*dx - sin(angle)*dy; // rotate the dx/dy value to match the x/y pane\ndy1 = sin(angle)*dx + cos(angle)*dy;\ndx = dx1*aspectx;\ndy = dy1*aspecty;\n/////////////////////////////////////////////////////////\n\ndx = dx + dx2;\ndy = dy + dy2;","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = clamp (uv, 0.0, 1.0);\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 8.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((2.0 * \n    ((texture (sampler_blur1, (tmpvar_2 + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (tmpvar_2 - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec3 tmpvar_5;\n  tmpvar_5 = (((2.0 * \n    ((texture (sampler_blur1, (tmpvar_2 + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (tmpvar_2 - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.z;\n  tmpvar_6.y = tmpvar_5.z;\n  vec2 tmpvar_7;\n  tmpvar_7 = (tmpvar_2 + ((tmpvar_6 * texsize.zw) * 4.0));\n  ret_1.z = (((texture (sampler_main, tmpvar_7).z - \n    (((2.0 * texture (sampler_main, tmpvar_7).z) - (2.0 * (\n      (texture (sampler_blur3, tmpvar_7).xyz * scale3)\n     + bias3).z)) * 0.01)\n  ) - 0.008) + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\n  ).xyz - 0.5) * 0.1)).x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_4.x;\n  tmpvar_8.y = tmpvar_5.x;\n  vec2 tmpvar_9;\n  tmpvar_9 = ((0.5 + (tmpvar_2 - 0.5)) - (tmpvar_8 * texsize.zw));\n  ret_1.x = texture (sampler_main, tmpvar_9).x;\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_7.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_10.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_10.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_10.z * 0.5));\n  };\n  ret_1.x = (ret_1.x + ((\n    ((2.0 * ret_1.x) - (2.0 * ((texture (sampler_blur3, tmpvar_9).xyz * scale3) + bias3)))\n  .x * 0.2) + 0.006));\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_4.x;\n  tmpvar_11.y = tmpvar_5.x;\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_4.y;\n  tmpvar_12.y = tmpvar_5.y;\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_4.z;\n  tmpvar_13.y = tmpvar_5.z;\n  ret_1.y = texture (sampler_fc_main, (((tmpvar_2 - \n    ((tmpvar_11 * texsize.zw) * 8.0)\n  ) + (\n    (tmpvar_12 * texsize.zw)\n   * 4.0)) + ((tmpvar_13 * texsize.zw) * 8.0))).y;\n  ret_1.y = (ret_1.y * (1.0 + (ret_1.x * 0.1)));\n  ret_1.y = (ret_1.y - (0.004 + (\n    clamp (ret_1.z, 0.0, 1.0)\n   * 0.012)));\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_1;\n  ret = tmpvar_14.xyz;\n }","comp":" shader_body { \n  vec2 dz_1;\n  vec3 dy_2;\n  vec3 dx_3;\n  vec2 d_4;\n  vec3 ret_5;\n  vec2 tmpvar_6;\n  vec2 tmpvar_7;\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\n  d_4 = (texsize.zw * 2.0);\n  dx_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * d_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * d_4))\n  ).xyz * scale1) + bias1));\n  dy_2 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * d_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * d_4))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_9;\n  tmpvar_9.x = dx_3.y;\n  tmpvar_9.y = dy_2.y;\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\n  ret_5 = (vec3(((\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\n   * 2.0) + (\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  .y * 2.0))) * vec3(0.2, 0.3, 0.6));\n  vec2 tmpvar_10;\n  tmpvar_10 = fract((0.5 + (uv - 0.5)));\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * dz_1.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_5.x > (q26 * q13)) && (ret_5.x <= (q23 * q11)))) {\n    ret_5.z = (ret_5.z - (tmpvar_11.x * 0.5));\n  };\n  if (((ret_5.y > (q25 * q11)) && (ret_5.y <= (q22 * q12)))) {\n    ret_5.x = (ret_5.x - (tmpvar_11.y * 0.5));\n  };\n  if (((ret_5.z > (q24 * q12)) && (ret_5.z <= (q21 * q13)))) {\n    ret_5.y = (ret_5.y - (tmpvar_11.z * 0.5));\n  };\n  vec2 tmpvar_12;\n  tmpvar_12.x = dx_3.y;\n  tmpvar_12.y = dy_2.y;\n  vec3 tmpvar_13;\n  tmpvar_13 = ((mix (ret_5, vec3(3.0, 2.0, 1.0), \n    ((texture (sampler_blur3, (tmpvar_10 - tmpvar_12)).xyz * scale3) + bias3)\n  .xxx) * (vec3(1.0, 1.0, 1.0) - \n    ((texture (sampler_blur2, (tmpvar_10 - dz_1)).xyz * scale2) + bias2)\n  .xxx)) * (vec3(1.0, 1.0, 1.0) - vec3((1.5 * texture (sampler_main, tmpvar_10).x))));\n  ret_5 = tmpvar_13;\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = tmpvar_13;\n  ret = tmpvar_14.xyz;\n }","warp_hlsl":"shader_body\n{\nuv = saturate(uv);\n    float2 d = texsize.zw * 8;\n    float3 dx = ( 2*GetBlur1(uv + float2(1,0)*d) - 2*GetBlur1(uv-float2(1,0)*d) )*0.5;\n    float3 dy = ( 2*GetBlur1(uv + float2(0,1)*d) - 2*GetBlur1(uv-float2(0,1)*d) )*0.5;\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1 + rand_frame.xy;\n\nfloat2 uv_blue = lerp(uv_orig,uv,1) + float2(dx.z,dy.z)*texsize.zw*4;\nret.z = GetPixel(uv_blue).z  - (2*GetPixel(uv_blue).z - 2*GetBlur3(uv_blue).z)*0.01 - 0.008\n            +(tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0.1;\n\n\nfloat2 uv_red = 0.5 + (uv-0.5) - float2(0,0)*texsize.zw - float2(dx.x,dy.x)*texsize.zw;\nret.x = tex2D( sampler_main, uv_red ).x;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv_blue.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \nret.x += (2*ret.x - 2*GetBlur3(uv_red)).x*0.2 + 0.006;\n\n\nfloat2 uv_green = lerp(uv_orig,uv,1) - float2(dx.x,dy.x)*texsize.zw*8\n                                       + float2(dx.y,dy.y)*texsize.zw*4\n                                       + float2(dx.z,dy.z)*texsize.zw*8;\nret.y = tex2d(sampler_fc_main,uv_green).y;\nret.y *= 1 + ret.x*0.1;\nret.y -= 0.004 + saturate(ret.z)*0.012;\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw;\n    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );\n    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );\nfloat2 dz = float2(dx.y,dy.y)*3;\n\nd = texsize.zw*2;\ndx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\ndy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\ndz +=float2(dx.y,dy.y);\n\nfloat3 bg = pow(length(dz)*0.8+0,0.7)*2 + GetBlur1(uv).y*2;\n\nret = bg*float3(0.2,0.3,0.6);\nfloat2 uv_swimmer =frac(0.5 + (uv-0.5)+float2(q19,q20)*float2(-1,1)*0);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((dz.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret = lerp(ret,float3(3,2,1),GetBlur3(uv_swimmer -float2(dx.y,dy.y)).x);\nret = lerp(ret,0,GetBlur2(uv_swimmer-dz).x);\nret = lerp(ret,float3(0,0,0),1.5*GetPixel(uv_swimmer).x);\n\n//ret = GetPixel(uv);\n}"}