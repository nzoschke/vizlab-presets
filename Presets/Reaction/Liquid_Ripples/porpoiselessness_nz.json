{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":1,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"solarize":1,"invert":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.6,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index=0;a.q12=0;a.q22=0;a.q21=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.trel=0;a.q9=0;a.k3=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q11=0;a.q10=0;a.q4=0;a.k2=0;a.q26=0;a.p2=0;a.avg=0;a.beat=0;a.vol=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.p3=0;a.q3=0;a.t0=0;a.vol_=0;a.q32=0;a.q7=0;a.q20=0;a.p4=0;a.q8=0;","frame_eqs_str":"a.vol=a.bass+a.mid+a.treb;a.vol_=.9*a.vol_+.1*a.vol;a.k1=above(a.vol,1.3*a.vol_);a.k2=.9*a.k2+.1*a.k1;a.k3=.9*a.k3+.1*a.k2;a.q10=a.k2;a.q11=a.k3;a.q12=a.vol_;a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=\nmod(a.index+a.is_beat,8);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,2);a.q27=a.index+1;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.trel=div(a.time,8);a.q5=Math.cos(a.trel);a.q6=Math.sin(a.trel);a.q7=-a.q6;a.q8=a.q5;a.q9=Math.sin(div(a.time,13))+2;a.q32=pow(.99,div(30,a.fps));","pixel_eqs_str":"a.p1=Math.sin(div(a.time,7));a.p2=Math.cos(div(a.time,3));a.p3=1+Math.cos(div(a.time,6));a.p4=.5*Math.cos(div(a.time,4.5));a.dx=.004*a.p1*a.rad;a.dy=.004*a.p2*a.rad;a.zoom=1+div(pow(a.rad,a.p4)*a.p3,50);a.rot=0;","init_eqs_eel":"","frame_eqs_eel":"vol = bass + mid + treb;\nvol_ = .9*vol_+.1*vol;\n\n\nk1 = above (vol, vol_*1.3);\nk2 = k2*.9 + 0.1*k1;\nk3 = k3*.9 + 0.1*k2;\n\nq10 = k2;\nq11 = k3;\nq12 = vol_;\n\ndec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/2;\nq27 = index + 1;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\ntrel = time/8;\nq5 = cos(trel);\nq6 = sin(trel);\nq7 = -q6;\nq8 = q5;\nq9 = sin(time/13)+2;\n\n\nq32 = pow(0.99, 30/fps); //fade","pixel_eqs_eel":"p1 = sin (time/7);\np2 = cos (time/3);\np3 = 1+(cos (time/6));\np4 = .5*cos (time/4.5);\n\ndx  = 0.004*p1*rad;\ndy = 0.004*p2*rad ;\n\nzoom = 1 + pow(rad,p4)*p3/50;\nrot = 0;","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\n  tmpvar_4 = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  float tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\n  tmpvar_7 = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4;\n  tmpvar_10.y = tmpvar_7;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  tmpvar_11.y = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x + 0.004);\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_7;\n  tmpvar_13.y = -(tmpvar_4);\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_14;\n  x_14 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\n   * 180.0) / sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )));\n  ret_2.z = (ret_2.z * 0.8);\n  ret_2.z = (ret_2.z + 0.004);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_7);\n  tmpvar_15.y = tmpvar_4;\n  my_uv_1 = (tmpvar_15 * 0.045);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_3.x);\n  tmpvar_16.y = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_3.y);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\n   * 0.1) + 0.01));\n  ret_2 = (ret_2 - (texture (sampler_noisevol_hq, (\n    ((vec3(0.05, 0.05, 0.0) * uv.xyy) * (texsize.xyy * texsize_noisevol_hq.zww))\n   + \n    (vec3(0.0, 0.0, 0.4) * time)\n  )) * 0.03).xyz);\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_2;\n  ret = tmpvar_17.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q1;\n  tmpvar_2.y = q2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - tmpvar_2);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q2;\n  tmpvar_4.y = q1;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - tmpvar_4);\n  float tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (min (abs(\n    (tmpvar_5.x / tmpvar_5.y)\n  ), 1.0) / max (abs(\n    (tmpvar_5.x / tmpvar_5.y)\n  ), 1.0));\n  float tmpvar_8;\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\n  tmpvar_8 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\n  tmpvar_8 = (tmpvar_8 + (float(\n    (abs((tmpvar_5.x / tmpvar_5.y)) > 1.0)\n  ) * (\n    (tmpvar_8 * -2.0)\n   + 1.570796)));\n  tmpvar_6 = (tmpvar_8 * sign((tmpvar_5.x / tmpvar_5.y)));\n  if ((abs(tmpvar_5.y) > (1e-08 * abs(tmpvar_5.x)))) {\n    if ((tmpvar_5.y < 0.0)) {\n      if ((tmpvar_5.x >= 0.0)) {\n        tmpvar_6 += 3.141593;\n      } else {\n        tmpvar_6 = (tmpvar_6 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_6 = (sign(tmpvar_5.x) * 1.570796);\n  };\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_main, fract(uv));\n  vec3 tmpvar_10;\n  tmpvar_10 = (((tmpvar_9.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) - sin(time)) * (tmpvar_9.xyz / (1.0 - \n    cos(((tmpvar_6 - (12.0 * \n      sqrt(dot (tmpvar_3, tmpvar_3))\n    )) - ((0.2 * q11) - time)))\n  )).x);\n  vec3 tmpvar_11;\n  tmpvar_11 = (1.0 - tmpvar_10);\n  vec2 tmpvar_12;\n  tmpvar_12.x = uv.x;\n  tmpvar_12.y = (uv.y * 0.75);\n  ret_1 = ((texture (sampler_main, tmpvar_12).xyz * tmpvar_11) + (0.55 * tmpvar_10));\n  ret_1 = (mix (ret_1, tmpvar_11, vec3((1.5 * \n    clamp (dot (tmpvar_10, tmpvar_11), 0.0, 1.0)\n  ))) * (texture (sampler_noisevol_hq, (\n    ((vec3(0.05, 0.05, 0.0) * uv.xyy) * (texsize.xyy * texsize_noisevol_hq.zww))\n   + \n    (vec3(0.0, 0.0, 0.4) * time)\n  )) * 1.5).xyz);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_1;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with\n    float1 d = 0.005;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float2 my_uv = uv - float2(dx,dy)*0.01 + float2(dxb,dyb)*0.003;\n\n\n\n    float2 v = 0.01;\n    ret.x = tex2D( sampler_fw_main, my_uv -floor(my_uv)*0).x;\n\n    \n    ret.x += (ret.x - GetBlur3(uv).x)*.1;\n    ret.x += 0.004;\n\n\n//--------------------------------\n\n    my_uv = uv + float2(dy,-dx)*0.05*(1.2-GetBlur3(uv).y);\n\n\n\n    v = 0.01;\n    ret.z = tex2D( sampler_fw_main, my_uv).z;\n    \n    ret.z += (ret.z - GetBlur1(uv).z)*length(my_uv-uv)*180/length(scale);\n    ret.z *= 0.8;\n    ret.z += 0.004;\n\n\n\n//--------------------------------\n\n    d = 0.01;\n    my_uv = float2(-dy,dx)*0.045;\n\n    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;\n    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;\n    my_uv += uv - float2(dx,dy)*0.03;\n\n\n\n    v = 0.01;\n    ret.y =tex2D( sampler_fw_main, my_uv).y;\n\n    \n    ret.y += (ret.y - GetBlur3(my_uv).y)*0.1 + 0.01;\n//ret = 0;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nret -= (noise2)*.03; \n}","comp_hlsl":"shader_body\n{\n\nfloat2 uvc = uv-.5;\nfloat2 uv1 = uv-float2(q1,q2);\nfloat2 uv1a= uv-float2(q2,q1);\nfloat2 uvm = float2(atan2(uvc.x,uvc.y), 1/length(uvc));\nuvm=uv;\n\nfloat tun=atan2(uv1a.x,uv1a.y)-12*length(uv1);\ntun-=.2*q11-time;\n\n\nfloat3 blur = GetBlur1(uvm);\nfloat3 sharp = tex2D(sampler_main, uvm);\nfloat3 fix = GetPixel(frac(uvm));\n\nfloat mod = (fix/((1)-cos(tun)));\n\nfloat3 fret = (fix-blur-sin(time))*mod;\nfloat3 inv = 1-fret;\n\nfloat melt = dot(fret, inv);\n\nret=tex2D(sampler_main, float2(uv.x, uv.y*.75))*inv+.55*fret;\nret=lerp(ret, inv, 1.5*saturate(melt));\n\n//ret=GetPixel(uv);\n//ret=1-ret;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nret *= (noise2)*1.5; \n}"}