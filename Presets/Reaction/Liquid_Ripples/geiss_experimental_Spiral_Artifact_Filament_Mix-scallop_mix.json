{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":1,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":8.433,"wave_smoothing":0.9,"wave_mystery":-0.3,"modwavealphastart":1.15,"modwavealphaend":1.55,"warpanimspeed":1.348,"warpscale":0.894,"zoom":0.94275,"rot":1.18,"warp":0.03038,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":22,"sep":20,"usedots":1,"thick":1,"scaling":0.16678,"g":0.9,"b":0.5},"init_eqs_str":"a.t1=0;a.t2=0;a.t3=0;a.s1=0;","frame_eqs_str":"a.r+=.5*(.6*Math.sin(.98*a.time)+.4*Math.sin(1.047*a.time));a.g+=.5*(.6*Math.sin(.635*a.time)+.4*Math.sin(1.181*a.time));a.b+=.5*(.6*Math.sin(.714*a.time)+.4*Math.sin(.511*a.time));a.s1=Math.max(div(a.bass,a.bass_att),Math.max(div(a.treb,a.treb_att),div(a.mid,a.mid_att)));a.samples=Math.max(0,500*(a.s1-1.1));","point_eqs_str":"a.r+=.1*(.02*rand(100)-1);a.g+=.1*(.02*rand(100)-1);a.b+=.1*(.02*rand(100)-1);a.r=Math.max(0,a.r);a.g=Math.max(0,a.g);a.b=Math.max(0,a.b);a.r=Math.min(1,a.r);a.g=Math.min(1,a.g);a.b=Math.min(1,a.b);a.x=.001*rand(1E3);a.y=.001*rand(1E3);a.t1=a.r;a.t2=a.g;a.t3=a.b;","init_eqs_eel":"","frame_eqs_eel":"r = r + 0.500*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\ng = g + 0.500*( 0.60*sin(0.635*time) + 0.40*sin(1.181*time) );\nb = b + 0.500*( 0.60*sin(0.714*time) + 0.40*sin(0.511*time) );\n\n\n\ns1 = max(bass/bass_att, max(treb/treb_att, mid/mid_att));\nsamples = max(0, (s1 - 1.1)*500);","point_eqs_eel":"\nr = r + (rand(100)*0.01*2-1)*0.10;\ng = g + (rand(100)*0.01*2-1)*0.10;\nb = b + (rand(100)*0.01*2-1)*0.10;\nr = max(0, r);\ng = max(0, g);\nb = max(0, b);\nr = min(1, r);\ng = min(1, g);\nb = min(1, b);\nx = rand(1000)*0.001;\ny = rand(1000)*0.001;\nt1 = r;\nt2 = g; \nt3 = b;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.decay_rate=0;a.q6=0;a.rot_sum=0;a.q1=0;a.q5=0;a.prev_beat=0;a.is_beat=0;a.min_att=0;a.beat=0;a.decay_to=0;a.rot_sim=0;a.q2=0;a.q3=0;a.beat_level=0;a.rot_sum=0;a.q2=.07+.00004*rand(1E3)+.00003*rand(1E3);a.q3=1.035+.06*(rand(1E3)+rand(1E3)+rand(1E3))*.000333;","frame_eqs_str":"a.cx=.5;a.cy=.5;a.rot=a.q2;a.zoom=a.zoom-1+a.q3;a.rot_sum+=a.rot;a.q1=-a.rot_sum;a.q5=Math.cos(a.rot_sum);a.q6=Math.sin(a.rot_sim);a.monitor=a.q2;a.min_att=2.5;a.decay_to=.8;a.decay_rate=pow(.999,a.fps);a.beat=div(a.bass,Math.max(a.min_att,a.bass_att));a.beat=Math.max(a.beat,div(a.mid,Math.max(a.min_att,a.mid_att)));a.beat=Math.max(a.beat,div(a.treb,Math.max(a.min_att,a.treb_att)));a.beat=Math.max(a.beat,(a.prev_beat-a.decay_to)*a.decay_rate+a.decay_to);a.beat_level=14*(a.beat-\na.prev_beat-.02);a.is_beat=above(a.beat_level,.5);a.prev_beat=a.beat;","pixel_eqs_str":"","init_eqs_eel":"rot_sum = 0;\nq2 = 0.07 + 0.04*rand(1000)*0.001 + 0.03*rand(1000)*0.001;\nq3 = 1.035 + 0.06*(rand(1000)+rand(1000)+rand(1000))*0.000333;","frame_eqs_eel":"//wave_r = wave_r + 0.500*( 0.60*sin(1.980*time) + 0.40*sin(3.047*time) );\n//wave_g = wave_g + 0.500*( 0.60*sin(2.835*time) + 0.40*sin(2.081*time) );\n//wave_b = wave_b + 0.500*( 0.60*sin(3.814*time) + 0.40*sin(1.011*time) );\ncx = 0.5;//cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = 0.5;//cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\n\nrot = q2;//0.13;//6.28*(rand(737)/737.0 - 0.5) * 0.03;\nzoom = zoom-1 + q3;\nrot_sum = rot_sum + rot;\nq1 = -rot_sum;\nq5 = cos(rot_sum);\nq6 = sin(rot_sim);\nmonitor = q2;\n\n// custom beat detection code: (fps-independent; quiet songs don't freak out)\nmin_att    = 2.5;               // lower # = quieter songs can declare beats\ndecay_to   = 0.8;               // lower # = more hasty to declare a beat\ndecay_rate = pow(0.9990, fps);  // lower # = more hasty to declare a beat\nbeat =           bass/max(min_att,bass_att);\nbeat = max(beat, mid /max(min_att,mid_att ));\nbeat = max(beat, treb/max(min_att,treb_att));\nbeat = max( beat, (prev_beat-decay_to)*decay_rate + decay_to );\nbeat_level     = (beat - prev_beat - 0.02)*14;\nis_beat = above(beat_level, 0.5);\nprev_beat = beat;\n  // put your beat responses HERE:\n  //wave_a = beat_level;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1.z = 0.0;\n  tmpvar_1.xy = texsize.zw;\n  vec3 tmpvar_2;\n  tmpvar_2 = (tmpvar_1 * 1.5);\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, (uv + tmpvar_2.xz));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, (uv - tmpvar_2.xz));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_main, (uv + tmpvar_2.zy));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, (uv - tmpvar_2.zy));\n  float tmpvar_7;\n  tmpvar_7 = max (max (dot (tmpvar_3.xyz, vec3(0.32, 0.49, 0.29)), dot (tmpvar_4.xyz, vec3(0.32, 0.49, 0.29))), max (dot (tmpvar_5.xyz, vec3(0.32, 0.49, 0.29)), dot (tmpvar_6.xyz, vec3(0.32, 0.49, 0.29))));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (mix (mix (\n    mix (tmpvar_3.xyz, tmpvar_4.xyz, vec3(clamp (((\n      (dot (tmpvar_4.xyz, vec3(0.32, 0.49, 0.29)) - tmpvar_7)\n     + 0.03) * 310.0), 0.0, 1.0)))\n  , tmpvar_5.xyz, vec3(\n    clamp ((((\n      dot (tmpvar_5.xyz, vec3(0.32, 0.49, 0.29))\n     - tmpvar_7) + 0.03) * 310.0), 0.0, 1.0)\n  )), tmpvar_6.xyz, vec3(clamp (\n    (((dot (tmpvar_6.xyz, vec3(0.32, 0.49, 0.29)) - tmpvar_7) + 0.03) * 310.0)\n  , 0.0, 1.0))) - 0.004);\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec2 uv2_2;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * (min (aspect.x, aspect.y) * 0.8));\n  uv_1 = (uv_1 * aspect.xy);\n  float tmpvar_3;\n  tmpvar_3 = sin(q1);\n  float tmpvar_4;\n  tmpvar_4 = cos(q1);\n  uv2_2.x = ((uv_1.x * tmpvar_4) - (uv_1.y * tmpvar_3));\n  uv2_2.y = ((uv_1.x * tmpvar_3) + (uv_1.y * tmpvar_4));\n  uv2_2 = (uv2_2 * aspect.zw);\n  uv2_2 = (uv2_2 + 0.5);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = abs(((texture (sampler_main, uv2_2).xyz * 2.65) + (\n    ((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1)\n   * -2.0)));\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"#define MyGet GetPixel //GetBlur1\nshader_body\n{\n    float3 d = float3(texsize.zw, 0) * 1.5;\n    float3 xa = tex2D(sampler_main, uv + d.xz).xyz;\n    float3 xb = tex2D(sampler_main, uv - d.xz).xyz;\n    float3 xc = tex2D(sampler_main, uv + d.zy).xyz;\n    float3 xd = tex2D(sampler_main, uv - d.zy).xyz;\n\n    float max_lum = max( max( lum(xa), lum(xb) ), max(lum(xc), lum(xd)) );\n\n    ret = xa;\n    ret = lerp( ret, xb, saturate( (lum(xb)-max_lum+0.03)*310 ) );\n    ret = lerp( ret, xc, saturate( (lum(xc)-max_lum+0.03)*310 ) );\n    ret = lerp( ret, xd, saturate( (lum(xd)-max_lum+0.03)*310 ) );\n\n    // darken (decay) over time\n    ret -= 0.004; //or try: ret -= 0.004;\n\n    //ret = tex2D(sampler_main, uv_orig + 0.1);\n}","comp_hlsl":"shader_body\n{\n    float2 orig = uv;\n\n    float inv_zoom = min(aspect.x,aspect.y)*0.8;\n    //float t = saturate(time*0.33);\n    //t = t*t*(3 - 2*t);\n    //inv_zoom = lerp(1, inv_zoom, t);\n\n    uv -= 0.5;\n    uv *= inv_zoom;\n    uv *= aspect.xy;\n\n    float2 uv2;  \n    uv2.x = uv.x*cos(q1) - uv.y*sin(q1);\n    uv2.y = uv.x*sin(q1) + uv.y*cos(q1);\n    uv2 *= aspect.zw;\n    uv2 += 0.5;\n\n    ret = abs( tex2D(sampler_main, uv2).xyz*2.65\n                            + GetBlur1(uv2)*-2 );\n\n    //ret.xyz = ret*1.5 - 0.0;\n}\n\n"}