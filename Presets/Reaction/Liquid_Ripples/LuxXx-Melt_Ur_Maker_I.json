{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_mode":2,"wrap":0,"darken_center":1,"darken":1,"wave_a":3.222,"wave_scale":0.685,"zoomexp":2.21668,"fshader":1,"zoom":0.9999,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.05,"ob_r":0.5,"ob_g":0.5,"ob_b":0.5,"ib_size":0.025,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":1.79142,"tex_ang":0.06283,"g":1,"b":1,"a":0.08,"r2":1,"b2":1,"a2":0.08,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.additive=a.q1;a.a=.00001<Math.abs(a.q1)?1:a.a;a.a2=a.a;a.r=a.q1;a.r2=a.q1;a.tex_zoom=3-3*a.bass;","init_eqs_eel":"","frame_eqs_eel":"additive = q1;\na = if(q1,1,a);\na2 = a;\nr = q1;\nr2 =q1;\ntex_zoom = 3 - 3*bass;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":1.79142,"tex_ang":0.06283,"b":1,"a":0.08,"r2":1,"a2":0.08,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.additive=a.q1;a.a=.00001<Math.abs(a.q1)?1:a.a;a.a2=a.a;a.r=a.q1;a.r2=a.q1;a.tex_zoom=3-2*a.bass;","init_eqs_eel":"","frame_eqs_eel":"additive = q1;\na = if(q1,1,a);\na2 = a;\nr = q1;\nr2 =q1;\ntex_zoom = 3 - 2*bass;"},{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.91974,"tex_ang":0.62832,"tex_zoom":1.0303,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.tex_zoom=a.q1+a.tex_zoom;a.a2=1;a.border_a=a.q1;","init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q1+tex_zoom;\na2 = 1;\nborder_a = q1;"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13887,"a":0.05,"a2":0.05,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.r=.5+.49*Math.sin(.2754*a.time);a.b=.5+.49*Math.sin(.6254*a.time);a.g=.5+.49*Math.sin(.514*a.time);a.r2=.5+.49*Math.sin(.475*a.time);a.b2=.5+.49*Math.sin(.2107*a.time);a.g2=.5+.49*Math.sin(.7714*a.time);","init_eqs_eel":"","frame_eqs_eel":"r = 0.5 + 0.49*sin(time*0.2754);\nb = 0.5 + 0.49*sin(time*0.6254);\ng = 0.5 + 0.49*sin(time*0.514);\nr2 = 0.5 + 0.49*sin(time*0.475);\nb2 = 0.5 + 0.49*sin(time*0.2107);\ng2 = 0.5 + 0.49*sin(time*0.7714);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.maxdbass=0;a.dbass=0;a.q1=0;a.cheat=0;a.midphase=0;a.lastbeat=0;a.interval=0;a.pbass=0;a.beat=0;a.q2=0;a.phase=0;a.q3=0;a.sure=0;","frame_eqs_str":"a.sure=.00001<Math.abs(equal(a.sure,0))?.6:a.sure;a.interval=.00001<Math.abs(equal(a.interval,0))?40:a.interval;a.lastbeat=.00001<Math.abs(equal(a.lastbeat,0))?a.frame-a.fps:a.lastbeat;a.dbass=div(a.bass-a.pbass,a.fps);a.beat=above(a.dbass,.6*a.maxdbass)*above(a.frame-a.lastbeat,div(a.fps,3));a.sure=.00001<Math.abs(a.beat*below(Math.abs(a.frame-(a.interval+a.lastbeat)),div(a.fps,5)))?Math.min(.095+a.sure,1):a.beat*(a.sure-.095)+(1-a.beat)*a.sure*.9996;a.sure=Math.max(.5,a.sure);\na.cheat=.00001<Math.abs(above(a.frame,a.lastbeat+a.interval+Math.floor(div(a.fps,10)))*above(a.sure,.91))?1:a.cheat;a.beat=.00001<Math.abs(a.cheat)?1:a.beat;a.sure=.00001<Math.abs(a.cheat)?.95*a.sure:a.sure;a.maxdbass=Math.max(.999*a.maxdbass,a.dbass);a.maxdbass=Math.max(.012,a.maxdbass);a.maxdbass=Math.min(.02,a.maxdbass);a.interval=.00001<Math.abs(a.beat)?a.frame-a.lastbeat:a.interval;a.lastbeat=.00001<Math.abs(a.beat)?a.frame-a.cheat*Math.floor(div(a.fps,10)):a.lastbeat;a.cheat=0;a.pbass=a.bass;\na.wave_r=.8*Math.abs(Math.cos(.07*a.time+.532+Math.sin(.125*a.time+.789)));a.wave_g=.8*Math.abs(Math.cos(.092*a.time+2.1+Math.sin(.045*a.time+1.52)));a.wave_b=.8*Math.abs(Math.cos(.1*a.time+1.452+Math.sin(.112*a.time+2.98)));a.q1=a.beat;a.ib_a=a.beat;a.ib_r=1-a.wave_r;a.ib_g=1-a.wave_g;a.ib_b=1-a.wave_b;a.wave_mystery=1-1.5*Math.min(div(a.frame-a.lastbeat,a.interval),1);a.wave_a=.00001<Math.abs(above(div(a.frame-a.lastbeat,a.interval),1))?0:1;a.phase=.00001<Math.abs(equal(mod(a.frame,a.interval),\n0))?a.phase+1:a.phase;a.phase=.00001<Math.abs(equal(mod(a.phase,18),17))?0:a.phase;a.midphase=Math.min(div(a.frame-a.lastbeat,a.interval),1);a.sx=.00001<Math.abs(equal(a.phase,15)*equal(mod(a.frame,a.interval),0))?-1:a.sx;a.sy=.00001<Math.abs(equal(a.phase,26)*equal(mod(a.frame,a.interval),0))?-1:a.sy;a.phase=.00001<Math.abs(equal(mod(a.frame,a.interval),0)*below(Math.cos(div(a.time,6)),-.5))?mod(a.phase+rand(13),14)+1:a.phase;a.q2=a.phase;a.q3=a.midphase;","pixel_eqs_str":"a.zoom=1+.01*Math.sin(13.28*a.rad);a.zoom+=equal(a.q2,1)*a.q3*.1*(a.x-.5);a.zoom+=equal(a.q2,2)*a.q3*.1*(.5-a.x);a.zoom+=equal(a.q2,5)*a.q3*.1*(.5-a.y);a.zoom+=equal(a.q2,4)*a.q3*.1*(a.y-.5);a.rot+=equal(a.q2,3)*a.q3*.3;a.rot-=equal(a.q2,6)*a.q3*.3;a.sx+=equal(a.q2,7)*a.q3*.2;a.sy-=equal(a.q2,8)*a.q3*.2;a.sx-=equal(a.q2,9)*a.q3*.2;a.sy+=equal(a.q2,10)*a.q3*.2;a.dy+=equal(a.q2,11)*Math.abs(.5-a.x)*sign(.5-a.x)*a.q3*.2;a.dx+=equal(a.q2,12)*Math.abs(.5-a.y)*sign(.5-a.y)*a.q3*.2;\na.dx-=equal(a.q2,14)*Math.abs(.5-a.y)*sign(.5-a.y)*a.q3*.2;a.dy-=equal(a.q2,13)*Math.abs(.5-a.x)*sign(.5-a.x)*a.q3*.2;","init_eqs_eel":"","frame_eqs_eel":"// -------------------------------- Beat Detective 007 ----------------------------------\nsure=if(equal(sure,0),.6,sure);\ninterval=if(equal(interval,0),40,interval);\nlastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);\ndbass=(bass-pbass)/FPS;\nbeat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);\nsure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),\nmin(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);\nsure=max(.5,sure);\ncheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);\nbeat=if(cheat,1,beat);\nsure=if(cheat,.95*sure,sure);\nmaxdbass=max(maxdbass*.999,dbass);\nmaxdbass=max(.012,maxdbass);\nmaxdbass=min(.02,maxdbass);\ninterval=if(beat, frame-lastbeat,interval);\nlastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);\ncheat=0;\npbass=bass;\n// ----------------------------------------------------------------------------------------------\n\nwave_r = .8*abs(cos( .07*time+.532 + sin( .125*time+.789) ));\nwave_g = .8*abs(cos( .092*time+2.1 + sin( .045*time+1.52) ));\nwave_b = .8*abs(cos( .1*time+1.452 + sin( .112*time+2.98) ));\nq1=beat;\nib_a=beat;\nib_r=1-wave_r;ib_g=1-wave_g;ib_b=1-wave_b;\nwave_mystery = 1-1.5*min(((frame-lastBeat)/interval),1);\nwave_a=if(above((frame-lastBeat)/interval,1),0,1);\nphase=if(equal(frame%interval,0),phase+1,phase);\nphase=if(equal(phase%18,17),0,phase);\nmidphase=min((frame-lastBeat)/interval,1);\nsx=if(equal(phase,15)*equal(frame%interval,0),-1,sx);\nsy=if(equal(phase,26)*equal(frame%interval,0),-1,sy);\nphase = if(equal(frame%interval,0)*below(cos(time/6), -.5), (phase+rand(13))%14+1,phase);\nq2=phase;\nq3=midphase;","pixel_eqs_eel":"zoom =1+.01*sin(13.28*rad);\n//zoom right\nzoom=zoom+equal(q2,1)*q3*.1*(x-.5);\n// zoom left\nzoom=zoom+equal(q2,2)*q3*.1*(.5-x);\n// zoom top\nzoom=zoom+equal(q2,5)*q3*.1*(.5-y);\n// zoom bottom\nzoom=zoom+equal(q2,4)*q3*.1*(y-.5);\n// rotate left\nrot=rot+equal(q2,3)*q3*.3;\n// rotate right\nrot=rot-equal(q2,6)*q3*.3;\n// scale x\nsx=sx+equal(q2,7)*q3*.2;\n// squash y\nsy=sy-equal(q2,8)*q3*.2;\n// squash x\nsx=sx-equal(q2,9)*q3*.2;\n// scale y;\nsy=sy+equal(q2,10)*q3*.2;\n// transpose+ vertical\ndy=dy+equal(q2,11)*abs(.5-x)*sign(.5-x)*q3*.2;\n// transpose+ horiz\ndx=dx+equal(q2,12)*abs(.5-y)*sign(.5-y)*q3*.2;\n// transpose- horiz\ndx=dx-equal(q2,14)*abs(.5-y)*sign(.5-y)*q3*.2;\n// transpose- vertical\ndy=dy-equal(q2,13)*abs(.5-x)*sign(.5-x)*q3*.2;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + ((ret_1 - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 122.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  xlat_mutabled = (texsize.zw * 8.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec3 tmpvar_2;\n  tmpvar_2 = (((\n    -(xlat_mutabledx)\n   + xlat_mutabledy) + 1.0) * 1.2);\n  xlat_mutabled = (texsize.zw * 2.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_3;\n  tmpvar_3.x = xlat_mutabledx.x;\n  tmpvar_3.y = xlat_mutabledy.x;\n  float tmpvar_4;\n  tmpvar_4 = sqrt(dot (tmpvar_3, tmpvar_3));\n  vec3 tmpvar_5;\n  tmpvar_5 = mix (((vec3(0.5, 0.4, 0.6) * tmpvar_1.x) * tmpvar_2.x), (vec3(8.0, 5.0, 2.0) * tmpvar_4), vec3((tmpvar_4 * 4.2)));\n  vec2 tmpvar_6;\n  tmpvar_6.x = xlat_mutabledx.z;\n  tmpvar_6.y = xlat_mutabledy.z;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = mix (mix (tmpvar_5, (4.0 * tmpvar_5), (\n    (tmpvar_1.y * 0.5)\n   - \n    (vec3(0.09, 0.3, 0.3) * ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z)\n  )), vec3(2.0, 2.0, 0.0), vec3((sqrt(\n    dot (tmpvar_6, tmpvar_6)\n  ) * 0.7)));\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret.xyz = tex2D( sampler_main, uv ).xyz;\n\n      // take the difference between the crisp and blurred images,\n      // then add it back into the image.  Creates spots and stripes over time.\n      ret.xyz += (ret.xyz - GetBlur2(uv))*0.3;\n      ret.xyz *= 0.9;\n\n      // add noise:\n      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 * saturate(treb_att-1);\n\n      // desaturate over time, to keep the globs white\n      ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);\n}","comp_hlsl":"float2 d, uv_y;\nfloat3 dx, dy;\nshader_body\n{\n\n    d = texsize.zw*8;\n    dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat3 base = GetPixel(uv);\nfloat3 emboss = (-dx + dy + 1)*1.2;\n\n    d = texsize.zw*2;\n    dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat grad = length(float2(dx.x,dy.x));\n\nret = lerp( float3(0.5,0.4,0.6)*base.x*emboss.x,\n            float3(8,5,2)*grad,\n            grad*4.2\n          ); \nret = lerp(ret,4*ret,GetPixel(uv).y*0.5-GetBlur1(uv).z*0.3*float3(0.3,1,1));\n\ngrad = length(float2(dx.z,dy.z));\nret = lerp(ret, float3(2,2,0), grad*0.7);\n}\n"}