{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":6,"wave_thick":1,"wave_a":0.001,"wave_scale":1.91,"wave_smoothing":0.9,"wave_mystery":-0.1,"warpscale":3.138,"zoom":1.02225,"warp":0.00054,"wave_r":0.5,"wave_g":0.5,"wave_b":0.3,"ob_size":0,"ob_g":1,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"additive":1,"rad":0.05504,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=div(Math.floor(rand(100)),100);a.y=div(rand(100),100);a.x=.5+.4*Math.sin(a.time);a.y=.5+.4*Math.cos(.7*a.time);a.a=.2*a.bass;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))/100;\ny = rand (100)/100;\n\nx = .5 + .4*sin(time);\ny = .5 + .4*cos(time*.7);\n\n\na = .2*bass;"},{"baseVals":{"sides":44,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"a = min(1,bass/4);","init_eqs_eel":"","frame_eqs_eel":"a = min(1,bass/4);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.zoom=1;a.warp=0;a.rot=0;a.dx=0;a.dy=0;a.monitor=a.frame;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"zoom = 1.0;\nwarp = 0;\nrot = 0;\ndx = 0;\ndy = 0;\n\nmonitor = frame;","pixel_eqs_eel":"","warp":"float xlat_mutablebuf2;\nvec2 xlat_mutableuv1;\n shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  xlat_mutableuv1 = (uv + (0.001 * (texture (sampler_noise_lq, \n    ((uv * 4.0) + rand_frame.xy)\n  ) - 0.5)).xy);\n  vec3 tmpvar_3;\n  tmpvar_3.z = 0.0;\n  float tmpvar_4;\n  tmpvar_4 = (float(mod (frame, 2.0)));\n  tmpvar_3.x = tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (frame + 1.0);\n  tmpvar_3.y = (float(mod (tmpvar_5, 2.0)));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.0;\n  tmpvar_6.x = tmpvar_4;\n  tmpvar_6.y = (float(mod (tmpvar_5, 2.0)));\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.0;\n  tmpvar_7.x = tmpvar_4;\n  tmpvar_7.y = (float(mod (tmpvar_5, 2.0)));\n  vec3 tmpvar_8;\n  tmpvar_8.z = 0.0;\n  tmpvar_8.x = tmpvar_4;\n  tmpvar_8.y = (float(mod (tmpvar_5, 2.0)));\n  vec3 tmpvar_9;\n  tmpvar_9.z = 0.0;\n  tmpvar_9.x = (float(mod (tmpvar_5, 2.0)));\n  tmpvar_9.y = (float(mod ((tmpvar_5 + 1.0), 2.0)));\n  xlat_mutablebuf2 = (((\n    (((dot (texture (sampler_main, \n      (xlat_mutableuv1 + (tmpvar_2 * vec2(1.0, 0.0)))\n    ).xyz, tmpvar_3) - 0.5) + (dot (texture (sampler_main, \n      (xlat_mutableuv1 + (tmpvar_2 * vec2(0.0, 1.0)))\n    ).xyz, tmpvar_6) - 0.5)) + (dot (texture (sampler_main, (xlat_mutableuv1 + \n      (tmpvar_2 * vec2(-1.0, 0.0))\n    )).xyz, tmpvar_7) - 0.5))\n   + \n    (dot (texture (sampler_main, (xlat_mutableuv1 + (tmpvar_2 * vec2(0.0, -1.0)))).xyz, tmpvar_8) - 0.5)\n  ) / 2.0) - (dot (texture (sampler_main, xlat_mutableuv1).xyz, tmpvar_9) - 0.5));\n  xlat_mutablebuf2 = ((xlat_mutablebuf2 * 0.996) + 0.5);\n  if ((tmpvar_4 == 0.0)) {\n    ret_1.x = xlat_mutablebuf2;\n    ret_1.y = texture (sampler_main, uv).y;\n  } else {\n    ret_1.y = xlat_mutablebuf2;\n    ret_1.x = texture (sampler_main, uv).x;\n  };\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_1;\n  ret = tmpvar_10.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = vec3(dot (texture (sampler_main, uv).xyz, vec3(0.32, 0.49, 0.29)));\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"float buf2;\nfloat2 uv1;\n\nfloat GetBuf(float num, float2 uvi)\n{return dot(GetPixel(uvi), float3(num%2,(num+1)%2,0))-.5;}\n\nshader_body {\n\nfloat2 pix = texsize.zw*4;\n\n//noise dither\nuv1 = uv + .001*(tex2D (sampler_noise_lq,uv*4+rand_frame)-.5);\n\nbuf2 = (GetBuf(frame, uv1+pix*float2(1,0))\n       +GetBuf(frame, uv1+pix*float2(0,1))\n       +GetBuf(frame, uv1+pix*float2(-1,0))\n       +GetBuf(frame, uv1+pix*float2(0,-1)))/2 - GetBuf(frame+1, uv1);\nbuf2 = buf2*.996+.5;\n\n\nif (frame%2 == 0) \n{ret.r = buf2;\n ret.g = GetPixel(uv).g;}\n\nelse \n{ret.g = buf2;\n ret.r = GetPixel(uv).r;}\n\n}","comp_hlsl":"sampler sampler_lichen;\nshader_body\n{\nret = tex2D (sampler_lichen, uv + lum(GetBlur1(uv))-.5);\nret = lum(GetPixel(uv));\n}\n\n"}