{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.96,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"darken":1,"wave_a":0.168,"wave_scale":2.827,"wave_smoothing":0.09,"modwavealphastart":0.63,"modwavealphaend":0.87,"warpscale":1.331,"zoomexp":1.86831,"zoom":1.0002,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.72,"ob_size":0.005,"ob_a":1,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"scaling":0.28261,"smoothing":0.2},"init_eqs_str":"a.x=0;a.y=0;a.a=0;","frame_eqs_str":"a.a=a.treb_att+a.mid_att;a.x+=div(a.treb_att,20)*Math.sin(.015*a.mid_att+3);a.y+=div(a.mid_att,25)*Math.sin(.019*a.mid_att+1);a.r=a.treb_att;","point_eqs_str":"a.a=a.treb_att+a.mid_att;a.x+=div(a.treb_att,20)*Math.sin(.015*a.time+3);a.y+=div(a.mid_att,25)*Math.sin(.019*a.time+1);","init_eqs_eel":"a = 0;","frame_eqs_eel":"a = (treb_att + mid_att);\n\nx = x + (treb_att / 20)*sin(mid_att*0.015+3);\ny = y + (mid_att / 25)*sin(mid_att*0.019+1);\nr = treb_att;","point_eqs_eel":"a = (treb_att + mid_att);\n\nx = x + (treb_att / 20)*sin(time*0.015+3);\ny = y + (mid_att / 25)*sin(time*0.019+1);"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"scaling":0.27704,"smoothing":0.24},"init_eqs_str":"a.x=0;a.y=0;a.a=0;","frame_eqs_str":"a.a=a.treb_att+a.mid_att;a.x+=div(a.mid_att,20)*Math.sin(.015*a.mid_att+3);a.y+=div(a.treb_att,25)*Math.sin(.019*a.mid_att+1);a.g=a.bass_att-a.bass_att*a.bass_att;","point_eqs_str":"a.a=a.treb_att+a.mid_att;a.x-=div(a.mid_att,20)*Math.sin(.015*a.time+3);a.y-=div(a.treb_att,25)*Math.sin(.019*a.time+1);","init_eqs_eel":"a = 0;","frame_eqs_eel":"\na = (treb_att + mid_att);\n\nx = x + (mid_att / 20)*sin(mid_att*0.015+3);\ny = y + (treb_att / 25)*sin(mid_att*0.019+1);\ng=(bass_att - (bass_att*bass_att));","point_eqs_eel":"a = (treb_att + mid_att);\n\nx = x - (mid_att / 20)*sin(time*0.015+3);\ny = y - (treb_att / 25)*sin(time*0.019+1);"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"additive":1},"init_eqs_str":"a.x=0;a.y=0;a.a=0;","frame_eqs_str":"a.a=a.treb_att+a.mid_att;a.x-=div(a.mid_att,20)*Math.sin(.015*a.time+3);a.y-=div(a.treb_att,25)*Math.sin(.019*a.time+1);","point_eqs_str":"a.a=a.treb_att+a.mid_att;a.x-=div(a.mid_att,20)*Math.sin(.015*a.time+3);a.y-=div(a.treb_att,25)*Math.sin(.019*a.time+1);","init_eqs_eel":"a = 0;","frame_eqs_eel":"a = (treb_att + mid_att);\n\nx = x - (mid_att / 20)*sin(time*0.015+3);\ny = y - (treb_att / 25)*sin(time*0.019+1);","point_eqs_eel":"a = (treb_att + mid_att);\n\nx = x - (mid_att / 20)*sin(time*0.015+3);\ny = y - (treb_att / 25)*sin(time*0.019+1);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tic=0;a.slide=0;a.toc=0;a.vt=0;a.q6=0;a.bt=0;a.q1=0;a.q5=0;a.mid_avg=0;a.tt=0;a.tin=0;a.bass_avg=0;a.vav=0;a.q4=0;a.mt=0;a.ra=0;a.treb_avg=0;a.vol=0;a.sp=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.wave_a=0;a.vol=.333333*(a.bass_att+a.treb_att+a.mid_att);a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.ra=10;a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb_avg;a.mt+=a.tic*a.mid_avg;a.bt+=a.tic*a.bass_avg;a.sp=.1*Math.abs(a.vav-a.slide);a.slide=(.00001<\nMath.abs(above(a.slide,a.vav))?a.slide-a.tic*a.sp:a.slide+a.tic*a.sp)+(1-a.toc)*a.vav;a.toc=1;a.vt+=a.tic*a.slide;a.q1=a.bt;a.q2=a.mt;a.q3=a.tt;a.q4=1*a.slide;a.q5=.05*a.vt+150;a.q6=.01;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\n//decay = 0.1;\n\nvol = (bass_att + treb_att + mid_att)*.333333;\n\ntic = min(time-tin,.1);\ntin = time;\n\nra = 10;\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb_avg;\nmt = mt + tic*mid_avg;\nbt = bt + tic*bass_avg;\n\nsp = abs(vav - slide)*.1;\nslide = if(above(slide,vav),slide-tic*sp,slide+tic*sp) + (1-toc)*vav;\ntoc = 1;\n\nvt = vt + tic*slide;\n\nq1 = bt;\nq2 = mt;\nq3 = tt;\nq4 = slide*1;\nq5 = vt*.05 + 150;\n\nq6 = .01;//tic;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\n  tmpvar_4 = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  float tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\n  tmpvar_7 = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4;\n  tmpvar_10.y = tmpvar_7;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  tmpvar_11.y = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x + 0.004);\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_7;\n  tmpvar_13.y = -(tmpvar_4);\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_14;\n  x_14 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\n   * 180.0) / sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )));\n  ret_2.z = (ret_2.z * 0.8);\n  ret_2.z = (ret_2.z + 0.004);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_7);\n  tmpvar_15.y = tmpvar_4;\n  my_uv_1 = (tmpvar_15 * 0.045);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_3.x);\n  tmpvar_16.y = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_3.y);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((ret_2.y - \n    ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3)\n  .y) * 0.2));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 0.0;\n  tmpvar_17.xyz = ret_2;\n  vec3 tmpvar_18;\n  tmpvar_18 = mix (tmpvar_17, texture (sampler_main, uv_orig), vec4(0.2, 0.2, 0.2, 0.2)).xyz;\n  ret_2 = tmpvar_18;\n  vec4 tmpvar_19;\n  tmpvar_19.w = 1.0;\n  tmpvar_19.xyz = tmpvar_18;\n  ret = tmpvar_19.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.0;\n  tmpvar_6.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  tmpvar_6.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\n    ((uv_1.xyy + (tmpvar_6 * 0.5)) * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  uv_1 = (uv_1 - (tmpvar_8 * 0.04));\n  ret_2 = (abs((\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n  )) * (dot (tmpvar_7, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  vec3 tmpvar_9;\n  tmpvar_9 = pow (ret_2, vec3(0.5, 0.5, 0.5));\n  ret_2 = tmpvar_9;\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = tmpvar_9;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with\n    float1 d = 0.005;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float2 my_uv = uv - float2(dx,dy)*0.01 + float2(dxb,dyb)*0.003;\n\n\n\n    float2 v = 0.01;\n    ret.x = tex2D( sampler_fw_main, my_uv -floor(my_uv)*0).x;\n\n    \n    ret.x += (ret.x - GetBlur3(uv).x)*.1;\n    ret.x += 0.004;\n\n\n//--------------------------------\n\n    my_uv = uv + float2(dy,-dx)*0.05*(1.2-GetBlur3(uv).y);\n\n\n\n    v = 0.01;\n    ret.z = tex2D( sampler_fw_main, my_uv).z;\n    \n    ret.z += (ret.z - GetBlur1(uv).z)*length(my_uv-uv)*180/length(scale);\n    ret.z *= 0.8;\n    ret.z += 0.004;\n\n\n\n//--------------------------------\n\n    d = 0.01;\n    my_uv = float2(-dy,dx)*0.045;\n\n    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;\n    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;\n    my_uv += uv - float2(dx,dy)*0.03;\n\n\n\n    v = 0.01;\n    ret.y =tex2D( sampler_fw_main, my_uv).y;\n\n    \n    ret.y += (ret.y - GetBlur3(my_uv).y)*0.2 + 0.0;\n    ret = lerp(ret, tex2D(sampler_main,uv_orig), 0.2); //motionblur\n\n//ret = 0;\n}","comp_hlsl":"shader_body\n{\n\nuv = 0.5 + (uv-0.5)*0.98;\n    float2 d = texsize.zw*4;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nuv -= float2(lum(dx),lum(dy))*0.04;\nret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));\nret *= lum(noise)*3; \nret = pow(ret,0.5);\n}"}