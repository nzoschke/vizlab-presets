{"version":2,"baseVals":{"rating":5,"gammaadj":0.9,"decay":0.95,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_a":0,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.5,"modwavealphaend":1,"warpscale":1.331,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.6,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":6.4,"mv_y":4.8,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":6,"rad":0.10594,"ang":0.25133,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.128*Math.floor(rand(22));a.y=.093*Math.floor(rand(15));a.r=.01*Math.floor(rand(100));a.g=.01*Math.floor(rand(100));a.b=.01*Math.floor(rand(100));a.r2=.01*Math.floor(rand(100));a.g2=.01*Math.floor(rand(100));a.b2=.01*Math.floor(rand(100));","init_eqs_eel":"","frame_eqs_eel":"x=int(rand(22))*.128;\ny = int(rand(15))*.093;\n\nr = int(rand(100))*.01;\ng = int(rand(100))*.01;\nb = int(rand(100))*.01;\nr2 = int(rand(100))*.01;\ng2 = int(rand(100))*.01;\nb2 = int(rand(100))*.01;"},{"baseVals":{"enabled":1,"sides":6,"y":1.8,"rad":0.1072,"ang":0.25133,"tex_ang":0.25133,"a2":1,"border_a":1},"init_eqs_str":"","frame_eqs_str":"a.x=.128*Math.floor(rand(22))-.193;a.y=.093*Math.floor(rand(15))+.14;a.r=.01*Math.floor(rand(100));a.g=.01*Math.floor(rand(100));a.b=.01*Math.floor(rand(100));a.r2=.01*Math.floor(rand(100));a.g2=.01*Math.floor(rand(100));a.b2=.01*Math.floor(rand(100));","init_eqs_eel":"","frame_eqs_eel":"x=int(rand(22))*.128-.193;\ny = int(rand(15))*.093+.14;\n\nr = int(rand(100))*.01;\ng = int(rand(100))*.01;\nb = int(rand(100))*.01;\nr2 = int(rand(100))*.01;\ng2 = int(rand(100))*.01;\nb2 = int(rand(100))*.01;"},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\nma=ma-(above(treb,.5)*3.1415*.02*treb);\n\nmx=mx+(.0008*cos(ma));\nmy=my+(.0008*sin(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=mx;\ny=my;\n\na=(above(bass+mid+treb,.2));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.gamma=0;a.q1=0;","frame_eqs_str":"a.gamma=.5+a.bass_att;a.q1+=a.treb_att;a.wave_r+=Math.sin(a.time+a.gamma);a.wave_g+=Math.cos(a.time-a.gamma);a.wave_b=1-(a.wave_r+a.wave_g);","pixel_eqs_str":"a.zoom+=.1;a.rot=.1*(a.rot+2*Math.sin(a.zoom-a.bass_att));a.rot+=.3*Math.sin(a.rot-5*a.ang+5*a.rad);a.rot=sqr(a.rot);","init_eqs_eel":"","frame_eqs_eel":"gamma=.5+bass_att;\nq1=q1+treb_att;\nwave_r=wave_r+sin(time+gamma);\nwave_g=wave_g+cos(time-gamma);\nwave_b=(1-(wave_r+wave_g));","pixel_eqs_eel":"zoom=zoom+.1;\nrot=(rot+sin(zoom-bass_att)*2)*.1;\nrot=rot+sin(rot-ang*5+rad*5)*.3;\nrot=sqr(rot);","warp":"vec2 xlat_mutabled;\nvec2 xlat_mutabled_uv;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)) - 0.5).xyz;\n  xlat_mutabled = (texsize.zw * 4.0);\n  xlat_mutabledx = (((2.0 * \n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz * scale1) + bias1)\n  )) * 0.5);\n  xlat_mutabledy = (((2.0 * \n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec2 tmpvar_3;\n  tmpvar_3.x = xlat_mutabledx.x;\n  tmpvar_3.y = xlat_mutabledy.x;\n  xlat_mutabled_uv = (uv_orig + ((tmpvar_3 * texsize.zw) * 4.0));\n  ret_1.x = texture (sampler_main, xlat_mutabled_uv).x;\n  ret_1.x = (ret_1.x + ((\n    ((ret_1.x - ((texture (sampler_blur1, xlat_mutabled_uv).xyz * scale1) + bias1).x) * 0.04)\n   - 0.006) + (tmpvar_2 * 0.01)).x);\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.y;\n  tmpvar_4.y = xlat_mutabledy.y;\n  vec2 tmpvar_5;\n  tmpvar_5.x = xlat_mutabledx.x;\n  tmpvar_5.y = xlat_mutabledy.x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - ((\n    (vec2(0.0, -1.2) + (tmpvar_4 * 8.0))\n   + \n    (tmpvar_5 * 4.0)\n  ) * texsize.zw));\n  ret_1.y = (max (texture (sampler_main, tmpvar_6).x, (texture (sampler_main, tmpvar_6).y - 0.0012)) + (tmpvar_2 * 0.08)).x;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz * vec3(0.9, 0.3, 0.5));\n  ret_1 = (ret_1 * 1.14);\n  ret_1 = (ret_1 * ret_1);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"float2 dither_uv;\nfloat3 rand;\nfloat2 d, d_uv;\nfloat3 dx, dy;\n\nshader_body\n{\n\n   dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1 + rand_frame.xy;\n   rand = tex2D(sampler_noise_lq, dither_uv)-0.5;\n\n   d = texsize.zw*4;\n   d_uv = uv_orig + rand*texsize.zw*0;\n   dx = (2*GetBlur1(d_uv + float2(1,0)*d) - 2*GetBlur1(d_uv - float2(1,0)*d))*0.5;\n   dy = (2*GetBlur1(d_uv + float2(0,1)*d) - 2*GetBlur1(d_uv - float2(0,1)*d))*0.5;\n   d_uv += float2(dx.x,dy.x)*texsize.zw*4;\n\n\nret.x = GetPixel(d_uv).x;\nret.x += -(GetBlur1(d_uv).x-ret.x)*0.04 - 0.006 + rand*0.01;\n//ret.x = 0;\n\nfloat2 uv_y = uv-(float2(0,-1.2) + float2(dx.y,dy.y)*8+float2(dx.x,dy.x)*4)*texsize.zw;\nret.y = max(GetPixel(uv_y).x, GetPixel(uv_y).y-0.0012) + rand*0.08;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret *= float3(0.9, 0.3, 0.5);\n    \n    ret *= 1.14; //gamma\n    ret *= ret; //darken\n}"}