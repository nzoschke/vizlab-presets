{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.997,"echo_zoom":0.997,"echo_orient":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":1,"wave_scale":4.575,"wave_mystery":-0.4,"zoomexp":1.00815,"zoom":1.12682,"warp":1.44508,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_x":64,"mv_y":48,"mv_l":0,"mv_g":0,"mv_b":0,"mv_a":0.6},"shapes":[{"baseVals":{"sides":100,"textured":1,"rad":0.15037,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = 0.5 + 0.05*sin(q1*0.456);\ny = 0.5 + 0.05*sin(q1*0.56);\ntex_zoom = tex_zoom + 0.5*sin(q1*0.345);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.05*sin(q1*0.456);\ny = 0.5 + 0.05*sin(q1*0.56);\ntex_zoom = tex_zoom + 0.5*sin(q1*0.345);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.fleem=0;a.pitch=0;a.yaw=0;","frame_eqs_str":"a.wave_r+=.33*Math.sin(a.time);a.wave_g+=.33*Math.sin(.888*a.time);a.wave_b=a.wave_g+.33*Math.sin(.999*a.time);a.zoom+=.05*Math.sin(.876*a.time);","pixel_eqs_str":"a.fleem=(.00001<Math.abs(above(a.bass_att,1))?-5:10)+(.00001<Math.abs(above(a.treb_att,1))?10:-5);a.pitch=Math.acos(2*a.x-1)*Math.sin(1.654*a.time);a.yaw=Math.acos(2*a.y-1)*Math.sin(1.543*a.time);a.zoom=a.zoom+.07*Math.sin(a.ang*a.fleem+pow(Math.abs(a.rad-2),4)+div(a.time,2)-a.rad)+.04*a.pitch+.04*a.yaw;a.rot-=Math.sin(10*a.ang+a.time+Math.cos(2*a.rad-1))*a.rad*.3;a.zoom=.00001<Math.abs(below(a.rad,.2))?.9:a.zoom;a.warp=.00001<Math.abs(below(a.rad,.2))?0:a.warp;","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + .33*sin(time); \nwave_g = wave_g + .33*sin(time*.888); \nwave_b = wave_g + .33*sin(time*.999); \nzoom=zoom+.05*sin(time*.876);","pixel_eqs_eel":"fleem=if(above(bass_att,1),-5,10)+if(above(treb_att,1),10,-5); \npitch=acos(x*2-1)*sin(time*1.654); \nyaw=acos(y*2-1)*sin(time*1.543); \nzoom = zoom + .07*sin(ang*fleem+pow(abs(rad-2),4)+time/2-rad)+pitch*.04+yaw*.04; \nrot=rot-sin(ang*10+time+cos(rad*2-1))*rad*.3; \nzoom = if(below(rad,.2),.9,zoom); \nwarp=if(below(rad,.2),0,warp);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, ((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.1))).xyz - 0.5)\n   / 256.0) * 28.0));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.04, 0.04, 0.04));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + tmpvar_2.x);\n  ret_1 = ((texture (sampler_main, (2.0 * ret_1).xy).xyz * ret_1) * 4.0);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // take the difference between the crisp and blurred images,\n    // then add it back into the image.  Creates spots and stripes over time.\n    ret += (ret - GetBlur1(uv))*0.3;\n    ret *= 0.9;\n\n   // add noise:\n   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.1;// + rand_frame.xy;\n   ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 28;\n\n   // desaturate over time, to keep the globs white\n   ret = lerp(ret, lum(ret), 0.04);\n}","comp_hlsl":"sampler sampler_seaweed;\n\nshader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    float lum = ret.xz;\n    ret += lum;\n\n    float2 texc = 2*ret.xyz;\n    ret = tex2D(sampler_main, texc) * ret.xyz * 4;\n}"}