{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":7,"wave_dots":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.044,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.11,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_str":"a.bar=0;a.width=0;a.t1=0;a.meter=0;a.q1=0;a.t3=0;a.odd=0;a.t2=0;a.q2=0;a.barvalue=0;a.t4=0;a.xstep=0;","frame_eqs_str":"a.width=32;a.t1=0;a.t2=a.q1;a.t3=div(1,a.t2);a.t4=a.q2;","point_eqs_str":"a.bar=mod(512*a.sample,a.t2);a.xstep=Math.floor(512*a.sample*a.t3);a.odd=mod(a.bar,2);a.t1+=100*a.value1;a.barvalue=.00001<Math.abs(equal(a.bar,0))?a.t1:a.barvalue;a.t1=.00001<Math.abs(equal(a.bar,0))?0:a.t1;a.r=a.bar*a.t3;a.g=Math.sin(a.bar*a.t3*3.1415);a.b=1-a.r;a.r=.00001<Math.abs(above(a.bar,a.barvalue))?0:a.r;a.g=.00001<Math.abs(above(a.bar,a.barvalue))?0:a.g;a.b=.00001<Math.abs(above(a.bar,a.barvalue))?0:a.b;a.r=.00001<Math.abs(equal(1,a.bar))?0:a.r;a.g=.00001<Math.abs(equal(1,\na.bar))?0:a.g;a.b=.00001<Math.abs(equal(1,a.bar))?1:a.b;a.a=.00001<Math.abs(equal(a.bar,a.t2-1))?0:1;a.a=.00001<Math.abs(equal(a.bar,0))?0:1;a.meter=.001953125*(a.bar+a.odd)*a.t4;a.y=.00001<Math.abs(equal(a.bar,0))?.1:.1+a.meter;a.x=(a.xstep-a.odd)*a.t2*.001953125;","init_eqs_eel":"","frame_eqs_eel":"width = 32;\n\nt1 = 0;\nt2 = q1;\nt3 = 1/t2;\nt4 = q2;","point_eqs_eel":"\nbar = (sample*512) % t2;\nxstep = int(sample*512*t3);\nodd = bar % 2;\n\nt1 = t1 + value1 * 100;\n\nbarvalue = if(equal(bar,0),t1,barvalue);\nt1 = if(equal(bar,0),0,t1);\n\n// bar coloring...\nr = bar * t3;\ng = sin((bar * t3) * 3.1415);\nb = 1 - r;\n\n// black color above barvalue\nr = if(above(bar,barvalue),0,r);\ng = if(above(bar,barvalue),0,g);\nb = if(above(bar,barvalue),0,b);\n\n// draw zero-line-ish thing\nr = if(equal(1,bar),0,r);\ng = if(equal(1,bar),0,g);\nb = if(equal(1,bar),1,b);\n\n// Try to not draw diagonal line... not working really....\na = if(equal(bar,t2-1),0,1);\na = if(equal(bar,0),0,1);\n\n// bar height\nmeter = (bar + odd) * 0.001953125 * t4;\n\n// Draw it\ny = if(equal(bar,0),0.1,0.1 + meter);\nx = (xstep - odd) * t2 * 0.001953125;"},{"baseVals":{"spectrum":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"width = 32;\n\nt1 = 0;\nt2 = q1;\nt3 = 1/t2;","point_eqs_str":"\n// for comparing\n\noddtest = (sample*512)%2;\nmeter = value1 * 5;\n\ny = if(equal(oddtest,0),0.1,0.1 + meter);\nx = sample - (oddtest * 0.001953125 ) ;\n\n","init_eqs_eel":"","frame_eqs_eel":"width = 32;\n\nt1 = 0;\nt2 = q1;\nt3 = 1/t2;","point_eqs_eel":"\n// for comparing\n\noddtest = (sample*512)%2;\nmeter = value1 * 5;\n\ny = if(equal(oddtest,0),0.1,0.1 + meter);\nx = sample - (oddtest * 0.001953125 ) ;\n\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.index4=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.movex=0;a.q1=0;a.dec_med=0;a.index3=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.movez=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q32=0;a.q28=0;a.q30=0;a.q20=0;a.p1=Math.floor(rand(16));a.p2=a.p1;","frame_eqs_str":"a.dec_med=pow(.96,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.4+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.q20=a.avg;a.q21=\na.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.14159265359*a.p2,4);a.q27=8-a.index;a.q28=Math.sin(div(a.time,7));a.q29=a.index4;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.mv_a=.5*a.q1;a.movez+=div(.3,a.fps);a.q29=a.movez;a.movex+=div(.09,a.fps)*a.q2;a.q30=a.movex;a.q31=sqr(Math.sin(div(a.time,17)));a.q32=sqr(Math.cos(div(a.time,17)));\na.zoom=1;a.rot=0;a.dx=0;a.warp=.2;","pixel_eqs_str":"","init_eqs_eel":"p1 = int(rand(16));\np2 = p1;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .4+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%4;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\n//k1 =  is_beat*bnot(index)*bnot(index2);\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.14159265359/4;\n\nq27 = 8-index;\nq28 = sin(time/7);\nq29 = index4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nmv_a = .5 * q1;\n\nmovez = movez + .01 * 30/fps ;\nq29 = movez;\n\nmovex = movex + .003 * 30/fps *q2;\nq30 = movex;\n\nq31 = sqr(sin(time/17));\nq32 = sqr(cos(time/17));\n\nzoom = 1.0;\nrot = .0;\ndx = .0;\nwarp = .2;","pixel_eqs_eel":"","warp":"","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, (uv + (cos(\n    (texture (sampler_main, uv).xz * 17.3)\n  ) * 0.2))).xyz;\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\n    //uv.y = rad*rad;\n    float srad = sqrt(rad)* 5;\n\n    ret = tex2D(sampler_main, uv).xyz;\n    ret = tex2D(sampler_main, uv + (cos(ret.xz*17.3))*.2).xyz;\n\n\n    //ret += GetBlur1(uv) - 0.07;\n    //ret *= float3(1.3,0.8,0.5);\n    //ret *= 0.8;    \n}\n"}