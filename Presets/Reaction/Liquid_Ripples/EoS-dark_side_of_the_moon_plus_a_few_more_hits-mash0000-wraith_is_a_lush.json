{"version":2,"baseVals":{"rating":5,"decay":0.96,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":0.02,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"fshader":1,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":2,"mv_r":0.3,"mv_g":0.21,"mv_b":0.11,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"x":0.16,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"a.qtime=0;a.q1=0;","frame_eqs_str":"a.qtime+=a.q1;a.x=.5+div(Math.sin(div(a.qtime,38)),3);a.y=.5+div(Math.cos(div(a.qtime,38)),3);a.rad=div(a.q1,2);a.ang=4*a.q1;","init_eqs_eel":"","frame_eqs_eel":"qtime=qtime+q1;\nx=0.5 + sin(qtime/38)/3;\ny=0.5 + cos(qtime/38)/3;\nrad=q1/2;;\nang=q1*4"},{"baseVals":{"enabled":1,"sides":3,"x":0.35,"g":1,"b":1,"g2":0,"b2":0.1,"border_a":0},"init_eqs_str":"a.qtime=0;a.q2=0;","frame_eqs_str":"a.qtime+=a.q2;a.x=.5+div(Math.sin(div(a.qtime,38)),3.3);a.y=.5+div(Math.cos(div(a.qtime,38)),3.3);a.rad=div(a.q2,2);a.ang=2*-a.q2;","init_eqs_eel":"","frame_eqs_eel":"qtime=qtime+q2;\nx=0.5 + sin(qtime/38)/3.3;\ny=0.5 + cos(qtime/38)/3.3;\n\nrad=q2/2;\nang=-q2*2"},{"baseVals":{"enabled":1,"sides":3,"x":0.59,"g":0.97,"b":0.96,"r2":0.1,"g2":0.05,"border_a":0},"init_eqs_str":"a.qtime=0;a.q3=0;","frame_eqs_str":"a.qtime+=a.q3;a.x=.5+div(Math.sin(div(a.qtime,38)),3.8);a.y=.5+div(Math.cos(div(a.qtime,38)),3.8);a.rad=div(a.q3,2);a.ang=5*a.q3;","init_eqs_eel":"","frame_eqs_eel":"qtime=qtime+q3;\nx=0.5 + sin(qtime/38)/3.8;\ny=0.5 + cos(qtime/38)/3.8;\n\nrad=q3/2;\nang=q3*5"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"rad":0.61775,"tex_zoom":0.90529,"g":1,"b":1,"a":0.4,"r2":1,"g2":0.09,"a2":0.4,"border_a":0.15},"init_eqs_str":"a.fls=0;a.flip=0;a.br=0;a.brr=0;","frame_eqs_str":"a.ang=div(a.time,2);a.r2=.5*Math.sin(a.time)+.5;a.g2=.5*Math.sin(a.time+1.0362)+.5;a.b2=.5*Math.sin(a.time+2.0724)+.5;a.fls=.5*Math.sin(div(a.time,1))+.6;a.flip=(a.flip+a.fls)*below(a.flip,1.1);a.additive=a.flip;a.br=16*Math.sin(div(a.time,1));a.brr=-1+a.br;a.sides=Math.min(Math.max(a.brr,3),8);","init_eqs_eel":"","frame_eqs_eel":"ang=time/2;\nr2=sin(time)*0.5 + 0.5;\ng2=sin(time + 3.14*0.33)*0.5 + 0.5;\nb2=sin(time + 3.14*0.66)*0.5 + 0.5;\nfls=sin(time/1)*0.5+0.6;\nflip=(flip+fls) * below(flip,1.1);\nadditive=flip;\n\nbr=(sin(time/1) ) * 16;\nbrr=-1+br;\nsides= min( max(brr,3), 8);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.speed=0;a.speedinv=0;a.q1=0;a.qa=0;a.q2=0;a.qb=0;a.q3=0;a.qc=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.decay=.96;a.speed=.9;a.speedinv=1-a.speed;a.q1=a.qa*a.speed+a.bass*a.speedinv;a.q2=a.qb*a.speed+a.mid*a.speedinv;a.q3=a.qc*a.speed+a.treb*a.speedinv;a.qa=a.q1;a.qb=a.q2;a.qc=a.q3;","pixel_eqs_str":"a.rot=.001*Math.sin(14*a.rad+a.time);a.rot+=.001*Math.sin(8*a.ang+a.time);a.dx=.002*Math.sin(48*a.rad+a.time);a.dy=.002*Math.cos(48*a.ang+a.time);a.zoom=1+.034*Math.sin(44*a.x+a.time)+.034*Math.cos(44*a.y+a.time);","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0;\nq1=0;q2=0;q3=0","frame_eqs_eel":"decay=0.96;\n\nspeed=0.900;\nspeedinv=1-speed;\nq1=(qa*speed + bass*speedinv);\nq2=(qb*speed + mid *speedinv);\nq3=(qc*speed + treb*speedinv);\nqa=q1;\nqb=q2;\nqc=q3;","pixel_eqs_eel":"rot=sin(rad*14 +time)*0.001;\nrot=rot + sin(ang*8 +time)*0.001;\ndx=sin(rad*48 + time)*0.002;\ndy=cos(ang*48 +time)*0.002;\nzoom=1 + sin(x*44 + time)*0.034 + cos(y*44 + time)*0.034;","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\n  tmpvar_4 = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  float tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\n  tmpvar_7 = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4;\n  tmpvar_10.y = tmpvar_7;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  tmpvar_11.y = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x + 0.004);\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_7;\n  tmpvar_13.y = -(tmpvar_4);\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_14;\n  x_14 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\n   * 180.0) / sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )));\n  ret_2.z = (ret_2.z * 0.8);\n  ret_2.z = (ret_2.z + 0.004);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_7);\n  tmpvar_15.y = tmpvar_4;\n  my_uv_1 = (tmpvar_15 * 0.045);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_3.x);\n  tmpvar_16.y = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_3.y);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\n   * 0.1) + 0.01));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_2;\n  ret = tmpvar_17.xyz;\n }","comp":"","warp_hlsl":"shader_body\n{\n    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with\n    float1 d = 0.005;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float2 my_uv = uv - float2(dx,dy)*0.01 + float2(dxb,dyb)*0.003;\n\n\n\n    float2 v = 0.01;\n    ret.x = tex2D( sampler_fw_main, my_uv -floor(my_uv)*0).x;\n\n    \n    ret.x += (ret.x - GetBlur3(uv).x)*.1;\n    ret.x += 0.004;\n\n\n//--------------------------------\n\n    my_uv = uv + float2(dy,-dx)*0.05*(1.2-GetBlur3(uv).y);\n\n\n\n    v = 0.01;\n    ret.z = tex2D( sampler_fw_main, my_uv).z;\n    \n    ret.z += (ret.z - GetBlur1(uv).z)*length(my_uv-uv)*180/length(scale);\n    ret.z *= 0.8;\n    ret.z += 0.004;\n\n\n\n//--------------------------------\n\n    d = 0.01;\n    my_uv = float2(-dy,dx)*0.045;\n\n    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;\n    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;\n    my_uv += uv - float2(dx,dy)*0.03;\n\n\n\n    v = 0.01;\n    ret.y =tex2D( sampler_fw_main, my_uv).y;\n\n    \n    ret.y += (ret.y - GetBlur3(my_uv).y)*0.1 + 0.01;\n//ret = 0;\n}","comp_hlsl":""}