{"version":2,"baseVals":{"rating":5,"decay":1,"wave_mode":1,"wave_dots":1,"wave_thick":1,"wave_a":0.001,"warpanimspeed":9.181,"warpscale":18.423,"zoomexp":0.0495,"zoom":0.94957,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":31.2,"mv_y":23.4,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;","frame_eqs_str":"a['q1']=(0.0003*pow(((((((1+(1.2*a['bass']))+(0.4*a['bass_att']))+(0.1*a['treb']))+(0.1*a['treb_att']))+(0.1*a['mid']))+(0.1*a['mid_att'])), 6)); ((a['wave_r']+a['wave_r'])+(1*Math.sin((a['time']*1.13)))) a['wave_g']=(a['wave_g']+(1*Math.sin((a['time']*1.23)))); a['wave_b']=(a['wave_b']+(1*Math.sin((a['time']*1.33)))); a['ob_r']=(a['ob_r']+(1*Math.sin((a['time']*3.39)))); a['ob_g']=(a['ob_g']+(1*Math.sin((a['time']*3.69)))); a['ob_b']=(a['ob_b']+(1*Math.sin((a['time']*3.99))));","pixel_eqs_str":"a.warp=5*a.q1;a.zoom+=.25*a.q1;","init_eqs_eel":"","frame_eqs_eel":"q1 = 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\nwave_r + wave_r + 1*sin(time*1.13);\nwave_g = wave_g + 1*sin(time*1.23);\nwave_b = wave_b + 1*sin(time*1.33);\nob_r = ob_r + 1*sin(time*3.39);\nob_g = ob_g + 1*sin(time*3.69);\nob_b = ob_b + 1*sin(time*3.99);","pixel_eqs_eel":"warp = q1*5;\nzoom = zoom + 0.05*q1*5;\n//rot = rot + 0.05*sin(fps*10);","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  float tmpvar_3;\n  tmpvar_3 = (((2.0 * \n    ((texture (sampler_blur2, (uv + vec2(0.005, 0.0))).xyz * scale2) + bias2)\n  ) - (2.0 * \n    ((texture (sampler_blur2, (uv - vec2(0.005, 0.0))).xyz * scale2) + bias2)\n  )).y * 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (((2.0 * \n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.005))).xyz * scale2) + bias2)\n  ) - (2.0 * \n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.005))).xyz * scale2) + bias2)\n  )).y * 0.5);\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3;\n  tmpvar_5.y = tmpvar_4;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - (tmpvar_5 * 0.01));\n  ret_2.y = texture (sampler_fc_main, (tmpvar_6 - floor(tmpvar_6))).y;\n  ret_2.y = (ret_2.y + ((ret_2.y - \n    ((texture (sampler_blur3, (tmpvar_6 - floor(tmpvar_6))).xyz * scale3) + bias3)\n  .y) * 0.1));\n  vec2 tmpvar_7;\n  tmpvar_7 = floor(uv);\n  ret_2.y = (ret_2.y + (0.006 - (\n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\n  .x * 5.0)));\n  ret_2.y = ret_2.y;\n  vec2 tmpvar_8;\n  tmpvar_8.x = -(tmpvar_4);\n  tmpvar_8.y = tmpvar_3;\n  my_uv_1 = (tmpvar_8 * 0.05);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (((2.0 * \n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\n  ) - (2.0 * \n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\n  )).z * 0.5);\n  tmpvar_9.y = (((2.0 * \n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\n  ) - (2.0 * \n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\n  )).z * 0.5);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_9 * 0.005)));\n  ret_2.z = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).z;\n  ret_2.z = (ret_2.z + ((ret_2.z - \n    ((texture (sampler_blur3, (my_uv_1 - floor(my_uv_1))).xyz * scale3) + bias3)\n  .z) * 0.13));\n  ret_2.z = (ret_2.z * 0.95);\n  ret_2.z = (ret_2.z + ((0.03 - \n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\n  .x) - (texture (sampler_main, \n    (my_uv_1 - floor(my_uv_1))\n  ).y * 0.05)));\n  ret_2.x = (texture (sampler_main, uv_orig).x - 0.3);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_2;\n  ret = tmpvar_10.xyz;\n }","comp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  vec3 ret_1;\n  xlat_mutabled = (texsize.zw * 1.5);\n  xlat_mutabledx = (texture (sampler_main, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz);\n  xlat_mutabledy = (texture (sampler_main, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz);\n  vec2 tmpvar_2;\n  tmpvar_2.x = xlat_mutabledx.y;\n  tmpvar_2.y = xlat_mutabledy.y;\n  vec2 x_3;\n  x_3 = (tmpvar_2 * 8.0);\n  ret_1 = (((texture (sampler_main, uv).x * \n    (1.0 - sqrt(dot (x_3, x_3)))\n  ) * pow (hue_shader, vec3(6.0, 6.0, 6.0))) * 1.4);\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.z;\n  tmpvar_4.y = xlat_mutabledy.z;\n  vec2 x_5;\n  x_5 = (tmpvar_4 * 4.0);\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (ret_1, vec3(1.0, 1.0, 1.0), vec3(sqrt(dot (x_5, x_5))));\n  ret_1 = tmpvar_6;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = tmpvar_6;\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body\n{\n    float1 d = 0.005;\n    float1 dx = ( 2*GetBlur2(uv + float2(d,0)) - 2*GetBlur2(uv-float2(d,0)) ).y*0.5;\n    float1 dy = ( 2*GetBlur2(uv + float2(0,d)) - 2*GetBlur2(uv-float2(0,d)) ).y*0.5;\n    float2 my_uv = uv - float2(dx,dy)*0.01;\n\n\n\n    float2 v = 0.01;\n    ret.y = tex2D( sampler_fc_main, my_uv-floor(my_uv)).y;\n\n    \n    ret.y += (ret.y - GetBlur3(my_uv-floor(my_uv)).y)*.1;\n    ret.y += 0.006-GetBlur3(uv-floor(uv)).x*5;\n\n    ret.y = lerp( ret.y, lum(ret).x, 0);\n\n//--------------------------------\n\n    d = 0.01;\n    my_uv = float2(-dy,dx)*0.05;\n\n    dx = ( 2*GetBlur2(uv + float2(d,0)) - 2*GetBlur2(uv-float2(d,0)) ).z*0.5;\n    dy = ( 2*GetBlur2(uv + float2(0,d)) - 2*GetBlur2(uv-float2(0,d)) ).z*0.5;\n    my_uv += uv - float2(dx,dy)*0.005;\n\n\n\n    v = 0.01;\n    ret.z =tex2D( sampler_fw_main, my_uv - floor(my_uv)).z;\n\n    \n    ret.z += (ret.z - GetBlur3(my_uv-floor(my_uv)).z)*0.13;\n    ret.z *= 0.95;\n    ret.z += 0.03-GetBlur3(uv-floor(uv)).x - tex2D( sampler_main, my_uv - floor(my_uv)).y*0.05;\n\n    ret.x = tex2D( sampler_main, uv_orig).x - 0.3;\n\n}","comp_hlsl":"float2 d;\nfloat3 dx, dy;\n\nshader_body\n{\n   d = texsize.zw*1.5;\n   dx = GetPixel(uv_orig + float2(1,0)*d) - GetPixel(uv_orig - float2(1,0)*d);\n   dy = GetPixel(uv_orig + float2(0,1)*d) - GetPixel(uv_orig - float2(0,1)*d);\n\n\nret = GetPixel(uv).x*(1-length(float2(dx.y,dy.y)*8))*pow(hue_shader,6)*1.4;\nret = lerp(ret,float3(1,1,1),length(float2(dx.z,dy.z)*4));\n\n\n}"}