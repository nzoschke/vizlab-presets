{"version":2,"baseVals":{"rating":5,"gammaadj":1.5,"wave_mode":4,"wave_thick":1,"wrap":0,"darken":1,"solarize":1,"wave_a":100,"wave_scale":0.007,"wave_smoothing":0.5,"wave_mystery":-0.4,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":9.861,"warpscale":13.125,"zoom":0.99951,"warp":1.08484,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":0.1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"num_inst":1024,"rad":0.55141,"tex_ang":6.28319,"tex_zoom":0.53426,"r":0.4,"g2":0,"a2":1,"border_a":0.01},"init_eqs_str":"a.n=0;a.y3=0;a.y1=0;a.z=0;a.x1=0;a.q6=0;a.d1=0;a.x3=0;a.c=0;","frame_eqs_str":"a.n=150;a.x1=-.5+div(mod(rand(a.n),a.n),a.n);a.y1=-.5+div(mod(rand(a.n),a.n),a.n);a.x3=a.x1+.4*Math.sin(.05*a.time);a.y3=a.y1+.3*Math.cos(.05*a.time)-.1;a.d1=.2>sqrt(a.x3*a.x3+a.y3*a.y3)?1:0;a.c=3*a.gmegabuf[Math.floor(512*(a.x1+.5))];a.r=(.00001<Math.abs(a.c>a.y1?1:0)?a.y1+.5:0)+a.d1;a.r2=a.r;a.g=.00001<Math.abs(a.c>a.y1?1:0)?0:1.5-a.y1;a.g2=a.g;a.z=.6;a.x=.5+div(a.z*a.x1,a.q6);a.y=.5+a.z*a.y1;a.rad=div(a.rad,a.n*a.z);","init_eqs_eel":"","frame_eqs_eel":"n=150;\n\nx1= -.5+ rand(n)%n/n;     y1= -.5+ rand(n)%n/n;\n\nx3=x1+.4*sin(.05*time);   y3=y1+.3*cos(.05*time)-.1;\n\nd1=sqrt(x3*x3+y3*y3)<.2;\n\nc=3*gmegabuf(512*(x1+.5));\n\nr=if(c>y1,y1+.5,0)+d1;     r2=r;\ng=if(c>y1,0,1.5-y1);       g2=g;\n\nz=.6;\nx=.5+ z*x1/q6;     y=.5+ z*y1;\n\nrad=rad/(n*z);"},{"baseVals":{"num_inst":1024,"rad":1.22242,"tex_zoom":0.50828,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"i=instance;  \n\nn=200;\n\nx1= -.5+(rand(n)%n)/n;\ny1= -.5+(rand(n)%n)/n;\n\nc=3*gmegabuf(512*(x1+.5));\nr=if(c>(y1),y1+.5,0);          r2=r;\ng=if(c>(y1),0,1.5-y1);\ng2=g;\n\n\nx=.5+.8*x1/q6;\ny=.5+.8*y1;\n\nrad=rad/n;","init_eqs_eel":"","frame_eqs_eel":"i=instance;  \n\nn=200;\n\nx1= -.5+(rand(n)%n)/n;\ny1= -.5+(rand(n)%n)/n;\n\nc=3*gmegabuf(512*(x1+.5));\nr=if(c>(y1),y1+.5,0);          r2=r;\ng=if(c>(y1),0,1.5-y1);\ng2=g;\n\n\nx=.5+.8*x1/q6;\ny=.5+.8*y1;\n\nrad=rad/n;"},{"baseVals":{"num_inst":1024,"rad":1.22192,"tex_zoom":3.20324,"g":1,"r2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"i=instance;  \n\nn=200;\n\nx1= -.5+(rand(n)%n)/n;\ny1= -.5+(rand(n)%n)/n;\n\nc=3*gmegabuf(512*(x1+.5));\nr=if(c>(y1),y1+.5,0);          r2=r;\ng=if(c>(y1),0,1.5-y1);\ng2=g;\n\n\nx=.5+.8*x1/q6;\ny=.5+.8*y1;\n\nrad=rad/n;","init_eqs_eel":"","frame_eqs_eel":"i=instance;  \n\nn=200;\n\nx1= -.5+(rand(n)%n)/n;\ny1= -.5+(rand(n)%n)/n;\n\nc=3*gmegabuf(512*(x1+.5));\nr=if(c>(y1),y1+.5,0);          r2=r;\ng=if(c>(y1),0,1.5-y1);\ng2=g;\n\n\nx=.5+.8*x1/q6;\ny=.5+.8*y1;\n\nrad=rad/n;"},{"baseVals":{"num_inst":1024,"x":0.38,"y":0.28,"rad":1.22242,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"i=instance;  \n\nn=200;\n\nx1= -.5+(rand(n)%n)/n;\ny1= -.5+(rand(n)%n)/n;\n\nc=3*gmegabuf(512*(x1+.5));\nr=if(c>(y1),y1+.5,0);          r2=r;\ng=if(c>(y1),0,1.5-y1);\ng2=g;\n\n\nx=.5+.8*x1/q6;\ny=.5+.8*y1;\n\nrad=rad/n;","init_eqs_eel":"","frame_eqs_eel":"i=instance;  \n\nn=200;\n\nx1= -.5+(rand(n)%n)/n;\ny1= -.5+(rand(n)%n)/n;\n\nc=3*gmegabuf(512*(x1+.5));\nr=if(c>(y1),y1+.5,0);          r2=r;\ng=if(c>(y1),0,1.5-y1);\ng2=g;\n\n\nx=.5+.8*x1/q6;\ny=.5+.8*y1;\n\nrad=rad/n;"}],"waves":[{"baseVals":{"enabled":1,"scaling":81.9543,"smoothing":0.8,"a":0},"init_eqs_str":"a.i=0;a.i1=0;a.c=0;","frame_eqs_str":"","point_eqs_str":"a.i+=1;a.i1=mod(a.i,512);a.c=mod(.25*a.time,2);a.gmegabuf[Math.floor(a.i1)]=.00001<Math.abs(a.c)?a.value1:a.gmegabuf[Math.floor(a.i1)];","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"i=i+1;      i1=i%512;\n\nc=(.25*time)%2;\ngmegabuf(i1)=if(c,value1,gmegabuf(i1));\n\n\n"},{"baseVals":{"usedots":1,"scaling":40.83906,"smoothing":0.9,"a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"r":0.7,"g":0.7,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.tg3=0;a.q25=0;a.q12=0;a.ocog=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q6=0;a.thresh=0;a.mq31=0;a.q5=0;a.mq21=0;a.mq24=0;a.cog=0;a.dy_r=0;a.chng=0;a.tg2=0;a.mq28=0;a.tg1=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.atime=0;a.q4=0;a.dx_r=0;a.q26=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.q27=0;a.q28=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.q4=Math.sin(.03*\na.atime);a.q5=Math.cos(.030383824*a.atime);a.q6=Math.tan(.029384834*a.atime);a.wave_r=.5+.5*Math.sin(1.6*a.time);a.wave_g=.5+.5*Math.sin(4.1*a.time);a.wave_b=-1+(1-a.wave_r+1-a.wave_g);a.wave_x+=.2*Math.sin(.32*a.time);a.wave_y+=.2*Math.cos(.32*a.time);a.ob_r=a.wave_r;a.ob_g=a.wave_g;a.ob_b=a.wave_b;a.cog=a.ocog+.005*(a.bass+a.bass_att+a.bass*a.bass_att-2);a.ocog=below(a.cog,3E4)*a.cog;a.q4=a.cog;a.warp+=8.5*a.bass_att*Math.sin(a.q4);a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*\n(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.tg1=Math.abs(Math.sin(4.2*a.time));a.tg2=1*above(a.tg1,.95)+0*below(a.tg1,.95);a.tg3=.00001<Math.abs(equal(a.thresh,2))?a.tg2:a.tg3;a.q5=a.tg3;a.wrap=a.tg3;","pixel_eqs_str":"a.zoom+=.04*(Math.sin(8+6*Math.sin(.2*a.time)*a.ang)+.3*Math.sin(Math.sin(2*a.time*Math.sin(a.time)*a.rad))-.1*Math.cos(a.rad));a.rot+=.3*Math.abs(.746-a.rad)*Math.sin(2.2*(.5-a.rad)+5.7*Math.sin(.1*a.time));a.sx+=.01*(.99-a.rad)*Math.sin(.733*a.time)*below(Math.sin(a.time),0);a.sy+=.01*(.99-a.rad)*Math.cos(.953*a.time)*above(Math.sin(a.time),0);a.zoom-=.015*(1.5-a.rad)*below(a.rad,1.5);a.warp+=Math.abs(1-a.q5);a.rot-=5.75*a.q5;","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\nq4=sin(atime*.03);\nq5=cos(atime*.030383824);\nq6=tan(atime*.029384834);\n\nwave_r = 0.5 + 0.5*sin(1.6*time);\nwave_g = 0.5 + 0.5*sin(4.1*time);\nwave_b = -1 + (1-wave_r + 1-wave_g);\n\nwave_x = wave_x + 0.2*sin(0.32*time);\nwave_y = wave_y + 0.2*cos(0.32*time);\n\nob_r = wave_r;\nob_g = wave_g;\nob_b = wave_b;\ncog = ocog+0.005*(bass+bass_att+(bass*bass_att)-2);\nocog = below(cog,30000)*cog;\nq4 = cog;\nwarp  =warp + bass_att*8.5*sin(q4);\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\ntg1 = abs(sin(4.2*time));\ntg2 = 1*above(tg1,0.95) + 0*below(tg1,0.95);\ntg3 = if(equal(thresh,2),tg2,tg3);\nq5 = tg3;\n\nwrap = tg3;","pixel_eqs_eel":"zoom = zoom + 0.04*(sin(8+6*sin(0.2*time)*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\nrot = rot + 0.3*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\nzoom = zoom - 0.015*(0.5*abs(3)-rad)*below(rad,1.5);\n\nwarp = warp + abs(1-q5);\nrot = rot - 5.75*q5;","warp":" shader_body { \n  vec3 rsamp_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  ret_2 = clamp (texture (sampler_pw_main, uv).xyz, 0.0, 1.0);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\n    ret_2.y = (ret_2.y - (tmpvar_4.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (ret_2.z - (tmpvar_4.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (ret_2.x - (tmpvar_4.z * 0.5));\n  };\n  ret_2 = texture (sampler_pw_main, uv).xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.xy - 0.5)\n   * 12.0) * texsize.zw)));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  rsamp_1 = tmpvar_6;\n  float tmpvar_7;\n  vec2 x_8;\n  x_8 = (ret_2.xy - uv);\n  tmpvar_7 = sqrt(dot (x_8, x_8));\n  float tmpvar_9;\n  vec2 x_10;\n  x_10 = (tmpvar_5.xy - uv);\n  tmpvar_9 = sqrt(dot (x_10, x_10));\n  if ((tmpvar_7 > tmpvar_9)) {\n    ret_2.xy = tmpvar_6.xy;\n  };\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.zw - 0.5)\n   * 48.0) * texsize.zw)));\n  rsamp_1 = tmpvar_11.xyz;\n  float tmpvar_12;\n  vec2 x_13;\n  x_13 = (ret_2.xy - uv);\n  tmpvar_12 = sqrt(dot (x_13, x_13));\n  float tmpvar_14;\n  vec2 x_15;\n  x_15 = (tmpvar_11.xy - uv);\n  tmpvar_14 = sqrt(dot (x_15, x_15));\n  if ((tmpvar_12 > tmpvar_14)) {\n    ret_2.xy = rsamp_1.xy;\n  };\n  ret_2.z = texture (sampler_fw_main, ret_2.xy).z;\n  ret_2.z = (ret_2.z - (q1 * 0.005));\n  if ((ret_2.z < 0.09)) {\n    ret_2 = vec3(0.0, 0.0, 0.0);\n  };\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_2;\n  ret = tmpvar_16.xyz;\n }","comp":" shader_body { \n  vec2 uv_rr_1;\n  vec2 uv_r_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4.x = q13;\n  tmpvar_4.y = q14;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((uv - tmpvar_4) * aspect.xy);\n  vec2 tmpvar_6;\n  tmpvar_6.x = ((q12 * tmpvar_5.x) - (q11 * tmpvar_5.y));\n  tmpvar_6.y = ((q11 * tmpvar_5.x) + (q12 * tmpvar_5.y));\n  uv_r_2 = (q15 * tmpvar_6);\n  uv_r_2 = (tmpvar_4 + (uv_r_2 * aspect.zw));\n  uv_r_2 = (1.0 - abs((\n    (fract((uv_r_2 * 0.5)) * 2.0)\n   - 1.0)));\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv_r_2 - tmpvar_4);\n  vec2 tmpvar_8;\n  tmpvar_8.x = ((q18 * tmpvar_7.x) - (q17 * tmpvar_7.y));\n  tmpvar_8.y = ((q17 * tmpvar_7.x) + (q18 * tmpvar_7.y));\n  uv_rr_1 = (q16 * tmpvar_8);\n  uv_rr_1 = (tmpvar_4 + uv_rr_1);\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv_rr_1 - 0.5);\n  float tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = (min (abs(\n    (tmpvar_9.x / tmpvar_9.y)\n  ), 1.0) / max (abs(\n    (tmpvar_9.x / tmpvar_9.y)\n  ), 1.0));\n  float tmpvar_12;\n  tmpvar_12 = (tmpvar_11 * tmpvar_11);\n  tmpvar_12 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_12) + 0.05368138) * tmpvar_12) - 0.1173503)\n     * tmpvar_12) + 0.1938925) * tmpvar_12) - 0.3326756)\n   * tmpvar_12) + 0.9999793) * tmpvar_11);\n  tmpvar_12 = (tmpvar_12 + (float(\n    (abs((tmpvar_9.x / tmpvar_9.y)) > 1.0)\n  ) * (\n    (tmpvar_12 * -2.0)\n   + 1.570796)));\n  tmpvar_10 = (tmpvar_12 * sign((tmpvar_9.x / tmpvar_9.y)));\n  if ((abs(tmpvar_9.y) > (1e-08 * abs(tmpvar_9.x)))) {\n    if ((tmpvar_9.y < 0.0)) {\n      if ((tmpvar_9.x >= 0.0)) {\n        tmpvar_10 += 3.141593;\n      } else {\n        tmpvar_10 = (tmpvar_10 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_10 = (sign(tmpvar_9.x) * 1.570796);\n  };\n  vec2 tmpvar_13;\n  tmpvar_13.x = ((tmpvar_10 * q21) * 1.5);\n  tmpvar_13.y = (((0.666 * \n    log(sqrt(dot (tmpvar_9, tmpvar_9)))\n  ) - (tmpvar_10 * q21)) + q22);\n  vec3 tmpvar_14;\n  tmpvar_14.z = 0.0;\n  tmpvar_14.xy = roam_sin.xy;\n  vec3 tmpvar_15;\n  tmpvar_15.z = 0.0;\n  tmpvar_15.xy = roam_cos.yx;\n  vec3 tmpvar_16;\n  tmpvar_16.z = 0.0;\n  tmpvar_16.x = dot (tmpvar_14, vec3(0.32, 0.49, 0.29));\n  tmpvar_16.y = dot (tmpvar_15, vec3(0.32, 0.49, 0.29));\n  ret_3 = (texture (sampler_main, clamp ((0.5 + \n    ((0.5 - abs((\n      (fract((tmpvar_13 * 0.5)) * 2.0)\n     - 1.0))) * vec2(0.96, 1.02))\n  ), 0.0, 1.0)).xyz * (texture (sampler_noisevol_hq, (\n    (vec3(0.05, 0.05, 0.0) * (((uv.xyy + \n      (tmpvar_16 * 0.5)\n    ) * texsize.xyy) * texsize_noisevol_hq.zww))\n   + \n    (vec3(0.0, 0.0, 0.2) * time)\n  )) * 10.0).xyz);\n  vec3 tmpvar_17;\n  tmpvar_17 = pow (((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) / bass_att), vec3((1.0 - dot (\n    clamp (pow (((\n      (texture (sampler_blur1, uv).xyz * scale1)\n     + bias1) / treb_att), vec3((1.0 - dot (\n      clamp (ret_3, 0.0, 1.0)\n    , vec3(0.32, 0.49, 0.29))))), 0.0, 1.0)\n  , vec3(0.32, 0.49, 0.29)))));\n  ret_3 = tmpvar_17;\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = tmpvar_17;\n  ret = tmpvar_18.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y -= (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z -= (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x -= (noise9).z*.5; \nret.xyz = tex2D( sampler_pw_main,uvm).xyz;\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nrsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nret.z = tex2D(sampler_fw_main,ret.xy).z;\n\nret.z -= q1*.005;\n\nif (ret.z < .09) {\nret*=0;\n}\n\n\n}","comp_hlsl":"shader_body\n{\n//ret=tex2D(sampler_main,uv);\n// ***** Flexis rotating caleidoscope code *****\nfloat2 cntr = float2(q13,q14); float sin = q11; float cos = q12; float scale = q15;\nfloat2 uv_r = (uv-cntr)*aspect.xy;\n       uv_r = scale*float2( cos*uv_r.x - sin*uv_r.y, sin*uv_r.x + cos*uv_r.y); // rotation\n       uv_r = cntr + uv_r*aspect.zw;\n       uv_r = 1.0 - abs( frac( uv_r * 0.5 ) * 2.0 - 1.0 ); // mirror\nsin = q17; cos = q18; scale = q16;\nfloat2 uv_rr = (uv_r-cntr);\n       uv_rr = scale*float2( cos*uv_rr.x - sin*uv_rr.y, sin*uv_rr.x + cos*uv_rr.y); // counter-rotation\n       uv_rr = cntr + (uv_rr);\nfloat t = q22;\nfloat2 c = ((uv_rr-0.5));\nfloat1 ang_hq = atan2(c.x,c.y);\nfloat2 spiral = float2(ang_hq*q21*1.5,0.666*log(length(c))-ang_hq*q21+t);\nspiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*float2(0.96,1.02); // mirror\nret = GetPixel(saturate(spiral));\n\n\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy+float3(lum(roam_sin.xy),\n                                           lum(roam_cos.yx),\n                                           0)*0.5\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.2 \n                     );\nret *= (noise2)*10; \n//ret=lum(ret)>0+(lum(ret)<=0.75)*ret;\nret=pow(GetBlur1(uv).xyz/treb_att,1-lum(saturate(ret.xyz)));\nret=pow(GetBlur2(uv).xyz/bass_att,1-lum(saturate(ret.xyz)));\n//ret=1-ret;\n}"}