{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.088,"wave_scale":15,"wave_smoothing":0,"modwavealphastart":0.9,"modwavealphaend":1.3,"zoomexp":0.22705,"fshader":1,"zoom":1.01,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":23.52,"mv_y":17.832,"mv_dx":0.006,"mv_dy":0.04,"mv_l":0,"mv_r":0.83,"mv_g":0.59,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.03333,"r":0,"g2":0,"border_a":1},"init_eqs_str":"","frame_eqs_str":"a.x=.01*rand(100);a.y=.01*rand(100);a.a=.00001<Math.abs(above(mod(a.frame,7),0))?0:1;a.a2=.00001<Math.abs(above(mod(a.frame,7),0))?0:1;a.border_a=0;","init_eqs_eel":"","frame_eqs_eel":"x = rand(100)*.01;\ny = rand(100)*.01;\n\na = if(above(frame%7,0),0,1);\na2 = if(above(frame%7,0),0,1);\nborder_a = 0;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.wave_r+=.6*Math.sin(2.5*a.bass)+.4*Math.sin(.7*a.time);a.wave_b+=.6*Math.sin(2.5*a.treb)+.4*Math.sin(.89*a.time);a.wave_g+=.6*Math.sin(2.5*a.mid)+.4*Math.sin(.74*a.time);a.q1=a.rot+.005*Math.sin(.5*a.time);","pixel_eqs_str":"a.rot=2*a.q1*a.rad*pow(bitand(0,.1*(4+2*Math.sin(20*a.rad+a.time))),6);","init_eqs_eel":"","frame_eqs_eel":"wave_r=wave_r+(0.6*sin(bass*2.500)+0.4*sin(time*0.70));\nwave_b=wave_b+(0.6*sin(treb*2.500)+0.4*sin(time*0.89));\nwave_g=wave_g+(0.6*sin(mid*2.500)+0.4*sin(time*0.74));\nq1=rot+0.005*sin(time*0.5);","pixel_eqs_eel":"rot=q1*2*rad*pow(0&(4+2*sin(rad*20+time))*.1,6);","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((texture (sampler_main, (\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \n      mix (uv_orig, uv, vec2(4.0, 4.0))\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\n      ((texture (sampler_blur2, mix (uv_orig, uv, vec2(-12.0, -12.0))).xyz * scale2) + bias2)\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\n   + \n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\n  )).xyz + (\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\n   * 0.006).xyz) + -0.0006);\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret2_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  uv2_3.y = uv.y;\n  uv2_3.x = (1.0 - uv.x);\n  uv2_3 = (0.5 + ((uv2_3 - 0.5) * 0.98));\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\n  vec2 tmpvar_5;\n  tmpvar_5 = (texsize.zw * 4.0);\n  vec3 tmpvar_6;\n  tmpvar_6 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_7;\n  tmpvar_7 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_8;\n  tmpvar_8.z = 0.0;\n  tmpvar_8.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\n    ((uv_1.xyy + (tmpvar_8 * 0.5)) * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\n  vec2 tmpvar_10;\n  tmpvar_10.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  tmpvar_10.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\n  uv_1 = (uv_1 - (tmpvar_10 * 0.04));\n  vec2 tmpvar_11;\n  tmpvar_11.x = dot (((\n    (texture (sampler_blur1, (uv2_3 + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv2_3 - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_11.y = dot (((\n    (texture (sampler_blur1, (uv2_3 + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv2_3 - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  uv2_3 = (uv2_3 - (tmpvar_11 * 0.04));\n  ret_4 = (abs((\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n  )) * (dot (tmpvar_9, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  ret2_2 = (abs((\n    ((texture (sampler_main, uv2_3).xyz + ((texture (sampler_blur1, uv2_3).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv2_3).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv2_3).xyz * scale3) + bias3)\n  )) * (dot (tmpvar_9, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  ret2_2 = (0.5 - pow (ret2_2, vec3(0.5, 0.5, 0.5)));\n  ret_4 = (pow (ret_4, vec3(0.5, 0.5, 0.5)) - (0.3 - ret2_2));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_4;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\n\n\nfloat error     = 0.5;        // maximum random pixel offset\nfloat diffusion = 0.006;      // dither strength\nfloat fadeout   = -0.0006;    // may be minor 1/256 due to the error diffusion dither;\n\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;\nfloat magic = lum(GetPixel(lerp(uv_orig,uv, 4))) - lum(GetBlur2(lerp(uv_orig,uv,-12)));\nuv = lerp(uv_orig,uv, magic*12 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;\nret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;\n\n}","comp_hlsl":"shader_body\n{\nfloat2 uv2 = uv;\nuv2.x=1-uv2.x;\nuv2 = .5+(uv2-.5)*.98;\nuv = 0.5 + (uv-0.5)*0.98;\n    float2 d = texsize.zw*4;\n    float2 d2= texsize.zw*4;\n\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dx2= ( GetBlur1(uv2+float2(1,0)*d2)-GetBlur1(uv2-float2(1,0)*d2) );\n\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n    float3 dy2 = ( GetBlur1(uv2+float2(0,1)*d2)-GetBlur1(uv2-float2(0,1)*d2) );\n\nfloat4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nfloat4 noise2= tex3D(sampler_noisevol_hq, ((uv2.xyy+float3(lum(dx2),lum(dy2),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nuv -= float2(lum(dx),lum(dy))*0.04;\nuv2-= float2(lum(dx2),lum(dy2))*0.04;\n\nret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));\nfloat3 ret2 = abs(GetPixel(uv2)+GetBlur1(uv2)-GetBlur2(uv2)-GetBlur3(uv2));\nret *= lum(noise)*3; \nret2*= lum(noise)*3; \nret = pow(ret,0.5);\nret2= pow(ret2,0.5);\nret2=.5-ret2;\nret-=.3-ret2;\n}"}