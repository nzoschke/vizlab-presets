{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":0.952,"brighten":1,"wave_a":0.001,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q3=0;a.trans2=0;a.trans3=0;a.q30=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q3))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q3))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q3))),5)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(25))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(25))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+div(Math.floor(rand(Math.floor(a.q30))),\n15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_b=.1*Math.floor(rand(a.q3))+a.instance-\na.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q3)))/5+instance-instance;\ntrans2 = int(rand(int(q3)))/5+instance-instance;\ntrans3 = int(rand(int(q3)))/5+instance-instance;\na = trans;\n\nx = .5 + int(rand(25))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(25))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q3=0;a.trans2=0;a.trans3=0;a.q30=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q3))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q3))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q3))),5)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(25))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(25))*a.mid_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+div(Math.floor(rand(Math.floor(a.q30))),\n15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_b=.1*Math.floor(rand(a.q3))+a.instance-\na.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q3)))/5+instance-instance;\ntrans2 = int(rand(int(q3)))/5+instance-instance;\ntrans3 = int(rand(int(q3)))/5+instance-instance;\na = trans;\n\nx = .5 + int(rand(25))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(25))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"num_inst":33,"r":0.5,"r2":0.5,"g2":0,"border_a":0},"init_eqs_str":"a.trans=0;a.q3=0;a.trans2=0;a.trans3=0;a.q30=0;","frame_eqs_str":"a.trans=div(Math.floor(rand(Math.floor(a.q3))),5)+a.instance-a.instance;a.trans2=div(Math.floor(rand(Math.floor(a.q3))),5)+a.instance-a.instance;a.trans3=div(Math.floor(rand(Math.floor(a.q3))),5)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(25))*a.treb_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(25))*a.treb_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+div(Math.floor(rand(Math.floor(a.q30))),\n15)+a.instance-a.instance;a.r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.r2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.g2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.b2=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_r=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_g=.1*Math.floor(rand(a.q3))+a.instance-a.instance;a.border_b=.1*Math.floor(rand(a.q3))+a.instance-\na.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q3)))/5+instance-instance;\ntrans2 = int(rand(int(q3)))/5+instance-instance;\ntrans3 = int(rand(int(q3)))/5+instance-instance;\na = trans;\n\nx = .5 + int(rand(25))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(25))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\nr=int(rand(q3))*.1+instance-instance;\ng=int(rand(q3))*.1+instance-instance;\nb=int(rand(q3))*.1+instance-instance;\nr2=int(rand(q3))*.1+instance-instance;\ng2=int(rand(q3))*.1+instance-instance;\nb2=int(rand(q3))*.1+instance-instance;\nborder_r=int(rand(q3))*.1+instance-instance;\nborder_g=int(rand(q3))*.1+instance-instance;\nborder_b=int(rand(q3))*.1+instance-instance;\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xpos=0;a.basstime=0;a.star=0;a.q6=0;a.q1=0;a.q5=0;a.musictime=0;a.shapechange=0;a.q4=0;a.ypos=0;a.zm=0;a.rd=0;a.ag=0;a.ny=0;a.q2=0;a.q3=0;a.nx=0;","frame_eqs_str":"a.wave_a=0;a.ib_r=.5*Math.sin(a.time)+.5;a.ib_g=.5*Math.sin(a.time+2.1)+.5;a.ib_b=.5*Math.sin(a.time+4.2)+.5;a.ob_r=a.ib_r-.5;a.ob_g=a.ib_g-.5;a.ob_b=a.ib_b-.5;a.q1=a.ib_r;a.q2=a.ib_g;a.q3=a.ib_b;a.decay=.98;a.musictime+=a.mid*a.mid*.003*div(75,a.fps);a.basstime+=a.bass*a.bass*.03*div(75,a.fps);a.xpos=.1*Math.sin(.6*a.musictime);a.ypos=.3*Math.sin(.4*a.musictime);a.q4=a.xpos;a.q5=a.ypos;a.q6=a.basstime;","pixel_eqs_str":"a.zoom=1.02;a.cx=.5+a.q4;a.cy=.5-a.q5;a.nx=2*(a.x-.5-a.q4);a.ny=1.5*(a.y-.5+a.q5);a.rd=sqrt(sqr(a.nx)+sqr(a.ny));a.ag=Math.atan(div(a.ny,a.nx));a.zm=1.1-div(a.rd,4);a.shapechange=5*Math.sin(.2*a.q6)+5;a.star=Math.sin(a.ag*(2+a.shapechange)+a.q6)*(1-a.rad)*.5+.5;a.star=a.star*a.star*3-.4;a.star=a.star*a.treb*a.treb*.5;a.zm+=.1*a.star;a.sx=a.zm;a.sy=a.zm;a.rot=above(a.rd,.7)*(a.rd-.7)*Math.sin(.3*a.time)*.6*-Math.sin(4*a.ag);a.dx=.05*Math.sin(40*a.y)*a.q4;a.dy=.05*Math.cos(40*\na.x)*a.q4;","init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\n\n\n\nib_r=sin(time)*0.5+0.5;\nib_g=sin(time+2.1)*0.5+0.5;\nib_b=sin(time+4.2)*0.5+0.5;\n\nob_r=ib_r-0.5;\nob_g=ib_g-0.5;\nob_b=ib_b-0.5;\nq1=ib_r;\nq2=ib_g;\nq3=ib_b;\n\n\n\ndecay = .98;\n\n\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\n//solarize=above(0.5,bass);\n//darken=above(0.4,treb);\n\nmusictime=musictime+(mid*mid)*0.003*(75/fps);\nbasstime=basstime+(bass*bass)*0.03*(75/fps);\n\n\nxpos=sin(musictime*0.6)*0.1;\nypos=sin(musictime*0.4)*0.3;\nq4=xpos;\nq5=ypos;\nq6=basstime;","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\n//var=(bass+mid+treb)/3;\n//rot=((ang&rad/rad)/(var*20))/10;\n//sx=.99-(var*0.01);\n//cx=var*0.1*(ang/12);\n//sy=sx;\n\nzoom=1.02;\n\n//move center based on musictime\ncx=0.5+q4;\ncy=0.5-q5;\n\n//adjust x,y values based on musictime\nnx=(x-0.5-q4)*2;\nny=(y-0.5+q5)*1.5;\n\n//radians based on adjusted x,y\nrd=sqrt( sqr(nx) + sqr(ny) );\n\n//ang based on adjusted x,y\nag=atan( ny/nx );\n\nzm=(1.1-(rd/4));\n//zm=1;\n\nshapechange=sin(q6*0.2)*5+5;\n\nstar=sin(ag*(2+shapechange)+q6)*(1-rad)*0.5 + 0.5;\nstar=star*star*3 -0.4;\nstar=star*treb*treb*0.5;\nzm=zm+star*0.1;\nsx=zm;\nsy=zm;\nrot=above(rd,0.7)*(rd-0.7)*sin(time*0.3)*0.6 * -sin(ag*4);\n\ndx=sin(y*40)*(q4*0.05);\ndy=cos(x*40)*(q4*0.05);","warp":" shader_body { \n  vec3 noise2_1;\n  vec3 rc_2;\n  vec3 p_3;\n  vec2 polar_4;\n  vec3 ret_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = ((q27 * (uv - 0.5)) * aspect.xy);\n  float tmpvar_7;\n  tmpvar_7 = sqrt(dot (tmpvar_6, tmpvar_6));\n  float tmpvar_8;\n  float tmpvar_9;\n  tmpvar_9 = (min (abs(\n    (tmpvar_7 / q30)\n  ), 1.0) / max (abs(\n    (tmpvar_7 / q30)\n  ), 1.0));\n  float tmpvar_10;\n  tmpvar_10 = (tmpvar_9 * tmpvar_9);\n  tmpvar_10 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_10) + 0.05368138) * tmpvar_10) - 0.1173503)\n     * tmpvar_10) + 0.1938925) * tmpvar_10) - 0.3326756)\n   * tmpvar_10) + 0.9999793) * tmpvar_9);\n  tmpvar_10 = (tmpvar_10 + (float(\n    (abs((tmpvar_7 / q30)) > 1.0)\n  ) * (\n    (tmpvar_10 * -2.0)\n   + 1.570796)));\n  tmpvar_8 = (tmpvar_10 * sign((tmpvar_7 / q30)));\n  if ((abs(q30) > (1e-08 * abs(tmpvar_7)))) {\n    if ((q30 < 0.0)) {\n      if ((tmpvar_7 >= 0.0)) {\n        tmpvar_8 += 3.141593;\n      } else {\n        tmpvar_8 = (tmpvar_8 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_8 = (sign(tmpvar_7) * 1.570796);\n  };\n  bool tmpvar_11;\n  tmpvar_11 = (q32 >= tmpvar_8);\n  float tmpvar_12;\n  float tmpvar_13;\n  tmpvar_13 = (min (abs(\n    (tmpvar_6.x / tmpvar_6.y)\n  ), 1.0) / max (abs(\n    (tmpvar_6.x / tmpvar_6.y)\n  ), 1.0));\n  float tmpvar_14;\n  tmpvar_14 = (tmpvar_13 * tmpvar_13);\n  tmpvar_14 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_14) + 0.05368138) * tmpvar_14) - 0.1173503)\n     * tmpvar_14) + 0.1938925) * tmpvar_14) - 0.3326756)\n   * tmpvar_14) + 0.9999793) * tmpvar_13);\n  tmpvar_14 = (tmpvar_14 + (float(\n    (abs((tmpvar_6.x / tmpvar_6.y)) > 1.0)\n  ) * (\n    (tmpvar_14 * -2.0)\n   + 1.570796)));\n  tmpvar_12 = (tmpvar_14 * sign((tmpvar_6.x / tmpvar_6.y)));\n  if ((abs(tmpvar_6.y) > (1e-08 * abs(tmpvar_6.x)))) {\n    if ((tmpvar_6.y < 0.0)) {\n      if ((tmpvar_6.x >= 0.0)) {\n        tmpvar_12 += 3.141593;\n      } else {\n        tmpvar_12 = (tmpvar_12 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_12 = (sign(tmpvar_6.x) * 1.570796);\n  };\n  float x_15;\n  x_15 = (q31 * sin(tmpvar_8));\n  vec2 tmpvar_16;\n  tmpvar_16.x = tmpvar_12;\n  tmpvar_16.y = ((q28 - tmpvar_8) + (sign(x_15) * (1.570796 - \n    (sqrt((1.0 - abs(x_15))) * (1.570796 + (abs(x_15) * (-0.2146018 + \n      (abs(x_15) * (0.08656672 + (abs(x_15) * -0.03102955)))\n    ))))\n  )));\n  polar_4 = tmpvar_16;\n  vec3 tmpvar_17;\n  tmpvar_17.x = (sin(tmpvar_12) * sin(tmpvar_16.y));\n  tmpvar_17.y = (cos(tmpvar_12) * sin(tmpvar_16.y));\n  tmpvar_17.z = cos(tmpvar_16.y);\n  vec2 tmpvar_18;\n  tmpvar_18.x = ((tmpvar_17.z * q20) - (tmpvar_17.y * q21));\n  tmpvar_18.y = ((tmpvar_17.z * q21) + (tmpvar_17.y * q20));\n  vec2 tmpvar_19;\n  tmpvar_19.x = ((tmpvar_18.x * q22) - (tmpvar_17.x * q23));\n  tmpvar_19.y = ((tmpvar_18.x * q23) + (tmpvar_17.x * q22));\n  p_3.z = tmpvar_19.x;\n  vec2 tmpvar_20;\n  tmpvar_20.x = ((tmpvar_18.y * q24) - (tmpvar_19.y * q25));\n  tmpvar_20.y = ((tmpvar_18.y * q25) + (tmpvar_19.y * q24));\n  p_3.xy = tmpvar_20.yx;\n  float tmpvar_21;\n  float tmpvar_22;\n  tmpvar_22 = (min (abs(\n    (tmpvar_19.x / tmpvar_20.y)\n  ), 1.0) / max (abs(\n    (tmpvar_19.x / tmpvar_20.y)\n  ), 1.0));\n  float tmpvar_23;\n  tmpvar_23 = (tmpvar_22 * tmpvar_22);\n  tmpvar_23 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_23) + 0.05368138) * tmpvar_23) - 0.1173503)\n     * tmpvar_23) + 0.1938925) * tmpvar_23) - 0.3326756)\n   * tmpvar_23) + 0.9999793) * tmpvar_22);\n  tmpvar_23 = (tmpvar_23 + (float(\n    (abs((tmpvar_19.x / tmpvar_20.y)) > 1.0)\n  ) * (\n    (tmpvar_23 * -2.0)\n   + 1.570796)));\n  tmpvar_21 = (tmpvar_23 * sign((tmpvar_19.x / tmpvar_20.y)));\n  if ((abs(tmpvar_20.y) > (1e-08 * abs(tmpvar_19.x)))) {\n    if ((tmpvar_20.y < 0.0)) {\n      if ((tmpvar_19.x >= 0.0)) {\n        tmpvar_21 += 3.141593;\n      } else {\n        tmpvar_21 = (tmpvar_21 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_21 = (sign(tmpvar_19.x) * 1.570796);\n  };\n  float tmpvar_24;\n  tmpvar_24 = sqrt(dot (p_3.xz, p_3.xz));\n  float tmpvar_25;\n  float tmpvar_26;\n  tmpvar_26 = (min (abs(\n    (tmpvar_20.x / tmpvar_24)\n  ), 1.0) / max (abs(\n    (tmpvar_20.x / tmpvar_24)\n  ), 1.0));\n  float tmpvar_27;\n  tmpvar_27 = (tmpvar_26 * tmpvar_26);\n  tmpvar_27 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_27) + 0.05368138) * tmpvar_27) - 0.1173503)\n     * tmpvar_27) + 0.1938925) * tmpvar_27) - 0.3326756)\n   * tmpvar_27) + 0.9999793) * tmpvar_26);\n  tmpvar_27 = (tmpvar_27 + (float(\n    (abs((tmpvar_20.x / tmpvar_24)) > 1.0)\n  ) * (\n    (tmpvar_27 * -2.0)\n   + 1.570796)));\n  tmpvar_25 = (tmpvar_27 * sign((tmpvar_20.x / tmpvar_24)));\n  if ((abs(tmpvar_24) > (1e-08 * abs(tmpvar_20.x)))) {\n    if ((tmpvar_24 < 0.0)) {\n      if ((tmpvar_20.x >= 0.0)) {\n        tmpvar_25 += 3.141593;\n      } else {\n        tmpvar_25 = (tmpvar_25 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_25 = (sign(tmpvar_20.x) * 1.570796);\n  };\n  vec2 tmpvar_28;\n  tmpvar_28.x = tmpvar_21;\n  tmpvar_28.y = tmpvar_25;\n  polar_4 = (((tmpvar_28 * q29) * vec2(1.0, 2.0)) + vec2(0.0, 0.5));\n  vec3 tmpvar_29;\n  tmpvar_29.xy = polar_4;\n  tmpvar_29.z = (time * 0.15);\n  rc_2 = (texture (sampler_noisevol_hq, tmpvar_29).xyz + (texture (sampler_noisevol_hq, (2.0 * tmpvar_29)) * 0.5).xyz);\n  rc_2 = (rc_2 + (texture (sampler_noisevol_hq, (4.0 * tmpvar_29)) * 0.25).xyz);\n  rc_2 = (rc_2 + (texture (sampler_noisevol_hq, (8.0 * tmpvar_29)) * 0.125).xyz);\n  rc_2 = (rc_2 + (texture (sampler_noisevol_hq, (16.0 * tmpvar_29)) * 0.0625).xyz);\n  rc_2 = ((rc_2 * rc_2) * (rc_2 * 2.0));\n  rc_2 = (rc_2 * (q3 * 0.5));\n  vec4 tmpvar_30;\n  tmpvar_30 = texture (sampler_fc_main, (0.5 + (uv - 0.5)));\n  noise2_1 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz + mix ((rc_2 * 2.0), vec3(2.0, 2.0, 2.0), vec3(rad)));\n  vec3 a_31;\n  a_31 = (1.0 - tmpvar_30.xyz);\n  ret_5 = (tmpvar_30.xyz + (vec3(0.3, 0.25, 0.2) * dot (\n    ((a_31.yzx * noise2_1.zxy) - (a_31.zxy * noise2_1.yzx))\n  , vec3(0.32, 0.49, 0.29))));\n  ret_5 = (ret_5 - (0.1 * rad));\n  ret_5 = (ret_5 + ((0.1 * texture (sampler_noisevol_hq, \n    ((p_3 + (time * 0.1)) * 0.7)\n  )) * float(tmpvar_11)).xyz);\n  vec4 tmpvar_32;\n  tmpvar_32 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * polar_4.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_5.x > (q21 * roam_cos.y)) && (ret_5.x <= (q24 * roam_sin.x)))) {\n    ret_5.y = (ret_5.y - (tmpvar_32.x * 0.5));\n  };\n  if (((ret_5.y > (q22 * roam_sin.x)) && (ret_5.y <= (q25 * roam_cos.x)))) {\n    ret_5.z = (ret_5.z - (tmpvar_32.y * 0.5));\n  };\n  if (((ret_5.z > (q23 * roam_cos.x)) && (ret_5.z <= (q26 * roam_sin.y)))) {\n    ret_5.x = (ret_5.x - (tmpvar_32.z * 0.5));\n  };\n  vec4 tmpvar_33;\n  tmpvar_33.w = 1.0;\n  tmpvar_33.xyz = ret_5;\n  ret = tmpvar_33.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  float ang2_2;\n  ang2_2 = (fract((0.9549295 * ang)) / 6.0);\n  ang2_2 = (abs((ang2_2 - 0.08333334)) * 6.283185);\n  vec2 tmpvar_3;\n  tmpvar_3.x = cos(ang2_2);\n  tmpvar_3.y = sin(ang2_2);\n  uv_1 = (0.5 + ((\n    (0.4 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\n   * tmpvar_3) * texsize.zw));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (1.4 * pow ((\n    clamp (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), 0.0, 1.0)\n   * \n    (texture (sampler_pc_main, uv_1).xyz - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3))\n  ), vec3(0.5, 0.5, 0.5)));\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"float2 polar, factorA, factorB, product;\n\nshader_body\n{\n\nfloat z = q30;\nfloat d = q31;\nfloat pi = q28;\nfloat pi2inv = q29;\nfloat mask_apex = q32;\nfloat zoom = q27;\n\nfloat2 c = zoom*(uv-0.5)*aspect.xy;\n\nfloat camera_apex = atan2( length(c),z);\n\nbool mask = mask_apex >= camera_apex;\n\nfloat longitude = atan2(c.x,c.y);\nfloat latitude = (pi - camera_apex + asin(d*sin(camera_apex)));\n\nfloat2 polar = float2(longitude,latitude);\n\nfloat3 p = float3( sin(polar.x)*sin(polar.y),cos(polar.x)*sin(polar.y),cos(polar.y));\n\nfactorA = p.zy;\nfactorB = float2(q20,q21);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);\np.zy = product.xy;\n\nfactorA = p.zx;\nfactorB = float2(q22,q23);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);\np.zx = product.xy;\n\nfactorA = p.yx;\nfactorB = float2(q24,q25);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\np.yx = product.xy;\npolar = float2(atan2(p.z,p.x),atan2(p.y,length(p.xz)))*pi2inv*float2(1,2)+float2(0,0.5);\n\npolar = polar;\n\n    float3 pos = float3(polar,time*0.15);\n    float3 rc = tex3D(sampler_noisevol_hq, pos);\n    rc += tex3D(sampler_noisevol_hq, 2*pos)*0.5;\n    rc += tex3D(sampler_noisevol_hq, 4*pos)*0.25;\n    rc += tex3D(sampler_noisevol_hq, 8*pos)*0.125;\n    rc += tex3D(sampler_noisevol_hq, 16*pos)*0.0625;\n    //rc = rc*0.556;    \n    rc = (rc*rc*rc)*2;\n    //rc -= GetBlur1(uv);   \n    rc *= q3*0.5;\n\n    float2 ruv = uv = 0.5 + (uv-0.5)*(1+(rc.x*.0));  \n    ret = tex2D(sampler_fc_main, float2(ruv.x, ruv.y)).xyz;\n    \n    float3 noise2 = tex2D(sampler_noise_lq, uv_orig*texsize.xy*texsize_noise_lq.zw+rand_frame.xy);\n    noise2 += lerp(rc*2, 2, rad);\n    \n    ret = ret+0.5*lum(cross((1-ret),(noise2)))*float3(0.6,0.5,0.4);\n    ret -= lerp(0.0,0.1,rad);    \n\n    ret +=0.1*tex3d(sampler_noisevol_hq, (p+time*0.1)*0.7)*mask;\n\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((polar.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; \nif(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z -= (noise9).y*.5; \nif(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; \n}","comp_hlsl":"shader_body\n{\n    float rad_lq = rad * length(texsize.xy)*0.5;\n    float ang_lq = ang;\n    float2 uv_temp1 = (uv - 0.5) * texsize.xy;\n    float rad_hq = length(uv_temp1);\n    float ang_hq = atan2(-uv_temp1.y, uv_temp1.x);\n\n    float2 uv2 = (uv - 0.5);\n    float rad2 = rad_lq*0.8;\n    float ang2 = ang_lq * M_INV_PI_2 + rad_lq*0.000 + time*0.00;\n\n\n        // FIN TYPE\n        float fins = 6;\n        ang2 = frac(ang2*fins)/fins;\n              // ENABLE THIS TO MAKE THE FINS ALTERNATE: (seamless!)\n              ang2 = abs(ang2 - 0.5/fins);\n\n\n    ang2 *= M_PI_2;\n    uv = 0.5 + rad2*float2(cos(ang2),sin(ang2))*texsize.zw;\n\n    ret = 1.4*pow(saturate(GetBlur1(uv))*((tex2D(sampler_pc_main,uv)-GetBlur3(uv))),0.5); //invert\n}"}