{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.088,"wave_scale":15,"wave_smoothing":0,"modwavealphastart":0.9,"modwavealphaend":1.3,"zoomexp":0.22705,"fshader":1,"zoom":1.01,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":23.52,"mv_y":17.832,"mv_dx":0.006,"mv_dy":0.04,"mv_l":0,"mv_r":0.83,"mv_g":0.59,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":21,"rad":0.03333,"r":0,"g2":0,"border_a":1},"init_eqs_str":"","frame_eqs_str":"a.x=.01*Math.floor(rand(100));a.y=.01*Math.floor(rand(100));a.a=.00001<Math.abs(above(mod(a.frame,0),0))?0:1;a.a2=.00001<Math.abs(above(mod(a.frame,0),0))?0:1;a.border_a=0;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01;\ny = int(rand(100))*.01;\n\na = if(above(frame%0,0),0,1);\na2 = if(above(frame%0,0),0,1);\nborder_a = 0;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.wave_r+=.6*Math.sin(2.5*a.bass)+.4*Math.sin(.7*a.time);a.wave_b+=.6*Math.sin(2.5*a.treb)+.4*Math.sin(.89*a.time);a.wave_g+=.6*Math.sin(2.5*a.mid)+.4*Math.sin(.74*a.time);a.q1=a.rot+.005*Math.sin(.5*a.time);","pixel_eqs_str":"a.rot=2*a.q1*a.rad*pow(bitand(0,.1*(4+2*Math.sin(20*a.rad+a.time))),6);","init_eqs_eel":"","frame_eqs_eel":"wave_r=wave_r+(0.6*sin(bass*2.500)+0.4*sin(time*0.70));\nwave_b=wave_b+(0.6*sin(treb*2.500)+0.4*sin(time*0.89));\nwave_g=wave_g+(0.6*sin(mid*2.500)+0.4*sin(time*0.74));\nq1=rot+0.005*sin(time*0.5);","pixel_eqs_eel":"rot=q1*2*rad*pow(0&(4+2*sin(rad*20+time))*.1,6);","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 2.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_5 * texsize.zw) * 4.0))).x;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.y;\n  tmpvar_6.y = tmpvar_4.y;\n  ret_1.y = texture (sampler_fc_main, (uv + ((tmpvar_6 * texsize.zw) * 4.0))).y;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.z;\n  tmpvar_7.y = tmpvar_4.z;\n  ret_1.z = texture (sampler_fc_main, (uv + ((tmpvar_7 * texsize.zw) * 4.0))).z;\n  ret_1 = (ret_1 - ((\n    (ret_1.yzx + ret_1.zxy)\n   * 0.16) + 0.001));\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)\n  ).xyz - 0.5) * 0.04));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_1;\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec2 tmpvar_3;\n  vec2 tmpvar_4;\n  tmpvar_4.x = ((2.0 * (\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\n   + bias1))).y;\n  tmpvar_4.y = ((2.0 * (\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\n   + bias1))).y;\n  tmpvar_3 = (0.5 * tmpvar_4);\n  vec2 tmpvar_5;\n  vec2 domain_6;\n  domain_6 = (uv + (tmpvar_3 * tmpvar_2));\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((2.0 * (\n    (texture (sampler_blur1, (domain_6 + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (domain_6 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\n   + bias1))).x;\n  tmpvar_7.y = ((2.0 * (\n    (texture (sampler_blur1, (domain_6 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (domain_6 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\n   + bias1))).x;\n  tmpvar_5 = (0.5 * tmpvar_7);\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv - ((tmpvar_5 * tmpvar_2) * 8.0));\n  vec3 tmpvar_9;\n  tmpvar_9.z = 0.0;\n  tmpvar_9.xy = roam_sin.xy;\n  vec3 tmpvar_10;\n  tmpvar_10.z = 0.0;\n  tmpvar_10.xy = roam_cos.yx;\n  vec3 tmpvar_11;\n  tmpvar_11.z = 0.0;\n  tmpvar_11.x = dot (tmpvar_9, vec3(0.32, 0.49, 0.29));\n  tmpvar_11.y = dot (tmpvar_10, vec3(0.32, 0.49, 0.29));\n  ret_1 = (vec3(((0.7 + \n    (tmpvar_3.x + tmpvar_3.y)\n  ) * texture (sampler_main, (tmpvar_8 - \n    ((tmpvar_3 * texsize.zw) * 8.0)\n  )).y)) * (texture (sampler_noisevol_hq, (\n    (vec3(0.05, 0.05, 0.0) * (((uv.xyy + \n      (tmpvar_11 * 0.5)\n    ) * texsize.xyy) * texsize_noisevol_hq.zww))\n   + \n    (vec3(0.0, 0.0, 0.2) * time)\n  )) * 3.0).xyz);\n  vec3 tmpvar_12;\n  vec4 tmpvar_13;\n  tmpvar_13 = texture (sampler_main, uv);\n  tmpvar_12 = (mix ((tmpvar_13.xxx * \n    clamp ((1.0 - (tmpvar_13.y * 2.0)), 0.0, 1.0)\n  ), vec3(1.0, 1.0, 1.0), mix (ret_1, vec3(1.0, 1.4, 2.4), vec3(\n    (((texture (sampler_blur3, clamp (\n      (tmpvar_8 + ((tmpvar_3 * texsize.zw) * 8.0))\n    , 0.0, 1.0)).xyz * scale3) + bias3).y - (1.3 * texture (sampler_main, (tmpvar_8 - (\n      (tmpvar_3 * texsize.zw)\n     * 8.0))).y))\n  ))) * (vec3(1.0, 1.0, 1.0) - vec3(clamp (texture (sampler_main, \n    ((uv + ((tmpvar_3 * tmpvar_2) * 4.0)) - ((tmpvar_5 * tmpvar_2) * 16.0))\n  ).z, 0.0, 1.0))));\n  ret_1 = tmpvar_12;\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = tmpvar_12;\n  ret = tmpvar_14.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw * 2;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n\nret.x = tex2d(sampler_fc_main, uv + float2(dx.x,dy.x)*texsize.zw*4).x;\nret.y = tex2d(sampler_fc_main, uv + float2(dx.y,dy.y)*texsize.zw*4).y;\nret.z = tex2d(sampler_fc_main, uv + float2(dx.z,dy.z)*texsize.zw*4).z;\n\nret -= (ret.yzx + ret.zxy)*0.16 + 0.001;\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1.2 + rand_frame.xy;\nret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0.04;\n}","comp_hlsl":"float2 gradBlur1( float2 domain, float2 d, float3 filter){\n   float3 dx = ( 2*GetBlur1(domain + float2(1,0)*d) - 2*GetBlur1(domain-float2(1,0)*d) );\n   float3 dy = ( 2*GetBlur1(domain + float2(0,1)*d) - 2*GetBlur1(domain-float2(0,1)*d) );\n\n   return 0.5*float2(dx.x*filter.x + dx.y*filter.y + dx.z*filter.z,\n                     dy.x*filter.x + dy.y*filter.y + dy.z*filter.z)/(filter.x+filter.y+filter.z);\n}\n\nshader_body\n{\nfloat2 d = texsize.zw*4;\nfloat2 grady = gradBlur1(uv, d, float3(0,1,0));\nfloat2 gradx = gradBlur1(uv + grady*d, d, float3(1,0,0));\nfloat2 uv_green = uv-gradx*d*8;\nret = (0.7 + (grady.x+grady.y))*GetPixel(uv_green-grady*texsize.zw*8).y;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy+float3(lum(roam_sin.xy),\n                                           lum(roam_cos.yx),\n                                           0)*0.5\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.2 \n                     );\nret *= (noise2)*3; \nfloat3 c1 = lerp(0,float3(1,1,1),GetPixel(uv - gradx*d*0).x)*saturate(1-GetPixel(uv).y*2);\nret = lerp(ret,float3(1,1.4,2.4), (GetBlur3(saturate(uv_green + grady*texsize.zw*8)).y-1.3*GetPixel(uv_green-grady*texsize.zw*8).y));\nret =  lerp(c1,1,ret);\nret = lerp(ret,float3(0,0,0),saturate(1*GetPixel(uv+grady*d*4 - gradx*d*16).z));\n}"}