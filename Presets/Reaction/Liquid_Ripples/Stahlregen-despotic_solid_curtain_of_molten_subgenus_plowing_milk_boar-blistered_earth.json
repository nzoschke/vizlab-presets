{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":2,"wrap":0,"wave_a":0.327,"wave_scale":1.605,"wave_smoothing":0.6,"warpscale":2.853,"zoom":1.064,"warp":0,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.runtreb=0;a.q25=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.q5=0;a.vb=0;a.q9=0;a.pi23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.atime=0;a.q4=0;a.q16=0;a.q26=0;a.runbass=0;a.q19=0;a.q17=0;a.runmids=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.vvm=0;a.q32=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.vvt=0;a.q8=0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(Math.abs(a.bass-a.bass_att),2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(Math.abs(a.mid-a.mid_att),2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(Math.abs(a.treb-a.treb_att),2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.runbass+=a.vvb;a.runmids+=a.vvm;a.runtreb+=a.vvt;a.pi23=1.33333333333332*Math.asin(-1);\na.atime=1.85*(a.runtreb+a.runmids+a.runbass);a.q8=.4*(Math.sin(a.atime-0*a.pi23)+1);a.q9=.4*(Math.sin(a.atime-1*a.pi23)+1);a.q10=.4*(Math.sin(a.atime-2*a.pi23)+1);a.vb=.95*a.vb+(1-a.vb)*pow(Math.abs(a.bass-a.bass_att),2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(Math.abs(a.mid-a.mid_att),2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(Math.abs(a.treb-a.treb_att),2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,\nMath.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=100*(a.vvt+a.vvm+a.vvb);a.q2=100*(a.vvt+a.vvm+a.vvb);a.q3=100*(a.vvt+a.vvm+a.vvb);a.q4=100*(a.vvt+a.vvm+a.vvb);a.q5=100*(a.vvt+a.vvm+a.vvb);a.q6=100*(a.vvt+a.vvm+a.vvb);a.q4=100*(a.vvt+a.vvm+a.vvb);a.q5=100*(a.vvt+a.vvm+a.vvb);a.q6=100*(a.vvt+a.vvm+a.vvb);a.q7=100*(a.vvt+a.vvm+a.vvb);a.q11=100*(a.vvt+a.vvm+a.vvb);a.q12=100*(a.vvt+a.vvm+a.vvb);a.q13=100*(a.vvt+a.vvm+a.vvb);a.q14=100*(a.vvt+a.vvm+a.vvb);a.q15=100*(a.vvt+a.vvm+a.vvb);a.q16=\n100*(a.vvt+a.vvm+a.vvb);a.q17=100*(a.vvt+a.vvm+a.vvb);a.q18=100*(a.vvt+a.vvm+a.vvb);a.q19=100*(a.vvt+a.vvm+a.vvb);a.q20=100*(a.vvt+a.vvm+a.vvb);a.q21=100*(a.vvt+a.vvm+a.vvb);a.q22=100*(a.vvt+a.vvm+a.vvb);a.q23=100*(a.vvt+a.vvm+a.vvb);a.q24=100*(a.vvt+a.vvm+a.vvb);a.q25=100*(a.vvt+a.vvm+a.vvb);a.q26=100*(a.vvt+a.vvm+a.vvb);a.q27=100*(a.vvt+a.vvm+a.vvb);a.q28=100*(a.vvt+a.vvm+a.vvb);a.q29=100*(a.vvt+a.vvm+a.vvb);a.q30=100*(a.vvt+a.vvm+a.vvb);a.q31=100*(a.vvt+a.vvm+a.vvb);a.q32=100*(a.vvt+a.vvm+a.vvb);\na.wave_r+=.4*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.4*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.wave_b+=.4*(.6*Math.sin(.91*a.time)+.4*Math.sin(.92*a.time));a.zoom+=.013*(.6*Math.sin(.339*a.time)+.4*Math.sin(.276*a.time));a.rot+=.04*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));","pixel_eqs_str":"a.zoom=a.zoom+(2*a.x-1)*(.08+.15*Math.sin(.321*a.time))+(2*a.y-1)*(.08+.15*Math.cos(.321*a.time));a.sx-=.1*(a.zoom-1);a.sy-=.1*(a.zoom-1);","init_eqs_eel":"","frame_eqs_eel":"//martin no religion / my omniversal absence for changing the background light\nvb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nrunbass=runbass+vvb;\nrunmids=runmids+vvm ;\nruntreb=runtreb+vvt;\npi23=4*asin(-1)*.33333333333333;\natime=(runtreb+runmids+runbass)*1.85;\nq8= (sin(atime-0*pi23)+1)*.4;\nq9= (sin(atime-1*pi23)+1)*.4;\nq10=(sin(atime-2*pi23)+1)*.4;\n\nvb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = (vvt+vvm+vvb)*100;\nq2 = (vvt+vvm+vvb)*100;\nq3 = (vvt+vvm+vvb)*100;\nq4 =(vvt+vvm+vvb)*100;\nq5 =(vvt+vvm+vvb)*100;\nq6 =(vvt+vvm+vvb)*100;\nq4 =(vvt+vvm+vvb)*100;\nq5 =(vvt+vvm+vvb)*100;\nq6 =(vvt+vvm+vvb)*100;\nq7 =(vvt+vvm+vvb)*100;\nq11=(vvt+vvm+vvb)*100;\nq12=(vvt+vvm+vvb)*100;\nq13=(vvt+vvm+vvb)*100;\nq14=(vvt+vvm+vvb)*100;\nq15=(vvt+vvm+vvb)*100;\nq16=(vvt+vvm+vvb)*100;\nq17=(vvt+vvm+vvb)*100;\nq18=(vvt+vvm+vvb)*100;\nq19=(vvt+vvm+vvb)*100;\nq20=(vvt+vvm+vvb)*100;\nq21=(vvt+vvm+vvb)*100;\nq22=(vvt+vvm+vvb)*100;\nq23=(vvt+vvm+vvb)*100;\nq24=(vvt+vvm+vvb)*100;\nq25=(vvt+vvm+vvb)*100;\nq26=(vvt+vvm+vvb)*100;\nq27=(vvt+vvm+vvb)*100;\nq28=(vvt+vvm+vvb)*100;\nq29=(vvt+vvm+vvb)*100;\nq30=(vvt+vvm+vvb)*100;\nq31=(vvt+vvm+vvb)*100;\nq32=(vvt+vvm+vvb)*100;\n\nwave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\nzoom = zoom + 0.013*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );","pixel_eqs_eel":"zoom = zoom + (x*2-1)*(0.08+0.15*sin(time*0.321)) + (y*2-1)*(0.08+0.15*cos(time*0.321));\nsx=sx-(zoom-1)*0.1;\nsy=sy-(zoom-1)*0.1;","warp":"vec2 xlat_mutabled;\nvec2 xlat_mutabled_uv;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)) - 0.5).xyz;\n  xlat_mutabled = (texsize.zw * 4.0);\n  xlat_mutabledx = (((2.0 * \n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz * scale1) + bias1)\n  )) * 0.5);\n  xlat_mutabledy = (((2.0 * \n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec2 tmpvar_3;\n  tmpvar_3.x = xlat_mutabledx.x;\n  tmpvar_3.y = xlat_mutabledy.x;\n  xlat_mutabled_uv = (uv_orig + ((tmpvar_3 * texsize.zw) * 4.0));\n  ret_1.x = texture (sampler_main, xlat_mutabled_uv).x;\n  ret_1.x = (ret_1.x + ((\n    ((ret_1.x - ((texture (sampler_blur1, xlat_mutabled_uv).xyz * scale1) + bias1).x) * 0.04)\n   - 0.006) + (tmpvar_2 * 0.01)).x);\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.y;\n  tmpvar_4.y = xlat_mutabledy.y;\n  vec2 tmpvar_5;\n  tmpvar_5.x = xlat_mutabledx.x;\n  tmpvar_5.y = xlat_mutabledy.x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - ((\n    (vec2(0.0, -1.2) + (tmpvar_4 * 8.0))\n   + \n    (tmpvar_5 * 4.0)\n  ) * texsize.zw));\n  ret_1.y = (max (texture (sampler_main, tmpvar_6).x, (texture (sampler_main, tmpvar_6).y - 0.0012)) + (tmpvar_2 * 0.08)).x;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 2.0);\n  vec3 tmpvar_2;\n  tmpvar_2 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = tmpvar_3.z;\n  tmpvar_4.y = -(tmpvar_2.z);\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + ((tmpvar_4 * texsize.zw) * 64.0));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.z;\n  tmpvar_6.y = -(tmpvar_2.z);\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv - ((tmpvar_6 * texsize.zw) * 32.0));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (mix (mix (\n    (mix (mix (vec3(0.2, 0.2, 0.0), vec3(0.6, 0.6, 0.0), vec3((\n      ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\n    .y * 8.0))), vec3(1.0, 1.0, 1.0), vec3(((\n      (texture (sampler_blur1, tmpvar_5).xyz * scale1)\n     + bias1).y * 6.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_5).y * 2.0))))\n  , vec3(0.0, 1.0, 0.0), vec3(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).z * 1.2)\n  )), vec3(1.4, 0.0, 0.0), vec3((\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\n  .x * 2.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_7).x * 2.0))));\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"float2 dither_uv;\nfloat3 rand;\nfloat2 d, d_uv;\nfloat3 dx, dy;\n\nshader_body\n{\n\n   dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1 + rand_frame.xy;\n   rand = tex2D(sampler_noise_lq, dither_uv)-0.5;\n\n   d = texsize.zw*4;\n   d_uv = uv_orig + rand*texsize.zw*0;\n   dx = (2*GetBlur1(d_uv + float2(1,0)*d) - 2*GetBlur1(d_uv - float2(1,0)*d))*0.5;\n   dy = (2*GetBlur1(d_uv + float2(0,1)*d) - 2*GetBlur1(d_uv - float2(0,1)*d))*0.5;\n   d_uv += float2(dx.x,dy.x)*texsize.zw*4;\n\n\nret.x = GetPixel(d_uv).x;\nret.x += -(GetBlur1(d_uv).x-ret.x)*0.04 - 0.006 + rand*0.01;\n//ret.x = 0;\n\nfloat2 uv_y = uv-(float2(0,-1.2) + float2(dx.y,dy.y)*8+float2(dx.x,dy.x)*4)*texsize.zw;\nret.y = max(GetPixel(uv_y).x, GetPixel(uv_y).y-0.0012) + rand*0.08;\n}","comp_hlsl":"sampler sampler_manyfish;\nshader_body\n{\n    float2 d = texsize.zw*2;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\n    float2 uv_dz = uv + float2(dy.z,-dx.z)*texsize.zw*64;\n    float2 uv_dy = uv - float2(dy.z,-dx.z)*texsize.zw*32;\n\nret = GetPixel(uv).y*0.2;\nret = lerp(float3(0.2,0.2,0),float3(0.6,0.6,0),GetBlur3(uv_dz).y*8); \nret = lerp(ret,float3(1,1,1),GetBlur1(uv_dz).y*6); \nret = lerp(ret,float3(0,0,0),GetPixel(uv_dz).y*2); \n\nret = lerp(ret,float3(0,1,0),GetBlur2(uv).z*1.2);\n//ret = lerp(ret,float3(-.02,-4,2),GetPixel(uv).z);\n\nret = lerp(ret,float3(1.4,0,0),GetBlur1(uv_dy).x*2);\nret = lerp(ret,0,GetPixel(uv_dy).x*2);\n\n}\n"}