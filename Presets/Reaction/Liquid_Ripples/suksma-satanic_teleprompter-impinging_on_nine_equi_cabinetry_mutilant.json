{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"it = it + 1;\n\na = equal(it%20,0);\na = 1;","point_eqs_str":"x = rand(101)*.01;\ny = rand(101)*.01;","init_eqs_eel":"","frame_eqs_eel":"it = it + 1;\n\na = equal(it%20,0);\na = 1;","point_eqs_eel":"x = rand(101)*.01;\ny = rand(101)*.01;"},{"baseVals":{"enabled":1,"sep":51,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_str":"a.sw=0;a.t1=0;a.bx=0;a.dt=0;a.it=0;a.by=0;a.ax=0;a.ay=0;a.mod=0;a.tm=0;a.t2=0;a.sp=0;","frame_eqs_str":"a.tm=.01*rand(101)*6.24;a.dt=.01*rand(101);a.t1=.5+.5*Math.sin(a.tm)*a.dt;a.t2=.5+.5*Math.cos(a.tm)*a.dt;a.r=.5+.5*Math.sin(1.132*a.time);a.g=.5+.5*Math.sin(1.121*a.time);a.b=.5+.5*Math.sin(1.187*a.time);","point_eqs_str":"a.sp=Math.floor(4*a.sample);a.sw=equal(mod(a.it,2),0);a.it=.00001<Math.abs(equal(a.sample,0))?0:a.it+1;a.mod=a.bass;a.ax=a.t1+Math.sin(6.28*a.sample)*a.mod*.1;a.ay=a.t2+Math.cos(6.28*a.sample)*a.mod*.1;a.bx=a.t1+Math.sin(6.28*a.sample)*a.mod*.005;a.by=a.t2+Math.cos(6.28*a.sample)*a.mod*.005;a.x=.00001<Math.abs(a.sw)?a.bx:a.ax;a.y=.00001<Math.abs(a.sw)?a.by:a.ay;a.a=.00001<Math.abs(a.sw)?.1*equal(rand(7),0):0;a.a=.2*a.sw;","init_eqs_eel":"","frame_eqs_eel":"tm = rand(101)*.01*6.24;\ndt = rand(101)*.01;\n\n\nt1 = .5 + .5*sin(tm)*dt;\nt2 = .5 + .5*cos(tm)*dt;\n\nr = .5 + .5*sin(time*1.132);\ng = .5 + .5*sin(time*1.121);\nb = .5 + .5*sin(time*1.187);","point_eqs_eel":"sp = int(sample*4);\nsw = equal(it%2,0);\nit = if(equal(sample,0),0,it + 1);\n\nmod = bass;\n\nax = t1 + sin(sample*6.28)*mod*.1;\nay = t2 + cos(sample*6.28)*mod*.1;\nbx = t1 + sin(sample*6.28)*mod*.005;\nby = t2 + cos(sample*6.28)*mod*.005;\n\nx = if(sw,bx,ax);\ny = if(sw,by,ay);\n\na = if(sw,equal(rand(7),0)*.1,0);\n\na = sw*.2;"},{"baseVals":{"enabled":1,"sep":51,"thick":1,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_str":"a.sw=0;a.t1=0;a.bx=0;a.dt=0;a.it=0;a.by=0;a.ax=0;a.ay=0;a.mod=0;a.tm=0;a.t2=0;a.sp=0;","frame_eqs_str":"a.tm=.01*rand(101)*6.24;a.dt=.01*rand(101);a.t1=.5+.5*Math.sin(a.tm)*a.dt;a.t2=.5+.5*Math.cos(a.tm)*a.dt;a.r=.5+.5*Math.sin(1.132*a.time);a.g=.5+.5*Math.sin(1.121*a.time);a.b=.5+.5*Math.sin(1.187*a.time);","point_eqs_str":"a.sp=Math.floor(4*a.sample);a.sw=equal(mod(a.it,2),0);a.it=.00001<Math.abs(equal(a.sample,0))?0:a.it+1;a.mod=a.treb;a.ax=a.t1+Math.sin(6.28*a.sample)*a.mod*.1;a.ay=a.t2+Math.cos(6.28*a.sample)*a.mod*.1;a.bx=a.t1+Math.sin(6.28*a.sample)*a.mod*.005;a.by=a.t2+Math.cos(6.28*a.sample)*a.mod*.005;a.x=.00001<Math.abs(a.sw)?a.bx:a.ax;a.y=.00001<Math.abs(a.sw)?a.by:a.ay;a.a=.00001<Math.abs(a.sw)?.1*equal(rand(7),0):0;a.a=.2*a.sw;","init_eqs_eel":"","frame_eqs_eel":"tm = rand(101)*.01*6.24;\ndt = rand(101)*.01;\n\n\nt1 = .5 + .5*sin(tm)*dt;\nt2 = .5 + .5*cos(tm)*dt;\n\nr = .5 + .5*sin(time*1.132);\ng = .5 + .5*sin(time*1.121);\nb = .5 + .5*sin(time*1.187);","point_eqs_eel":"sp = int(sample*4);\nsw = equal(it%2,0);\nit = if(equal(sample,0),0,it + 1);\n\nmod = treb;\n\nax = t1 + sin(sample*6.28)*mod*.1;\nay = t2 + cos(sample*6.28)*mod*.1;\nbx = t1 + sin(sample*6.28)*mod*.005;\nby = t2 + cos(sample*6.28)*mod*.005;\n\nx = if(sw,bx,ax);\ny = if(sw,by,ay);\n\na = if(sw,equal(rand(7),0)*.1,0);\n\na = sw*.2;"},{"baseVals":{"enabled":1,"sep":51,"thick":1,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_str":"a.sw=0;a.t1=0;a.bx=0;a.dt=0;a.it=0;a.by=0;a.ax=0;a.ay=0;a.tm=0;a.t2=0;a.sp=0;","frame_eqs_str":"a.tm=.01*rand(101)*6.24;a.dt=.01*rand(101);a.t1=.5+.5*Math.sin(a.tm)*a.dt;a.t2=.5+.5*Math.cos(a.tm)*a.dt;a.r=.5+.5*Math.sin(1.132*a.time);a.g=.5+.5*Math.sin(1.121*a.time);a.b=.5+.5*Math.sin(1.187*a.time);","point_eqs_str":"a.sp=Math.floor(4*a.sample);a.sw=equal(mod(a.it,2),0);a.it=.00001<Math.abs(equal(a.sample,0))?0:a.it+1;a.ax=a.t1+Math.sin(6.28*a.sample)*a.mid*.1;a.ay=a.t2+Math.cos(6.28*a.sample)*a.mid*.1;a.bx=a.t1+Math.sin(6.28*a.sample)*a.mid*.005;a.by=a.t2+Math.cos(6.28*a.sample)*a.mid*.005;a.x=.00001<Math.abs(a.sw)?a.bx:a.ax;a.y=.00001<Math.abs(a.sw)?a.by:a.ay;a.a=.00001<Math.abs(a.sw)?.1*equal(rand(7),0):0;a.a=.2*a.sw;","init_eqs_eel":"","frame_eqs_eel":"tm = rand(101)*.01*6.24;\ndt = rand(101)*.01;\n\nt1 = .5 + .5*sin(tm)*dt;\nt2 = .5 + .5*cos(tm)*dt;\n\nr = .5 + .5*sin(time*1.132);\ng = .5 + .5*sin(time*1.121);\nb = .5 + .5*sin(time*1.187);","point_eqs_eel":"sp = int(sample*4);\nsw = equal(it%2,0);\nit = if(equal(sample,0),0,it + 1);\n\nax = t1 + sin(sample*6.28)*mid*.1;\nay = t2 + cos(sample*6.28)*mid*.1;\nbx = t1 + sin(sample*6.28)*mid*.005;\nby = t2 + cos(sample*6.28)*mid*.005;\n\nx = if(sw,bx,ax);\ny = if(sw,by,ay);\n\na = if(sw,equal(rand(7),0)*.1,0);\n\na = sw*.2"}],"init_eqs_str":"a.lbbtime=0;a.mq29=0;a.cthr=0;a.mq1=0;a.bbtime=0;a.rs=0;a.q25=0;a.beatb=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q6=0;a.avgbeatrate=0;a.q1=0;a.mq31=0;a.q5=0;a.fb=0;a.mq21=0;a.mq24=0;a.drs=0;a.fbr=0;a.fbc=0;a.chng=0;a.mq28=0;a.mq23=0;a.beatrate=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.atime=0;a.worp=0;a.q4=0;a.lbass=0;a.faketime=0;a.q26=0;a.fakebeatb=0;a.avgbr=0;a.avgfbr=0;a.mq27=0;a.rawbeatb=0;a.mq25=0;a.mq22=0;a.db=0;a.vol=0;a.mq26=0;a.bc=0;a.q2=0;a.q27=0;a.maxdb=0;a.q3=0;a.lftime=\n0;a.q7=0;a.q28=0;a.avgdb=0;a.beatrate=1;a.avgbeatrate=1;a.bbtime=1;a.lbbtime=1;a.avgdb=1;a.fakebeatcount=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.db=a.bass-\na.lbass;a.lbass=a.bass;a.vol=1+a.bass+a.mid+a.treb;a.rs=above(Math.abs(a.db),a.maxdb);a.drs=1-a.rs;a.beatrate=1*a.rs+a.beatrate*a.drs;a.avgbeatrate=1*a.rs+a.avgbeatrate*a.drs;a.bbtime=1*a.rs+a.bbtime*a.drs;a.lbbtime=1*a.rs+a.lbbtime*a.drs;a.avgdb=1*a.rs+a.avgdb*a.drs;a.fbc=a.fbc*a.drs+1*a.rs;a.bc=a.bc*a.drs+1*a.rs;a.faketime=1*a.rs+a.faketime*a.drs;a.lftime=1*a.rs+a.lftime*a.drs;a.avgdb=.999*a.avgdb+.001*Math.abs(a.db);a.rawbeatb=above(a.db*a.fakebeatb,1.3*a.avgdb);a.beatb=a.rawbeatb*above(a.time-\na.lbbtime,.1*a.avgbeatrate);a.maxdb=Math.max(.9999*a.maxdb,Math.abs(a.db));a.bbtime=a.time*a.beatb;a.beatrate=a.beatb*(a.bbtime-a.lbbtime)+(1-a.beatb)*a.beatrate;a.avgbeatrate=a.beatb*(.999*a.avgbeatrate+.001*a.beatrate)+(1-a.beatb)*a.avgbeatrate;a.lbbtime=a.time*a.beatb+(1-a.beatb)*a.lbbtime;a.faketime+=.005*a.avgbeatrate;a.fakebeatb=.5*Math.cos(a.faketime)+.5;a.fb=above(a.fakebeatb,.9999)*above(a.faketime-a.lftime,.5*a.avgfbr);a.fbr=(1-a.fb)*a.fbr+a.fb*(.99*a.fbr+.01*(a.faketime-a.lftime));a.avgfbr=\na.avgbr*(1-a.fb)+a.fb*(.99*a.avgfbr+.01*a.fbr);a.fbc+=a.fb;a.lftime=a.faketime*a.fb+(1-a.fb)*a.lftime;a.bc+=a.beatb;a.monitor=a.beatb;a.q1=a.beatb;a.q2=a.db;a.q3=a.fakebeatb;a.q4=a.avgbeatrate;a.q5=equal(mod(a.bc,4),0)*a.beatb;a.q6=equal(mod(a.bc,16),0)*a.beatb;a.q7=a.rawbeatb;a.decay=.99;a.warp=0;a.wrap=1;a.worp=0;a.dx=.005;","pixel_eqs_str":"","init_eqs_eel":"beatrate=1;\navgbeatrate=1;\nbbtime=1;\nlbbtime=1;\navgdb=1;\nfakebeatcount=0;","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\ndb=bass-lbass;\nlbass=bass;\nvol=1+bass+mid+treb;\n\nrs=above(abs(db),maxdb);\ndrs=1-rs;\n\nbeatrate=1*rs+beatrate*drs;\navgbeatrate=1*rs+avgbeatrate*drs;\nbbtime=1*rs+bbtime*drs;\nlbbtime=1*rs+lbbtime*drs;\navgdb=1*rs+avgdb*drs;\nfbc=fbc*drs+1*rs;\nbc=bc*drs+1*rs;\nfaketime=1*rs+faketime*drs;\nlftime=1*rs+lftime*drs;\n\n\navgdb=avgdb*.999+abs(db)*.001;\n\nrawbeatb=above(db*fakebeatb,avgdb*1.3);\nbeatb=rawbeatb*above(time-lbbtime,.1*avgbeatrate);\nmaxdb=max(maxdb*.9999,abs(db));\n\nbbtime=time*beatb;\n\nbeatrate=beatb*(bbtime-lbbtime)+(1-beatb)*beatrate;\navgbeatrate=beatb*(avgbeatrate*.999+beatrate*.001)+(1-beatb)*avgbeatrate;\n\n\nlbbtime=time*beatb+(1-beatb)*lbbtime;\n\n\nfaketime=faketime+avgbeatrate*.005;\n//faketime=0;\nfakebeatb=cos(faketime)*.5+.5;\nfb=above(fakebeatb,.9999)*above(faketime-lftime,.5*avgfbr);\nfbr=(1-fb)*fbr+fb*(fbr*.99+(faketime-lftime)*.01);\navgfbr=avgbr*(1-fb)+fb*(avgfbr*.99+fbr*.01);\n\nfbc=fbc+fb;\nlftime=faketime*fb+(1-fb)*lftime;\n\n\n\nbc=bc+beatb;\n\nmonitor=beatb;\nq1=beatb;//equal((fbc-1)%4,0)*fb;\nq2=db;\nq3=fakebeatb;\nq4=avgbeatrate;\nq5=equal(bc%4,0)*beatb;\nq6=equal(bc%16,0)*beatb;\nq7=rawbeatb;\n\ndecay=.99;\nwarp=0;\nwrap=1;\nworp=0;\n\ndx=.005;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 8.0));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.y;\n  tmpvar_7.y = tmpvar_4.y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 8.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.z;\n  tmpvar_9.y = tmpvar_4.z;\n  vec2 tmpvar_10;\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 8.0));\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\n  ).x * 0.02));\n  vec3 tmpvar_11;\n  tmpvar_11.x = tmpvar_8.y;\n  tmpvar_11.y = tmpvar_6.y;\n  tmpvar_11.z = tmpvar_8.x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_11) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_12.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_12.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_12.z * 0.5));\n  };\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\n  ).y * 0.02));\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\n  ).z * 0.02));\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.2) - 0.06));\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_1;\n  ret = tmpvar_13.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret2_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  uv2_3.y = uv.y;\n  uv2_3.x = (1.0 - uv.x);\n  uv2_3 = (0.5 + ((uv2_3 - 0.5) * 0.98));\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\n  vec2 tmpvar_5;\n  tmpvar_5 = (texsize.zw * 4.0);\n  vec3 tmpvar_6;\n  tmpvar_6 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_7;\n  tmpvar_7 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_8;\n  tmpvar_8.z = 0.0;\n  tmpvar_8.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_9;\n  vec3 tmpvar_10;\n  tmpvar_10 = (time * vec3(0.0, 0.0, 1.0));\n  tmpvar_9 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\n    ((uv_1.xyy + (tmpvar_8 * 0.5)) * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + (tmpvar_10 * 0.2)));\n  vec2 tmpvar_11;\n  tmpvar_11.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  tmpvar_11.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\n  uv_1 = (uv_1 - (tmpvar_11 * 0.04));\n  vec2 tmpvar_12;\n  tmpvar_12.x = dot (((\n    (texture (sampler_blur1, (uv2_3 + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv2_3 - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_12.y = dot (((\n    (texture (sampler_blur1, (uv2_3 + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv2_3 - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  uv2_3 = (uv2_3 - (tmpvar_12 * 0.04));\n  vec3 tmpvar_13;\n  tmpvar_13 = abs(((\n    (texture (sampler_main, uv2_3).xyz + ((texture (sampler_blur1, uv2_3).xyz * scale1) + bias1))\n   - \n    ((texture (sampler_blur2, uv2_3).xyz * scale2) + bias2)\n  ) - (\n    (texture (sampler_blur3, uv2_3).xyz * scale3)\n   + bias3)));\n  ret2_2 = tmpvar_13;\n  ret_4 = (abs((\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n  )) * (dot (tmpvar_9, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  vec3 tmpvar_14;\n  tmpvar_14.x = (uv2_3.x - uv_1.x);\n  tmpvar_14.y = (uv_1.y - uv2_3.y);\n  tmpvar_14.z = uv2_3.y;\n  vec4 tmpvar_15;\n  tmpvar_15 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_14) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + (tmpvar_10 * q31)));\n  if (((ret_4.x > (q26 * q13)) && (ret_4.x <= (q23 * q11)))) {\n    ret_4.z = (ret_4.z - (tmpvar_15.x * 0.5));\n  };\n  if (((ret_4.y > (q25 * q11)) && (ret_4.y <= (q22 * q12)))) {\n    ret_4.x = (ret_4.x - (tmpvar_15.y * 0.5));\n  };\n  if (((ret_4.z > (q24 * q12)) && (ret_4.z <= (q21 * q13)))) {\n    ret_4.y = (ret_4.y - (tmpvar_15.z * 0.5));\n  };\n  ret2_2 = (tmpvar_13 * (dot (tmpvar_9, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  ret2_2 = (0.5 - pow (ret2_2, vec3(0.5, 0.5, 0.5)));\n  ret_4 = (pow (ret_4, vec3(0.5, 0.5, 0.5)) - (0.3 - ret2_2));\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_4;\n  ret = tmpvar_16.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw * 4;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1.2 + rand_frame.xy;\n\n    float2 my_uv =  lerp(uv_orig,uv,1) ;\n    float2 uv_x= my_uv + float2(dx.x,dy.x)*texsize.zw  *8;\n    float2 uv_y= my_uv + float2(dx.y,dy.y)*texsize.zw  *8;\n    float2 uv_z= my_uv + float2(dx.z,dy.z)*texsize.zw  *8;\n    ret.x = GetPixel(uv_x).x - (GetPixel(uv_x) - GetBlur3(uv_x)).x  * 0.02;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((float3(uv_y.y,uv_x.y,uv_y.x)*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n    ret.y = GetPixel(uv_y).y - (GetPixel(uv_y) - GetBlur3(uv_y)).y  * 0.02;\n    ret.z = GetPixel(uv_z).z - (GetPixel(uv_z) - GetBlur3(uv_z)).z  * 0.02;\n\nret -= ret.yzx*0.2 - 0.06;\n\n}","comp_hlsl":"shader_body\n{\nfloat2 uv2 = uv;\nuv2.x=1-uv2.x;\nuv2 = .5+(uv2-.5)*.98;\nuv = 0.5 + (uv-0.5)*0.98;\n    float2 d = texsize.zw*4;\n    float2 d2= texsize.zw*4;\n\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dx2= ( GetBlur1(uv2+float2(1,0)*d2)-GetBlur1(uv2-float2(1,0)*d2) );\n\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n    float3 dy2 = ( GetBlur1(uv2+float2(0,1)*d2)-GetBlur1(uv2-float2(0,1)*d2) );\n\nfloat4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nfloat4 noise2= tex3D(sampler_noisevol_hq, ((uv2.xyy+float3(lum(dx2),lum(dy2),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nuv -= float2(lum(dx),lum(dy))*0.04;\nuv2-= float2(lum(dx2),lum(dy2))*0.04;\n\nret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));\nfloat3 ret2 = abs(GetPixel(uv2)+GetBlur1(uv2)-GetBlur2(uv2)-GetBlur3(uv2));\nret *= lum(noise)*3; \nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((float3(uv2.x-uv.x,uv.y-uv2.y,uv2.y)*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret2*= lum(noise)*3; \nret = pow(ret,0.5);\nret2= pow(ret2,0.5);\nret2=.5-ret2;\nret-=.3-ret2;\n}"}