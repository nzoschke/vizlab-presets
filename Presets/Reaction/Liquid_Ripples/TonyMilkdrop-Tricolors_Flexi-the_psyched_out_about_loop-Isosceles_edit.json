{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_thick":1,"wrap":0,"darken":1,"solarize":1,"wave_a":1,"wave_scale":0.05,"wave_smoothing":0,"wave_mystery":-0.3,"warpanimspeed":2.699,"warpscale":2.518,"zoomexp":13.66864,"zoom":1.00499,"warp":0.24952,"wave_r":0,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.q1=.0003*pow(1+1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,6);a.monitor=a.q1;a.wave_r+=.5*Math.sin(.565*a.time);a.wave_g+=.5*Math.sin(.615*a.time);a.wave_b+=.5*Math.sin(.665*a.time);","pixel_eqs_str":"a.zoom+=.025;","init_eqs_eel":"","frame_eqs_eel":"q1 = 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\nmonitor = q1;\nwave_r = wave_r + 0.5*sin(time*0.565);\nwave_g = wave_g + 0.5*sin(time*0.615);\nwave_b = wave_b + 0.5*sin(time*0.665);","pixel_eqs_eel":"zoom = zoom + 0.025;\n//rot = rot + 0.05*sin(fps*100)*q1;","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_2 = (((2.0 * \n    ((texture (sampler_blur1, (uv + tmpvar_3)).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv - tmpvar_3)).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec3 tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_4 = (((2.0 * \n    ((texture (sampler_blur1, (uv + tmpvar_5)).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv - tmpvar_5)).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_2.x;\n  tmpvar_6.y = tmpvar_4.x;\n  vec2 tmpvar_7;\n  tmpvar_7 = fract((uv + (\n    (tmpvar_6 * texsize.zw)\n   * 4.0)));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_2.y;\n  tmpvar_8.y = tmpvar_4.y;\n  vec2 tmpvar_9;\n  tmpvar_9 = fract((uv + (\n    (tmpvar_8 * texsize.zw)\n   * 4.0)));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_2.z;\n  tmpvar_10.y = tmpvar_4.z;\n  vec2 tmpvar_11;\n  tmpvar_11 = fract((uv + (\n    (tmpvar_10 * texsize.zw)\n   * 4.0)));\n  ret_1.x = (texture (sampler_main, tmpvar_7).x - ((\n    (2.0 * texture (sampler_main, tmpvar_7).xyz)\n   - \n    (2.0 * ((texture (sampler_blur3, tmpvar_7).xyz * scale3) + bias3))\n  ).x * 0.01));\n  ret_1.y = (texture (sampler_main, tmpvar_9).y - ((\n    (2.0 * texture (sampler_main, tmpvar_9).xyz)\n   - \n    (2.0 * ((texture (sampler_blur3, tmpvar_9).xyz * scale3) + bias3))\n  ).y * 0.01));\n  ret_1.z = (texture (sampler_main, tmpvar_11).z - ((\n    (2.0 * texture (sampler_main, tmpvar_11).xyz)\n   - \n    (2.0 * ((texture (sampler_blur3, tmpvar_11).xyz * scale3) + bias3))\n  ).z * 0.01));\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)\n  ).xyz - 0.5) * 0.008));\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.1) - 0.014));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_1;\n  ret = tmpvar_12.xyz;\n }","comp":"","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw;\n    float3 dx = ( 2*GetBlur1(uv + float2(1,0)*d) - 2*GetBlur1(uv-float2(1,0)*d) )*0.5;\n    float3 dy = ( 2*GetBlur1(uv + float2(0,1)*d) - 2*GetBlur1(uv-float2(0,1)*d) )*0.5;\n\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1.2 + rand_frame.xy;\n\n    float2 my_uv =  lerp(uv_orig,uv,1) ;\n    float2 uv_x= frac(my_uv + float2(dx.x,dy.x)*texsize.zw  *4);\n    float2 uv_y= frac(my_uv + float2(dx.y,dy.y)*texsize.zw  *4);\n    float2 uv_z= frac(my_uv + float2(dx.z,dy.z)*texsize.zw  *4);\n    ret.x = GetPixel(uv_x).x - (2*GetPixel(uv_x) - 2*GetBlur3(uv_x)).x  * 0.01;\n    ret.y = GetPixel(uv_y).y - (2*GetPixel(uv_y) - 2*GetBlur3(uv_y)).y  * 0.01;\n    ret.z = GetPixel(uv_z).z - (2*GetPixel(uv_z) - 2*GetBlur3(uv_z)).z  * 0.01;\n\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0.008;\nret -= ret.yzx*0.1 - 0.014;\n\n}","comp_hlsl":""}