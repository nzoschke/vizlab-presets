{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1.03,"wave_mode":7,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wave_a":0.625,"wave_scale":0.242,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"fshader":1,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"scaling":2.0231,"smoothing":0,"r":0},"init_eqs_str":"a.tt3=0;a.tt2=0;a.tt1=0;a.d=0;a.t2=0;a.t3=0;a.t4=0;a.cl=0;","frame_eqs_str":"","point_eqs_str":"a.tt3=.6*a.tt3+1*a.value1;a.tt2=.7*a.tt2+.2*a.tt3;a.tt1=.8*a.tt1+.1*a.tt2;a.d=.9*a.d+.2*a.tt1;a.y=.5+a.d*a.sample*(1-a.sample)*4;a.x=-.05+1.1*a.sample;","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\ntt2 = tt2*0.7 + tt3*0.2;\ntt1 = tt1*0.8 + tt2*0.1;\nd = d*0.9 + tt1*0.2;\n\ny = 0.5 + d*sample*(1-sample)*4;\nx =  -0.05 + sample*1.1;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.index2=0;a.q25=0;a.index=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q1=0;a.mq31=0;a.dec_med=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.rott=0;a.mq23=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q11=0;a.atime=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.mq27=0;a.mq25=0;a.mq22=0;a.beat=0;a.vol=0;a.p1=0;a.peak=0;a.mq26=0;a.q2=0;a.q27=0;a.p3=0;a.q3=0;a.t0=0;a.ds=0;a.q28=0;a.q30=0;a.q20=0;a.p4=0;a.step=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.dec_med=\npow(.7,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),2);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass_att+a.mid_att+a.treb_att;a.q27=\na.index+1;a.q28=a.index2;a.k1=a.is_beat*equal(mod(a.index,2),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.ds=Math.max(a.q26*a.q26-.5,0);a.step+=8*a.ds;a.p3=a.p3*a.dec_med+(1-a.dec_med)*a.step;a.q30=a.p3;a.p4=a.dec_med*a.p4+(1-a.dec_med)*a.q27;a.q31=a.p4;a.zoom=1;a.rot=-.001;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\ndec_med = pow (0.7, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att;\nq27 = index + 1;\nq28 = index2;\n\n\n\nk1 =  is_\nbeat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nds = max ((q26*q26-.5),0);\nstep = step + 8*ds;\n\np3 = p3*dec_med + (1-dec_med) * step;\nq30 = p3 ;\n\np4 = dec_med*p4 + (1-dec_med)*q27;\nq31 = p4;\n\nzoom = 1;\nrot = -0.001 ;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 my_uv_1;\n  float dy_2;\n  float dx_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_6;\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv - vec2(0.005, 0.0));\n  tmpvar_6 = (((\n    (texture (sampler_blur2, tmpvar_7).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2)).x * tmpvar_5.x);\n  dx_3 = tmpvar_6;\n  float tmpvar_9;\n  vec2 tmpvar_10;\n  tmpvar_10 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_11;\n  tmpvar_11 = (uv - vec2(0.0, 0.005));\n  tmpvar_9 = (((\n    (texture (sampler_blur2, tmpvar_10).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_11).xyz * scale2)\n   + bias2)).x * tmpvar_5.y);\n  dy_2 = tmpvar_9;\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_6;\n  tmpvar_12.y = tmpvar_9;\n  vec2 tmpvar_13;\n  tmpvar_13.x = (((\n    (texture (sampler_blur2, tmpvar_7).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2)).x * tmpvar_5.x);\n  tmpvar_13.y = (((\n    (texture (sampler_blur2, tmpvar_10).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_11).xyz * scale2)\n   + bias2)).x * tmpvar_5.y);\n  ret_4.x = texture (sampler_fw_main, ((uv - (tmpvar_12 * 0.01)) + (tmpvar_13 * 0.003))).x;\n  vec4 tmpvar_14;\n  tmpvar_14 = texture (sampler_blur3, uv);\n  ret_4.x = (ret_4.x + ((ret_4.x - \n    ((tmpvar_14.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_4.x = (ret_4.x + 0.004);\n  vec2 tmpvar_15;\n  tmpvar_15.x = tmpvar_9;\n  tmpvar_15.y = -(tmpvar_6);\n  my_uv_1 = (uv + ((tmpvar_15 * 0.05) * (1.2 - \n    ((tmpvar_14.xyz * scale3) + bias3)\n  .y)));\n  ret_4.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_16;\n  x_16 = (my_uv_1 - uv);\n  ret_4.z = (ret_4.z + ((\n    ((ret_4.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_16, x_16)))\n   * 180.0) / sqrt(\n    dot (tmpvar_5, tmpvar_5)\n  )));\n  vec4 tmpvar_17;\n  tmpvar_17 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * my_uv_1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_4.x > (q21 * q13)) && (ret_4.x <= (q24 * q11)))) {\n    ret_4.y = (ret_4.y + (tmpvar_17.x * 0.5));\n  };\n  if (((ret_4.y > (q22 * q11)) && (ret_4.y <= (q25 * q12)))) {\n    ret_4.z = (ret_4.z + (tmpvar_17.y * 0.5));\n  };\n  if (((ret_4.z > (q23 * q12)) && (ret_4.z <= (q26 * q13)))) {\n    ret_4.x = (ret_4.x + (tmpvar_17.z * 0.5));\n  };\n  ret_4.z = (ret_4.z * 0.8);\n  ret_4.z = (ret_4.z + 0.004);\n  vec2 tmpvar_18;\n  tmpvar_18.x = -(tmpvar_9);\n  tmpvar_18.y = tmpvar_6;\n  my_uv_1 = (tmpvar_18 * 0.045);\n  dx_3 = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_5.x);\n  dy_2 = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_5.y);\n  vec2 tmpvar_19;\n  tmpvar_19.x = dx_3;\n  tmpvar_19.y = dy_2;\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_19 * 0.03)));\n  ret_4.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_4.y = (ret_4.y + ((ret_4.y - \n    ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3)\n  .y) * 0.2));\n  vec4 tmpvar_20;\n  tmpvar_20.w = 0.0;\n  tmpvar_20.xyz = ret_4;\n  vec3 tmpvar_21;\n  tmpvar_21 = mix (tmpvar_20, texture (sampler_main, uv_orig), vec4(0.2, 0.2, 0.2, 0.2)).xyz;\n  ret_4 = tmpvar_21;\n  vec4 tmpvar_22;\n  tmpvar_22.w = 1.0;\n  tmpvar_22.xyz = tmpvar_21;\n  ret = tmpvar_22.xyz;\n }","comp":" shader_body { \n  vec2 uv1_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 3.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.x;\n  tmpvar_6.y = tmpvar_5.x;\n  uv1_1 = (uv + ((tmpvar_6 * texsize.zw) * 32.0));\n  ret_2 = (vec3(0.5, 0.0, 0.0) * texture (sampler_main, uv1_1).x);\n  ret_2.x = (ret_2.x + ((tmpvar_4.x - tmpvar_5.x) * 0.4));\n  ret_2 = (pow (ret_2.x, 0.8) * vec3(1.2, 0.15, 0.0));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.x;\n  tmpvar_7.y = tmpvar_5.x;\n  vec3 tmpvar_8;\n  tmpvar_8 = mix (ret_2, vec3(1.0, 1.0, 1.0), vec3(((\n    (texture (sampler_blur2, (uv - ((tmpvar_7 * texsize.zw) * 128.0))).xyz * scale2)\n   + bias2).z * 0.6)));\n  ret_2 = tmpvar_8;\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv1_1.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_8.x > (q26 * q13)) && (tmpvar_8.x <= (q23 * q11)))) {\n    ret_2.z = (tmpvar_8.z - (tmpvar_9.x * 0.5));\n  };\n  if (((tmpvar_8.y > (q25 * q11)) && (tmpvar_8.y <= (q22 * q12)))) {\n    ret_2.x = (tmpvar_8.x - (tmpvar_9.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\n    ret_2.y = (tmpvar_8.y - (tmpvar_9.z * 0.5));\n  };\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.y;\n  tmpvar_10.y = tmpvar_5.y;\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_4.x;\n  tmpvar_11.y = tmpvar_5.x;\n  vec3 tmpvar_12;\n  tmpvar_12 = mix (mix (ret_2, vec3(1.0, 1.1, 1.2), texture (sampler_main, uv1_1).zzz), vec3(0.2, 0.0, 0.1), vec3(((\n    (texture (sampler_blur1, ((uv - (\n      (tmpvar_10 * texsize.zw)\n     * 16.0)) - ((tmpvar_11 * texsize.zw) * 32.0))).xyz * scale1)\n   + bias1).y * 6.0)));\n  ret_2 = tmpvar_12;\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = tmpvar_12;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with\n    float1 d = 0.005;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float2 my_uv = uv - float2(dx,dy)*0.01 + float2(dxb,dyb)*0.003;\n\n\n\n    float2 v = 0.01;\n    ret.x = tex2D( sampler_fw_main, my_uv -floor(my_uv)*0).x;\n\n    \n    ret.x += (ret.x - GetBlur3(uv).x)*.1;\n    ret.x += 0.004;\n\n\n//--------------------------------\n\n    my_uv = uv + float2(dy,-dx)*0.05*(1.2-GetBlur3(uv).y);\n\n\n\n    v = 0.01;\n    ret.z = tex2D( sampler_fw_main, my_uv).z;\n    \n    ret.z += (ret.z - GetBlur1(uv).z)*length(my_uv-uv)*180/length(scale);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((my_uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n    ret.z *= 0.8;\n    ret.z += 0.004;\n\n\n\n//--------------------------------\n\n    d = 0.01;\n    my_uv = float2(-dy,dx)*0.045;\n\n    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;\n    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;\n    my_uv += uv - float2(dx,dy)*0.03;\n\n\n\n    v = 0.01;\n    ret.y =tex2D( sampler_fw_main, my_uv).y;\n\n    \n    ret.y += (ret.y - GetBlur3(my_uv).y)*0.2 + 0.0;\n    ret = lerp(ret, tex2D(sampler_main,uv_orig), 0.2); //motionblur\n\n//ret = 0;\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = uv;\nfloat2 d = texsize.zw*3;\nfloat3 dx = GetBlur1(uv1 + float2(1,0)*d) - GetBlur1(uv1 - float2(1,0)*d);\nfloat3 dy = GetBlur1(uv1 + float2(0,1)*d) - GetBlur1(uv1 - float2(0,1)*d);\nuv1 = uv+float2(dx.x,dy.x)*texsize.zw*32;\n     ret = GetPixel(uv1).x*float3(1,0,0)*0.5;\n\nret.x += (+dx.x - dy.x)*0.4;\nret = pow(ret.x,0.8)*float3(1.2,0.15,0);\nret = lerp(ret,float3(1,1,1),GetBlur2(uv - float2(dx.x,dy.x)*texsize.zw*128).z*0.6);\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv1.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret = lerp(ret,float3(1,1.1,1.2),GetPixel(uv1).z);\n\nret = lerp(ret,float3(0.2,0,0.1),GetBlur1(uv - float2(dx.y,dy.y)*texsize.zw*16 - float2(dx.x,dy.x)*texsize.zw*32 ).y*6);\n//ret = GetPixel(uv);\n}"}