{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.168,"wave_smoothing":0,"wave_mystery":-0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":1,"ob_a":1,"ib_size":0.26,"mv_x":32,"mv_y":24,"mv_l":0.5,"mv_r":0.3,"mv_g":0.5,"mv_b":0.4,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"y":0.13,"rad":1.50499,"tex_zoom":0.45951,"g":1,"a":0.1,"r2":1,"g2":0,"border_r":0.7,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":8,"rad":0.01348,"tex_zoom":0.49981,"r":0,"g":1,"b":1,"g2":0.3,"a2":1,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":24,"additive":1,"textured":1,"x":0.59,"y":0,"rad":0.44929,"ang":0.06283,"tex_ang":1.88496,"tex_zoom":0.17914,"r":0.6,"g":0.5,"b":0.7,"a":0.1,"r2":0.7,"g2":0.5,"b2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"additive":1,"textured":1,"x":0.76,"y":0.75,"rad":0.68636,"ang":0.43982,"tex_ang":0.50266,"tex_zoom":0.6159,"r":0.7,"g":0.7,"b":0.7,"a":0.15,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5+.3*cos(time/59);\ny = .5+.3 *sin(time/59);","init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/59);\ny = .5+.3 *sin(time/59);"}],"waves":[{"baseVals":{"samples":128,"sep":49,"usedots":1,"thick":1,"scaling":0.06708,"smoothing":0.82,"r":0,"b":0.5,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":100,"thick":1,"scaling":0.01,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.index4=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.movex=0;a.q1=0;a.dec_med=0;a.q5=0;a.index3=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.movez=0;a.beat=0;a.vol=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.p3=0;a.q3=0;a.t0=0;a.q28=0;a.q30=0;a.q20=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.94,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),2);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.monitor=a.index4;\na.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.vol=a.bass+a.mid+a.treb;a.q26=div(Math.max(a.peak,10),20);a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_slow*a.p3+(1-a.dec_slow)*a.p2;a.rott=div(3.14159265359*a.p3,4);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q27=8-a.index;a.q28=a.index2;a.movez+=div(.6,a.fps);a.q29=1*a.movez;a.movex+=div(.12,a.fps)*a.q1;a.q30=1*a.movex;a.q5=a.rott;a.zoom=\n1;","pixel_eqs_str":"a.rot=div(a.q22,4)-1;a.rot=0;a.zoom=1+.02*(1-a.rad);a.dy=.001;a.warp=.4*(1-a.rad);","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.94, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%2;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\nmonitor = index4;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nvol = bass + mid + treb;\nq26 = max (peak,10)/20;\n\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\np3 = dec_slow * p3+ (1-dec_slow)*p2;\n\nrott = p3 * 3.14159265359/4;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nq27 = 8-index;\nq28 = index2;\n\nmovez = movez + .02*30/fps;\nq29 = movez*1;\n\nmovex = movex + .004*30/fps*q1;\nq30 = movex*1;\n\n\nq5 = rott;\nzoom = 1.0;","pixel_eqs_eel":"rot = q22/4-1;\nrot = 0;\nzoom = 1 + .02 * (1-rad);\ndy = .001;\nwarp = .4 * (1-rad);","warp":" shader_body { \n  vec2 uv1_1;\n  vec3 ret_2;\n  ret_2.yz = (texture (sampler_main, uv).xyz - 0.08).yz;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.x;\n  tmpvar_6.y = tmpvar_5.x;\n  uv1_1 = (uv + (tmpvar_3 * (tmpvar_6 * 0.4)));\n  ret_2.x = texture (sampler_fc_main, uv1_1).x;\n  ret_2.x = (ret_2.x - ((\n    (((texture (sampler_blur1, uv1_1).xyz * scale1) + bias1).x - ret_2.x)\n   * 0.05) + 0.004));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.x;\n  tmpvar_7.y = tmpvar_5.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_4.z;\n  tmpvar_8.y = tmpvar_5.z;\n  ret_2.z = (max ((\n    sqrt(dot (tmpvar_7, tmpvar_7))\n   * 1.4), texture (sampler_main, (\n    mix (uv_orig, uv, vec2(-1.0, -1.0))\n   - \n    ((tmpvar_8 * texsize.zw) * 4.0)\n  )).z) - 0.004);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1 + rand_frame.xy;\n\nret = GetPixel(uv) - 0.08;\nfloat2 uv1 = uv;\nfloat2 d = texsize.zw*4;\nfloat3 dx = GetBlur1(uv1 + float2(1,0)*d) - GetBlur1(uv1 - float2(1,0)*d);\nfloat3 dy = GetBlur1(uv1 + float2(0,1)*d) - GetBlur1(uv1 - float2(0,1)*d);\nd *= float2(dx.x,dy.x)*0.4;\nuv1+=d;\n//uv1 = frac(uv1);\nret.x = tex2d(sampler_fc_main, uv1).x;\nret.x -=(GetBlur1(uv1).x-ret.x)*0.05 + 0.004;\n\nret.z = max(length(float2(dx.x,dy.x))*1.4,GetPixel(lerp(uv_orig,uv,-1) - float2(dx.z,dy.z)*texsize.zw*4).z) - 0.004;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n\n    //ret *= 1.5; //old gamma effect    \n}"}