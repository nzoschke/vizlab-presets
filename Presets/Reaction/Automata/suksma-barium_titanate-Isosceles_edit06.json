{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.968,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.1,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":6,"rad":0.01,"border_a":0},"init_eqs_str":"a.k1=0;a.ass=0;a.ass1=0;a.ass2=0;a.radd=0;a.poo1=0;a.poo2=0;a.poo=0;","frame_eqs_str":"a.r=1-div(.56*a.time*a.k1*a.k1*a.x,.5);a.b=1-div(.99*a.time*a.k1*a.k1*a.x,.5);a.g=1-div(.3*a.time*a.k1*a.k1*a.x,.5);a.r2=1-div(.56*a.time*a.k1*a.k1*a.x,.5);a.b2=1-div(.99*a.time*a.k1*a.k1*a.x,.5);a.g2=1-div(.3*a.time*a.k1*a.k1*a.x,.5);a.ass=Math.max(a.time+a.rad,1);a.ass1=Math.min(a.time+a.ass+a.rad,2);a.ass2=a.ass+a.ass1;a.k1=a.ass1;a.ang=Math.sin(2*a.bass);a.x=.5;a.y=.5;a.rad=a.radd;a.poo1=Math.max(a.bass+2*a.time,a.poo2);a.poo2=Math.max(a.bass-a.time,a.poo1);a.poo=.5*div(a.poo1+\na.poo2,10);a.sides=100;a.radd=Math.sin(.05*a.bass);","init_eqs_eel":"","frame_eqs_eel":"r = 1-(time*.56)*(k1*k1)*x/0.5;\nb = 1-(time*.99)*(k1*k1)*x/0.5;\ng = 1-(time*.30)*(k1*k1)*x/0.5;\nr2 = 1-(time*.56)*(k1*k1)*x/0.5;\nb2 = 1-(time*.99)*(k1*k1)*x/0.5;\ng2 = 1-(time*.30)*(k1*k1)*x/0.5;\n\nass = max(time+rad, 1);\nass1 = min(time+ass+rad, 2);\nass2 = ass + ass1;\nk1 = ass1;\n\nang = sin(2*bass);;\n\n\nx = ( .5);\ny = ( .5);\nrad = radd;\n\n\npoo1 = max(bass+(time*2), poo2);\npoo2 = max(bass-time, poo1);\npoo = (poo1+poo2)/10*.5;\nsides = 100;\n\n\n\nradd=sin(bass*0.05);\n"},{"baseVals":{"enabled":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.k1=0;a.bamx=0;a.boom=0;a.bom=0;a.poo1=0;a.poo2=0;a.poo=0;","frame_eqs_str":"a.r=1-div(.56*a.time*a.k1*a.k1*a.x,.5);a.b=1-div(.99*a.time*a.k1*a.k1*a.x,.5);a.g=1-div(.3*a.time*a.k1*a.k1*a.x,.5);a.r2=1-div(.56*a.time*a.k1*a.k1*a.x,.5);a.b2=1-div(.99*a.time*a.k1*a.k1*a.x,.5);a.g2=1-div(.3*a.time*a.k1*a.k1*a.x,.5);a.k1=1;a.sides=20;a.rad=.25;a.bamx=Math.sin(a.time-a.bass);a.boom=Math.sin(mod(a.bamx,a.boom)*a.bass*a.time);a.bom=2*rand(.1*(a.time-a.boom)*(a.time-a.bamx));a.x=.42*Math.sin(a.time)+.5;a.y=.42*Math.sin(div(a.time,2))+.5;a.poo1=Math.max(a.bass+\n2*a.time,a.poo2);a.poo2=Math.max(a.bass-a.time,a.poo1);a.poo=.5*div(a.poo1+a.poo2,10);","init_eqs_eel":"","frame_eqs_eel":"r = 1-(time*.56)*(k1*k1)*x/0.5;\nb = 1-(time*.99)*(k1*k1)*x/0.5;\ng = 1-(time*.30)*(k1*k1)*x/0.5;\nr2 = 1-(time*.56)*(k1*k1)*x/0.5;\nb2 = 1-(time*.99)*(k1*k1)*x/0.5;\ng2 = 1-(time*.30)*(k1*k1)*x/0.5;\n\nk1 = 1;;\n\nsides = 20;\n\nrad = 0.25;;\n\nbamx=sin(time-bass);\nboom=sin(((bamx%boom)*bass)*time);\nbom=(rand(0.1*(time-boom)*(time-bamx))*2);\n\nx = (sin(time)*0.420+0.5);\ny = (sin(time/2)*0.420+0.5);\n\npoo1 = max(bass+(time*2), poo2);\npoo2 = max(bass-time, poo1);\npoo = (poo1+poo2)/10*.5;"},{"baseVals":{"enabled":1,"border_a":0},"init_eqs_str":"a.k1=0;a.bamx=0;a.boom=0;a.bom=0;a.poo1=0;a.poo2=0;a.poo=0;","frame_eqs_str":"a.r=1-div(.56*a.time*a.k1*a.k1*a.x,.5);a.b=1-div(.99*a.time*a.k1*a.k1*a.x,.5);a.g=1-div(.3*a.time*a.k1*a.k1*a.x,.5);a.r2=1-div(.56*a.time*a.k1*a.k1*a.x,.5);a.b2=1-div(.99*a.time*a.k1*a.k1*a.x,.5);a.g2=1-div(.3*a.time*a.k1*a.k1*a.x,.5);a.k1=1;a.sides=20;a.rad=.25;a.bamx=Math.sin(a.time-a.bass);a.boom=Math.sin(mod(a.bamx,a.boom)*a.bass*a.time);a.bom=2*rand(.1*(a.time-a.boom)*(a.time-a.bamx));a.x=.42*Math.sin(div(a.time,2))+.5;a.y=.42*Math.sin(a.time)+.5;a.poo1=Math.max(a.bass+\n2*a.time,a.poo2);a.poo2=Math.max(a.bass-a.time,a.poo1);a.poo=.5*div(a.poo1+a.poo2,10);","init_eqs_eel":"","frame_eqs_eel":"r = 1-(time*.56)*(k1*k1)*x/0.5;\nb = 1-(time*.99)*(k1*k1)*x/0.5;\ng = 1-(time*.30)*(k1*k1)*x/0.5;\nr2 = 1-(time*.56)*(k1*k1)*x/0.5;\nb2 = 1-(time*.99)*(k1*k1)*x/0.5;\ng2 = 1-(time*.30)*(k1*k1)*x/0.5;\n\nk1 = 1;;\n\nsides = 20;\n\nrad = 0.25;;\n\nbamx=sin(time-bass);\nboom=sin(((bamx%boom)*bass)*time);\nbom=(rand(0.1*(time-boom)*(time-bamx))*2);\n\nx = (sin(time/2)*0.420+0.5);\ny = (sin(time)*0.420+0.5);\n\npoo1 = max(bass+(time*2), poo2);\npoo2 = max(bass-time, poo1);\npoo = (poo1+poo2)/10*.5;"},{"baseVals":{"textured":1,"rad":1.67089,"tex_ang":0.94248,"tex_zoom":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0.17,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"r = 1-(time*.56)*(k1*k1)*x/0.5;\nb = 1-(time*.99)*(k1*k1)*x/0.5;\ng = 1-(time*.30)*(k1*k1)*x/0.5;\n\n\nk1 = (x/y)* 0.5 + above(bass*time-rad, .420);\nk2 = (x*y)*sin(time*treb_thresh*rad*rad);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"r = 1-(time*.56)*(k1*k1)*x/0.5;\nb = 1-(time*.99)*(k1*k1)*x/0.5;\ng = 1-(time*.30)*(k1*k1)*x/0.5;\n\n\nk1 = (x/y)* 0.5 + above(bass*time-rad, .420);\nk2 = (x*y)*sin(time*treb_thresh*rad*rad);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.warp=0;a.zoom=1.001;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\nzoom = 1.001;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = ((texture (sampler_noise_lq, (rand_frame.xy + \n    ((uv * texsize_noise_lq.zw) * texsize.xy)\n  )) * 2.0) - 1.0);\n  ret_1 = (texture (sampler_pw_main, (uv + (\n    (tmpvar_2.zw * texsize.zw)\n   * 0.5))).xyz + ((0.59 - \n    (0.2 * rad)\n  ) * tmpvar_2.xyz));\n  vec3 tmpvar_3;\n  tmpvar_3 = clamp (((\n    (ret_1 - 0.5)\n   * 3.0) + 0.25), 0.0, 1.0);\n  ret_1.x = tmpvar_3.x;\n  ret_1.yz = tmpvar_3.xx;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv3_2;\n  vec3 col_3;\n  col_3 = vec3(0.0, 0.0, 0.0);\n  uv3_2 = (uv * 0.25);\n  for (int i_1 = 0; i_1 < 16; i_1++) {\n    uv3_2 = (uv3_2 + ((\n      float(i_1)\n     * vec2(0.25, 0.0)) - (\n      float((0.0 == (float(mod (float(i_1), 4.0)))))\n     * vec2(0.0, 0.25))));\n    col_3 = mix (col_3, vec3((float(i_1) / 16.0)), vec3(clamp ((\n      -(texture (sampler_main, uv3_2).y)\n     + texture (sampler_pw_main, \n      fract(uv3_2)\n    ).y), 0.0, 1.0)));\n  };\n  vec3 tmpvar_4;\n  tmpvar_4.z = 0.04;\n  vec2 tmpvar_5;\n  tmpvar_5 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_4.x = (texture (sampler_main, (uv + tmpvar_5)).xyz - texture (sampler_main, (uv - tmpvar_5)).xyz).x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_4.y = (texture (sampler_main, (uv + tmpvar_6)).xyz - texture (sampler_main, (uv - tmpvar_6)).xyz).x;\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.6;\n  tmpvar_7.xy = (uv - 0.5);\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_main, uv);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = mix (mix ((tmpvar_8.z * vec3(0.6, 0.2, 1.0)), vec3(1.0, 1.0, 1.0), (col_3 * \n    clamp ((1.0 - ((\n      (texture (sampler_blur1, uv).xyz * scale1)\n     + bias1).x * 2.0)), 0.0, 1.0)\n  )), vec3(1.1, 0.8, 0.5), vec3(((\n    (dot (normalize(tmpvar_4), tmpvar_7) * 0.5)\n   + 0.5) * tmpvar_8.x)));\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{\n    float4 N = tex2D(sampler_noise_lq, rand_frame.xy + uv*\n                             texsize_noise_lq.zw*texsize.xy )*2-1;\n    // sample previous frame\n    ret = tex2D( sampler_pw_main, uv + N.zw*texsize.zw*0.5 ).xyz;\n    ret += (0.59-0.2*rad)*N.xyz;\n\n\n    ret = saturate((ret-0.5)*3 + 0.25);\n    ret.yz = ret.x;\n}","comp_hlsl":"\nshader_body\n{\n\nfloat2 uv2 = uv*0.25;\nfloat3 col = 0;\nfloat2 uv3 = uv2;\nfor(int i = 0; i<16; i++){\n    uv3 += i*float2(0.25,0) - (0==(i)%4)*float2(0,0.25);\n    col = lerp(col,i/16.0,saturate(-GetPixel(uv3).y+tex2d(sampler_pw_main,frac(uv3)).y));\n\n}\nret = lerp(GetPixel(uv).z*float3(0.6,0.2,1),float3(1,1,1),col*saturate(1-GetBlur1(uv).x*2));\n    float gx = GetPixel(uv+float2(1,0)*texsize.zw) - GetPixel(uv-float2(1,0)*texsize.zw);\n    float gy = GetPixel(uv+float2(0,1)*texsize.zw) - GetPixel(uv-float2(0,1)*texsize.zw);\n    float3 g = normalize(float3(gx, gy, .04));\n\n    ret = lerp(ret,float3(1.1,0.8,0.5),(dot(g.xyz,float3(uv-0.5,0.6))*0.5+0.5)*GetPixel(uv).x);\n\n//ret = GetPixel(uv);\n}\n"}