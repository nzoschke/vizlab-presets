{"version":2,"baseVals":{"rating":5,"gammaadj":1.42,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.528,"wave_scale":5.278,"wave_smoothing":0.63,"wave_mystery":-0.28,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"sx":1.00183,"sy":1.00183,"wave_r":0.65,"wave_g":0.65,"wave_b":0.3,"ob_size":0.005,"ob_b":0.4,"ob_a":0.08,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":33.152,"mv_y":28.8,"mv_dx":0.006,"mv_l":2.5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"scaling":0.48454},"init_eqs_str":"a.ang=0;a.rad=0;","frame_eqs_str":"","point_eqs_str":"a.ang=50.256*a.sample+.2*a.time;a.rad=.1*Math.sin(6.282*a.sample+.2*a.time)+.2;a.rad+=.01*a.value1;a.x=.5+a.rad*Math.cos(a.ang)+.3*Math.sin(.211*a.time);a.y=.5+a.rad*Math.sin(a.ang)+.3*Math.sin(.205*a.time);a.r=.3*Math.sin(6.258*a.sample+.21*a.time)+.5;a.b=.4*Math.sin(6.258*a.sample+.315*a.time)+.5;a.a=Math.max(0,Math.sin(6.282*a.sample*(10*Math.sin(.2*a.time)+15)));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ang = sample*6.282*8+time*.2;\nrad = sin(sample*6.282+time*.2)*.1+.2;\nrad = rad+.01*value1;\nx = .5+rad*cos(ang)+sin(time*.211)*.3;\ny = .5+rad*sin(ang)+sin(time*.205)*.3;\nr = sin(sample*6.258+time*.21)*.3+.5;\nb = sin(sample*6.258+time*.315)*.4+.5;\n\na =max(0,sin(sample*6.282*(sin(time*.2)*10+15)));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tb=0;a.q25=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.cy_b=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.q5=0;a.vb=0;a.q9=0;a.tt=0;a.rot_b=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.q4=0;a.cy_c=0;a.q16=0;a.q26=0;a.tm=0;a.sect_a=0;a.sect_b=0;a.q19=0;a.q17=0;a.sect_c=0;a.q2=0;a.q27=0;a.q14=0;a.rot_c=0;a.rot_a=0;a.q3=0;a.cy_a=0;a.vvm=0;a.q32=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.vvt=0;a.q8=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=\n0;a.dcsp=0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(a.bass_att,2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(a.mid_att,2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(a.treb_att,2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=2*a.vvb;a.q2=2*a.vvm;a.q3=2*a.vvt;a.q4=a.q1+a.q2+a.q3;a.q5=a.q1+a.q2+a.q3;a.q6=a.q1+a.q2+a.q3;a.q7=a.q1+a.q2+a.q3;a.q8=a.q1+a.q2+\na.q3;a.q9=a.q1+a.q2+a.q3;a.q10=a.q1+a.q2+a.q3;a.q11=a.q1+a.q2+a.q3;a.q12=a.q1+a.q2+a.q3;a.q13=a.q1+a.q2+a.q3;a.q14=a.q1+a.q2+a.q3;a.q15=a.q1+a.q2+a.q3;a.q16=a.q1+a.q2+a.q3;a.q17=a.q1+a.q2+a.q3;a.q18=a.q1+a.q2+a.q3;a.q19=a.q1+a.q2+a.q3;a.q20=a.q1+a.q2+a.q3;a.q21=a.q1+a.q2+a.q3;a.q22=a.q1+a.q2+a.q3;a.q23=a.q1+a.q2+a.q3;a.q24=a.q1+a.q2+a.q3;a.q25=a.q1+a.q2+a.q3;a.q26=a.q1+a.q2+a.q3;a.q27=a.q1+a.q2+a.q3;a.q28=a.q1+a.q2+a.q3;a.q29=a.q1+a.q2+a.q3;a.q30=a.q1+a.q2+a.q3;a.q31=a.q1+a.q2+a.q3;a.q32=a.q1+a.q2+\na.q3;a.decay=.997;a.zoom=1;a.q1=.08;a.tb+=div(a.bass,65);a.rot_a=.01*Math.sin(a.tb);a.tm+=div(a.mid,65);a.rot_b=.01*Math.sin(a.tm);a.tt+=div(a.treb,65);a.rot_c=.01*Math.sin(a.tt);a.q2=a.rot_a;a.q3=a.rot_b;a.q4=a.rot_c;","pixel_eqs_str":"a.sx=1.015;a.sy=1.015;a.sect_a=.00001<Math.abs(below(a.x,.333))?1:0;a.sect_b=.00001<Math.abs(below(a.x,.666))?1:0;a.sect_b=.00001<Math.abs(above(a.x,.333))?a.sect_b:0;a.sect_c=.00001<Math.abs(above(a.x,.666))?1:0;a.cy_a=(Math.sin(div(a.time,4))+Math.sin(div(a.time,1.3)))*a.q1+.5;a.cy_b=(Math.sin(div(a.time,3))+Math.sin(div(a.time,1.1)))*a.q1+.5;a.cy_c=(Math.sin(div(a.time,2))+Math.sin(div(a.time,.7)))*a.q1+.5;a.cx=.166*a.sect_a+.5*a.sect_b+.833*a.sect_c;a.cy=a.sect_a*a.cy_a+\na.sect_b*a.cy_b+a.sect_c*a.cy_c;a.rot=a.sect_a*a.q2+a.sect_b*a.q3+a.sect_c*a.q4;","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\nvb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = vvb*2;//0.5 + vb - vvb;\nq2 = vvm*2;//0.5 + vm - vvm;\nq3 = vvt*2;//0.5 + vt - vvt;\nq4=(q1+q2+q3);\nq5=(q1+q2+q3);\nq6=(q1+q2+q3);\nq7=(q1+q2+q3);\nq8=(q1+q2+q3);\nq9=(q1+q2+q3);\nq10=(q1+q2+q3);\nq11=(q1+q2+q3);\nq12=(q1+q2+q3);\nq13=(q1+q2+q3);\nq14=(q1+q2+q3);\nq15=(q1+q2+q3);\nq16=(q1+q2+q3);\nq17=(q1+q2+q3);\nq18=(q1+q2+q3);\nq19=(q1+q2+q3);\nq20=(q1+q2+q3);\nq21=(q1+q2+q3);\nq22=(q1+q2+q3);\nq23=(q1+q2+q3);\nq24=(q1+q2+q3);\nq25=(q1+q2+q3);\nq26=(q1+q2+q3);\nq27=(q1+q2+q3);\nq28=(q1+q2+q3);\nq29=(q1+q2+q3);\nq30=(q1+q2+q3);\nq31=(q1+q2+q3);\nq32=(q1+q2+q3);\n\ndecay=0.997;\nzoom=1.000;\nq1=0.08;\n\ntb=tb+bass/65;\nrot_a=sin(tb)*0.01;\ntm=tm+mid/65;\nrot_b=sin(tm)*0.01;\ntt=tt+treb/65;\nrot_c=sin(tt)*0.01;\n\nq2=rot_a;\nq3=rot_b;\nq4=rot_c","pixel_eqs_eel":"sx=1.015;\nsy=1.015;\n\n\nsect_a=if ( below(x,0.333), 1, 0 );\nsect_b=if ( below(x,0.666), 1, 0 );\nsect_b=if ( above(x,0.333), sect_b, 0 );\nsect_c=if ( above(x,0.666), 1, 0 );\n\ncy_a=( sin(time/4)+sin(time/1.3) )*q1 + 0.5;\ncy_b=( sin(time/3)+sin(time/1.1) )*q1 + 0.5;\ncy_c=( sin(time/2)+sin(time/0.7) )*q1 + 0.5;\n\ncx=sect_a*0.166 + sect_b*0.5 + sect_c*0.833;\ncy=sect_a*cy_a + sect_b*cy_b + sect_c*cy_c;\n\n\nrot=sect_a*q2 + sect_b*q3 + sect_c*q4","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec3 tmpvar_2;\n  tmpvar_2.z = 0.0;\n  tmpvar_2.xy = abs((uv - uv_orig));\n  float tmpvar_3;\n  tmpvar_3 = ((dot (tmpvar_2, vec3(0.32, 0.49, 0.29)) * 0.6) + 0.003);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (uv.x - tmpvar_3);\n  tmpvar_4.y = uv.y;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (uv.x - tmpvar_3);\n  tmpvar_5.y = (uv.y + tmpvar_3);\n  vec2 tmpvar_6;\n  tmpvar_6.x = uv.x;\n  tmpvar_6.y = (uv.y - tmpvar_3);\n  vec2 tmpvar_7;\n  tmpvar_7.x = uv.x;\n  tmpvar_7.y = (uv.y + tmpvar_3);\n  vec2 tmpvar_8;\n  tmpvar_8.x = (uv.x + tmpvar_3);\n  tmpvar_8.y = (uv.y - tmpvar_3);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (uv.x + tmpvar_3);\n  tmpvar_9.y = uv.y;\n  vec3 tmpvar_10;\n  tmpvar_10 = clamp (max (max (\n    max (abs((tmpvar_1.xyz - texture (sampler_main, (uv - vec2(tmpvar_3))).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_4).xyz)))\n  , \n    max (abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_5).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_6).xyz)))\n  ), max (\n    max (max (abs((tmpvar_1.xyz - tmpvar_1.xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_7).xyz))), max (abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_8).xyz)), abs((tmpvar_1.xyz - texture (sampler_main, tmpvar_9).xyz))))\n  , \n    abs((tmpvar_1.xyz - texture (sampler_main, (uv + vec2(tmpvar_3))).xyz))\n  )), 0.0, 1.0);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ((tmpvar_10 + (texture (sampler_main, \n    (uv + (tmpvar_10.xy * 0.01))\n  ).xyz * 0.8)) / 1.4);\n  ret = tmpvar_11.xyz;\n }","comp":" shader_body { \n  vec2 moebius_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = q11;\n  tmpvar_3.y = q12;\n  vec2 tmpvar_4;\n  tmpvar_4.x = q17;\n  tmpvar_4.y = q18;\n  vec2 tmpvar_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - 0.5);\n  tmpvar_5 = (tmpvar_6 * aspect.xy);\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((tmpvar_5.x * q15) - (tmpvar_5.y * q16));\n  tmpvar_7.y = ((tmpvar_5.x * q16) - (tmpvar_5.y * q15));\n  vec2 tmpvar_8;\n  tmpvar_8 = (tmpvar_7 + tmpvar_4);\n  vec2 tmpvar_9;\n  tmpvar_9.x = ((q13 * tmpvar_8.x) + (q14 * tmpvar_8.y));\n  tmpvar_9.y = ((q14 * tmpvar_8.x) - (q13 * tmpvar_8.y));\n  moebius_1 = (((tmpvar_9 / \n    ((tmpvar_8.x * tmpvar_8.x) + (tmpvar_8.y * tmpvar_8.y))\n  ) + tmpvar_3) * 0.5);\n  float tmpvar_10;\n  tmpvar_10 = sqrt(dot (moebius_1, moebius_1));\n  moebius_1 = (0.5 + ((\n    (1.0 - abs(((\n      fract((moebius_1 * 0.5))\n     * 2.0) - 1.0)))\n   - 0.5) * 0.95));\n  vec2 tmpvar_11;\n  tmpvar_11 = (0.5 + (tmpvar_6 * 0.2));\n  ret_2 = (texture (sampler_main, tmpvar_11).z * vec3(0.4, 0.0, 0.7));\n  ret_2 = (mix (ret_2, vec3(0.0, 1.0, 1.0), vec3(clamp (texture (sampler_fc_main, moebius_1).y, 0.0, 1.0))) * (1.4 - pow (\n    (tmpvar_10 * 0.8)\n  , 0.3)));\n  vec3 tmpvar_12;\n  tmpvar_12 = mix (mix (mix (ret_2, vec3(4.0, 1.0, 0.0), vec3(\n    ((clamp ((texture (sampler_fc_main, tmpvar_11).y - texture (sampler_pc_main, tmpvar_11).y), 0.0, 1.0) * 4.0) * (tmpvar_10 * tmpvar_10))\n  )), vec3(-4.0, -4.0, -4.0), texture (sampler_main, tmpvar_11).xxx), vec3(2.0, 2.0, 2.0), vec3((texture (sampler_pc_main, tmpvar_11).x * 0.75)));\n  ret_2 = tmpvar_12;\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = tmpvar_12;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"shader_body\n{ret=GetPixel(uv);\nfloat d=lum(abs(uv-uv_orig))*0.6+0.003;\nfloat3 one,two,three,four,five;\nfloat3 sex,drugs,rock,roll,bugs;\nfloat3 maxx;\none=max(\nabs(ret-GetPixel(float2(uv.x-d,uv.y-d))),\nabs(ret-GetPixel(float2(uv.x-d,uv.y)))\n);\ntwo=max(\nabs(ret-GetPixel(float2(uv.x-d,uv.y+d))),\nabs(ret-GetPixel(float2(uv.x,uv.y-d)))\n);\nthree=max(\nabs(ret-GetPixel(float2(uv.x,uv.y))),\nabs(ret-GetPixel(float2(uv.x,uv.y+d)))\n);\nfour=max(\nabs(ret-GetPixel(float2(uv.x+d,uv.y-d))),\nabs(ret-GetPixel(float2(uv.x+d,uv.y)))\n);\nfive=abs(ret-GetPixel(float2(uv.x+d,uv.y+d)));\nsex=abs(one-ret);\ndrugs=abs(two-ret);\nrock=abs(three-ret);\nroll=abs(four-ret);\nbugs=abs(five-ret);\nmaxx=max(one,max(two,max(three,max(four,five))));\nmaxx=saturate(maxx);\nret=maxx;\nret=(ret+GetPixel(uv+ret.xy*0.01)*0.8)/1.4;\n}","comp_hlsl":"shader_body\n{\n\nfloat2 ac = float2(q11,q12);\nfloat2 mu = float2(q13,q14);\nfloat2 c = float2(q15,q16);\nfloat2 d = float2(q17,q18);\n\nfloat2 z = (uv-0.5)*aspect.xy;\n\n// (c*z + d)\nfloat2 czd = float2(z.x*c.x-z.y*c.y,z.x*c.y-z.y*c.x) + d;\n// mu/(cz+d)\nfloat2 moebius = float2( mu.x*czd.x + mu.y*czd.y , mu.y*czd.x-mu.x*czd.y )/(czd.x*czd.x+czd.y*czd.y) + ac;\n\nmoebius*=0.5;\nfloat l = length(moebius);\nmoebius = 0.5 + (1.0 - abs( frac( moebius * 0.5 ) * 2 - 1.0 )-0.5)*0.95;\n\nfloat2 uvr = 0.5 + (uv-0.5)*0.2;\n\nret = GetPixel(uvr).z*float3(0.4,0,0.7);\nret = lerp(ret,float3(0,1,1),saturate(tex2d(sampler_fc_main,moebius).y))*(1.4-pow(l*0.8,0.3));\nret = lerp(ret,float3(4,1,0),saturate(tex2d(sampler_fc_main,uvr).y-tex2d(sampler_pc_main,uvr).y)*4*(l*l));\nret = lerp(ret,-4,GetPixel(uvr).x);\nret = lerp(ret,2,tex2d(sampler_pc_main,uvr).x*0.75);\n//ret = GetPixel(uv);\n}"}