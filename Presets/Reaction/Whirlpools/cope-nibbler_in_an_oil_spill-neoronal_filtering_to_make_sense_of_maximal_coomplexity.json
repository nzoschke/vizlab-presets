{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.145,"wave_scale":1.164,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":1.0002,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":25.248,"mv_l":5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":54,"num_inst":3,"rad":0.16445,"r":0,"g":1,"b":1,"b2":1,"border_a":0},"init_eqs_str":"a.q4=0;a.q5=0;","frame_eqs_str":"a.x+=.5*a.q4;a.y+=.5*a.q5;","init_eqs_eel":"","frame_eqs_eel":"x=x+q4*0.5;\ny=y+q5*0.5;"},{"baseVals":{"sides":54,"num_inst":3,"rad":0.05504,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=x-0.4*sin(q5);\ny=y-0.4*sin(q6);","init_eqs_eel":"","frame_eqs_eel":"x=x-0.4*sin(q5);\ny=y-0.4*sin(q6);"},{"baseVals":{"textured":1,"rad":0.44484,"tex_ang":6.2831,"tex_zoom":2.08817,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":24,"rad":2.41456,"a":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r=q8;\ng=q7;\nb=q6;\n\nr2=r;\ng2=g;\nb2=b;","init_eqs_eel":"","frame_eqs_eel":"r=q8;\ng=q7;\nb=q6;\n\nr2=r;\ng2=g;\nb2=b;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xpos=0;a.yamptarg=0;a.pos=0;a.ydir=0;a.cx_range=0;a.q6=0;a.q1=0;a.q5=0;a.cy_range=0;a.yaccel=0;a.xamptarg=0;a.cx_i=0;a.xamp=0;a.xspeed=0;a.q4=0;a.ypos=0;a.xaccel=0;a.vol=0;a.q2=0;a.yamp=0;a.speed=0;a.q7=0;a.xdir=0;a.cy_i=0;a.mtime=0;a.q8=0;a.yspeed=0;","frame_eqs_str":"a.vol=div(a.bass+a.mid,6);a.xamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.5*a.vol*a.bass_att,.5):a.xamptarg;a.xamp+=.5*(a.xamptarg-a.xamp);a.xdir=.00001<Math.abs(above(Math.abs(a.xpos),a.xamp))?-sign(a.xpos):.00001<Math.abs(below(Math.abs(a.xspeed),.1))?2*above(a.xpos,0)-1:a.xdir;a.xaccel=a.xdir*a.xamp-a.xpos-.055*a.xspeed*below(Math.abs(a.xpos),a.xamp);a.xspeed=a.xspeed+a.xdir*a.xamp-a.xpos-.055*a.xspeed*below(Math.abs(a.xpos),a.xamp);a.xpos+=.001*a.xspeed;a.yamptarg=\n.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.3*a.vol*a.treb_att,.5):a.yamptarg;a.yamp+=.5*(a.yamptarg-a.yamp);a.ydir=.00001<Math.abs(above(Math.abs(a.ypos),a.yamp))?-sign(a.ypos):.00001<Math.abs(below(Math.abs(a.yspeed),.1))?2*above(a.ypos,0)-1:a.ydir;a.yaccel=a.ydir*a.yamp-a.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.yspeed=a.yspeed+a.ydir*a.yamp-a.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.ypos+=.001*a.yspeed;a.speed=a.yspeed+a.xspeed;a.pos=a.xpos+a.ypos;a.cy_range=1;a.cx_range=\n1;a.cy_i=a.cy_range*Math.sin(a.xspeed*a.ypos+(Math.sin(.964*a.time)-.5*Math.cos(.256*a.time)));a.cx_i=a.cx_range*Math.sin(a.yspeed*a.xpos-(Math.cos(1.345*a.time)-.5*Math.cos(.331*a.time)));a.q4=a.cx_i;a.q5=a.cy_i;a.wave_r+=.5*(.6*Math.sin(1.3*a.time)+.4*Math.sin(.98*a.time));a.wave_b+=.5*(.6*Math.sin(1.1*a.time)+.4*Math.sin(.78*a.time));a.wave_g+=.5*(.6*Math.sin(1.2*a.time)+.4*Math.sin(.6*a.time));a.q8=a.wave_r;a.q7=a.wave_b;a.q6=a.wave_g;a.warp=0;a.vol=.1*(9*a.vol+.333333*(a.bass_att+a.mid_att+a.treb_att));\na.q1=2*a.vol;a.q1=1;a.mtime+=.01*a.vol;a.q2=.25*a.mtime;a.q2=1*a.vol;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//---------- INDECISIVE CODE --------------\nvol = (bass+mid)/6;\nxamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);\nxamp = xamp + 0.5*(xamptarg-xamp);\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\nxaccel = xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\nxpos = xpos + 0.001*xspeed;\nyamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);\nyamp = yamp + 0.5*(yamptarg-yamp);\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\nyaccel = ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\nypos = ypos + 0.001*yspeed;\nspeed=yspeed+xspeed;\npos=xpos+ypos;\ncy_range=1;\ncx_range=1;\ncy_i = cy_range*sin(xspeed*ypos+(sin(time*0.964)-0.5*cos(time*0.256)));\ncx_i = cx_range*sin(yspeed*xpos-(cos(time*1.345)-0.5*cos(time*0.331)));\nq4=cx_i;\nq5=cy_i;\n//------------------------------------------\n\n//wave_x = wave_x+0.3*sin(cy_i);\n//wave_y = wave_y+0.3*sin(cx_i);\n\nwave_r = wave_r + 0.5*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\nwave_b = wave_b + 0.5*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\nwave_g = wave_g + 0.5*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\n\nq8=wave_r;\nq7=wave_b;\nq6=wave_g;\nwarp=0;\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\nq1=vol*2;\nq1=1;\n\nmtime=mtime+vol*0.01;\nq2=mtime*0.25;\nq2=vol*1;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = uv.x;\n  tmpvar_1.y = (uv.y + (0.005 * (vec3(0.0, 1.0, 0.0) * uv.yyy).y));\n  vec2 tmpvar_2;\n  float tmpvar_3;\n  tmpvar_3 = (texsize.z * q2);\n  tmpvar_2.x = (uv.x + tmpvar_3);\n  float tmpvar_4;\n  tmpvar_4 = (texsize.w * q2);\n  tmpvar_2.y = (tmpvar_1.y + tmpvar_4);\n  vec2 tmpvar_5;\n  tmpvar_5.x = (uv.x - tmpvar_3);\n  tmpvar_5.y = (tmpvar_1.y + tmpvar_4);\n  vec2 tmpvar_6;\n  tmpvar_6.x = (uv.x - tmpvar_3);\n  tmpvar_6.y = (tmpvar_1.y - tmpvar_4);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (uv.x + tmpvar_3);\n  tmpvar_7.y = (tmpvar_1.y - tmpvar_4);\n  vec3 tmpvar_8;\n  tmpvar_8 = (((texture (sampler_main, tmpvar_2).xyz + texture (sampler_main, tmpvar_5).xyz) + (texture (sampler_main, tmpvar_6).xyz + texture (sampler_main, tmpvar_7).xyz)) / 4.0);\n  vec3 b_9;\n  b_9 = (1.0 - texture (sampler_main, tmpvar_1).xyz);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = (((tmpvar_8.yzx * b_9.zxy) - (tmpvar_8.zxy * b_9.yzx)) * 1.2);\n  ret = tmpvar_10.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 0.0;\n  tmpvar_2.xyz = ret_1;\n  ret_1 = ((max (tmpvar_2, texture (sampler_main, \n    (1.0 - uv)\n  )).xyz * 1.5) - 0.2);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n    float3 rc = lerp(float3(0,0,0), float3(0,1,0), uv.y);\n    uv = float2(uv.x, uv.y+0.005*rc.y);\n        \n\n    float3 boxave = (GetPixel(float2(uv.x+texsize.z*q2,uv.y+texsize.w*q2)) +\n                     GetPixel(float2(uv.x-texsize.z*q2,uv.y+texsize.w*q2)) +\n                     GetPixel(float2(uv.x-texsize.z*q2,uv.y-texsize.w*q2)) +\n                     GetPixel(float2(uv.x+texsize.z*q2,uv.y-texsize.w*q2)) ) / 4;\n    ret = tex2D(sampler_main, uv);\n    ret = cross(boxave, 1-ret)*1.2;\n    \n    //ret -= 0.002;\n    //ret *= 0.995;\n}","comp_hlsl":"// to access a texture on disk: make a sampler.  This example loads \"lichen.{tga/jpg/etc}\".\nsampler2D sampler_fw_lichen;  // _FW = filtering + wrap; _PC = point sampling + edge clamp; etc.\nfloat4    texsize_lichen;     // auto-binds; .xy = (w,h); .zw = (1/w,1/h)\n\n\nshader_body      \n\n\n\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret = max(ret, tex2D(sampler_main, 1-uv));\n    ret = ret*1.50-0.2; //old gamma effect\n    \n}"}