{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":4,"wave_thick":1,"wrap":0,"wave_a":0,"wave_scale":0,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"warp":0,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0.002,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"num_inst":1024,"x":0.55,"rad":0.08081,"tex_zoom":0.27705,"r":0,"g2":0,"border_r":0,"border_g":0.7,"border_b":0.1,"border_a":0},"init_eqs_str":"a.i=0;a.x1=0;a.y1=0;a.d=0;a.zoom=0;a.q2=0;a.q6=0;a.sample=0;","frame_eqs_str":"a.i=2*a.instance;a.x1=a.gmegabuf[Math.floor(a.i)];a.y1=a.gmegabuf[Math.floor(a.i+1)];a.d=sqrt(a.x1*a.x1+a.y1*a.y1);a.rad=.002*a.rad*a.d;a.rad=.00001<Math.abs(above(a.rad,.015))?.015:a.rad;a.zoom=a.q2;a.x=.5+div(a.zoom*a.x1,a.q6);a.y=.5+a.zoom*a.y1;a.sample=div(.5*a.i,1024);a.r=.3+.1*Math.sin(3*a.sample+.7*a.q2*a.d+.2*a.time);a.g=.3+.1*Math.sin(3*a.sample+.8*a.q2*a.d+.23*a.time);a.b=.1+.1*Math.sin(3*a.sample+.4*a.q2*a.d+.15*a.time);","init_eqs_eel":"","frame_eqs_eel":"i=2*instance;     \n\nx1=gmegabuf(i);   y1=gmegabuf(i+1);\n\nd=sqrt(x1*x1+y1*y1);\nrad=.002*rad*d;\nrad=if(above(rad,.015),.015,rad);\n\nzoom=q2;\nx= .5+zoom*x1/q6;\ny= .5+zoom*y1;      \n\nsample=.5*i/1024;\nr= .3+.1*sin(3*sample+.7*q2*d+.2*time);\ng= .3+.1*sin(3*sample+.8*q2*d+.23*time);\nb= .1+.1*sin(3*sample+.4*q2*d+.15*time);"},{"baseVals":{"sides":50,"rad":0.14251,"tex_ang":4.08407,"tex_zoom":5.7611,"r":0,"g2":0,"a2":0.8,"border_g":0.7,"border_b":0.1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"additive":1,"num_inst":1024,"y":0.61,"rad":0.22078,"tex_zoom":6.17732,"r":0,"g2":0,"border_g":0.7,"border_b":0.1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"additive":1,"num_inst":1024,"x":0.38,"y":0.28,"rad":0.06056,"tex_zoom":1.54929,"g":0.7,"b":0.2,"g2":0,"border_g":0.7,"border_b":0.1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":60.80387,"smoothing":0.7,"g":0.9,"b":0.9,"a":0.21,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"scaling":67.1652,"smoothing":0.7,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"r":0.7,"g":0.7,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.n=0;a.mq1=0;a.s=0;a.q25=0;a.q12=0;a.t1=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q6=0;a.p=0;a.q1=0;a.mq31=0;a.mq21=0;a.mq24=0;a.x=0;a.chng=0;a.mq28=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.atime=0;a.q26=0;a.t=0;a.i=0;a.y=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.p1=0;a.mq26=0;a.q2=0;a.q27=0;a.t0=0;a.q28=0;for(var b=a.i=0;1E4>b;b++)a.gmegabuf[Math.floor(a.i)]=0,a.i+=1;a.t=0;a.t0=a.time;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.q6=a.aspecty;\na.t+=div(.1,a.fps);a.t1+=div(1,a.fps);a.s=150+140*Math.sin(a.t);a.q1=pow(Math.abs(a.s),.25);a.i=0;a.x=0;a.y=0;a.p=0;for(var b=a.p1=0;1024>b;b++)a.p+=div(a.s*(Math.sin(a.i*a.s)-Math.cos(a.i*a.s)),a.i),a.p1-=a.p,a.x+=Math.sin(a.p1),a.y+=Math.cos(a.p1),a.gmegabuf[Math.floor(2*a.i)]=a.x,a.gmegabuf[Math.floor(2*a.i+1)]=a.y,a.i+=1;a.n=12;a.decay=above(a.time-a.t0,.2)-equal(mod(5*a.t1,5*a.n),0);a.monitor=a.s;a.q2=.005;","pixel_eqs_str":"","init_eqs_eel":"i=0;  \nloop(10000, gmegabuf(i)=0;\n\ni=i+1;);\n\nt=0;\n\nt0=time;","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\nq6=aspecty;            t=t+.1/fps;    t1=t1+1/fps; \ns=150+140*sin(t);      q1=pow(abs(s),.25);\n\n\ni=0;    x=0;     y=0;   p=0;   p1=0;\n\nloop(1024,\n\np=p+ s*(sin(i*s)-cos(i*s))/i;    p1=p1-p;\nx=x+sin(p1);                     y=y+cos(p1);\ngmegabuf(2*i)=x;                 gmegabuf(2*i+1)=y;\n\ni=i+1;);\n\n\n///// clears the screen each n seconds\n\nn=12;\ndecay=above(time-t0,.2)-equal((5*t1)%(5*n),0);\n\nmonitor=s;\n\nq2=.005;   //// zoom","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 8.0));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.y;\n  tmpvar_7.y = tmpvar_4.y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 8.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.z;\n  tmpvar_9.y = tmpvar_4.z;\n  vec2 tmpvar_10;\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 8.0));\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\n  ).x * 0.02));\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\n  ).y * 0.02));\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_8.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_11.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_11.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_11.z * 0.5));\n  };\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\n  ).z * 0.02));\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.2) - 0.06));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_1;\n  ret = tmpvar_12.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 5.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.y;\n  tmpvar_5.y = tmpvar_4.y;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - (tmpvar_5 * 0.2));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.y;\n  tmpvar_7.y = -(tmpvar_3.y);\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_3.x;\n  tmpvar_8.y = tmpvar_4.y;\n  vec2 tmpvar_9;\n  tmpvar_9 = (((\n    (vec2(0.5, 0.5) + ((uv - vec2(0.5, 0.5)) * (1.0 - (bass_att * 0.04))))\n   - \n    ((tmpvar_7 * texsize.zw) * 16.0)\n  ) - (\n    (tmpvar_8 * texsize.zw)\n   * 8.0)) + (vec2(16.0, -16.0) * texsize.zw));\n  vec3 tmpvar_10;\n  tmpvar_10 = (vec3(((\n    ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1)\n  .y * 0.75) + (\n    ((-(tmpvar_3) + tmpvar_4).y + 0.5)\n   * 0.25))) * (vec3(1.0, 1.0, 1.0) - vec3(clamp (\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 1.2)\n  , 0.0, 1.0))));\n  vec3 tmpvar_11;\n  tmpvar_11 = mix (tmpvar_10, (tmpvar_10 * vec3(2.0, 1.0, 0.0)), vec3((texture (sampler_main, uv).z * 3.0)));\n  ret_1 = tmpvar_11;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_6.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_11.x > (q26 * q13)) && (tmpvar_11.x <= (q23 * q11)))) {\n    ret_1.z = (tmpvar_11.z - (tmpvar_12.x * 0.5));\n  };\n  if (((tmpvar_11.y > (q25 * q11)) && (tmpvar_11.y <= (q22 * q12)))) {\n    ret_1.x = (tmpvar_11.x - (tmpvar_12.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\n    ret_1.y = (tmpvar_11.y - (tmpvar_12.z * 0.5));\n  };\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_3.x;\n  tmpvar_13.y = tmpvar_4.x;\n  vec2 tmpvar_14;\n  tmpvar_14.x = -(tmpvar_4.z);\n  tmpvar_14.y = tmpvar_3.z;\n  vec2 tmpvar_15;\n  tmpvar_15.x = tmpvar_3.x;\n  tmpvar_15.y = tmpvar_4.x;\n  vec2 tmpvar_16;\n  tmpvar_16.x = -(tmpvar_4.z);\n  tmpvar_16.y = tmpvar_3.z;\n  vec3 tmpvar_17;\n  tmpvar_17 = mix (mix (ret_1, vec3(0.0, -0.2, -1.0), vec3((\n    ((texture (sampler_blur1, tmpvar_9).xyz * scale1) + bias1)\n  .x * 2.4))), (vec3(1.0, 0.1, 0.3) * (0.9 + \n    (-(tmpvar_3) + tmpvar_4)\n  .x)), vec3(max (texture (sampler_main, (\n    (uv + ((tmpvar_13 * texsize.zw) * 6.0))\n   + \n    ((tmpvar_14 * texsize.zw) * 24.0)\n  )).x, texture (sampler_main, (\n    (uv + ((tmpvar_15 * texsize.zw) * 6.0))\n   - \n    ((tmpvar_16 * texsize.zw) * 24.0)\n  )).x)));\n  ret_1 = tmpvar_17;\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = tmpvar_17;\n  ret = tmpvar_18.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw * 4;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1.2 + rand_frame.xy;\n\n    float2 my_uv =  lerp(uv_orig,uv,1) ;\n    float2 uv_x= my_uv + float2(dx.x,dy.x)*texsize.zw  *8;\n    float2 uv_y= my_uv + float2(dx.y,dy.y)*texsize.zw  *8;\n    float2 uv_z= my_uv + float2(dx.z,dy.z)*texsize.zw  *8;\n    ret.x = GetPixel(uv_x).x - (GetPixel(uv_x) - GetBlur3(uv_x)).x  * 0.02;\n    ret.y = GetPixel(uv_y).y - (GetPixel(uv_y) - GetBlur3(uv_y)).y  * 0.02;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv_y.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n    ret.z = GetPixel(uv_z).z - (GetPixel(uv_z) - GetBlur3(uv_z)).z  * 0.02;\n\nret -= ret.yzx*0.2 - 0.06;\n\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*5;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\nfloat2 uv1 = uv - float2(dx.y,dy.y)*0.2;\nret = GetBlur1(uv1).y*0.75 + ((-dx+dy).y+0.5)*0.25;\n\nfloat2 c = 0.5;\nfloat2 uv2 = c + (uv-c)*(1-bass_att*0.04) - float2(dy.y,-dx.y)*texsize.zw*16 - float2(dx.x,dy.y)*texsize.zw*8 + float2(1,-1)*texsize.zw*16;\nret = lerp(ret,0,saturate(GetBlur1(uv).z*1.2));\nret = lerp(ret,ret*float3(2,1,0),GetPixel(uv).z*3);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv1.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret = lerp(ret*float3(1,1,1),float3(0,-0.2,-1),GetBlur1(uv2).x*2.4);\nfloat2 uv3 = uv + float2(dx.x,dy.x)*texsize.zw*6 + float2(-dy.z,dx.z)*texsize.zw*24;\nfloat2 uv31 = uv + float2(dx.x,dy.x)*texsize.zw*6 - float2(-dy.z,dx.z)*texsize.zw*24;\nfloat x = max(GetPixel(uv3).x,GetPixel(uv31).x);\nret = lerp(ret,float3(1,0.1,.3)*(0.9+(-dx+dy).x),x);\n//ret = GetPixel(uv).z;\n}"}