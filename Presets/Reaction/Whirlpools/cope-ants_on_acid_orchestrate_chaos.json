{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":6,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.291,"wave_scale":0.475,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":1.0001,"rot":-0.0001,"dy":0.0039,"warp":0.01,"sy":1.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":1,"ob_size":0.015,"ob_r":1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":25.248,"mv_l":5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":34,"num_inst":3,"rad":0.11045,"r":0,"g2":0,"b2":0.7,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=x+q4*0.4;\ny=y+q5*0.4;","init_eqs_eel":"","frame_eqs_eel":"x=x+q4*0.4;\ny=y+q5*0.4;"},{"baseVals":{"sides":34,"num_inst":3,"rad":0.11045,"r":0,"g2":0,"b2":0.7,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=x-0.4*sin(q5);\ny=y-0.4*sin(q6);\n","init_eqs_eel":"","frame_eqs_eel":"x=x-0.4*sin(q5);\ny=y-0.4*sin(q6);\n"},{"baseVals":{"rad":0.44484,"tex_ang":6.2831,"tex_zoom":2.26119,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":24,"rad":2.41456,"a":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r=q8;\ng=q7;\nb=q6;\n\nr2=r;\ng2=g;\nb2=b;","init_eqs_eel":"","frame_eqs_eel":"r=q8;\ng=q7;\nb=q6;\n\nr2=r;\ng2=g;\nb2=b;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q8=0;a.q7=0;a.q6=0;a.vol=0;a.q1=0;a.q3=0;a.q2=0;","frame_eqs_str":"a.wave_r+=.5*(.6*Math.sin(1.3*a.time)+.4*Math.sin(.98*a.time));a.wave_b+=.5*(.6*Math.sin(1.1*a.time)+.4*Math.sin(.78*a.time));a.wave_g+=.5*(.6*Math.sin(1.2*a.time)+.4*Math.sin(.6*a.time));a.q8=a.wave_r;a.q7=a.wave_b;a.q6=a.wave_g;a.warp=0;a.vol=.1*(9*a.vol+.333333*(a.bass_att+a.mid_att+a.treb_att));a.q1=3*a.vol;a.q1=.5;a.q3=a.vol;a.q2=a.q1;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\nwave_b = wave_b + 0.5*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\nwave_g = wave_g + 0.5*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\nq8=wave_r;\nq7=wave_b;\nq6=wave_g;\nwarp=0;\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\nq1=vol*3;\nq1=0.5;\nq3=vol;\n\nq2=q1;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  uv_1 = (0.5 + ((uv - 0.5) * (1.0 - \n    ((vec3(0.0, 1.0, 0.0) * uv.yyy).y * 0.02)\n  )));\n  vec2 tmpvar_2;\n  float tmpvar_3;\n  tmpvar_3 = (texsize.z * q2);\n  tmpvar_2.x = (uv_1.x + tmpvar_3);\n  float tmpvar_4;\n  tmpvar_4 = (texsize.w * q2);\n  tmpvar_2.y = (uv_1.y + tmpvar_4);\n  vec2 tmpvar_5;\n  tmpvar_5.x = (uv_1.x - tmpvar_3);\n  tmpvar_5.y = (uv_1.y + tmpvar_4);\n  vec2 tmpvar_6;\n  tmpvar_6.x = (uv_1.x - tmpvar_3);\n  tmpvar_6.y = (uv_1.y - tmpvar_4);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (uv_1.x + tmpvar_3);\n  tmpvar_7.y = (uv_1.y - tmpvar_4);\n  vec3 tmpvar_8;\n  tmpvar_8 = (((texture (sampler_main, tmpvar_2).xyz + texture (sampler_main, tmpvar_5).xyz) + (texture (sampler_main, tmpvar_6).xyz + texture (sampler_main, tmpvar_7).xyz)) / 4.0);\n  vec3 b_9;\n  b_9 = (1.0 - clamp ((texture (sampler_main, uv_1).xyz - \n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\n  ), 0.0, 1.0));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = (((tmpvar_8.yzx * b_9.zxy) - (tmpvar_8.zxy * b_9.yzx)) * 2.0);\n  ret = tmpvar_10.xyz;\n }","comp":" shader_body { \n  vec3 reta_1;\n  vec2 tmpvar_2;\n  float tmpvar_3;\n  tmpvar_3 = (texsize.z * q1);\n  tmpvar_2.x = (uv.x + tmpvar_3);\n  float tmpvar_4;\n  tmpvar_4 = (texsize.w * q1);\n  tmpvar_2.y = (uv.y + tmpvar_4);\n  vec2 tmpvar_5;\n  tmpvar_5.x = (uv.x - tmpvar_3);\n  tmpvar_5.y = (uv.y + tmpvar_4);\n  vec2 tmpvar_6;\n  tmpvar_6.x = (uv.x - tmpvar_3);\n  tmpvar_6.y = (uv.y - tmpvar_4);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (uv.x + tmpvar_3);\n  tmpvar_7.y = (uv.y - tmpvar_4);\n  vec3 tmpvar_8;\n  tmpvar_8 = (((texture (sampler_main, tmpvar_2).xyz + texture (sampler_main, tmpvar_5).xyz) + (texture (sampler_main, tmpvar_6).xyz + texture (sampler_main, tmpvar_7).xyz)) / 4.0);\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_main, uv);\n  reta_1 = (((tmpvar_8.yzx * tmpvar_9.zxy) - (tmpvar_8.zxy * tmpvar_9.yzx)) * 2.0);\n  float tmpvar_10;\n  tmpvar_10 = dot ((reta_1 + tmpvar_8), vec3(0.32, 0.49, 0.29));\n  float tmpvar_11;\n  tmpvar_11 = dot ((reta_1 - 0.35), vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_12;\n  tmpvar_12 = (vec3(tmpvar_10) - (2.0 * (\n    dot (vec3(tmpvar_11), vec3(tmpvar_10))\n   * vec3(tmpvar_11))));\n  vec3 tmpvar_13;\n  tmpvar_13.x = q6;\n  tmpvar_13.y = q8;\n  tmpvar_13.z = q7;\n  vec3 tmpvar_14;\n  tmpvar_14.x = q8;\n  tmpvar_14.y = q7;\n  tmpvar_14.z = q6;\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = (mix ((tmpvar_12 * tmpvar_13), (tmpvar_12 * tmpvar_14), uv.yyy) * 5.0);\n  ret = tmpvar_15.xyz;\n }","warp_hlsl":"shader_body\n{\n    float3 rc = lerp(float3(0,0,0), float3(0,1,0), uv.y);\n    uv = 0.5 + (uv-0.5)*(1-(rc.y*0.02));  \n\n    float3 boxave = (GetPixel(float2(uv.x+texsize.z*q2,uv.y+texsize.w*q2)) +\n                     GetPixel(float2(uv.x-texsize.z*q2,uv.y+texsize.w*q2)) +\n                     GetPixel(float2(uv.x-texsize.z*q2,uv.y-texsize.w*q2)) +\n                     GetPixel(float2(uv.x+texsize.z*q2,uv.y-texsize.w*q2)) ) / 4;\n    ret = tex2D(sampler_main, uv);\n   \n    ret = cross(boxave, 1-saturate(ret-GetBlur1(uv)))*2;    \n}","comp_hlsl":"shader_body\n{\n\n    float3 boxave = (GetPixel(float2(uv.x+texsize.z*q1,uv.y+texsize.w*q1)) +\n                     GetPixel(float2(uv.x-texsize.z*q1,uv.y+texsize.w*q1)) +\n                     GetPixel(float2(uv.x-texsize.z*q1,uv.y-texsize.w*q1)) +\n                     GetPixel(float2(uv.x+texsize.z*q1,uv.y-texsize.w*q1)) ) /4;\nfloat3 reta = tex2D(sampler_main, uv);\nreta = cross(boxave, reta)*2;\n\nret = lum(reta+boxave);\nret = reflect(ret, lum(reta-0.35));\nret = lerp(ret*float3(q6,q8,q7), ret*float3(q8,q7,q6), uv.y);\nret*=5;\n}"}