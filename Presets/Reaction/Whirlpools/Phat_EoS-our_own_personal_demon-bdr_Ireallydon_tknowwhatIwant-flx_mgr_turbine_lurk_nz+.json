{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.501,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"brighten":1,"wave_a":4.1,"wave_scale":2.85,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":0.01,"ib_size":0.005,"mv_x":12.8,"mv_y":38.4,"mv_l":0.8,"mv_r":0.44,"mv_g":0.65,"mv_b":0.81,"mv_a":0},"shapes":[{"baseVals":{"sides":23,"additive":1,"textured":1,"y":0.7,"rad":0.15493,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"y=bass_att*0.5+0.2;\nx=cos(time*2)*0.5+0.5;","init_eqs_eel":"","frame_eqs_eel":"y=bass_att*0.5+0.2;\nx=cos(time*2)*0.5+0.5;"},{"baseVals":{"textured":1,"rad":1.802,"tex_ang":3.14159,"tex_zoom":0.57268,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//ang = ang + (bass*.2) + (time*.4);\n//rad=1.781+(bass*0.025);\nang=above(0.5,treb_att)*.063;","init_eqs_eel":"","frame_eqs_eel":"//ang = ang + (bass*.2) + (time*.4);\n//rad=1.781+(bass*0.025);\nang=above(0.5,treb_att)*.063;"},{"baseVals":{"sides":100,"additive":1,"textured":1,"x":0.9,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = sin(time*5) * .4 + .5;\ny=treb_att*0.5;\n\npow( (bass*.15),2);","init_eqs_eel":"","frame_eqs_eel":"x = sin(time*5) * .4 + .5;\ny=treb_att*0.5;\n\npow( (bass*.15),2);"},{"baseVals":{"sides":100,"textured":1,"rad":0.033,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=.5+(bass*0.07);","init_eqs_eel":"","frame_eqs_eel":"x=.5+(bass*0.07);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"basstime=basstime+(bass*bass);\nt1=basstime*0.003;\n","point_eqs_str":"//plot x,y,z to point on circle\nsmp=sample*6.283;\nxp=sin(smp )*0.05;\nyp=cos(smp )*0.05;\nzp=0;\n\n\n//alter shape;\nangy=sin(sample*6.28*4 +t1 )*6.28;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n\n//rotate on y axis;\nangy=t1*0.1;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n//rotate on x axis\naxs1 = sin(t1*0.15) + 1.6;\nyq= yp*cos(axs1) - zp*sin(axs1);\nzq= yp*sin(axs1) + zp*cos(axs1);\nyp=yq;\nzp=zq;\n\n//rotate on y axis again\naxs2 = sin(t1*0.1)*3.3;\nxq=xp*cos(axs2) - zp*sin(axs2);\nzq=xp*sin(axs2) + zp*cos(axs2);\nxp=xq;\nzp=zq;\n\n//stretch y axis to compensate for aspect ratio\nyp=yp*1.2;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5+q4;\ny=ys+0.5+q5;\n\nr=1-q1;\ng=1-q2;\nb=1-q3;","init_eqs_eel":"","frame_eqs_eel":"basstime=basstime+(bass*bass);\nt1=basstime*0.003;\n","point_eqs_eel":"//plot x,y,z to point on circle\nsmp=sample*6.283;\nxp=sin(smp )*0.05;\nyp=cos(smp )*0.05;\nzp=0;\n\n\n//alter shape;\nangy=sin(sample*6.28*4 +t1 )*6.28;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n\n//rotate on y axis;\nangy=t1*0.1;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\n//rotate on x axis\naxs1 = sin(t1*0.15) + 1.6;\nyq= yp*cos(axs1) - zp*sin(axs1);\nzq= yp*sin(axs1) + zp*cos(axs1);\nyp=yq;\nzp=zq;\n\n//rotate on y axis again\naxs2 = sin(t1*0.1)*3.3;\nxq=xp*cos(axs2) - zp*sin(axs2);\nzq=xp*sin(axs2) + zp*cos(axs2);\nxp=xq;\nzp=zq;\n\n//stretch y axis to compensate for aspect ratio\nyp=yp*1.2;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5+q4;\ny=ys+0.5+q5;\n\nr=1-q1;\ng=1-q2;\nb=1-q3;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"a.xs=0;a.ys=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"","point_eqs_str":"a.xs=Math.sin(6.28*a.sample);a.ys=Math.cos(6.28*a.sample);a.xs=.7*a.xs+.5;a.ys=.7*a.ys+.5;a.xs=Math.min(a.xs,.962);a.xs=Math.max(a.xs,.038);a.ys=Math.min(a.ys,.992);a.ys=Math.max(a.ys,.008);a.x=a.xs;a.y=a.ys;a.r=a.q1*a.sample*a.bass;a.g=a.q2*a.sample*a.treb;a.b=a.q3*a.sample*a.treb;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xs=sin(sample*6.28);\nys=cos(sample*6.28);\nxs=xs*0.7 + 0.5;\nys=ys*0.7 + 0.5;\nxs=min(xs,0.962);\nxs=max(xs,0.038);\nys=min(ys,0.992);\nys=max(ys,0.008);\nx=xs;y=ys;\n\n//r=sin(sample*6.28+time)*0.5+0.5;\n//g=sin(sample*6.28+2.1+time)*0.5+0.5;\n//b=sin(sample*6.28+4.2+time)*0.5+0.5;\nr=(q1*(sample*bass));\ng=(q2*(sample*treb));\nb=(q3*(sample*treb));"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"a.xs=0;a.ys=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"","point_eqs_str":"a.xs=Math.sin(6.28*a.sample);a.ys=Math.cos(6.28*a.sample);a.xs=.7*a.xs+.5;a.ys=.7*a.ys+.5;a.xs=Math.min(a.xs,.958);a.xs=Math.max(a.xs,.042);a.ys=Math.min(a.ys,.988);a.ys=Math.max(a.ys,.012);a.x=a.xs;a.y=a.ys;a.r=a.q1*a.sample*a.bass;a.g=a.q2*a.sample*a.treb;a.b=a.q3*a.sample*a.treb;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xs=sin(sample*6.28);\nys=cos(sample*6.28);\nxs=xs*0.7 + 0.5;\nys=ys*0.7 + 0.5;\nxs=min(xs,0.958);\nxs=max(xs,0.042);\nys=min(ys,0.988);\nys=max(ys,0.012);\nx=xs;y=ys;\n\n//r=sin(sample*6.28+time)*0.5+0.5;\n//g=sin(sample*6.28+2.1+time)*0.5+0.5;\n//b=sin(sample*6.28+4.2+time)*0.5+0.5;\n\nr=(q1*(sample*bass));\ng=(q2*(sample*treb));\nb=(q3*(sample*treb));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_str":"a.xs=0;a.ys=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"","point_eqs_str":"a.xs=Math.sin(6.28*a.sample);a.ys=Math.cos(6.28*a.sample);a.xs=.7*a.xs+.5;a.ys=.7*a.ys+.5;a.xs=Math.min(a.xs,.96);a.xs=Math.max(a.xs,.04);a.ys=Math.min(a.ys,.99);a.ys=Math.max(a.ys,.01);a.x=a.xs;a.y=a.ys;a.r=a.q1*a.sample*a.bass;a.g=a.q2*a.sample*a.treb;a.b=a.q3*a.sample*a.treb;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xs=sin(sample*6.28);\nys=cos(sample*6.28);\nxs=xs*0.7 + 0.5;\nys=ys*0.7 + 0.5;\nxs=min(xs,0.96);\nxs=max(xs,0.04);\nys=min(ys,0.99);\nys=max(ys,0.01);\nx=xs;y=ys;\n\n//r=sin(sample*6.28+time)*0.5+0.5;\n//g=sin(sample*6.28+2.1+time)*0.5+0.5;\n//b=sin(sample*6.28+4.2+time)*0.5+0.5;\nr=(q1*(sample*bass));\ng=(q2*(sample*treb));\nb=(q3*(sample*treb));"}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.xpos=0;a.q25=0;a.star=0;a.cdelay1=0;a.cdelay2=0;a.q22=0;a.q21=0;a.q29=0;a.q1=0;a.q5=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.counter2=0;a.musictime=0;a.mq23=0;a.q23=0;a.q24=0;a.mq30=0;a.q4=0;a.ypos=0;a.colorcounter=0;a.zm=0;a.q26=0;a.rd=0;a.mq27=0;a.ag=0;a.mq25=0;a.mq22=0;a.mq26=0;a.q2=0;a.q27=0;a.counter1=0;a.q3=0;a.q28=0;a.q30=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.99;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq30=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq30;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q30=a.mq30;a.monitor=a.mq1;a.wave_a=0;a.counter1=.00001<Math.abs(equal(a.counter2,1))?.00001<Math.abs(equal(a.counter1,1))?0:a.counter1+.2:1;a.counter2=.00001<Math.abs(equal(a.counter1,1))?.00001<Math.abs(equal(a.counter2,\n1))?0:a.counter2+.2:1;a.cdelay1=.00001<Math.abs(equal(a.cdelay2,1))?1:.00001<Math.abs(equal(mod(a.colorcounter,2),1))?.00001<Math.abs(equal(a.counter1,1))?2:0:.00001<Math.abs(equal(a.counter2,1))?2:0;a.cdelay2=.00001<Math.abs(equal(a.cdelay1,2))?1:0;a.colorcounter=.00001<Math.abs(above(a.colorcounter,7))?0:.00001<Math.abs(equal(a.cdelay1,1))?a.colorcounter+1:a.colorcounter;a.ib_r=.5*(.00001<Math.abs(equal(a.colorcounter,1))?1:.00001<Math.abs(equal(a.colorcounter,2))?1:.00001<Math.abs(equal(a.colorcounter,\n3))?1:.00001<Math.abs(equal(a.colorcounter,4))?Math.sin(a.counter2+2.1):.00001<Math.abs(equal(a.colorcounter,5))?0:.00001<Math.abs(equal(a.colorcounter,6))?0:Math.sin(a.counter1));a.ib_g=.5*(.00001<Math.abs(equal(a.colorcounter,1))?0:.00001<Math.abs(equal(a.colorcounter,2))?Math.sin(.5*a.counter2):.00001<Math.abs(equal(a.colorcounter,3))?Math.sin(.4*(a.counter1+1.75)):.00001<Math.abs(equal(a.colorcounter,4))?1:.00001<Math.abs(equal(a.colorcounter,5))?1:.00001<Math.abs(equal(a.colorcounter,6))?Math.sin(a.counter2+\n2):0);a.ib_b=.00001<Math.abs(equal(a.colorcounter,1))?Math.sin(a.counter1+2.1):.00001<Math.abs(equal(a.colorcounter,2))?0:.00001<Math.abs(equal(a.colorcounter,3))?0:.00001<Math.abs(equal(a.colorcounter,4))?0:.00001<Math.abs(equal(a.colorcounter,5))?Math.sin(a.counter1):(equal(a.colorcounter,6),1);a.ib_r=Math.tan(1*a.time);a.ib_r=Math.min(a.ib_r,1);a.ib_r=Math.max(a.ib_r,0);a.ib_g=Math.tan(1*a.time+2.1);a.ib_g=Math.min(a.ib_g,1);a.ib_g=Math.max(a.ib_g,0);a.ib_b=Math.tan(1*a.time+4.2);a.ib_b=Math.min(a.ib_b,\n1);a.ib_b=Math.max(a.ib_b,0);a.ob_r=a.ib_r-.5;a.ob_g=a.ib_g-.5;a.ob_b=a.ib_b-.5;a.q1=a.ib_r;a.q2=a.ib_g;a.q3=a.ib_b;a.decay=1;a.musictime+=a.mid*a.mid*a.mid*.02;a.xpos=.6*Math.sin(.6*a.musictime);a.ypos=.6*Math.sin(.4*a.musictime);a.q4=a.xpos;a.q5=a.ypos;a.zoom=.98+.04*Math.min(a.bass,1);","pixel_eqs_str":"a.sx=-1+.5*a.bass*a.rd;a.sy=-1-.5*a.treb*a.ag;a.cx=.5+a.q4;a.cy=.5-a.q5;a.rd=sqrt(sqr(2*(a.x-.5-a.q4))+sqr(1.5*(a.y-.5+a.q5)));a.zm=.98;a.ag=Math.atan(div(a.y-.5+a.q5,a.x-.5-a.q4));a.star=div(Math.atan(6*a.ag+a.time)*(2-a.rd-a.ag),5);a.zm+=div(a.star*a.ag,20)*a.ag;a.sx=a.zm;a.sy=a.zm;","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.99;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq30=if(above(chng,cthr),rand(1)*.3,mq30);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\n\nmonitor=mq1;\nwave_a = 0;\n\n\n\n//Thanks to Zylot for rainbow generator\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\ncdelay2 = if(equal(cdelay1,2),1,0);\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\nib_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\nib_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\nib_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\n\nib_r=tan(time*1);\nib_r=min(ib_r,1);\nib_r=max(ib_r,0);\nib_g=tan(time*1+2.1);\nib_g=min(ib_g,1);\nib_g=max(ib_g,0);\nib_b=tan(time*1+4.2);\nib_b=min(ib_b,1);\nib_b=max(ib_b,0);\n\nob_r=ib_r-0.5;\nob_g=ib_g-0.5;\nob_b=ib_b-0.5;\nq1=ib_r;\nq2=ib_g;\nq3=ib_b;\n\n\n\ndecay = 1;\n\n\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\n//solarize=above(0.5,bass);\n//darken=above(0.4,treb);\n\nmusictime=musictime+(mid*mid*mid)*0.02;\n\nxpos=sin(musictime*0.6)*0.6;\nypos=sin(musictime*0.4)*0.6;\nq4=xpos;\nq5=ypos;\n\nzoom=.98 + min(bass,1)*0.04","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\n//var=(bass+mid+treb)/3;\n//rot=((ang&rad/rad)/(var*20))/10;\n//sx=.99-(var*0.01);\n//cx=var*0.1*(ang/12);\n//sy=sx;\n\n\nsx=-1+(bass*0.5)*rd;\nsy=-1-(treb*0.5)*ag;\n//dx=sx*0.01;\n//sy=sy*0.01;\n\n\ncx=0.5+q4;\ncy=0.5-q5;\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\n//zm=(1.1-(rd/4));\nzm=.98;\n\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\nstar=atan(ag*6+time)*((2-rd)-ag)/5;\nzm=zm+star*ag/20*ag;\nsx=zm;\nsy=zm;\n//rot=above(rd,0.7)*(rd-0.7)*sin(time*0.3)\n//rot=above(sin(time),0.96)*sin(ag*11)*0.03;\n//zoom=below(sin(time),-0.96)*sin(ag*19)*0.13 + 1","warp":" shader_body { \n  vec2 my_uv_1;\n  vec2 d_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 4.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = (((2.0 * \n    ((texture (sampler_blur1, fract((uv + \n      (vec2(1.0, 0.0) * tmpvar_4)\n    ))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, fract((uv - \n      (vec2(1.0, 0.0) * tmpvar_4)\n    ))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec3 tmpvar_6;\n  tmpvar_6 = (((2.0 * \n    ((texture (sampler_blur1, fract((uv + \n      (vec2(0.0, 1.0) * tmpvar_4)\n    ))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, fract((uv - \n      (vec2(0.0, 1.0) * tmpvar_4)\n    ))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec3 tmpvar_7;\n  tmpvar_7 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  d_2 = -(tmpvar_4);\n  float tmpvar_8;\n  tmpvar_8 = (d_2 * 4.0).x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_5.y;\n  tmpvar_9.y = tmpvar_6.y;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_5.x;\n  tmpvar_10.y = tmpvar_6.x;\n  vec2 tmpvar_11;\n  tmpvar_11 = ((uv - (tmpvar_9 * d_2)) - (tmpvar_10 * tmpvar_8));\n  ret_3.y = texture (sampler_fc_main, (tmpvar_11 - floor(tmpvar_11))).y;\n  ret_3.y = (ret_3.y + ((\n    ((2.0 * ret_3.y) - (2.0 * tmpvar_7.y))\n   * 0.03) + -0.008));\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_5.x;\n  tmpvar_12.y = tmpvar_6.x;\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_5.z;\n  tmpvar_13.y = tmpvar_6.z;\n  my_uv_1 = ((uv - (tmpvar_12 * d_2)) - (tmpvar_13 * tmpvar_8));\n  ret_3.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\n  ret_3.x = (ret_3.x + ((\n    ((2.0 * ret_3.x) - (2.0 * tmpvar_7.x))\n   * 0.03) + -0.008));\n  vec2 tmpvar_14;\n  tmpvar_14.x = tmpvar_5.z;\n  tmpvar_14.y = tmpvar_6.z;\n  vec2 tmpvar_15;\n  tmpvar_15.x = tmpvar_5.y;\n  tmpvar_15.y = tmpvar_6.y;\n  my_uv_1 = ((uv - (tmpvar_14 * d_2)) - (tmpvar_15 * tmpvar_8));\n  ret_3.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\n  ret_3.z = (ret_3.z + ((\n    ((2.0 * ret_3.z) - (2.0 * tmpvar_7.z))\n   * 0.03) + -0.008));\n  vec4 tmpvar_16;\n  tmpvar_16 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_3.x > (q21 * roam_cos.y)) && (ret_3.x <= (q24 * roam_sin.x)))) {\n    ret_3.y = (ret_3.y - (tmpvar_16.x * 0.5));\n  };\n  if (((ret_3.y > (q22 * roam_sin.x)) && (ret_3.y <= (q25 * roam_cos.x)))) {\n    ret_3.z = (ret_3.z - (tmpvar_16.y * 0.5));\n  };\n  if (((ret_3.z > (q23 * roam_cos.x)) && (ret_3.z <= (q26 * roam_sin.y)))) {\n    ret_3.x = (ret_3.x - (tmpvar_16.z * 0.5));\n  };\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_3;\n  ret = tmpvar_17.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((2.0 * \n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((2.0 * \n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.y;\n  tmpvar_6.y = tmpvar_4.y;\n  vec2 tmpvar_7;\n  tmpvar_7 = ((uv - (\n    (tmpvar_5 * texsize.zw)\n   * 4.0)) + ((tmpvar_6 * texsize.zw) * 32.0));\n  ret_1 = (1.0 - sqrt(vec3((\n    mix (((texture (sampler_blur2, uv).xyz * scale2) + bias2).x, ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x, 0.6)\n   + \n    (texture (sampler_main, tmpvar_7).x - ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1).x)\n  ))));\n  ret_1 = (ret_1 * mix (vec3(2.0, 1.0, 0.0), vec3(0.5, 1.0, 2.0), vec3((\n    (uv.x + uv.y)\n   * 0.5))));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_3.y;\n  tmpvar_8.y = tmpvar_4.y;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.x;\n  tmpvar_9.y = tmpvar_4.x;\n  vec3 tmpvar_10;\n  tmpvar_10 = mix (mix (ret_1, vec3(2.0, 1.0, 0.0), vec3((\n    ((texture (sampler_blur2, (uv + (tmpvar_8 * 0.1))).xyz * scale2) + bias2)\n  .y * 2.0))), vec3((sqrt(\n    dot (tmpvar_9, tmpvar_9)\n  ) + texture (sampler_main, uv).x)), vec3(((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1).y * 1.2)));\n  ret_1 = tmpvar_10;\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((tmpvar_10.x > (q26 * roam_cos.y)) && (tmpvar_10.x <= (q23 * roam_sin.x)))) {\n    ret_1.z = (tmpvar_10.z - (tmpvar_11.x * 0.5));\n  };\n  if (((tmpvar_10.y > (q25 * roam_sin.x)) && (tmpvar_10.y <= (q22 * roam_cos.x)))) {\n    ret_1.x = (tmpvar_10.x - (tmpvar_11.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * roam_cos.x)) && (ret_1.z <= (q21 * roam_sin.y)))) {\n    ret_1.y = (tmpvar_10.y - (tmpvar_11.z * 0.5));\n  };\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_1;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\n//uv = uv_orig;\n    float2 d = texsize.zw*4;\n    float3 dx = (2*GetBlur1(frac(uv+float2(1,0)*d))-2*GetBlur1(frac(uv-float2(1,0)*d)))*0.5;\n    float3 dy = (2*GetBlur1(frac(uv+float2(0,1)*d))-2*GetBlur1(frac(uv-float2(0,1)*d)))*0.5;\n    float3 b1 = GetBlur1(uv) - 0;\n    d *= -1;\n    float d2 = d*4;\n    float1 c1 = 0.03;\n    float1 c2 = -0.008;\n\n\n    float2 my_uv = uv - float2(dx.y,dy.y)*d - float2(dx.x,dy.x)*d2;\n    ret.y = tex2D( sampler_fc_main, my_uv-floor(my_uv)).y;\n    ret.y += (2*ret.y - 2*b1.y)*c1 + c2;\n\n\n    my_uv = uv - float2(dx.x,dy.x)*d - float2(dx.z,dy.z)*d2;\n    ret.x = tex2D( sampler_fc_main, my_uv-floor(my_uv)).x;\n    ret.x += (2*ret.x - 2*b1.x)*c1 + c2;\n\n\n    my_uv = uv - float2(dx.z,dy.z)*d - float2(dx.y,dy.y)*d2;\n    ret.z = tex2D( sampler_fc_main, my_uv-floor(my_uv)).z;\n    ret.z += (2*ret.z - 2*b1.z)*c1 + c2;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; \nif(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z -= (noise9).y*.5; \nif(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; \n\n\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*4;\n    float3 dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) )*0.5;\n    float3 dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) )*0.5;\n\nfloat2 uv_x = uv- float2(dx.x,dy.x)*texsize.zw*4 + float2(dx.y,dy.y)*texsize.zw*32;\nret = lerp(GetBlur2(uv).x,GetBlur3(uv).x,0.6) + (GetPixel(uv_x).x-GetBlur1(uv_x).x)*1;\nret =sqrt(ret);\nret = 1- ret;\nret *= lerp(float3(2,1,0),float3(0.5,1,2),(uv.x+uv.y)*0.5);\nret = lerp(ret,float3(2,1,0),GetBlur2(uv + float2(dx.y,dy.y)*0.1).y*2);\nret = lerp(ret,length(float2(dx.x,dy.x)) + GetPixel(uv).x,GetBlur1(uv).y*1.2);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q30 \n                     );\nif(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z -= (noise9).x*.5; \nif(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x -= (noise9).y*.5; \nif(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y -= (noise9).z*.5; \n\n}"}