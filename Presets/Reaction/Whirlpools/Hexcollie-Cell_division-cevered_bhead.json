{"version":2,"baseVals":{"rating":5,"decay":0.97,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.03,"ob_r":0.2,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"it = it + 1;\n\na = equal(it%20,0);\na = 1;","point_eqs_str":"x = int(rand(101))*.01;\ny = int(rand(101))*.01;","init_eqs_eel":"","frame_eqs_eel":"it = it + 1;\n\na = equal(it%20,0);\na = 1;","point_eqs_eel":"x = int(rand(101))*.01;\ny = int(rand(101))*.01;"},{"baseVals":{"enabled":1,"sep":51,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_str":"a.sw=0;a.t1=0;a.bx=0;a.dt=0;a.it=0;a.by=0;a.ax=0;a.ay=0;a.mod=0;a.tm=0;a.t2=0;a.sp=0;","frame_eqs_str":"a.tm=.01*Math.floor(rand(101))*6.24;a.dt=.01*Math.floor(rand(101));a.t1=.5+.5*Math.sin(a.tm)*a.dt;a.t2=.5+.5*Math.cos(a.tm)*a.dt;a.r=.5+.5*Math.sin(1.132*a.time);a.g=.5+.5*Math.sin(1.121*a.time);a.b=.5+.5*Math.sin(1.187*a.time);","point_eqs_str":"a.sp=Math.floor(4*a.sample);a.sw=equal(mod(a.it,2),0);a.it=.00001<Math.abs(equal(a.sample,0))?0:a.it+1;a.mod=a.bass;a.ax=a.t1+Math.sin(6.28*a.sample)*a.mod*.1;a.ay=a.t2+Math.cos(6.28*a.sample)*a.mod*.1;a.bx=a.t1+Math.sin(6.28*a.sample)*a.mod*.005;a.by=a.t2+Math.cos(6.28*a.sample)*a.mod*.005;a.x=.00001<Math.abs(a.sw)?a.bx:a.ax;a.y=.00001<Math.abs(a.sw)?a.by:a.ay;a.a=.00001<Math.abs(a.sw)?.1*equal(Math.floor(rand(7)),0):0;a.a=.2*a.sw;","init_eqs_eel":"","frame_eqs_eel":"tm = int(rand(101))*.01*6.24;\ndt = int(rand(101))*.01;\n\n\nt1 = .5 + .5*sin(tm)*dt;\nt2 = .5 + .5*cos(tm)*dt;\n\nr = .5 + .5*sin(time*1.132);\ng = .5 + .5*sin(time*1.121);\nb = .5 + .5*sin(time*1.187);","point_eqs_eel":"sp = int(sample*4);\nsw = equal(it%2,0);\nit = if(equal(sample,0),0,it + 1);\n\nmod = bass;\n\nax = t1 + sin(sample*6.28)*mod*.1;\nay = t2 + cos(sample*6.28)*mod*.1;\nbx = t1 + sin(sample*6.28)*mod*.005;\nby = t2 + cos(sample*6.28)*mod*.005;\n\nx = if(sw,bx,ax);\ny = if(sw,by,ay);\n\na = if(sw,equal(int(rand(7)),0)*.1,0);\n\na = sw*.2;"},{"baseVals":{"enabled":1,"sep":51,"thick":1,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_str":"a.sw=0;a.t1=0;a.bx=0;a.dt=0;a.it=0;a.by=0;a.ax=0;a.ay=0;a.mod=0;a.tm=0;a.t2=0;a.sp=0;","frame_eqs_str":"a.tm=.01*Math.floor(rand(101))*6.24;a.dt=.01*Math.floor(rand(101));a.t1=.5+.5*Math.sin(a.tm)*a.dt;a.t2=.5+.5*Math.cos(a.tm)*a.dt;a.r=.5+.5*Math.sin(1.132*a.time);a.g=.5+.5*Math.sin(1.121*a.time);a.b=.5+.5*Math.sin(1.187*a.time);","point_eqs_str":"a.sp=Math.floor(4*a.sample);a.sw=equal(mod(a.it,2),0);a.it=.00001<Math.abs(equal(a.sample,0))?0:a.it+1;a.mod=a.treb;a.ax=a.t1+Math.sin(6.28*a.sample)*a.mod*.1;a.ay=a.t2+Math.cos(6.28*a.sample)*a.mod*.1;a.bx=a.t1+Math.sin(6.28*a.sample)*a.mod*.005;a.by=a.t2+Math.cos(6.28*a.sample)*a.mod*.005;a.x=.00001<Math.abs(a.sw)?a.bx:a.ax;a.y=.00001<Math.abs(a.sw)?a.by:a.ay;a.a=.00001<Math.abs(a.sw)?.1*equal(Math.floor(rand(7)),0):0;a.a=.2*a.sw;","init_eqs_eel":"","frame_eqs_eel":"tm = int(rand(101))*.01*6.24;\ndt = int(rand(101))*.01;\n\n\nt1 = .5 + .5*sin(tm)*dt;\nt2 = .5 + .5*cos(tm)*dt;\n\nr = .5 + .5*sin(time*1.132);\ng = .5 + .5*sin(time*1.121);\nb = .5 + .5*sin(time*1.187);","point_eqs_eel":"sp = int(sample*4);\nsw = equal(it%2,0);\nit = if(equal(sample,0),0,it + 1);\n\nmod = treb;\n\nax = t1 + sin(sample*6.28)*mod*.1;\nay = t2 + cos(sample*6.28)*mod*.1;\nbx = t1 + sin(sample*6.28)*mod*.005;\nby = t2 + cos(sample*6.28)*mod*.005;\n\nx = if(sw,bx,ax);\ny = if(sw,by,ay);\n\na = if(sw,equal(int(rand(7)),0)*.1,0);\n\na = sw*.2;"},{"baseVals":{"enabled":1,"sep":51,"thick":1,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_str":"a.sw=0;a.t1=0;a.bx=0;a.dt=0;a.it=0;a.by=0;a.ax=0;a.ay=0;a.tm=0;a.t2=0;a.sp=0;","frame_eqs_str":"a.tm=.01*Math.floor(rand(101))*6.24;a.dt=.01*Math.floor(rand(101));a.t1=.5+.5*Math.sin(a.tm)*a.dt;a.t2=.5+.5*Math.cos(a.tm)*a.dt;a.r=.5+.5*Math.sin(1.132*a.time);a.g=.5+.5*Math.sin(1.121*a.time);a.b=.5+.5*Math.sin(1.187*a.time);","point_eqs_str":"a.sp=Math.floor(4*a.sample);a.sw=equal(mod(a.it,2),0);a.it=.00001<Math.abs(equal(a.sample,0))?0:a.it+1;a.ax=a.t1+Math.sin(6.28*a.sample)*a.mid*.1;a.ay=a.t2+Math.cos(6.28*a.sample)*a.mid*.1;a.bx=a.t1+Math.sin(6.28*a.sample)*a.mid*.005;a.by=a.t2+Math.cos(6.28*a.sample)*a.mid*.005;a.x=.00001<Math.abs(a.sw)?a.bx:a.ax;a.y=.00001<Math.abs(a.sw)?a.by:a.ay;a.a=.00001<Math.abs(a.sw)?.1*equal(Math.floor(rand(7)),0):0;a.a=.2*a.sw;","init_eqs_eel":"","frame_eqs_eel":"tm = int(rand(101))*.01*6.24;\ndt = int(rand(101))*.01;\n\nt1 = .5 + .5*sin(tm)*dt;\nt2 = .5 + .5*cos(tm)*dt;\n\nr = .5 + .5*sin(time*1.132);\ng = .5 + .5*sin(time*1.121);\nb = .5 + .5*sin(time*1.187);","point_eqs_eel":"sp = int(sample*4);\nsw = equal(it%2,0);\nit = if(equal(sample,0),0,it + 1);\n\nax = t1 + sin(sample*6.28)*mid*.1;\nay = t2 + cos(sample*6.28)*mid*.1;\nbx = t1 + sin(sample*6.28)*mid*.005;\nby = t2 + cos(sample*6.28)*mid*.005;\n\nx = if(sw,bx,ax);\ny = if(sw,by,ay);\n\na = if(sw,equal(int(rand(7)),0)*.1,0);\n\na = sw*.2"}],"init_eqs_str":"a.ym=0;a.cdelay1=0;a.cdelay2=0;a.counter2=0;a.xm=0;a.ry=0;a.colorcounter=0;a.rx=0;a.oldy=0;a.counter1=0;a.oldx=0;a.colorcounter=1;a.counter1=0;a.counter2=1;a.cdelay1=0;a.cdelay2=0;a.rx=.5;a.ry=.5;a.xm=0;a.ym=0;a.orx=.5;a.ory=.5;a.wave_x=.5;a.wave_y=.5;a.oldx=.01*Math.floor(rand(100));a.oldy=.01*Math.floor(rand(100));","frame_eqs_str":"a.warp=0;a.counter1=.00001<Math.abs(equal(a.counter2,1))?.00001<Math.abs(equal(a.counter1,1))?0:a.counter1+.05:1;a.counter2=.00001<Math.abs(equal(a.counter1,1))?.00001<Math.abs(equal(a.counter2,1))?0:a.counter2+.05:1;a.cdelay1=.00001<Math.abs(equal(a.cdelay2,1))?1:.00001<Math.abs(equal(mod(a.colorcounter,2),1))?.00001<Math.abs(equal(a.counter1,1))?2:0:.00001<Math.abs(equal(a.counter2,1))?2:0;a.cdelay2=.00001<Math.abs(equal(a.cdelay1,2))?1:0;a.colorcounter=.00001<Math.abs(above(a.colorcounter,\n7))?0:.00001<Math.abs(equal(a.cdelay1,1))?a.colorcounter+1:a.colorcounter;a.oldx=.00001<Math.abs(equal(mod(a.colorcounter,2),1))?.00001<Math.abs(equal(a.counter1,.95))?a.rx:a.oldx:.00001<Math.abs(equal(a.counter2,.95))?a.rx:a.oldx;a.oldy=.00001<Math.abs(equal(mod(a.colorcounter,2),1))?.00001<Math.abs(equal(a.counter1,.95))?a.ry:a.oldy:.00001<Math.abs(equal(a.counter2,.95))?a.ry:a.oldy;a.rx=.00001<Math.abs(equal(a.cdelay1,1))?.01*Math.floor(rand(100)):a.rx;a.ry=.00001<Math.abs(equal(a.cdelay1,1))?\n.01*Math.floor(rand(100)):a.ry;a.xm=.00001<Math.abs(equal(a.cdelay1,1))?.05*(a.rx-a.oldx):a.xm;a.ym=.00001<Math.abs(equal(a.cdelay1,1))?.05*(a.ry-a.oldy):a.ym;a.monitor=a.colorcounter;a.wave_r=.4*a.bass;a.wave_g=.4*a.treb;a.wave_b=.4*a.mid;a.wave_a=a.bass;a.wave_mystery=-.5+.1*a.bass;a.wave_x=a.rx-(.00001<Math.abs(equal(mod(a.colorcounter,2),1))?20*Math.abs(a.counter1-1)*a.xm:20*Math.abs(a.counter2-1)*a.xm);a.wave_y=a.ry-(.00001<Math.abs(equal(mod(a.colorcounter,2),1))?20*Math.abs(a.counter1-1)*a.ym:\n20*Math.abs(a.counter2-1)*a.ym);a.zoom=.995;","pixel_eqs_str":"","init_eqs_eel":"colorcounter = 1;\ncounter1 = 0;\ncounter2 = 1;\ncdelay1 = 0;\ncdelay2 = 0;\nrx = .5;\nry = .5;\nxm = 0;\nym =0;\norx = .5;\nory = .5;\nwave_x = .5;\nwave_y = .5;\noldx = int(rand(100))*.01;\noldy = int(rand(100))*.01;","frame_eqs_eel":"warp = 0;\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.05),1);\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.05),1);\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\ncdelay2 = if(equal(cdelay1,2),1,0);\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\noldx = if(equal(colorcounter%2,1),if(equal(counter1,.95),rx,oldx),if(equal(counter2,.95),rx,oldx));\noldy = if(equal(colorcounter%2,1),if(equal(counter1,.95),ry,oldy),if(equal(counter2,.95),ry,oldy));\nrx = if(equal(cdelay1,1),int(rand(100))*.01,rx);\nry = if(equal(cdelay1,1),int(rand(100))*.01,ry);\nxm = if(equal(cdelay1,1),(rx - oldx)*.05,xm);\nym = if(equal(cdelay1,1),(ry - oldy)*.05,ym);\nmonitor = colorcounter;\nwave_r = bass*.4;\nwave_g = treb*.4;\nwave_b = mid*.4;\nwave_a = bass;\nwave_mystery = -.5+bass*.1;\nwave_x = rx - (if(equal(colorcounter%2,1),abs(counter1-1)*(xm*20),abs(counter2-1)*(xm*20)));\nwave_y = ry - (if(equal(colorcounter%2,1),abs(counter1-1)*(ym*20),abs(counter2-1)*(ym*20)));\nzoom = .995;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.y;\n  tmpvar_7.y = tmpvar_4.y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 4.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.z;\n  tmpvar_9.y = tmpvar_4.z;\n  vec2 tmpvar_10;\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 4.0));\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\n  ).x * 0.02));\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\n  ).y * 0.02));\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\n  ).z * 0.02));\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.1) - 0.04));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n }","comp":" shader_body { \n  vec2 uv_rr_1;\n  vec2 uv_r_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4.x = q13;\n  tmpvar_4.y = q14;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((uv - tmpvar_4) * aspect.xy);\n  vec2 tmpvar_6;\n  tmpvar_6.x = ((q12 * tmpvar_5.x) - (q11 * tmpvar_5.y));\n  tmpvar_6.y = ((q11 * tmpvar_5.x) + (q12 * tmpvar_5.y));\n  uv_r_2 = (q15 * tmpvar_6);\n  uv_r_2 = (tmpvar_4 + (uv_r_2 * aspect.zw));\n  uv_r_2 = (1.0 - abs((\n    (fract((uv_r_2 * 0.5)) * 2.0)\n   - 1.0)));\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv_r_2 - tmpvar_4);\n  vec2 tmpvar_8;\n  tmpvar_8.x = ((q18 * tmpvar_7.x) - (q17 * tmpvar_7.y));\n  tmpvar_8.y = ((q17 * tmpvar_7.x) + (q18 * tmpvar_7.y));\n  uv_rr_1 = (q16 * tmpvar_8);\n  uv_rr_1 = (tmpvar_4 + uv_rr_1);\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv_rr_1 - 0.5);\n  float tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = (min (abs(\n    (tmpvar_9.x / tmpvar_9.y)\n  ), 1.0) / max (abs(\n    (tmpvar_9.x / tmpvar_9.y)\n  ), 1.0));\n  float tmpvar_12;\n  tmpvar_12 = (tmpvar_11 * tmpvar_11);\n  tmpvar_12 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_12) + 0.05368138) * tmpvar_12) - 0.1173503)\n     * tmpvar_12) + 0.1938925) * tmpvar_12) - 0.3326756)\n   * tmpvar_12) + 0.9999793) * tmpvar_11);\n  tmpvar_12 = (tmpvar_12 + (float(\n    (abs((tmpvar_9.x / tmpvar_9.y)) > 1.0)\n  ) * (\n    (tmpvar_12 * -2.0)\n   + 1.570796)));\n  tmpvar_10 = (tmpvar_12 * sign((tmpvar_9.x / tmpvar_9.y)));\n  if ((abs(tmpvar_9.y) > (1e-08 * abs(tmpvar_9.x)))) {\n    if ((tmpvar_9.y < 0.0)) {\n      if ((tmpvar_9.x >= 0.0)) {\n        tmpvar_10 += 3.141593;\n      } else {\n        tmpvar_10 = (tmpvar_10 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_10 = (sign(tmpvar_9.x) * 1.570796);\n  };\n  vec2 tmpvar_13;\n  tmpvar_13.x = ((tmpvar_10 * q21) * 1.5);\n  tmpvar_13.y = (((0.666 * \n    log(sqrt(dot (tmpvar_9, tmpvar_9)))\n  ) - (tmpvar_10 * q21)) + q22);\n  ret_3 = texture (sampler_main, clamp ((0.5 + (\n    (0.5 - abs(((\n      fract((tmpvar_13 * 0.5))\n     * 2.0) - 1.0)))\n   * vec2(0.96, 1.02))), 0.0, 1.0)).xyz;\n  ret_3 = (1.0 - pow ((\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n   / bass_att), vec3((1.0 - \n    dot (clamp (pow ((\n      ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n     / treb_att), vec3((1.0 - \n      dot (clamp (ret_3, 0.0, 1.0), vec3(0.32, 0.49, 0.29))\n    ))), 0.0, 1.0), vec3(0.32, 0.49, 0.29))\n  ))));\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_3;\n  ret = tmpvar_14.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw * 8;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.24 + rand_frame.xy;\n\n    float2 my_uv =  lerp(uv_orig,uv,1) ;\n    float2 uv_x= my_uv + float2(dx.x,dy.x)*texsize.zw  *4;\n    float2 uv_y= my_uv + float2(dx.y,dy.y)*texsize.zw  *4;\n    float2 uv_z= my_uv + float2(dx.z,dy.z)*texsize.zw  *4;\n    ret.x = GetPixel(uv_x).x - (GetPixel(uv_x) - GetBlur3(uv_x)).x  * 0.02;\n    ret.y = GetPixel(uv_y).y - (GetPixel(uv_y) - GetBlur3(uv_y)).y  * 0.02;\n    ret.z = GetPixel(uv_z).z - (GetPixel(uv_z) - GetBlur3(uv_z)).z  * 0.02;\n\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0.0;\n    ret -= ret.yzx*0.1 - 0.04;\n\n}","comp_hlsl":"shader_body\n{\n//ret=tex2D(sampler_main,uv);\n// ***** Flexis rotating caleidoscope code *****\nfloat2 cntr = float2(q13,q14); float sin = q11; float cos = q12; float scale = q15;\nfloat2 uv_r = (uv-cntr)*aspect.xy;\n       uv_r = scale*float2( cos*uv_r.x - sin*uv_r.y, sin*uv_r.x + cos*uv_r.y); // rotation\n       uv_r = cntr + uv_r*aspect.zw;\n       uv_r = 1.0 - abs( frac( uv_r * 0.5 ) * 2.0 - 1.0 ); // mirror\nsin = q17; cos = q18; scale = q16;\nfloat2 uv_rr = (uv_r-cntr);\n       uv_rr = scale*float2( cos*uv_rr.x - sin*uv_rr.y, sin*uv_rr.x + cos*uv_rr.y); // counter-rotation\n       uv_rr = cntr + (uv_rr);\nfloat t = q22;\nfloat2 c = ((uv_rr-0.5));\nfloat1 ang_hq = atan2(c.x,c.y);\nfloat2 spiral = float2(ang_hq*q21*1.5,0.666*log(length(c))-ang_hq*q21+t);\nspiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*float2(0.96,1.02); // mirror\nret = GetPixel(saturate(spiral));\n\n\n//ret=lum(ret)>0+(lum(ret)<=0.75)*ret;\nret=pow(GetBlur1(uv).xyz/treb_att,1-lum(saturate(ret.xyz)));\nret=pow(GetBlur2(uv).xyz/bass_att,1-lum(saturate(ret.xyz)));\nret=1-ret;\n}"}