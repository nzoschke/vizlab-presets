{"version":2,"baseVals":{"rating":5,"decay":0.9,"echo_zoom":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":4.1,"wave_scale":0.628,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.417,"warpscale":1.331,"zoom":1.02841,"warp":0.01,"sx":0.8195,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_y":1,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0.05},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0},"init_eqs_str":"a.t3=0;a.t2=0;a.t1=0;a.d=0;a.t8=0;a.t2=0;a.t3=0;a.t4=0;a.cl=0;","frame_eqs_str":"a.t8=1;a.r+=.62*Math.sin(.777*a.time);a.b+=.225*Math.sin(.443*a.time);a.g+=.111*Math.sin(.883*a.time);","point_eqs_str":"a.t3=.6*a.t3+1*a.value1;a.t2=.7*a.t2+.2*a.t3;a.t1=.8*a.t1+.1*a.t2;a.d=.9*a.d+.2*a.t1;a.y=.5+a.d*a.sample*(1-a.sample);a.x=-.05+1.1*a.sample;a.t8=0;","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\ncl = 0;","frame_eqs_eel":"//Thanks to flexi for this waveform!\n\nt8 = 1;\nr=r + 0.620 * sin (0.777 * time);\nb=b + 0.225 * sin (0.443 * time);\ng=g + 0.111 * sin (0.883 * time);","point_eqs_eel":"//d3 = if(equal(t8,1),t4,d3);\n//d2 = if(equal(t8,1),t3,d2);\n//d1 = if(equal(t8,1),t2,d1);\n//d = if(equal(t8,1),t1,d);\nt3 = t3*0.6 + (value1)*1;\nt2 = t2*0.7 + t3*0.2;\nt1 = t1*0.8 + t2*0.1;\nd = d*0.9 + t1*0.2;\n\ny = 0.5 + d*sample*(1-sample);\nx =  -0.05 + sample*1.1;\nt8 = 0;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.rot+=.123*Math.sin(.888*a.time);a.mv_r+=.5*Math.sin(a.time);a.mv_b-=.5*Math.sin(.13*a.time);a.mv_g+=.5*Math.sin(a.time+1);a.wave_r+=.62*Math.sin(.777*a.time);a.wave_b+=.225*Math.sin(.443*a.time);a.wave_g+=.111*Math.sin(.883*a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"rot=rot + 0.123 * sin (0.888 * time);\nmv_r=mv_r+.5*sin(time);\nmv_b=mv_b-.5*sin(time*.13);\nmv_g=mv_g+.5*sin(time+1);\nwave_r=wave_r + 0.620 * sin (0.777 * time);\nwave_b=wave_b + 0.225 * sin (0.443 * time);\nwave_g=wave_g + 0.111 * sin (0.883 * time);","pixel_eqs_eel":"","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  float tmpvar_2;\n  tmpvar_2 = dot (texsize.zw, texsize.zw);\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \n    ((tmpvar_3 * (1.0 - (8.0 * \n      sqrt(tmpvar_2)\n    ))) + 0.5)\n  ).xyz), texture (sampler_main, (\n    (tmpvar_3 * (1.0 + (8.0 * sqrt(tmpvar_2))))\n   + 0.5)).xyz) - 0.034);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = ((mix (texture (sampler_main, uv).xyz, texture (sampler_main, \n    (((uv - 0.5) * vec2(-1.0, 1.0)) + 0.5)\n  ).xyz, vec3(0.5, 0.5, 0.5)) * 1.3) - 0.1);\n  ret_1 = (ret_1 * ((hue_shader * 8.0) - 6.25));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // feather pen\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1-8*length(texsize.zw)) + 0.5 ).xyz);\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1+8*length(texsize.zw)) + 0.5 ).xyz);\n\n    // darken over time\n    ret -= 0.034;\n}","comp_hlsl":"shader_body\n{\nfloat2 uv_echo = (uv - 0.5)*float2(-1,1) + 0.5;\nret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo).xyz, \n                0.50 \n              ); //video echo\nret = ret*1.3 - 0.1;\n\n\nret *= (hue_shader*8)-6.25;\n\n}\n\n"}