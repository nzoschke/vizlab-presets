{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":3.196,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0.3,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":18,"textured":1,"rad":0.25606,"ang":0.25133,"tex_ang":3.76991,"tex_zoom":4.77799,"g":1,"b":1,"a":0.4,"r2":1,"b2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":32,"textured":1,"y":0.56,"rad":0.05113,"tex_zoom":1.8315,"g":1,"b":1,"a":0.9,"g2":0,"a2":0.5,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = time;\na = 1;\n//rad = 0.02 +.05* bass_att;\n//rad = 0.1;\ny = 0.5+bass_att/10;\nx = .5 + .1*sin(time/2);\ny = .5 + .1*cos(time);","init_eqs_eel":"","frame_eqs_eel":"ang = time;\na = 1;\n//rad = 0.02 +.05* bass_att;\n//rad = 0.1;\ny = 0.5+bass_att/10;\nx = .5 + .1*sin(time/2);\ny = .5 + .1*cos(time);"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5 + .1* sin (time*73);\ny = .5 + .1* sin (time*23);\n\nr = 0; g = 0; b = 0;\nr2 = 1; g2 = 1; b2 = 1;\n\nrad = mid_att/100;\na = .7;\na2 = a;","init_eqs_eel":"","frame_eqs_eel":"x = .5 + .1* sin (time*73);\ny = .5 + .1* sin (time*23);\n\nr = 0; g = 0; b = 0;\nr2 = 1; g2 = 1; b2 = 1;\n\nrad = mid_att/100;\na = .7;\na2 = a;"},{"baseVals":{"sides":63,"textured":1,"y":0.51,"rad":0.53741,"tex_ang":1.00531,"tex_zoom":0.49981,"g":1,"b":1,"a":0.86,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":442,"additive":1,"scaling":0.89152,"smoothing":0.82,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"","point_eqs_str":"\nx0 = .5; y0 = .5;\n\nk1 = int(100.0*sample);\nk2 = int(100.0*sample+1);\nk1 = k1%2;\nf1 = rand(100)/200-.25;\nf2 = rand(100)/200-.25;\n\nx = x0 + k1* f1;;\ny = y0 + k1* f2;\na = .02;//k2%2 ;","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":"\nx0 = .5; y0 = .5;\n\nk1 = int(100.0*sample);\nk2 = int(100.0*sample+1);\nk1 = k1%2;\nf1 = rand(100)/200-.25;\nf2 = rand(100)/200-.25;\n\nx = x0 + k1* f1;;\ny = y0 + k1* f2;\na = .02;//k2%2 ;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.index2=0;a.pos=0;a.index=0;a.q18=0;a.q22=0;a.q21=0;a.q29=0;a.q1=0;a.dec_med=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.t_rel=0;a.dec_slow=0;a.q10=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.rota=0;a.q19=0;a.beat=0;a.p1=0;a.peak=0;a.flash=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q28=0;a.q20=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.2+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,12);a.index2=mod(a.index2+a.is_beat*bnot(a.index),6);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak+.5;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass_att+\na.mid_att+a.treb+1;a.q26=3;a.flash=a.flash*a.dec_med+a.q24*(1-a.dec_med);a.q19=a.flash;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,8);a.q27=a.index+1;a.pos+=div(a.q20,40);a.q28=a.index2+1;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.rota=a.q1;a.q29=4*a.q1;a.zoom=1;a.warp=.01;a.rot=div(0*a.q2,28);a.t_rel+=div(a.q20+a.q22,a.fps);a.q18=Math.sin(div(a.t_rel*a.q27,23));a.q19=Math.cos(div(a.t_rel*a.q27,\n12));a.q10=a.t_rel;","pixel_eqs_str":"a.rot=.1*Math.sin(div(a.time,4))*(1-a.rad);a.dx=0;","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %12;\nindex2 = (index2 + is_beat*bnot(index))%6;\n\nq20 = avg;\nq21 = beat;\nq22 = peak+.5;\nq23 = index;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb + 1;\nq26 = 3;\n\nflash = flash * dec_med + q24 * (1-dec_med);\nq19 = flash;\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/8;\n\nq27 = index+1;\npos = pos + q20/40;\nq28 = index2+1;\n\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nrota =  q1;\nq29 = q1*4;\n\nzoom = 1;\nwarp = .01;\nrot = 0*q2/28;\n//**********\n\nt_rel = t_rel + (q20+q22)/fps;\nq18 = sin(t_rel*q27/23);\nq19 = cos(t_rel*q27/12);\nq10 = t_rel;","pixel_eqs_eel":"rot = .1*sin(time/4)*(1-rad);\ndx = .0;","warp":" shader_body { \n  vec2 zz_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)] = _qa.xy;\n  tmpvar_2[1u] = _qa.zw;\n  zz_1 = (((\n    (uv - vec2(0.5, 0.5))\n   * texsize.xy) * 0.01) * tmpvar_2);\n  zz_1 = zz_1.yx;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (texture (sampler_main, (uv + (\n    (cos(zz_1) * texsize.zw)\n   * 12.0))).xyz - 0.01);\n  ret = tmpvar_3.xyz;\n }","comp":"vec3 xlat_mutableneu;\nvec2 xlat_mutablers2;\n shader_body { \n  vec2 uv_1;\n  vec3 ret1_3;\n  float ang2_4;\n  vec2 uv2_5;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  ret1_3 = vec3(0.0, 0.0, 0.0);\n  for (int n_2 = 0; n_2 <= 6; n_2++) {\n    ang2_4 = ((6.28 * float(n_2)) / 6.0);\n    float tmpvar_6;\n    tmpvar_6 = cos(ang2_4);\n    float tmpvar_7;\n    tmpvar_7 = sin(ang2_4);\n    uv2_5.x = ((uv_1.x * tmpvar_6) - (uv_1.y * tmpvar_7));\n    uv2_5.y = ((uv_1.x * tmpvar_7) + (uv_1.y * tmpvar_6));\n    uv2_5 = (uv2_5 * aspect.yx);\n    uv2_5 = (uv2_5 + 0.5);\n    vec2 tmpvar_8;\n    tmpvar_8 = fract(uv2_5);\n    uv2_5 = tmpvar_8;\n    xlat_mutableneu = (texture (sampler_main, tmpvar_8).xyz + ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1));\n    ret1_3 = max (ret1_3, xlat_mutableneu);\n  };\n  vec2 tmpvar_9;\n  tmpvar_9.x = q5;\n  tmpvar_9.y = q6;\n  xlat_mutablers2 = (sin((\n    (uv_1 * 18.0)\n   + tmpvar_9)) + (4.0 * dot (ret1_3, vec3(0.32, 0.49, 0.29))));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((q22 * ret1_3) + ((24.0 * \n    clamp ((0.04 / sqrt(dot (xlat_mutablers2, xlat_mutablers2))), 0.0, 1.0)\n  ) * (0.2 + \n    ((q1 * ret1_3) / 2.0)\n  )));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;\n\nfloat3 noiseVal =.0*(tex2D(sampler_noise_lq, uv*.3+.01*rand_frame));\nfloat3 Feedback = GetBlur1(1-uv);\n\nfloat2 zz = uv1 *texsize.xy *.01;\nzz =mul(zz,float2x2(_qa));\nzz = zz.yx;\nfloat2 h1 =  cos(zz);\n\nuv += h1*texsize.zw * 12;\n\nfloat3 crisp = tex2D(sampler_main,uv);\n\nret = crisp+noiseVal-.01;\n}","comp_hlsl":"float3 neu;\nfloat2 rs2;\nshader_body\n{\n    float2 uv2, uv3, dz;\n    float ang2, c, s;\n\n    uv -= 0.5;\n    uv *= aspect.xy;    \n\nfloat3 ret1 = 0;\nint anz = 6;\nint n = 0;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    uv2 *= aspect.yx;\n    uv2 += .5;\n    uv2 = frac(uv2);\n    neu = GetPixel(uv2) + GetBlur1(uv2);\n    ret1 = max(ret1,neu);\nn++;\n}\n\n\nrs2 = sin(uv*18+float2 (q5,q6)) \n      + 4*lum(ret1);;\nfloat dots = saturate(.04/length(rs2))-.0;\n\nret = q22*ret1 + 24*dots*(.2+q1*ret1/2);\n}\n\n"}