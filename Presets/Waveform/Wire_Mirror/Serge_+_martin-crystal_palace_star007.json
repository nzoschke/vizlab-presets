{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":7,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":1.029,"wave_scale":4.687,"wave_smoothing":0.9,"modwavealphastart":0.2,"modwavealphaend":2,"warpanimspeed":0.01,"warpscale":0.01,"fshader":1,"warp":0.01,"ob_r":0.11,"ob_g":0.4,"ob_b":0.6,"ob_a":0.4,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":12.8,"mv_y":14.4,"mv_l":5,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"textured":1,"x":0.46,"rad":1.99863,"tex_zoom":0.48364,"r":0.9,"g":0.3,"b":0.6,"a":0.07,"r2":1,"b2":0.4,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.vol=0;a.q7=0;a.q8=0;a.mtime=0;a.q6=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.decay=.98;a.zoom=1.003;a.vol=.25*(a.bass_att+a.mid_att+a.treb_att);a.vol*=a.vol;a.q7=a.vol;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.q8=a.vol;a.mtime+=.02*a.vol;a.q6=a.mtime;a.ob_a=Math.min(a.vol,1);","pixel_eqs_str":"a.zoom=1.001+.005*Math.sin(3*a.ang+.5*a.time);","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"decay=0.98;\nzoom=1.003;\n\nvol=(bass_att+mid_att+treb_att)*0.25;\nvol=vol*vol;\nq7=vol;\n\nvol=(bass+mid+treb)*0.25;\nvol=vol*vol;\nq8=vol;\n\nmtime=mtime+vol*0.02;\nq6=mtime;\n\n\nob_a = min(vol,1);","pixel_eqs_eel":"zoom=1.001 + sin(ang*3 + time*0.5)*0.005","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  vec2 rs_2;\n  vec2 uv6_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  uv6_3 = tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (((q27 * 0.05) * sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  )) + q30);\n  vec2 tmpvar_6;\n  tmpvar_6 = clamp (((\n    sin(tmpvar_5)\n   / \n    cos(tmpvar_5)\n  ) * normalize(tmpvar_4)), vec2(-8.0, -8.0), vec2(2.0, 2.0));\n  rs_2 = tmpvar_6;\n  if ((q28 == 1.0)) {\n    rs_2 = (tmpvar_6 * sin((uv * 5.0)));\n  };\n  uv_1 = (uv + ((rs_2 * \n    dot (rs_2, rs_2)\n  ) / 60.0));\n  uv6_3 = ((uv_1 - 0.5) * (1.0 + (q1 * q27)));\n  mat2 tmpvar_7;\n  tmpvar_7[uint(0)] = _qa.xy;\n  tmpvar_7[1u] = _qa.zw;\n  uv6_3 = (uv6_3 * tmpvar_7);\n  xlat_mutablemus = (abs(vec3((0.1 / \n    sqrt((uv6_3.y - 0.2))\n  ))) * vec3(0.8, 0.6, 1.0));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur1, \n      fract(uv_1)\n    ).xyz * scale1) + bias1) * 0.05))\n   + \n    (0.06 * xlat_mutablemus)\n  ) * 0.99) - 0.01);\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  float tmpvar_1;\n  tmpvar_1 = abs(((\n    fract((((ang / 6.28) * 7.0) + (time * 0.05)))\n   * 2.0) - 1.0));\n  vec2 tmpvar_2;\n  tmpvar_2.x = cos(tmpvar_1);\n  tmpvar_2.y = sin(tmpvar_1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (-0.3 + (1.7 * texture (sampler_main, (0.5 + \n    ((pow (rad, 0.5) * 0.5) * tmpvar_2)\n  )).xyz));\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\nfloat2 uv6 = uv1;\nfloat z = q27*.05*length(uv1)+q30;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,2);\n\nif (q28 ==1) {rs *= sin(uv*5) ;}\n\nuv += rs*dot(rs,rs)/60;\n\n\nuv6 = (uv-.5)*(1 + 1*q1*q27);\nuv6 = mul(uv6,float2x2(_qa));\n\nmus = .1/(sqrt(uv6.y-.2));\nmus = abs(mus);\nmus *= float3 (.8,.6,1);\n\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.05 + .06*mus;\nret = ret1 * .99 -  .01;\n\n\n}","comp_hlsl":"shader_body\n{\n  //rad = frac(rad*2);\n  rad = pow(rad,0.5)*1;\n\n\n  float ang2 = frac(ang/6.28*7 + time*0.05);\n  ang2 = abs(ang2*2-1);\n  float2 uv2 = 0.5 + rad*0.5*float2(cos(ang2),sin(ang2));    \n\n  uv = uv2;\n  //uv = lerp(uv, uv2, 0.5 + 0.5*cos(ang + time*3));\n\n\n  ret = tex2D(sampler_main, uv).xyz;\n\n  //ret = lum(ret);\n  //ret = pow(ret,float3(0.7,1.3,1.6));\n\n  ret = -0.3 + 1.7*ret;\n}\n\n"}