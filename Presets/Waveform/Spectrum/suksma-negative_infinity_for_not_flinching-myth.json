{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.94,"echo_zoom":0.597,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":1.00049,"warp":0.01,"sy":0.67165,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.002,"ob_a":1,"ib_size":0.26,"mv_x":2.56,"mv_y":48,"mv_dx":0.36,"mv_dy":-0.8,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"sides":54,"y":1,"rad":0.13478,"r":0,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ti = q1;\nrad = q2;\nx = (ti - int(ti))*.5;\n\n","init_eqs_eel":"","frame_eqs_eel":"ti = q1;\nrad = q2;\nx = (ti - int(ti))*.5;\n\n"},{"baseVals":{"sides":54,"y":0,"rad":0.13478,"r":0,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ti = q1;\nrad = q2;\nx = 1-(ti - int(ti))*.5;\n","init_eqs_eel":"","frame_eqs_eel":"ti = q1;\nrad = q2;\nx = 1-(ti - int(ti))*.5;\n"},{"baseVals":{"sides":43,"textured":1,"x":0.69,"rad":0.5482,"tex_ang":3.89557,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_g":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rad = .4 + q3;\n\ntex_zoom = 1/rad*.8;\n\nx = .5 + q3;\n\ntex_ang = -q4;\n\nti = q5 + sin(time*1.234);\n\nx = .5 + q3*sin(ti);\ny = .5 + q3*cos(ti)*.5;","init_eqs_eel":"","frame_eqs_eel":"rad = .4 + q3;\n\ntex_zoom = 1/rad*.8;\n\nx = .5 + q3;\n\ntex_ang = -q4;\n\nti = q5 + sin(time*1.234);\n\nx = .5 + q3*sin(ti);\ny = .5 + q3*cos(ti)*.5;"},{"baseVals":{"sides":43,"thickoutline":1,"textured":1,"rad":0.54822,"tex_ang":0.87965,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rad = .4 + q3;\n\ntex_zoom = 1/rad*.8;\n\nx = .5 - q3;\n\ntex_ang = q4;\n\nti = q5 + sin(time*.948) + 3.1416;\n\nx = .5 + q3*sin(ti)*1.5;\ny = .5 + q3*cos(ti)*.5;","init_eqs_eel":"","frame_eqs_eel":"rad = .4 + q3;\n\ntex_zoom = 1/rad*.8;\n\nx = .5 - q3;\n\ntex_ang = q4;\n\nti = q5 + sin(time*.948) + 3.1416;\n\nx = .5 + q3*sin(ti)*1.5;\ny = .5 + q3*cos(ti)*.5;"}],"waves":[{"baseVals":{"thick":1,"smoothing":0.8,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"sw = (1-sw)*above(sample,0);\n\nosa = sample*above(sample,0);\n\nmod = pow(value1*2,2)*sign(value1)*.5;\n\nmod = value1;\nmod = mod*sw;\n\nx = if(sw,osa,sample);\nx = sample*.5;\ny = 1 + mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\nr = .5 + sin(mo)*.5;\ng = .5 + sin(mo + 1.0472)*.5;\nb = .5 + sin(mo + 2.0944)*.5;\n\na = 1 - abs(mod)*12;\na = 1-sw;\na = max(0,min(a,1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*above(sample,0);\n\nosa = sample*above(sample,0);\n\nmod = pow(value1*2,2)*sign(value1)*.5;\n\nmod = value1;\nmod = mod*sw;\n\nx = if(sw,osa,sample);\nx = sample*.5;\ny = 1 + mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\nr = .5 + sin(mo)*.5;\ng = .5 + sin(mo + 1.0472)*.5;\nb = .5 + sin(mo + 2.0944)*.5;\n\na = 1 - abs(mod)*12;\na = 1-sw;\na = max(0,min(a,1));"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"additive":1,"smoothing":0.8},"init_eqs_str":"a.sw=0;a.osa=0;a.mod=0;a.mo=0;a.q1=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*below(a.sample,1);a.osa=a.sample*above(a.sample,0);a.mod=a.value2-a.value1;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:a.sample;a.y=.4*(1-1.6*a.sample)+.42;a.x=.5*a.mod+.5;a.mo=3.7+6*a.mod+a.q1;a.r=.5+.5*Math.sin(a.mo);a.g=.5+.5*Math.sin(a.mo+1.0472);a.b=.5+.5*Math.sin(a.mo+2.0944);a.a=1-12*Math.abs(a.mod);a.a=1-a.sw;a.a=Math.max(0,Math.min(a.a,1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*below(sample,1);\n\nosa = sample*above(sample,0);\n\n//mod = pow((value1-value2)*2,2)*sign(value1-value2)*.5;\n\nmod = value2-value1;\nmod = mod*sw;\n\ny = if(sw,osa,sample);\ny = (1-sample*1.6)*.4+.42;\nx = 0 + mod*.5+.5;\n\n//osa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\nr = .5 + sin(mo)*.5;\ng = .5 + sin(mo + 1.0472)*.5;\nb = .5 + sin(mo + 2.0944)*.5;\n\na = 1 - abs(mod)*12;\na = 1-sw;\na = max(0,min(a,1));"},{"baseVals":{"thick":1,"smoothing":0.8,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"sw = (1-sw)*above(sample,0);\n\nosa = sample*above(sample,0);\n\nmod = pow(value1*2,2)*sign(value1)*.5;\n\nmod = value1;\nmod = mod;\n\nx = if(sw,osa,sample);\nx = sample*.5;\ny = 1 + mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\n//r = .5 + sin(mo)*.5;\n//g = .5 + sin(mo + 1.0472)*.5;\n//b = .5 + sin(mo + 2.0944)*.5;\n\n//a = 1 - abs(mod)*12;\n//a = 1-sw;\na = max(0,min(a,1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*above(sample,0);\n\nosa = sample*above(sample,0);\n\nmod = pow(value1*2,2)*sign(value1)*.5;\n\nmod = value1;\nmod = mod;\n\nx = if(sw,osa,sample);\nx = sample*.5;\ny = 1 + mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\n//r = .5 + sin(mo)*.5;\n//g = .5 + sin(mo + 1.0472)*.5;\n//b = .5 + sin(mo + 2.0944)*.5;\n\n//a = 1 - abs(mod)*12;\n//a = 1-sw;\na = max(0,min(a,1));"},{"baseVals":{"thick":1,"smoothing":0.8,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"sw = (1-sw)*above(sample,0);\n\nosa = sample*above(sample,0);\n\nmod = pow(value1*2,2)*sign(value1)*.5;\n\nmod = value1;\nmod = mod;\n\nx = if(sw,osa,sample);\nx = 1 - sample*.5;\ny = 0 + mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\n//r = .5 + sin(mo)*.5;\n//g = .5 + sin(mo + 1.0472)*.5;\n//b = .5 + sin(mo + 2.0944)*.5;\n\n//a = 1 - abs(mod)*12;\n//a = 1-sw;\na = max(0,min(a,1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*above(sample,0);\n\nosa = sample*above(sample,0);\n\nmod = pow(value1*2,2)*sign(value1)*.5;\n\nmod = value1;\nmod = mod;\n\nx = if(sw,osa,sample);\nx = 1 - sample*.5;\ny = 0 + mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\n//r = .5 + sin(mo)*.5;\n//g = .5 + sin(mo + 1.0472)*.5;\n//b = .5 + sin(mo + 2.0944)*.5;\n\n//a = 1 - abs(mod)*12;\n//a = 1-sw;\na = max(0,min(a,1));"}],"init_eqs_str":"a.tic=0;a.st=0;a.vt=0;a.q6=0;a.bt=0;a.q1=0;a.q5=0;a.mid_avg=0;a.tt=0;a.base=0;a.my=0;a.tin=0;a.ti=0;a.bass_avg=0;a.vav=0;a.q4=0;a.zm=0;a.mt=0;a.ra=0;a.mx=0;a.treb_avg=0;a.vol=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.vol=.333333*(a.bass_att+a.treb_att+a.mid_att);a.ra=.25*div(1,a.tic);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;a.vt+=a.tic*a.vav;a.q1=4*a.tt;a.q2=4*a.mt;\na.q3=4*a.bt;a.st=.1;a.base=.15;a.q4=a.base+a.treb_avg*a.st;a.q5=a.base+a.mid_avg*a.st;a.q6=a.base+a.bass_avg*a.st;","pixel_eqs_str":"a.ti=.3*a.time;a.mx=a.x-.5+.25*(Math.sin(1.1278*a.ti)+Math.sin(.7458*a.ti));a.my=a.y-.5+.25*(Math.sin(.9454*a.ti)+Math.sin(1.2378*a.ti));a.zm=Math.cos(16*pow(a.mx*a.mx*1.5+a.my*a.my,.5)-a.q1)*a.q4;a.dx=a.zm*(a.x-a.mx);a.dy=a.zm*(a.y-a.my);a.mx=a.x-.5+.25*(Math.sin(1.3488*a.ti)+Math.sin(.8552*a.ti));a.my=a.y-.5+.25*(Math.sin(.7366*a.ti)+Math.sin(1.1447*a.ti));a.zm=Math.cos(16*pow(a.mx*a.mx*1.5+a.my*a.my,.5)-a.q2)*a.q5;a.dx+=a.zm*a.mx;a.dy+=a.zm*a.my;a.mx=a.x-.5+.25*(Math.sin(1.3544*\na.ti)+Math.sin(.8926*a.ti));a.my=a.y-.5+.25*(Math.sin(.9021*a.ti)+Math.sin(1.2468*a.ti));a.zm=Math.cos(16*pow(a.mx*a.mx*1.5+a.my*a.my,.5)-a.q3)*a.q6;a.dx+=a.zm*a.mx;a.dy+=a.zm*a.my;","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\ntic = min(time-tin,.1);\ntin = time;\n\nvol = (bass_att + treb_att + mid_att)*.333333;\n\nra = 1/tic*.25;\n\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\nvt = vt + tic*vav;\n\nq1 = tt*4;\nq2 = mt*4;\nq3 = bt*4;\n\nst = .1;\nbase = .15;\nq4 = base + treb_avg*st;\nq5 = base + mid_avg*st;\nq6 = base + bass_avg*st;","pixel_eqs_eel":"ti = time*.3;\n\nmx = x - .5 + .25*(sin(ti*1.1278) + sin(ti*.7458));\nmy = y - .5 + .25*(sin(ti*.9454) + sin(ti*1.2378));\nzm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;\ndx = zm*(x-mx);\ndy = zm*(y-my);\n\nmx = x - .5 + .25*(sin(ti*1.3488) + sin(ti*.8552));\nmy = y - .5 + .25*(sin(ti*.7366) + sin(ti*1.1447));\nzm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q2)*q5;\ndx = dx + zm*mx;\ndy = dy + zm*my;\n\nmx = x - .5 + .25*(sin(ti*1.3544) + sin(ti*.8926));\nmy = y - .5 + .25*(sin(ti*.9021) + sin(ti*1.2468));\nzm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q3)*q6;\ndx = dx + zm*mx;\ndy = dy + zm*my;","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz - (tmpvar_2.xyz * 0.5));\n  ret_1 = ((ret_1 * abs(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2) - 0.5)\n  )) * 5.0);\n  ret_1 = (ret_1 - 0.01);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  vec2 uv2_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv2_4.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\n  uv2_4.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\n  dist_3 = (1.0 - fract((0.25 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = (xlat_mutableneu * inten_2);\n  uv2_4.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\n  uv2_4.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\n  dist_3 = (1.0 - fract((0.5 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\n  uv2_4.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\n  dist_3 = (1.0 - fract((0.75 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  uv2_4.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  dist_3 = (1.0 - fract((1.0 + time)));\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    ((2.0 * uv2_4) * dist_3)\n   + 0.54)).xyz * scale1) + bias1);\n  xlat_mutableneu = (texture (sampler_main, ((\n    (2.0 * uv2_4)\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = xlat_mutableret1;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    \n    // darken (decay) over time\n    ret = ret- (ret*.5);\n    ret = ret*(abs(GetBlur2(uv)-.5))*5;\n    ret = ret - .01;\n}","comp_hlsl":"float3 ret1, neu, blur;\n\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nfloat dist = 1;\nfloat dista = 0;\nfloat inten = 1;\nfloat mask = 0;\nret1 = 0;\nint anz = 4;\nfloat n = 1;\n//uv = mul(uv,float2x2(_qa));\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    dist = 1-frac(.25*n+time/1); //evtl sqrt !\n    inten =  pow(dist,.3)*(1-dist)*2;\n//    inten =  (1-dist);\n\n    neu =  GetPixel (2*uv2*dist + 0.5 );\n    blur = GetBlur1 (2*uv2*dist + 0.54 );\n    neu += blur;\n//    neu *= (neu >= 0);\n  //  mask = 1-(neu*inten >= .1) * (dist < dista);\n    ret1 = ret1*.9+neu*inten;\n    dista = dist;\nn++;\n}\n\nfloat dz = ret1/2;\nfloat2 rs1 = uv*8 + time;\n\nfloat scale = 64;\nrs1 = rs1 + dz*scale*.4;\n\nfloat lava = tex2D (sampler_noise_hq,rs1/scale).x;\nlava = saturate(-abs (lava) + 1);\nfloat3 lay1 = saturate(float3 (lava,lava*(lava-0.55)*2,(lava-1)*16));\n\nret = ret1*1 + 0*float3(0,0,.3)*rad + lay1*0;\n\n}"}