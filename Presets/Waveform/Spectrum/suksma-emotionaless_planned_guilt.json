{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":3.076,"echo_alpha":0.5,"echo_orient":2,"wave_mode":6,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.827,"wave_scale":3.878,"wave_smoothing":0.09,"wave_mystery":0.98,"modwavealphastart":1.03,"modwavealphaend":1.27,"zoomexp":0.01,"zoom":0.9998,"rot":0.8,"warp":0.01,"sx":0.9999,"sy":0.9998,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.72,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0.3,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5},"shapes":[{"baseVals":{"enabled":1,"sides":12,"num_inst":92,"x":0.8,"rad":0.03469,"ang":1.5707,"tex_ang":1.25664,"tex_zoom":3.0726,"g":1,"b":1,"g2":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.xang=0;a.ampl=0;a.fov=0;a.t1=0;a.yang=0;a.my=0;a.oz=0;a.k1=0;a.t_rel=0;a.k2=0;a.mz=0;a.oy=0;a.mx=0;a.vol=0;a.zang=0;a.sample=0;a.t_abs=0;a.ox=0;","frame_eqs_str":"a.t1=a.time-Math.floor(a.time);a.sample=div(a.instance,a.num_inst);a.t_abs=3*a.sample;a.t_rel=a.sample-div(a.time,5);a.vol=a.bass+a.mid+a.treb;a.ampl=div(2*a.t_abs,2)*a.vol*.5;a.k1=Math.sin(div(a.time,13));a.k2=Math.sin(div(a.time,12));a.ox=a.ampl*Math.sin(a.t_abs*(31+5*a.k1))+Math.sin(div(a.time,25))*(1-a.t_abs)*.4;a.oy=a.ampl*Math.cos(a.t_abs*(31+5*a.k2));a.oz=-1;a.r=sqr(Math.sin(3.4*a.t_rel));a.g=sqr(Math.sin(a.t_rel));a.b=sqr(Math.cos(1.8*a.t_rel));a.xang=div(a.time,9.5);\na.yang=div(0*a.time,7);a.zang=div(-a.time,22);a.fov=.5;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);a.oy=a.my;a.oz=a.mz;a.oz-=6;a.x=div(a.ox*a.fov,a.oz)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;","init_eqs_eel":"","frame_eqs_eel":"t1 = time - int (time);\nsample = instance/num_inst;\nt_abs = sample*3;\nt_rel = sample-time/5;\nvol=bass+mid+treb;\nampl = 2*t_abs/2*vol*.5;\n\nk1=sin(time/13);\nk2=sin(time/12);\nox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.4  ;\noy = ampl*cos (t_abs*(31+5*k2));\noz = -1  ;\n\n\nr = sqr(sin(t_rel*3.4));\ng = sqr(sin(t_rel));\nb = sqr (cos(t_rel*1.8));\n\n//a=(0.1*(sin(t_abs*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a;\n\nxang = time/9.5;\nyang = 0*time/7;\nzang = -time/22;\nfov = 0.5;\n\n\n// Rotation um x,y,z\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\n\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 6;\nx = ox*fov/oz +0.5;\n//x = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":11,"rad":0.03333,"r":0,"g2":0,"border_a":1},"init_eqs_str":"a.vol=0;","frame_eqs_str":"a.x=.01*Math.floor(rand(100))+a.instance-a.instance;a.y=.01*Math.floor(rand(100))+a.instance-a.instance;a.a=1;a.a2=1;a.border_a=0;a.vol=a.bass+a.mid+a.treb;a.rad=div(Math.floor(rand(Math.floor(a.vol))),5)+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01+instance-instance;\ny = int(rand(100))*.01+instance-instance;\n\na = 1;\na2 = 1;\nborder_a = 0;\nvol=bass+mid+treb;\nrad = int(rand(int(vol)))/5+instance-instance;"},{"baseVals":{"sides":100,"textured":1,"rad":0.03333,"r":0,"g2":0,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = int(rand(100))*.01;\ny = int(rand(100))*.01;\n\na = if(above(frame%7,0),0,1);\na2 = if(above(frame%7,0),0,1);\nborder_a = 0;\nvol=bass+mid+treb;\nrad = vol*.1;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01;\ny = int(rand(100))*.01;\n\na = if(above(frame%7,0),0,1);\na2 = if(above(frame%7,0),0,1);\nborder_a = 0;\nvol=bass+mid+treb;\nrad = vol*.1;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"smoothing":0},"init_eqs_str":"a.sw=0;a.q12=0;a.mo=0;a.q13=0;a.osa=0;a.q31=0;a.q11=0;a.q10=0;a.mod=0;a.q32=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*above(a.sample,0);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value1,2)*sign(a.value1)*.5;a.mod=a.value1;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:a.sample;a.y=a.sample;a.x=.5-.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q10;a.r=a.q12;a.g=a.q13;a.b=a.q11;a.a=1-12*Math.abs(a.mod);a.a=1-a.sw;a.a=Math.max(0,Math.min(a.a,1));a.x=(a.x-.5)*div(a.q31,a.q32)+.5;a.y=(a.y-.5)*div(a.q32,a.q31)+.5;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*above(sample,0);\n\nosa = sample*above(sample,0);\n\nmod = pow(value1*2,2)*sign(value1)*.5;\n\nmod = value1;\nmod = mod*sw;\n\ny = if(sw,osa,sample);\ny = sample;\nx = .5 - mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q10;\n\nr = q12;//.5 + sin(mo)*.5;\ng = q13;//.5 + sin(mo + 1.0472)*.5;\nb = q11;//.5 + sin(mo + 2.0944)*.5;\n\na = 1 - abs(mod)*12;\na = 1-sw;\na = max(0,min(a,1));\n\nx = (x-0.5)*(q31/q32) + 0.5;\ny = (y-0.5)*(q32/q31) + 0.5;"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"smoothing":0},"init_eqs_str":"a.sw=0;a.q12=0;a.mo=0;a.q13=0;a.osa=0;a.q31=0;a.q11=0;a.q10=0;a.mod=0;a.q32=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*below(a.sample,1);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value2,2)*sign(a.value2)*.5;a.mod=a.value2;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:a.sample;a.y=a.sample;a.x=.5+.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q10;a.r=a.q13;a.g=a.q11;a.b=a.q12;a.a=1-12*Math.abs(a.mod);a.a=1-a.sw;a.a=Math.max(0,Math.min(a.a,1));a.x=(a.x-.5)*div(a.q31,a.q32)+.5;a.y=(a.y-.5)*div(a.q32,a.q31)+.5;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*below(sample,1);\n\nosa = sample*above(sample,0);\n\nmod = pow(value2*2,2)*sign(value2)*.5;\n\nmod = value2;\nmod = mod*sw;\n\ny = if(sw,osa,sample);\ny = sample;\nx = .5 + mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q10;\n\nr = q13;//.5 + sin(mo)*.5;\ng = q11;//.5 + sin(mo + 1.0472)*.5;\nb = q12;//.5 + sin(mo + 2.0944)*.5;\n\na = 1 - abs(mod)*12;\na = 1-sw;\na = max(0,min(a,1));\n\nx = (x-0.5)*(q31/q32) + 0.5;\ny = (y-0.5)*(q32/q31) + 0.5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.rad=0;a.negswitchy=0;a.q12=0;a.q13=0;a.q6=0;a.q1=0;a.q5=0;a.mytime=0;a.q9=0;a.x=0;a.bass_thresh=0;a.dy_r=0;a.pi23=0;a.my=0;a.bas_eff=0;a.negswtichy=0;a.q31=0;a.ti=0;a.q11=0;a.q10=0;a.q4=0;a.dx_r=0;a.zm=0;a.mx=0;a.bass_eff=0;a.vol=0;a.runvol=0;a.bass_tresh=0;a.q2=0;a.negswitchx=0;a.q3=0;a.q32=0;a.q7=0;a.vectmult=0;a.colorrun=0;a.q8=0;a.myzoom=(.00001<Math.abs(below(a.q1,a.q6))?.3*a.dx:.00001<Math.abs(equal(a.q2,a.q5))?.2*(1-a.dx):.00001<Math.abs(above(a.q3,a.q4))?.3*a.dy:.2*\n(1-a.dy)+(.00001<Math.abs(equal(a.q4,a.q3))?.3*a.dx:.00001<Math.abs(above(a.q5,a.q2))?.25*(1-a.dx):.00001<Math.abs(below(a.q6,a.q1))?.3*a.dy:.25*(1-a.dy)+(.00001<Math.abs(equal(a.q7,a.q9))?.3*a.dx:.00001<Math.abs(below(a.q8,a.q7))?.2*(1-a.dx):.00001<Math.abs(equal(a.q9,a.q6))?.3*a.dy:.2*(1-a.dy))))+.8-.02*Math.min(a.q6+a.q1,.5)*a.bass_eff;","frame_eqs_str":"a.wave_r+=.45*(.5*Math.sin(.701*a.time)+.3*Math.cos(.438*a.time));a.wave_b-=.4*(.5*Math.sin(4.782*a.time)+.5*Math.cos(.722*a.time));a.wave_g+=.4*Math.sin(1.931*a.time);a.vol=.15*(a.bass_att+a.bass+a.mid+a.mid_att);a.bass_eff=Math.max(Math.max(a.bass,a.bass_att)-1,0);a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.q1=a.bass_eff+Math.sin(a.time*a.mytime*4);a.q2=a.bas_eff+Math.cos(a.time*a.mytime*2);a.q3=a.bass_eff+\nMath.abs(a.rad+.5)+a.q2*a.q5;a.q4=a.bass_thresh+4.5*a.dx_r*a.dy_r*a.dx*a.dy;a.q5=a.bass_tresh+Math.cos(.4)*a.dx_r*a.dy_r;a.q6=a.bass_thresh+.1*Math.atan(Math.abs(-a.rad+.5))*a.q1;a.q7=.00001<Math.abs(above(a.bass+a.bass_att,2))?-1.5+a.bass+a.bass_att:0;a.q8=below(a.rad-.1*a.x,.18);a.q9=.00001<Math.abs(above(a.rad,.5))?.9+a.rad:.5+.1*mod(3*a.bass,1E3);a.zoom=a.q9+.4;a.q10=a.time;a.q31=a.pixelsx;a.q32=a.pixelsy;a.colorrun=.05;a.pi23=1.33333333333332*Math.asin(-1);a.vol=a.treb*a.colorrun+a.mid*a.colorrun+\na.bass*a.colorrun;a.runvol=.00001<Math.abs(above(a.runvol,6.2831852))?0:a.runvol+a.vol;a.monitor=a.runvol;a.q11=.5*(Math.sin(a.runvol-0*a.pi23)+1);a.q12=.5*(Math.sin(a.runvol-1*a.pi23)+1);a.q13=.5*(Math.sin(a.runvol-2*a.pi23)+1);a.mv_r=a.q11;a.mv_g=a.q12;a.mv_b=a.q13;a.negswitchx=.00001<Math.abs(mod(Math.floor(rand(2)),2))?-1:1;a.negswitchy=.00001<Math.abs(mod(Math.floor(rand(2)),2))?-1:1;a.vectmult=10;a.mv_x=(a.bass+a.treb)*a.vectmult;a.mv_y=(a.mid+a.treb)*a.vectmult;a.mv_l=.07*(a.bass+a.treb+a.mid);\na.mv_dx=.03*(a.bass+a.treb+a.mid)*a.negswitchx;a.mv_dy=.03*(a.bass+a.treb+a.mid)*a.negswtichy;","pixel_eqs_str":"a.rot=a.zoom;a.ti=.3*a.time;a.mx=a.x-.5+.25*(Math.sin(1.1278*a.ti)+Math.sin(.7458*a.ti));a.my=a.y-.5+.25*(Math.sin(.9454*a.ti)+Math.sin(1.2378*a.ti));a.zm=Math.cos(16*pow(a.mx*a.mx*1.5+a.my*a.my,.5)-a.q1)*a.q4;a.dx=a.zm*(a.x-a.mx);a.dy=a.zm*(a.y-a.my);a.mx=a.x-.5+.25*(Math.sin(1.3488*a.ti)+Math.sin(.8552*a.ti));a.my=a.y-.5+.25*(Math.sin(.7366*a.ti)+Math.sin(1.1447*a.ti));a.zm=Math.cos(16*pow(a.mx*a.mx*1.5+a.my*a.my,.5)-a.q2)*a.q5;a.dx+=a.zm*a.mx;a.dy+=a.zm*a.my;a.mx=a.x-.5+\n.25*(Math.sin(1.3544*a.ti)+Math.sin(.8926*a.ti));a.my=a.y-.5+.25*(Math.sin(.9021*a.ti)+Math.sin(1.2468*a.ti));a.zm=Math.cos(16*pow(a.mx*a.mx*1.5+a.my*a.my,.5)-a.q3)*a.q6;a.dx+=a.zm*a.mx;a.dy+=a.zm*a.my;","init_eqs_eel":"myzoom=if(below(q1,q6),0.3*dx,if(equal(q2,q5),0.2*(1-dx),if(above(q3,q4),0.3*dy,0.2*(1-dy)+if(equal(q4,q3),0.3* dx, if(above(q5,q2),0.25*(1-dx),if(below(q6,q1),0.3*dy,0.25*(1-dy)+if(equal(q7,q9),0.3*dx, if(below(q8,q7),0.2*(1-dx),if(equal(q9,q6),0.3*dy,0.2*(1-dy)))))))))) + .8 - 0.02*(min(q6+q1,.5))*bass_eff;","frame_eqs_eel":"wave_r = wave_r + 0.45*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));\nwave_b = wave_b - 0.4*(0.5*sin(time*4.782)+0.5*cos(time*0.722));\nwave_g = wave_g + 0.4*sin(time*1.931);\nvol=0.15*(bass_att+bass+mid+mid_att);\nbass_eff = max(max(bass,bass_att)-1,0);\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\nq1=bass_eff+sin(time*mytime*4);\nq2=bas_eff+cos(time*mytime*2);\nq3=bass_eff+abs(rad+.5)+(q2*q5);\nq4=bass_thresh+abs(.9*5)*(dx_r*dy_r)*(dx*dy);\nq5=bass_tresh+cos(.2*2)*(dx_r*dy_r);\nq6=bass_thresh+0.1*(atan(abs(-rad+.5)))*q1;\nq7=if(above(bass+bass_att,2),-1.5+bass+bass_att,0);\nq8=below(rad- 0.1*x,0.18);\nq9=if(above(rad,.5),.9+rad,.5+bass*3%1000*.1);\n//dx=q8;\nzoom=q9+0.4;\n//monitor=zoom;\nq10=time;\nq31=pixelsx;\nq32=pixelsy;\n\ncolorrun=.05;\npi23=4*asin(-1)*.33333333333333;\nvol=treb*colorrun+mid*colorrun+bass*colorrun;\nrunvol=if(above(runvol,3.1415926*2),0,runvol+vol);\nmonitor=runvol;\nq11= (sin(runvol-0*pi23)+1)*.5;\nq12= (sin(runvol-1*pi23)+1)*.5;\nq13= (sin(runvol-2*pi23)+1)*.5;\n\n\n\nmv_r=q11;//.04*bass;\nmv_g=q12;//.04*mid;\nmv_b=q13;//.04*treb;\nnegswitchx=if(int(rand(2))%2,-1,1);\nnegswitchy=if(int(rand(2))%2,-1,1);\nvectmult=10;\nmv_x=(bass+treb)*vectmult;\nmv_y=(mid+treb)*vectmult;\nmv_l=(bass+treb+mid)*.07;\nmv_dx=(bass+treb+mid)*.03*negswitchx;\nmv_dy=(bass+treb+mid)*.03*negswtichy;","pixel_eqs_eel":"rot=zoom;\nti = time*.3;\n\nmx = x - .5 + .25*(sin(ti*1.1278) + sin(ti*.7458));\nmy = y - .5 + .25*(sin(ti*.9454) + sin(ti*1.2378));\nzm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q1)*q4;\ndx = zm*(x-mx);\ndy = zm*(y-my);\n\nmx = x - .5 + .25*(sin(ti*1.3488) + sin(ti*.8552));\nmy = y - .5 + .25*(sin(ti*.7366) + sin(ti*1.1447));\nzm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q2)*q5;\ndx = dx + zm*mx;\ndy = dy + zm*my;\n\nmx = x - .5 + .25*(sin(ti*1.3544) + sin(ti*.8926));\nmy = y - .5 + .25*(sin(ti*.9021) + sin(ti*1.2468));\nzm = cos(pow(mx*mx*1.5 + my*my,.5)*16 - q3)*q6;\ndx = dx + zm*mx;\ndy = dy + zm*my;","warp":"vec2 xlat_mutablers;\nvec2 xlat_mutableuv1;\n shader_body { \n  vec2 uv_1;\n  vec3 xlat_varmod_2;\n  vec2 uv2_3;\n  float z_4;\n  vec3 ret_5;\n  xlat_mutableuv1 = ((uv_orig - 0.5) * aspect.xy);\n  vec2 x_6;\n  x_6 = (xlat_mutableuv1 * 5.0);\n  float tmpvar_7;\n  tmpvar_7 = ((16.0 * sqrt(\n    dot (x_6, x_6)\n  )) + time);\n  xlat_mutablers = (clamp ((\n    (sin(tmpvar_7) / cos(tmpvar_7))\n   * \n    normalize(xlat_mutableuv1)\n  ), vec2(-5.0, -5.0), vec2(5.0, 5.0)) / 2.0);\n  vec2 tmpvar_8;\n  tmpvar_8 = sin((xlat_mutableuv1 * (q31 * 4.0)));\n  z_4 = (1.0 - cos((8.0 * \n    (sqrt(dot (tmpvar_8, tmpvar_8)) * ((abs(xlat_mutableuv1.x) + abs(xlat_mutableuv1.y)) + q32))\n  )));\n  z_4 = (z_4 * (0.2 * clamp (\n    dot (vec3(z_4), vec3(0.32, 0.49, 0.29))\n  , 0.0, 1.0)));\n  float tmpvar_9;\n  tmpvar_9 = float((z_4 <= 1.0));\n  xlat_mutablers = ((q28 * xlat_mutablers) + ((1.0 - q28) * xlat_mutablers.yx));\n  uv_1 = (uv_orig + ((\n    ((1.0 - tmpvar_9) * 3.0)\n   * xlat_mutablers.yx) + (\n    ((0.5 * tmpvar_9) * z_4)\n   * \n    sign(z_4)\n  )));\n  mat2 tmpvar_10;\n  vec4 tmpvar_11;\n  tmpvar_11 = (_qb * 0.15);\n  tmpvar_10[uint(0)] = tmpvar_11.xy;\n  tmpvar_10[1u] = tmpvar_11.zw;\n  vec2 tmpvar_12;\n  tmpvar_12.x = q5;\n  tmpvar_12.y = q6;\n  uv2_3 = (((10.0 * xlat_mutableuv1) + (0.3 * \n    sin(((xlat_mutableuv1 * 16.0) + (4.0 * tmpvar_12)))\n  )) * 3.0);\n  vec4 tmpvar_13;\n  tmpvar_13 = texture (sampler_main, uv_1);\n  vec3 tmpvar_14;\n  tmpvar_14 = ((tmpvar_13.xyz + vec3((0.15 * \n    abs(((0.0225 / sqrt(\n      ((xlat_mutableuv1 * 0.8) * tmpvar_10)\n    .x)) / xlat_mutableuv1.x))\n  ))) + vec3((q26 * clamp (\n    (0.00065 / sqrt(dot (uv2_3, uv2_3)))\n  , 0.0, 1.0))));\n  xlat_varmod_2 = (0.98 - ((texture (sampler_noise_lq, \n    ((50.0 * uv_1) + (time * 0.1))\n  ) - 0.25).xyz * (tmpvar_13.xyz - \n    (0.5 * ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1))\n  )));\n  ret_5 = (((\n    (1.0 - tmpvar_9)\n   * tmpvar_14) * xlat_varmod_2) + ((tmpvar_9 * tmpvar_14) * xlat_varmod_2));\n  ret_5 = (ret_5 * (vec3(0.89, 0.96, 0.965) + (0.05 * texture (sampler_noise_lq, uv_1)).xyz));\n  vec3 tmpvar_15;\n  tmpvar_15.z = 0.0;\n  tmpvar_15.xy = uv_orig;\n  ret_5 = (ret_5 * (vec3(1.84, 1.67, 1.68) * dot (tmpvar_15, vec3(0.32, 0.49, 0.29))));\n  ret_5 = (ret_5 * 0.88);\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_5;\n  ret = tmpvar_16.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = (ret_2 - 1.6);\n  ret_2 = (ret_2 + mix (ret_2, (ret_2 * \n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - (((texture (sampler_blur3, uv).xyz * scale3) + bias3) * 2.0))\n  ), pow (hue_shader.zxy, ret_2)));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"float3 mus;\nfloat2 rs, uv1, uv6, uv7, uv8;\nfloat dx,dy;\n\nshader_body {\nuv = uv_orig;\nuv1 = (uv-.5) * aspect.xy;\n\n//BACKGROUND\nfloat z = 16*length(uv1*5)+time;\nfloat2 uvn =normalize(uv1);\nrs = clamp(tan(z)*uvn,-5,5)/2;\n\n//CRYSTAL\nfloat mult = q31*4;\nuv7 = sin(uv1*mult);\nuv8 = uv7;\nfloat dist = length(uv8);\ndist *= (abs(uv1.x) + abs(uv1.y))+ q32;\n\nfloat ang2 = atan2 (uv8.y,uv8.x);\nang2 =  1*floor (1* ang2);\nfloat2 dir = .095*uv8+float2 (cos(ang2), sin(ang2));\n\nz = (1-cos(8*dist));\nz *= .200*saturate (lum(z));\n\n//ADD\nfloat mask = (z <= 1); //momentan beliebig\nrs = q28*rs + (1-q28)*rs.yx;\nuv += (1-mask)*3*(rs.yx) + .5*mask*z*normalize(z.x);\n\n//ZENTRALSTRAHL\nuv6 = mul (uv1*.8,float2x2(_qb*.150));\nmus = .3*abs(0.0225/(sqrt(uv6.x))/uv1.x)*(.5);\n\n//DOTS\nfloat2 uv2 = 10*uv1+.3*sin(uv1*16+4*float2 (q5,q6));\nuv2 *= 3;\nfloat3 dots = q26*saturate(.00065/(length(uv2)));\nfloat3 blur = GetBlur1(frac(uv));\nfloat3 crisp= GetPixel(uv);\nfloat3 diff = (crisp) - .5*blur;\nfloat3 ret1 = crisp + mus + dots;\n\nfloat3 mod = tex2D (sampler_noise_lq,50*uv+time*.1)-.25;\nmod = .98 - mod*diff;\n\nret = (1-mask)*ret1*mod + mask*ret1*mod;\nret *= float3(.89,.96,.965)+.05*tex2D(sampler_noise_lq,uv);\nret *= 2*float3(.92,.835,.84)*lum(uv_orig);\n\nret *= .98- .1;\n\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    //ret = ret.xxy;\n    ret -= 1.6;\n    ret += lerp(ret,ret*(GetBlur1(uv)-GetBlur3(uv)*2),pow(hue_shader.zxy,ret));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n} "}