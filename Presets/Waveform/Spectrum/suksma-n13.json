{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0,"echo_zoom":1.002,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":2.581,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.01,"sy":1.1155,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":2.56,"mv_y":48,"mv_dx":0.36,"mv_dy":-0.8,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":54,"y":1,"rad":0.13478,"r":0,"g2":0,"border_a":0},"init_eqs_str":"a.ti=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.ti=a.q1;a.rad=a.q2;a.x=.5*(a.ti-Math.floor(a.ti));","init_eqs_eel":"","frame_eqs_eel":"ti = q1;\nrad = q2;\nx = (ti - int(ti))*.5;\n\n"},{"baseVals":{"enabled":1,"sides":54,"y":0,"rad":0.13478,"r":0,"g2":0,"border_a":0},"init_eqs_str":"a.ti=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.ti=a.q1;a.rad=a.q2;a.x=1-.5*(a.ti-Math.floor(a.ti));","init_eqs_eel":"","frame_eqs_eel":"ti = q1;\nrad = q2;\nx = 1-(ti - int(ti))*.5;\n"},{"baseVals":{"enabled":1,"sides":43,"textured":1,"x":0.69,"rad":0.5482,"tex_ang":3.89557,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_g":0,"border_a":0},"init_eqs_str":"a.q3=0;a.q4=0;a.ti=0;a.q5=0;","frame_eqs_str":"a.rad=.4+a.q3;a.tex_zoom=.8*div(1,a.rad);a.x=.5+a.q3;a.tex_ang=-a.q4;a.ti=a.q5+Math.sin(1.234*a.time);a.x=.5+a.q3*Math.sin(a.ti);a.y=.5+a.q3*Math.cos(a.ti)*.5;","init_eqs_eel":"","frame_eqs_eel":"rad = .4 + q3;\n\ntex_zoom = 1/rad*.8;\n\nx = .5 + q3;\n\ntex_ang = -q4;\n\nti = q5 + sin(time*1.234);\n\nx = .5 + q3*sin(ti);\ny = .5 + q3*cos(ti)*.5;"},{"baseVals":{"enabled":1,"sides":43,"thickoutline":1,"textured":1,"rad":0.54822,"tex_ang":0.87965,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.q4=0;a.ti=0;a.q5=0;","frame_eqs_str":"a.rad=.4+a.q3;a.tex_zoom=.8*div(1,a.rad);a.x=.5-a.q3;a.tex_ang=a.q4;a.ti=a.q5+Math.sin(.948*a.time)+3.1416;a.x=.5+a.q3*Math.sin(a.ti)*1.5;a.y=.5+a.q3*Math.cos(a.ti)*.5;","init_eqs_eel":"","frame_eqs_eel":"rad = .4 + q3;\n\ntex_zoom = 1/rad*.8;\n\nx = .5 - q3;\n\ntex_ang = q4;\n\nti = q5 + sin(time*.948) + 3.1416;\n\nx = .5 + q3*sin(ti)*1.5;\ny = .5 + q3*cos(ti)*.5;"}],"waves":[{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"smoothing":0},"init_eqs_str":"a.sw=0;a.osa=0;a.mod=0;a.mo=0;a.q1=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*above(a.sample,0);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value1,2)*sign(a.value1)*.5;a.mod=a.value1;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:a.sample;a.y=.7*a.sample+.15;a.x=.5-.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q1;a.r=.5+.5*Math.sin(a.mo);a.g=.5+.5*Math.sin(a.mo+1.0472);a.b=.5+.5*Math.sin(a.mo+2.0944);a.a=1-12*Math.abs(a.mod);a.a=1-a.sw;a.a=Math.max(0,Math.min(a.a,1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*above(sample,0);\n\nosa = sample*above(sample,0);\n\nmod = pow(value1*2,2)*sign(value1)*.5;\n\nmod = value1;\nmod = mod*sw;\n\ny = if(sw,osa,sample);\ny = sample*.7+.15;\nx = .5 - mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\nr = .5 + sin(mo)*.5;\ng = .5 + sin(mo + 1.0472)*.5;\nb = .5 + sin(mo + 2.0944)*.5;\n\na = 1 - abs(mod)*12;\na = 1-sw;\na = max(0,min(a,1));"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"smoothing":0},"init_eqs_str":"a.sw=0;a.osa=0;a.mod=0;a.mo=0;a.q1=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*below(a.sample,1);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value2,2)*sign(a.value2)*.5;a.mod=a.value2;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:a.sample;a.y=.7*a.sample+.15;a.x=.5+.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q1;a.r=.5+.5*Math.sin(a.mo);a.g=.5+.5*Math.sin(a.mo+1.0472);a.b=.5+.5*Math.sin(a.mo+2.0944);a.a=1-12*Math.abs(a.mod);a.a=1-a.sw;a.a=Math.max(0,Math.min(a.a,1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*below(sample,1);\n\nosa = sample*above(sample,0);\n\nmod = pow(value2*2,2)*sign(value2)*.5;\n\nmod = value2;\nmod = mod*sw;\n\ny = if(sw,osa,sample);\ny = sample*.7+.15;\nx = .5 + mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\nr = .5 + sin(mo)*.5;\ng = .5 + sin(mo + 1.0472)*.5;\nb = .5 + sin(mo + 2.0944)*.5;\n\na = 1 - abs(mod)*12;\na = 1-sw;\na = max(0,min(a,1));"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"smoothing":0,"r":0,"g":0,"b":0},"init_eqs_str":"a.sw=0;a.osa=0;a.mod=0;a.mo=0;a.q1=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*above(a.sample,0);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value1,2)*sign(a.value1)*.5;a.mod=a.value1;a.mod=a.mod;a.y=.00001<Math.abs(a.sw)?a.osa:a.sample;a.y=.7*a.sample+.15;a.x=.5-.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q1;a.a=Math.max(0,Math.min(a.a,1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*above(sample,0);\n\nosa = sample*above(sample,0);\n\nmod = pow(value1*2,2)*sign(value1)*.5;\n\nmod = value1;\nmod = mod;\n\ny = if(sw,osa,sample);\ny = sample*.7+.15;\nx = .5 - mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\n//r = .5 + sin(mo)*.5;\n//g = .5 + sin(mo + 1.0472)*.5;\n//b = .5 + sin(mo + 2.0944)*.5;\n\n//a = 1 - abs(mod)*12;\n//a = 1-sw;\na = max(0,min(a,1));"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"smoothing":0,"r":0,"g":0,"b":0},"init_eqs_str":"a.sw=0;a.osa=0;a.mod=0;a.mo=0;a.q1=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*above(a.sample,0);a.osa=a.sample*above(a.sample,0);a.mod=pow(2*a.value2,2)*sign(a.value2)*.5;a.mod=a.value2;a.mod=a.mod;a.y=.00001<Math.abs(a.sw)?a.osa:a.sample;a.y=.7*a.sample+.15;a.x=.5+.5*a.mod;a.osa=a.sample;a.mo=3.7+6*a.mod+a.q1;a.a=Math.max(0,Math.min(a.a,1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*above(sample,0);\n\nosa = sample*above(sample,0);\n\nmod = pow(value2*2,2)*sign(value2)*.5;\n\nmod = value2;\nmod = mod;\n\ny = if(sw,osa,sample);\ny = sample*.7+.15;\nx = .5 + mod*.5;\n\nosa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\n//r = .5 + sin(mo)*.5;\n//g = .5 + sin(mo + 1.0472)*.5;\n//b = .5 + sin(mo + 2.0944)*.5;\n\n//a = 1 - abs(mod)*12;\n//a = 1-sw;\na = max(0,min(a,1));"}],"init_eqs_str":"a.tic=0;a.vt=0;a.bt=0;a.q1=0;a.q5=0;a.mid_avg=0;a.tt=0;a.tin=0;a.bass_avg=0;a.vav=0;a.q4=0;a.mt=0;a.mod=0;a.ra=0;a.treb_avg=0;a.vol=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.vol=.333333*(a.bass_att+a.treb_att+a.mid_att);a.ra=.25*div(1,a.tic);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.ra=.05*div(1,a.tic);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.ra=.05*div(1,a.tic);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;\na.vt+=a.tic*a.vav;a.q1=a.time;a.q2=.1*a.vav;a.q3=.02+.05*a.bass_avg;a.q4=4.7116+.25*(a.treb_avg+a.mid_avg);a.q5=a.vt;a.monitor=a.q4;a.rot=.025*(.7+.25*a.vav);","pixel_eqs_str":"a.mod=.1;a.cx=.00001<Math.abs(above(a.y,.5))?-1:2;","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\ntic = min(time-tin,.1);\ntin = time;\n\nvol = (bass_att + treb_att + mid_att)*.333333;\n\nra = 1/tic*.25;\n\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\nra = 1/tic*.05;\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\n\nra = 1/tic*.05;\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\n\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\nvt = vt + tic*vav;\n\nq1 = time;\n\nq2 = vav*.1;\n\nq3 = .02 + bass_avg*.05; // size & displacement rad\n\nq4 = 3.1416 + 1.57 + (treb_avg + mid_avg)*.25; // tex_ang\n\n//q4 = (treb_avg - mid_avg);\n//q4 = bass_avg - (treb_avg + mid_avg)*.5;\n//q4 = -bass_avg;\n\n\nq5 = vt; // xy movement\n\nmonitor = q4;\n\n//rot = .025*max(.7,vav);\nrot = .025*(.7 + vav*.25);\n//rot = .025*vav;","pixel_eqs_eel":"mod = .1;\n\n//sw = above(x,.5);\n\n//dy = mod*pow(abs(y - .5)*2,1.5)*sign(y-.5);\n\n//dy = .2*sign(y-.5)*sw;\n\n//sy = 1 + (1-sw)*.116;\n\n\n//rot = .05;\n\ncx = if(above(y,.5),-1,2);","warp":"uniform sampler2D sampler_rand02;\n shader_body { \n  float m_2;\n  vec2 v_3;\n  vec2 c_4;\n  vec3 ret_5;\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, uv);\n  c_4 = (((\n    (uv - 0.5)\n   * vec2(\n    (sin(((\n      (q5 - q6)\n     * \n      (q14 - q5)\n    ) * 0.1)) + 1.01)\n  )) * aspect.xy) - vec2(1.0136, 0.31));\n  v_3 = vec2((sin(q5) * 0.05));\n  m_2 = 0.0;\n  for (int n_1 = 0; float(n_1) < 30.0; n_1++) {\n    vec2 tmpvar_7;\n    tmpvar_7.x = ((v_3.x * v_3.x) - (v_3.y * v_3.y));\n    tmpvar_7.y = ((v_3.x * v_3.y) * 2.0);\n    v_3 = (tmpvar_7 + c_4);\n    float tmpvar_8;\n    tmpvar_8 = dot (v_3, v_3);\n    if ((tmpvar_8 < 24.0)) {\n      m_2 += 1.0;\n    };\n    v_3 = clamp (v_3, vec2(-5.0, -5.0), vec2(5.0, 5.0));\n  };\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_main, v_3);\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_rand02, v_3);\n  if ((m_2 == 30.0)) {\n    ret_5 = vec3(0.0, 0.0, 0.0);\n  } else {\n    vec4 tmpvar_11;\n    tmpvar_11.w = 1.0;\n    tmpvar_11.x = sin(((m_2 / 4.0) + (q1 * 3.0)));\n    tmpvar_11.y = sin(((m_2 / 5.0) - (q2 * 3.0)));\n    tmpvar_11.z = sin(((m_2 / 7.0) + q22));\n    ret_5 = ((tmpvar_11 / 4.0) + 0.75).xyz;\n  };\n  ret_5 = (((\n    (ret_5 * tmpvar_6.xyz)\n   * 1.8) + (tmpvar_9.xyz * tmpvar_10.xyz)) * 0.8);\n  ret_5 = (ret_5 * 0.98);\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_5;\n  ret = tmpvar_12.xyz;\n }","comp":" shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv).xxx;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((pow (\n    mix (vec3((((texture (sampler_blur1, uv).xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)), tmpvar_1, pow (tmpvar_1, vec3(0.5, 0.5, 0.5)))\n  , vec3(0.5, 1.2, 8.0)) * 1.25) - 0.25);\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"sampler sampler_rand02;\nfloat4  texsize_rand02;    // ...it's smart enough to get it from just this.\n//float4  texsize_rand03;    // ...it's smart enough to get it from just this.\n  \nshader_body\n{\n    // sample previous frame\n    float3 main = tex2D( sampler_main, uv ).xyz;\nfloat s = 1;\nfloat zoom = sin((q5-q6)*(q14-q5)*.1)*s + s*1.01;\nfloat2 Zoom = float2(zoom,zoom);\nfloat2 Pan = float2(1.0136,.31);\n float2 c = (uv - 0.5) * Zoom * aspect - Pan;\nfloat2 v = 0+sin(q5)*.05;\n\nfloat m = 0;\n\nconst float r = 5;\nfloat its = 30;\nfor (int n = 0; n < its; n++)\n{\nv = float2(v.x * v.x - v.y * v.y, v.x * v.y * 2) + c;\n\nif (dot(v, v) < (r*r - 1))\nm++;\n\nv = clamp(v, -r, r);\n}\n\nfloat3 man = tex2D( sampler_main, v ).xyz;\nfloat3 color = tex2D( sampler_rand02, v ).xyz;\n\n\nif (m == its)\nret = 0;\nelse\nret = (float4(sin(m/4+q1*3), sin(m/5-q2*3), sin(m/7+q22), 1) / 4 + 0.75); \n\nret = (ret*main*1.8\n  + man * color)*.8;\n//ret=man;\n    ret *= 0.98; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n\nret = tex2D(sampler_main, uv).x,\n\nret = lerp (\nGetBlur1(uv).x + GetBlur3(uv).x,\nret,\npow(ret,.5));\n  \n//  ret = tex2D(sampler_main, uv).x - GetBlur1(uv).x;\n    ret = pow(ret,float3(.5,1.2,8))*1.25 -.25;\n    ret *= 1.0; //gamma\n \n}"}