{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":1,"echo_zoom":2.221,"echo_alpha":0.6,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0,"wave_scale":0.2,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":1,"modwavealphaend":1,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.01,"wave_g":0,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":1,"mv_y":1,"mv_a":0},"shapes":[{"baseVals":{"sides":23,"additive":1,"thickoutline":1,"textured":1,"num_inst":64,"rad":0.1661,"tex_zoom":0.9997,"a":0.15,"r2":0.2,"g2":0,"b2":0.7,"a2":0.2,"border_g":0.5,"border_b":0.15,"border_a":0.5,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":7,"rad":0.03333,"r":0,"g2":0,"border_a":1},"init_eqs_str":"a.vol=0;","frame_eqs_str":"a.x=.01*Math.floor(rand(100))+a.instance-a.instance;a.y=.01*Math.floor(rand(100))+a.instance-a.instance;a.a=1;a.a2=1;a.border_a=0;a.vol=a.bass+a.mid+a.treb;a.rad=div(Math.floor(rand(Math.floor(a.vol))),7)+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01+instance-instance;\ny = int(rand(100))*.01+instance-instance;\n\na =1;\na2 =1;\nborder_a = 0;\nvol=bass+mid+treb;\nrad = int(rand(int(vol)))/7+instance-instance;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.03333,"r":0,"g2":0,"border_a":1},"init_eqs_str":"a.vol=0;","frame_eqs_str":"a.x=.01*Math.floor(rand(100));a.y=.01*Math.floor(rand(100));a.a=.00001<Math.abs(above(mod(a.frame,7),0))?0:1;a.a2=.00001<Math.abs(above(mod(a.frame,7),0))?0:1;a.border_a=0;a.vol=a.bass+a.mid+a.treb;a.rad=.1*a.vol;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01;\ny = int(rand(100))*.01;\n\na = if(above(frame%7,0),0,1);\na2 = if(above(frame%7,0),0,1);\nborder_a = 0;\n\nvol=bass+mid+treb;\nrad = vol*.1;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.03333,"r":0,"g2":0,"border_a":1},"init_eqs_str":"a.vol=0;","frame_eqs_str":"a.x=.01*Math.floor(rand(100));a.y=.01*Math.floor(rand(100));a.a=.00001<Math.abs(above(mod(a.frame,7),0))?0:1;a.a2=.00001<Math.abs(above(mod(a.frame,7),0))?0:1;a.border_a=0;a.vol=a.bass+a.mid+a.treb;a.rad=.1*a.vol;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01;\ny = int(rand(100))*.01;\n\na = if(above(frame%7,0),0,1);\na2 = if(above(frame%7,0),0,1);\nborder_a = 0;\n\nvol=bass+mid+treb;\nrad = vol*.1;"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_str":"a.freqlvl=0;a.myamp=0;a.myfreq=0;a.myaltfreq=0;a.pi=0;a.pi23=0;a.fade=0;","frame_eqs_str":"","point_eqs_str":"a.freqlvl=.49+a.value1*(-30-div(1,.9*a.sample))*.05;a.myamp=.00001<Math.abs(below(a.freqlvl,.5))?a.freqlvl:.49;a.myfreq=1.05*log10(log10(a.sample)+3)+.37;a.myaltfreq=.2*a.time+4*a.myfreq-.8;a.pi=3.14159265359;a.pi23=.66666666666*a.pi;a.fade=2*(1-a.myamp-.49);a.r=.5*(Math.sin(a.myaltfreq)+1)*a.fade;a.g=.5*(Math.sin(a.myaltfreq-1*a.pi23)+1)*a.fade;a.b=.5*(Math.sin(a.myaltfreq-2*a.pi23)+1)*a.fade;a.x=a.myamp;a.y=a.myfreq;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":" freqLvl    = .49+(value1*((-30-1/((sample)*.9))))*.05;//-10.4*pow(value1,1.81)/pow(value1,1.8)+10.2;\n myAmp      = if(below(freqLvl,0.5),freqLvl,0.49);  \n myFreq     = log10(log10(sample)+3)*1.05+0.37;//13.5*pow(sample,0.01)-12.645;\n myAltFreq  = time*0.2+myFreq*04-0.8;\n \n Pi         = 3.14159265359;\n Pi23       = 2*Pi*0.33333333333;\n fade       = 2*(1-myAmp-.49);\n\n r         = (sin(myAltFreq       )+1)*0.5*fade;\n g         = (sin(myAltFreq-1*Pi23)+1)*0.5*fade;\n b         = (sin(myAltFreq-2*Pi23)+1)*0.5*fade;\n x         = myAmp;\n y         = myFreq;\n\n// x         = .97+(value1*((-30-1/((sample)*.5))))*.05;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_str":"a.freqlvl=0;a.myamp=0;a.myfreq=0;a.myaltfreq=0;a.pi=0;a.pi23=0;a.fade=0;","frame_eqs_str":"","point_eqs_str":"a.freqlvl=.51-a.value2*(-30-div(1,.9*a.sample))*.05;a.myamp=.00001<Math.abs(above(a.freqlvl,.5))?a.freqlvl:.51;a.myfreq=1.05*log10(log10(a.sample)+3)+.37;a.myaltfreq=.2*a.time+4*a.myfreq-.8;a.pi=3.14159265358;a.pi23=.66666666666*a.pi;a.fade=2*(a.myamp-.49);a.r=.5*(Math.sin(a.myaltfreq)+1)*a.fade;a.g=.5*(Math.sin(a.myaltfreq-1*a.pi23)+1)*a.fade;a.b=.5*(Math.sin(a.myaltfreq-2*a.pi23)+1)*a.fade;a.x=a.myamp;a.y=a.myfreq;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"  freqLvl   = .51-(value2*((-30-1/((sample)*.9))))*.05;//10.4*pow(value2,1.01)/value2-9.2;\n  myAmp     = if(above(freqLvl,0.5),freqLvl,0.51);\n  myFreq    = log10(log10(sample)+3)*1.05+0.37;\n  myAltFreq = time*0.2+myFreq*04-0.8;\n  \n  Pi        = 3.14159265358;\n  Pi23      = 2*Pi*0.33333333333;\n  fade      = 2.0*(myAmp-.49);\n\n r         = (sin(myAltFreq       )+1)*0.5*fade;\n g         = (sin(myAltFreq-1*Pi23)+1)*0.5*fade;\n b         = (sin(myAltFreq-2*Pi23)+1)*0.5*fade;\n x         = myAmp;\n y         = myFreq;  "},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"smoothing":0.8},"init_eqs_str":"a.runtreb=0;a.sw=0;a.mo=0;a.q1=0;a.pi23=0;a.osa=0;a.mod=0;a.runbass=0;a.vol=0;a.runmid=0;","frame_eqs_str":"","point_eqs_str":"a.sw=(1-a.sw)*below(a.sample,1);a.osa=a.sample*above(a.sample,0);a.mod=a.value2-a.value1;a.mod*=a.sw;a.y=.00001<Math.abs(a.sw)?a.osa:a.sample;a.y=.4*(1-1.6*a.sample)+.42;a.x=4*a.mod+.5;a.mo=3.7+6*a.mod+a.q1;a.pi23=1.3333332*Math.asin(-1);a.runbass=.01*a.bass+a.runbass;a.runtreb=.01*a.treb+a.runtreb;a.runmid=.01*a.mid+a.runmid;a.vol=.01*(a.runbass+a.runtreb+a.runmid);a.r=.5*(Math.sin(.01*a.mo+a.vol-0*a.pi23)+1);a.g=.5*(Math.sin(.01*a.mo+a.vol-1*a.pi23)+1);a.b=.5*(Math.sin(.01*\na.mo+a.vol-2*a.pi23)+1);a.a=1-12*Math.abs(a.mod);a.a=1-a.sw;a.a=Math.max(0,Math.min(a.a,1));","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*below(sample,1);\n\nosa = sample*above(sample,0);\n\n//mod = pow((value1-value2)*2,2)*sign(value1-value2)*.5;\n\nmod = value2-value1;\nmod = mod*sw;\n\ny = if(sw,osa,sample);\ny = (1-sample*1.6)*.4+.42;\nx = 0 + mod*4+.5;\n\n//osa = sample;\n\nmo = 3.7 + mod*6 + q1;\n\npi23 = 4*asin(-1)*.3333333;\nrunbass = bass*.01+runbass;\nruntreb = treb*.01+runtreb;\nrunmid  = mid *.01+runmid ;\nvol = (runbass+runtreb+runmid)*.01;\n\nr = (sin(mo*.01 + vol - 0*pi23)+1)*.5;\ng = (sin(mo*.01 + vol - 1*pi23)+1)*.5;\nb = (sin(mo*.01 + vol - 2*pi23)+1)*.5;\n\na = 1 - abs(mod)*12;\na = 1-sw;\na = max(0,min(a,1));"},{"baseVals":{"sep":144,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"r":0.2,"g":0.11,"a":0.51,"enabled":0},"init_eqs_str":"t2 = 0;\nt3 = 0;\nt4 = 0;\nab = 1;","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\nab = 1;","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.beatb=0;a.q6=0;a.beatt=0;a.q1=0;a.beatthard=0;a.q5=0;a.beatbhard=0;a.vol_att=0;a.q4=0;a.beatmhard=0;a.vol=0;a.beatm=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.beatb=above(a.bass,a.bass_att);a.beatbhard=.00001<Math.abs(a.beatb)?a.bass-.9*a.bass_att:a.beatbhard;a.beatm=above(a.mid,a.mid_att);a.beatmhard=.00001<Math.abs(a.beatm)?a.mid-.9*a.mid_att:a.beatmhard;a.beatt=above(a.treb,a.treb_att);a.beatthard=.00001<Math.abs(a.beatt)?a.treb-.9*a.treb_att:a.beatthard;a.vol=a.bass+a.mid+a.treb;a.vol_att=a.bass_att+a.mid_att+a.treb_att;a.q1=a.beatb;a.q2=a.beatbhard;a.q3=a.beatm;a.q4=a.beatmhard;a.q5=a.beatt;a.q6=a.beatthard;a.decay=.999;a.wrap=\n1;","pixel_eqs_str":"a.cx=mod(20*a.x*a.q2,20*a.q6);a.cy=mod(20*a.y*a.q4,20*a.q6);a.rot=.02*a.q1+.002*a.q3-.02*a.q6;a.zoom=1-.1*a.q2*a.q1+.2*a.q6*a.q5-.1*a.q4*a.q3;","init_eqs_eel":"","frame_eqs_eel":"beatb=above(bass,bass_att);\nbeatbhard=if(beatb,bass-bass_att*.9,beatbhard);\n\nbeatm=above(mid,mid_att);\nbeatmhard=if(beatm,mid-mid_att*.9,beatmhard);\n\nbeatt=above(treb,treb_att);\nbeatthard=if(beatt,treb-treb_att*.9,beatthard);\n\nvol=bass+mid+treb;\nvol_att=bass_att+mid_att+treb_att;\n\n\nq1=beatb;\nq2=beatbhard;\nq3=beatm;\nq4=beatmhard;\nq5=beatt;\nq6=beatthard;\n\ndecay=.999;\nwrap=1;","pixel_eqs_eel":"cx=(x*20*q2)%(20*q6);\ncy=(y*20*q4)%(20*q6);\n\nrot=.02*q1+.002*q3-.02*q6;\nzoom=1-(.1*q2*q1)+.2*q6*q5-.1*q4*q3;","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((texture (sampler_main, (\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \n      mix (uv_orig, uv, vec2(4.0, 4.0))\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\n      ((texture (sampler_blur1, mix (uv_orig, uv, vec2(-8.0, -8.0))).xyz * scale1) + bias1)\n    , vec3(0.32, 0.49, 0.29))) * 8.0)))\n   + \n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.3)\n  )).xyz + (\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\n   * 0.004).xyz) + -0.001);\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (uv.x + 0.001);\n  tmpvar_3.y = uv.y;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\n  float tmpvar_5;\n  tmpvar_5 = abs(((\n    (((tmpvar_2.x + tmpvar_2.y) + tmpvar_2.z) - tmpvar_4.x)\n   - tmpvar_4.y) - tmpvar_4.z));\n  if ((tmpvar_5 > 0.1)) {\n    ret_1 = ((texture (sampler_blur2, uv).xyz * scale2) + bias2);\n  } else {\n    ret_1 = ((texture (sampler_blur3, uv).xyz * scale3) + bias3);\n  };\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_blur3, uv);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_blur1, uv);\n  ret_1 = (ret_1 + ((1.5 * \n    ((tmpvar_6.xyz * scale3) + bias3)\n  ) - (\n    (tmpvar_7.xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 * 2.25);\n  float tmpvar_8;\n  tmpvar_8 = dot (ret_1, vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_9;\n  tmpvar_9 = mix ((0.75 * vec3(tmpvar_8)), (vec3(tmpvar_8) * (\n    ((tmpvar_6.xyz * scale3) + bias3)\n   - \n    ((tmpvar_7.xyz * scale1) + bias1)\n  )), ((\n    ((0.1 * rand_preset).xyz + (0.5 * ((hue_shader * \n      (1.0 + treb_att)\n    ) - (treb_att - 1.75))))\n   + \n    (0.5 * _qa.xyz)\n  ) * vec3(tmpvar_8)));\n  ret_1 = (tmpvar_9 * tmpvar_9);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_1;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n\n\nfloat error     = 0.3;        // maximum random pixel offset\nfloat diffusion = 0.004;      // dither strength\nfloat fadeout   = -0.001;    // may be minor 1/256 due to the error diffusion dither;\n\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;\nfloat magic = lum(GetPixel(lerp(uv_orig,uv, 4))) - lum(GetBlur1(lerp(uv_orig,uv,-8)));\nuv = lerp(uv_orig,uv, magic*8 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;\nret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;\n\n}","comp_hlsl":"shader_body\n{\n\nfloat3 orig=tex2D(sampler_main,uv);\nfloat3 nex=tex2D(sampler_main,float2(uv.x+0.001,uv.y));\n\nif(abs(orig.x+orig.y+orig.z-nex.x-nex.y-nex.z)>0.1)\n{ret=GetBlur2(uv);}\nelse{ret=GetBlur3(uv);}; \n\nret += 1.5*GetBlur3(uv)-GetBlur1(uv);\n\nret *= 2.25;\nret = lum(ret);\nfloat3 hue_shader_x = (hue_shader*(1+treb_att))-(treb_att-1.75);\nret = lerp(.75*ret,ret*(GetBlur3(uv)-GetBlur1(uv)),(0.1*rand_preset+0.5*hue_shader_x+0.5*_qa.xyz)*ret);\nret *= ret; //darken\n//ret *= ret;\n//ret *= sqrt(ret); //brighten\n//ret = 1-ret; //invert\n}"}