{"version":2,"baseVals":{"rating":5,"decay":0.88,"wave_mode":7,"wave_a":0.001,"warp":0.01,"wave_r":0,"wave_g":0.4,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0.49,"rad":2.66718,"tex_zoom":0.3696,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.4},"init_eqs_str":"a.tex_capture=0;a.basstime=0;a.ob_r=0;a.ob_g=0;a.ob_b=0;","frame_eqs_str":"a.tex_capture=(.00001<Math.abs(equal(mod(a.frame,2),1))?1:0)-above(a.bass,1);a.x=.5+.1*Math.sin(a.basstime);a.y=.5+.1*Math.sin(1.457*a.basstime);a.ob_r=.5*Math.sin(1.12*a.basstime);a.ob_g=.5*Math.sin(1.5*a.basstime);a.ob_b=.5*Math.sin(2.12*a.basstime);","init_eqs_eel":"","frame_eqs_eel":"tex_capture = if(equal(frame%2,1),1,0) - above(bass,1);\n//ang = basstime;\n\nx = 0.5 + 0.1*sin(basstime);\ny = 0.5 + 0.1*sin(basstime*1.457);\n\n\n\nob_r = 0.5 * sin(basstime*1.12);\nob_g = 0.5 * sin(basstime*1.5);\nob_b = 0.5 * sin(basstime*2.12);"},{"baseVals":{"textured":1,"rad":2.66718,"ang":1.06814,"tex_zoom":0.3697,"g":1,"b":1,"a":0.1,"a2":0.2,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_capture = above(bass,1);","init_eqs_eel":"","frame_eqs_eel":"tex_capture = above(bass,1);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"smoothing":0,"a":0.5},"init_eqs_str":"a.z=0;a.basstime=0;a.xs=0;a.x_int=0;a.v=0;a.zs=0;a.ys=0;a.y_int=0;a.speed=0;","frame_eqs_str":"","point_eqs_str":"a.speed=sqrt(.01*a.bass_att);a.v=1E4*a.sample+a.value2*a.bass*.1;a.xs+=Math.sin(1*a.v)*a.speed*Math.atan(1.51*a.v);a.ys+=Math.sin(1*a.v)*a.speed;a.zs+=Math.cos(1.1*a.v)*a.speed;a.x=.5+.5*Math.sin(.1*a.xs)*Math.cos(2*a.time+a.xs)*Math.atan(a.basstime+.1*a.zs);a.y=.5+.5*Math.sin(.1*a.ys)*Math.cos(2.1*a.time+a.xs)*Math.sin(.4*a.basstime+.12*a.zs);a.z=.5+.5*Math.sin(.1*a.zs)*Math.cos(2.1*a.time+a.zs);a.z=Math.cos(a.z*a.sample)*a.sample*a.bass*1.2+2;a.x_int=.6*a.x+.2;a.y_int=a.y;\na.x=a.x_int*a.z*.25+.25;a.y=a.y_int*a.z*.25+.25;a.r=.5*Math.sin(6.22*a.time)*a.x_int+.6;a.g=.4+.4*Math.sin(5.307*a.time)*a.x_int;a.b=.4+.4*Math.sin(4.959*a.time)*a.y_int;a.xs=.00001<Math.abs(above(a.xs,1E3))?0:a.xs;a.ys=.00001<Math.abs(above(a.ys,1E3))?0:a.ys;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = sqrt(bass_att*0.01);\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v*1)*speed*atan(v*1.51);\nys = ys + sin(v*1)*speed;\nzs = zs + cos(v*1.1)*speed;\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs)*atan(basstime + zs*0.1);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs)*sin(basstime*0.4 + zs*0.12);\nz = 0.5 + 0.5*sin(zs*0.1)*cos(time*2.1 + zs);\n\n//x = x + sample*0.1;\n//y = y + sample*0.1;\n\n\nz = cos(z*sample)*sample*bass*1.2 + 2;\n\nx_int = x*0.6 + 0.2;\ny_int = y;\n\nx = x_int*z*0.25 + 0.25;\ny = y_int*z*0.25 + 0.25;\n\n\nr = 0.5 + 0.5*sin(time*6.22)*x_int + 0.1;\ng = 0.4 + 0.4*sin(time*5.307)*x_int;\nb = 0.4 + 0.4*sin(time*4.959)*y_int;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"spectrum":1,"smoothing":0,"a":0.6},"init_eqs_str":"a.z=0;a.basstime=0;a.xs=0;a.x_int=0;a.v=0;a.zs=0;a.ys=0;a.y_int=0;a.speed=0;","frame_eqs_str":"","point_eqs_str":"a.speed=sqrt(.011*a.bass_att);a.v=1E4*a.sample+a.value2*a.bass*.1;a.xs+=Math.sin(1*a.v)*a.speed*Math.atan(1.51*a.v);a.ys+=Math.sin(1*a.v)*a.speed;a.zs+=Math.cos(1.1*a.v)*a.speed;a.x=.5+.5*Math.sin(.1*a.xs)*Math.cos(2*a.time+a.xs)*Math.atan(a.basstime+.1*a.zs);a.y=.5+.5*Math.sin(.1*a.ys)*Math.cos(2.1*a.time+a.xs)*Math.sin(.4*a.basstime+.12*a.zs);a.z=.5+.5*Math.sin(.1*a.zs)*Math.cos(2.1*a.time+a.zs);a.z=Math.cos(a.z*a.sample)*a.sample*a.bass+2;a.x_int=.6*a.x+.2;a.y_int=a.y;a.x=\n-a.x_int*a.z*.25+.75;a.y=a.y_int*a.z*.25+.25;a.r=.5*Math.sin(6.22*a.time)*a.x_int+.6;a.g=.4+.4*Math.sin(5.307*a.time)*a.x_int;a.b=.4+.4*Math.sin(4.959*a.time)*a.y_int;a.xs=.00001<Math.abs(above(a.xs,1E3))?0:a.xs;a.ys=.00001<Math.abs(above(a.ys,1E3))?0:a.ys;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = sqrt(bass_att*0.011);\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + sin(v*1)*speed*atan(v*1.51);\nys = ys + sin(v*1)*speed;\nzs = zs + cos(v*1.1)*speed;\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs)*atan(basstime + zs*0.1);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs)*sin(basstime*0.4 + zs*0.12);\nz = 0.5 + 0.5*sin(zs*0.1)*cos(time*2.1 + zs);\n\n//x = x + sample*0.1;\n//y = y + sample*0.1;\n\n\nz = cos(z*sample)*sample*bass + 2;\n\nx_int = x*0.6 + 0.2;\ny_int = y;\n\nx = -x_int*z*0.25 + 0.75;\ny = y_int*z*0.25 + 0.25;\n\n\nr = 0.5 + 0.5*sin(time*6.22)*x_int + 0.1;\ng = 0.4 + 0.4*sin(time*5.307)*x_int;\nb = 0.4 + 0.4*sin(time*4.959)*y_int;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"speed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = x - sample*0.01;\n\nx = x*0.6 + 0.2;\ny = y + bass*0.1;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*6.22) + 0.1;\ng = 0.4 + 0.4*sin(time*5.307);\nb = 0.4 + 0.4*sin(time*4.959)*x;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = x - sample*0.01;\n\nx = x*0.6 + 0.2;\ny = y + bass*0.1;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*6.22) + 0.1;\ng = 0.4 + 0.4*sin(time*5.307);\nb = 0.4 + 0.4*sin(time*4.959)*x;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"speed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\ny = y - sample*0.01;\n\nx = x*0.6 + 0.2;\ny = y + bass*0.1;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*6.22) + 0.1;\ng = 0.4 + 0.4*sin(time*5.307);\nb = 0.4 + 0.4*sin(time*4.959)*x;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\ny = y - sample*0.01;\n\nx = x*0.6 + 0.2;\ny = y + bass*0.1;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*6.22) + 0.1;\ng = 0.4 + 0.4*sin(time*5.307);\nb = 0.4 + 0.4*sin(time*4.959)*x;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_str":"a.basstime=0;a.q2=0;a.q1=0;a.othertime=0;a.q3=0;a.basstime=.1*Math.floor(rand(1E3));a.othertime=.1*Math.floor(rand(1E3));","frame_eqs_str":"a.basstime+=.0003*a.bass;a.q2=a.basstime;a.q1=.00001*a.basstime;a.othertime+=.03*a.bass;a.q3=a.othertime;","pixel_eqs_str":"a.zoom=1;a.rot=0;","init_eqs_eel":"basstime = int(rand(1000))*0.1;\nothertime = int(rand(1000))*0.1;","frame_eqs_eel":"basstime  = basstime + bass*0.0003;\nq2 = basstime;\nq1 = basstime*0.00001;\n\nothertime  = othertime + bass*0.03;\nq3 = othertime;","pixel_eqs_eel":"zoom = 1;\nrot = 0;","warp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  vec3 tmpvar_3;\n  tmpvar_3 = (texture (sampler_noise_lq, (uv + q3)) - 0.5).xyz;\n  uv_1 = (uv + (tmpvar_3 * 0.01).xy);\n  ret_2 = (texture (sampler_main, ((uv_1 * 0.98) + (\n    ((texture (sampler_blur3, ((\n      (uv_1 - 0.5)\n     * 0.9) + 0.5)).xyz * scale3) + bias3)\n   * 0.1).xy)).xyz + (tmpvar_3 * 0.01));\n  ret_2 = (ret_2 - 0.01);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_2;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = -(uv);\n  ret_1 = (((texture (sampler_main, uv).xyz + \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) * 3.0)\n  ) + texture (sampler_main, tmpvar_2).xyz) + ((\n    (texture (sampler_blur3, tmpvar_2).xyz * scale3)\n   + bias3) * 3.0));\n  ret_1 = (ret_1 - 0.1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"sampler sampler_grad3;\n\nshader_body\n{\n\n    float3 txr = float3(uv,q1*0.1);\n    float2  uv2 =  uv;\n    uv2 = uv + texsize.zx*(q3,q3);\n    float3 color = tex2D(sampler_noise_lq, uv2) - 0.5; \n //   color += tex2D(sampler_noise_mq, uv2) - 0.5; \n//    color += tex2D(sampler_noise_hq, uv2) - 0.5; \n    uv += color*0.01; \n    //uv.y += abs(color*0.01) + bass_att*0.01;\n    \n    float2x2 rot = { cos(q9), sin(q9),\n                      -sin(q9), cos(q9) }; \n\n\n    ret = tex2D( sampler_main, (uv)*0.98  + GetBlur3((uv - 0.5)*0.9 + 0.5)*0.1 ).xyz + (color)*0.01;    \n    ret = ret-0.01;// - 0.08; //or try: ret -= 0.004;\n  \n}","comp_hlsl":"\nshader_body\n{\n    float2 uv_echo = uv*float2(-1,-1);\n    ret =  tex2D(sampler_main, uv).xyz + GetBlur3(uv)*3 + tex2D(sampler_main, uv_echo).xyz + GetBlur3(uv_echo)*3;\n    //ret *= 4.00; //gamma\n    ret -= 0.1;\n}\n"}