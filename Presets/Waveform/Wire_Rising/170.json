{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":0.97,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"darken_center":1,"brighten":1,"darken":1,"wave_a":4.1,"wave_scale":0.535,"wave_smoothing":0,"modwavealphaend":1.3,"warpscale":2.853,"zoomexp":0.99984,"zoom":0.99968,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_x":0.519,"ob_size":0,"mv_x":12.8,"mv_y":9.6,"mv_l":2.55,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.wave_r+=.1*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.1*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.wave_b+=.1*(.6*Math.sin(.91*a.time)+.4*Math.sin(.92*a.time));a.mv_r=a.wave_r;a.mv_b=a.wave_b;a.mv_g=a.wave_g;a.q1=1.5*div(pow(1+1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,6),a.fps);a.mv_a=.00001<Math.abs(above(a.bass-1.2,1))?1:a.bass-1;","pixel_eqs_str":"a.zoom=1.1+.15*a.rad*a.q1;","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.100*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\nmv_r = wave_r;\nmv_b = wave_b;\nmv_g = wave_g;\nq1 = 1.5*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\n//q1 = 0.6*(bass+bass_att);\nmv_a = if(above(bass-1.2,1),1,bass-1.0);","pixel_eqs_eel":"zoom = 1.1 + rad*0.15*q1;","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.007))) - texture (sampler_main, (uv - vec2(0.005, 0.007)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_2.y = dot ((texture (sampler_main, (uv + vec2(-0.007, 0.005))) - texture (sampler_main, (uv - vec2(-0.007, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  vec3 tmpvar_3;\n  tmpvar_3 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  ret_1 = (((\n    -(tmpvar_3)\n   * 0.1) + (\n    (texture (sampler_main, (uv - ((tmpvar_2 * \n      (1.0 - tmpvar_3)\n    .xy) * 0.02))).xyz + ((vec3(dot (texture (sampler_noise_lq, \n      ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.5) + (0.1 * rand_frame).xy)\n    ), vec4(0.32, 0.49, 0.29, 0.0))) * 0.12) - (0.01 * pow (\n      (1.0 - rad)\n    , 4.0))))\n   * 1.1)) * 0.97);\n  ret_1 = (ret_1 - 0.05);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 fret_1;\n  vec2 uvp_2;\n  uvp_2.x = uv.x;\n  uvp_2.y = (uv.y * 0.38);\n  fret_1 = (((1.0/(\n    ((texture (sampler_blur2, uvp_2).xyz * scale2) + bias2)\n  )) - (texture (sampler_main, uvp_2).xyz * \n    ((texture (sampler_blur1, uvp_2).xyz * scale1) + bias1)\n  )) - ((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) * 0.55));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (1.0 - (fret_1 * fret_1));\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"sampler sampler_pw_noise_lq;\nfloat3 ret1;\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\n\nfloat3 noiseVal = lum(tex2D(sampler_noise_lq, corr*uv*.5+ .1*rand_frame));\n\nfloat2 hor = float2 (.005,0.007);\nfloat2 ver = float2 (-0.007,.005);\n\nfloat f0 = 1;\nfloat dx = f0*lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\nfloat dy = f0*lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\nfloat2 zz= float2 (dx,dy);\nfloat3 blur = GetBlur1(uv) ;\n\nzz *= 1-blur;\n\nfloat3 crisp = tex2D(sampler_main,uv-zz*.02);\n\ncrisp += noiseVal*(.12) -0.01*pow(1-rad,4);\n\nret1 = -blur*.1+ crisp*1.1;\n\nret = ret1;\n ret *= 0.97;\n  ret -= 0.05;\n}","comp_hlsl":"shader_body\n{\n//initial textures:\n//1. Main image\n     float3 base=tex2D(sampler_main, uv);\n//2. High quality noise sampler\n     float3 hinoise=tex2D(sampler_noise_hq, uv);\n\n//declaring modifying vars:\n//1. Perspective UV value\n     float2 uvp=uv;\n     uvp.y*=.38;\n//2. Blur values\n     float3 blpi=GetBlur1(uvp);\n     float3 blpii=GetBlur2(uvp);\n     float3 blpiii= GetBlur3(uvp);\n     float3 blmi=GetBlur1(uv);\n     float3 blmii=GetBlur2(uv);\n     float3 blmiii=GetBlur3(uv);\n\n//Perspective modified samplers\n//1. Perspective Main\n     float3 pret=tex2D(sampler_main, uvp);\n\n//final return value     \nfloat3 fret=(1/blpii-(pret*blpi)).xyz;\nfret-=blmii*0.55;\n\nret=1-fret*fret;  \n}"}