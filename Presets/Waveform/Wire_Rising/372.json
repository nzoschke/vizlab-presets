{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":1.22,"warpscale":7.98,"zoom":0.06855,"cx":0.53,"dx":1,"warp":6.16591,"sx":100,"sy":79.68974,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.2,"ob_g":0.8,"ob_b":0.8,"ib_size":0,"ib_r":0,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":0.61163,"tex_zoom":0.73458,"g":0.9,"b":0.84,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang=sin(time*0.5)*0.004","init_eqs_eel":"","frame_eqs_eel":"ang=sin(time*0.5)*0.004"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"additive":1},"init_eqs_str":"a.s=0;a.xp=0;a.yp=0;a.zp=0;a.t1=0;a.x_screen=0;a.y_screen=0;a.advance=0;","frame_eqs_str":"a.advance+=a.bass_att*a.bass_att*.004;a.advance=.00001<Math.abs(above(a.advance,2))?a.advance-2:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(7.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(5.4*a.s)+Math.sin(17.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(14.4*a.s)+Math.cos(2.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(a.xp,a.zp)+.5;a.y_screen=div(a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;a.r=1;a.g=.7;a.b=.2;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ bass_att*bass_att*0.004;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4)+sin(s*17.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=0.7;\nb=0.2;\n\n"},{"baseVals":{"enabled":1,"additive":1,"g":0.7,"b":0.02},"init_eqs_str":"a.s=0;a.xp=0;a.yp=0;a.zp=0;a.t1=0;a.x_screen=0;a.y_screen=0;a.advance=0;","frame_eqs_str":"a.advance+=a.mid_att*a.mid_att*.003;a.advance=.00001<Math.abs(above(a.advance,2))?0:a.advance;a.t1=a.advance;","point_eqs_str":"a.s=6.28*a.sample;a.xp=Math.sin(a.s)+Math.sin(.34*a.s)+Math.sin(5.3*a.s)+Math.sin(13.8*a.s);a.xp*=.2;a.yp=Math.cos(a.s)+Math.sin(.24*a.s)+Math.cos(7.4*a.s)+Math.sin(17.7*a.s);a.yp*=.2;a.zp=Math.cos(a.s)+Math.cos(5.24*a.s)+Math.cos(14.4*a.s)+Math.cos(1.7*a.s);a.zp*=.25;a.zp=a.zp+1-a.t1;a.zp=.00001<Math.abs(below(a.zp,0))?a.zp+2:a.zp;a.a=1-.5*a.zp;a.zp*=.7;a.x_screen=div(-a.xp,a.zp)+.5;a.y_screen=div(-a.yp,a.zp)+.5;a.x=a.x_screen;a.y=a.y_screen;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+mid_att*mid_att*0.003;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*5.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*7.4)+sin(s*17.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*14.4)+cos(s*1.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=-yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\n//r=0.6;\n//g=1.0;\n//b=0.2;\n\n"},{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_str":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.14)+cos(s*13.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*2.24)+cos(s*37.4)+cos(s*15.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.14)+cos(s*13.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*2.24)+cos(s*37.4)+cos(s*15.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;"},{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_str":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*14.3)+sin(s*19.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.34)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*27.4)+cos(s*14.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;","init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\nadvance=if( above(advance,2) , 0, advance);\nt1=advance","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*14.3)+sin(s*19.8);\nxp=xp*0.20;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.34)+cos(s*17.4)+sin(s*37.7);\nyp=yp*0.20;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24)+cos(s*27.4)+cos(s*14.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=1;\nb=1;"}],"init_eqs_str":"a.aaa=0;","frame_eqs_str":"a.aaa=a.bass_att-.62;a.zoom+=.05*Math.sin(.3*a.time);a.mv_a+=.012*Math.sin(1.33*a.time);a.wave_r=a.mv_r;a.wave_g=a.mv_g;a.wave_b=a.mv_b;a.rot=.5+.33*Math.sin(a.time)+Math.cos(.22*(a.time+655));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"aaa=bass_att-0.62;\n\n\nzoom=zoom+0.05*sin(0.3*time);\n\n\nmv_a=mv_a+0.012*sin(time*1.33);\nwave_r=mv_r;\nwave_g=mv_g;\nwave_b=mv_b;\n\nrot=0.5+sin(time)*0.33+cos((time+655)*0.22);\n\n\n//This preset was originally made for my skin - \"Kieslowski - Red\". Do a search for it at www.1001winampskins.com","pixel_eqs_eel":"","warp":"","comp":" shader_body { \n  vec3 fret_1;\n  vec2 uvp_2;\n  uvp_2.x = uv.x;\n  uvp_2.y = (uv.y * 0.38);\n  fret_1 = (((1.0/(\n    ((texture (sampler_blur2, uvp_2).xyz * scale2) + bias2)\n  )) - (texture (sampler_main, uvp_2).xyz * \n    ((texture (sampler_blur1, uvp_2).xyz * scale1) + bias1)\n  )) - ((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) * 1.35));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (1.0 - (fret_1 * fret_1));\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\n//initial textures:\n//1. Main image\n     float3 base=tex2D(sampler_main, uv);\n//2. High quality noise sampler\n     float3 hinoise=tex2D(sampler_noise_hq, uv);\n\n//declaring modifying vars:\n//1. Perspective UV value\n     float2 uvp=uv;\n     uvp.y*=.38;\n//2. Blur values\n     float3 blpi=GetBlur1(uvp);\n     float3 blpii=GetBlur2(uvp);\n     float3 blpiii= GetBlur3(uvp);\n     float3 blmi=GetBlur1(uv);\n     float3 blmii=GetBlur2(uv);\n     float3 blmiii=GetBlur3(uv);\n\n//Perspective modified samplers\n//1. Perspective Main\n     float3 pret=tex2D(sampler_main, uvp);\n\n//final return value     \nfloat3 fret=(1/blpii-(pret*blpi)).xyz;\nfret-=blmii*1.35;\n\nret=1-fret*fret;  \n}"}