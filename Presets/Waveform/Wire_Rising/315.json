{"version":2,"baseVals":{"rating":5,"gammaadj":1.93,"decay":0.96,"echo_zoom":1.007,"echo_orient":1,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":4.1,"wave_scale":0.535,"wave_smoothing":0,"modwavealphaend":1.3,"warpanimspeed":2.599,"warpscale":0.01,"zoomexp":0.9999,"fshader":1,"zoom":1.00949,"warp":0.01,"sy":1.0017,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_x":0.519,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":12.8,"mv_y":9.6,"mv_l":2.4,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.redsine=0;a.bluesine=0;a.greenif=0;a.q5=0;a.q4=0;a.redif=0;a.blueif=0;a.vol=0;a.greensine=0;a.decay=.1;","frame_eqs_str":"a.vol=.3333*(a.bass+a.mid+a.treb_att);a.redsine=.5+.15*a.bass*Math.sin(3*a.time);a.greensine=.5+.15*a.mid*Math.sin(2*a.time);a.bluesine=.5+.15*a.treb*Math.sin(a.time);a.redif=.00001<Math.abs(above(a.bass,1.2))?a.redsine:.00001<Math.abs(above(a.redif,.95))?0:.85*a.redif;a.greenif=.00001<Math.abs(above(a.mid,1.2))?a.greensine:.00001<Math.abs(above(a.greenif,.95))?0:.85*a.greenif;a.blueif=.00001<Math.abs(above(a.treb,1.2))?a.bluesine:.00001<Math.abs(above(a.blueif,.95))?0:.85*\na.blueif;a.q4=.5+.05*Math.sin(.52*a.time)*Math.cos(.39*a.time);a.q5=.5+.05*Math.sin(.44*a.time)*Math.cos(.71*a.time);","pixel_eqs_str":"a.zoom=a.zoom+.015*a.rad+.025*a.treb_att*a.rad;a.sy+=.1*Math.cos(Math.sin(40*a.y+a.time)-.5*Math.sin(20*a.x+a.time)*a.treb_att);a.sx+=.075*Math.sin(Math.cos(40*a.x+a.time)+.5*Math.cos(20*a.y+a.time)*a.treb_att);","init_eqs_eel":"decay=0.1;","frame_eqs_eel":"vol=(bass+mid+treb_att)*.3333;\n\nredsine=.5+.15*bass*sin(time*3);\ngreensine=.5+.15*mid*sin(time*2);\nbluesine=.5+.15*treb*sin(time);\n\nredif=if(above(bass,1.2),redsine,if(above(redif,.95),0,redif*.85));\ngreenif=if(above(mid,1.2),greensine,if(above(greenif,.95),0,greenif*.85));\nblueif=if(above(treb,1.2),bluesine,if(above(blueif,.95),0,blueif*.85));\n\n//q1=redif;\n//q2=greenif;\n//q3=blueif;\n\nq4=.5+.05*sin(time*.52)*cos(time*.39);\nq5=.5+.05*sin(time*.44)*cos(time*.71);","pixel_eqs_eel":"zoom=zoom+.015*rad+.025*treb_att*rad;\n\nsy=sy+.1*cos(sin(y*40+time)-sin(20*x+time)*.5*treb_att);\nsx=sx+.075*sin(cos(x*40+time)+cos(y*20+time)*.5*treb_att);\n\n//q6=dxm;\n//q7=dym;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * vec3(0.979, 0.976, 0.981));\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec3 fret_1;\n  vec2 uvp_2;\n  uvp_2.x = uv.x;\n  uvp_2.y = (uv.y * 0.38);\n  fret_1 = (((1.0/(\n    ((texture (sampler_blur2, uvp_2).xyz * scale2) + bias2)\n  )) - (texture (sampler_main, uvp_2).xyz * \n    ((texture (sampler_blur1, uvp_2).xyz * scale1) + bias1)\n  )) - ((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) * 0.55));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (1.1 - (fret_1 * fret_1));\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n// sample previous frame\nret = tex2D( sampler_main, uv);\n    \n// darken the color channels at different rates\nret *= float3(.979,.976,.981); \n}","comp_hlsl":"shader_body\n{\n//initial textures:\n//1. Main image\n     float3 base=tex2D(sampler_main, uv);\n//2. High quality noise sampler\n     float3 hinoise=tex2D(sampler_noise_hq, uv);\n\n//declaring modifying vars:\n//1. Perspective UV value\n     float2 uvp=uv;\n     uvp.y*=.38;\n//2. Blur values\n     float3 blpi=GetBlur1(uvp);\n     float3 blpii=GetBlur2(uvp);\n     float3 blpiii= GetBlur3(uvp);\n     float3 blmi=GetBlur1(uv);\n     float3 blmii=GetBlur2(uv);\n     float3 blmiii=GetBlur3(uv);\n\n//Perspective modified samplers\n//1. Perspective Main\n     float3 pret=tex2D(sampler_main, uvp);\n\n//final return value     \nfloat3 fret=(1/blpii-(pret*blpi)).xyz;\nfret-=blmii*0.55;\n\nret=1.1-fret*fret;  \n}"}