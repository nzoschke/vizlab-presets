{"version":2,"baseVals":{"rating":5,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.327,"wave_scale":0.869,"wave_smoothing":0,"wave_mystery":-0.66,"warpanimspeed":100,"warpscale":0.01,"zoomexp":0.1791,"zoom":1.049,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"textured":1,"rad":0.1474,"tex_zoom":0.99999,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.r=.5+.5*Math.sin(.75*a.time);a.b=.5+.5*Math.sin(1.5*a.time);a.g=.5+.5*Math.sin(2*a.time);a.r2=a.r;a.b2=a.b;a.g2=a.g;a.rad=.16-.02*a.bass_att;","init_eqs_eel":"","frame_eqs_eel":"r = .5+.5*sin(time*.75);\nb = .5+.5*sin(time*1.5);\ng = .5+.5*sin(time*2);\nr2 = r;\nb2= b;\ng2 = g;\n\nrad = 0.16-.02*bass_att;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.trebc=0;a.bassc=0;","frame_eqs_str":"a.warp=0;a.trebc=.5*a.trebc+.5*a.treb;a.bassc=.5*a.bassc+.5*a.bass;a.zoom=1.015+.012*below(a.trebc,.5*a.bassc)+.012*below(a.trebc,a.bassc)+.012*below(a.trebc,1.5*a.bassc)+.012*below(a.trebc,2*a.bassc);","pixel_eqs_str":"a.warp=.75*above(a.rad,.2-.05*a.treb)*below(a.rad,.25-.05*a.treb)*(a.bass_att-.5);","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\ntrebc = .5*trebc+.5*treb;\nbassc = .5*bassc+.5*bass;\n\nzoom = 1.015+below(trebc,0.5*bassc)*.012+below(trebc,bassc)*.012+below(trebc,1.5*bassc)*.012+below(trebc,2*bassc)*.012;","pixel_eqs_eel":"warp = .75*above(rad,.2-.05*treb)*below(rad,.25-.05*treb)*(bass_att-.5);","warp":"","comp":" shader_body { \n  vec3 plastic_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 8.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6.x = q1;\n  tmpvar_6.y = q2;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.x;\n  tmpvar_7.y = tmpvar_5.x;\n  vec2 x_8;\n  x_8 = ((uv - (tmpvar_7 * 5.0)) - tmpvar_6);\n  plastic_1.x = (5.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_8, x_8)), 0.5)\n  )));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_4.y;\n  tmpvar_9.y = tmpvar_5.y;\n  vec2 x_10;\n  x_10 = ((uv - (tmpvar_9 * 5.0)) - tmpvar_6);\n  plastic_1.y = (5.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_10, x_10)), 0.5)\n  )));\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_4.z;\n  tmpvar_11.y = tmpvar_5.z;\n  vec2 x_12;\n  x_12 = ((uv - (tmpvar_11 * 5.0)) - tmpvar_6);\n  plastic_1.z = (5.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_12, x_12)), 0.5)\n  )));\n  ret_2 = (plastic_1 * texture (sampler_main, uv).xyz);\n  ret_2 = (ret_2 * 3.0);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_2;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\n    //flexi's bump map effect\n\n    float2 d = texsize.zw*8; \n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) ); \n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) ); \n    float2 light_pos = float2(q1,q2); \n    float3 col = float3(5,5,5); \n    float c = 5; \n    float dd = 16; \n    float3 plastic; \n    plastic.x = col.x/(1+dd*pow(length( uv - float2(dx.x,dy.x)*c - light_pos),0.5)); \n    plastic.y = col.y/(1+dd*pow(length( uv - float2(dx.y,dy.y)*c - light_pos),0.5)); \n    plastic.z = col.z/(1+dd*pow(length( uv - float2(dx.z,dy.z)*c - light_pos),0.5)); \n\n    ret = plastic*GetPixel(uv); \n    ret *= 3;\n\n\n}"}