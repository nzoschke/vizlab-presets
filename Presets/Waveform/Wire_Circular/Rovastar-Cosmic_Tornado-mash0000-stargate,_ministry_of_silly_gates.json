{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.985,"echo_zoom":1,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":4.1,"wave_scale":0.475,"wave_smoothing":0.63,"wave_mystery":0.06,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r=.5+.5*Math.sin(div(a.time,3));a.wave_b=.5+.5*Math.sin(457*a.time);","pixel_eqs_str":"a.zoom=1-.1*Math.log(sqrt(2)-a.rad);a.rot+=1.7*(a.rad-.4)*Math.max(.1*Math.log(sqrt(2)-a.rad),Math.min(1.5*(a.bass_att-1.2),4));","init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(time/3);\nwave_b = 0.5+ 0.5*sin(time*457);","pixel_eqs_eel":"zoom = 1- 0.1*log(sqrt(2)-rad);\nrot = rot + (rad-0.4)*1.7*max(0.1*log(sqrt(2)-rad),min((bass_att-1.2)*1.5,4));","warp":" shader_body { \n  vec2 uv_1;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * ((1.0 + \n    (q1 * uv_1.y)\n  ) + (q2 * uv_1.x)));\n  uv_1 = (uv_1 + 0.5);\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv_1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((max (tmpvar_2.xyz, texture (sampler_main, \n    (uv_1 + (vec2(0.0, 13.0) * ((tmpvar_2.xy - 0.5) * texsize.zw)))\n  ).xyz) - 0.003) * 0.98);\n  ret = tmpvar_3.xyz;\n }","comp":"","warp_hlsl":"shader_body\n{\n    uv -= 0.5;\n    uv *= (1 + q1*uv.y + q2*uv.x);\n    uv += 0.5;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n\n    ret = max(ret,  tex2D(sampler_main, uv + (ret.xy-0.5)*texsize.zw*13*float2(0,1)).xyz );   \n \n    // darken (decay) over time\n    ret = (ret - 0.003)*0.98;\n}","comp_hlsl":""}