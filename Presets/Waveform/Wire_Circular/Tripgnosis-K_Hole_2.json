{"version":2,"baseVals":{"rating":5,"gammaadj":1.998,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_a":1.028,"wave_scale":0.591,"wave_smoothing":0,"wave_mystery":-0.06,"modwavealphastart":0.95,"modwavealphaend":0.75,"zoomexp":0.31218,"zoom":0.9802,"warp":0.01,"sx":1.0201,"sy":1.0201,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.007,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.movement=0;a.q1=0;","frame_eqs_str":"a.movement=a.movement+.01*(a.bass+a.bass_att)+.001*pow(a.bass+1,3);a.q1=a.movement;a.monitor=a.q1;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"movement = movement + 0.01*(bass+bass_att) + 0.001*pow(bass+1,3);\nq1 = movement;\nmonitor =q1;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 xfer_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - 0.5);\n  tmpvar_3 = texture (sampler_main, (tmpvar_4 + 0.5));\n  ret_2 = (tmpvar_3.xyz / ((tmpvar_3.x + tmpvar_3.y) + tmpvar_3.z));\n  ret_2 = texture (sampler_main, ((tmpvar_4 * dot (ret_2, vec3(1.0, 0.985, 0.95))) + 0.5)).xyz;\n  vec3 tmpvar_5;\n  tmpvar_5 = clamp (((ret_2 - 0.05) * 99.0), 0.0, 1.0);\n  xfer_1.x = tmpvar_5.x;\n  xfer_1.yz = (tmpvar_5.yz * clamp ((\n    (0.1 - ret_2.xy)\n   * 99.0), 0.0, 1.0));\n  ret_2 = (ret_2 + (vec3(-0.014, 0.014, 0.0) * tmpvar_5.xxx));\n  ret_2 = (ret_2 + (vec3(0.0, -0.08, 0.08) * xfer_1.yyy));\n  ret_2 = (ret_2 + (vec3(0.0, 0.0, -0.02) * xfer_1.zzz));\n  ret_2 = (ret_2 + (vec3(5.0, 15.0, 40.0) * (\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) * 0.4));\n  vec3 tmpvar_2;\n  tmpvar_2.x = (1.7 - (bass * 0.5));\n  tmpvar_2.y = (1.7 - (treb * 0.5));\n  tmpvar_2.z = (1.7 - (mid * 0.5));\n  vec3 tmpvar_3;\n  tmpvar_3 = pow (pow (ret_1, vec3(0.5, 0.8, 1.7)), tmpvar_2);\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    ret = tex2D( sampler_main, (uv-0.5)*1.00 + 0.5 );\n    ret /= ret.x+ret.y+ret.z;\n    float zoom = dot(ret, float3(1,0.985,0.95));\n\n    ret.xyz = tex2D( sampler_main, (uv-0.5)*zoom + 0.5 );\n\n    // shift mass from red to green and on to blue (corresponds to AGE of pixel)\n    // .x = fastest layer, .z = slowest\n    float r = 0.02; \n    float3 xfer = saturate((ret - 0.05)*99);\n    xfer.yz *= saturate((0.1-ret.xy)*99);\n    ret += xfer.xxx*float3(-1,1,0)*r*0.7;\n    ret += xfer.yyy*float3(0,-1,1)*r*4;\n    ret += xfer.zzz*float3(0,0,-1)*r;\n\n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*float3(1,3,8)*5;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret += GetBlur1(uv)*0.4;\n \n    // palettize:\n    ret = pow(ret, float3(0.5, 0.8, 1.7));\n    ret = pow(ret, float3(1.7-(bass*.5), 1.7-(treb*.5), 1.7-(mid*.5)));\n   \n    //ret.xyz *= 2; // a little bit of overbright\n}\n\n"}