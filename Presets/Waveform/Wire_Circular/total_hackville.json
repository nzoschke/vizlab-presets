{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.95,"echo_zoom":0.672,"echo_orient":1,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.713,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpscale":2.853,"zoom":1.031,"warp":1.19646,"wave_r":0.44,"wave_g":0.4,"mv_x":44.16,"mv_y":33.6,"mv_l":0.5,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"additive":1,"x":0.67,"y":0.53,"rad":0.17457,"ang":0.25133,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_g":0.5,"border_b":0.15,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":23,"additive":1,"num_inst":817,"rad":0.02798,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"a":0.41,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = sin(time) * .4 + .5;\n\n\npow( (bass*.15),2);","init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\n\n\npow( (bass*.15),2);"},{"baseVals":{"sides":36,"additive":1,"rad":0.81623,"r":0,"g":0.04,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = 1-q1;\ny = q2;\nx = 0.5 + (x - 0.5)*0.25;\ny = 0.5 + (y - 0.5)*0.25;","init_eqs_eel":"","frame_eqs_eel":"x = 1-q1;\ny = q2;\nx = 0.5 + (x - 0.5)*0.25;\ny = 0.5 + (y - 0.5)*0.25;"}],"waves":[{"baseVals":{"enabled":1,"sep":4,"spectrum":1,"additive":1,"scaling":100,"smoothing":0},"init_eqs_str":"a.xx=0;a.q6=0;a.q1=0;a.q5=0;a.dx=0;a.q4=0;a.dy=0;a.q2=0;a.q3=0;a.yy=0;a.q7=0;a.t2=0;a.t3=0;a.t4=0;a.ab=1;","frame_eqs_str":"","point_eqs_str":"a.xx=.00001<Math.abs(equal(a.sample,0))?a.q3:a.xx;a.yy=.00001<Math.abs(equal(a.sample,0))?a.q4:a.yy;a.dx=a.xx*(1-a.xx)-div(a.q5*a.xx*a.yy,a.xx+a.q6);a.dy=a.q7*a.yy*(1-div(a.yy,a.xx));a.x=a.xx;a.y=a.yy;a.xx+=.2*a.dx;a.yy+=.2*a.dy;a.x=.5+div(a.x-.5,a.q1)+a.dy*a.value1*.01;a.y=.5+div(a.y-.5,a.q2)-a.dx*a.value1*.01;","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\nab = 1;","frame_eqs_eel":"","point_eqs_eel":"xx = if(equal(sample,0),q3,xx);\nyy = if(equal(sample,0),q4,yy);\n\n\ndx = xx*(1-xx)-q5*xx*yy/(xx+q6);\ndy = q7*yy*(1-yy/xx);\n\nx = xx;\ny = yy;\n\nxx = xx+dx*0.2;\nyy = yy+dy*0.2;\n\nx = 0.5+(x-0.5)/q1 + dy*value1*0.01;\ny = 0.5+(y-0.5)/q2 - dx*value1*0.01;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"xx1 = if(equal(sample,0),q11,xx1);\nyy1 = if(equal(sample,0),q12,yy1);\nzz1 = if(equal(sample,0),q13,zz1);\n\ndx1 = q14*(yy1-xx1);\ndy1 = xx1*(q15-zz1)-yy1;\ndz1 = xx1*yy1-q16*zz1;\nxx1 = xx1 + q17*dx1;\nyy1 = yy1 + q17*dy1;\nzz1 = zz1 + q17*dz1;\n\nmy_x = xx1*0.02;\nmy_y = yy1*0.02;\nmy_z = zz1*0.02;\n\nx = 0.5 + my_x;\ny = 0.5 + my_y;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xx1 = if(equal(sample,0),q11,xx1);\nyy1 = if(equal(sample,0),q12,yy1);\nzz1 = if(equal(sample,0),q13,zz1);\n\ndx1 = q14*(yy1-xx1);\ndy1 = xx1*(q15-zz1)-yy1;\ndz1 = xx1*yy1-q16*zz1;\nxx1 = xx1 + q17*dx1;\nyy1 = yy1 + q17*dy1;\nzz1 = zz1 + q17*dz1;\n\nmy_x = xx1*0.02;\nmy_y = yy1*0.02;\nmy_z = zz1*0.02;\n\nx = 0.5 + my_x;\ny = 0.5 + my_y;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.3*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.3*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.wave_b+=.3*(.6*Math.sin(.91*a.time)+.4*Math.sin(.92*a.time));a.zoom+=.013*(.6*Math.sin(.339*a.time)+.4*Math.sin(.276*a.time));a.rot+=.04*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.decay-=.01*below(mod(a.frame,2),1);","pixel_eqs_str":"a.zoom+=.04*Math.sin(5*a.ang+2.3*a.time);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.300*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\nwave_g = wave_g + 0.300*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\nwave_b = wave_b + 0.300*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\nzoom = zoom + 0.013*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\ndecay = decay - 0.01*below(frame%2,1);","pixel_eqs_eel":"zoom=zoom+0.04*sin(ang*5+time*2.3);","warp":" shader_body { \n  float n_1;\n  vec3 ret_2;\n  ret_2 = texture (sampler_pw_main, uv).xyz;\n  n_1 = (clamp ((texture (sampler_pw_main, \n    (uv + texsize.zw)\n  ).x * 999.0), 0.0, 1.0) + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(1.0, 0.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(1.0, -1.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(0.0, 1.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(0.0, -1.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(-1.0, 1.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv + (texsize.zw * vec2(-1.0, 0.0)))\n  ).x * 999.0), 0.0, 1.0));\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \n    (uv - texsize.zw)\n  ).x * 999.0), 0.0, 1.0));\n  if ((n_1 < 1.5)) {\n    ret_2 = vec3(0.0, 0.0, 0.0);\n  };\n  if ((n_1 > 3.5)) {\n    ret_2 = vec3(0.0, 0.0, 0.0);\n  };\n  bool tmpvar_3;\n  if ((ret_2.x < 0.1)) {\n    tmpvar_3 = (abs((n_1 - 3.0)) < 0.5);\n  } else {\n    tmpvar_3 = bool(0);\n  };\n  if (tmpvar_3) {\n    ret_2 = vec3(1.0, 1.0, 1.0);\n  };\n  ret_2 = (ret_2 - (roam_sin.xyz * roam_cos.wzy));\n  ret_2 = ((ret_2 - 0.016) * 0.985);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_2;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv2_1).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = texture (sampler_main, uv2_1).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = texture (sampler_main, uv2_1).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.08;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - texture (sampler_main, uv2_1).x);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_main, (((uv - 0.5) * 0.4) + 0.5));\n  ret_2 = (pow (tmpvar_7.xyz, (\n    (tmpvar_7.yzx * 2.0)\n   - 1.0)) * clamp (dot (\n    normalize(tmpvar_6)\n  , vec3(0.9070111, -0.3930381, 0.1511685)), 0.0, 1.0));\n  ret_2 = (ret_2 / pow (hue_shader, vec3(5.1, 5.1, 5.1)));\n  ret_2 = (1.0 - ret_2);\n  ret_2 = (ret_2 - (roam_sin.xyz * roam_cos.wzy));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n  // sample previous frame\n  ret = tex2D( sampler_pw_main, uv ).xyz;\n\n  float n;\n  float2 d = texsize.zw*1;\n  n  = saturate(tex2D(sampler_pw_main, uv+d*float2( 1, 1)).x*999);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 1, 0)).x*999);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 1,-1)).x*999);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 0, 1)).x*999);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2( 0,-1)).x*999);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2(-1, 1)).x*999);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2(-1, 0)).x*999);\n  n += saturate(tex2D(sampler_pw_main, uv+d*float2(-1,-1)).x*999);\n  \n  if (n < 1.5)\n    ret = 0;\n  if (n > 3.5)\n    ret = 0;\n  if (ret.x < 0.1 && abs(n-3) < 0.5)\n    ret = 1;\n\nret-=roam_sin*roam_cos.wzy;\n  // darken (decay) over time\n  ret = (ret - 0.016)*0.985;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    // the weights of the 4 height value frequencies:\n    float4 c = float4(1,0,0,0);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2).x*c.x + GetBlur1(uv2).x*c.y + GetBlur2(uv2).x*c.z + GetBlur3(uv2).x*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2).x*c.x + GetBlur1(uv2).x*c.y + GetBlur2(uv2).x*c.z + GetBlur3(uv2).x*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2).x*c.x + GetBlur1(uv2).x*c.y + GetBlur2(uv2).x*c.z + GetBlur3(uv2).x*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2).x*c.x + GetBlur1(uv2).x*c.y + GetBlur2(uv2).x*c.z + GetBlur3(uv2).x*c.w;\n\n    // compute gradient vector:\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.08));\n\n    // hacked default lighting from it:\n    float3 dir1 = normalize(float3(0.3,-0.13,0.05));\n    //float3 col1 = float3(1.3,0.9,0.6)*1.5;\n    float3 a = tex2D(sampler_main, (uv-0.5)*0.4+0.5);\n    float3 col1 = pow(a.xyz, a.yzx*2-1);\n    ret = col1 * saturate(dot(g,dir1));\n    ret /= pow(hue_shader,5.1);\nret=1-ret;\nret-=roam_sin*roam_cos.wzy;\n\n}"}