{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":4.529,"wave_scale":0.797,"wave_smoothing":0.9,"wave_mystery":0.02,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":3.138,"fshader":1,"zoom":1.053,"warp":0.263,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":6.272,"mv_y":19.2,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":40,"textured":1,"rad":0.25121,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"a2":0.2,"border_a":0},"init_eqs_str":"a.fran=1;a.xs=1;a.ys=1;a.xm=.2;a.ym=.2;","frame_eqs_str":"","init_eqs_eel":"fran = 1;\nxs = 1;\nys = 1;\nxm = 0.2;\nym = 0.2;","frame_eqs_eel":""},{"baseVals":{"sides":44,"rad":0.03347,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"fran = 1;\nxs = 1;\nys = 1;\nxm = 0.5;\nym = 0.5;","frame_eqs_str":"sa = 0.1;\nsb = 1-sa;\n\nxs = xs*(1 - 2*above(xm,sb) - 2*below(xm,sa));\nys = ys*(1 - 2*above(ym,sb) - 2*below(ym,sa));\n\nxs = xs/abs(xs);\nys = ys/abs(ys);\n\nxm = xm + 0.02*xs*(sin(time*0.566)*0.3 + 0.7*sin(time*0.423));\nym = ym + 0.02*ys*(sin(time*0.892)*0.4 + 0.6*sin(time*0.542));\n\nx = xm;\ny = ym;\n\nr = 0.5 + 0.5*sin(x*9);\ng = 0.5 + 0.5*sin(y*21);\nxy = ((1-x) + (1-y))*0.5;\nb = 0.5 + 0.5*sin(xy*14);\n\nrad = rad*(bass_att+treb_att+mid_att)/3;","init_eqs_eel":"fran = 1;\nxs = 1;\nys = 1;\nxm = 0.5;\nym = 0.5;","frame_eqs_eel":"sa = 0.1;\nsb = 1-sa;\n\nxs = xs*(1 - 2*above(xm,sb) - 2*below(xm,sa));\nys = ys*(1 - 2*above(ym,sb) - 2*below(ym,sa));\n\nxs = xs/abs(xs);\nys = ys/abs(ys);\n\nxm = xm + 0.02*xs*(sin(time*0.566)*0.3 + 0.7*sin(time*0.423));\nym = ym + 0.02*ys*(sin(time*0.892)*0.4 + 0.6*sin(time*0.542));\n\nx = xm;\ny = ym;\n\nr = 0.5 + 0.5*sin(x*9);\ng = 0.5 + 0.5*sin(y*21);\nxy = ((1-x) + (1-y))*0.5;\nb = 0.5 + 0.5*sin(xy*14);\n\nrad = rad*(bass_att+treb_att+mid_att)/3;"},{"baseVals":{"sides":44,"rad":0.03347,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"fran = 1;\nxs = 1;\nys = 1;\nxm = 0.2;\nym = 0.2;","frame_eqs_str":"xs = xs*(1 - 2*above(xm,0.9) - 2*below(xm,0.1));\nys = ys*(1 - 2*above(ym,0.9) - 2*below(ym,0.1));\n\nxs = xs/abs(xs);\nys = ys/abs(ys);\n\nxm = xm + 0.02*xs*(sin(time*0.656)*0.3 + 0.7*sin(time*0.342));\nym = ym + 0.02*ys*(sin(time*0.289)*0.4 + 0.6*sin(time*0.702));\n\nx = xm;\ny = ym;\n\nr = 0.5 + 0.5*sin(x*9);\ng = 0.5 + 0.5*sin(y*21);\nxy = ((1-x) + (1-y))*0.5;\nb = 0.5 + 0.5*sin(xy*14);\n\nrad = rad*(bass_att+treb_att+mid_att)/3;","init_eqs_eel":"fran = 1;\nxs = 1;\nys = 1;\nxm = 0.2;\nym = 0.2;","frame_eqs_eel":"xs = xs*(1 - 2*above(xm,0.9) - 2*below(xm,0.1));\nys = ys*(1 - 2*above(ym,0.9) - 2*below(ym,0.1));\n\nxs = xs/abs(xs);\nys = ys/abs(ys);\n\nxm = xm + 0.02*xs*(sin(time*0.656)*0.3 + 0.7*sin(time*0.342));\nym = ym + 0.02*ys*(sin(time*0.289)*0.4 + 0.6*sin(time*0.702));\n\nx = xm;\ny = ym;\n\nr = 0.5 + 0.5*sin(x*9);\ng = 0.5 + 0.5*sin(y*21);\nxy = ((1-x) + (1-y))*0.5;\nb = 0.5 + 0.5*sin(xy*14);\n\nrad = rad*(bass_att+treb_att+mid_att)/3;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.dx_residual=0;a.dy_residual=0;a.bass_thresh=0;","frame_eqs_str":"a.wave_r+=.65*(.6*Math.sin(1.437*a.time)+.4*Math.sin(.97*a.time));a.wave_g+=.65*(.6*Math.sin(1.344*a.time)+.4*Math.sin(.841*a.time));a.wave_b+=.65*(.6*Math.sin(1.251*a.time)+.4*Math.sin(1.055*a.time));a.rot+=.01*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.cx+=.21*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.21*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.dx+=.01*(.6*Math.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.dy+=.01*(.6*Math.sin(.284*\na.time)+.4*Math.sin(.247*a.time));a.decay-=.01*equal(mod(a.frame,6),0);a.dx+=a.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.016*equal(a.bass_thresh,2)*Math.sin(7*a.time)+(1-equal(a.bass_thresh,2))*a.dx_residual;a.dy_residual=.012*equal(a.bass_thresh,2)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2))*a.dy_residual;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.650*( 0.60*sin(1.437*time) + 0.40*sin(0.970*time) );\nwave_g = wave_g + 0.650*( 0.60*sin(1.344*time) + 0.40*sin(0.841*time) );\nwave_b = wave_b + 0.650*( 0.60*sin(1.251*time) + 0.40*sin(1.055*time) );\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\ndx = dx + 0.010*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\ndy = dy + 0.010*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\ndecay = decay - 0.01*equal(frame%6,0);\ndx = dx + dx_residual;\ndy = dy + dy_residual;\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\ndx_residual = equal(bass_thresh,2)*0.016*sin(time*7) + (1-equal(bass_thresh,2))*dx_residual;\ndy_residual = equal(bass_thresh,2)*0.012*sin(time*9) + (1-equal(bass_thresh,2))*dy_residual;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = ret_1;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 0.0;\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv - tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 0.0;\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \n    (tmpvar_2 * 2.0)\n  )) * 0.9)).xyz;\n  ret_1 = (max (tmpvar_6, (texture (sampler_main, \n    (uv - (tmpvar_2 * 2.0))\n  ) * 0.9)).xyz * 0.95);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_3.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv + (tmpvar_3 * 0.55));\n  vec3 tmpvar_5;\n  tmpvar_5 = mix (ret_1, (1.0 - ret_1), ((0.7 * \n    ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1)\n  ) + (0.2 * texture (sampler_main, uv).xyz)));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (tmpvar_5, ((\n    (tmpvar_5 - (0.1 * ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3)))\n   + \n    (0.1 * ((texture (sampler_blur1, (\n      (tmpvar_4 * 1.25)\n     - 0.125)).xyz * scale1) + bias1))\n  ) + (0.42 * texture (sampler_main, tmpvar_4).xyz)), vec3(0.25, 0.25, 0.25));\n  vec3 x_7;\n  x_7 = (tmpvar_6 - 0.5);\n  ret_1 = (tmpvar_6 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) + 1.25);\n  ret_1 = (ret_1 * (ret_1 * 0.45));\n  ret_1 = (ret_1 * mix (ret_1, (\n    (1.3 * ret_1)\n   * \n    ((((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1)) - (0.25 * ((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2)))\n  ), pow (hue_shader.zxy, \n    (1.0 - ret_1)\n  )));\n  ret_1 = (ret_1 + 0.05);\n  ret_1 = (ret_1 * (0.9 * ret_1));\n  ret_1 = (ret_1 * ((hue_shader * 4.0) - 2.75));\n  ret_1 = (ret_1 * (2.0 - (0.5 * \n    clamp (ret_1, 0.0, 1.0)\n  )));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_1;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // this vector points exactly one pixel, in the direction of motion\n    float2 v = normalize(uv-uv_orig)*texsize.zw;\n\n    float3 s;\n    ret = max(ret, tex2D(sampler_main, uv+v)*0.97);\n    ret = max(ret, tex2D(sampler_main, uv-v)*0.97);\n    ret = max(ret, tex2D(sampler_main, uv+v*2)*0.90);\n    ret = max(ret, tex2D(sampler_main, uv-v*2)*0.90);\n\n    // darken over time\n    ret *= 0.95;\n\n    // add noise\n    //float2 uv_noise = uv*texsize_noise_lq.zw*texsize.xy + rand_frame.xy;\n    //ret += (tex2D(sampler_noise_lq, uv_noise)*2-1)*0.02;\n}","comp_hlsl":"shader_body\n{\n\n//Code bits by Flexi and Geiss\n\n    float2 d = texsize.zw*8;\n    float1 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) ).y;\n    float1 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) ).y;\n    float2 uv_y = uv+float2(dx,dy)*0.55;  \n    float2 uv_y2 = (uv_y*1.25)-.125;  \n\n  \n    ret = lerp(ret,1-ret,.7*GetBlur1(uv_y)+.2*GetPixel(uv));\n    ret = lerp(ret,ret-.1*GetBlur3(uv_y)+.1*GetBlur1(uv_y2)+.42*GetPixel(uv_y),.25);\n    //ret *= .75;\n    ret *= saturate(length(ret-0.5)*5);\n    //ret = ret.xy;\n    ret = lum(ret);\n    ret += 1.25;\n    ret *= ret*.45;\n    float3 mask = GetBlur3(uv)-GetBlur1(uv)-.25*GetBlur2(uv_y);\n    ret *= lerp(ret,1.3*ret*mask,pow(hue_shader.zxy,1-ret));\n    ret += .05;\n    ret *= .9*ret;\n    ret *= (hue_shader*4)-2.75;\n    ret *= 2-.5*saturate(ret);\n\n}"}