{"version":2,"baseVals":{"rating":5,"gammaadj":3.94,"decay":0.965,"additivewave":1,"brighten":1,"darken":1,"solarize":1,"invert":1,"wave_scale":0.062,"wave_smoothing":0,"wave_mystery":-0.22,"warpanimspeed":12.154,"warpscale":0.01,"zoomexp":0.50329,"fshader":1,"ob_r":0.04,"ob_g":0.04,"ob_b":0.04,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":5,"rad":0.07419,"r":0,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.count3=0;a.wave1=0;a.count4=0;a.q1=0;a.wave3=0;a.wave2=0;a.count2=0;a.q4=0;a.count1=0;a.wave=0;a.q2=0;a.wave4=0;a.q3=0;a.step=0;a.count1=.875;a.count2=.625;a.count3=.375;a.count4=.125;","frame_eqs_str":"a.step=div(.25+.5*a.bass_att,a.fps);a.count1=.00001<Math.abs(below(a.count1,1))?a.count1+a.step:a.count1-1;a.count2=.00001<Math.abs(below(a.count2,1))?a.count2+a.step:a.count2-1;a.count3=.00001<Math.abs(below(a.count3,1))?a.count3+a.step:a.count3-1;a.count4=.00001<Math.abs(below(a.count4,1))?a.count4+a.step:a.count4-1;a.q1=a.count1;a.q2=a.count2;a.q3=a.count3;a.q4=a.count4;a.warp=.075;a.wave_g=.7+.3*Math.sin(1.8*a.time);a.wave_b=.65+.25*Math.sin(3*a.time);a.wave_r=.47+.3*Math.cos(.75*\na.time);","pixel_eqs_str":"a.wave1=above(a.rad,a.q1)*below(a.rad,a.q1+.1);a.wave2=above(a.rad,a.q2)*below(a.rad,a.q2+.1);a.wave3=above(a.rad,a.q3)*below(a.rad,a.q3+.1);a.wave4=above(a.rad,a.q4)*below(a.rad,a.q4+.1);a.wave=a.wave1+a.wave2+a.wave3+a.wave4;a.sx=1.025-.05*a.wave;a.sy=1.025-.05*a.wave;a.zoom=1+.05*above(a.rad,.01*rand(100));a.warp=.5*a.bass_att*above(a.rad,.5*a.treb_att);","init_eqs_eel":"count1 = .875;\ncount2 = .625;\ncount3 = .375;\ncount4 = .125;","frame_eqs_eel":"step = (.25+.5*bass_att)/fps;\n\ncount1 = if(below(count1,1),count1+step,count1-1);\ncount2 = if(below(count2,1),count2+step,count2-1);\ncount3 = if(below(count3,1),count3+step,count3-1);\ncount4 = if(below(count4,1),count4+step,count4-1);\n\nq1 = count1;\nq2 = count2;\nq3 = count3;\nq4 = count4;\n \nwarp = .075;\n\nwave_g = .7+.3*sin(time*1.8);\nwave_b = .65+.25*sin(time*3);\nwave_r = .47+.3*cos(time*.75);","pixel_eqs_eel":"wave1 = above(rad,q1)*below(rad,q1+.1);\nwave2 = above(rad,q2)*below(rad,q2+.1);\nwave3 = above(rad,q3)*below(rad,q3+.1);\nwave4 = above(rad,q4)*below(rad,q4+.1);\n\nwave = wave1+wave2+wave3+wave4;\n\nsx = 1.025-.05*wave;\nsy = 1.025-.05*wave;\n\nzoom = 1+.05*above(rad,rand(100)*.01);\n\nwarp = .5*bass_att*above(rad,.5*treb_att);","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (vec2(1.5, 0.0) * texsize.wz);\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(0.0, 1.5) * texsize.wz);\n  ret_1 = (texture (sampler_fc_main, uv).xyz + max (max (texture (sampler_main, \n    (uv + tmpvar_2)\n  ).xyz, texture (sampler_main, \n    (uv - tmpvar_2)\n  ).xyz), max (texture (sampler_main, \n    (uv + tmpvar_3)\n  ).xyz, texture (sampler_main, \n    (uv - tmpvar_3)\n  ).xyz)));\n  ret_1 = (ret_1 - texture (sampler_main, uv).xyz);\n  ret_1 = ((ret_1 * 0.94) - 0.003);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 plastic_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.x;\n  tmpvar_6.y = tmpvar_5.x;\n  vec2 x_7;\n  x_7 = ((uv - (tmpvar_6 * 4.0)) - vec2(0.5, 0.2));\n  plastic_1.x = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_7, x_7)), 0.5)\n  )));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_4.y;\n  tmpvar_8.y = tmpvar_5.y;\n  vec2 x_9;\n  x_9 = ((uv - (tmpvar_8 * 4.0)) - vec2(0.5, 0.2));\n  plastic_1.y = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_9, x_9)), 0.5)\n  )));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.z;\n  tmpvar_10.y = tmpvar_5.z;\n  vec2 x_11;\n  x_11 = ((uv - (tmpvar_10 * 4.0)) - vec2(0.5, 0.2));\n  plastic_1.z = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_11, x_11)), 0.5)\n  )));\n  ret_2 = (plastic_1 * texture (sampler_main, uv).xyz);\n  ret_2.z = (ret_2 * 3.0).z;\n  ret_2.xy = vec2(0.0, 0.0);\n  ret_2.x = mix ((2.0 * (ret_2.z * uv.x)), (2.0 * (ret_2.z * \n    (1.0 - uv.x)\n  )), uv.x);\n  ret_2.z = (ret_2.z + (0.4 * (ret_2.z * \n    (1.0 - uv.y)\n  )));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_2;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz;\n\n    \nret += max(\nmax(GetPixel(uv+float2(1.5,0)*texsize.wz),GetPixel(uv-float2(1.5,0)*texsize.wz)),\nmax(GetPixel(uv+float2(0,1.5)*texsize.wz),GetPixel(uv-float2(0,1.5)*texsize.wz)));\nret -= GetPixel(uv);\n    // darken (decay) over time\nret = ret*.94-.003; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    //flexi's bump map effect\n\n    float2 d = texsize.zw*4; \n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) ); \n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) ); \n    float2 light_pos = float2(0.5,0.2); \n    float3 col = float3(4,4,4); \n    float c = 4; \n    float dd = 16; \n    float3 plastic; \n    plastic.x = col.x/(1+dd*pow(length( uv - float2(dx.x,dy.x)*c - light_pos),0.5)); \n    plastic.y = col.y/(1+dd*pow(length( uv - float2(dx.y,dy.y)*c - light_pos),0.5)); \n    plastic.z = col.z/(1+dd*pow(length( uv - float2(dx.z,dy.z)*c - light_pos),0.5)); \n\n    ret = plastic*GetPixel(uv); \n    ret *= 3;\n\nret.xy = 0;\nret.x += lerp(lerp(0,2,lerp(0,ret.z,uv.x)),lerp(0,2,lerp(0,ret.z,1-uv.x)),uv.x);\nret.z += lerp(0,.4,lerp(0,ret.z,1-uv.y));\n\n\n}"}