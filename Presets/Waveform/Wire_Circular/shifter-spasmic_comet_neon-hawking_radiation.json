{"version":2,"baseVals":{"rating":5,"gammaadj":5.9,"decay":0.99,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.24146,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.50105,"tex_zoom":0.71291,"r":0,"a":0.03,"g2":0,"border_r":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.50105,"tex_zoom":0.71291,"g":1,"b":1,"a":0.45,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q8=0;a.ti=0;","frame_eqs_str":"a.rad*=a.q8;a.ang=.0062832*Math.floor(rand(1001));a.tex_ang+=a.ang;a.tex_zoom*=div(1,a.rad);a.ti=a.time;a.border_r=.5+.5*Math.sin(1.123*a.ti);a.border_g=.5+.5*Math.sin(1.456*a.ti);a.border_b=.5+.5*Math.sin(1.789*a.ti);a.ti=a.time;a.r=.5+.5*Math.sin(1.123*a.ti);a.g=.5+.5*Math.sin(1.456*a.ti);a.b=.5+.5*Math.sin(1.789*a.ti);a.ti=a.time-1;a.r2=.75+.25*Math.sin(1.123*a.ti);a.g2=.75+.25*Math.sin(1.456*a.ti);a.b2=.75+.25*Math.sin(1.789*a.ti);","init_eqs_eel":"","frame_eqs_eel":"rad = q8*rad;\nang = int(rand(1001))*.001*6.2832;\n\ntex_ang = tex_ang + ang;\ntex_zoom = 1/rad*tex_zoom;\n\nti = time;\nborder_r = .5 + .5*sin(ti*1.123);\nborder_g = .5 + .5*sin(ti*1.456);\nborder_b = .5 + .5*sin(ti*1.789);\nti = time;\nr = .5 + .5*sin(ti*1.123);\ng = .5 + .5*sin(ti*1.456);\nb = .5 + .5*sin(ti*1.789);\nti = time - 1;\nr2 = .75 + .25*sin(ti*1.123);\ng2 = .75 + .25*sin(ti*1.456);\nb2 = .75 + .25*sin(ti*1.789);"},{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.44466,"tex_zoom":0.74186,"r":0,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"a.q8=0;","frame_eqs_str":"a.rad*=a.q8;a.tex_ang+=a.ang;a.tex_zoom*=div(1,a.rad);a.x=.4996;a.y=.5004;","init_eqs_eel":"","frame_eqs_eel":"rad = q8*rad;\n//ang = int(rand(1001))*.001*6.2832;\n\ntex_ang = tex_ang + ang;\n\ntex_zoom = 1/rad*tex_zoom;\n\nx = .4996;\ny = .5004;"},{"baseVals":{"sides":3,"textured":1,"rad":1.0892,"tex_ang":0.62832,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\nang = int(rand(1001))*.001*6.2832;\n\ntex_ang = tex_ang + ang;\ntex_zoom = 1/rad*tex_zoom;","init_eqs_eel":"","frame_eqs_eel":"\nang = int(rand(1001))*.001*6.2832;\n\ntex_ang = tex_ang + ang;\ntex_zoom = 1/rad*tex_zoom;"}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"enabled":0},"init_eqs_str":"t1 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt2 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt3 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt4 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt5 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt6 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt7 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt8 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;","frame_eqs_str":"","point_eqs_str":"tm = q1;\nsp = sample*6.28*8*6;\nsp = int(rand(1001))*.001*6.28*8*6;\n\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .51 + pow(int(rand(1001))*.001,5)*.1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nti = q2*4;\nvx = .1*sin(ti*t1);\nvy = .1*cos(ti*t2);\nvz = .1*sin(ti*t3);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisa = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .13*sin(ti*t4);\nvy = .13*cos(ti*t5);\nvz = .13*sin(ti*t6);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisb = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .1*sin(ti*t7);\nvy = .1*cos(ti*t8);\nvz = .1*sin(ti*.478);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisc = pow(vx*vx + vy*vy + vz*vz,.5);\n\nmod = (disa - rad)*above(disa,rad) + (disb - rad)*above(disb,rad) + (disc - rad)*above(disc,rad);\n\na = above(mod,rad*.3)*a;\n\na = (.5 + (oz+2)*.5)*a;\na = a*below(z,2);\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n\nti = time - 1;\nr = .75 + .25*sin(ti*1.123);\ng = .75 + .25*sin(ti*1.456);\nb = .75 + .25*sin(ti*1.789);\n\n","init_eqs_eel":"t1 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt2 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt3 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt4 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt5 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt6 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt7 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt8 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;","frame_eqs_eel":"","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6;\nsp = int(rand(1001))*.001*6.28*8*6;\n\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .51 + pow(int(rand(1001))*.001,5)*.1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nti = q2*4;\nvx = .1*sin(ti*t1);\nvy = .1*cos(ti*t2);\nvz = .1*sin(ti*t3);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisa = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .13*sin(ti*t4);\nvy = .13*cos(ti*t5);\nvz = .13*sin(ti*t6);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisb = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .1*sin(ti*t7);\nvy = .1*cos(ti*t8);\nvz = .1*sin(ti*.478);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisc = pow(vx*vx + vy*vy + vz*vz,.5);\n\nmod = (disa - rad)*above(disa,rad) + (disb - rad)*above(disb,rad) + (disc - rad)*above(disc,rad);\n\na = above(mod,rad*.3)*a;\n\na = (.5 + (oz+2)*.5)*a;\na = a*below(z,2);\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n\nti = time - 1;\nr = .75 + .25*sin(ti*1.123);\ng = .75 + .25*sin(ti*1.456);\nb = .75 + .25*sin(ti*1.789);\n\n"},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"enabled":0},"init_eqs_str":"t1 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt2 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt3 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt4 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt5 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt6 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt7 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt8 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;","frame_eqs_str":"","point_eqs_str":"tm = q1;\nsp = sample*6.28*8*6;\nsp = int(rand(1001))*.001*6.28*8*6;\n\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .51 + pow(int(rand(1001))*.001,5)*.1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nti = q2*4;\nvx = .1*sin(ti*t1);\nvy = .1*cos(ti*t2);\nvz = .1*sin(ti*t3);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisa = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .13*sin(ti*t4);\nvy = .13*cos(ti*t5);\nvz = .13*sin(ti*t6);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisb = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .1*sin(ti*t7);\nvy = .1*cos(ti*t8);\nvz = .1*sin(ti*.478);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisc = pow(vx*vx + vy*vy + vz*vz,.5);\n\nmod = (disa - rad)*above(disa,rad) + (disb - rad)*above(disb,rad) + (disc - rad)*above(disc,rad);\n\na = above(mod,rad*.3)*a;\n\na = (.5 + (oz+2)*.5)*a;\na = a*below(z,2);\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n\nti = time - 1;\nr = .75 + .25*sin(ti*1.123);\ng = .75 + .25*sin(ti*1.456);\nb = .75 + .25*sin(ti*1.789);\n\n","init_eqs_eel":"t1 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt2 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt3 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt4 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt5 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt6 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt7 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt8 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;","frame_eqs_eel":"","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6;\nsp = int(rand(1001))*.001*6.28*8*6;\n\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .51 + pow(int(rand(1001))*.001,5)*.1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nti = q2*4;\nvx = .1*sin(ti*t1);\nvy = .1*cos(ti*t2);\nvz = .1*sin(ti*t3);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisa = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .13*sin(ti*t4);\nvy = .13*cos(ti*t5);\nvz = .13*sin(ti*t6);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisb = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .1*sin(ti*t7);\nvy = .1*cos(ti*t8);\nvz = .1*sin(ti*.478);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisc = pow(vx*vx + vy*vy + vz*vz,.5);\n\nmod = (disa - rad)*above(disa,rad) + (disb - rad)*above(disb,rad) + (disc - rad)*above(disc,rad);\n\na = above(mod,rad*.3)*a;\n\na = (.5 + (oz+2)*.5)*a;\na = a*below(z,2);\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n\nti = time - 1;\nr = .75 + .25*sin(ti*1.123);\ng = .75 + .25*sin(ti*1.456);\nb = .75 + .25*sin(ti*1.789);\n\n"},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"a":0.81,"enabled":0},"init_eqs_str":"t1 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt2 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt3 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt4 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt5 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt6 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt7 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt8 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;","frame_eqs_str":"","point_eqs_str":"tm = q1;\nsp = sample*6.28*8*6;\nsp = int(rand(1001))*.001*6.28*8*6;\n\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .51;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nti = q2*4;\nvx = .1*sin(ti*t1);\nvy = .1*cos(ti*t2);\nvz = .1*sin(ti*t3);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisa = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .13*sin(ti*t4);\nvy = .13*cos(ti*t5);\nvz = .13*sin(ti*t6);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisb = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .1*sin(ti*t7);\nvy = .1*cos(ti*t8);\nvz = .1*sin(ti*.478);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisc = pow(vx*vx + vy*vy + vz*vz,.5);\n\nmod = (disa - rad)*above(disa,rad) + (disb - rad)*above(disb,rad) + (disc - rad)*above(disc,rad);\n\na = above(mod,rad*.3)*a;\n\na = (.5 + (oz+2)*.5)*a;\na = a*below(z,2);\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n\nti = time - 1;\nr = .75 + .25*sin(ti*1.123);\ng = .75 + .25*sin(ti*1.456);\nb = .75 + .25*sin(ti*1.789);\n\n","init_eqs_eel":"t1 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt2 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt3 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt4 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt5 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt6 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt7 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt8 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;","frame_eqs_eel":"","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6;\nsp = int(rand(1001))*.001*6.28*8*6;\n\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .51;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nti = q2*4;\nvx = .1*sin(ti*t1);\nvy = .1*cos(ti*t2);\nvz = .1*sin(ti*t3);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisa = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .13*sin(ti*t4);\nvy = .13*cos(ti*t5);\nvz = .13*sin(ti*t6);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisb = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .1*sin(ti*t7);\nvy = .1*cos(ti*t8);\nvz = .1*sin(ti*.478);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisc = pow(vx*vx + vy*vy + vz*vz,.5);\n\nmod = (disa - rad)*above(disa,rad) + (disb - rad)*above(disb,rad) + (disc - rad)*above(disc,rad);\n\na = above(mod,rad*.3)*a;\n\na = (.5 + (oz+2)*.5)*a;\na = a*below(z,2);\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n\nti = time - 1;\nr = .75 + .25*sin(ti*1.123);\ng = .75 + .25*sin(ti*1.456);\nb = .75 + .25*sin(ti*1.789);\n\n"},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"a":0.81,"enabled":0},"init_eqs_str":"t1 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt2 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt3 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt4 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt5 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt6 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt7 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt8 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;","frame_eqs_str":"","point_eqs_str":"tm = q1;\nsp = sample*6.28*8*6;\nsp = int(rand(1001))*.001*6.28*8*6;\n\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .51 + int(rand(1001))*.001*.1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nti = q2*4;\nvx = .1*sin(ti*t1);\nvy = .1*cos(ti*t2);\nvz = .1*sin(ti*t3);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisa = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .13*sin(ti*t4);\nvy = .13*cos(ti*t5);\nvz = .13*sin(ti*t6);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisb = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .1*sin(ti*t7);\nvy = .1*cos(ti*t8);\nvz = .1*sin(ti*.478);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisc = pow(vx*vx + vy*vy + vz*vz,.5);\n\nmod = (disa - rad)*above(disa,rad) + (disb - rad)*above(disb,rad) + (disc - rad)*above(disc,rad);\n\na = above(mod,rad*.3)*a;\n\na = (.5 + (oz+2)*.5)*a;\na = a*below(z,2);\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n\nti = time - 1;\nr = .75 + .25*sin(ti*1.123);\ng = .75 + .25*sin(ti*1.456);\nb = .75 + .25*sin(ti*1.789);\n\n","init_eqs_eel":"t1 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt2 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt3 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt4 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt5 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt6 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt7 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;\nt8 = .2 + .3*int(rand(1001))*.001 + .3*int(rand(1001))*.001;","frame_eqs_eel":"","point_eqs_eel":"tm = q1;\nsp = sample*6.28*8*6;\nsp = int(rand(1001))*.001*6.28*8*6;\n\n\nvol = (value1+value2)*.5;\nit = it*above(sample,0);\nit = it + 1;\nrad = .51 + int(rand(1001))*.001*.1;\nra = rad*sin(sample*3.14);\nox = ra*sin(sp);\noy = sin(sample*3.14-1.57)*rad;\noz = ra*cos(sp);\n\nfov = 0.6 + 0.2*sin(tm);\nfov = .5;\n\nti = q2*4;\nvx = .1*sin(ti*t1);\nvy = .1*cos(ti*t2);\nvz = .1*sin(ti*t3);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisa = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .13*sin(ti*t4);\nvy = .13*cos(ti*t5);\nvz = .13*sin(ti*t6);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisb = pow(vx*vx + vy*vy + vz*vz,.5);\n\nvx = .1*sin(ti*t7);\nvy = .1*cos(ti*t8);\nvz = .1*sin(ti*.478);\nvx = ox - vx;\nvy = oy - vy;\nvz = oz - vz;\n\ndisc = pow(vx*vx + vy*vy + vz*vz,.5);\n\nmod = (disa - rad)*above(disa,rad) + (disb - rad)*above(disb,rad) + (disc - rad)*above(disc,rad);\n\na = above(mod,rad*.3)*a;\n\na = (.5 + (oz+2)*.5)*a;\na = a*below(z,2);\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n\nti = time - 1;\nr = .75 + .25*sin(ti*1.123);\ng = .75 + .25*sin(ti*1.456);\nb = .75 + .25*sin(ti*1.789);\n\n"}],"init_eqs_str":"a.tic=0;a.sw=0;a.q12=0;a.vt=0;a.q6=0;a.bt=0;a.q1=0;a.q5=0;a.mid_avg=0;a.tt=0;a.tin=0;a.q11=0;a.bass_avg=0;a.vav=0;a.an=0;a.q4=0;a.mt=0;a.ra=0;a.treb_avg=0;a.vol=0;a.q2=0;a.vol2=0;a.q3=0;a.q7=0;a.q8=0;","frame_eqs_str":"a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.vol=.333333*(a.bass_att+a.treb_att+a.mid_att);a.ra=.1*div(1,a.tic);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;a.vt+=a.tic*a.vav;a.dy=.05*(a.treb_avg-a.mid_avg);\na.dx=.15*(a.bass_avg-.5*(a.treb_avg+a.mid_avg));a.dx=.01*(a.bass_avg+a.treb_avg+a.mid_avg);a.q1=a.vt;a.q2=a.bt;a.q3=a.bass_avg;a.q4=.5*(a.tt+a.mt);a.q5=a.bt;a.q6=a.vt;a.q7=.8-.2*a.vav;a.monitor=a.q7;a.q8=.6;a.vol2=a.bass+a.treb+a.mid;a.q11=.1*a.vol2;a.q12=1-.1*a.vol2;","pixel_eqs_str":"a.sw=above(a.x,.5);a.an=.00001<Math.abs(a.sw)?a.ang:3.1416-a.ang;a.zoom=1+.03*pow(Math.sin(5*a.an-a.q5),1)*a.bass;a.rot=.02*Math.sin(12.5664*a.rad-4*a.q4)*(a.mid+a.treb)*.5*(1-2*a.sw);a.dx=a.dx*pow(a.rad,3)*(-1+2*a.sw);a.dy*=pow(a.rad,1);","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\ntic = min(time-tin,.1);\ntin = time;\n\nvol = (bass_att + treb_att + mid_att)*.333333;\n\nra = 1/tic*.1;\n\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\nvt = vt + tic*vav;\n\ndy = (treb_avg - mid_avg)*.05;\ndx = (bass_avg - (treb_avg + mid_avg)*.5)*.15;\ndx = (bass_avg + treb_avg + mid_avg)*.01;\n\n\nq1 = vt;\nq2 = bt;\nq3 = bass_avg;\n\nq4 = (tt + mt)*.5;\nq5 = bt;\nq6 = vt;\nq7 = .8 - vav*.2;\n\nmonitor = q7;\nq8 = .6;\nvol2=bass+treb+mid;\nq11=vol2*.1;\nq12=1-vol2*.1;","pixel_eqs_eel":"sw = above(x,.5);\n\nan = if(sw,ang,3.1416 - ang);\nzoom = 1 + pow(sin(an*5 - q5),1)*.03*bass;\nrot = .02*sin(rad*6.2832*2 - q4*4)*(mid + treb)*.5*(1-2*sw);\n\n\n\n//sy = -1;\n\ndx = dx*pow(rad,3)*(-1+2*sw);\ndy = dy*pow(rad,1);","warp":" shader_body { \n  vec3 xfer_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - 0.5);\n  tmpvar_3 = texture (sampler_main, (tmpvar_4 + 0.5));\n  ret_2 = (tmpvar_3.xyz / ((tmpvar_3.x + tmpvar_3.y) + tmpvar_3.z));\n  ret_2 = texture (sampler_main, ((tmpvar_4 * dot (ret_2, vec3(1.0, 0.985, 0.95))) + 0.5)).xyz;\n  vec3 tmpvar_5;\n  tmpvar_5 = clamp (((ret_2 - 0.05) * 99.0), 0.0, 1.0);\n  xfer_1.x = tmpvar_5.x;\n  xfer_1.yz = (tmpvar_5.yz * clamp ((\n    (0.1 - ret_2.xy)\n   * 99.0), 0.0, 1.0));\n  ret_2 = (ret_2 + (vec3(-0.014, 0.014, 0.0) * tmpvar_5.xxx));\n  ret_2 = (ret_2 + (vec3(0.0, -0.08, 0.08) * xfer_1.yyy));\n  ret_2 = (ret_2 + (vec3(0.0, 0.0, -0.02) * xfer_1.zzz));\n  ret_2 = (ret_2 + (vec3(5.0, 15.0, 40.0) * (\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec3 plastic_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 8.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6.x = q11;\n  tmpvar_6.y = q12;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.x;\n  tmpvar_7.y = tmpvar_5.x;\n  vec2 x_8;\n  x_8 = ((uv - (tmpvar_7 * 4.0)) - tmpvar_6);\n  plastic_1.x = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_8, x_8)), 0.5)\n  )));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_4.y;\n  tmpvar_9.y = tmpvar_5.y;\n  vec2 x_10;\n  x_10 = ((uv - (tmpvar_9 * 4.0)) - tmpvar_6);\n  plastic_1.y = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_10, x_10)), 0.5)\n  )));\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_4.z;\n  tmpvar_11.y = tmpvar_5.z;\n  vec2 x_12;\n  x_12 = ((uv - (tmpvar_11 * 4.0)) - tmpvar_6);\n  plastic_1.z = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_12, x_12)), 0.5)\n  )));\n  ret_2 = (plastic_1 * texture (sampler_main, uv).xyz);\n  ret_2 = (ret_2 * 2.0);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_2;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"shader_body\n{\n    ret = tex2D( sampler_main, (uv-0.5)*1.00 + 0.5 );\n    ret /= ret.x+ret.y+ret.z;\n    float zoom = dot(ret, float3(1,0.985,0.95));\n\n    ret.xyz = tex2D( sampler_main, (uv-0.5)*zoom + 0.5 );\n\n    // shift mass from red to green and on to blue (corresponds to AGE of pixel)\n    // .x = fastest layer, .z = slowest\n    float r = 0.02; \n    float3 xfer = saturate((ret - 0.05)*99);\n    xfer.yz *= saturate((0.1-ret.xy)*99);\n    ret += xfer.xxx*float3(-1,1,0)*r*0.7;\n    ret += xfer.yyy*float3(0,-1,1)*r*4;\n    ret += xfer.zzz*float3(0,0,-1)*r;\n\n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*float3(1,3,8)*5;\n}","comp_hlsl":"shader_body \n{ \n    //flexi's bump map effect\n\n    float2 d = texsize.zw*8; \n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) ); \n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) ); \n    float2 light_pos = float2(q11,q12); \n    float3 col = float3(4,4,4); \n    float c = 4; \n    float dd = 16; \n    float3 plastic; \n    plastic.x = col.x/(1+dd*pow(length( uv - float2(dx.x,dy.x)*c - light_pos),0.5)); \n    plastic.y = col.y/(1+dd*pow(length( uv - float2(dx.y,dy.y)*c - light_pos),0.5)); \n    plastic.z = col.z/(1+dd*pow(length( uv - float2(dx.z,dy.z)*c - light_pos),0.5)); \n\n    ret = plastic*GetPixel(uv); \n    ret *= 2;\n}"}