{"version":2,"baseVals":{"rating":5,"gammaadj":1.994,"decay":1,"additivewave":1,"modwavealphabyvolume":1,"darken_center":1,"solarize":1,"wave_a":2.929,"wave_scale":0.53,"wave_smoothing":0,"wave_mystery":-0.26,"modwavealphastart":1.15,"modwavealphaend":1.33,"zoom":1.03609,"warp":0.00071,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.48,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.billy=100;","frame_eqs_str":"a.wave_r+=.3*Math.sin(.345*a.time);a.wave_g+=.3*Math.sin(.425*a.time);a.wave_b+=.3*Math.sin(.515*a.time);a.decay-=.03*equal(mod(Math.floor(a.frame),2),0);a.rot+=.02*Math.sin(.05*a.time);","pixel_eqs_str":"","init_eqs_eel":"billy = 100;","frame_eqs_eel":"//zoom = 1;// + billy*0.01;\nwave_r = wave_r + 0.3*sin(time*0.345);\nwave_g = wave_g + 0.3*sin(time*0.425);\nwave_b = wave_b + 0.3*sin(time*0.515);\ndecay = decay - 0.03*equal(int(frame)%2,0);\nrot = rot + 0.02*sin(time*0.05);","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec2 my_uv_2;\n  vec3 ret_3;\n  uv_1 = (uv + vec2(0.0, 0.0005));\n  float tmpvar_4;\n  tmpvar_4 = (0.003 - (bass * 0.002));\n  vec2 tmpvar_5;\n  tmpvar_5.y = 0.0;\n  tmpvar_5.x = tmpvar_4;\n  vec2 tmpvar_6;\n  tmpvar_6.y = 0.0;\n  tmpvar_6.x = tmpvar_4;\n  vec2 tmpvar_7;\n  tmpvar_7.y = 0.0;\n  tmpvar_7.x = tmpvar_4;\n  vec2 tmpvar_8;\n  tmpvar_8.y = 0.0;\n  tmpvar_8.x = tmpvar_4;\n  vec2 tmpvar_9;\n  tmpvar_9.x = 0.0;\n  tmpvar_9.y = tmpvar_4;\n  vec2 tmpvar_10;\n  tmpvar_10.x = 0.0;\n  tmpvar_10.y = tmpvar_4;\n  vec2 tmpvar_11;\n  tmpvar_11.x = 0.0;\n  tmpvar_11.y = tmpvar_4;\n  vec2 tmpvar_12;\n  tmpvar_12.x = 0.0;\n  tmpvar_12.y = tmpvar_4;\n  vec2 tmpvar_13;\n  tmpvar_13.x = (((\n    ((texture (sampler_blur2, ((uv_1 + tmpvar_5) - floor(\n      (uv_1 + tmpvar_6)\n    ))).xyz * scale2) + bias2)\n   - \n    ((texture (sampler_blur2, ((uv_1 - tmpvar_7) - floor(\n      (uv_1 - tmpvar_8)\n    ))).xyz * scale2) + bias2)\n  ) * 1280.0) * texsize.z).y;\n  tmpvar_13.y = (((\n    ((texture (sampler_blur2, ((uv_1 + tmpvar_9) - floor(\n      (uv_1 + tmpvar_10)\n    ))).xyz * scale2) + bias2)\n   - \n    ((texture (sampler_blur2, ((uv_1 - tmpvar_11) - floor(\n      (uv_1 - tmpvar_12)\n    ))).xyz * scale2) + bias2)\n  ) * 1024.0) * texsize.w).y;\n  vec2 tmpvar_14;\n  tmpvar_14 = (uv_1 + (tmpvar_13 * 0.03));\n  ret_3.y = texture (sampler_fw_main, (tmpvar_14 - floor(tmpvar_14))).y;\n  ret_3.y = (ret_3.y + ((\n    (ret_3.y - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3).y)\n   - 0.18) * 0.03));\n  my_uv_2 = (uv_1 - vec2(0.0, 0.0005));\n  ret_3.x = texture (sampler_fw_main, (my_uv_2 - floor(my_uv_2))).x;\n  ret_3.x = (ret_3.x + ((\n    ((ret_3.x - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2).x) - 0.03)\n   * 0.6) - 0.06));\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = ret_3;\n  ret = tmpvar_15.xyz;\n }","comp":" shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv).xyz;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (mix (mix (\n    (vec3(1.0, 0.8, 0.1) * tmpvar_1.xxx)\n  , vec3(1.1, 0.7, 0.5), tmpvar_1.yyy), vec3(0.9, 1.0, 0.8), tmpvar_1.zzz) * 1.5);\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n uv += float2(0,1)*0.0005;\n\n    float1 d = 0.003-(bass*.002);\n    float3 dx = ( GetBlur2(uv + float2(d,0) - floor(uv+float2(d,0))) - GetBlur2(uv-float2(d,0) - floor(uv-float2(d,0))) )*1280.0*texsize.z;\n    float3 dy = ( GetBlur2(uv + float2(0,d) - floor(uv+float2(0,d))) - GetBlur2(uv-float2(0,d) - floor(uv-float2(0,d))) )*1024.0*texsize.w;\n    float2 my_uv = uv + float2(dx.y,dy.y)*0.03 - float2(0,1)*dy.x*0;\n\n\n\n    ret.y = tex2D( sampler_fw_main, my_uv - floor(my_uv)).y;\n\n    \n    ret.y += (ret.y - GetBlur3(uv).y - 0.18)*.03;\n\nmy_uv = uv - float2(0,1)*0.0005+ float2(dy.y,-dx.y)*0.00;\nret.x = tex2D( sampler_fw_main, my_uv - floor(my_uv)).x;\nret.x += (ret.x - GetBlur2(uv).x -0.03)*.6 - 0.06;\n//ret = 0;\n\n}","comp_hlsl":"shader_body\n{\n    float3 bands = tex2D(sampler_main, uv).xyz;\n    \n    ret = 0;\n    ret = lerp(ret, float3(1.0,0.8,0.1), bands.x);\n    ret = lerp(ret, float3(1.1,0.7,0.5), bands.y);\n    ret = lerp(ret, float3(0.9,1.0,0.8), bands.z);\n\n    ret *= 1.5; //little bit of overbright\n}"}