{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":100,"warpscale":100,"dx":0.00001,"dy":0.00001,"warp":0.01,"ob_size":0.005,"ob_a":1,"ib_size":0.5,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"rad":0.34,"ang":0.53,"r":0.56,"g":0.36,"r2":0.9,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + time;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + time;"},{"baseVals":{"sides":3,"rad":0.41,"r":0,"g":0.8,"b":0.7,"g2":0.4,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang - time*.333;","init_eqs_eel":"","frame_eqs_eel":"ang = ang - time*.333;"},{"baseVals":{"sides":3,"rad":0.21,"r":0.84,"r2":1,"g2":0.58,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + time*4;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + time*4;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.2*a.bass*Math.sin(20*a.sample*a.time);a.y=.5+.2*a.bass*Math.cos(20*a.sample*a.time);a.r=1+.5*Math.sin(.1*a.sample+10*a.time);a.g=1+.5*Math.sin(2*a.sample+50*a.time);a.b=1+.5*Math.sin(5*a.sample+20*a.time);a.a=a.r;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.2)*sin(sample*2*(time*10));\ny = .5 + (bass*.2)*cos(sample*2*(time*10));\nr = 1 + .5*sin(sample*.10+(time*10));\ng = 1 + .5*sin(sample*2+(time*50));\nb = 1 + .5*sin(sample*5+(time*20));\na = r;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.volt=0;","frame_eqs_str":"a.wave_r=1;a.wave_b=0;a.wave_g=.5;a.decay=1;a.dy-=.005;","pixel_eqs_str":"a.volt=div(a.bass*a.mid*a.treb,3);a.warp+=.00001<Math.abs(above(a.x,.45+.6*Math.sin(div(3*a.time,a.volt))))?.00001<Math.abs(below(a.x,.55+.6*Math.sin(div(3*a.time,a.volt))))?.00001<Math.abs(below(a.y,.75))?.00001<Math.abs(above(a.rad,0))?1+.3*Math.sin(a.bass):0:0:0:0;a.sy+=.00001<Math.abs(above(a.y,.49+.38*Math.sin(div(3*a.time,a.volt))))?.00001<Math.abs(below(a.y,.51+.38*Math.sin(div(3*a.time,a.volt))))?.00001<Math.abs(below(a.rad,1))?-.03*Math.sin(a.bass):0:0:0;a.dy+=.00001<\nMath.abs(above(a.x,.45+.6*Math.sin(1.11*a.time)))?.00001<Math.abs(below(a.x,.55+.6*Math.sin(1.11*a.time)))?.00001<Math.abs(above(a.y,.45+.6*Math.sin(1.5*a.time)))?.00001<Math.abs(below(a.y,.55+.6*Math.sin(1.5*a.time)))?.00001<Math.abs(below(a.y,.75))?-.02*Math.sin(a.time):0:0:0:0:0;","init_eqs_eel":"","frame_eqs_eel":"wave_r = 1;\nwave_b = 0;\nwave_g = 0.5;\ndecay = 1;\ndy = dy - 0.005;","pixel_eqs_eel":"Volt = (bass*mid*treb)/3;\nwarp = warp + if (above(x, 0.45 + 0.6*sin(3*time/Volt)), if(below(x, 0.55 + 0.6*sin(3*time/Volt)), if(below(y, 0.75), if(above(rad,0.0), 1 + 0.3*sin(bass) , 0), 0), 0), 0);\nsy = sy + if (above(y, 0.49 + 0.38*sin(3*time/Volt)), if(below(y, 0.51 + 0.38*sin(3*time/Volt)), if(below(rad, 1), -0.03*sin(bass), 0), 0), 0);\ndy = dy + if\n(above(x, 0.45 + 0.6*sin(1.11*time)), if\n(below(x, 0.55 + 0.6*sin(1.11*time)), if\n(above(y, 0.45 + 0.6*sin(1.5*time)), if\n(below(y, 0.55 + 0.6*sin(1.5*time)), if\n(below(y, 0.75), -0.02*sin(time), 0), 0), 0), 0), 0);","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  float tmpvar_2;\n  tmpvar_2 = dot (texsize.zw, texsize.zw);\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \n    ((tmpvar_3 * (1.0 - (8.0 * \n      sqrt(tmpvar_2)\n    ))) + 0.5)\n  ).xyz), texture (sampler_main, (\n    (tmpvar_3 * (1.0 + (8.0 * sqrt(tmpvar_2))))\n   + 0.5)).xyz) - 0.03);\n  ret = tmpvar_1.xyz;\n }","comp":"uniform sampler2D sampler_rand00;\n shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((texture (sampler_rand00, (0.4 + \n    (0.6 * tmpvar_1.xy)\n  )) * tmpvar_1.z) * 3.0).xyz;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // feather pen\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1-8*length(texsize.zw)) + 0.5 ).xyz);\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1+8*length(texsize.zw)) + 0.5 ).xyz);\n\n    // darken over time\n    ret -= 0.03;\n}","comp_hlsl":"sampler sampler_rand00;    // this will choose a random texture from disk!\n\nshader_body         \n{\n    ret = tex2D(sampler_main, uv).xyz;\n    //float lum = ret.x;\n    //ret = lum;\n\n    float2 texc = 0.4 + 0.6*ret.xy;\n    ret = tex2D(sampler_rand00, texc) * ret.z * 3;\n\n    // add some stripes:\n    //ret += 0.04*cos(lum*29+2.8);\n}\n\n"}