{"version":2,"baseVals":{"rating":5,"modwavealphabyvolume":1,"wrap":0,"wave_a":3.496,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.5,"zoomexp":7.5239,"fshader":10,"zoom":1.0099,"cx":0.47,"sx":0.9901,"sy":0.9901,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"textured":1,"rad":3.971,"tex_zoom":0.29171,"r":0,"a":0,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"additive":1,"textured":1,"rad":1.52776,"tex_zoom":0.40839,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"a.angc=0;","frame_eqs_str":"a.ang=a.angc;a.angc-=.01*a.treb;a.x=.5+.2*Math.sin(a.angc);a.y=.5+.2*Math.sin(.98*a.angc);","init_eqs_eel":"","frame_eqs_eel":"ang = angc;\nangc = angc-treb*.01;\n\nx=.5 + .2*sin(angc);\ny=.5 + .2*sin(.98*angc);"},{"baseVals":{"enabled":1,"textured":1,"rad":6.662,"tex_zoom":0.14949,"g":1,"b":1,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_str":"a.angc=0;a.rand100=0;","frame_eqs_str":"a.ang+=a.angc;a.angc+=.01*a.bass;a.x=.5+.045*Math.sin(.234*a.time);a.y=.5+.054*Math.sin(.223*a.time);a.r2=.01*a.rand100;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + angc;\nangc = angc + bass*.01;\nx = .5 + .045*sin(.234*time);\ny = .5 + .054*sin(.223*time);\n\nr2 = (rand100)*.01"},{"baseVals":{"enabled":1,"additive":1,"textured":1,"x":0.18,"y":0.3,"rad":1.5584,"tex_zoom":0.19788,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.05*Math.sin(.23*a.time+.2*a.treb_att);a.y=.5+.05*Math.cos(.2*a.time+.2*a.bass);a.r=.5+Math.sin(a.time);a.b=.5+Math.sin(.556677*a.time);a.g=.5+Math.sin(.353*a.time);","init_eqs_eel":"","frame_eqs_eel":"x = .5+.05*sin(.23*time + .2*treb_att);\ny = .5+.05*cos(.2*time + .2*bass);\n\nr = .5+sin(time);\nb = .5+sin(time*.556677);\ng = .5+sin(time*.353);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"bassc = 0;\nbcount = 0;","frame_eqs_str":"r=bass*.5;\ng=treb*.5;\nb=mid*.5;","point_eqs_str":"x = .5+.2*sin(time*.7454);\nx = x+(.0005-int(rand(10))*.001);\ny = .5+.2*cos(time*.455);\ny = y+(.0005-int(rand(10))*.01);\n\nbassc = if(above(bcount,0),1,0);\nbcount = if(above(bcount,0),bcount - .00005,if(below(bassc,1),if(above(bass,1.5),.3,0),0));\ny = y - bcount;","init_eqs_eel":"bassc = 0;\nbcount = 0;","frame_eqs_eel":"r=bass*.5;\ng=treb*.5;\nb=mid*.5;","point_eqs_eel":"x = .5+.2*sin(time*.7454);\nx = x+(.0005-int(rand(10))*.001);\ny = .5+.2*cos(time*.455);\ny = y+(.0005-int(rand(10))*.01);\n\nbassc = if(above(bcount,0),1,0);\nbcount = if(above(bcount,0),bcount - .00005,if(below(bassc,1),if(above(bass,1.5),.3,0),0));\ny = y - bcount;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"r=bass*.5;\ng=treb*.5;\nb=mid*.5;","point_eqs_str":"x = .5+.2*sin(time*.7454);\nx = x+(.0005-int(rand(10))*.008);\ny = .5+.2*cos(time*.455);\ny = y+(.0005-int(rand(10))*.001);\n\n\nbassc = if(above(bcount,0),1,0);\nbcount = if(above(bcount,0),bcount - .00005,if(below(bassc,1),if(above(bass,1.5),.2,0),0));\nx = x - bcount;","init_eqs_eel":"","frame_eqs_eel":"r=bass*.5;\ng=treb*.5;\nb=mid*.5;","point_eqs_eel":"x = .5+.2*sin(time*.7454);\nx = x+(.0005-int(rand(10))*.008);\ny = .5+.2*cos(time*.455);\ny = y+(.0005-int(rand(10))*.001);\n\n\nbassc = if(above(bcount,0),1,0);\nbcount = if(above(bcount,0),bcount - .00005,if(below(bassc,1),if(above(bass,1.5),.2,0),0));\nx = x - bcount;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"r=bass*.5;\ng=treb*.5;\nb=mid*.5;","point_eqs_str":"x = .5+.2*sin(time*.7454);\nx = x+(.0005+int(rand(10))*.008);\ny = .5+.2*cos(time*.455);\ny = y+(.0005-int(rand(10))*.001);\n\nbassc = if(above(bcount,0),1,0);\nbcount = if(above(bcount,0),bcount - .00005,if(below(bassc,1),if(above(bass,1.5),.2,0),0));\nx = x + bcount;","init_eqs_eel":"","frame_eqs_eel":"r=bass*.5;\ng=treb*.5;\nb=mid*.5;","point_eqs_eel":"x = .5+.2*sin(time*.7454);\nx = x+(.0005+int(rand(10))*.008);\ny = .5+.2*cos(time*.455);\ny = y+(.0005-int(rand(10))*.001);\n\nbassc = if(above(bcount,0),1,0);\nbcount = if(above(bcount,0),bcount - .00005,if(below(bassc,1),if(above(bass,1.5),.2,0),0));\nx = x + bcount;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"r=bass*.5;\ng=treb*.5;\nb=mid*.5;","point_eqs_str":"x = .5+.2*sin(time*.7454);\nx = x+(.0005-int(rand(10))*.001);\ny = .5+.2*cos(time*.455);\ny = y-(.0005-int(rand(10))*.01);\n\n\nbassc = if(above(bcount,0),1,0);\nbcount = if(above(bcount,0),bcount - .00005,if(below(bassc,1),if(above(bass,1.5),.3,0),0));\ny = y + bcount;","init_eqs_eel":"","frame_eqs_eel":"r=bass*.5;\ng=treb*.5;\nb=mid*.5;","point_eqs_eel":"x = .5+.2*sin(time*.7454);\nx = x+(.0005-int(rand(10))*.001);\ny = .5+.2*cos(time*.455);\ny = y-(.0005-int(rand(10))*.01);\n\n\nbassc = if(above(bcount,0),1,0);\nbcount = if(above(bcount,0),bcount - .00005,if(below(bassc,1),if(above(bass,1.5),.3,0),0));\ny = y + bcount;"}],"init_eqs_str":"a.myval=0;a.q1=0;a.state=0;","frame_eqs_str":"a.warp=0;a.state=.00001<Math.abs(above(a.bass_att,1.3))?2+a.bass:.00001<Math.abs(above(a.treb_att,1.3))?2:1;a.wave_b=.00001<Math.abs(above(a.state,2.7))?.2+.2*Math.sin(a.time):.00001<Math.abs(equal(a.state,3))?.9+.1*Math.sin(a.time):.6+.08*Math.sin(a.time);a.wave_g=.00001<Math.abs(above(a.state,2.9))?0:.00001<Math.abs(equal(a.state,3))?0:.29;a.wave_r=.00001<Math.abs(above(a.state,3))?.75+.1*Math.sin(.55*a.time):0;a.zoom=.00001<Math.abs(above(a.bass_att+a.treb,2))?1+div(Math.cos(1.3*\na.state),10):1-div(Math.sin(1.5*a.state),10);a.q1=a.state;a.wave_mystery=div(a.time,3)+div(a.bass,10);","pixel_eqs_str":"a.myval=a.q1+div(Math.sin(div(a.time,3)),10);a.zoom=2+(.00001<Math.abs(above(a.myval,3))?div(Math.sin(pow(-a.rad,5)),10):Math.sin(-a.rad));a.rot=.00001<Math.abs(above(a.myval,3))?div(Math.sin(a.rad),20):div(Math.cos(a.x),10);a.sx=1-div(Math.sin(a.x),15);","init_eqs_eel":"","frame_eqs_eel":"warp=0;\nstate=if(above(bass_att,1.3),2+bass,if(above(treb_att,1.3),2,1));\nwave_b=if(above(state,2.7),.2+.2*sin(time),if(equal(state,3),.9+.1*sin(time),.6+.08*sin(time)));\nwave_g=if(above(state,2.9),0,if(equal(state,3),0,.29));\nwave_r=if(above(state,3),.75+.1*sin(time*.55),0);\nzoom=if(above(bass_att+treb,2),1+cos(state*1.3)/10,1-sin(state*1.5)/10);\nq1=state;\nwave_mystery=time/3+bass/10;","pixel_eqs_eel":"myval=  q1+sin(time/3)/10;\nzoom=2+if(above(myval,3),sin(pow(-rad,5))/10,sin(-rad));\nrot = if(above(myval,3),sin(rad)/20,cos((x))/10);\nsx = 1-sin(x)/15;","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + ((0.004 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ).xy * vec2(0.0, 1.0)));\n  uv6_2 = (0.4 * sin((\n    (((uv - 0.5) * aspect.xy) * 18.0)\n   * rand_frame.xy)));\n  vec3 tmpvar_3;\n  tmpvar_3.x = (treb * 0.5);\n  tmpvar_3.y = (bass * 0.5);\n  tmpvar_3.z = (mid * 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.15 * (vec3((0.051 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * tmpvar_3))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_3.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv + (tmpvar_3 * 0.55));\n  vec3 tmpvar_5;\n  tmpvar_5 = mix (ret_1, (1.0 - ret_1), ((0.7 * \n    ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1)\n  ) + (0.2 * texture (sampler_main, uv).xyz)));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (tmpvar_5, ((\n    (tmpvar_5 - (0.1 * ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3)))\n   + \n    (0.1 * ((texture (sampler_blur1, (\n      (tmpvar_4 * 1.25)\n     - 0.125)).xyz * scale1) + bias1))\n  ) + (0.42 * texture (sampler_main, tmpvar_4).xyz)), vec3(0.25, 0.25, 0.25));\n  vec3 x_7;\n  x_7 = (tmpvar_6 - 0.5);\n  ret_1 = (tmpvar_6 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) + 1.25);\n  ret_1 = (ret_1 * (ret_1 * 0.45));\n  ret_1 = (ret_1 * mix (ret_1, (\n    (1.3 * ret_1)\n   * \n    ((((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1)) - (0.25 * ((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2)))\n  ), pow (hue_shader.zxy, \n    (q2 * (1.0 - ret_1))\n  )));\n  ret_1 = (ret_1 + 0.04);\n  ret_1 = (ret_1 * (0.9 * ret_1));\n  ret_1 = (ret_1 * ((hue_shader * 4.0) - 2.75));\n  ret_1 = (ret_1 * (2.6 - ret_1));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_1;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;\n\n\nuv6 = .4*sin(uv1*18*rand_frame);\nmus = .051/(length(uv6));\nmus *= float3 (treb*.5,bass*.5,mid*.5);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .15*mus;\nfloat2 uv2 = (uv_orig-.5)-float3(bass*.1,treb*.1+0.1*q25,mid*.1);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"shader_body\n{\n\n//Code bits by Flexi and Geiss\n\n    float2 d = texsize.zw*8;\n    float1 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) ).y;\n    float1 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) ).y;\n    float2 uv_y = uv+float2(dx,dy)*0.55;  \n    float2 uv_y2 = (uv_y*1.25)-.125;  \n\n  \n    ret = lerp(ret,1-ret,.7*GetBlur1(uv_y)+.2*GetPixel(uv));\n    ret = lerp(ret,ret-.1*GetBlur3(uv_y)+.1*GetBlur1(uv_y2)+.42*GetPixel(uv_y),.25);\n    //ret *= .75;\n    ret *= saturate(length(ret-0.5)*5);\n    //ret = ret.xy;\n    ret = lum(ret);\n    ret += 1.25;\n    ret *= ret*.45;\n    float3 mask = GetBlur3(uv)-GetBlur1(uv)-.25*GetBlur2(uv_y);\n    ret *= lerp(ret,1.3*ret*mask,pow(hue_shader.zxy,q2*(1-ret)));\n    ret += .04;\n    ret *= .9*ret;\n    ret *= (hue_shader*4)-2.75;\n    ret *= 2+.6*1-ret;\n\n}"}