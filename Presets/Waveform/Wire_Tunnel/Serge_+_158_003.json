{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":1.79142,"tex_zoom":0.56151,"g":1,"b":1,"a":0,"r2":1,"g2":0.7,"b2":1,"a2":1},"init_eqs_str":"","frame_eqs_str":"a.tex_ang=.01;","init_eqs_eel":"","frame_eqs_eel":"tex_ang=0.01;"},{"baseVals":{"sides":5,"textured":1,"rad":1.3291,"tex_zoom":0.75684,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.3,"b":0.6},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.yr=0;a.xs=0;a.yp=0;a.xr=0;a.q1=0;a.xq=0;a.flip=0;a.ca=0;a.ys=0;a.sa=0;a.zq=0;a.phs=0;a.ang=0;a.tm=0;a.zp=0;a.zr=0;","frame_eqs_str":"","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=(.1*a.flip-.05)*(1-a.sample);a.zp=0;a.ang=50*a.tm;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xr=a.xp*a.sa+a.yp*a.ca;a.yr=a.xp*a.ca-a.yp*a.sa;a.zr=a.zp;a.xp=a.xr;a.yp=a.yr+.05+.2*(.5*Math.sin(a.tm)+.5)+.05;a.zp=a.zr;a.ang=.5*Math.sin(2*a.tm)+.5;a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.yq=a.yp;a.zq=a.zp;a.ang=8*a.tm;\na.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*Math.sin(2*a.tm-.5);a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.ang=-1+Math.cos(3*a.tm+.5);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.35;a.ang=.75*Math.cos(2*a.tm)-1.05;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xq=a.xp*a.sa+a.zp*a.ca;a.yq=a.yp;a.zq=a.xp*a.ca-a.zp*a.sa;a.ang=.5*Math.cos(a.tm)-\n.5;a.xp=a.xq;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yp=a.yq*a.ca-a.zq*a.sa;a.zp=a.yq*a.sa+a.zq*a.ca;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=1-a.sample;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=(flip*0.1-0.05)*(1-sample);\nzp=0;\n\n//spin;\nang=tm*50;\nsa=sin(ang);ca=cos(ang);\nxr=xp*sa + yp*ca;\nyr=xp*ca - yp*sa;\nzr=zp;\n\nxp=xr;\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\nzp=zr;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2)*0.75 - 1.05;\nsa=sin(ang);ca=cos(ang);\nxq=xp*sa + zp*ca;\nyq=yp;\nzq=xp*ca - zp*sa;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nxp=xq;\nsa=sin(ang);ca=cos(ang);\nyp=yq*ca - zq*sa;\nzp=yq*sa + zq*ca;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample);\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.3,"b":0.6},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.yr=0;a.xs=0;a.yp=0;a.xr=0;a.q1=0;a.xq=0;a.flip=0;a.ca=0;a.ys=0;a.sa=0;a.zq=0;a.phs=0;a.ang=0;a.tm=0;a.zp=0;a.zr=0;","frame_eqs_str":"","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=(.1*a.flip-.05)*(1-a.sample);a.zp=0;a.ang=50*a.tm;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xr=a.xp*a.sa+a.yp*a.ca;a.yr=a.xp*a.ca-a.yp*a.sa;a.zr=a.zp;a.xp=a.xr;a.yp=a.yr+.05+.2*(.5*Math.sin(a.tm)+.5)+.05;a.yp=-a.yp;a.zp=a.zr;a.ang=.5*Math.sin(2*a.tm)+.5;a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.yq=a.yp;a.zq=a.zp;\na.ang=8*a.tm;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*Math.sin(2*a.tm-.5);a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.ang=-1+Math.cos(3*a.tm+.5);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.35;a.ang=.75*Math.cos(2*a.tm)-1.05;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xq=a.xp*a.sa+a.zp*a.ca;a.yq=a.yp;a.zq=a.xp*a.ca-a.zp*a.sa;a.ang=.5*\nMath.cos(a.tm)-.5;a.xp=a.xq;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yp=a.yq*a.ca-a.zq*a.sa;a.zp=a.yq*a.sa+a.zq*a.ca;a.zp+=2;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=1-a.sample;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=(flip*0.1-0.05)*(1-sample);\nzp=0;\n\n//spin;\nang=tm*50;\nsa=sin(ang);ca=cos(ang);\nxr=xp*sa + yp*ca;\nyr=xp*ca - yp*sa;\nzr=zp;\n\nxp=xr;\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\nyp=-yp;\nzp=zr;\n\n//wrist movement;\nang=sin(tm*2)*0.5 +0.5;\n\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2 - 0.5)*1.5;\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2)*0.75 - 1.05;\nsa=sin(ang);ca=cos(ang);\nxq=xp*sa + zp*ca;\nyq=yp;\nzq=xp*ca - zp*sa;\n\n//upper arm up down;\nang=cos(tm)*0.5 - 0.5;\nxp=xq;\nsa=sin(ang);ca=cos(ang);\nyp=yq*ca - zq*sa;\nzp=yq*sa + zq*ca;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample);\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.72,"b":0.1},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.yr=0;a.xs=0;a.yp=0;a.xr=0;a.q1=0;a.xq=0;a.flip=0;a.ca=0;a.ys=0;a.sa=0;a.zq=0;a.phs=0;a.ang=0;a.tm=0;a.zp=0;a.zr=0;","frame_eqs_str":"","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=(.05*a.flip-.025)*(1-a.sample);a.zp=0;a.ang=50*a.tm;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xr=a.xp*a.sa+a.yp*a.ca;a.yr=a.xp*a.ca-a.yp*a.sa;a.zr=a.zp;a.xp=a.xr;a.yp=a.yr+.025+.2*(.5*Math.sin(a.tm)+.5)+.05;a.zp=a.zr;a.ang=.5*Math.sin(1.9*a.tm)+.5;a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.yq=a.yp;a.zq=a.zp;a.ang=\n8*a.tm;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*Math.sin(2.3*a.tm-.5);a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.ang=-1+Math.cos(3*a.tm+.5);a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.35;a.ang=.75*Math.cos(2*a.tm)-1.05;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xq=a.xp*a.sa+a.zp*a.ca;a.yq=\na.yp;a.zq=a.xp*a.ca-a.zp*a.sa;a.ang=.5*Math.cos(.9*a.tm)-.5;a.xp=a.xq;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yp=a.yq*a.ca-a.zq*a.sa;a.zp=a.yq*a.sa+a.zq*a.ca;a.zp+=2;a.xs=div(-a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=1-a.sample;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=(flip*0.05-0.025)*(1-sample);\nzp=0;\n\n//spin;\nang=tm*50;\nsa=sin(ang);ca=cos(ang);\nxr=xp*sa + yp*ca;\nyr=xp*ca - yp*sa;\nzr=zp;\n\nxp=xr;\nyp=yr + 0.025 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\nzp=zr;\n\n//wrist movement;\nang=sin(tm*1.9)*0.5 +0.5;\n\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2.3 - 0.5)*1.5;\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2)*0.75 - 1.05;\nsa=sin(ang);ca=cos(ang);\nxq=xp*sa + zp*ca;\nyq=yp;\nzq=xp*ca - zp*sa;\n\n//upper arm up down;\nang=cos(tm*0.9)*0.5 - 0.5;\nxp=xq;\nsa=sin(ang);ca=cos(ang);\nyp=yq*ca - zq*sa;\nzp=yq*sa + zq*ca;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=-xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample);\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.7,"b":0.1},"init_eqs_str":"a.n=0;a.yq=0;a.xp=0;a.yr=0;a.xs=0;a.yp=0;a.xr=0;a.q1=0;a.xq=0;a.flip=0;a.ca=0;a.ys=0;a.sa=0;a.zq=0;a.phs=0;a.ang=0;a.tm=0;a.zp=0;a.zr=0;","frame_eqs_str":"","point_eqs_str":"a.n=6.283*a.sample;a.phs=.2*-a.sample;a.tm=a.q1+a.phs;a.flip+=1;a.flip*=below(a.flip,2);a.xp=0;a.yp=(.05*a.flip-.025)*(1-a.sample);a.zp=0;a.ang=50*a.tm;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xr=a.xp*a.sa+a.yp*a.ca;a.yr=a.xp*a.ca-a.yp*a.sa;a.zr=a.zp;a.xp=a.xr;a.yp=a.yr+.025+.2*(.5*Math.sin(a.tm)+.5)+.05;a.yp=-a.yp;a.zp=a.zr;a.ang=.5*Math.sin(1.9*a.tm)+.5;a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.yq=a.yp;a.zq=\na.zp;a.ang=8*a.tm;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.3;a.ang=3.14+1.5*Math.sin(2.3*a.tm-.5);a.xq=a.xp;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yq=a.yp*a.sa+a.zp*a.ca;a.zq=a.yp*a.ca-a.zp*a.sa;a.ang=-1+Math.cos(3*a.tm+.5);a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xp=a.xq*a.sa+a.yq*a.ca;a.yp=a.xq*a.ca-a.yq*a.sa;a.zp=a.zq;a.zp-=.35;a.ang=.75*Math.cos(2*a.tm)-1.05;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.xq=a.xp*a.sa+a.zp*\na.ca;a.yq=a.yp;a.zq=a.xp*a.ca-a.zp*a.sa;a.ang=.5*Math.cos(.9*a.tm)-.5;a.xp=a.xq;a.sa=Math.sin(a.ang);a.ca=Math.cos(a.ang);a.yp=a.yq*a.ca-a.zq*a.sa;a.zp=a.yq*a.sa+a.zq*a.ca;a.zp+=2;a.xs=div(-a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=1.3*a.ys+.5;a.a=1-a.sample;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nphs=-sample * 0.2;\ntm=q1 + phs;\n\nflip=flip+1;\nflip=flip*below(flip,2);\n\nxp=0;\nyp=(flip*0.05-0.025)*(1-sample);\nzp=0;\n\n//spin;\nang=tm*50;\nsa=sin(ang);ca=cos(ang);\nxr=xp*sa + yp*ca;\nyr=xp*ca - yp*sa;\nzr=zp;\n\nxp=xr;\nyp=yr + 0.025 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\nyp=-yp;\nzp=zr;\n\n//wrist movement;\nang=sin(tm*1.9)*0.5 +0.5;\n\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\nyq=yp;\nzq=zp;\n\nang=tm*8;\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//forearm movement;\nzp=zp-0.3;\nang=3.14 + sin(tm*2.3 - 0.5)*1.5;\nxq=xp;\nsa=sin(ang);ca=cos(ang);\nyq=yp*sa + zp*ca;\nzq=yp*ca - zp*sa;\n\n//upper arm twist\nang=-1.0 + cos(tm*3 + 0.5);\nsa=sin(ang);ca=cos(ang);\nxp=xq*sa + yq*ca;\nyp=xq*ca - yq*sa;\nzp=zq;\n\n//upper arm outward;\nzp=zp-0.35;\nang=cos(tm*2)*0.75 - 1.05;\nsa=sin(ang);ca=cos(ang);\nxq=xp*sa + zp*ca;\nyq=yp;\nzq=xp*ca - zp*sa;\n\n//upper arm up down;\nang=cos(tm*0.9)*0.5 - 0.5;\nxp=xq;\nsa=sin(ang);ca=cos(ang);\nyp=yq*ca - zq*sa;\nzp=yq*sa + zq*ca;\n\n//xp=xq;yp=yq;zp=zq;\n\n\n//project into screenspace and draw on screen\nzp=zp+2;\nxs=-xp/zp;\nys=yp/zp;\n\nx=xs+0.5;\ny=ys*1.3+0.5;\n\n\na=(1-sample);\n"}],"init_eqs_str":"a.index2=0;a.sw=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.index3=0;a.rott=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.k2=0;a.q26=0;a.p2=0;a.avg=0;a.rota=0;a.movez=0;a.beat=0;a.vol=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q32=0;a.q7=0;a.q28=0;a.q30=0;a.v2=0;a.q20=0;a.q8=0;a.vol=0;a.p1=0;a.vx=.2;a.vy=-.1;a.kx=0;a.ky=0;","frame_eqs_str":"a.dec_med=pow(.96,div(30,a.fps));a.dec_slow=pow(.98,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),2);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),2);a.q20=a.avg;a.q21=\na.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.vol=a.bass_att+a.treb_att;a.v2=a.v2*a.dec_slow+a.vol*(1-a.dec_slow);a.q26=Math.max(Math.atan(a.vol-.8*a.v2),.3);a.q27=a.index+1;a.sw=a.sw*a.dec_med+(1-a.dec_med)*mod(a.index2,2);a.q28=a.sw;a.k1=a.is_beat*bnot(a.index);a.k2=a.is_beat*bnot(a.index);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_slow*a.p2+(1-a.dec_slow)*a.p1;a.rott=div(3.1416*a.p2,2);a.monitor=a.k1;a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q5=Math.cos(div(a.time,\n6));a.q6=-Math.sin(div(a.time,6));a.q7=-a.q6;a.q8=a.q5;a.zoom=1;a.rot=-0;a.movez+=div(.105*(a.q1+1.1),a.fps);a.q29=a.movez;a.rota+=div(.03*(2-a.q1),a.fps);a.q30=a.rota;a.q31=1+16*Math.abs(Math.cos(.1*a.time));a.q32=div(.5*Math.cos(.08*a.time),4);","pixel_eqs_str":"","init_eqs_eel":"vol = 0; p1 = 0;\nvx = .2; vy = -0.1;\nkx = 0; ky = 0;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\ndec_slow = pow (0.98, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%2;\nindex3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\n\nvol = bass_att + treb_att;\nv2 = v2 * dec_slow + vol * (1-dec_slow) ;\nq26 = max(atan (vol - v2*.8),.3);\n\nq27 = index + 1;\n\nsw = sw*dec_med + (1-dec_med)*(index2%2);\nq28 = sw;\n\nk1 =  is_beat*bnot(index);\nk2 =  is_beat*bnot(index);\n\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_slow * p2+ (1-dec_slow)*p1;\nrott = p2 * 3.1416/2;\nmonitor = k1;\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n\nq5 = cos(time/6);\nq6 = -sin(time/6);\nq7 = -q6;\nq8 = q5;\n\nzoom = 1;\nrot = -0;\n\nmovez = movez + .0035*(q1+1.1)*30/fps;\nq29 = movez;\nrota = rota + .001*(2-q1)*30/fps;\nq30 = rota;\nq31 = 1 + 16*abs(cos(time*.1));\nq32 = .5*cos(time*.08)/4;","pixel_eqs_eel":"","warp":"vec2 xlat_mutablers;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv6;\n shader_body { \n  vec2 uv_1;\n  vec3 xlat_varmod_2;\n  vec2 uv2_3;\n  float ang2_4;\n  float dist_5;\n  float z_6;\n  vec3 ret_7;\n  uv_1 = uv_orig;\n  xlat_mutableuv1 = ((uv_orig - 0.2) * aspect.xy);\n  float tmpvar_8;\n  tmpvar_8 = ((16.0 * sqrt(\n    dot (xlat_mutableuv1, xlat_mutableuv1)\n  )) + time);\n  z_6 = tmpvar_8;\n  xlat_mutablers = (clamp ((\n    (sin(tmpvar_8) / cos(tmpvar_8))\n   * \n    normalize(xlat_mutableuv1)\n  ), vec2(-5.0, -5.0), vec2(5.0, 5.0)) / 2.0);\n  vec2 tmpvar_9;\n  tmpvar_9 = sin((xlat_mutableuv1 * q31));\n  dist_5 = (sqrt(dot (tmpvar_9, tmpvar_9)) * ((\n    abs(xlat_mutableuv1.x)\n   + \n    abs(xlat_mutableuv1.y)\n  ) + q32));\n  float tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = (min (abs(\n    (tmpvar_9.y / tmpvar_9.x)\n  ), 1.0) / max (abs(\n    (tmpvar_9.y / tmpvar_9.x)\n  ), 1.0));\n  float tmpvar_12;\n  tmpvar_12 = (tmpvar_11 * tmpvar_11);\n  tmpvar_12 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_12) + 0.05368138) * tmpvar_12) - 0.1173503)\n     * tmpvar_12) + 0.1938925) * tmpvar_12) - 0.3326756)\n   * tmpvar_12) + 0.9999793) * tmpvar_11);\n  tmpvar_12 = (tmpvar_12 + (float(\n    (abs((tmpvar_9.y / tmpvar_9.x)) > 1.0)\n  ) * (\n    (tmpvar_12 * -2.0)\n   + 1.570796)));\n  tmpvar_10 = (tmpvar_12 * sign((tmpvar_9.y / tmpvar_9.x)));\n  if ((abs(tmpvar_9.x) > (1e-08 * abs(tmpvar_9.y)))) {\n    if ((tmpvar_9.x < 0.0)) {\n      if ((tmpvar_9.y >= 0.0)) {\n        tmpvar_10 += 3.141593;\n      } else {\n        tmpvar_10 = (tmpvar_10 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_10 = (sign(tmpvar_9.y) * 1.570796);\n  };\n  ang2_4 = (0.1 * floor((16.0 * tmpvar_10)));\n  vec2 tmpvar_13;\n  tmpvar_13.x = cos(ang2_4);\n  tmpvar_13.y = sin(ang2_4);\n  z_6 = (1.0 - cos((2.0 * dist_5)));\n  float tmpvar_14;\n  tmpvar_14 = clamp (z_6, 0.0, 1.0);\n  z_6 = tmpvar_14;\n  float tmpvar_15;\n  tmpvar_15 = float((tmpvar_14 >= 0.5));\n  xlat_mutablers = ((q28 * xlat_mutablers) + ((1.0 - q28) * xlat_mutablers.yx));\n  uv_1 = (uv_orig + ((\n    ((1.0 - tmpvar_15) * 0.03)\n   * xlat_mutablers.yx) + (\n    ((0.5 * tmpvar_15) * tmpvar_14)\n   * \n    normalize(((0.5 * tmpvar_9) + tmpvar_13))\n  )));\n  mat2 tmpvar_16;\n  tmpvar_16[uint(0)] = _qb.xy;\n  tmpvar_16[1u] = _qb.zw;\n  xlat_mutableuv6 = (xlat_mutableuv1 * tmpvar_16);\n  vec2 tmpvar_17;\n  tmpvar_17.x = q5;\n  tmpvar_17.y = q6;\n  uv2_3 = (((0.7 * xlat_mutableuv1) + (0.3 * \n    sin(((xlat_mutableuv1 * 16.0) + (4.0 * tmpvar_17)))\n  )) * 0.2);\n  vec4 tmpvar_18;\n  tmpvar_18 = texture (sampler_main, uv_1);\n  vec3 tmpvar_19;\n  tmpvar_19 = ((tmpvar_18.xyz + vec3((\n    abs((0.01 / (sqrt(xlat_mutableuv6.x) + 0.001)))\n   * \n    (rad + 0.2)\n  ))) + vec3((q26 * clamp (\n    (0.001 / sqrt(dot (uv2_3, uv2_3)))\n  , 0.0, 1.0))));\n  xlat_varmod_2 = (1.0 - ((texture (sampler_noise_lq, \n    ((0.5 * uv_1) + (time * 0.01))\n  ) - 0.2).xyz * (tmpvar_18.xyz - \n    (0.5 * ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1))\n  )));\n  ret_7 = (((\n    (1.0 - tmpvar_15)\n   * tmpvar_19) * xlat_varmod_2) + ((tmpvar_15 * tmpvar_19) * xlat_varmod_2));\n  ret_7 = ((ret_7 * 0.75) - 0.03);\n  vec4 tmpvar_20;\n  tmpvar_20.w = 1.0;\n  tmpvar_20.xyz = ret_7;\n  ret = tmpvar_20.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.05));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = (tmpvar_5 * 1.5);\n  uv2_3.y = (tmpvar_6.y + (0.1 * time));\n  uv2_3.x = (tmpvar_7 + (0.02 * time));\n  uv3_2.y = (tmpvar_5 + q30);\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = ((texture (sampler_main, fract(uv2_3)).xyz + (2.0 * texture (sampler_main, \n    fract(uv3_2)\n  ).xyz)) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_8;\n  tmpvar_8 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ((crisp_1 + (\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_8)) + (tmpvar_8 * texture (sampler_main, fract(uv)).xyz));\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"float3 mus;\nfloat2 rs, uv1, uv6, uv7, uv8;\nfloat dx,dy;\nshader_body {\nuv = uv_orig;\nuv1 = (uv-.2) * aspect.xy;\n\n//BACKGROUND\nfloat z = 16*length(uv1)+time;\nfloat2 uvn =normalize(uv1);\nrs = clamp(tan(z)*uvn,-5,5)/2;\n\n//CRYSTAL\nfloat mult = q31;\nuv7 = sin(uv1*mult);\nuv8 = uv7;\nfloat dist = length(uv8);\ndist *= (abs(uv1.x) + abs(uv1.y))+ q32;\n\nfloat ang2 = atan2 (uv8.y,uv8.x);\nang2 =  .1*floor (16* ang2);\nfloat2 dir = .5*uv8+float2 (cos(ang2), sin(ang2));\n\n\nz = (1-cos(2*dist));\nz = saturate (z);\n\n//ADD\nfloat mask = (z >= .5); //momentan beliebig\nrs = q28*rs + (1-q28)*rs.yx;\nuv += (1-mask)*.03*(rs.yx) + .5*mask*z*normalize(dir);\n\n//ZENTRALSTRAHL\nuv6 = mul (uv1,float2x2(_qb));\nmus = abs(0.01/(sqrt(uv6.x)+.001))*(rad+.2);\n\n//DOTS\nfloat2 uv2 = .7*uv1+.3*sin(uv1*16+4*float2 (q5,q6));\nuv2 *= .2;\nfloat3 dots = q26*saturate(.001/(length(uv2)));\nfloat3 blur = GetBlur1(frac(uv));\nfloat3 crisp= GetPixel(uv);\nfloat3 diff = (crisp) - .5*blur;\nfloat3 ret1 = crisp + mus + dots;\n\nfloat3 mod = tex2D (sampler_noise_lq,.5*uv+time*.01)-.2;\nmod = 1 - mod*diff;\n\nret = (1-mask)*ret1*mod + mask*ret1*mod;\nret = ret *.75- .03;\n\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\nfloat rad2 = length(uv1) + .05;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1*1.5);\nuv2.y = uv2.y  +0.1*time;\nuv2.x = uv2.x  +.02*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1);\nuv3.y = uv3.y  + q30 ;\nuv3.x = uv3.x  + time/32;\n\n\nfloat3 crisp = GetPixel(frac(uv2)) + 2*GetPixel(frac(uv3));\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (1,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\n\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(frac(uv));\n\n}"}