{"version":2,"baseVals":{"rating":5,"gammaadj":2.05,"decay":0.96,"echo_zoom":1.069,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"wave_brighten":0,"darken":1,"wave_a":1.3,"wave_scale":1.882,"wave_smoothing":0.36,"modwavealphastart":0.85,"modwavealphaend":1.53,"zoomexp":2.46846,"fshader":1,"zoom":1.00179,"warp":0.01,"wave_r":0.86,"wave_g":0.87,"wave_b":0.99,"wave_y":0.75,"ob_size":0.005,"ob_r":1,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.bblock=0;a.grid=0;a.q6=0;a.snee=0;a.q1=0;a.q5=0;a.tth=0;a.tblock=0;a.bpulse=0;a.pulse=0;a.mblock=0;a.q4=0;a.snur=0;a.mpulse=0;a.mod_state=0;a.bth=0;a.mres=0;a.tpulse=0;a.tres=0;a.le=0;a.ccl=0;a.q2=0;a.bres=0;a.q3=0;a.mth=0;a.q7=0;a.q8=0;","frame_eqs_str":"a.warp=0;a.le=1.5+2*Math.sin(a.bass_att);a.bpulse=band(above(a.le,a.bth),above(a.le-a.bth,a.bblock));a.bblock=a.le-a.bth;a.bth=.00001<Math.abs(above(a.le,a.bth))?a.le+div(114,a.le+10)-7.407:a.bth+div(.07*a.bth,a.bth-12)+.1*below(a.bth,2.7)*(2.7-a.bth);a.bth=.00001<Math.abs(above(a.bth,6))?6:a.bth;a.bres=a.bpulse*Math.sin(a.pulse+.5*a.le)+bnot(a.bpulse)*a.bres;a.le=1.5+2*Math.sin(a.treb_att);a.tpulse=band(above(a.le,a.tth),above(a.le-a.tth,a.tblock));a.tblock=a.le-a.tth;a.tth=\n.00001<Math.abs(above(a.le,a.tth))?a.le+div(114,a.le+10)-7.407:a.tth+div(.07*a.tth,a.tth-12)+.1*below(a.tth,2.7)*(2.7-a.tth);a.tth=.00001<Math.abs(above(a.tth,6))?6:a.tth;a.tres=a.tpulse*Math.sin(a.pulse+.5*a.le)+bnot(a.tpulse)*a.tres;a.le=1.5+2*Math.sin(a.mid_att);a.mpulse=band(above(a.le,a.mth),above(a.le-a.mth,a.mblock));a.mblock=a.le-a.mth;a.mth=.00001<Math.abs(above(a.le,a.mth))?a.le+div(114,a.le+10)-7.407:a.mth+div(.07*a.mth,a.mth-12)+.1*below(a.mth,2.7)*(2.7-a.mth);a.mth=.00001<Math.abs(above(a.mth,\n6))?6:a.mth;a.mres=a.mpulse*Math.sin(a.pulse+.5*a.le)+bnot(a.mpulse)*a.mres;a.pulse=.00001<Math.abs(above(Math.abs(a.pulse),3.14))?-3.14:a.pulse+.003*(a.bth+a.mth+a.tth);a.q1=a.bres;a.q2=a.tres;a.q3=a.mres;a.q4=Math.sin(a.pulse);a.mod_state=(above(a.q1,0)+above(a.q2,0)+above(a.q3,0))*(1+above(a.q4,0));a.ccl=a.ccl+a.tpulse+a.mpulse-a.bpulse;a.q5=Math.cos(a.pulse*(.5+.1*a.mod_state));a.q6=Math.sin(a.pulse*(.5+pow(.25,a.mod_state)));a.q7=a.mod_state;a.q8=a.ccl;a.ob_r=.5+.5*Math.cos(a.q1+a.q7);a.ob_g=\n.5+.5*Math.cos(3.14*a.q2+a.q7);a.ob_b=.5+.5*Math.cos(2*a.q3+Math.sin(.0816*a.time));a.ib_size=.025+.02*a.q2;a.ob_size=.03+.02*a.q3-.002*a.q7;a.wave_r=.5+.5*Math.sin(a.q1*a.q7+2.183*a.time);a.wave_g=.5+.5*Math.sin(3*a.q2+1.211*a.time);a.wave_b=.5+.5*Math.sin(a.q3+1.541*a.time);a.decay=.997+.0015*a.q3+.0015*a.q1;a.ob_a=.5+.5*a.q2;","pixel_eqs_str":"a.snee=bnot(above(Math.sin(a.ang)-a.x,.5)*above(a.q2,0)+above(a.y-Math.cos(a.ang),.5)*above(a.q1,0));a.snur=bnot(below(a.x,.5)*above(a.q3,0)+below(a.y,.5)*below(a.q7,4));a.grid=Math.sin(sigmoid(Math.sin(6.28*a.y*a.q2),Math.sin(6.28*a.x*a.q6))*(10+a.q7));a.rot=(1-a.snee*(.00001<Math.abs(above(a.grid,0))?a.snur:bnot(a.snur))*(.5+.5*Math.sin(3.14*a.rad*a.q1)))*a.q6*.13;a.zoom+=.01*Math.sin(a.rad*(mod(a.q7,2)+a.q5)*2*a.q2+1.6*a.q1+a.q8)*bnot(a.snee)*(.00001<Math.abs(a.snur)?-1:\na.q3);a.sx-=bor(bnot(a.snee),bnot(a.snur))*Math.cos(3.14*a.y*a.q4)*.04;a.sy-=bor(bnot(a.snee),a.snur)*Math.cos(3.14*a.x*a.q6)*.04;a.cx+=.26*Math.sin(3.14*a.rad*a.q4);a.cy=a.cx+.1816*Math.sin(3.14*a.q5);","init_eqs_eel":"","frame_eqs_eel":"warp=0;\nle=1+.5+2*sin(bass_att);\nbpulse=band(above(le,bth),above(le-bth,bblock));\nbblock=le-bth;\nbth=if(above(le,bth),le+114/(le+10)-7.407,\nbth+bth*.07/(bth-12)+below(bth,2.7)*.1*(2.7-bth));\nbth=if(above(bth,6),6,bth);\nbres=bpulse*sin(pulse+le*.5) + bnot(bpulse)*bres;\n\nle=1+.5+2*sin(treb_att);\ntpulse=band(above(le,tth),above(le-tth,tblock));\ntblock=le-tth;\ntth=if(above(le,tth),le+114/(le+10)-7.407,\ntth+tth*.07/(tth-12)+below(tth,2.7)*.1*(2.7-tth));\ntth=if(above(tth,6),6,tth);\ntres=tpulse*sin(pulse+le*.5) + bnot(tpulse)*tres;\n\nle=1+.5+2*sin(mid_att);\nmpulse=band(above(le,mth),above(le-mth,mblock));\nmblock=le-mth;\nmth=if(above(le,mth),le+114/(le+10)-7.407,\nmth+mth*.07/(mth-12)+below(mth,2.7)*.1*(2.7-mth));\nmth=if(above(mth,6),6,mth);\nmres=mpulse*sin(pulse+le*.5) + bnot(mpulse)*mres;\n\n\n\npulse=if(above(abs(pulse),3.14),-3.14,pulse+(bth+mth+tth)*.003);\nq1=bres;\nq2=tres;\nq3=mres;\nq4=sin(pulse);\n\nmod_state=(above(q1,0)+above(q2,0)+above(q3,0))*(1+above(q4,0));\nccl=ccl+tpulse+mpulse-bpulse;\nq5=cos(pulse*(.5+.1*mod_state));\nq6=sin(pulse*(.5+pow(.25,mod_state)));\nq7=mod_state;\nq8=ccl;\nob_r=.5+.5*cos(q1+q7);\nob_g=.5+.5*cos(q2*3.14+q7);\nob_b=.5+.5*cos(q3*2+sin(time*.0816));\nib_size=.025+.02*q2;\nob_size=.03+.02*q3-.002*q7;\nwave_r=.5+.5*sin(q1*q7+time*2.183);\nwave_g=.5+.5*sin(q2*3+time*1.211);\nwave_b=.5+.5*sin(q3+time*1.541);\n\ndecay=.997+.0015*q3+.0015*q1;\nob_a=.5+.5*q2;","pixel_eqs_eel":"snee=bnot(above(sin(ang)-x,.5)*above(q2,0)+above(y-cos(ang),.5)*above(q1,0));\nsnur=bnot(below(x,.5)*above(q3,0)+below(y,.5)*below(q7,4));\ngrid=sin(sigmoid(sin(y*6.28*q2),sin(x*6.28*q6))*(10+q7));\nrot=(1-snee*if(above(grid,0),snur,bnot(snur))*(.5+.5*sin(rad*3.14*q1)))*q6*.13;\nzoom=zoom+.01*sin(rad*(q7%2+q5)*2*q2+1.6*q1+q8)*bnot(snee)*if(snur,-1,q3);\nsx=sx-bor(bnot(snee),bnot(snur))*cos(y*3.14*q4)*.04;\nsy=sy-bor(bnot(snee),snur)*cos(x*3.14*q6)*.04;\ncx=cx+sin(rad*3.14*q4)*.26;\ncy=cx+sin(3.14*q5)*.1816;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_fc_main, uv).xyz;\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).y * 2.0)\n   - 1.0) * 0.002));\n  vec2 tmpvar_2;\n  tmpvar_2.x = (0.5 + (0.5 * sin(\n    -(uv.x)\n  )));\n  tmpvar_2.y = (0.8 - uv.y);\n  ret_1 = (ret_1 + ((\n    ((((texture (sampler_blur1, \n      (tmpvar_2 + 0.1)\n    ).xyz * scale1) + bias1).zzz * tmpvar_2.y) * tmpvar_2.y)\n   * tmpvar_2.y) * 0.005));\n  ret_1 = (ret_1 * 0.978);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.05));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = (tmpvar_5 * 1.5);\n  uv2_3.y = (tmpvar_6.y + (0.1 * time));\n  uv2_3.x = (tmpvar_7 + (0.02 * time));\n  uv3_2.y = (tmpvar_5 + q30);\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = ((texture (sampler_main, uv2_3).xyz + (2.0 * texture (sampler_main, uv3_2).xyz)) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_8;\n  tmpvar_8 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ((crisp_1 + (\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_8)) + (tmpvar_8 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret.xyz = tex2D( sampler_fc_main, uv ).xyz;\n    \n    float2 noise_uv = uv_orig * texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    float4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\n    ret.xyz += (noiseVal.y*2-1) *0.002;\n    //ret.y += (noiseVal.y*2-1) *0.0015;\n    //ret.z += (noiseVal.z*2-1) *0.0015;\n    //ret.x -= (noiseVal.x*2-1) *0.01;    \n     float2 uvrot = float2(0.5 + 0.5*sin(-uv.x),0.8-uv.y);    \n     ret.xyz += GetBlur1(uvrot+0.1).zzz*uvrot.y*uvrot.y*uvrot.y*0.005;\n    // darken (decay) over time\n    //ret.x *= plastic*GetPixel(uv).x;\n    ret.xyz *= 0.98 - 0.002; \n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\nfloat rad2 = length(uv1) + .05;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1*1.5);\nuv2.y = uv2.y  +0.1*time;\nuv2.x = uv2.x  +.02*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1);\nuv3.y = uv3.y  + q30 ;\nuv3.x = uv3.x  + time/32;\n\n\nfloat3 crisp = GetPixel(uv2) + 2*GetPixel(uv3);\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (1,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\n\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(uv);\n\n}"}