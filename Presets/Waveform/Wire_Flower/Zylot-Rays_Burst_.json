{"version":2,"baseVals":{"rating":5,"wave_scale":1.645,"wave_mystery":-0.52,"wave_r":0.1,"wave_g":0.1,"wave_b":0.1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.ray=0;","frame_eqs_str":"a.warp=0;a.wave_r+=.3*a.bass;a.wave_g+=.3*a.treb;a.wave_b+=.3*a.mid;a.rot=.01*Math.sin(.05*a.time);","pixel_eqs_str":"a.ray=3.1415926*pow(a.rad,2);a.zoom=1.7*div(a.ray,a.rad);","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\nwave_r = wave_r + bass*.3;\nwave_g = wave_g + treb*.3;\nwave_b = wave_b + mid*.3;\nrot = .01*sin(time*.05)","pixel_eqs_eel":"ray = 3.1415926 * pow(rad,2);\nzoom = (ray/rad)*1.7;","warp":" shader_body { \n  vec3 ret_1;\n  float tmpvar_2;\n  tmpvar_2 = (2.0 + sin((time * 0.7464526)));\n  float tmpvar_3;\n  tmpvar_3 = (2.0 + sin((time * 0.9875432)));\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = tmpvar_2;\n  vec2 tmpvar_5;\n  tmpvar_5.x = 0.0;\n  tmpvar_5.y = tmpvar_3;\n  vec2 tmpvar_6;\n  tmpvar_6.y = 0.0;\n  tmpvar_6.x = tmpvar_2;\n  vec2 tmpvar_7;\n  tmpvar_7.y = 0.0;\n  tmpvar_7.x = tmpvar_3;\n  ret_1 = (max (max (\n    max (max (ret_1, texture (sampler_main, (uv + (tmpvar_4 * texsize.zw))).xyz), texture (sampler_main, (uv - (tmpvar_5 * texsize.zw))).xyz)\n  , texture (sampler_main, \n    (uv + (tmpvar_6 * texsize.zw))\n  ).xyz), texture (sampler_main, (uv - \n    (tmpvar_7 * texsize.zw)\n  )).xyz) * 0.7);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_1;\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz * 2.0);\n  ret_1 = (ret_1 + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\n  ret_1 = (ret_1 + ((texture (sampler_blur2, uv).xyz * scale2) + bias2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    float dd = 2+sin(time*.7464526);\n    float du = 2+sin(time*.9875432);\n    // sample previous frame\n    ret = max(ret, tex2D( sampler_main, uv + float2(0,dd)*texsize.zw ).xyz);\n    ret = max(ret, tex2D( sampler_main, uv - float2(0,du)*texsize.zw ).xyz);\n    ret = max(ret, tex2D( sampler_main, uv + float2(dd,0)*texsize.zw ).xyz);\n    ret = max(ret, tex2D( sampler_main, uv - float2(du,0)*texsize.zw ).xyz);\n    \n    ret *= .7;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret *= 2.00; //gamma\n\n    ret += GetBlur1(uv);\n    ret += GetBlur2(uv);\n}"}