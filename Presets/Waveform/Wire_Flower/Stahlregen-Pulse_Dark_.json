{"version":2,"baseVals":{"rating":5,"additivewave":1,"darken_center":1,"wave_scale":0.672,"wave_mystery":-0.3,"warpscale":0.011,"zoomexp":0.55045,"zoom":1.01,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"r":0,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.box=0;a.q1=0;a.box2=0;a.dbass=0;a.basst=0;","frame_eqs_str":"a.wave_r=0;a.wave_g=.85+.15*Math.sin(2*a.time);a.dbass=.5*a.dbass+.5*a.bass;a.basst+=.1*a.dbass;a.q1=.15*a.time+.85*a.basst;a.warp=0;","pixel_eqs_str":"a.box=above(a.rad,.3+.3*Math.tan(4*a.q1))*below(a.rad,1+.3*Math.tan(4*a.q1));a.box2=above(a.rad,.3+.3*Math.tan(4*a.q1+1.57))*below(a.rad,1+.3*Math.tan(4*a.q1+1.57));a.sx=1+.05*a.box+.05*a.box2;a.sy=1+.05*a.box+.05*a.box2;","init_eqs_eel":"","frame_eqs_eel":"wave_r = 0;\nwave_g = .85+.15*sin(2*time);\ndbass = .5*dbass+.5*bass;\nbasst = basst+.1*dbass;\nq1 = .15*time+.85*basst;\nwarp = 0;","pixel_eqs_eel":"box = above(rad,0.3+.3*tan(4*q1))*below(rad,1+.3*tan(4*q1));\nbox2 = above(rad,0.3+.3*tan(4*q1+1.57))*below(rad,1+.3*tan(4*q1+1.57));\nsx = 1+.05*box+.05*box2;\nsy = 1+.05*box+.05*box2;","warp":"","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = ((-0.8 * texture (sampler_main, uv).xyz) + ((texture (sampler_blur3, uv).xyz * scale3) + bias3));\n  ret_1 = (ret_1 * 2.0);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\n    ret = -.8*tex2D(sampler_main, uv).xyz+GetBlur3(uv);\n    ret *= 2;\n}"}