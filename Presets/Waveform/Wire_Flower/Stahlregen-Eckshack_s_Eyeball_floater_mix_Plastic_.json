{"version":2,"baseVals":{"rating":5,"wave_mode":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":1.078,"wave_scale":1.294,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":0.2,"modwavealphaend":2,"warpanimspeed":100,"warpscale":0.01,"zoomexp":0.17914,"zoom":1.04908,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"textured":1,"rad":0.14741,"ang":1.5708,"tex_zoom":0.99999,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.r=.5+.5*Math.sin(.75*a.time);a.b=.5+.5*Math.sin(1.5*a.time);a.g=.5+.5*Math.sin(2*a.time);a.r2=a.r;a.b2=a.b;a.g2=a.g;","init_eqs_eel":"","frame_eqs_eel":"r = .5+.5*sin(time*.75);\nb = .5+.5*sin(time*1.5);\ng = .5+.5*sin(time*2);\nr2 = r;\nb2= b;\ng2 = g;"},{"baseVals":{"enabled":1,"sides":32,"textured":1,"num_inst":2,"rad":0.24486,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.xmod=0;a.ymod=0;","frame_eqs_str":"a.xmod=.25*Math.sin(.542*a.time)+.125*Math.cos(.367*a.time);a.ymod=.25*Math.cos(.542*a.time)+.125*Math.sin(.367*a.time);a.x=.5+a.xmod*equal(a.instance,0)-a.xmod*equal(a.instance,1);a.y=.5+a.ymod*equal(a.instance,0)-a.ymod*equal(a.instance,1);","init_eqs_eel":"","frame_eqs_eel":"xmod = +.25*sin(0.542*time)+.125*cos(0.367*time);\nymod = +.25*cos(0.542*time)+.125*sin(0.367*time);\n\nx = .5+xmod*equal(instance,0)-xmod*equal(instance,1);\ny = .5+ymod*equal(instance,0)-ymod*equal(instance,1);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.warp=0;","pixel_eqs_str":"a.warp=.75*above(a.rad,.2-.05*a.treb)*below(a.rad,.25-.05*a.treb)*(a.bass_att-.5);","init_eqs_eel":"","frame_eqs_eel":"warp = 0;","pixel_eqs_eel":"warp = .75*above(rad,.2-.05*treb)*below(rad,.25-.05*treb)*(bass_att-.5);","warp":"","comp":" shader_body { \n  vec3 plastic_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 8.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.x;\n  tmpvar_6.y = tmpvar_5.x;\n  vec2 x_7;\n  x_7 = (uv - (tmpvar_6 * 5.0));\n  plastic_1.x = (5.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_7, x_7)), 0.5)\n  )));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_4.y;\n  tmpvar_8.y = tmpvar_5.y;\n  vec2 x_9;\n  x_9 = (uv - (tmpvar_8 * 5.0));\n  plastic_1.y = (5.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_9, x_9)), 0.5)\n  )));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.z;\n  tmpvar_10.y = tmpvar_5.z;\n  vec2 x_11;\n  x_11 = (uv - (tmpvar_10 * 5.0));\n  plastic_1.z = (5.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_11, x_11)), 0.5)\n  )));\n  ret_2 = (plastic_1 * texture (sampler_main, uv).xyz);\n  ret_2 = (ret_2 * 3.0);\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_2;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\n    //flexi's bump map effect\n\n    float2 d = texsize.zw*8; \n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) ); \n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) ); \n    float2 light_pos = float2(0,0); \n    float3 col = float3(5,5,5); \n    float c = 5; \n    float dd = 16; \n    float3 plastic; \n    plastic.x = col.x/(1+dd*pow(length( uv - float2(dx.x,dy.x)*c - light_pos),0.5)); \n    plastic.y = col.y/(1+dd*pow(length( uv - float2(dx.y,dy.y)*c - light_pos),0.5)); \n    plastic.z = col.z/(1+dd*pow(length( uv - float2(dx.z,dy.z)*c - light_pos),0.5)); \n\n    ret = plastic*GetPixel(uv); \n    ret *= 3;\n\n\n}"}