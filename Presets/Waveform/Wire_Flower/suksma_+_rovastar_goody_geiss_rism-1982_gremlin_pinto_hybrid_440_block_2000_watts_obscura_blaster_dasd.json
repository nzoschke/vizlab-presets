{"version":2,"baseVals":{"rating":5,"gammaadj":2.4,"decay":0.99,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"wave_a":1,"wave_scale":1.348,"wave_mystery":-0.5,"warpscale":2.853,"zoomexp":2.63006,"zoom":1.031,"warp":0,"ob_size":0,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"sides":34,"additive":1,"rad":0.33004,"g":1,"b":1,"a":0.02,"r2":1,"b2":1,"a2":0.01,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5 + .25*cos(time);\ny = .5 + .25*sin(time);","init_eqs_eel":"","frame_eqs_eel":"x = .5 + .25*cos(time);\ny = .5 + .25*sin(time);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;a.q8=0;a.oldq8=0;a.bass_thresh=0;a.q5_residual=0;a.q6_residual=0;","frame_eqs_str":"a.wave_r+=.4*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.1*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.wave_b+=.1*(.6*Math.sin(.91*a.time)+.4*Math.sin(.92*a.time));a.mv_r=a.wave_r;a.mv_b=a.wave_b;a.mv_g=a.wave_g;a.q8=a.oldq8+.0003*div(pow(1+1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,6),a.fps);a.oldq8=a.q8;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.q5_residual=\n.0064*equal(a.bass_thresh,2)*Math.sin(5*a.q8)+(1-equal(a.bass_thresh,2))*a.q5_residual;a.q6_residual=.0048*equal(a.bass_thresh,2)*Math.sin(6*a.q8)+(1-equal(a.bass_thresh,2))*a.q6_residual;a.dx=a.q5_residual;a.dy=a.q6_residual;a.q1=.03*div(pow(1+1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,6),a.fps);a.monitor=a.q1;a.mv_a=a.bass-1.2;","pixel_eqs_str":"a.zoom=.9+.1*a.q1+.1*a.rad;a.zoomexp=2*a.zoom;","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\nmv_r = wave_r;\nmv_b = wave_b;\nmv_g = wave_g;\nq8 =oldq8+ 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\noldq8 = q8;\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\nq5_residual = equal(bass_thresh,2)*0.0064*sin(q8*5) + (1-equal(bass_thresh,2))*q5_residual;\nq6_residual = equal(bass_thresh,2)*0.0048*sin(q8*6) + (1-equal(bass_thresh,2))*q6_residual;\ndx=q5_residual ;\ndy=q6_residual ;\nq1 = 0.03*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\nmonitor = q1;\nmv_a = bass-1.2;","pixel_eqs_eel":"zoom = 0.9 + 0.1*q1 + rad*0.1;\nzoomexp = 2*zoom;","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, ((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.1))).xyz - 0.5)\n   / 256.0) * 28.0));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.04, 0.04, 0.04));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * 0.4) + ((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) * 1.75));\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // take the difference between the crisp and blurred images,\n    // then add it back into the image.  Creates spots and stripes over time.\n    ret += (ret - GetBlur1(uv))*0.3;\n    ret *= 0.9;\n\n   // add noise:\n   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.1;// + rand_frame.xy;\n   ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 28;\n\n   // desaturate over time, to keep the globs white\n   ret = lerp(ret, lum(ret), 0.04);\n}","comp_hlsl":"shader_body\n{\n    ret = GetPixel(uv)*0.4 + GetBlur2(uv)*1.75;\n}\n\n"}