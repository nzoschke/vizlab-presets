{"version":2,"baseVals":{"rating":5,"wave_mode":6,"wave_a":4,"wave_scale":1.692,"wave_smoothing":0.18,"warpscale":3.138,"zoom":1.0203,"cy":0.11,"dx":-0.001,"dy":-0.001,"warp":0.4391,"wave_y":0.52,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":50,"smoothing":0.27,"b":0.8,"a":0.12},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.25*(.6*Math.sin(10.937*a.time)+.4*Math.sin(1.47*a.time));a.wave_g+=.15*(.6*Math.sin(11.344*a.time)+.4*Math.sin(1.041*a.time));a.wave_b+=.12*(.6*Math.sin(21.251*a.time)+.4*Math.sin(1.355*a.time));","pixel_eqs_str":"a.dx=0;a.dy=0;","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.250*( 0.60*sin(10.937*time) + 0.40*sin(1.470*time) );\nwave_g = wave_g + 0.150*( 0.60*sin(11.344*time) + 0.40*sin(1.041*time) );\nwave_b = wave_b + 0.120*( 0.60*sin(21.251*time) + 0.40*sin(1.355*time) );\n//wave_mystery = time*0.3;","pixel_eqs_eel":"dx = 0;\ndy = 0;","warp":"uniform sampler2D sampler_rand00;\n shader_body { \n  vec3 uv2_1;\n  vec3 tmpvar_2;\n  tmpvar_2.z = 1.0;\n  tmpvar_2.xy = uv;\n  vec3 tmpvar_3;\n  tmpvar_3 = (tmpvar_2 + (0.02 * (\n    fract((texture (sampler_rand00, uv).xyz - (time * vec3(0.32, 0.39, 0.35))))\n   - 0.5)));\n  uv2_1.z = tmpvar_3.z;\n  uv2_1.xy = (((tmpvar_3.xy - 0.5) * tmpvar_3.z) + 0.5);\n  uv2_1.xy = (uv2_1.xy + (uv - uv_orig));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ((texture (sampler_main, uv2_1.xy).xyz * 0.99) - 0.003);\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1.x = tmpvar_2.x;\n  ret_1.yz = (tmpvar_2.x * vec2(0.9, 0.7));\n  ret_1 = (pow (ret_1, vec3(1.7, 2.0, 2.2)) * 5.0);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"sampler sampler_rand00;\n\nshader_body\n{\n    float3 uv2 = float3(uv,1) + 0.02*(frac(tex2d(sampler_rand00, uv).xyz - time*float3(0.32,0.39,0.35))-0.5);\n    uv2.xy = (uv2.xy-0.5)*uv2.z + 0.5;\n\n    uv2.xy += (uv.xy - uv_orig.xy);\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv2.xy ).xyz;\n    \n    // darken (decay) over time\n    ret = (ret*0.99) - 0.003;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    //ret += GetBlur1(uv)*0.7; ret *= 0.6;\n    \n    ret.yz = ret.x * float2(0.9,0.7);\n    ret = pow(ret, float3(1.7,2.0,2.2));\n    ret *= 5; //gamma\n}"}