{"version":2,"baseVals":{"rating":5,"wave_mode":6,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"wave_scale":2.705,"wave_smoothing":0,"modwavealphastart":0,"modwavealphaend":2,"warp":0.01,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.warp=0;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"warp = 0;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_fc_main, uv);\n  ret_1.yz = tmpvar_2.yz;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(3.0, 0.0) * texsize.zw);\n  vec2 tmpvar_4;\n  tmpvar_4 = (vec2(0.0, 3.0) * texsize.zw);\n  ret_1.x = (tmpvar_2.x + max (max (\n    ((texture (sampler_blur1, (uv + tmpvar_3)).xyz * scale1) + bias1)\n  .x, \n    ((texture (sampler_blur1, (uv - tmpvar_3)).xyz * scale1) + bias1)\n  .x), max (\n    ((texture (sampler_blur1, (uv + tmpvar_4)).xyz * scale1) + bias1)\n  .x, \n    ((texture (sampler_blur1, (uv - tmpvar_4)).xyz * scale1) + bias1)\n  .x)));\n  ret_1.x = (ret_1.x - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).x);\n  ret_1 = ((ret_1 * vec3(0.94, 0.0, 0.0)) - 0.003);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xxx * tmpvar_2.xxx);\n  vec3 tmpvar_3;\n  tmpvar_3 = pow (sqrt(ret_1), vec3(3.0, 0.8, 0.7));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz;\n\n    \nret.x += max(\nmax(GetBlur1(uv+float2(3,0)*texsize.zw).x,GetBlur1(uv-float2(3,0)*texsize.zw).x),\nmax(GetBlur1(uv+float2(0,3)*texsize.zw).x,GetBlur1(uv-float2(0,3)*texsize.zw).x));\nret.x -= GetBlur1(uv).x;\n    // darken (decay) over time\nret = ret*float3(.94,0,0)-.003; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xxx;\n    ret *= ret;\n    ret = sqrt(ret); //gamma\n    ret = pow(ret,float3(3,.8,.7));\n}"}