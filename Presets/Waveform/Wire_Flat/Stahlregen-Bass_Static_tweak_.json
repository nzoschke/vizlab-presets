{"version":2,"baseVals":{"rating":5,"wave_mode":7,"wave_scale":5.428,"wave_smoothing":0.9,"zoomexp":0.48454,"zoom":0.9999,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.trebc=0;a.bassc=0;","frame_eqs_str":"a.warp=0;a.wave_r=.5+.5*Math.sin(5*a.time);a.wave_g=.5+.5*Math.sin(7*a.time);a.wave_b=.25*Math.sin(9*a.time);a.wave_mystery=div(rand(200)-rand(200),100);a.trebc=.9*a.trebc+a.treb;a.bassc=.9*a.bassc+a.bass;a.zoom=.975+.05*above(a.bassc,a.trebc);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\nwave_r = .5+.5*sin(time*5);\nwave_g = .5+.5*sin(time*7);\nwave_b = .5*.5*sin(time*9);\n\nwave_mystery =(rand(200)-rand(200))/100;\n\ntrebc = .9*trebc+treb;\nbassc = .9*bassc+bass;\n\nzoom = .975+above(bassc,trebc)*.05;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = ((texture (sampler_blur3, uv).xyz * scale3) + bias3);\n  float tmpvar_2;\n  tmpvar_2 = (0.01 * time);\n  ret_1 = (texture (sampler_main, mix (uv, (\n    (uv * (1.0 - (0.05 * texture (sampler_noise_lq, (\n      clamp (ret_1.xy, 0.0, 1.0)\n     + tmpvar_2)).xy)))\n   + \n    (0.025 * texture (sampler_noise_lq, (sin((ret_1.xy * 6.28)) + tmpvar_2)).xy)\n  ), vec2((bass_att - 1.0)))).xyz * 0.96);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_fc_main, uv).xyz * 1.33);\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"shader_body\n{\n\nret = GetBlur3(uv);\n\nfloat2 uv2 = uv*(1-.05*tex2D(sampler_noise_lq,saturate(ret.xy)+.01*time).xy);\nuv2 += .025*tex2D(sampler_noise_lq,sin(ret.xy*6.28)+.01*time).xy;\n\nuv = lerp(uv,uv2,bass_att-1);\n\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    \n    // darken (decay) over time\n    ret *= 0.96; //or try: ret -= 0.004;\n}","comp_hlsl":"\nshader_body\n{\n\n//float2 uv_o = uv;\n\n\nret = tex2d(sampler_fc_main,uv);\n\nret *= 1.33;\n}"}