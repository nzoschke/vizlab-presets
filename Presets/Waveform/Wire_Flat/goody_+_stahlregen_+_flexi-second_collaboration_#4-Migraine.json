{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.818,"wave_scale":2.365,"wave_smoothing":0.648,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":75.68355,"zoom":1.02978,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0.7,"mv_g":0.7,"mv_b":0.7,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xv=0;a.yv=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.q1=.5+.4*Math.sin(.43*a.time+.12*a.bass_att);a.q2=.5+.4*Math.sin(.63*a.time+.14*a.bass_att);a.q3=.5+.4*Math.sin(.83*a.time+.16*a.bass_att);a.wave_mystery=.01*Math.floor(rand(150))-.01*Math.floor(rand(150));","pixel_eqs_str":"a.xv=Math.sin(.333*a.time)*a.x-Math.cos(.667*a.time)*a.x;a.yv=Math.cos(.333*a.time)*a.y+Math.sin(.667*a.time)*a.y;a.x=a.xv;a.y=a.yv;a.sx+=.075*Math.sin(3*a.x);a.sy+=.075*Math.sin(3.1*a.y);","init_eqs_eel":"","frame_eqs_eel":"q1 = 0.5+0.4*sin(0.43*time+0.12*bass_att);\nq2 = 0.5+0.4*sin(0.63*time+0.14*bass_att);\nq3 = 0.5+0.4*sin(0.83*time+0.16*bass_att);\n\nwave_mystery = int(rand(150))*0.01 - int(rand(150))*0.01;","pixel_eqs_eel":"//Have fun with the shaders kids!\n\n//xy transform code (Yes, it is based off of Flexi's from the previous collaboration)\nxv = sin(time*.333)*x -cos(time*.667)*x;\nyv = cos(time*.333)*y +sin(time*.667)*y;\nx = xv; \ny = yv;\n//end x/y transform code\n\nsx=sx+.075*sin(x*3);\nsy=sy+.075*sin(y*3.1);","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_fc_main, uv).xyz;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = ret_1;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 0.0;\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv - tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 0.0;\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \n    (tmpvar_2 * 2.0)\n  )) * 0.9)).xyz;\n  ret_1 = ((max (tmpvar_6, \n    (texture (sampler_main, (uv - (tmpvar_2 * 2.0))) * 0.9)\n  ).xyz - 0.005) * 0.98);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = uv_orig.y;\n  tmpvar_1.y = rad;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 2.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_4.z;\n  tmpvar_5.y = -(tmpvar_3.z);\n  vec2 tmpvar_6;\n  tmpvar_6 = (tmpvar_1 + ((tmpvar_5 * texsize.zw) * 64.0));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.z;\n  tmpvar_7.y = -(tmpvar_3.z);\n  vec2 tmpvar_8;\n  tmpvar_8 = (tmpvar_1 - ((tmpvar_7 * texsize.zw) * 32.0));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = (mix (mix (\n    mix ((mix (mix (vec3(0.2, 0.2, 0.0), vec3(0.6, 0.6, 0.0), vec3(\n      (((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3).y * 8.0)\n    )), vec3(1.0, 1.0, 1.0), vec3((\n      ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1)\n    .y * 6.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_6).y * 2.0)))), vec3(0.0, 1.0, 0.0), vec3((((texture (sampler_blur2, tmpvar_1).xyz * scale2) + bias2).z * 1.2)))\n  , vec3(0.0, 0.0, -3.0), texture (sampler_main, tmpvar_1).zzz), vec3(1.4, 0.0, 0.0), vec3((\n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\n  .x * 2.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_8).x * 2.0))));\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz;\n    \n    // motion blur by Geiss\n    // 'v' points exactly one pixel, in the direction of motion\n    float2 v = normalize(uv-uv_orig)*texsize.zw;\n    float3 s;\n    ret = max(ret, tex2D(sampler_main, uv+v)*0.97);\n    ret = max(ret, tex2D(sampler_main, uv-v)*0.97);\n    ret = max(ret, tex2D(sampler_main, uv+v*2)*0.90);\n    ret = max(ret, tex2D(sampler_main, uv-v*2)*0.90);\n\n    // darken (decay) over time\n    ret = (ret-0.005)*0.98; //or try: ret -= 0.004;\n}","comp_hlsl":"sampler sampler_manyfish;\nshader_body\n{\n\n    uv = float2(uv_orig.y,rad);\n\n\n    float2 d = texsize.zw*2;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\n    float2 uv_dz = uv + float2(dy.z,-dx.z)*texsize.zw*64;\n    float2 uv_dy = uv - float2(dy.z,-dx.z)*texsize.zw*32;\n\nret = GetPixel(uv).y*0.2;\nret = lerp(float3(0.2,0.2,0),float3(0.6,0.6,0),GetBlur3(uv_dz).y*8); \nret = lerp(ret,float3(1,1,1),GetBlur1(uv_dz).y*6); \nret = lerp(ret,float3(0,0,0),GetPixel(uv_dz).y*2); \n\nret = lerp(ret,float3(0,1,0),GetBlur2(uv).z*1.2);\nret = lerp(ret,float3(0,0,-3),GetPixel(uv).z);\n\nret = lerp(ret,float3(1.4,0,0),GetBlur1(uv_dy).x*2);\nret = lerp(ret,0,GetPixel(uv_dy).x*2);\n\n}\n"}