{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"wave_mode":6,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.818,"wave_scale":1.107,"wave_smoothing":0.648,"wave_mystery":-0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":75.68355,"zoom":1.02978,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0.7,"mv_g":0.7,"mv_b":0.7,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xv=0;a.yv=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.q1=.5+.4*Math.sin(.43*a.time+.12*a.bass_att);a.q2=.5+.4*Math.sin(.63*a.time+.14*a.bass_att);a.q3=.5+.4*Math.sin(.83*a.time+.16*a.bass_att);a.wave_mystery=.01*Math.floor(rand(150))-.01*Math.floor(rand(150));","pixel_eqs_str":"a.xv=Math.sin(.333*a.time)*a.x-Math.cos(.667*a.time)*a.x;a.yv=Math.cos(.333*a.time)*a.y+Math.sin(.667*a.time)*a.y;a.x=a.xv;a.y=a.yv;a.sx+=.075*Math.sin(3*a.x);a.sy+=.075*Math.sin(3.1*a.y);","init_eqs_eel":"","frame_eqs_eel":"q1 = 0.5+0.4*sin(0.43*time+0.12*bass_att);\nq2 = 0.5+0.4*sin(0.63*time+0.14*bass_att);\nq3 = 0.5+0.4*sin(0.83*time+0.16*bass_att);\n\nwave_mystery = int(rand(150))*0.01 - int(rand(150))*0.01;","pixel_eqs_eel":"//Have fun with the shaders kids!\n\n//xy transform code (Yes, it is based off of Flexi's from the previous collaboration)\nxv = sin(time*.333)*x -cos(time*.667)*x;\nyv = cos(time*.333)*y +sin(time*.667)*y;\nx = xv; \ny = yv;\n//end x/y transform code\n\nsx=sx+.075*sin(x*3);\nsy=sy+.075*sin(y*3.1);","warp":"uniform sampler2D sampler_fw_clouds;\n shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = ret_1;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 0.0;\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv - tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 0.0;\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \n    (tmpvar_2 * 2.0)\n  )) * 0.9)).xyz;\n  ret_1 = (max (tmpvar_6, (texture (sampler_main, \n    (uv - (tmpvar_2 * 2.0))\n  ) * 0.9)).xyz - (0.5 * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 + (texture (sampler_fw_clouds, uv) * 0.25).xyz);\n  ret_1 = ((ret_1 - 0.005) * 0.98);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec2 theta_3;\n  theta_3 = (2.33 * tmpvar_2.yx);\n  vec2 tmpvar_4;\n  tmpvar_4 = (((\n    ((uv * 0.8) - (0.01 * cos(tmpvar_2.zy)))\n   - \n    (0.02 * (sin(theta_3) / cos(theta_3)))\n  ) - (0.002 * bass_att)) + 0.1);\n  ret_1 = (texture (sampler_main, tmpvar_4).xyz + ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1));\n  ret_1 = (1.0 - clamp (pow (vec3(\n    dot (ret_1, vec3(0.32, 0.49, 0.29))\n  ), vec3(0.55, 0.1, 0.6)), 0.0, 1.0));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"sampler sampler_fw_clouds;\nshader_body\n{\n\n    // motion blur by Geiss\n    // 'v' points exactly one pixel, in the direction of motion\n    float2 v = normalize(uv-uv_orig)*texsize.zw;\n    float3 s;\n    ret = max(ret, tex2D(sampler_main, uv+v)*0.97);\n    ret = max(ret, tex2D(sampler_main, uv-v)*0.97);\n    ret = max(ret, tex2D(sampler_main, uv+v*2)*0.90);\n    ret = max(ret, tex2D(sampler_main, uv-v*2)*0.90);\n\n\nret -= .5*GetBlur1(uv);\nret += tex2D(sampler_fw_clouds,uv)*0.25;\n\n\n    // darken (decay) over time\n    ret = (ret-0.005)*0.98; //or try: ret -= 0.004;\n\n\n}","comp_hlsl":"shader_body\n{\n \n   ret = tex2D(sampler_main, uv).xyz;\n//    ret += GetBlur1(uv)*0.4; \nfloat2 uv2 = uv*.8-.01*cos(ret.zy)-.02*tan(2.33*ret.yx)-.002*bass_att+.1;\n   ret = tex2D(sampler_main,uv2);\n    ret += GetBlur1(uv2); \n    // palettize:\n    ret = pow(lum(ret), float3(0.55, .1, 0.6));\n\n    // invert\n    ret = 1-saturate(ret);\n    //ret.xyz *= 2; // a little bit of overbright\n}\n\n"}