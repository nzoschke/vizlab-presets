{"version":2,"baseVals":{"rating":5,"wave_mode":4,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"wave_scale":2.705,"wave_smoothing":0,"modwavealphastart":0,"modwavealphaend":2,"warp":0.01,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.red=0;a.green=0;a.blue=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.warp=0;a.red=.25*Math.sin(.32*a.time);a.green=.5*Math.sin(.27*a.time);a.blue=.33*Math.sin(.3*a.time);a.q1=a.red;a.q2=a.green;a.q3=a.blue;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\nred = .25*sin(.32*time);\ngreen = .5*sin(.27*time);\nblue = .33*sin(.3*time);\n\nq1 = red;\nq2 = green;\nq3 = blue;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_fc_main, uv);\n  ret_1.yz = tmpvar_2.yz;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1.5, 0.0) * texsize.wz);\n  vec2 tmpvar_4;\n  tmpvar_4 = (vec2(0.0, 1.5) * texsize.wz);\n  ret_1.x = (tmpvar_2.x + max (max (texture (sampler_main, \n    (uv + tmpvar_3)\n  ).x, texture (sampler_main, \n    (uv - tmpvar_3)\n  ).x), max (texture (sampler_main, \n    (uv + tmpvar_4)\n  ).x, texture (sampler_main, \n    (uv - tmpvar_4)\n  ).x)));\n  ret_1.x = (ret_1.x - texture (sampler_main, uv).x);\n  ret_1 = ((ret_1 * vec3(0.94, 0.0, 0.0)) - 0.003);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xxx * tmpvar_2.xxx);\n  vec3 tmpvar_3;\n  tmpvar_3.x = (0.5 + q1);\n  tmpvar_3.y = (0.5 + q2);\n  tmpvar_3.z = (0.5 + q3);\n  vec3 tmpvar_4;\n  tmpvar_4 = pow (ret_1, tmpvar_3);\n  ret_1 = tmpvar_4;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = tmpvar_4;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz;\n\n    \nret.x += max(\nmax(GetPixel(uv+float2(1.5,0)*texsize.wz).x,GetPixel(uv-float2(1.5,0)*texsize.wz).x),\nmax(GetPixel(uv+float2(0,1.5)*texsize.wz).x,GetPixel(uv-float2(0,1.5)*texsize.wz).x));\nret.x -= GetPixel(uv).x;\n    // darken (decay) over time\nret = ret*float3(.94,0,0)-.003; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xxx;\n    ret *= ret;\n    //ret = sqrt(ret); //gamma\n    ret = pow(ret,float3(.5+q1,.5+q2,.5+q3));\n}"}