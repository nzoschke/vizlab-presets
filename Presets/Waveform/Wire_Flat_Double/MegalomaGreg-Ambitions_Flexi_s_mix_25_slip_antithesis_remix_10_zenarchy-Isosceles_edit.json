{"version":2,"baseVals":{"rating":5,"gammaadj":1.77,"decay":0.97,"echo_zoom":1.474,"echo_alpha":1,"wave_mode":7,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wave_a":100,"wave_scale":2.685,"wave_smoothing":0.702,"modwavealphastart":2,"modwavealphaend":2,"warpscale":8.728,"zoom":0.99951,"warp":0.03469,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_a":1,"ib_size":0.015,"ib_a":1,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"num_inst":160,"rad":0.31559,"ang":0.7854,"tex_ang":0.77911,"tex_zoom":1.85321,"g":0.65,"b":0.55,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"num_inst":53,"rad":0.54279,"tex_zoom":0.8622,"g":0.51,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.01058,"enabled":0},"init_eqs_str":"pulse = 0;","frame_eqs_str":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\npulse = pulse*above(pulse,0);\nt1 = pulse;","point_eqs_str":"x = sqrt(sample*mid*.05);\ny = .5 + (.1+t1)*cos(sample*20);","init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\npulse = pulse*above(pulse,0);\nt1 = pulse;","point_eqs_eel":"x = sqrt(sample*mid*.05);\ny = .5 + (.1+t1)*cos(sample*20);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.cond_treb=0;a.trev=0;a.zoom_out=0;a.below_part=0;a.my_volume=0;a.above_part=0;a.cond_bass=0;a.wave_r_wave_b=0;a.rot1=0;a.zoom_in=0;","frame_eqs_str":"a.ob_size=.05+.3*Math.sin(a.bass);a.wave_b=.00001<Math.abs(1>=(a.treb>bitand(1>=bitand(1.1,a.mid)?1:0,a.bass)?1:0)?1:0)?Math.abs(.5+.1*Math.sin(a.treb)):0;a.wave_r=.00001<Math.abs(1>=(a.bass>bitand(1>=bitand(1.1,a.mid)?1:0,a.treb)?1:0)?1:0)?Math.abs(.5+.1*Math.sin(a.bass)):0;a.wave_g=.00001<Math.abs(1>=(a.mid>bitand(1>=bitand(1.1,a.bass)?1:0,a.trev)?1:0)?1:0)?Math.abs(.5+.1*Math.sin(a.mid)):0;a.ob_a=.5+.1*Math.sin(a.my_volume);a.ib_r=div(a.wave_g+a.wave_b,2);a.ib_g=div(a.wave_r_wave_b,\n2);a.ib_b=div(a.wave_r+a.wave_g,2);a.cx=.5;a.cy=.5;a.cond_bass=a.bass>1+.1*Math.sin(sqr(a.bass))?1:0;a.cond_treb=a.treb>1+.1*Math.sin(sqr(a.treb))?1:0;a.rot1=.1*Math.sin(sqr(a.bass)+sqr(a.treb));","pixel_eqs_str":"a.zoom_out=1-Math.abs(.1*Math.sin(a.ang));a.zoom_in=1+Math.abs(.1*Math.sin(a.ang));a.above_part=bitand(0<a.ang?1:0,a.treb>1+Math.abs(.1*Math.sin(a.ang))?1:0);a.below_part=bitand(0>a.ang?1:0,a.bass>1+Math.abs(.1*Math.sin(a.ang))?1:0);a.zoom=.00001<Math.abs(bitor(a.above_part,a.below_part))?a.zoom_in:a.zoom_out;a.sx=.00001<Math.abs(7.07<a.rad?1:0)?1+Math.abs(.1*Math.sin(a.rad)):1;","init_eqs_eel":"","frame_eqs_eel":"ob_size = 0.05 + 0.3*sin(bass);\n\nwave_b = if (treb>1.1&mid<=1&bass<=1, abs(0.5+0.1*sin(treb)),0);\nwave_r = if (bass>1.1&mid<=1&treb<=1, abs(0.5+0.1*sin(bass)),0);\nwave_g = if (mid>1.1&bass<=1&trev<=1, abs(0.5+0.1*sin(mid)),0);\n\n \n\nob_a = 0.5 + 0.1*sin(my_volume);\n\n\nib_r = (wave_g+wave_b)/2;\nib_g = (wave_r_wave_b)/2;\nib_b = (wave_r+wave_g)/2;\n\ncx = 0.5;\ncy = 0.5;\n\ncond_bass = bass>(1+0.1*sin(sqr(bass)));\ncond_treb = treb>(1+0.1*sin(sqr(treb)));\n\nrot1 = 0.1*sin(sqr(bass)+sqr(treb));\n\n\n//rot = if (cond_treb, rot1,0);\n//rot = if (cond_bass,- rot1, rot);","pixel_eqs_eel":"zoom_out = 1 - abs(0.1*sin(ang));\nzoom_in = 1 + abs(0.1*sin(ang));\nabove_part = ( (ang>0) & (treb>1 + abs(0.1*sin(ang))) );\nbelow_part = ( (ang<0) & (bass>1 + abs(0.1*sin(ang))) );\n\nzoom = if ( above_part | below_part, zoom_in, zoom_out);\n\nsx= if (rad>7.07, 1 + abs(0.1*sin(rad)),1);","warp":" shader_body { \n  vec2 my_uv_1;\n  float dy_2;\n  float dx_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (texsize.zw * 12.0);\n  vec2 tmpvar_6;\n  tmpvar_6.x = (((2.0 * \n    ((texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale2) + bias2)\n  ) - (2.0 * \n    ((texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale2) + bias2)\n  )).y * 0.5);\n  tmpvar_6.y = (((2.0 * \n    ((texture (sampler_blur2, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale2) + bias2)\n  ) - (2.0 * \n    ((texture (sampler_blur2, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale2) + bias2)\n  )).y * 0.5);\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv - (tmpvar_6 * 0.08));\n  ret_4.y = texture (sampler_fc_main, (tmpvar_7 - floor(tmpvar_7))).y;\n  ret_4.y = (ret_4.y + ((\n    ((2.0 * ret_4.y) - (2.0 * ((texture (sampler_blur1, \n      (tmpvar_7 - floor(tmpvar_7))\n    ).xyz * scale1) + bias1).y))\n   * 0.05125) + 0.02));\n  dx_3 = ((640.0 * texsize.z) * ((2.0 * \n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\n  ) - (2.0 * \n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\n  )).x);\n  dy_2 = ((512.0 * texsize.w) * ((2.0 * \n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\n  ) - (2.0 * \n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\n  )).x);\n  vec2 tmpvar_8;\n  tmpvar_8.x = dx_3;\n  tmpvar_8.y = dy_2;\n  my_uv_1 = (uv + (tmpvar_8 * 0.01));\n  ret_4.x = texture (sampler_fw_main, my_uv_1).x;\n  ret_4.x = (ret_4.x + ((\n    ((2.0 * ret_4.x) - (2.0 * ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x))\n   - 0.04) * 0.1));\n  vec2 tmpvar_9;\n  tmpvar_9.x = dy_2;\n  tmpvar_9.y = -(dx_3);\n  my_uv_1 = (uv - (tmpvar_9 * 0.04));\n  ret_4.z = texture (sampler_fw_main, my_uv_1).z;\n  ret_4.z = (ret_4.z + ((\n    (2.0 * ret_4.z)\n   - \n    (2.0 * ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z)\n  ) * 0.5));\n  ret_4.z = (ret_4.z * (0.9 * (\n    (ret_4.x + (ret_4.y * 0.64))\n   - 1.0)));\n  ret_4.z = (ret_4.z + 0.02);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_4;\n  ret = tmpvar_10.xyz;\n }","comp":" shader_body { \n  vec2 dz_1;\n  vec3 dy_2;\n  vec3 dx_3;\n  vec2 d_4;\n  vec3 ret_5;\n  vec2 tmpvar_6;\n  tmpvar_6.x = q3;\n  tmpvar_6.y = q4;\n  vec2 tmpvar_7;\n  tmpvar_7 = (1.0 - tmpvar_6);\n  vec2 tmpvar_8;\n  tmpvar_8.x = q6;\n  tmpvar_8.y = q7;\n  vec2 tmpvar_9;\n  tmpvar_9 = (1.0 - tmpvar_8);\n  vec2 tmpvar_10;\n  tmpvar_10.x = q9;\n  tmpvar_10.y = q10;\n  vec2 tmpvar_11;\n  tmpvar_11 = (1.0 - tmpvar_10);\n  vec2 tmpvar_12;\n  tmpvar_12.x = q12;\n  tmpvar_12.y = q13;\n  vec2 tmpvar_13;\n  tmpvar_13 = (1.0 - tmpvar_12);\n  vec2 tmpvar_14;\n  vec2 tmpvar_15;\n  tmpvar_15 = (uv - tmpvar_7);\n  float tmpvar_16;\n  tmpvar_16 = sqrt(dot (tmpvar_15, tmpvar_15));\n  float tmpvar_17;\n  float tmpvar_18;\n  tmpvar_18 = (min (abs(\n    (tmpvar_15.x / tmpvar_15.y)\n  ), 1.0) / max (abs(\n    (tmpvar_15.x / tmpvar_15.y)\n  ), 1.0));\n  float tmpvar_19;\n  tmpvar_19 = (tmpvar_18 * tmpvar_18);\n  tmpvar_19 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_19) + 0.05368138) * tmpvar_19) - 0.1173503)\n     * tmpvar_19) + 0.1938925) * tmpvar_19) - 0.3326756)\n   * tmpvar_19) + 0.9999793) * tmpvar_18);\n  tmpvar_19 = (tmpvar_19 + (float(\n    (abs((tmpvar_15.x / tmpvar_15.y)) > 1.0)\n  ) * (\n    (tmpvar_19 * -2.0)\n   + 1.570796)));\n  tmpvar_17 = (tmpvar_19 * sign((tmpvar_15.x / tmpvar_15.y)));\n  if ((abs(tmpvar_15.y) > (1e-08 * abs(tmpvar_15.x)))) {\n    if ((tmpvar_15.y < 0.0)) {\n      if ((tmpvar_15.x >= 0.0)) {\n        tmpvar_17 += 3.141593;\n      } else {\n        tmpvar_17 = (tmpvar_17 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_17 = (sign(tmpvar_15.x) * 1.570796);\n  };\n  float tmpvar_20;\n  tmpvar_20 = clamp ((1.0 - (tmpvar_16 / q5)), 0.0, 1.0);\n  float tmpvar_21;\n  float tmpvar_22;\n  tmpvar_22 = (tmpvar_20 - 1.0);\n  tmpvar_21 = sqrt((1.0 - (tmpvar_22 * tmpvar_22)));\n  float vec_y_23;\n  vec_y_23 = (1.0 - tmpvar_20);\n  float tmpvar_24;\n  float tmpvar_25;\n  tmpvar_25 = (min (abs(\n    (vec_y_23 / tmpvar_21)\n  ), 1.0) / max (abs(\n    (vec_y_23 / tmpvar_21)\n  ), 1.0));\n  float tmpvar_26;\n  tmpvar_26 = (tmpvar_25 * tmpvar_25);\n  tmpvar_26 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_26) + 0.05368138) * tmpvar_26) - 0.1173503)\n     * tmpvar_26) + 0.1938925) * tmpvar_26) - 0.3326756)\n   * tmpvar_26) + 0.9999793) * tmpvar_25);\n  tmpvar_26 = (tmpvar_26 + (float(\n    (abs((vec_y_23 / tmpvar_21)) > 1.0)\n  ) * (\n    (tmpvar_26 * -2.0)\n   + 1.570796)));\n  tmpvar_24 = (tmpvar_26 * sign((vec_y_23 / tmpvar_21)));\n  if ((abs(tmpvar_21) > (1e-08 * abs(vec_y_23)))) {\n    if ((tmpvar_21 < 0.0)) {\n      if ((vec_y_23 >= 0.0)) {\n        tmpvar_24 += 3.141593;\n      } else {\n        tmpvar_24 = (tmpvar_24 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_24 = (sign(vec_y_23) * 1.570796);\n  };\n  float x_27;\n  x_27 = (sin(tmpvar_24) / -0.9);\n  float tmpvar_28;\n  tmpvar_28 = (tmpvar_24 - (sign(x_27) * (1.570796 - \n    (sqrt((1.0 - abs(x_27))) * (1.570796 + (abs(x_27) * (-0.2146018 + \n      (abs(x_27) * (0.08656672 + (abs(x_27) * -0.03102955)))\n    ))))\n  )));\n  vec2 tmpvar_29;\n  tmpvar_29.x = sin(tmpvar_17);\n  tmpvar_29.y = cos(tmpvar_17);\n  vec2 x_30;\n  x_30 = (uv - tmpvar_7);\n  bool tmpvar_31;\n  tmpvar_31 = (sqrt(dot (x_30, x_30)) < q5);\n  tmpvar_14 = ((float(\n    !(tmpvar_31)\n  ) * uv) + (float(tmpvar_31) * (tmpvar_7 + \n    ((tmpvar_29 * ((1.0 - tmpvar_20) - (\n      (sin(tmpvar_28) * tmpvar_21)\n     / \n      cos(tmpvar_28)\n    ))) * q5)\n  )));\n  vec2 tmpvar_32;\n  vec2 tmpvar_33;\n  tmpvar_33 = (tmpvar_14 - tmpvar_9);\n  float tmpvar_34;\n  tmpvar_34 = sqrt(dot (tmpvar_33, tmpvar_33));\n  float tmpvar_35;\n  float tmpvar_36;\n  tmpvar_36 = (min (abs(\n    (tmpvar_33.x / tmpvar_33.y)\n  ), 1.0) / max (abs(\n    (tmpvar_33.x / tmpvar_33.y)\n  ), 1.0));\n  float tmpvar_37;\n  tmpvar_37 = (tmpvar_36 * tmpvar_36);\n  tmpvar_37 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_37) + 0.05368138) * tmpvar_37) - 0.1173503)\n     * tmpvar_37) + 0.1938925) * tmpvar_37) - 0.3326756)\n   * tmpvar_37) + 0.9999793) * tmpvar_36);\n  tmpvar_37 = (tmpvar_37 + (float(\n    (abs((tmpvar_33.x / tmpvar_33.y)) > 1.0)\n  ) * (\n    (tmpvar_37 * -2.0)\n   + 1.570796)));\n  tmpvar_35 = (tmpvar_37 * sign((tmpvar_33.x / tmpvar_33.y)));\n  if ((abs(tmpvar_33.y) > (1e-08 * abs(tmpvar_33.x)))) {\n    if ((tmpvar_33.y < 0.0)) {\n      if ((tmpvar_33.x >= 0.0)) {\n        tmpvar_35 += 3.141593;\n      } else {\n        tmpvar_35 = (tmpvar_35 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_35 = (sign(tmpvar_33.x) * 1.570796);\n  };\n  float tmpvar_38;\n  tmpvar_38 = clamp ((1.0 - (tmpvar_34 / q8)), 0.0, 1.0);\n  float tmpvar_39;\n  float tmpvar_40;\n  tmpvar_40 = (tmpvar_38 - 1.0);\n  tmpvar_39 = sqrt((1.0 - (tmpvar_40 * tmpvar_40)));\n  float vec_y_41;\n  vec_y_41 = (1.0 - tmpvar_38);\n  float tmpvar_42;\n  float tmpvar_43;\n  tmpvar_43 = (min (abs(\n    (vec_y_41 / tmpvar_39)\n  ), 1.0) / max (abs(\n    (vec_y_41 / tmpvar_39)\n  ), 1.0));\n  float tmpvar_44;\n  tmpvar_44 = (tmpvar_43 * tmpvar_43);\n  tmpvar_44 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_44) + 0.05368138) * tmpvar_44) - 0.1173503)\n     * tmpvar_44) + 0.1938925) * tmpvar_44) - 0.3326756)\n   * tmpvar_44) + 0.9999793) * tmpvar_43);\n  tmpvar_44 = (tmpvar_44 + (float(\n    (abs((vec_y_41 / tmpvar_39)) > 1.0)\n  ) * (\n    (tmpvar_44 * -2.0)\n   + 1.570796)));\n  tmpvar_42 = (tmpvar_44 * sign((vec_y_41 / tmpvar_39)));\n  if ((abs(tmpvar_39) > (1e-08 * abs(vec_y_41)))) {\n    if ((tmpvar_39 < 0.0)) {\n      if ((vec_y_41 >= 0.0)) {\n        tmpvar_42 += 3.141593;\n      } else {\n        tmpvar_42 = (tmpvar_42 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_42 = (sign(vec_y_41) * 1.570796);\n  };\n  float x_45;\n  x_45 = (sin(tmpvar_42) / -0.9);\n  float tmpvar_46;\n  tmpvar_46 = (tmpvar_42 - (sign(x_45) * (1.570796 - \n    (sqrt((1.0 - abs(x_45))) * (1.570796 + (abs(x_45) * (-0.2146018 + \n      (abs(x_45) * (0.08656672 + (abs(x_45) * -0.03102955)))\n    ))))\n  )));\n  vec2 tmpvar_47;\n  tmpvar_47.x = sin(tmpvar_35);\n  tmpvar_47.y = cos(tmpvar_35);\n  vec2 x_48;\n  x_48 = (tmpvar_14 - tmpvar_9);\n  bool tmpvar_49;\n  tmpvar_49 = (sqrt(dot (x_48, x_48)) < q8);\n  tmpvar_32 = ((float(\n    !(tmpvar_49)\n  ) * tmpvar_14) + (float(tmpvar_49) * (tmpvar_9 + \n    ((tmpvar_47 * ((1.0 - tmpvar_38) - (\n      (sin(tmpvar_46) * tmpvar_39)\n     / \n      cos(tmpvar_46)\n    ))) * q8)\n  )));\n  vec2 tmpvar_50;\n  vec2 tmpvar_51;\n  tmpvar_51 = (tmpvar_32 - tmpvar_11);\n  float tmpvar_52;\n  tmpvar_52 = sqrt(dot (tmpvar_51, tmpvar_51));\n  float tmpvar_53;\n  float tmpvar_54;\n  tmpvar_54 = (min (abs(\n    (tmpvar_51.x / tmpvar_51.y)\n  ), 1.0) / max (abs(\n    (tmpvar_51.x / tmpvar_51.y)\n  ), 1.0));\n  float tmpvar_55;\n  tmpvar_55 = (tmpvar_54 * tmpvar_54);\n  tmpvar_55 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_55) + 0.05368138) * tmpvar_55) - 0.1173503)\n     * tmpvar_55) + 0.1938925) * tmpvar_55) - 0.3326756)\n   * tmpvar_55) + 0.9999793) * tmpvar_54);\n  tmpvar_55 = (tmpvar_55 + (float(\n    (abs((tmpvar_51.x / tmpvar_51.y)) > 1.0)\n  ) * (\n    (tmpvar_55 * -2.0)\n   + 1.570796)));\n  tmpvar_53 = (tmpvar_55 * sign((tmpvar_51.x / tmpvar_51.y)));\n  if ((abs(tmpvar_51.y) > (1e-08 * abs(tmpvar_51.x)))) {\n    if ((tmpvar_51.y < 0.0)) {\n      if ((tmpvar_51.x >= 0.0)) {\n        tmpvar_53 += 3.141593;\n      } else {\n        tmpvar_53 = (tmpvar_53 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_53 = (sign(tmpvar_51.x) * 1.570796);\n  };\n  float tmpvar_56;\n  tmpvar_56 = clamp ((1.0 - (tmpvar_52 / q11)), 0.0, 1.0);\n  float tmpvar_57;\n  float tmpvar_58;\n  tmpvar_58 = (tmpvar_56 - 1.0);\n  tmpvar_57 = sqrt((1.0 - (tmpvar_58 * tmpvar_58)));\n  float vec_y_59;\n  vec_y_59 = (1.0 - tmpvar_56);\n  float tmpvar_60;\n  float tmpvar_61;\n  tmpvar_61 = (min (abs(\n    (vec_y_59 / tmpvar_57)\n  ), 1.0) / max (abs(\n    (vec_y_59 / tmpvar_57)\n  ), 1.0));\n  float tmpvar_62;\n  tmpvar_62 = (tmpvar_61 * tmpvar_61);\n  tmpvar_62 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_62) + 0.05368138) * tmpvar_62) - 0.1173503)\n     * tmpvar_62) + 0.1938925) * tmpvar_62) - 0.3326756)\n   * tmpvar_62) + 0.9999793) * tmpvar_61);\n  tmpvar_62 = (tmpvar_62 + (float(\n    (abs((vec_y_59 / tmpvar_57)) > 1.0)\n  ) * (\n    (tmpvar_62 * -2.0)\n   + 1.570796)));\n  tmpvar_60 = (tmpvar_62 * sign((vec_y_59 / tmpvar_57)));\n  if ((abs(tmpvar_57) > (1e-08 * abs(vec_y_59)))) {\n    if ((tmpvar_57 < 0.0)) {\n      if ((vec_y_59 >= 0.0)) {\n        tmpvar_60 += 3.141593;\n      } else {\n        tmpvar_60 = (tmpvar_60 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_60 = (sign(vec_y_59) * 1.570796);\n  };\n  float x_63;\n  x_63 = (sin(tmpvar_60) / -0.9);\n  float tmpvar_64;\n  tmpvar_64 = (tmpvar_60 - (sign(x_63) * (1.570796 - \n    (sqrt((1.0 - abs(x_63))) * (1.570796 + (abs(x_63) * (-0.2146018 + \n      (abs(x_63) * (0.08656672 + (abs(x_63) * -0.03102955)))\n    ))))\n  )));\n  vec2 tmpvar_65;\n  tmpvar_65.x = sin(tmpvar_53);\n  tmpvar_65.y = cos(tmpvar_53);\n  vec2 x_66;\n  x_66 = (tmpvar_32 - tmpvar_11);\n  bool tmpvar_67;\n  tmpvar_67 = (sqrt(dot (x_66, x_66)) < q11);\n  tmpvar_50 = ((float(\n    !(tmpvar_67)\n  ) * tmpvar_32) + (float(tmpvar_67) * (tmpvar_11 + \n    ((tmpvar_65 * ((1.0 - tmpvar_56) - (\n      (sin(tmpvar_64) * tmpvar_57)\n     / \n      cos(tmpvar_64)\n    ))) * q11)\n  )));\n  vec2 tmpvar_68;\n  vec2 tmpvar_69;\n  tmpvar_69 = (tmpvar_50 - tmpvar_13);\n  float tmpvar_70;\n  tmpvar_70 = sqrt(dot (tmpvar_69, tmpvar_69));\n  float tmpvar_71;\n  float tmpvar_72;\n  tmpvar_72 = (min (abs(\n    (tmpvar_69.x / tmpvar_69.y)\n  ), 1.0) / max (abs(\n    (tmpvar_69.x / tmpvar_69.y)\n  ), 1.0));\n  float tmpvar_73;\n  tmpvar_73 = (tmpvar_72 * tmpvar_72);\n  tmpvar_73 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_73) + 0.05368138) * tmpvar_73) - 0.1173503)\n     * tmpvar_73) + 0.1938925) * tmpvar_73) - 0.3326756)\n   * tmpvar_73) + 0.9999793) * tmpvar_72);\n  tmpvar_73 = (tmpvar_73 + (float(\n    (abs((tmpvar_69.x / tmpvar_69.y)) > 1.0)\n  ) * (\n    (tmpvar_73 * -2.0)\n   + 1.570796)));\n  tmpvar_71 = (tmpvar_73 * sign((tmpvar_69.x / tmpvar_69.y)));\n  if ((abs(tmpvar_69.y) > (1e-08 * abs(tmpvar_69.x)))) {\n    if ((tmpvar_69.y < 0.0)) {\n      if ((tmpvar_69.x >= 0.0)) {\n        tmpvar_71 += 3.141593;\n      } else {\n        tmpvar_71 = (tmpvar_71 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_71 = (sign(tmpvar_69.x) * 1.570796);\n  };\n  float tmpvar_74;\n  tmpvar_74 = clamp ((1.0 - (tmpvar_70 / q14)), 0.0, 1.0);\n  float tmpvar_75;\n  float tmpvar_76;\n  tmpvar_76 = (tmpvar_74 - 1.0);\n  tmpvar_75 = sqrt((1.0 - (tmpvar_76 * tmpvar_76)));\n  float vec_y_77;\n  vec_y_77 = (1.0 - tmpvar_74);\n  float tmpvar_78;\n  float tmpvar_79;\n  tmpvar_79 = (min (abs(\n    (vec_y_77 / tmpvar_75)\n  ), 1.0) / max (abs(\n    (vec_y_77 / tmpvar_75)\n  ), 1.0));\n  float tmpvar_80;\n  tmpvar_80 = (tmpvar_79 * tmpvar_79);\n  tmpvar_80 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_80) + 0.05368138) * tmpvar_80) - 0.1173503)\n     * tmpvar_80) + 0.1938925) * tmpvar_80) - 0.3326756)\n   * tmpvar_80) + 0.9999793) * tmpvar_79);\n  tmpvar_80 = (tmpvar_80 + (float(\n    (abs((vec_y_77 / tmpvar_75)) > 1.0)\n  ) * (\n    (tmpvar_80 * -2.0)\n   + 1.570796)));\n  tmpvar_78 = (tmpvar_80 * sign((vec_y_77 / tmpvar_75)));\n  if ((abs(tmpvar_75) > (1e-08 * abs(vec_y_77)))) {\n    if ((tmpvar_75 < 0.0)) {\n      if ((vec_y_77 >= 0.0)) {\n        tmpvar_78 += 3.141593;\n      } else {\n        tmpvar_78 = (tmpvar_78 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_78 = (sign(vec_y_77) * 1.570796);\n  };\n  float x_81;\n  x_81 = (sin(tmpvar_78) / -0.9);\n  float tmpvar_82;\n  tmpvar_82 = (tmpvar_78 - (sign(x_81) * (1.570796 - \n    (sqrt((1.0 - abs(x_81))) * (1.570796 + (abs(x_81) * (-0.2146018 + \n      (abs(x_81) * (0.08656672 + (abs(x_81) * -0.03102955)))\n    ))))\n  )));\n  vec2 tmpvar_83;\n  tmpvar_83.x = sin(tmpvar_71);\n  tmpvar_83.y = cos(tmpvar_71);\n  vec2 x_84;\n  x_84 = (tmpvar_50 - tmpvar_13);\n  bool tmpvar_85;\n  tmpvar_85 = (sqrt(dot (x_84, x_84)) < q14);\n  tmpvar_68 = ((float(\n    !(tmpvar_85)\n  ) * tmpvar_50) + (float(tmpvar_85) * (tmpvar_13 + \n    ((tmpvar_83 * ((1.0 - tmpvar_74) - (\n      (sin(tmpvar_82) * tmpvar_75)\n     / \n      cos(tmpvar_82)\n    ))) * q14)\n  )));\n  vec2 tmpvar_86;\n  vec2 tmpvar_87;\n  tmpvar_87 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_86.x = (texture (sampler_main, (tmpvar_68 + tmpvar_87)).xyz - texture (sampler_main, (tmpvar_68 - tmpvar_87)).xyz).y;\n  vec2 tmpvar_88;\n  tmpvar_88 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_86.y = (texture (sampler_main, (tmpvar_68 + tmpvar_88)).xyz - texture (sampler_main, (tmpvar_68 - tmpvar_88)).xyz).y;\n  d_4 = (texsize.zw * 2.0);\n  dx_3 = (((2.0 * \n    ((texture (sampler_blur1, (tmpvar_68 + (vec2(1.0, 0.0) * d_4))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (tmpvar_68 - (vec2(1.0, 0.0) * d_4))).xyz * scale1) + bias1)\n  )) * 0.5);\n  dy_2 = (((2.0 * \n    ((texture (sampler_blur1, (tmpvar_68 + (vec2(0.0, 1.0) * d_4))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (tmpvar_68 - (vec2(0.0, 1.0) * d_4))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec2 tmpvar_89;\n  tmpvar_89.x = dx_3.y;\n  tmpvar_89.y = dy_2.y;\n  dz_1 = ((tmpvar_86 * 3.0) + tmpvar_89);\n  ret_5 = (vec3(((\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\n   * 2.0) + (\n    ((texture (sampler_blur1, tmpvar_68).xyz * scale1) + bias1)\n  .y * 2.0))) * vec3(0.2, 0.3, 0.6));\n  vec2 tmpvar_90;\n  tmpvar_90.x = q19;\n  tmpvar_90.y = q20;\n  vec2 tmpvar_91;\n  tmpvar_91 = fract(((0.5 + \n    (tmpvar_68 - 0.5)\n  ) + (tmpvar_90 * vec2(-1.0, 1.0))));\n  vec2 tmpvar_92;\n  tmpvar_92.x = dx_3.y;\n  tmpvar_92.y = dy_2.y;\n  vec3 tmpvar_93;\n  tmpvar_93 = mix (((\n    (mix (ret_5, vec3(3.0, 2.0, 1.0), ((texture (sampler_blur3, \n      (tmpvar_91 - tmpvar_92)\n    ).xyz * scale3) + bias3).xxx) * (vec3(1.0, 1.0, 1.0) - ((texture (sampler_blur2, \n      (tmpvar_91 - dz_1)\n    ).xyz * scale2) + bias2).xxx))\n   * \n    (vec3(1.0, 1.0, 1.0) - vec3((0.75 * texture (sampler_main, tmpvar_91).x)))\n  ) * (vec3(1.0, 1.0, 1.0) - vec3(\n    (((texture (sampler_blur1, tmpvar_68).xyz * scale1) + bias1).z * 4.0)\n  ))), vec3(2.0, 2.0, 2.0), texture (sampler_main, tmpvar_68).zzz);\n  ret_5 = tmpvar_93;\n  vec4 tmpvar_94;\n  tmpvar_94.w = 1.0;\n  tmpvar_94.xyz = tmpvar_93;\n  ret = tmpvar_94.xyz;\n }","warp_hlsl":"shader_body\n{\n\n   uv = uv - float2(0,1)*texsize.zw*0;\n\n    float2 d2 = texsize.zw*12;\n    float1 dx = ( 2*GetBlur2(uv + float2(1,0)*d2) - 2*GetBlur2(uv-float2(1,0)*d2) ).y*0.5;\n    float1 dy = ( 2*GetBlur2(uv + float2(0,1)*d2) - 2*GetBlur2(uv-float2(0,1)*d2) ).y*0.5;\n    float2 my_uv = uv - float2(dx,dy)*0.08;\n\n\n\n    ret.y = tex2D( sampler_fc_main, my_uv - floor(my_uv)).y;\n    ret.y += (2*ret.y - 2*GetBlur1(my_uv - floor(my_uv)).y)*.05125 + 0.02;\n\n    float1 d = 0.01;\n    dx = ( 2*GetBlur2(uv + float2(d,0)) - 2*GetBlur2(uv-float2(d,0)) ).x*1280*texsize.z*0.5;\n    dy = ( 2*GetBlur2(uv + float2(0,d)) - 2*GetBlur2(uv-float2(0,d)) ).x*1024*texsize.w*0.5;\n    my_uv = uv + float2(dx,dy)*0.01;\n\n    ret.x = tex2D( sampler_fw_main, my_uv).x;\n\n    \n    ret.x += (2*ret.x - 2*GetBlur3(uv).x - 0.04)*.1;\n    my_uv = uv - float2(dy,-dx)*0.04;\n\n    ret.z = tex2D( sampler_fw_main, my_uv).z;\n    \n    ret.z += (2*ret.z - 2*GetBlur1(uv).z)*0.5;\n    ret.z *= 0.9*(ret.x + ret.y*0.64 - 1);\n    ret.z += 0.02;\n\n\n//ret = 0;\n\n}","comp_hlsl":"float2 uv_x, uv_y, uv_z, uv_echo;\nfloat2 uv_aspect(float2 uvo, float2 uvm, float2 aspectr, float2 motion_scale){\n   return 0.5 + (lerp(uvo,uvm,motion_scale)-0.5)*aspectr;\n}\nfloat2 uv_scale(float2 domain, float2 center, float2 scale){\n   return center + (domain-center)*scale;\n}\nfloat2 uv_polar(float2 domain, float2 center){\n   float2 c = domain - center;\n   float rad_hq = length(c);\n   float ang_hq = atan2(c.x,c.y);\n   return float2(ang_hq, rad_hq);\n}\nfloat2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){\n   float2 polar = uv_polar(domain, position);\n   float cone = saturate(1-polar.y/radius);\n   float halfsphere = sqrt(1-pow(cone-1,2));\n   float w = atan2(1-cone,halfsphere);\n   float refrac_w = w-asin(sin(w)/refractivity);\n   float refrac_d = 1-cone - sin(refrac_w)*halfsphere/cos(refrac_w);\n   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;\n   bool mask =(length(domain-position)<radius);\n   return !mask*domain + \n           mask*refrac_uv;\n}\nshader_body\n{\nfloat2 base_uv = uv_aspect(uv_orig, uv, aspect.wz*0+1, 0);\nfloat2 pos1 = 1-float2(q3,q4);\nfloat rad1 = q5;\nfloat2 pos2 = 1-float2(q6,q7);\nfloat rad2 = q8;\nfloat2 pos3 = 1-float2(q9,q10);\nfloat rad3 = q11;\nfloat2 pos4 = 1-float2(q12,q13);\nfloat rad4 = q14;\nfloat3 col1 = float3(2,1,-1);\nfloat3 col2 = float3(2,-1,1);\nfloat3 col3 = float3(-1,1,2);\nfloat3 col4 = float3(1,-1,2);\nfloat refractivity = -0.9;\nfloat2 lens_uv = uv_lens_half_sphere(uv, pos1, rad1, refractivity);\n       lens_uv = uv_lens_half_sphere(lens_uv, pos2, rad2, refractivity);\n       lens_uv = uv_lens_half_sphere(lens_uv, pos3, rad3, refractivity);\n       lens_uv = uv_lens_half_sphere(lens_uv, pos4, rad4, refractivity);\n\nuv = lens_uv;\n    float2 d = texsize.zw;\n    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );\n    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );\nfloat2 dz = float2(dx.y,dy.y)*3;\n\nd = texsize.zw*2;\ndx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) )*0.5;\ndy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) )*0.5;\n\ndz +=float2(dx.y,dy.y);\n\nfloat3 bg = pow(length(dz)*0.8+0,0.7)*2 + GetBlur1(uv).y*2;\n\nret = bg*float3(0.2,0.3,0.6);\nfloat2 uv_swimmer =frac(0.5 + (uv-0.5)+float2(q19,q20)*float2(-1,1));\nret = lerp(ret,float3(3,2,1),GetBlur3(uv_swimmer -float2(dx.y,dy.y)).x);\nret = lerp(ret,0,GetBlur2(uv_swimmer-dz).x);\nret = lerp(ret,float3(0,0,0),0.75*GetPixel(uv_swimmer).x);\nret = lerp(ret,0,GetBlur1(uv).z*4);\nret = lerp(ret,2,GetPixel(uv).z);\n//ret = GetPixel(uv);\n}"}