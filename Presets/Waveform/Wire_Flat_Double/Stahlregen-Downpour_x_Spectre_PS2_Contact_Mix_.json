{"version":2,"baseVals":{"rating":5,"wave_mode":6,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"wave_scale":2.217,"wave_smoothing":0,"modwavealphastart":0.2,"modwavealphaend":2,"warpanimspeed":10.141,"warpscale":0.01,"zoomexp":0.99999,"zoom":0.99999,"warp":0.0181,"wave_x":0.74,"ob_size":0.025,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.delay=0;a.counter=0;a.warp_scale=0;a.delay=Math.floor(.5*a.fps);","frame_eqs_str":"a.delay=.00001<Math.abs(below(a.delay,0))?Math.floor(.5*a.fps):a.delay-1;a.counter=.00001<Math.abs(equal(a.delay,0))?a.counter+1:a.counter;a.counter=.00001<Math.abs(equal(a.counter,7))?1:a.counter;a.wave_r=.5*below(a.counter,4)+.25*above(a.counter,5);a.wave_g=.5*above(a.counter,1)*below(a.counter,5)-.25*equal(a.counter,2);a.wave_b=.5*above(a.counter,4)-.25*equal(a.counter,7);a.warp=.075+.0025*a.bass_att;a.warp_scale=.02+.05*a.treb_att;a.dy=.0125;","pixel_eqs_str":"","init_eqs_eel":"delay = int(fps*.5);","frame_eqs_eel":"delay = if(below(delay,0),int(fps*.5),delay-1);\ncounter = if(equal(delay,0),counter+1,counter);\ncounter = if(equal(counter,7),1,counter);\n\nwave_r = .5*below(counter,4)+.25*above(counter,5);\nwave_g = .5*above(counter,1)*below(counter,5)-.25*equal(counter,2);\nwave_b = .5*above(counter,4)-.25*equal(counter,7);\n\nwarp = 0.075+.0025*bass_att;\nwarp_scale = .02+.05*treb_att;\ndy = 0.0125;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (vec2(1.5, 0.0) * texsize.wz);\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(0.0, 1.5) * texsize.wz);\n  ret_1 = (texture (sampler_fc_main, uv).xyz + max (max (texture (sampler_main, \n    (uv + tmpvar_2)\n  ).xyz, texture (sampler_main, \n    (uv - tmpvar_2)\n  ).xyz), max (texture (sampler_main, \n    (uv + tmpvar_3)\n  ).xyz, texture (sampler_main, \n    (uv - tmpvar_3)\n  ).xyz)));\n  ret_1 = (ret_1 - texture (sampler_main, uv).xyz);\n  ret_1 = ((ret_1 * 0.96) - 0.002);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = ((0.5 - uv) + 0.5);\n  ret_1 = (abs(mix (\n    ((1.5 * texture (sampler_main, uv).xyz) - (1.25 * ((texture (sampler_blur2, uv).xyz * scale2) + bias2)))\n  , \n    ((1.5 * texture (sampler_main, tmpvar_2).xyz) - (1.25 * ((texture (sampler_blur2, tmpvar_2).xyz * scale2) + bias2)))\n  , vec3(0.5, 0.5, 0.5))) * 1.33);\n  ret_1 = (ret_1 * (0.75 + (0.9 * ret_1)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz;\n\n    \nret += max(\nmax(GetPixel(uv+float2(1.5,0)*texsize.wz),GetPixel(uv-float2(1.5,0)*texsize.wz)),\nmax(GetPixel(uv+float2(0,1.5)*texsize.wz),GetPixel(uv-float2(0,1.5)*texsize.wz)));\nret -= GetPixel(uv);\n    // darken (decay) over time\nret = ret*.96-.002; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    float2 uv_echo = (uv - 0.5)*float2(-1,-1) + 0.5;\n    ret = abs(lerp( 1.5*tex2D(sampler_main, uv).xyz-1.25*GetBlur2(uv), \n                1.5*tex2D(sampler_main, uv_echo).xyz-1.25*GetBlur2(uv_echo), \n                0.50 \n              )); //video echo\n    ret *= 1.33; //gamma\n    ret *= .75+.9*ret;\n //   ret = lum(ret)*((hue_shader*8)-6.25); //old hue shader effect\n}"}