{"version":2,"baseVals":{"rating":5,"gammaadj":2.7,"decay":1,"wave_mode":7,"wave_thick":1,"wrap":0,"solarize":1,"zoom":1.02519,"warp":0.01,"wave_r":0.25,"wave_g":0.25,"wave_b":0.25,"wave_y":0.9,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.q1=.0003*pow(1+1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,6);a.wave_r+=Math.sin(.565*a.time);a.wave_g+=Math.sin(.615*a.time);a.wave_b+=Math.sin(.665*a.time);a.wave_mystery=div(a.time,5);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"q1 = 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\nwave_r = wave_r + 1*sin(time*0.565);\nwave_g = wave_g + 1*sin(time*0.615);\nwave_b = wave_b + 1*sin(time*0.665);\nwave_mystery = time/5;","pixel_eqs_eel":"//zoom = zoom - 0.075*q1;\n//dx = dx + 0.05*sin(fps*25)*(q1);\n//dy = dy + 0.05*cos(fps*35)*(q1);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv_orig);\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 2.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((2.0 * \n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec3 tmpvar_5;\n  tmpvar_5 = (((2.0 * \n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.x;\n  tmpvar_6.y = tmpvar_5.x;\n  ret_1.x = (texture (sampler_main, ((\n    mix (uv_orig, uv, vec2(-0.4, -0.4))\n   - \n    (tmpvar_6 * texsize.zw)\n  ) + (\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5).xy * texsize.zw)\n   * 2.0))).x - 0.001);\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.y;\n  tmpvar_7.y = tmpvar_5.y;\n  ret_1.y = max ((tmpvar_2.z - (tmpvar_2.x * 2.0)), (texture (sampler_fc_main, (\n    (uv + (vec2(-1.0, 1.0) * texsize.zw))\n   - \n    ((tmpvar_7 * texsize.zw) * 3.0)\n  )).y - 0.004));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_4.z;\n  tmpvar_8.y = tmpvar_5.z;\n  vec2 tmpvar_9;\n  tmpvar_9 = (mix (uv_orig, uv, vec2(-0.2, -0.2)) + ((tmpvar_8 * texsize.zw) * 2.0));\n  ret_1.z = texture (sampler_fc_main, tmpvar_9).z;\n  ret_1.z = (ret_1.z + ((\n    (((2.0 * (\n      (texture (sampler_blur1, tmpvar_9).xyz * scale1)\n     + bias1).z) - (2.0 * texture (sampler_main, tmpvar_9).z)) * 0.02)\n   - 0.08) + (ret_1.x * 0.2)));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_1;\n  ret = tmpvar_10.xyz;\n }","comp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  vec3 ret_1;\n  xlat_mutabled = (texsize.zw * 1.5);\n  xlat_mutabledx = (texture (sampler_main, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz);\n  xlat_mutabledy = (texture (sampler_main, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz);\n  vec2 tmpvar_2;\n  tmpvar_2.x = xlat_mutabledx.y;\n  tmpvar_2.y = xlat_mutabledy.y;\n  vec2 x_3;\n  x_3 = (tmpvar_2 * 8.0);\n  ret_1 = (((texture (sampler_main, uv).x * \n    (1.0 - sqrt(dot (x_3, x_3)))\n  ) * pow (hue_shader, vec3(6.0, 6.0, 6.0))) * 1.4);\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.z;\n  tmpvar_4.y = xlat_mutabledy.z;\n  vec2 x_5;\n  x_5 = (tmpvar_4 * 4.0);\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (ret_1, vec3(1.0, 1.0, 1.0), vec3(sqrt(dot (x_5, x_5))));\n  ret_1 = tmpvar_6;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = tmpvar_6;\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body\n{\nret = GetPixel(uv_orig) - 0.004;\n\n\nfloat2 d = texsize.zw*2;\nfloat3 dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) )*0.5;\nfloat3 dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) )*0.5;\n\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n\nfloat2 uv_red = lerp(uv_orig,uv,-.4) - float2(dx.x,dy.x)*texsize.zw + (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)*texsize.zw*2;\nret.x = GetPixel(uv_red).x - 0.001;\n\nfloat2 uv_green = lerp(uv_orig,uv,1) + float2(-1,1)*texsize.zw - float2(dx.y,dy.y)*texsize.zw*3 + float2(dx.x,dy.x)*texsize.zw*0;\nret.y = max( GetPixel(uv_orig).z - GetPixel(uv_orig).x*2, tex2d(sampler_fc_main, uv_green).y - 0.004);\n\nfloat2 uv_blue = lerp(uv_orig,uv,-0.2) + float2(dx.z,dy.z)*texsize.zw*2;\n\nret.z = tex2d(sampler_fc_main,uv_blue).z;\nret.z += -(2*GetPixel(uv_blue).z - 2*GetBlur1(uv_blue).z)*0.02 - 0.08 + ret.x*0.2;\n//ret = 0;\n}","comp_hlsl":"float2 d;\nfloat3 dx, dy;\n\nshader_body\n{\n   d = texsize.zw*1.5;\n   dx = GetPixel(uv_orig + float2(1,0)*d) - GetPixel(uv_orig - float2(1,0)*d);\n   dy = GetPixel(uv_orig + float2(0,1)*d) - GetPixel(uv_orig - float2(0,1)*d);\n\n\nret = GetPixel(uv).x*(1-length(float2(dx.y,dy.y)*8))*pow(hue_shader,6)*1.4;\nret = lerp(ret,float3(1,1,1),length(float2(dx.z,dy.z)*4));\n\n\n}"}