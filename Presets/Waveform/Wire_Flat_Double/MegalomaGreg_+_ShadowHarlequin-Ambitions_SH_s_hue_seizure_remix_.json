{"version":2,"baseVals":{"rating":5,"gammaadj":1.77,"decay":0.97,"echo_zoom":1.474,"echo_alpha":1,"wave_mode":7,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wave_a":100,"wave_scale":2.685,"wave_smoothing":0.702,"modwavealphastart":2,"modwavealphaend":2,"warpscale":8.728,"zoom":0.99951,"warp":0.03469,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_a":1,"ib_size":0.015,"ib_a":1,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"num_inst":160,"rad":0.31559,"ang":0.7854,"tex_ang":0.77911,"tex_zoom":1.85321,"g":0.65,"b":0.55,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"num_inst":53,"rad":0.54279,"tex_zoom":0.8622,"g":0.51,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.01058,"enabled":0},"init_eqs_str":"pulse = 0;","frame_eqs_str":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\npulse = pulse*above(pulse,0);\nt1 = pulse;","point_eqs_str":"x = sqrt(sample*mid*.05);\ny = .5 + (.1+t1)*cos(sample*20);","init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\npulse = pulse*above(pulse,0);\nt1 = pulse;","point_eqs_eel":"x = sqrt(sample*mid*.05);\ny = .5 + (.1+t1)*cos(sample*20);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.cond_treb=0;a.trebresp=0;a.trev=0;a.zoom_out=0;a.below_part=0;a.count=0;a.ret1=0;a.my_volume=0;a.above_part=0;a.cond_bass=0;a.decayrate=0;a.wave_r_wave_b=0;a.cdecay=0;a.rot1=0;a.zoom_in=0;a.q20=0;","frame_eqs_str":"a.decayrate=.09;a.trebresp=2.5;a.cdecay=pow(a.decayrate,div(30,a.fps));a.count=1*above(a.treb,a.trebresp)+(1-above(a.treb,3))*a.count;a.count-=above(a.count,a.cdecay)*a.cdecay;a.q20=a.count;a.monitor=a.q20;a.ob_size=.05+.3*Math.sin(a.bass);a.wave_b=.00001<Math.abs(1>=(a.treb>bitand(1>=bitand(1.1,a.mid)?1:0,a.bass)?1:0)?1:0)?Math.abs(.5+.1*Math.sin(a.treb)):0;a.wave_r=.00001<Math.abs(1>=(a.bass>bitand(1>=bitand(1.1,a.mid)?1:0,a.treb)?1:0)?1:0)?Math.abs(.5+.1*Math.sin(a.bass)):\n0;a.wave_g=.00001<Math.abs(1>=(a.mid>bitand(1>=bitand(1.1,a.bass)?1:0,a.trev)?1:0)?1:0)?Math.abs(.5+.1*Math.sin(a.mid)):0;a.ob_a=.5+.1*Math.sin(a.my_volume);a.ib_r=div(a.wave_g+a.wave_b,2);a.ib_g=div(a.wave_r_wave_b,2);a.ib_b=div(a.wave_r+a.wave_g,2);a.cx=.5;a.cy=.5;a.cond_bass=a.bass>1+.1*Math.sin(sqr(a.bass))?1:0;a.cond_treb=a.treb>1+.1*Math.sin(sqr(a.treb))?1:0;a.rot1=.1*Math.sin(sqr(a.bass)+sqr(a.treb));a.ret1*=a.rot1-a.q20;a.rot=.00001<Math.abs(a.cond_treb)?a.rot1:0;a.rot=.00001<Math.abs(a.cond_bass)?\n-a.rot1:a.rot;","pixel_eqs_str":"a.zoom_out=1-Math.abs(.1*Math.sin(a.ang))*a.q20;a.zoom_in=1+Math.abs(.1*Math.sin(a.ang))*a.q20;a.above_part=bitand(0<a.ang?1:0,a.treb>1+Math.abs(.1*Math.sin(a.ang))?1:0);a.below_part=bitand(0>a.ang?1:0,a.bass>1+Math.abs(.1*Math.sin(a.ang))?1:0);a.zoom=.00001<Math.abs(bitor(a.above_part,a.below_part))?a.zoom_in:a.zoom_out;a.sx=.00001<Math.abs(7.07<a.rad?1:0)?1+Math.abs(.1*Math.sin(a.rad)):1;","init_eqs_eel":"","frame_eqs_eel":"//Variables controling the glitch effect////////////////////////////////////////\ndecayrate = 0.09;   //How fast the glitch effect decays back to original image\ntrebresp = 2.5;    //Level of treb needed for effect to take place\n////////////////////////////////////////////////////////////////////////////////\n\ncdecay = pow(decayrate, 30/fps);\ncount = above(treb, trebresp)*1 + (1-above(treb, 3))*count;\ncount = count - above(count, cdecay)*cdecay;\nq20=count;\nmonitor = q20;\n\n\n\n\nob_size = 0.05 + 0.3*sin(bass);\n\nwave_b = if (treb>1.1&mid<=1&bass<=1, abs(0.5+0.1*sin(treb)),0);\nwave_r = if (bass>1.1&mid<=1&treb<=1, abs(0.5+0.1*sin(bass)),0);\nwave_g = if (mid>1.1&bass<=1&trev<=1, abs(0.5+0.1*sin(mid)),0);\n\n \n\nob_a = 0.5 + 0.1*sin(my_volume);\n\n\nib_r = (wave_g+wave_b)/2;\nib_g = (wave_r_wave_b)/2;\nib_b = (wave_r+wave_g)/2;\n\ncx = 0.5;\ncy = 0.5;\n\ncond_bass = bass>(1+0.1*sin(sqr(bass)));\ncond_treb = treb>(1+0.1*sin(sqr(treb)));\n\nrot1 = 0.1*sin(sqr(bass)+sqr(treb));\nret1 *= (rot1 - q20);\n\nrot = if (cond_treb, rot1,0);\nrot = if (cond_bass,- rot1, rot);","pixel_eqs_eel":"zoom_out = 1 - abs(0.1*sin(ang))*q20;\nzoom_in = 1 + abs(0.1*sin(ang))*q20;\nabove_part = ( (ang>0) & (treb>1 + abs(0.1*sin(ang))) );\nbelow_part = ( (ang<0) & (bass>1 + abs(0.1*sin(ang))) );\n\nzoom = if ( above_part | below_part, zoom_in, zoom_out);\n\nsx= if (rad>7.07, 1 + abs(0.1*sin(rad)),1);","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = normalize((uv - 0.5));\n  vec3 tmpvar_2;\n  tmpvar_2 = (((\n    ((texture (sampler_main, (uv + (texsize.zw * \n      (tmpvar_1 * -4.5)\n    ))) * 0.19) + (texture (sampler_main, (uv + (texsize.zw * \n      (tmpvar_1 * -1.5)\n    ))) * 0.31))\n   + \n    (texture (sampler_main, (uv + (texsize.zw * (tmpvar_1 * 1.5)))) * 0.31)\n  ) + (texture (sampler_main, \n    (uv + (texsize.zw * (tmpvar_1 * 4.5)))\n  ) * 0.19)) - 0.009).xyz;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (tmpvar_2 + (tmpvar_2 * 0.015));\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = abs((fract(\n    (uv + 0.5)\n  ) - 0.5));\n  uv2_1 = (tmpvar_3 + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (tmpvar_3 + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (tmpvar_3 + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_6;\n  tmpvar_6 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (tmpvar_3 + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.14;\n  tmpvar_7.x = (tmpvar_4 - tmpvar_5);\n  tmpvar_7.y = (tmpvar_6 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_7)));\n  vec2 x_8;\n  x_8 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_8, x_8))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3) - (((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1) * (treb_att * (treb_att - q20))))\n  ), pow (hue_shader.xzy, vec3(bass_att))));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"shader_body\n{  \n    // Really smooth RADIAL BLUR:\n    float2 v1 = normalize(uv - 0.5);\n    //float2 v1 = float2(3,0);               // or for an aggressive horiz. blur\n    //float2 v1 = normalize(uv - 0.5).yx * float2(-1,1) * 2;\n    ret   = (  tex2D( sampler_main, uv + texsize.zw*(v1*-4.5) )*0.19\n                 + tex2D( sampler_main, uv + texsize.zw*(v1*-1.5) )*0.31\n                 + tex2D( sampler_main, uv + texsize.zw*(v1* 1.5) )*0.31\n                 + tex2D( sampler_main, uv + texsize.zw*(v1* 4.5) )*0.19\n                ) - 0.009;              \nret += (ret * .015);\n}\n ","comp_hlsl":"float effectamt = 0;\n\nshader_body\n{\nuv=abs(frac(uv+.5)-.5) ;\n    ret = tex2D(sampler_main, uv).xyz*-2 +\n              GetBlur1(uv)*2 +\n              GetBlur2(uv)*2 - 0.7;\n    //ret *= 1.2;\n//ret *= bass;\n\n\n//effectamt = 10;\n//ret = ret * (((treb * effectamt) * uv.x),((mid * effectamt) * uv.y),((bass * effectamt) * uv.x));\n\n\n\n\n\n\n\n\n\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)*(treb_att*(treb_att - q20))),pow(hue_shader.xzy,bass_att));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n\n\n\n\n\n\n}"}