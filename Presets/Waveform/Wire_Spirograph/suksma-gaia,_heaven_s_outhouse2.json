{"version":2,"baseVals":{"rating":5,"gammaadj":1.85,"decay":0.99,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.0101,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":0.1,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.43174,"ang":2.9531,"tex_zoom":0.70721,"r":0,"b":1,"r2":1,"b2":1,"a2":1,"border_a":1},"init_eqs_str":"a.r22=0;a.br=0;a.q6=0;a.gg=0;a.q1=0;a.q5=0;a.bo=0;a.q4=0;a.g22=0;a.squ=0;a.bg=0;a.bb=0;a.q2=0;a.b22=0;a.cir=0;a.q3=0;a.rr=0;a.tri=0;","frame_eqs_str":"a.tex_zoom=1.5-.4*a.bass_att;a.additive=.00001<Math.abs(equal(mod(a.frame,4-a.bass),0))?1:0;a.bb+=.0015*(a.bass+a.bass_att+a.q2+a.treb_att+a.mid_att);a.tex_ang=6.28*(.5*Math.sin(1.2*a.bb*a.q1*a.q2)+1+.5*Math.cos(1.5*a.bb));a.rad=div(a.bb,a.frame)-.8;a.tri=.00001<Math.abs(above(a.bass,a.treb))?1:0;a.squ=.00001<Math.abs(above(a.treb,a.bass))?1:0;a.cir=.00001<Math.abs(band(above(a.mid,a.treb),above(a.mid,a.bass)))?1:0;a.sides=3*a.tri+4*a.squ+300*a.cir;a.ang=a.bass_att*a.mid_att-\na.treb_att*a.mid_att;a.rr=a.bass_att;a.gg=a.treb_att;a.bb=a.mid_att;a.r22=a.rr;a.b22=a.bb;a.g22=a.gg;a.rr=a.br;a.gg=a.bg;a.bb=a.bo;a.br=.6+.4*Math.sin(a.bb*a.q2+a.bb*a.q4);a.bg=.6+.4*Math.sin(a.bb*a.q6+a.bb*a.q1);a.bo=.6+.4*Math.sin(a.bb*a.q2*a.q4*a.q6+a.bb*a.q1*a.q3*a.q5*100);a.border_r=a.br;a.border_b=a.bo;a.border_g=a.bg;a.r=1-a.rr;a.r2=a.b22;a.b=1-a.bb;a.b2=a.g22;a.g=1-a.gg;a.g2=a.r22;","init_eqs_eel":"","frame_eqs_eel":"tex_zoom=1.5-bass_att*.4;\nadditive=if(equal(frame%(4-bass),0),1,0);\nbb=bb+.0015*(bass+bass_att+q2+treb_att+mid_att);\ntex_ang=6.28*(sin(1.2*bb*q1*q2)*.5+1+cos(1.5*bb)*.5);\n\n\nrad=bb/frame-.8;\ntri=if(above(bass,treb),1,0);\nsqu=if(above(treb,bass),1,0);\ncir=if(band(above(mid,treb),above(mid,bass)),1,0);\n\nsides=3*tri+4*squ+300*cir;\n\nang=bass_att*mid_att-treb_att*mid_att;\n\nrr=bass_att;\ngg=treb_att;\nbb=mid_att;\n\n\nr22=rr;\nb22=bb;\ng22=gg;\n\n\nrr=br;\ngg=bg;\nbb=bo;\n\nbr=.6+sin(bb*q2+bb*q4)*.4;\nbg=.6+sin(bb*q6+bb*q1)*.4;\nbo=.6+sin(bb*q2*q4*q6+bb*q1*q3*q5*100)*.4;\n\nborder_r=br;\nborder_b=bo;\nborder_g=bg;\n\n\nr=1-rr;\nr2=b22;\nb=1-bb;\nb2=g22;\ng=1-gg;\ng2=r22;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":20,"spectrum":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=a.sample;a.y=Math.max(a.value2*mod(a.frame,2),.5*a.bass_att-.3*a.treb_att)-Math.min(.5*a.bass_att-.3*a.treb_att,a.value1*(1-mod(a.frame,2)));a.r=a.value1-a.bass;a.g=a.value2-a.treb;a.b=1-(a.value1+a.value2+a.mid);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=(sample);\ny=max(value2*(frame%2),bass_att*.5-treb_att*.3)-min(bass_att*.5-treb_att*.3,value1*(1-frame%2));\n\nr=value1-bass;\ng=value2-treb;\nb=1-(value1+value2+mid);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.thresh=0;a.dx_r=0;a.dy_r=0;","frame_eqs_str":"a.wave_r+=.5*Math.sin(1.13*a.time);a.wave_g+=.5*Math.sin(1.23*a.time);a.wave_b+=.5*Math.sin(1.33*a.time);a.wave_x+=.2*Math.sin(.32*a.time);a.wave_y+=.2*Math.cos(.32*a.time);a.ob_r=a.wave_r;a.ob_g=a.wave_g;a.ob_b=a.wave_b;","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.zoom+=3*a.dx_r*(Math.sin(9*a.ang)+.5*Math.sin(Math.sin(12*a.time*Math.sin(a.time)*a.rad))-.5*Math.cos(a.rad));a.rot+=.08*Math.abs(.746-a.rad)*Math.sin(2.2*(.5-a.rad)+5.7*Math.sin(.1*a.time));a.sx+=a.dx_r*(.59-a.rad)*Math.sin(.733*\na.time)*below(Math.sin(a.time),0);a.sy+=a.dy_r*(.59-a.rad)*Math.cos(.953*a.time)*above(Math.sin(a.time),0);a.zoom-=.04*(1.5-a.rad)*below(a.rad,1.5);a.cx+=21.3*a.dy_r*(.5-a.rad)*Math.cos(.977*a.time);a.cy+=21.3*a.dx_r*(.5-a.rad)*Math.cos(.843*a.time);a.warp+=1.1;","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\nwave_g = wave_g + 0.5*sin(time*1.23);\nwave_b = wave_b + 0.5*sin(time*1.33);\n\nwave_x = wave_x + 0.2*sin(0.32*time);\nwave_y = wave_y + 0.2*cos(0.32*time);\n\nob_r = wave_r;\nob_g = wave_g;\nob_b = wave_b;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\nzoom = zoom + 3*dx_r*(sin(9*ang) + sin(sin(time*12*sin(time)*rad))*0.5 - cos(rad)*0.5);\nrot = rot + 0.08*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));\nsx = sx + dx_r*(0.59*1-rad)*sin(0.733*time)*below(sin(time),0);\nsy = sy + dy_r*(0.59*1-rad)*cos(0.953*time)*above(sin(time),0);\nzoom = zoom - 0.04*(0.5*abs(3)-rad)*below(rad,1.5);\ncx = cx + dy_r*21.3*(0.5-rad)*cos(0.977*time);\ncy = cy + dx_r*21.3*(0.5-rad)*cos(0.843*time);\nwarp = warp + 1.1;","warp":" shader_body { \n  vec3 rsamp_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_pw_main, uv);\n  ret_2 = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.xy - 0.5)\n   * 12.0) * texsize.zw)));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  rsamp_1 = tmpvar_6;\n  float tmpvar_7;\n  vec2 x_8;\n  x_8 = (tmpvar_4.xy - uv);\n  tmpvar_7 = sqrt(dot (x_8, x_8));\n  float tmpvar_9;\n  vec2 x_10;\n  x_10 = (tmpvar_5.xy - uv);\n  tmpvar_9 = sqrt(dot (x_10, x_10));\n  if ((tmpvar_7 > tmpvar_9)) {\n    ret_2.xy = tmpvar_6.xy;\n  };\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.zw - 0.5)\n   * 48.0) * texsize.zw)));\n  rsamp_1 = tmpvar_11.xyz;\n  float tmpvar_12;\n  vec2 x_13;\n  x_13 = (ret_2.xy - uv);\n  tmpvar_12 = sqrt(dot (x_13, x_13));\n  float tmpvar_14;\n  vec2 x_15;\n  x_15 = (tmpvar_11.xy - uv);\n  tmpvar_14 = sqrt(dot (x_15, x_15));\n  if ((tmpvar_12 > tmpvar_14)) {\n    ret_2.xy = rsamp_1.xy;\n  };\n  ret_2.z = texture (sampler_fw_main, ret_2.xy).z;\n  ret_2.z = (ret_2.z - (q1 * 0.005));\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_2;\n  ret = tmpvar_16.xyz;\n }","comp":" shader_body { \n  float tmpvar_1;\n  tmpvar_1 = mix (texture (sampler_main, uv).xyz, texture (sampler_main, ((\n    (uv - 0.5)\n   * vec2(-1.0, 1.0)) + 0.5)).xyz, vec3(0.5, 0.5, 0.5)).x;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (((texture (sampler_main, \n    (0.2 + (0.8 * vec3(tmpvar_1)))\n  .xy) * tmpvar_1) * 3.0).xyz * 2.0);\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));\nret.xyz = tex2D( sampler_pw_main,uvm).xyz;\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nrsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nret.z = tex2D(sampler_fw_main,ret.xy).z;\n\nret.z -= q1*.005;\n\n\n}","comp_hlsl":"shader_body\n{\n    float2 uv_echo = (uv - .5)*1.00*float2(-1,1) + .5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo).xyz, \n                0.50 \n              ); //video echo\n    \n    float lum = ret.xyz;\n    ret = lum;\n\n    float2 texc = .2 + 0.8*ret.xyz;\n    ret = tex2D(sampler_main, texc) * ret.z * 3;\n\n    ret *= 2; //gamma\n}"}