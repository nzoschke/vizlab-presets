{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":3,"wave_brighten":0,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.2,"modwavealphastart":0.39,"modwavealphaend":1.18,"warpscale":1.772,"zoomexp":4.401,"zoom":1.031,"rot":0.003,"warp":0,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":1,"wave_y":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_g":0.2,"mv_b":0.2,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":9,"textured":1,"num_inst":15,"x":0.15,"y":0.82,"rad":1.4976,"tex_zoom":1.48885,"g":0.4,"r2":1,"border_a":0},"init_eqs_str":"a.ra=0;a.negswitchx=0;a.negswitchy=0;a.coff1=0;a.q8=0;a.q9=0;a.q10=0;","frame_eqs_str":"a.ra-=.01*a.bass_att;a.rad=.55;a.ang=a.ra;a.negswitchx=(.00001<Math.abs(mod(Math.floor(rand(2)),2))?-1:1)+a.instance-a.instance;a.negswitchy=(.00001<Math.abs(mod(Math.floor(rand(2)),2))?-1:1)+a.instance-a.instance;a.coff1=2.4;a.r=.5*(Math.cos(.1*a.q8+.1*a.instance)+1)*a.coff1;a.g=.5*(Math.cos(.1*a.q9+.1*a.instance+.8)+1)*a.coff1;a.b=.5*(Math.cos(.1*a.q10+.1*a.instance+1.4)+1)*a.coff1;a.r2=.5*(Math.cos(.1*a.q8+.1*a.instance)+1)*a.coff1;a.g2=.5*(Math.cos(.1*a.q9+.1*a.instance+\n.8)+1)*a.coff1;a.b2=.5*(Math.cos(.1*a.q10+.1*a.instance+1.4)+1)*a.coff1;a.border_r=.5*(Math.cos(.1*a.q8+.1*a.instance)+1)*a.coff1;a.border_g=.5*(Math.cos(.1*a.q9+.1*a.instance+.8)+1)*a.coff1;a.border_b=.5*(Math.cos(.1*a.q10+.1*a.instance+1.4)+1)*a.coff1;a.x=Math.abs(Math.sin(a.instance+a.q8*a.coff1+div(a.negswitchx*Math.floor(rand(Math.floor(a.bass*a.treb*a.mid))),50)))+a.instance-a.instance;a.y=Math.abs(Math.cos(.3*(a.instance+a.q9*a.coff1)+div(a.negswitchy*Math.floor(rand(Math.floor(a.bass*a.treb*\na.mid))),50)))+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"ra=ra-(bass_att*.01);\nrad=.55;\nang=ra;\nnegswitchx=if(int(rand(2))%2,-1,1)+instance-instance;\nnegswitchy=if(int(rand(2))%2,-1,1)+instance-instance;\ncoff1=2.4;\nr=       ((cos(q8  *.1+instance*.1    )+1)*.5)*coff1;\ng=       ((cos(q9  *.1+instance*.1+ .8)+1)*.5)*coff1;\nb=       ((cos(q10 *.1+instance*.1+1.4)+1)*.5)*coff1;\nr2=      ((cos(q8  *.1+instance*.1    )+1)*.5)*coff1;\ng2=      ((cos(q9  *.1+instance*.1+ .8)+1)*.5)*coff1;\nb2=      ((cos(q10 *.1+instance*.1+1.4)+1)*.5)*coff1;\nborder_r=((cos(q8  *.1+instance*.1)    +1)*.5)*coff1;\nborder_g=((cos(q9  *.1+instance*.1+.8) +1)*.5)*coff1;\nborder_b=((cos(q10 *.1+instance*.1+1.4)+1)*.5)*coff1;\nx=abs(sin( instance+q8*coff1+negswitchx*int(rand(int(bass*treb*mid)))/50))+instance-instance;\ny=abs(cos((instance+q9*coff1)*.3+negswitchy*int(rand(int(bass*treb*mid)))/50))+instance-instance;"},{"baseVals":{"enabled":1,"sides":20,"num_inst":1024,"rad":0.01,"r":0,"b":1,"g2":0,"border_a":0},"init_eqs_str":"a.y3=0;a.z2=0;a.y1=0;a.xs=0;a.t1=0;a.x1=0;a.nc=0;a.z3=0;a.t3=0;a.zs=0;a.x3=0;a.ys=0;a.pigtemp=0;a.x2=0;a.t2=0;a.y2=0;a.size=0;a.z1=0;","frame_eqs_str":"a.pigtemp=Math.floor(pow(4,a.bass+a.treb+a.mid));a.num_inst=.00001<Math.abs(above(a.pigtemp,1024))?1024:a.pigtemp;a.t1=div(a.time,5);a.t2=div(a.time,6);a.rad=.005+div(a.bass,100);a.t3=div(a.bass_att,70);a.b2=.7*a.treb-div(a.bass,2);a.r=div(a.instance,a.num_inst);a.g=Math.abs(div(a.treb_att,5)-a.bass);a.size=.3+div(a.bass_att,300);a.nc=sqrt(a.num_inst);a.xs=Math.sin(div(6.28*mod(a.instance,a.nc),a.nc))*Math.sin(div(3.14*Math.floor(div(a.instance,a.nc)),a.nc));a.ys=Math.cos(div(6.28*\nmod(a.instance,a.nc),a.nc))*Math.sin(div(3.14*Math.floor(div(a.instance,a.nc)),a.nc));a.zs=Math.cos(div(3.14*Math.floor(div(a.instance,a.nc)),a.nc));a.y1=a.ys*Math.cos(a.t1)-a.zs*Math.sin(a.t1);a.z1=a.ys*Math.sin(a.t1)+a.zs*Math.cos(a.t1);a.x1=a.z1*Math.sin(a.t2)+a.xs*Math.cos(a.t2);a.z2=a.z1*Math.cos(a.t2)-a.xs*Math.sin(a.t2);a.x2=a.x1*Math.cos(a.t3)-a.y1*Math.sin(a.t3);a.y2=a.y1*Math.cos(a.t3)+a.x1*Math.sin(a.t3);a.x3=a.x2;a.y3=a.y2;a.z3=a.z2;a.x=.5+a.size*div(a.x3,1+a.z3*a.size);a.y=.5+a.size*\ndiv(a.y3,1+a.z3*a.size);a.a=below(a.z3,0);","init_eqs_eel":"","frame_eqs_eel":"pigtemp=int(pow(4,bass+treb+mid));\nnum_inst=if(above(pigtemp,1024),1024,pigtemp);\n\nt1 = time/5;\nt2 = time/6;\nrad = 0.005+bass/100;\nt3 = bass_att/70;\nb2 = treb*0.7-bass/2;\nr = instance/num_inst;\ng = abs(treb_att/5-bass);\n//b = abs(treb_att/5-bass);\nsize = 0.3+bass_att/300;\n\nnc = sqrt(num_inst);\nxs=sin(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);\nys=cos(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);\nzs=cos(3.14*int(instance/nc)/nc);\n\n//modulate to allow rotation\ny1 = ys*cos(t1)-zs*sin(t1);\nz1 = ys*sin(t1)+zs*cos(t1);\nx1 = z1*sin(t2)+xs*cos(t2);\nz2 = z1*cos(t2)-xs*sin(t2);\nx2 = x1*cos(t3)-y1*sin(t3);\ny2 = y1*cos(t3)+x1*sin(t3);\n\n//translate shape\nx3 = x2;\ny3 = y2;\nz3 = z2;\n\nx = 0.5 + size*(x3/(1+z3*size));\ny = 0.5 + size*(y3/(1+z3*size));\na=below(z3,0);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":7,"rad":0.03333,"r":0,"g2":0,"a2":0.3,"border_a":0},"init_eqs_str":"a.vol=0;","frame_eqs_str":"a.x=.01*Math.floor(rand(100))+a.instance-a.instance;a.y=.01*Math.floor(rand(100))+a.instance-a.instance;a.a=1;a.vol=a.bass+a.mid+a.treb;a.rad=div(Math.floor(rand(Math.floor(a.vol))),7)+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01+instance-instance;\ny = int(rand(100))*.01+instance-instance;\n\na =1;\n//a2 =1;\n//border_a = 0;\nvol=bass+mid+treb;\nrad = int(rand(int(vol)))/7+instance-instance;"},{"baseVals":{"sides":100,"num_inst":3,"x":0.75,"y":0.25,"rad":1.46815,"tex_zoom":0.40839,"g":0.9,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ra=ra-if(above(bass,1.3),bass*.02,.01);\n\nang=ra;\nrad=rad+(bass_att*.1);\n\nx=abs(sin(time*.25));\n","init_eqs_eel":"","frame_eqs_eel":"ra=ra-if(above(bass,1.3),bass*.02,.01);\n\nang=ra;\nrad=rad+(bass_att*.1);\n\nx=abs(sin(time*.25));\n"}],"waves":[{"baseVals":{"enabled":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.2*a.bass*Math.sin(20*a.sample*a.time*a.treb);a.y=.5+.2*a.bass*Math.cos(20*a.sample*a.time*a.treb);a.r=1+.5*Math.sin(.1*a.sample+10*a.time*a.bass);a.g=1+.5*Math.sin(2*a.sample+50*a.time*a.treb);a.b=1+.5*Math.sin(5*a.sample+20*a.time*a.mid);a.a=a.r;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));\ny = .5 + (bass*.2)*cos(sample*2*(time*10*treb));\nr = 1 + .5*sin(sample*.10+(time*10*bass));\ng = 1 + .5*sin(sample*2+(time*50*treb));\nb = 1 + .5*sin(sample*5+(time*20*mid));\na = r;"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"additive":1,"smoothing":0,"a":0.1},"init_eqs_str":"a.cd=0;a.c=0;a.q8=0;a.q9=0;a.q20=0;a.q10=0;","frame_eqs_str":"","point_eqs_str":"a.r=.05*a.bass;a.cd+=.001;a.c=21.9911489*Math.floor(rand(20*(Math.cos(a.q8)+1)))*(Math.cos(a.q9)+1);a.c+=a.cd;a.x=.5+Math.cos(a.c)*a.q20*.04;a.y=.5+Math.sin(a.c)*a.q20*.04;a.r=Math.abs(Math.sin(.77*a.q10));a.g=.5*a.treb;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"r=bass*.05;\ncd=cd+.001;\n\nc=int(rand((cos(q8)+1)*20))*3.1415927*((cos(q9)+1)*7);\n//c=rand\nc=c+cd;\n\nx=.5+(cos(c)*q20*.04);\ny=.5+(sin(c)*q20*.04);\n\nr=abs(sin(q10*.77));\ng=treb*.5"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.w=0;a.q12=0;a.q18=0;a.q22=0;a.q13=0;a.scale=0;a.q15=0;a.q6=0;a.dt=0;a.q1=0;a.q5=0;a.dm=0;a.mm=0;a.tt=0;a.angle=0;a.q11=0;a.q4=0;a.q16=0;a.t=0;a.db=0;a.q17=0;a.bb=0;a.q2=0;a.q14=0;a.q3=0;a.q7=0;a.q8=0;","frame_eqs_str":"a.t+=div(2.5,a.fps);a.t=.00001<Math.abs(above(a.t,2))?a.t-2:a.t;a.q22=-a.t;a.db=.98*a.db+.2*a.bass_att;a.bb+=.1*a.db;a.dt=.98*a.dt+.2*a.treb_att;a.tt+=.1*a.dt;a.dm=.98*a.dm+.2*a.mid_att;a.mm+=.1*a.dm;a.q13=.5+.25*Math.sin(.1*(a.bb-a.mm));a.q14=.5+.25*Math.sin(.1*(a.tt-a.mm));a.w=.1*(a.bb-a.tt);a.q16=.8-.04*(a.db-a.dt);a.q11=Math.sin(a.w);a.q12=Math.cos(a.w);a.q17=Math.sin(-a.w);a.q18=Math.cos(-a.w);a.q15=div(1,a.q16);a.zoom=1;a.warp=0;a.scale=8;a.angle=.2*-a.time;a.q1=a.scale*\nMath.cos(a.angle);a.q2=a.scale*Math.sin(a.angle);a.q3=0;a.q4=.3;a.scale=.8;a.angle=.2*a.time;a.q5=a.scale*Math.cos(a.angle);a.q6=a.scale*Math.sin(a.angle);a.q7=-.25;a.q8=.2;a.q11=div(1,Math.asin(1));a.wave_r=Math.min(1,Math.max(0,1.3*(a.bass_att-1)));a.wave_g=.7*a.wave_r;a.wave_b=.1*a.wave_r;a.rot+=.01*(.6*Math.sin(.038*a.time)+.4*Math.sin(.054*a.time));a.dx+=.002*(.6*Math.sin(.434*a.time)+.4*Math.sin(.277*a.time));a.dy+=.002*(.6*Math.sin(.384*a.time)+.4*Math.sin(.477*a.time));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//flexi mobius spiral col frame\nt = t + 2.5/fps;\nt = if(above(t,2),t-2,t);\nq22 = -t;\n// Flexis dampened sound response functions\ndb = db*0.98 + bass_att*0.2; // dampener\nbb = bb + db*0.1; // accumulation, replace time expressions with this ;)\ndt = dt*0.98 + treb_att*0.2;\ntt = tt + dt*0.1;\ndm = dm*0.98 + mid_att*0.2;\nmm = mm + dm*0.1;\n//***** [q11-q18] variables for Flexis caleidoscope shader code *****\n// change\nq13 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x\nq14 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y\nw = (bb-tt)*0.1;                   // angle\nq16 = 0.8 - (db-dt)*0.04;         // size\n//don't change\nq11 = sin(w);\nq12 = cos(w);\nq17 = sin(-w);\nq18 = cos(-w);\nq15 = 1/q16;\nzoom =1;// 0.999;\nwarp = 0;\n// a\nscale = 8;\nangle = -time*0.2;\nq1 = scale*cos(angle); // the real part\nq2 = scale*sin(angle); // the imaginary part\n// b\nq3 = 0; // the real part\nq4 = 0.3; // the imaginary part\n// c\nscale = 0.8;\nangle = time*0.2;\nq5 = scale*cos(angle); // the real part\nq6 = scale*sin(angle); // the imaginary part\n// d\nq7 = -0.25; // the real part\nq8 = 0.2; // the imaginary part\nq11 = 1/asin(1);\n\nwave_r = min(1,max(0,(bass_att-1)*1.3));\nwave_g = wave_r*0.7;\nwave_b = wave_r*0.1;\nrot = rot + 0.010*( 0.60*sin(0.038*time) + 0.40*sin(0.054*time) );\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 tmp_1;\n  vec3 ret_2;\n  tmp_1.x = (ang * 3.0);\n  tmp_1.y = rad;\n  vec3 tmpvar_3;\n  tmpvar_3 = (texture (sampler_noise_lq, ((\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\n   / 2.0) + q23)) + 1.0).xyz;\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_5;\n  tmpvar_5.x = (0.3 * tmpvar_4.x);\n  tmpvar_5.y = tmpvar_4.y;\n  ret_2 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_5))).xyz * scale1) + bias1)\n   - \n    (tmpvar_3 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_4 * 0.01)\n  .xy)).xyz + (tmpvar_3 * 0.1)));\n  float tmpvar_6;\n  tmpvar_6 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_2 = (ret_2 * (0.98 * (tmpvar_6 * tmpvar_6)));\n  ret_2 = (ret_2 - 0.04);\n  ret_2 = (ret_2 - (texture (sampler_noisevol_hq, (\n    ((vec3(0.05, 0.05, 0.0) * tmp_1.xyy) * (texsize.xyy * texsize_noisevol_hq.zww))\n   + \n    (vec3(0.0, 0.0, 0.4) * time)\n  )) * 0.1).xyz);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_2;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  float tmpvar_3;\n  tmpvar_3 = -(q8);\n  float tmpvar_4;\n  tmpvar_4 = (uv.x - 0.5);\n  float tmpvar_5;\n  tmpvar_5 = (uv.y - 0.5);\n  tmpvar_2.x = (((\n    (tmpvar_4 * cos((tmpvar_3 * 0.29)))\n   + \n    (tmpvar_5 * sin((tmpvar_3 * 0.29)))\n  ) * 0.8) + 0.5);\n  tmpvar_2.y = (((\n    (-(tmpvar_4) * sin((tmpvar_3 * 0.29)))\n   + \n    (tmpvar_5 * cos((tmpvar_3 * 0.29)))\n  ) * 0.8) + 0.5);\n  vec2 tmpvar_6;\n  tmpvar_6 = ((0.5 - uv) + 0.5);\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, tmpvar_6).xyz, vec3(0.5, 0.5, 0.5)) * 0.8);\n  ret_1 = (ret_1 + (texture (sampler_main, (tmpvar_2 * q9)).xyz * 0.2));\n  ret_1 = (1.0 - ((ret_1 * \n    (1.0 - ret_1)\n  ) * 4.0));\n  ret_1 = (ret_1 + (texture (sampler_noisevol_hq, (\n    ((vec3(0.05, 0.05, 0.0) * tmpvar_6.xyy) * (texsize.xyy * texsize_noisevol_hq.zww))\n   + \n    (vec3(0.0, 0.0, 0.4) * time)\n  )) * 0.2).xyz);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body {\n\n//uv = uv_orig;\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat2 tmp = uv1;\ntmp.x = ang*3; tmp.y = rad;\nuv1 = tmp;\n\nfloat3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);\n\nfloat3 ret1 = GetBlur1 (uv)-.3;\nfloat3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;\nfloat3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;\n\nret = -.4*blur + crisp;\n    \n ret *= 0.98 * pow(1-.01*q28*q28*rad,2); \n  ret -= 0.04;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv1.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nret -= (noise2)*.1; \n}","comp_hlsl":"shader_body\n{\n    \n    //rotate texture cords\n    float texRotU2 = (uv[0] - 0.5)*cos(-q8*0.29) + (uv[1] - 0.5)*sin(-q8*0.29);\n    float texRotv2 = -(uv[0] - 0.5)*sin(-q8*0.29) + (uv[1] - 0.5)*cos(-q8*0.29);\n\n\t\n\t    float2 uv2 = float2(texRotU2*0.8 +0.5, texRotv2*0.8 + 0.5);\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo).xyz, \n                0.50 \n              )*0.8;\n    \n    ret += tex2D(sampler_main, uv2*q9).xyz*0.2;\n    ret *= 1.00; //gamma\n    ret = 1 - ret*(1 - ret)*4; //invert\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv_echo.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nret += (noise2)*.2; \n}"}