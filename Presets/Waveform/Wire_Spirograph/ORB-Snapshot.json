{"version":1,"baseVals":{"rating":5,"decay":1,"echo_alpha":0.5,"echo_orient":3,"wrap":0,"invert":1,"wave_a":0.001,"zoom":1.16,"warp":0.000521,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"a":0.5},"init_eqs_str":"a.zs=0;a.speed=0;a.q1=0;","frame_eqs_str":"","point_eqs_str":"a.zs=.00001<Math.abs(below(a.zs,1))?9:a.zs;a.zs=.00001<Math.abs(above(a.zs,1100))?1:a.zs;a.speed=.002*a.bass;a.zs+=Math.tan(.015*a.q1)*a.speed;a.x=.5+.5*Math.cos(a.q1*a.zs);a.y=.5+.5*Math.sin(a.q1*a.zs);a.r=.5+.5*Math.sin(2.2*a.q1+a.x+a.x);a.g=.5+.5*Math.sin(2.5*a.q1+a.x+a.y);a.b=.5+.5*Math.sin(2.36*a.q1+a.y+a.y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,1),9,zs);\n\nzs = if(above(zs, 1100),1, zs);\n\nspeed = bass*0.002;\n\n//sum\nzs = zs + tan(q1*0.015)*speed;\n\n//project\nx = 0.5 + 0.5*cos(q1*zs);// /(1 + 0.1*abs(cos(zs)));\ny = 0.5 + 0.5*sin(q1*zs);// /(1 + 0.1*abs(cos(zs)));\n\n\nr = 0.5 + 0.5*sin(q1*2.2 + x + x);\ng = 0.5 + 0.5*sin(q1*2.5 + x + y);\nb = 0.5 + 0.5*sin(q1*2.36 + y + y);"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.basstime=0;a.stickybit=0;a.volavg2=0;a.q1=0;a.sample1=0;a.difftime=0;a.diff=0;a.edge=0;a.basstime2=0;a.volavg=0;a.bit2=0;a.vol=0;a.q3=0;a.basssum=0;a.sample2=0;","frame_eqs_str":"a.basstime+=.03*a.bass;a.basstime2=a.basstime+.03*a.bass;a.q1=a.basstime2;a.basstime=.00001<Math.abs(below(a.basstime,463))?463:a.basstime;a.basstime=.00001<Math.abs(above(a.basstime,530))?463:a.basstime;a.basstime+=.03*a.bass_att;a.vol=pow(a.bass+a.mid+a.treb,2);a.basssum=a.vol;a.stickybit=mod(a.time,2);a.volavg+=a.vol*equal(a.stickybit,1);a.sample1+=equal(a.stickybit,1);a.volavg2+=a.vol*equal(a.stickybit,0);a.sample2+=equal(a.stickybit,0);a.edge=bnot(equal(a.bit2,a.stickybit));\na.volavg-=a.volavg*a.edge*a.stickybit;a.volavg2-=a.volavg2*a.edge*equal(a.stickybit,0);a.sample1-=a.sample1*a.edge*a.stickybit;a.sample2-=a.sample2*a.edge*equal(a.stickybit,0);a.diff=.00001<Math.abs(equal(a.stickybit,1))?div(a.basssum,div(a.volavg2,a.sample2)):0;a.diff=.00001<Math.abs(equal(a.stickybit,0))?div(a.basssum,div(a.volavg,a.sample1)):a.diff;a.q3=a.diff;a.bit2=mod(a.time,2);a.difftime=.00001<Math.abs(above(a.difftime,2E3))?0:a.difftime;a.monitor=a.basstime;","pixel_eqs_str":"a.zoom=1+.1*a.q3*a.rad;a.rot=(a.rad-a.q3)*a.q3*.1*Math.sin(a.ang);","init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass*0.03;\nbasstime2 = basstime + bass*0.03;\nq1 = basstime2;\n\n//start in most active range\nbasstime = if(below(basstime,463),463,basstime);\nbasstime = if(above(basstime,530),463,basstime);\n\nbasstime = basstime + bass_att*0.03;\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\nq3 = diff;\n\nbit2 = time%2;\n\n//fix a strange error\ndifftime = if(above(difftime,2000),0, difftime);\n\nmonitor = basstime;","pixel_eqs_eel":"zoom = 1 +  q3*0.1*rad;\nrot = (rad-q3)*q3*0.1*sin(ang);","warp":"","comp":"","warp_hlsl":"","comp_hlsl":""}