{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.905,"warpscale":0.01,"zoom":0.96098,"warp":0.01,"ob_size":0.025,"ob_a":0.25,"ib_size":0.18,"ib_r":0.3,"ib_g":0.3,"ib_b":0.3,"ib_a":0.03,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":3,"rad":0.34,"ang":0.53,"r":0.56,"g":0.36,"r2":0.9,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + time;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + time;"},{"baseVals":{"sides":3,"rad":0.41,"r":0,"g":0.8,"b":0.7,"g2":0.4,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang - time*.333;","init_eqs_eel":"","frame_eqs_eel":"ang = ang - time*.333;"},{"baseVals":{"sides":3,"rad":0.21,"r":0.84,"r2":1,"g2":0.58,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + time*4;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + time*4;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.2*a.bass*Math.sin(20*a.sample*a.time*a.treb);a.y=.5+.2*a.bass*Math.cos(20*a.sample*a.time*a.treb);a.r=1+.5*Math.sin(.1*a.sample+10*a.time*a.bass);a.g=1+.5*Math.sin(2*a.sample+50*a.time*a.treb);a.b=1+.5*Math.sin(5*a.sample+20*a.time*a.mid);a.a=a.r;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));\ny = .5 + (bass*.2)*cos(sample*2*(time*10*treb));\nr = 1 + .5*sin(sample*.10+(time*10*bass));\ng = 1 + .5*sin(sample*2+(time*50*treb));\nb = 1 + .5*sin(sample*5+(time*20*mid));\na = r;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.res=0;a.q25=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.q5=0;a.vb=0;a.q9=0;a.x=0;a.v=0;a.mm=0;a.diff=0;a.tt=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.q4=0;a.q16=0;a.q26=0;a.y=0;a.q19=0;a.beat=0;a.q17=0;a.vol=0;a.bb=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.vvm=0;a.q32=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.vvt=0;a.q8=0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(a.bass*a.treb*a.mid,2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(a.mid,2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(a.treb,2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=2*a.vvb;a.q2=2*a.vvm;a.q3=2*a.vvt;a.v=2;a.bb-=a.vvb*a.v;a.mm-=a.vvm*a.v;a.tt-=a.vvt*a.v;a.q4=-a.bb;a.q5=-a.mm;a.q6=-a.tt;a.q4=\n5*(a.q1+a.q2+a.q3);a.q5=5*(a.q1+a.q2+a.q3);a.q6=5*(a.q1+a.q2+a.q3);a.q7=5*(a.q1+a.q2+a.q3);a.q8=5*(a.q1+a.q2+a.q3);a.q9=5*(a.q1+a.q2+a.q3);a.q10=5*(a.q1+a.q2+a.q3);a.q11=5*(a.q1+a.q2+a.q3);a.q12=5*(a.q1+a.q2+a.q3);a.q13=5*(a.q1+a.q2+a.q3);a.q14=5*(a.q1+a.q2+a.q3);a.q15=5*(a.q1+a.q2+a.q3);a.q16=5*(a.q1+a.q2+a.q3);a.q17=5*(a.q1+a.q2+a.q3);a.q18=5*(a.q1+a.q2+a.q3);a.q19=5*(a.q1+a.q2+a.q3);a.q20=5*(a.q1+a.q2+a.q3);a.q21=5*(a.q1+a.q2+a.q3);a.q22=5*(a.q1+a.q2+a.q3);a.q23=5*(a.q1+a.q2+a.q3);a.q24=5*(a.q1+\na.q2+a.q3);a.q25=5*(a.q1+a.q2+a.q3);a.q26=5*(a.q1+a.q2+a.q3);a.q27=5*(a.q1+a.q2+a.q3);a.q28=5*(a.q1+a.q2+a.q3);a.q29=5*(a.q1+a.q2+a.q3);a.q30=5*(a.q1+a.q2+a.q3);a.q31=5*(a.q1+a.q2+a.q3);a.q32=5*(a.q1+a.q2+a.q3);a.wave_r=.5+.5*Math.sin(1.12*a.time);a.wave_g=.5+.5*Math.sin(1.22*a.time);a.wave_b=.25*Math.sin(1.32*a.time);a.ib_r=a.wave_b;a.ib_g=a.wave_r;a.ib_b=a.wave_g;a.vol=8*a.bass+4*a.mid+2*a.treb;a.vol*=above(a.vol,17);a.monitor=a.vol;a.beat=above(a.vol,a.res);a.diff=(1-a.beat)*a.diff+a.beat*(a.vol-\na.res);a.res=a.beat*(a.vol+2*a.diff)+(1-a.beat)*(a.res-div(60*(.04*a.diff+.12),a.fps));a.res=Math.max(0,a.res);a.monitor=a.res;a.x=.00001<Math.abs(a.beat)?.01*Math.floor(rand(60))+.2:a.x;a.y=.00001<Math.abs(a.beat)?.01*Math.floor(rand(60))+.2:a.y;a.wave_mystery=.00001<Math.abs(above(a.x,a.y))?0:-1;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"vb = vb*0.95 + (1-vb)*pow(bass*treb*mid,2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(mid,2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(treb,2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = vvb*2;//0.5 + vb - vvb;\nq2 = vvm*2;//0.5 + vm - vvm;\nq3 = vvt*2;//0.5 + vt - vvt;\nv=2;\nbb = bb - vvb*v;\nmm = mm - vvm*v;\ntt = tt - vvt*v;\nq4 = -bb;\nq5 = -mm;\nq6 = -tt;\nq4=(q1+q2+q3)*5;\nq5=(q1+q2+q3)*5;\nq6=(q1+q2+q3)*5;\nq7=(q1+q2+q3)*5;\nq8=(q1+q2+q3)*5;\nq9=(q1+q2+q3)*5;\nq10=(q1+q2+q3)*5;\nq11=(q1+q2+q3)*5;\nq12=(q1+q2+q3)*5;\nq13=(q1+q2+q3)*5;\nq14=(q1+q2+q3)*5;\nq15=(q1+q2+q3)*5;\nq16=(q1+q2+q3)*5;\nq17=(q1+q2+q3)*5;\nq18=(q1+q2+q3)*5;\nq19=(q1+q2+q3)*5;\nq20=(q1+q2+q3)*5;\nq21=(q1+q2+q3)*5;\nq22=(q1+q2+q3)*5;\nq23=(q1+q2+q3)*5;\nq24=(q1+q2+q3)*5;\nq25=(q1+q2+q3)*5;\nq26=(q1+q2+q3)*5;\nq27=(q1+q2+q3)*5;\nq28=(q1+q2+q3)*5;\nq29=(q1+q2+q3)*5;\nq30=(q1+q2+q3)*5;\nq31=(q1+q2+q3)*5;\nq32=(q1+q2+q3)*5;\nwave_r = 0.5+0.5*sin(time*1.12);\nwave_g = 0.5+0.5*sin(time*1.22);\nwave_b = 0.5*0.5*sin(time*1.32);\nib_r = wave_b;\nib_g = wave_r;\nib_b = wave_g;\n//rot = 0.1*(sin(treb)*sin(treb));\n\n// Thanks a bunch to flexi (once again) for beat detection!\n\nvol = bass*8 + mid*4 + treb*2;\nvol = vol*above(vol,17);\nmonitor = vol;\nbeat = above(vol,res);\ndiff = (1-beat)*diff + beat*(vol-res);\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\nres = max(0,res);\nmonitor = res;\n\nx = if(beat,int(rand(60))*0.01 + 0.2,x);\ny = if(beat,int(rand(60))*0.01 + 0.2,y);\nwave_mystery = if(above(x,y),0,-1);","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\n  uv_1 = (mix (uv_orig, uv, vec2((\n    (dot (texture (sampler_main, mix (uv_orig, uv, vec2(4.0, 4.0))).xyz, vec3(0.32, 0.49, 0.29)) - dot (((texture (sampler_blur2, \n      mix (uv_orig, uv, vec2(-12.0, -12.0))\n    ).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29)))\n   * 12.0))) + ((\n    (texture (sampler_noise_lq, tmpvar_3) - 0.5)\n  .xy * texsize.zw) * 0.5));\n  ret_2 = ((texture (sampler_main, uv_1).xyz + (\n    (texture (sampler_noise_lq, tmpvar_3) - 0.5)\n   * 0.006).xyz) + -0.0006);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * roam_cos.y)) && (ret_2.x <= (q24 * roam_sin.x)))) {\n    ret_2.y = (ret_2.y - (tmpvar_4.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * roam_sin.x)) && (ret_2.y <= (q25 * roam_cos.x)))) {\n    ret_2.z = (ret_2.z - (tmpvar_4.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * roam_cos.x)) && (ret_2.z <= (q26 * roam_sin.y)))) {\n    ret_2.x = (ret_2.x - (tmpvar_4.z * 0.5));\n  };\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  float diff_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = fract(uv);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\n  vec2 x_5;\n  x_5 = (tmpvar_4.xy - ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1).xy);\n  vec2 x_6;\n  x_6 = (tmpvar_4.xy - ((texture (sampler_blur2, tmpvar_3).xyz * scale2) + bias2).xy);\n  diff_1 = ((1.0 - (\n    sqrt(dot (x_5, x_5))\n   * 3.5)) * (1.0 - sqrt(\n    dot (x_6, x_6)\n  )));\n  ret_2.xy = (tmpvar_4.xy * diff_1);\n  ret_2.z = pow (diff_1, (1.0/((1.0 - tmpvar_3.x))));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_3.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((ret_2.x > (q26 * roam_cos.y)) && (ret_2.x <= (q23 * roam_sin.x)))) {\n    ret_2.z = (ret_2.z - (tmpvar_7.x * 0.5));\n  };\n  if (((ret_2.y > (q25 * roam_sin.x)) && (ret_2.y <= (q22 * roam_cos.x)))) {\n    ret_2.x = (ret_2.x - (tmpvar_7.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * roam_cos.x)) && (ret_2.z <= (q21 * roam_sin.y)))) {\n    ret_2.y = (ret_2.y - (tmpvar_7.z * 0.5));\n  };\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n\n\nfloat error     = 0.5;        // maximum random pixel offset\nfloat diffusion = 0.006;      // dither strength\nfloat fadeout   = -0.0006;    // may be minor 1/256 due to the error diffusion dither;\n\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;\nfloat magic = lum(GetPixel(lerp(uv_orig,uv, 4))) - lum(GetBlur2(lerp(uv_orig,uv,-12)));\nuv = lerp(uv_orig,uv, magic*12 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;\nret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; \nif(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z -= (noise9).y*.5; \nif(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; \n}","comp_hlsl":"sampler sampler_fw_sky;\nshader_body\n{\nfloat2 uvm = frac(uv + time*.0);\n\nret = tex2D(sampler_main,uvm);\nfloat diff = 1-length(ret.xy-GetBlur1(uvm).xy)*3.5;\ndiff *=1-length(ret.xy-GetBlur2(uvm).xy)*1;\nret.xy *= diff;\nret.z = pow(diff,1/(1-uvm.x));\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uvm.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q30 \n                     );\nif(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z -= (noise9).x*.5; \nif(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x -= (noise9).y*.5; \nif(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y -= (noise9).z*.5; \n}"}