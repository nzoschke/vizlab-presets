{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"invert":1,"wave_a":0.001,"warpanimspeed":100,"warpscale":0.01,"zoomexp":1.14947,"warp":0.01,"sx":0.9901,"sy":0.9901,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_r":1,"ib_g":1,"ib_b":1,"mv_a":0},"shapes":[{"baseVals":{"sides":30,"textured":1,"x":0.89,"y":0.86,"rad":0.92324,"tex_ang":1.19381,"tex_zoom":0.2274,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_str":"tex_saw = 0.4;","frame_eqs_str":"ang = q1*2;\n\ntex_zoom = 2.33;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*2;\n\ntex_zoom = 2.33;"},{"baseVals":{"sides":30,"textured":1,"x":0.16,"y":0.73,"rad":0.9998,"tex_zoom":0.21006,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_str":"tex_saw = 0.4;","frame_eqs_str":"ang = q1*.66;\ntex_zoom = 0.5;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*.66;\ntex_zoom = 0.5;"},{"baseVals":{"sides":100,"rad":0.22167,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"border_r = 0.5 + 0.5*sin(q1*10);","init_eqs_eel":"","frame_eqs_eel":"border_r = 0.5 + 0.5*sin(q1*10);"},{"baseVals":{"enabled":1,"sides":100,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.xx=0;a.yy=0;a.radi=0;a.q1=0;","frame_eqs_str":"a.a=above(a.q3,2);a.a2=.8*above(a.q3,2);a.xx=.00001<Math.abs(above(a.q3,5))?a.xx:.01*rand(100);a.yy=.00001<Math.abs(above(a.q3,5))?a.yy:.01*rand(100);a.radi=.00001<Math.abs(above(a.q3,5))?a.radi:.01*rand(100);a.rad=a.radi;a.x=a.xx;a.y=a.yy;a.r=.5*Math.sin(1.22*a.q1)+.6;a.g=.4+.4*Math.sin(1.307*a.q1);a.b=.4+.4*Math.sin(1.959*a.q1);a.r2=.5*Math.sin(1.622*a.q1)+.6;a.g2=.4+.4*Math.sin(1.507*a.q1);a.b2=.4+.4*Math.sin(1.6559*a.q1);","init_eqs_eel":"","frame_eqs_eel":"a = above(q3,2);\na2 = above(q3,2)*0.8;\n\nxx = if(above(q3,5),xx,rand(100)*0.01);\nyy = if(above(q3,5),yy,rand(100)*0.01);\nradi = if(above(q3,5),radi,rand(100)*0.01);\n\nrad = radi;\n\nx = xx;\ny = yy;\n\n\nr = 0.5 + 0.5*sin(q1*1.22) + 0.1;\ng = 0.4 + 0.4*sin(q1*1.307);\nb = 0.4 + 0.4*sin(q1*1.959);\n\n\nr2 = 0.5 + 0.5*sin(q1*1.622) + 0.1;\ng2 = 0.4 + 0.4*sin(q1*1.507);\nb2 = 0.4 + 0.4*sin(q1*1.6559);"}],"waves":[{"baseVals":{"enabled":1,"a":0.5},"init_eqs_str":"a.zs=0;a.speed=0;a.q3=0;a.q1=0;a.zd=0;","frame_eqs_str":"","point_eqs_str":"a.zs=.00001<Math.abs(below(a.zs,1))?9:a.zs;a.zs=.00001<Math.abs(above(a.zs,1100))?1:a.zs;a.speed=.002*a.q3;a.zs+=Math.tan(.015*a.q1)*a.speed;a.zd+=2;a.x=.5+.2*Math.cos(a.q1*a.zs);a.y=.5+.2*Math.sin(a.q1*a.zs);a.r=1-.2*Math.sin(1-1.5*a.q3+.3*a.x+.3*a.x);a.g=1-.2*Math.sin(1-1.5*a.q3+.35*a.x+.35*a.y);a.b=1-.3*Math.sin(1-1.36*a.q3+.4*a.y+.4*a.y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,1),9,zs);\n\nzs = if(above(zs, 1100),1, zs);\n\nspeed = q3*0.002;\n\n//sum\nzs = zs + tan(q1*0.015)*speed; //inner diamater\n\nzd = zd + 2; //?pattern progression?\n\n\n\n//project (position and diamater/inner)\nx = 0.5 + 0.2*cos(q1*zs);\ny = 0.5 + 0.2*sin(q1*zs);\n\nr = 1.0 - .2*sin(1 - q3*1.5 + .3*x + .3*x);\ng = 1.0 - .2*sin(1 - q3*1.5 + .35*x + .35*y);\nb = 1.0 - .3*sin(1 - q3*1.36 + .4*y + .4*y);"},{"baseVals":{"enabled":1,"samples":64,"additive":1},"init_eqs_str":"a.zs=0;a.speed=0;a.q1=0;a.zd=0;","frame_eqs_str":"","point_eqs_str":"a.zs=.00001<Math.abs(below(a.zs,1))?9:a.zs;a.zs=.00001<Math.abs(above(a.zs,1100))?1:a.zs;a.speed=.01*a.bass;a.zs+=Math.tan(.015*a.q1)*a.speed;a.zd+=2;a.x=.8+.11*Math.cos(a.q1*a.zs);a.y=.49+.11*Math.sin(a.q1*a.zs);a.r=.5+.5*Math.sin(1.2*a.q1+a.x+a.x);a.g=.5+.5*Math.sin(1.2*a.q1+a.x+a.y);a.b=.5+.75*Math.sin(1.5*a.q1+a.y+a.y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"zs = if(below(zs,1),9,zs);\n\nzs = if(above(zs, 1100),1, zs);\n\nspeed = bass*0.01;\n\n//sum\nzs = zs + tan(q1*0.015)*speed;\n\nzd = zd + 2;\n\n\n//project\n\nx = .80 + 0.11*cos(q1*zs);\ny = .49 + 0.11*sin(q1*zs);\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.2 + x + y);\nb = 0.5 + 0.75*sin(q1*1.5 + y + y);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.basstime=0;a.stickybit=0;a.volavg2=0;a.q1=0;a.decay_r=0;a.sample1=0;a.difftime=0;a.diff=0;a.decay_b=0;a.edge=0;a.saw_g=0;a.basstime2=0;a.volavg=0;a.bit2=0;a.saw_b=0;a.vol=0;a.q2=0;a.rarr=0;a.q3=0;a.basssum=0;a.decay_g=0;a.saw_r=0;a.sample2=0;a.state=0;","frame_eqs_str":"a.decay_r=.65+.2*Math.abs(Math.cos(1.56*a.difftime+a.rarr));a.decay_g=.5+.2*Math.abs(Math.cos(1.36*a.difftime+a.rarr));a.decay_b=.5+.2*Math.abs(Math.cos(1.2*a.difftime+a.rarr));a.basstime+=.03*a.bass;a.basstime2=a.basstime+.03*a.bass;a.q1=a.basstime2;a.basstime=.00001<Math.abs(below(a.basstime,1E3))?1E3:a.basstime;a.basstime+=.03*a.bass_att;a.vol=pow(a.bass+a.mid+a.treb,2);a.basssum=a.vol;a.stickybit=mod(a.time,2);a.volavg+=a.vol*equal(a.stickybit,1);a.sample1+=equal(a.stickybit,\n1);a.volavg2+=a.vol*equal(a.stickybit,0);a.sample2+=equal(a.stickybit,0);a.edge=bnot(equal(a.bit2,a.stickybit));a.volavg-=a.volavg*a.edge*a.stickybit;a.volavg2-=a.volavg2*a.edge*equal(a.stickybit,0);a.sample1-=a.sample1*a.edge*a.stickybit;a.sample2-=a.sample2*a.edge*equal(a.stickybit,0);a.diff=.00001<Math.abs(equal(a.stickybit,1))?div(a.basssum,div(a.volavg2,a.sample2)):0;a.diff=.00001<Math.abs(equal(a.stickybit,0))?div(a.basssum,div(a.volavg,a.sample1)):a.diff;a.q3=a.diff;a.bit2=mod(a.time,2);a.difftime+=\n.03*a.diff;a.q2=a.difftime;","pixel_eqs_str":"a.saw_r+=.00014*a.bass;a.saw_r=.00001<Math.abs(above(a.saw_r,2))?0:a.saw_b;a.saw_g+=.00013*a.bass;a.saw_g=.00001<Math.abs(above(a.saw_g,2))?0:a.saw_r;a.saw_b+=.0000024*a.bass;a.saw_b=.00001<Math.abs(above(a.saw_b,2))?0:a.saw_g;a.decay_r=2-a.y*a.saw_r;a.decay_g=2-a.y*a.saw_g;a.decay_b=2-a.y*a.saw_b;a.rot=0;a.zoom=1.02;","init_eqs_eel":"state = 0;","frame_eqs_eel":"//warp = bass*3;\ndecay_r = 0.65 + 0.2*(abs(cos(difftime*1.56+rarr)));\ndecay_g = 0.5 + 0.2*(abs(cos(difftime*1.36+rarr)));\ndecay_b = 0.5 + 0.2*(abs(cos(difftime*1.2+rarr)));\n//dy = 0.98;\n\nbasstime = basstime + bass*0.03;\nbasstime2 = basstime + bass*0.03;\nq1 = basstime2;\n\n//start in most active range\nbasstime = if(below(basstime,1000),1000,basstime);\n//basstime = if(above(basstime,495),450,basstime);\n\nbasstime = basstime + bass_att*0.03;\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\nq3 = diff;\n\nbit2 = time%2;\n\ndifftime = difftime + diff*0.03;\nq2 = difftime;","pixel_eqs_eel":"saw_r = saw_r + 0.00014*bass;\nsaw_r =  if(above(saw_r, 2),0,saw_b);\n\nsaw_g = saw_g + 0.00013*bass;\nsaw_g =  if(above(saw_g, 2),0,saw_r);\n\nsaw_b = saw_b + 0.0000024*bass;\nsaw_b =  if(above(saw_b, 2),0,saw_g);\n\n\ndecay_r = 2 - y*saw_r;\ndecay_g = 2 - y*saw_g;\ndecay_b = 2 - y*saw_b;\n\n\nrot = 0;\nzoom = 1.02;","warp":" shader_body { \n  vec2 d_1;\n  vec3 ret_2;\n  ret_2.x = (texture (sampler_fc_main, uv).xyz * q3).x;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.5);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (((texture (sampler_blur2, \n    (uv + (vec2(0.0, 0.5) * tmpvar_3))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - (vec2(0.0, 2.0) * tmpvar_3))\n  ).xyz * scale2) + bias2)).z;\n  tmpvar_4.y = -(((\n    (texture (sampler_blur2, (uv + (vec2(0.5, 0.0) * tmpvar_3))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - (vec2(2.0, 0.0) * tmpvar_3))).xyz * scale2)\n   + bias2)).z);\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + ((tmpvar_4 * texsize.zw) * 120.0));\n  vec2 x_6;\n  x_6 = (tmpvar_5 - uv);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_main, uv);\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_blur1, uv);\n  ret_2.z = (((texture (sampler_main, tmpvar_5).z + \n    (((tmpvar_7.z - (\n      (tmpvar_8.xyz * scale1)\n     + bias1).z) * 130.0) * sqrt(dot (x_6, x_6)))\n  ) * 0.92) - 0.04);\n  d_1 = (texsize.zw * 2.0);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (((texture (sampler_blur1, \n    (uv + (vec2(0.5, 0.0) * d_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(2.0, 0.0) * d_1))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_9.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 0.5) * d_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 2.0) * d_1))\n  ).xyz * scale1) + bias1)).y;\n  ret_2.y = ((texture (sampler_main, (uv_orig + \n    ((tmpvar_9 * texsize.zw) * 7.0)\n  )).y + (\n    (tmpvar_7.y - ((tmpvar_8.xyz * scale1) + bias1).y)\n   * 0.1)) - 0.024);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_2;\n  ret = tmpvar_10.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = mix (texture (sampler_main, uv).xyz, texture (sampler_main, ((0.5 - uv) + 0.5)).xyz, vec3(0.4, 0.4, 0.4));\n  ret_1 = (1.0 - ((ret_1 * \n    (1.0 - ret_1)\n  ) * 4.0));\n  ret_1 = (ret_1 + (0.2 * ret_1));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    ret = tex2D( sampler_fc_main, uv ).xyz*q3;\n    float2 d = texsize.zw*4.5;\n    float3 dx = ( GetBlur2(uv + float2(1,0)*d*.5) - GetBlur2(uv-float2(1,0)*d*2) );\n    float3 dy = ( GetBlur2(uv + float2(0,1)*d*.5) - GetBlur2(uv-float2(0,1)*d*2) );\n    float2 uv_dz = uv + float2(dy.z,-dx.z)*texsize.zw*120;\n    \n    ret.z = (GetPixel(uv_dz).z + (GetPixel(uv).z - GetBlur1(uv).z)*130*length(uv_dz-uv))*.92 - 0.04;\n   \n\n    d = texsize.zw*2;\n    dx = ( GetBlur1(uv + float2(1,0)*d*.5) - GetBlur1(uv-float2(1,0)*d*2) );\n    dy = ( GetBlur1(uv + float2(0,1)*d*.5) - GetBlur1(uv-float2(0,1)*d*2) );\n\n    float2 uv_dy = uv_orig + float2(dx.y,dy.y)*texsize.zw*7;\n    ret.y = GetPixel(uv_dy).y + (GetPixel(uv).y - GetBlur1(uv).y)*0.1 - 0.024;\n//ret.y = 0;\n\n}","comp_hlsl":"shader_body\n{\n    \n    //rotate texture cords\n    float texRotU2 = (uv[0] - 0.5)*cos(-q8*0.29) + (uv[1] - 0.5)*sin(-q8*0.29);\n    float texRotv2 = -(uv[0] - 0.5)*sin(-q8*0.29) + (uv[1] - 0.5)*cos(-q8*0.29);\n\n\t\n\t    float2 uv2 = float2(texRotU2*0.8 +0.5, texRotv2*0.8 + 0.5);\n\n    float2 uv_echo = (uv - 0.5)*1.00*float2(-1,-1) + .5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo).xyz, \n                .4 \n              )*1;\n    \n    //ret += tex2D(sampler_main, uv2*q9).xyz*0.0;\n    //ret *= 1.10; //gamma\n    ret = 1 - ret*(1 - ret)*4; //invert\n    ret += .2*ret;\n}"}