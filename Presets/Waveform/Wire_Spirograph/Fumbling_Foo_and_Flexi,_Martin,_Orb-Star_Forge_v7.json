{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"invert":1,"wave_a":0.001,"warpanimspeed":100,"warpscale":0.01,"zoomexp":1.14947,"warp":0,"sx":0.9901,"sy":0.9901,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_r":1,"ib_g":1,"ib_b":1,"mv_a":0},"shapes":[{"baseVals":{"sides":30,"textured":1,"x":0.89,"y":0.86,"rad":0.92324,"tex_ang":1.19381,"tex_zoom":0.2274,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_str":"tex_saw = 0.4;","frame_eqs_str":"ang = q1*2;\n\ntex_zoom = 2.33;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*2;\n\ntex_zoom = 2.33;"},{"baseVals":{"sides":30,"textured":1,"x":0.16,"y":0.73,"rad":0.9998,"tex_zoom":0.21006,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_str":"tex_saw = 0.4;","frame_eqs_str":"ang = q1*.66;\ntex_zoom = 0.5;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*.66;\ntex_zoom = 0.5;"},{"baseVals":{"sides":100,"rad":0.22167,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"border_r = 0.5 + 0.5*sin(q1*10);","init_eqs_eel":"","frame_eqs_eel":"border_r = 0.5 + 0.5*sin(q1*10);"},{"baseVals":{"enabled":1,"sides":100,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q4=0;a.xx=0;a.yy=0;a.radi=0;a.q3=0;a.q1=0;","frame_eqs_str":"a.a=above(a.q4,500);a.a2=above(a.q4,975);a.xx=(above(a.q4,975),.01*rand(100));a.yy=.00001<Math.abs(above(a.q4,975))?.01*rand(80)+.1:.01*rand(70)+.15;a.radi=.00001<Math.abs(above(a.q4,975))?.333*sqrt(a.q3)+.333:.5*sqrt(a.q3);a.rad=a.radi;a.x=a.xx;a.y=a.yy;a.r=.5*Math.sin(1.22*a.q1)+.6;a.g=.4+.4*Math.sin(1.307*a.q1);a.b=.4+.4*Math.sin(1.959*a.q1);a.r2=.5*Math.sin(1.622*a.q1)+.6;a.g2=.4+.4*Math.sin(1.507*a.q1);a.b2=.4+.4*Math.sin(1.6559*a.q1);","init_eqs_eel":"","frame_eqs_eel":"a = above(q4,500);\na2 = above(q4,975);\n\nxx = if(above(q4,975), rand(100)*0.01, rand(100)*0.01);\nyy = if(above(q4,975), rand(80)*0.01 + .1, rand(70)*0.01 + .15);\nradi = if(above(q4, 975), sqrt(q3)*.333 + .333, sqrt(q3)*.5);\n\nrad = radi;\n\nx = xx;\ny = yy;\n\n\nr = 0.5 + 0.5*sin(q1*1.22) + 0.1;\ng = 0.4 + 0.4*sin(q1*1.307);\nb = 0.4 + 0.4*sin(q1*1.959);\n\n\nr2 = 0.5 + 0.5*sin(q1*1.622) + 0.1;\ng2 = 0.4 + 0.4*sin(q1*1.507);\nb2 = 0.4 + 0.4*sin(q1*1.6559);"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"a":0.42},"init_eqs_str":"a.q29=0;a.q1=0;a.zd=0;a.zs=0;a.q4=0;a.speed=0;a.q3=0;a.q28=0;a.q8=0;","frame_eqs_str":"","point_eqs_str":"a.zs=.00001<Math.abs(below(a.zs,1))?9:a.zs;a.zs=.00001<Math.abs(above(a.zs,1100))?1:a.zs;a.speed=div(a.q3*a.q3*.005*(a.bass+a.mid+a.treb),3);a.zs+=Math.tan(a.q4)*Math.tan(a.speed);a.zd+=2;a.x=.5+(.2+.005*pow(a.q3,1.25))*Math.cos(div(.25*a.q1*a.zs,a.q8));a.y=.5+(.2+.005*pow(a.q3,1.25))*Math.sin(div(.25*a.q1*a.zs,a.q8));.00001<Math.abs(above(a.mid+a.treb,2*a.bass))?a.r=.2-Math.abs(.25*Math.sin(1-a.q29*a.bass*a.bass)):a.r=.8+Math.abs(.25*Math.sin(1-a.q29*a.bass*a.bass));.00001<\nMath.abs(above(a.bass+a.treb,2*a.mid))?a.g=.2-Math.abs(.25*Math.sin(1-a.q28*a.mid*a.mid)):a.g=.8+Math.abs(.25*Math.sin(1-a.q28*a.mid*a.mid));.00001<Math.abs(below(a.mid+a.bass,2*a.treb))?a.b=.2-Math.abs(.25*Math.sin(1-a.q4*a.treb*a.treb)):a.b=.8+Math.abs(.25*Math.sin(1-a.q4*a.treb*a.treb));a.a=.1+.00035*a.q4;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,1),9,zs);\n\nzs = if(above(zs, 1100),1, zs);\n\nspeed = q3*q3*.005*(bass + mid + treb)/3;\n\n//sum\nzs += tan(q4)*tan(speed); //music detection\n\nzd = zd + 2; //?pattern progression?\n\n\n\n//project (position and diamater/inner)\nx = 0.5 + (0.2 + pow(q3, 1.25)*.005)*cos(0.25*q1*zs/q8);\ny = 0.5 + (0.2 + pow(q3, 1.25)*.005)*sin(0.25*q1*zs/q8);\n\n//r = 0;\n//g = 0;\n//b = 0;\n\n//r = .15 - abs(.25*sin(1 - q4*bass));\n//g = .2 - abs(.25*sin(1 - q28*mid));\n//b = .15 - abs(.3*sin(1 - q3*treb));\n\n//r = .25 - abs(.33*sin(1 - q29*bass*bass));\n//g = .25 - abs(.33*sin(1 - q28*mid*mid));\n//b = .75 + abs(.33*sin(1 - q4*treb*treb));\n\n//r = .2 - abs(.3*sin(1 - q29*bass*bass));\n//g = .2 - abs(.3*sin(1 - q28*mid*mid));\n//b = .2 - abs(.3*sin(1 - q4*treb*treb));\n\nif(above(mid + treb, bass*2), r = .2 - abs(.25*sin(1 - q29*bass*bass)), r = .8 + abs(.25*sin(1 - q29*bass*bass)));\nif(above(bass + treb, mid*2), g = .2 - abs(.25*sin(1 - q28*mid*mid)), g = .8 + abs(.25*sin(1 - q28*mid*mid)));\nif(below(mid + bass, treb*2), b = .2 - abs(.25*sin(1 - q4*treb*treb)), b = .8 + abs(.25*sin(1 - q4*treb*treb)));\n\n//a = .175;\n//a = .1 + q3*.4;\n//a = q3*q4*.0003;\na = .1 + q4*.00035;"},{"baseVals":{"samples":64,"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"zs = if(below(zs,1),9,zs);\n\nzs = if(above(zs, 1100),1, zs);\n\nspeed = bass*0.01;\n\n//sum\nzs = zs + tan(q1/3)*speed;\n\nzd = zd + 2;\n\n\n//project\n\nx = .86 + 0.1*cos(q1*zs);\ny = .5 + 0.1*sin(q1*zs);\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.2 + x + y);\nb = 0.5 + 0.75*sin(q1*1.5 + y + y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"zs = if(below(zs,1),9,zs);\n\nzs = if(above(zs, 1100),1, zs);\n\nspeed = bass*0.01;\n\n//sum\nzs = zs + tan(q1/3)*speed;\n\nzd = zd + 2;\n\n\n//project\n\nx = .86 + 0.1*cos(q1*zs);\ny = .5 + 0.1*sin(q1*zs);\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.2 + x + y);\nb = 0.5 + 0.75*sin(q1*1.5 + y + y);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.foo_r=0;a.maxs=0;a.n=0;a.foo=0;a.ampl=0;a.bd_minbpm=0;a.im=0;a.basstime=0;a.bd_mean=0;a.timediff=0;a.bd_src=0;a.bd_slot=0;a.bd_b=0;a.bd_oct=0;a.tcos=0;a.stickybit=0;a.bd_arg=0;a.quali=0;a.q12=0;a.foo_b=0;a.q21=0;a.volavg2=0;a.q13=0;a.q29=0;a.q6=0;a.dt=0;a.bd_pk=0;a.maxo=0;a.bd_m=0;a.q1=0;a.bd_cos=0;a.foo_g=0;a.sample1=0;a.difftime=0;a.dec_s=0;a.bd_exc=0;a.dec_xs=0;a.kraft=0;a.diff=0;a.bd_ampl=0;a.bd_mid_=0;a.maxind=0;a.edge=0;a.tsin=0;a.re0=0;a.testi=0;a.ec_steps=0;a.creep=\n0;a.saw_g=0;a.bpm=0;a.q11=0;a.bd_bass_=0;a.bd_tab0=0;a.show=0;a.dec_m=0;a.q4=0;a.im0=0;a.bd_spo=0;a.basstime2=0;a.test0=0;a.bd_nres=0;a.bd_bass=0;a.maxa=0;a.volavg=0;a.feder=0;a.bd_recsz=0;a.bit2=0;a.tstart=0;a.bd_omega=0;a.bd_treb_=0;a.saw_b=0;a.beatsin=0;a.bd_tabptr=0;a.bd_treb=0;a.beat=0;a.vol=0;a.bd_mid=0;a.bd_dat0=0;a.prog=0;a.re=0;a.bd_t=0;a.beatcos=0;a.q2=0;a.time_st=0;a.bd_maxbpm=0;a.bd_qual=0;a.q3=0;a.t0=0;a.vol_=0;a.m=0;a.oct=0;a.quad=0;a.q32=0;a.basssum=0;a.creepo=0;a.q28=0;a.bd_sin=0;\na.saw_r=0;a.sample2=0;a.change=0;a.beatct=0;a.q8=0;a.bd_finc=0;for(var b=a.index=0;2E5>b;b++)a.megabuf[Math.floor(a.index)]=0,a.gmegabuf[Math.floor(a.index)]=0,a.index+=1;a.tstart=a.time;a.bd_recsz=8;a.bd_oct=4;a.bd_spo=30;a.bd_finc=pow(2,div(1,a.bd_spo));a.bd_nres=a.bd_oct*a.bd_spo;a.bd_minbpm=20;a.bd_maxbpm=pow(2,a.bd_oct)*a.bd_minbpm;a.bd_dat0=1E5;a.bd_tab0=a.bd_dat0+a.bd_nres*a.bd_recsz*3;a.reg00=a.bd_minbpm;a.reg01=a.bd_maxbpm;a.reg02=a.bd_recsz;a.reg03=a.bd_nres;a.reg05=a.bd_finc;a.reg06=a.bd_dat0;\na.reg07=a.bd_mp0;a.q5=div(30*a.pixelsx,1920*a.fps);a.timediff=.25;","frame_eqs_str":"a.dt=Math.min(div(1,a.fps),.1);a.dec_m=1-4*a.dt;a.dec_s=1-a.dt;a.dec_xs=1-div(a.dt,6);a.t0=a.time-a.tstart;a.bd_b=a.bass;a.bd_bass_=a.bd_bass_*a.dec_m+(1-a.dec_m)*a.bd_b;a.bd_bass=a.bd_b-a.bd_bass_;a.bd_m=a.mid;a.bd_mid_=a.bd_mid_*a.dec_m+(1-a.dec_m)*a.bd_m;a.bd_mid=a.bd_m-a.bd_mid_;a.bd_t=a.treb;a.bd_treb_=a.bd_treb_*a.dec_m+(1-a.dec_m)*a.bd_t;a.bd_treb=a.bd_t-a.bd_treb_;a.n=0;a.bpm=a.bd_minbpm;for(var b=0;b<a.bd_nres;b++)a.gmegabuf[Math.floor(5E4+a.n*a.bd_recsz)]=0,a.bd_arg=\ndiv(a.bpm,60)*a.t0*6.283,a.gmegabuf[Math.floor(a.bd_tab0+a.n*a.bd_recsz)]=a.bpm,a.bpm*=a.bd_finc,a.n+=1;for(b=a.bd_src=0;3>b;b++){a.bd_exc=a.bd_bass*(.00001>Math.abs(a.bd_src-0)?1:0)+a.bd_mid*(.00001>Math.abs(a.bd_src-1)?1:0)+a.bd_treb*(.00001>Math.abs(a.bd_src-2)?1:0);for(var c=a.oct=0;c<a.bd_oct;c++){a.bd_slot=0;a.bd_pk=0;for(var d=a.bd_mean=0;d<a.bd_spo;d++){a.bd_tabptr=a.bd_tab0+(a.oct*a.bd_spo+a.bd_slot)*a.bd_recsz;a.n=a.bd_dat0+(a.bd_nres*a.bd_src+a.oct*a.bd_spo+a.bd_slot)*a.bd_recsz;a.bpm=\na.gmegabuf[Math.floor(a.bd_tabptr)];a.bd_omega=6.283*div(a.bpm,60);a.feder=sqr(a.bd_omega);a.gmegabuf[Math.floor(a.n+4)]=a.gmegabuf[Math.floor(a.n+2)];a.gmegabuf[Math.floor(a.n+1)]*=1-.5*a.dt*sqrt(div(a.bpm,300));a.ec_steps=2*Math.floor(1+div(a.bpm,50));for(var e=0;e<a.ec_steps;e++)a.kraft=a.bd_exc-a.feder*a.gmegabuf[Math.floor(a.n+2)],a.gmegabuf[Math.floor(a.n+1)]+=div(a.kraft*a.dt,a.ec_steps),a.gmegabuf[Math.floor(a.n+2)]+=div(a.gmegabuf[Math.floor(a.n+1)]*a.dt,a.ec_steps);a.beatcos=a.gmegabuf[Math.floor(a.n+\n1)];a.beatsin=a.gmegabuf[Math.floor(a.n+2)]*a.bd_omega;a.quad=sqrt(pow(a.beatsin,2)+pow(a.beatcos,2));a.gmegabuf[Math.floor(a.n)]=.8*a.gmegabuf[Math.floor(a.n)]+.2*a.quad;a.bd_ampl=a.gmegabuf[Math.floor(a.n)];a.bd_mean+=a.bd_ampl;.00001<Math.abs(a.bd_ampl>a.bd_pk?1:0)?a.bd_pk=a.bd_ampl:0;a.bd_slot+=1}a.bd_slot=0;a.bd_qual=pow(div(a.bd_pk,a.bd_mean)*a.bd_spo-1,1);a.gmegabuf[Math.floor(2*(a.bd_src*a.bd_oct+a.oct))]=a.bd_qual;for(d=0;d<a.bd_spo;d++)a.m=5E4+(a.bd_slot+0*a.oct*a.bd_spo)*a.bd_recsz,a.n=\na.bd_dat0+(a.bd_nres*a.bd_src+a.oct*a.bd_spo+a.bd_slot)*a.bd_recsz,a.gmegabuf[Math.floor(a.m)]+=div(a.bd_qual*a.gmegabuf[Math.floor(a.n)],12),a.bd_slot+=1;a.oct+=1}a.bd_src+=1}a.bd_slot=0;a.maxind=0;a.bd_pk=0;for(b=a.bd_mean=0;b<a.bd_spo;b++)a.m=5E4+a.bd_slot*a.bd_recsz,a.gmegabuf[Math.floor(a.m)]=pow(a.gmegabuf[Math.floor(a.m)],1),a.bd_mean+=a.gmegabuf[Math.floor(a.m)],.00001<Math.abs(a.gmegabuf[Math.floor(a.m)]>a.bd_pk?1:0)?(a.bd_pk=a.gmegabuf[Math.floor(a.m)],a.maxind=a.bd_slot):0,a.bd_slot+=1;\na.quali=div(a.bd_pk,a.bd_mean)*a.bd_spo-1;for(b=a.n=0;150>b;b++)a.gmegabuf[Math.floor(50+a.n)]*=0,a.n+=1;a.bd_src=0;a.tsin=0;for(b=a.tcos=0;3>b;b++){for(c=a.oct=0;c<a.bd_oct;c++)a.n=a.bd_dat0+(a.bd_nres*a.bd_src+a.oct*a.bd_spo+a.maxind)*a.bd_recsz,a.bd_tabptr=a.bd_tab0+(a.oct*a.bd_spo+a.maxind)*a.bd_recsz,a.bpm=a.gmegabuf[Math.floor(a.bd_tabptr)],a.im=a.gmegabuf[Math.floor(a.n+1)],a.re=6.283*div(a.gmegabuf[Math.floor(a.n+2)]*a.bpm,60),a.bd_cos=Math.cos(6.28*div(a.bpm,60)*a.time),a.bd_sin=-Math.sin(6.28*\ndiv(a.bpm,60)*a.time),a.re0=a.re*a.bd_cos+a.im*a.bd_sin,a.im0=-a.re*a.bd_sin+a.im*a.bd_cos,a.bd_qual=a.gmegabuf[Math.floor(2*(a.bd_src*a.bd_oct+a.oct))],a.gmegabuf[Math.floor(50+4*a.oct)]+=a.bd_qual*a.im0,a.gmegabuf[Math.floor(4*a.oct+51)]+=a.bd_qual*a.re0,a.gmegabuf[Math.floor(4*a.oct+52)]+=a.bd_qual,a.gmegabuf[100]+=a.bd_qual*a.im0,a.gmegabuf[101]+=a.bd_qual*a.re0,a.re=a.bd_cos*a.re0+a.bd_sin*a.im0,a.im=-a.bd_cos*a.im0+a.bd_sin*a.re0,a.tsin+=5*a.im,a.oct+=1;a.bd_src+=1}a.q28=a.tsin;a.vol=a.bass_att+\na.mid_att+a.treb_att;a.vol_=.95*a.vol_+.05*a.vol;a.q29=a.vol-a.vol_;a.bd_src=0;a.maxo=0;a.maxs=0;for(b=a.maxa=0;3>b;b++){a.oct=1;for(c=0;c<a.bd_oct-1;c++)a.n=a.bd_dat0+(a.bd_nres*a.bd_src+a.oct*a.bd_spo+a.maxind)*a.bd_recsz,a.bd_qual=a.gmegabuf[Math.floor(2*(a.bd_src*a.bd_oct+a.oct))],a.ampl=div(a.bd_qual,1+a.oct*div(a.maxind,a.bd_oct)*0),.00001<Math.abs(a.ampl>a.maxa?1:0)?(a.maxa=a.ampl,a.maxs=a.bd_src,a.maxo=a.oct):0,a.oct+=1;a.bd_src+=1}a.testi=a.bd_nres*a.maxs+a.bd_spo*a.maxo+a.maxind;.00001<\nMath.abs(bor(a.beat&&.00001>Math.abs(a.prog-0)?1:0,2>Math.abs(a.testi-a.test0)?1:0))?a.test0=a.testi:0;a.n=a.bd_dat0+a.test0*a.bd_recsz;a.creep=a.gmegabuf[Math.floor(a.n+1)];a.beat=(0<a.creep?1:0)*(0>a.creepo?1:0);a.beatct=.00001<Math.abs(a.change)?0:a.beatct+a.beat;a.prog=mod(a.prog+a.beat,8);a.creepo=a.creep;a.show=.00001<Math.abs(a.beat)?1:.5*a.show;a.q4=1E3*div(a.gmegabuf[Math.floor(a.n+1)],a.gmegabuf[Math.floor(a.n)]);a.q2=a.prog;.00001<Math.abs(a.beat)?(a.timediff=a.time-a.time_st,a.time_st=\na.time):a.timediff=a.timediff;.00001<Math.abs(below(a.timediff,.28))?a.timediff=.28:a.timediff=a.timediff;a.q8=a.timediff;a.q21=a.bd_maxbpm;a.q32=a.aspecty;a.monitor=a.maxind;a.basstime+=.025*a.q29;a.basstime2=a.basstime+.025*a.q29;a.q1=a.basstime2;a.basstime=.00001<Math.abs(below(a.basstime,1E3))?1E3:a.basstime;a.basstime+=div(.75*a.bass_att,a.fps);a.vol=pow(a.bass+a.mid+a.treb,2);a.basssum=a.vol;a.stickybit=mod(a.time,2);a.volavg+=a.vol*equal(a.stickybit,1);a.sample1+=equal(a.stickybit,1);a.volavg2+=\na.vol*equal(a.stickybit,0);a.sample2+=equal(a.stickybit,0);a.edge=bnot(equal(a.bit2,a.stickybit));a.volavg-=a.volavg*a.edge*a.stickybit;a.volavg2-=a.volavg2*a.edge*equal(a.stickybit,0);a.sample1-=a.sample1*a.edge*a.stickybit;a.sample2-=a.sample2*a.edge*equal(a.stickybit,0);a.diff=.00001<Math.abs(equal(a.stickybit,1))?div(a.basssum,div(a.volavg2,a.sample2)):0;a.diff=.00001<Math.abs(equal(a.stickybit,0))?div(a.basssum,div(a.volavg,a.sample1)):a.diff;a.q3=a.diff;a.bit2=mod(a.time,2);a.difftime+=.03*\na.diff;a.q2=a.difftime;a.warp=.0333*(a.bass*a.bass+a.mid*a.mid+a.treb*a.treb);a.foo_r=Math.sin(.61*a.q1);a.foo_g=Math.sin(.6535*a.q1);a.foo_b=Math.sin(.9795*a.q1);.00001<Math.abs(above(a.foo_r,a.foo_g)&&above(a.foo_r,a.foo_b)?1:0)?a.q13=1:a.q13=0;.00001<Math.abs(above(a.foo_g,a.foo_r)&&above(a.foo_g,a.foo_b)?1:0)?a.q11=1:a.q11=0;.00001<Math.abs(above(a.foo_b,a.foo_r)&&above(a.foo_b,a.foo_g)?1:0)?a.q12=1:a.q12=0;.00001<Math.abs(below(a.bass_att,.33))?a.q6=-.5:a.q6=1;","pixel_eqs_str":"a.saw_r+=.00014*a.bass;a.saw_r=.00001<Math.abs(above(a.saw_r,2))?0:a.saw_b;a.saw_g+=.00013*a.bass;a.saw_g=.00001<Math.abs(above(a.saw_g,2))?0:a.saw_r;a.saw_b+=.0000024*a.bass;a.saw_b=.00001<Math.abs(above(a.saw_b,2))?0:a.saw_g;a.zoomexp=3E4;.00001<Math.abs(above(a.q3,3.5))?a.foo=1+div(.175,a.bass_att*a.bass_att*a.bass_att):a.foo=a.foo;.00001<Math.abs(above(a.bass_att+a.mid_att+a.treb_att,3))?a.zoom=a.foo:a.zoom=1;.00001<Math.abs(above(a.q3,7))?(a.zoom=1+.07*rand(10),a.q6=-.5):\na.zoom=a.zoom;a.rot=0;","init_eqs_eel":"index = 0;\nloop (200000,\n  megabuf(index) = 0;\n  gmegabuf(index) = 0;\n  index = index + 1;\n);\n\ntstart = time;\n\nbd_recsz   = 8;\nbd_oct     = 4; //Oktaven\nbd_spo     = 30;//Res. pro Oktave\nbd_finc    = pow(2.0,1/bd_spo); //Freq. Incr. \nbd_nres    = bd_oct * bd_spo;\nbd_minbpm  = 20;\nbd_maxbpm  = pow(2,bd_oct)*bd_minbpm;\n\n//mem spaces\nbd_dat0    = 100000;\nbd_tab0     = bd_dat0 + bd_nres * bd_recsz * 3;\n\n\n//Fill BPM Tab\n//n = bd_dat0;\n//BPM = bd_minbpm;\n//loop (bd_nres,gmegabuf (n) = BPM; BPM *=  bd_finc; n += bd_recsz;);\n\n\n//##### nur fuer Darstellung\nreg00 = bd_minbpm;\nreg01 = bd_maxbpm;\nreg02 = bd_recsz;\nreg03 = bd_nres;\nreg05 = bd_finc;\n\nreg06 = bd_dat0;\nreg07 = bd_mp0;\n\nq5 = pixelsx*30/(1920*fps);\ntimediff = .25;","frame_eqs_eel":"//############## THIS IS A CONSTRUCTION SITE #########\n\ndt = min (1/fps,0.1) ; //Stability !\ndec_m = 1-dt*4; dec_s = 1 - dt; dec_xs = 1-dt/6;\nt0 = time - tstart;\n\nbd_b =  bass; bd_bass_ = bd_bass_*dec_m + (1-dec_m)*bd_b; bd_bass = bd_b-bd_bass_;\nbd_m =  mid ; bd_mid_  = bd_mid_ *dec_m + (1-dec_m)*bd_m; bd_mid =  bd_m -bd_mid_;\nbd_t =  treb; bd_treb_ = bd_treb_*dec_m + (1-dec_m)*bd_t; bd_treb = bd_t-bd_treb_;\n\nn = 0; BPM = bd_minbpm; \nloop (bd_nres, \n  gmegabuf(50000+n*bd_recsz) = 0; \n  bd_arg = BPM/60*t0*6.283; \n  gmegabuf (bd_tab0+n*bd_recsz) = BPM; \n  BPM *= bd_finc;\nn+=1);\n\nbd_src=0;\nloop (3, bd_exc = bd_bass*(bd_src==0) + bd_mid*(bd_src==1) + bd_treb*(bd_src==2);\n  oct = 0;\n  loop (bd_oct,\n    bd_slot = 0;\n    bd_pk = 0; bd_mean = 0.0;\n    loop (bd_spo,\n      bd_tabptr = bd_tab0 +                 (oct*bd_spo+ bd_slot)*bd_recsz;\n      n        =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ bd_slot)*bd_recsz;\n      BPM = gmegabuf(bd_tabptr); bd_omega = BPM/60*6.283;\n      Feder = sqr(bd_omega); //Res.f = sqrt (Feder)/2pi (Hz)\n      gmegabuf (n+4) = gmegabuf(n+2); //alte pos\n      gmegabuf (n+1) *= 1-.5*dt * sqrt (BPM/300); //damping\n\n      EC_Steps = int (1 + BPM/50)*2;\n      loop (EC_Steps, // Euler-Cauchy steps\n        Kraft = bd_exc - Feder*gmegabuf(n + 2) ;\n        gmegabuf (n+1) += Kraft         * dt/EC_Steps;\n        gmegabuf (n+2) += gmegabuf(n+1) * dt/EC_Steps;  \n      );\n      beatcos = gmegabuf(n+1);  beatsin = gmegabuf(n+2)*bd_omega;\n      quad = sqrt (pow(beatsin,2) + pow(beatcos,2));\n      gmegabuf (n) = gmegabuf(n)*0.8 + 0.2*quad;\n      bd_ampl = gmegabuf(n);\n      bd_mean += bd_ampl;\n      if (bd_ampl > bd_pk, bd_pk=bd_ampl, 0);\n    bd_slot +=1;);\n // Komb. bass,mid,treb\n    bd_slot = 0;    \n    bd_qual = pow(bd_pk/bd_mean*bd_spo-1,1);\n    gmegabuf((bd_src*bd_oct+oct)*2) = bd_qual;\n    loop (bd_spo,\n      m =  50000 + (bd_slot + 0*oct*bd_spo)*bd_recsz;\n      n =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ bd_slot)*bd_recsz; //#2x berechnet\n      gmegabuf(m) += (bd_qual)*gmegabuf (n)/12;\n    bd_slot +=1;);\n  oct += 1;);\nbd_src +=1;);\n\n\n//Get maxind\nbd_slot = 0; maxind = 0; bd_pk = 0; bd_mean = 0;\nloop (bd_spo,\n   m =  50000 + bd_slot*bd_recsz;\n   gmegabuf(m) = pow(gmegabuf(m),1);\n   bd_mean += gmegabuf(m);\n   if (gmegabuf(m) > bd_pk, bd_pk = gmegabuf(m); maxind = bd_slot, 0);\nbd_slot += 1);\nquali = bd_pk/bd_mean*bd_spo-1;\n\nn = 0; loop (150, gmegabuf(50+n) *= 0; n+=1);\n\n//KREISE\nbd_src = 0; tsin = 0; tcos = 0;\nloop (3,\n  oct = 0;  \n  loop (bd_oct,\n    n         =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ maxind)*bd_recsz;\n    bd_tabptr = bd_tab0  +                 (oct*bd_spo+ maxind)*bd_recsz;\n    BPM = gmegabuf(bd_tabptr); \n\n    im =  gmegabuf(n+1);\n    re =  gmegabuf(n+2) * BPM/60*6.283;\n    bd_cos =  cos (BPM/60*6.28*time);\n    bd_sin = -sin (BPM/60*6.28*time);\n\n//Winkel zurueckdrehen. Das sind nun die Winkel relativ zu cos(oct*time).\n    re0 =  re*bd_cos + im*bd_sin;\n    im0 = -re*bd_sin + im*bd_cos;\n    bd_qual = gmegabuf((bd_src*bd_oct+oct)*2);\n    gmegabuf (50+oct*4)   +=  bd_qual * (im0)*1;\n    gmegabuf (50+oct*4+1) +=  bd_qual * (re0)*1;\n    gmegabuf (50+oct*4+2) +=  bd_qual;\n\n//Summe der besten Beitraege. Das ist der Referenzwinkel.\n    gmegabuf (100+0)  +=  bd_qual * im0;\n    gmegabuf (100+1)  +=  bd_qual * re0;\n\n//Nun sollten wir die Differenzwinkel zur Ref berechnen. Und was damit ? Dann kann ich die\n//Einzelwinkel auf Ref bringen - bringt doch nichts !\n//Ich kann alle auf Null drehen, daraus sinusse erzeuge und addieren ->besserer Takt ?\n    re =  (bd_cos*re0 + bd_sin*im0);\n    im =  (-bd_cos*im0 + bd_sin*re0);\ntsin += im*5;\n\n  oct += 1);\nbd_src +=1);\nq28 = tsin;\n\nvol = bass_att + mid_att + treb_att;\nvol_ = vol_*0.95 + 0.05*vol;\nq29 = vol-vol_;\n\n//Welche Oktave ???\nbd_src = 0; maxo = 0; maxs = 0; maxa = 0;\nloop (3,\n  oct = 1;  \n  loop (bd_oct-1,\n    n =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ maxind)*bd_recsz;\n    bd_qual = gmegabuf((bd_src*bd_oct+oct)*2);\n\n    ampl = bd_qual / (1+oct*(maxind/bd_oct)*0);\n    if (ampl>maxa, maxa = ampl; maxs = bd_src; maxo = oct;, 0);\n  oct += 1);\nbd_src +=1);\n\n//Beat-Flash\ntesti = bd_nres*maxs +bd_spo*maxo + maxind;\nif (bor (beat && (prog==0), abs(testi-test0)<2),test0 = testi,0);\nn =  bd_dat0 + (test0)*bd_recsz;\ncreep = gmegabuf(n+1);\nbeat =  (creep>0) * (creepo <0);\nbeatct = if (change, 0, beatct+beat);\nprog = (prog+beat)%8;\ncreepo = creep;\nshow = if (beat, 1, show*0.5);\nq4 = (gmegabuf(n+1)/gmegabuf(n)*1000);\nq2 = prog;\n\n\nif(beat, timediff = time - time_st; time_st = time, timediff = timediff); \nif(below(timediff, .28), timediff = .28, timediff = timediff);\nq8 = timediff;\n\n//Selbst bei Barbie Girl fehlt manchmal der Rhythmus in Band 2,\n//obwohl das der gefuehlte Takt ist - >Problem mit Phasenkorrektur !\n//stehen Phasen bei doppelter Frequenz in Relation ? NEIN.\n\n\n\n\n\n//Problem: Fats Domino (1992) hat 55BPM -> Problem mit 110\n//Problem: 1991 London Beat I been thinking about you - geht nicht - solved\n//Problem: U96 - Love religion (1995) beginnt mit BPM < 20\n//Porblem: adiemus (1995)\n//Konflikt-Beat siehe Michale jackson b&W (1991)\n\n\nq21 = bd_maxbpm;\nq32 = aspecty;monitor = maxind;\n\n\n\n//decay_r = 0.65 + 0.2*(abs(cos(difftime*1.56+rarr)));\n//decay_g = 0.5 + 0.2*(abs(cos(difftime*1.36+rarr)));\n//decay_b = 0.5 + 0.2*(abs(cos(difftime*1.2+rarr)));\n//dy = 0.98;\n\nbasstime = basstime + q29*0.025;\nbasstime2 = basstime + q29*0.025;\nq1 = basstime2;\n\n//start in most active range\nbasstime = if(below(basstime,1000),1000,basstime);\n//basstime = if(above(basstime,495),450,basstime);\n\nbasstime = basstime + bass_att*0.025 * 30/fps;\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\nq3 = diff;\n\nbit2 = time%2;\n\ndifftime = difftime + diff*0.03;\nq2 = difftime;\n\nwarp = (bass*bass + mid*mid + treb*treb)*.0333;\n\nfoo_r = sin(q1*0.61);\nfoo_g = sin(q1*0.6535);\nfoo_b = sin(q1*0.9795);\n\nif(above(foo_r, foo_g) && above(foo_r, foo_b), q13 = 1, q13 = 0);\nif(above(foo_g, foo_r) && above(foo_g, foo_b), q11 = 1, q11 = 0);\nif(above(foo_b, foo_r) && above(foo_b, foo_g), q12 = 1, q12 = 0);\n\n//if(above(foo_r*2, foo_g + foo_b), q11 = 1, q11 = 0);\n//if(above(foo_g*2, foo_r + foo_b), q12 = 1, q12 = 0);\n//if(above(foo_b*2, foo_r + foo_g), q13 = 1, q13 = 0);\n\nif(below(bass_att, .33), q6 = -.5, q6 = 1);","pixel_eqs_eel":"saw_r = saw_r + 0.00014*bass;\nsaw_r =  if(above(saw_r, 2),0,saw_b);\n\nsaw_g = saw_g + 0.00013*bass;\nsaw_g =  if(above(saw_g, 2),0,saw_r);\n\nsaw_b = saw_b + 0.0000024*bass;\nsaw_b =  if(above(saw_b, 2),0,saw_g);\n\n\n//decay_r = 2 - y*saw_r;\n//decay_g = 2 - y*saw_g;\n//decay_b = 2 - y*saw_b;\n\n//zoom = 1;\nzoomexp = 30000;\n\nif(above(q3, 3.5), foo = 1.0 + .175/(bass_att*bass_att*bass_att), foo = foo);\n\nif(above(bass_att + mid_att + treb_att, 3), zoom = foo, zoom = 1.0);\n\n//if(above(q4, 990), foo = 1.02 +  \n\n//if(above(bass_att + mid_att, 3.0), foo = 1.05, foo = foo);\n\n//if(above(bass_att + mid_att, 3.3), foo = 1.02, foo = foo);\n\nif(above(q3, 7), zoom = 1.0 + rand(10)*.07; q6 = -.5, zoom = zoom);\n\n//if(above(x, .8) == below(x, .2), dx = 0,  dx = .005);\n\n\nrot = 0;","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = ((texsize.zw * 2.8) * (q5 * q6));\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.y;\n  tmpvar_6.y = tmpvar_4.y;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.z;\n  tmpvar_7.y = tmpvar_4.z;\n  ret_1 = (((texture (sampler_main, \n    (uv_orig + (((\n      ((tmpvar_5 * q11) + (tmpvar_6 * q12))\n     + \n      (tmpvar_7 * q13)\n    ) * texsize.zw) * 6.0))\n  ).xyz + \n    ((texture (sampler_main, uv).xyz - ((texture (sampler_blur1, uv).xyz * scale1) + bias1)) * 0.1)\n  ) - 0.005) - (0.005 / q8));\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_pw_main, uv_orig);\n  ret_1 = (ret_1 + (-0.0025 + (0.005 * \n    (((bass_att * tmpvar_8.x) + (mid_att * tmpvar_8.y)) + (treb_att * tmpvar_8.z))\n  )));\n  ret_1 = (ret_1 + (pow (q3, 1.5) * (0.013 * texture (sampler_fw_main, uv))).xyz);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_1;\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = mix (texture (sampler_main, uv).xyz, texture (sampler_main, ((0.5 - uv) + 0.5)).xyz, vec3(0.4, 0.4, 0.4));\n  ret_1 = (1.0 - ((ret_1 * \n    (1.0 - ret_1)\n  ) * 4.0));\n  ret_1 = (ret_1 * 1.2);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*2.8*q5*q6;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n\n    float2 uv_dy = uv_orig + (float2(dx.x, dy.x)*q11 + float2(dx.y, dy.y)*q12 + float2(dx.z, dy.z)*q13)*texsize.zw*6;\n//    float2 uv_dy = uv_orig + float2(dx.y, dy.y)*texsize.zw*6;\n\n    ret = GetPixel(uv_dy) + (GetPixel(uv) - GetBlur1(uv))*0.1 - .005 - 0.005/q8;\n//    ret = GetPixel(uv_dy) + (GetPixel(uv) - GetBlur1(uv))*0.1 - .016;\n//    ret += (tex2D(sampler_pw_main, uv_orig)-0.5)*.0043;\n\n    ret.xyz += -.0025 + .005*(bass_att*tex2D( sampler_pw_main, uv_orig ).x + mid_att*tex2D( sampler_pw_main, uv_orig ).y + treb_att*tex2D( sampler_pw_main, uv_orig ).z);\n    ret += mul(pow(q3, 1.5), .013*tex2D( sampler_fw_main, uv ));\n}","comp_hlsl":"shader_body\n{\n    \n    //rotate texture cords\n    float texRotU2 = (uv[0] - 0.5)*cos(-q8*0.29) + (uv[1] - 0.5)*sin(-q8*0.29);\n    float texRotv2 = -(uv[0] - 0.5)*sin(-q8*0.29) + (uv[1] - 0.5)*cos(-q8*0.29);\n\n\t\n\t    float2 uv2 = float2(texRotU2*0.8 +0.5, texRotv2*0.8 + 0.5);\n\n    float2 uv_echo = (uv - 0.5)*1.00*float2(-1,-1) + .5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo).xyz, \n                .4 \n              )*1;\n    \n    ret = 1 - ret*(1 - ret)*4; //invert\n    ret *= 1.2; //gamma\n//    ret += ret*.15;\n}"}