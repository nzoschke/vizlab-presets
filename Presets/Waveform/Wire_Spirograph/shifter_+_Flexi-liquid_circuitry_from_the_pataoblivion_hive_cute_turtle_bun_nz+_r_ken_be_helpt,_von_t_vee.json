{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":3,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.2,"modwavealphastart":0.39,"modwavealphaend":1.18,"warpscale":0.107,"zoomexp":4.10046,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":1,"wave_y":1,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_g":0.2,"mv_b":0.2,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":9,"textured":1,"num_inst":15,"x":0.15,"y":0.82,"rad":1.4976,"tex_zoom":1.48885,"g":0.4,"r2":1,"a2":0.6,"border_a":0.5,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ra=ra-(bass_att*.01);\nrad=.55;\nang=ra;\nnegswitchx=if(int(rand(2))%2,-1,1)+instance-instance;\nnegswitchy=if(int(rand(2))%2,-1,1)+instance-instance;\ncoff1=2.4;\nr=       ((cos(q8  *.1+instance*.1    )+1)*.5)*coff1;\ng=       ((cos(q9  *.1+instance*.1+ .8)+1)*.5)*coff1;\nb=       ((cos(q10 *.1+instance*.1+1.4)+1)*.5)*coff1;\nr2=      ((cos(q8  *.1+instance*.1    )+1)*.5)*coff1;\ng2=      ((cos(q9  *.1+instance*.1+ .8)+1)*.5)*coff1;\nb2=      ((cos(q10 *.1+instance*.1+1.4)+1)*.5)*coff1;\nborder_r=((cos(q8  *.1+instance*.1)    +1)*.5)*coff1;\nborder_g=((cos(q9  *.1+instance*.1+.8) +1)*.5)*coff1;\nborder_b=((cos(q10 *.1+instance*.1+1.4)+1)*.5)*coff1;\nx=abs(sin( instance+q8*coff1+negswitchx*int(rand(int(bass*treb*mid)))/50))+instance-instance;\ny=abs(cos((instance+q9*coff1)*.3+negswitchy*int(rand(int(bass*treb*mid)))/50))+instance-instance;","init_eqs_eel":"","frame_eqs_eel":"ra=ra-(bass_att*.01);\nrad=.55;\nang=ra;\nnegswitchx=if(int(rand(2))%2,-1,1)+instance-instance;\nnegswitchy=if(int(rand(2))%2,-1,1)+instance-instance;\ncoff1=2.4;\nr=       ((cos(q8  *.1+instance*.1    )+1)*.5)*coff1;\ng=       ((cos(q9  *.1+instance*.1+ .8)+1)*.5)*coff1;\nb=       ((cos(q10 *.1+instance*.1+1.4)+1)*.5)*coff1;\nr2=      ((cos(q8  *.1+instance*.1    )+1)*.5)*coff1;\ng2=      ((cos(q9  *.1+instance*.1+ .8)+1)*.5)*coff1;\nb2=      ((cos(q10 *.1+instance*.1+1.4)+1)*.5)*coff1;\nborder_r=((cos(q8  *.1+instance*.1)    +1)*.5)*coff1;\nborder_g=((cos(q9  *.1+instance*.1+.8) +1)*.5)*coff1;\nborder_b=((cos(q10 *.1+instance*.1+1.4)+1)*.5)*coff1;\nx=abs(sin( instance+q8*coff1+negswitchx*int(rand(int(bass*treb*mid)))/50))+instance-instance;\ny=abs(cos((instance+q9*coff1)*.3+negswitchy*int(rand(int(bass*treb*mid)))/50))+instance-instance;"},{"baseVals":{"enabled":1,"sides":20,"num_inst":1024,"rad":0.01,"r":0,"b":1,"g2":0,"a2":0.1,"border_a":0.006},"init_eqs_str":"a.y3=0;a.z2=0;a.y1=0;a.xs=0;a.t1=0;a.x1=0;a.nc=0;a.z3=0;a.t3=0;a.zs=0;a.x3=0;a.ys=0;a.pigtemp=0;a.x2=0;a.t2=0;a.y2=0;a.size=0;a.z1=0;","frame_eqs_str":"a.pigtemp=Math.floor(pow(4,a.bass+a.treb+a.mid));a.num_inst=.00001<Math.abs(above(a.pigtemp,1024))?1024:a.pigtemp;a.t1=div(a.time,5);a.t2=div(a.time,6);a.rad=.005+div(a.bass,100);a.t3=div(a.bass_att,70);a.b2=.7*a.treb-div(a.bass,2);a.r=div(a.instance,a.num_inst);a.g=Math.abs(div(a.treb_att,5)-a.bass);a.size=.3+div(a.bass_att,300);a.nc=sqrt(a.num_inst);a.xs=Math.sin(div(6.28*mod(a.instance,a.nc),a.nc))*Math.sin(div(3.14*Math.floor(div(a.instance,a.nc)),a.nc));a.ys=Math.cos(div(6.28*\nmod(a.instance,a.nc),a.nc))*Math.sin(div(3.14*Math.floor(div(a.instance,a.nc)),a.nc));a.zs=Math.cos(div(3.14*Math.floor(div(a.instance,a.nc)),a.nc));a.y1=a.ys*Math.cos(a.t1)-a.zs*Math.sin(a.t1);a.z1=a.ys*Math.sin(a.t1)+a.zs*Math.cos(a.t1);a.x1=a.z1*Math.sin(a.t2)+a.xs*Math.cos(a.t2);a.z2=a.z1*Math.cos(a.t2)-a.xs*Math.sin(a.t2);a.x2=a.x1*Math.cos(a.t3)-a.y1*Math.sin(a.t3);a.y2=a.y1*Math.cos(a.t3)+a.x1*Math.sin(a.t3);a.x3=a.x2;a.y3=a.y2;a.z3=a.z2;a.x=.5+a.size*div(a.x3,1+a.z3*a.size);a.y=.5+a.size*\ndiv(a.y3,1+a.z3*a.size);a.a=below(a.z3,0);","init_eqs_eel":"","frame_eqs_eel":"pigtemp=int(pow(4,bass+treb+mid));\nnum_inst=if(above(pigtemp,1024),1024,pigtemp);\n\nt1 = time/5;\nt2 = time/6;\nrad = 0.005+bass/100;\nt3 = bass_att/70;\nb2 = treb*0.7-bass/2;\nr = instance/num_inst;\ng = abs(treb_att/5-bass);\n//b = abs(treb_att/5-bass);\nsize = 0.3+bass_att/300;\n\nnc = sqrt(num_inst);\nxs=sin(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);\nys=cos(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);\nzs=cos(3.14*int(instance/nc)/nc);\n\n//modulate to allow rotation\ny1 = ys*cos(t1)-zs*sin(t1);\nz1 = ys*sin(t1)+zs*cos(t1);\nx1 = z1*sin(t2)+xs*cos(t2);\nz2 = z1*cos(t2)-xs*sin(t2);\nx2 = x1*cos(t3)-y1*sin(t3);\ny2 = y1*cos(t3)+x1*sin(t3);\n\n//translate shape\nx3 = x2;\ny3 = y2;\nz3 = z2;\n\nx = 0.5 + size*(x3/(1+z3*size));\ny = 0.5 + size*(y3/(1+z3*size));\na=below(z3,0);"},{"baseVals":{"sides":100,"textured":1,"num_inst":7,"rad":0.03333,"r":0,"g2":0,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = int(rand(100))*.01+instance-instance;\ny = int(rand(100))*.01+instance-instance;\n\na =1;\na2 =1;\nborder_a = 0;\nvol=bass+mid+treb;\nrad = int(rand(int(vol)))/7+instance-instance;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01+instance-instance;\ny = int(rand(100))*.01+instance-instance;\n\na =1;\na2 =1;\nborder_a = 0;\nvol=bass+mid+treb;\nrad = int(rand(int(vol)))/7+instance-instance;"},{"baseVals":{"sides":100,"num_inst":3,"x":0.75,"y":0.25,"rad":1.46815,"tex_zoom":0.40839,"g":0.9,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ra=ra-if(above(bass,1.3),bass*.02,.01);\n\nang=ra;\nrad=rad+(bass_att*.1);\n\nx=abs(sin(time*.25));\n","init_eqs_eel":"","frame_eqs_eel":"ra=ra-if(above(bass,1.3),bass*.02,.01);\n\nang=ra;\nrad=rad+(bass_att*.1);\n\nx=abs(sin(time*.25));\n"}],"waves":[{"baseVals":{"enabled":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.2*a.bass*Math.sin(20*a.sample*a.time*a.treb);a.y=.5+.2*a.bass*Math.cos(20*a.sample*a.time*a.treb);a.r=1+.5*Math.sin(.1*a.sample+10*a.time*a.bass);a.g=1+.5*Math.sin(2*a.sample+50*a.time*a.treb);a.b=1+.5*Math.sin(5*a.sample+20*a.time*a.mid);a.a=a.r;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));\ny = .5 + (bass*.2)*cos(sample*2*(time*10*treb));\nr = 1 + .5*sin(sample*.10+(time*10*bass));\ng = 1 + .5*sin(sample*2+(time*50*treb));\nb = 1 + .5*sin(sample*5+(time*20*mid));\na = r;"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"thick":1,"additive":1,"smoothing":0,"a":0.1},"init_eqs_str":"a.cd=0;a.c=0;a.q8=0;a.q9=0;a.q20=0;a.q10=0;","frame_eqs_str":"","point_eqs_str":"a.r=.05*a.bass;a.cd+=.001;a.c=21.9911489*Math.floor(rand(20*(Math.cos(.1*a.q8)+1)))*(Math.cos(.1*a.q9)+1);a.c+=a.cd;a.x=.5+Math.cos(a.c)*a.q20*.16;a.y=.5+Math.sin(a.c)*a.q20*.09;a.r=Math.abs(Math.sin(.77*a.q10));a.g=.5*a.treb;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"r=bass*.05;\ncd=cd+.001;\n\nc=int(rand((cos(q8*.1)+1)*20))*3.1415927*((cos(q9*.1)+1)*7);\n//c=rand\nc=c+cd;\n\nx=.5+4*(cos(c)*q20*.04);\ny=.5+2.25*(sin(c)*q20*.04);\n\nr=abs(sin(q10*.77));\ng=treb*.5"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.tic=0;a.sw=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.meanbass_att=0;a.q29=0;a.q1=0;a.mq31=0;a.q5=0;a.mq21=0;a.mq24=0;a.q9=0;a.chng=0;a.mq28=0;a.tin=0;a.lastbeat=0;a.mq23=0;a.beatrate=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.peakbass_att=0;a.q10=0;a.atime=0;a.an=0;a.alt=0;a.q26=0;a.mq27=0;a.mq25=0;a.volume=0;a.mq22=0;a.beat=0;a.vol=0;a.mq26=0;a.sp=0;a.q2=0;a.q27=0;a.q7=0;a.q28=0;a.q8=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.volume=.3*\n(a.bass+a.mid);a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.05*(19*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,a.peakbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+\na.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-a.beat)*a.peakbass_att*(.96*above(a.time-a.lastbeat,2*a.beatrate)+.996*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.zoom=1;a.decay=1;a.warp=0;a.wave_a=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.q2=1;a.q1=1;a.vol+=(div(a.alt+a.bass+a.mid,3)-a.vol)*a.tic;a.q5=a.vol*a.vol*a.vol*2;a.q8=.5*Math.sin(a.time);a.q9=\n.5*Math.sin(.75*a.time);a.sw=Math.abs(a.sw-a.beat);a.an+=.5*a.tic*(1-2*a.sw);a.q7=1+1*(pow(a.q8,2)+pow(a.q9,2));a.q10=Math.sin(a.an);a.q11=Math.cos(a.an);a.sp+=a.tic*a.vol*a.vol*.5;a.q12=a.sp;a.monitor=a.q12;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\n//begin beat code\nvolume = 0.3*(bass+mid);\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.05*(meanbass_att*19 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\n//Adjust responsiveness: To increase responsiveness, set the \"0.96 and \"0.996\" on the next line to slightly lower values. Higher values decrease responsiveness.\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\n//end beat code\n\nzoom = 1;\ndecay = 1;\nwarp = 0;\nwave_a = 0;\n\ntic = min(time-tin,.1);\ntin = time;\n\nq2 = 1;\n\nq1=1;\nvol = vol + ((alt + bass + mid)/3-vol)*tic*1;\nq5 = vol*vol*vol*2;\n\n\nq8 = sin(time)*.5;\nq9 = sin(time*.75)*.5;\n\nsw = abs(sw - beat);\nan = an + tic*.5*(1-2*sw);\n\n\nq7 = 1+(pow(q8,2) + pow(q9,2))*1;\nq10 = sin(an);\nq11 = cos(an);\n\nsp = sp + tic*vol*vol*.5;\n\nq12 = sp;\n\nmonitor = q12;","pixel_eqs_eel":"//zoom = pow(rad,2)+.01;","warp":" shader_body { \n  float conway_1;\n  vec3 ret_2;\n  ret_2 = ((texture (sampler_main, uv_orig).xyz * vec3(0.97, 1.0, 0.97)) - vec3(0.03, 0.0, 0.03));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_blur1, uv_orig);\n  ret_2.z = (ret_2.z + ((\n    (tmpvar_3.xyz * scale1)\n   + bias1).z * 0.45));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur3, uv_orig);\n  ret_2.x = (ret_2.x + ((\n    ((tmpvar_3.xyz * scale1) + bias1)\n  .z * 0.05) + (\n    ((tmpvar_4.xyz * scale3) + bias3)\n  .z * 0.05)));\n  ret_2.z = (ret_2.z - ret_2.x);\n  ret_2.xz = (ret_2 - ((slow_roam_sin.wzy * slow_roam_cos.zxy) * 0.5)).xz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, uv_orig);\n  ret_2.y = clamp (tmpvar_5.y, 0.0, 1.0);\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).y + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(0.0, 1.0) * texsize.zw))).y);\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).y);\n  float tmpvar_6;\n  tmpvar_6 = (((q5 * \n    (1.0 - ((tmpvar_3.xyz * scale1) + bias1).y)\n  ) * (1.0 - \n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\n  .y)) * (1.0 - (\n    (tmpvar_4.xyz * scale3)\n   + bias3).y));\n  conway_1 = (conway_1 - tmpvar_5.x);\n  if ((conway_1 > 0.0)) {\n    float tmpvar_7;\n    tmpvar_7 = clamp (ret_2.y, 0.0, 1.0);\n    if ((tmpvar_7 == 0.0)) {\n      ret_2.y = (floor((tmpvar_6 * 1.8)) * q1);\n    };\n  };\n  ret_2.y = (ret_2.y - ret_2.x);\n  ret_2 = (ret_2 - (1.0 - q2));\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\n    ret_2.y = (ret_2.y + (tmpvar_8.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (ret_2.z + (tmpvar_8.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (ret_2.x + (tmpvar_8.z * 0.5));\n  };\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec2 uv1_1;\n  vec3 dy_2;\n  vec3 dx_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (texsize.zw * 3.0);\n  vec3 tmpvar_6;\n  tmpvar_6 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv + (vec2(-1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_7;\n  tmpvar_7 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv + (vec2(0.0, -1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_6.y;\n  tmpvar_8.y = tmpvar_7.y;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_6.z;\n  tmpvar_9.y = tmpvar_7.z;\n  vec2 tmpvar_10;\n  tmpvar_10.x = q19;\n  tmpvar_10.y = q20;\n  vec2 tmpvar_11;\n  tmpvar_11 = fract(((0.5 + \n    (uv - 0.5)\n  ) + (tmpvar_10 * vec2(-1.0, 1.0))));\n  dx_3 = (((texture (sampler_blur1, \n    (tmpvar_11 + (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_11 + (vec2(-1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  dy_2 = (((texture (sampler_blur1, \n    (tmpvar_11 + (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_11 + (vec2(0.0, -1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_12;\n  tmpvar_12.x = dx_3.x;\n  tmpvar_12.y = dy_2.x;\n  uv1_1 = (fract((\n    (uv - tmpvar_8)\n   - \n    ((tmpvar_9 * rad) * 2.0)\n  )) - (tmpvar_12 * 4.0));\n  ret_4 = (mix (ret_4, vec3(1.0, 1.0, 1.0), (\n    (texture (sampler_blur2, uv1_1).xyz * scale2)\n   + bias2).yyy) - ((slow_roam_sin.zyx * slow_roam_cos.ywx) * 0.5));\n  vec2 tmpvar_13;\n  tmpvar_13.x = dx_3.x;\n  tmpvar_13.y = dy_2.x;\n  vec3 tmpvar_14;\n  tmpvar_14 = mix (mix (ret_4, vec3(1.0, 0.5, 0.0), texture (sampler_main, uv).yyy), vec3(1.0, 1.0, 1.0), vec3((texture (sampler_main, (uv - \n    (tmpvar_13 * 0.2)\n  )).z * clamp (\n    (1.0 - (rad * 1.5))\n  , 0.0, 1.0))));\n  ret_4 = tmpvar_14;\n  vec4 tmpvar_15;\n  tmpvar_15 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv1_1.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_14.x > (q26 * q13)) && (tmpvar_14.x <= (q23 * q11)))) {\n    ret_4.z = (tmpvar_14.z - (tmpvar_15.x * 0.5));\n  };\n  if (((tmpvar_14.y > (q25 * q11)) && (tmpvar_14.y <= (q22 * q12)))) {\n    ret_4.x = (tmpvar_14.x - (tmpvar_15.y * 0.5));\n  };\n  if (((ret_4.z > (q24 * q12)) && (ret_4.z <= (q21 * q13)))) {\n    ret_4.y = (tmpvar_14.y - (tmpvar_15.z * 0.5));\n  };\n  vec2 tmpvar_16;\n  tmpvar_16.x = dx_3.x;\n  tmpvar_16.y = dy_2.x;\n  ret_4 = (0.7 - mix (mix (ret_4, vec3(1.0, 1.0, 1.0), \n    ((texture (sampler_blur1, (tmpvar_11 + (tmpvar_16 * 0.3))).xyz * scale1) + bias1)\n  .xxx), vec3(0.5, 0.0, 1.0), texture (sampler_main, tmpvar_11).xxx));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_4;\n  ret = tmpvar_17.xyz;\n }","warp_hlsl":"\nshader_body\n{\n\nret.xyz = tex2D(sampler_main, uv_orig).xyz*float3(.97,1,.97) - float3(.03,0,.03);\n\nret.z += GetBlur1(uv_orig).z*.45;\nret.x += GetBlur1(uv_orig).z*.05 + GetBlur3(uv_orig).z*.05;\nret.z -= ret.x;\n\nret-=slow_roam_sin.wzy*slow_roam_cos.zxy*.5;\nfloat2 pixelsize = texsize.zw;\nret.y = saturate(tex2D( sampler_pw_main,uv_orig).y);\n\nfloat1 conway = tex2D( sampler_pw_main, uv_orig + float2(-1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,-1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,0)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(-1,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(0,1)*pixelsize).y;\n       conway += tex2D( sampler_pw_main, uv_orig + float2(1,1)*pixelsize).y;\n\nfloat1 test = q5*(1-GetBlur1(uv_orig).y)*(1-GetBlur2(uv_orig).y)*(1-GetBlur3(uv_orig).y);\n\nconway -= tex2D( sampler_pw_main, uv_orig).x;\n\n\nif (conway > 0) {\nif (saturate(ret.y) == 0) {\nret.y = floor(test*1.8)*q1;\n}\n}\n\nret.y -= ret.x;\n\nret.xyz -= 1-q2;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n}","comp_hlsl":"shader_body\n{\nfloat2 d = texsize.zw*3;\nfloat3 dx = GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv + float2(-1,0)*d);\nfloat3 dy = GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv + float2(0,-1)*d);\nfloat2 uv1 = frac(uv - float2(dx.y,dy.y)*1 - float2(dx.z,dy.z)*rad*2);\nfloat2 uv_swimmer =frac(0.5 + (uv-0.5)+float2(q19,q20)*float2(-1,1));\ndx = GetBlur1(uv_swimmer + float2(1,0)*d) - GetBlur1(uv_swimmer + float2(-1,0)*d);\ndy = GetBlur1(uv_swimmer + float2(0,1)*d) - GetBlur1(uv_swimmer + float2(0,-1)*d);\nuv1 -= float2(dx.x,dy.x)*4;\n\nret = lerp(ret,1,GetBlur2(uv1).y);\nret-=slow_roam_sin.zyx*slow_roam_cos.ywx*.5;\nret = lerp(ret,float3(1,0.5,0),GetPixel(uv).y);\nret = lerp(ret,float3(1,1,1),GetPixel(uv-float2(dx.x,dy.x)*0.2).z*saturate(1-rad*1.5));\n\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv1.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \n\nret = lerp(ret, 1, GetBlur1(uv_swimmer+float2(dx.x,dy.x)*0.3).x);\nret = lerp(ret,float3(0.5,0,1),GetPixel(uv_swimmer).x);\nret=.7-ret;\n}"}