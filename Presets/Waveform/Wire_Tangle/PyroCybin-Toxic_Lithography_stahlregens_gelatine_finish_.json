{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.8,"echo_orient":3,"wave_mode":3,"wave_dots":1,"modwavealphabyvolume":1,"darken_center":1,"bmotionvectorson":0,"red_blue":1,"wave_a":5.099998,"wave_scale":2.985751,"wave_smoothing":0.99,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.5,"warpscale":2.331,"zoom":0.999514,"wave_thick":1,"warp":0,"wave_r":0.65,"wave_g":0,"wave_b":0.65,"ob_size":0.9,"ob_r":0.01,"ib_size":0.26},"shapes":[{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q5=0;a.mymid=0;a.mytreb=0;a.mybass=0;a.attenfactor=0;a.q1=0;a.q2=0;a.q3=0;a.attenfactor=.001;a.mybass=0;a.mymid=0;a.mytreb=0;","frame_eqs_str":"a.wave_r=1-div(1,1+pow(2.718,-(100*(a.mid-div(a.bass+a.treb,2)))));a.wave_g=1-div(1,1+pow(2.718,-(100*(a.treb-div(a.mid_att+a.bass_att,2)))));a.wave_b=1-div(1,1+pow(2.718,-(100*(a.bass-div(a.treb+a.mid,2)))));a.zoom=1;a.rot=0;a.mybass=div(a.mybass*a.attenfactor+a.bass_att,1+a.attenfactor);a.mymid=div(a.mymid*a.attenfactor+a.mid_att,1+a.attenfactor);a.mytreb=div(a.mytreb*a.attenfactor+a.treb_att,1+a.attenfactor);a.q1=a.mybass;a.q2=a.mymid;a.q3=a.mytreb;a.monitor=a.mybass;","pixel_eqs_str":"a.q5=(a.rad+Math.sin(.1*a.time+5*a.rad))*a.rad;a.zoom+=a.q5*a.q5*a.q5*a.q5*(a.bass+.5*(a.mymid+a.mid)+a.mytreb);a.zoom=a.zoom+.006*Math.sin(100*a.q5*a.q5+a.time)-.001*a.q5;","init_eqs_eel":"attenfactor = 0.001;\nmybass = 0;\nmymid = 0;\nmytreb = 0;","frame_eqs_eel":"wave_r=1 - (1 / (1 + pow(2.718, 0 - (mid - ((bass + treb) / 2)) * 100)));\nwave_g=1 - (1 / (1 + pow(2.718, 0 - (treb - ((mid_att + bass_att)/ 2)) * 100)));\nwave_b=1 - (1 / (1 + pow(2.718, 0 - (bass - ((treb + mid) / 2)) * 100)));\nzoom = 1;\nrot= 0;\nmybass = (mybass * attenfactor + bass_att) / (1 + attenfactor);\nmymid = (mymid * attenfactor + mid_att) / (1 + attenfactor);\nmytreb = (mytreb * attenfactor + treb_att) / (1 + attenfactor);\nq1=mybass;\nq2=mymid;\nq3=mytreb;\nmonitor = mybass;","pixel_eqs_eel":"q5=(rad+sin(time * 0.1 + rad * 5)) * rad;\nzoom=zoom + q5 * q5 * q5 * q5*(bass + (mymid + mid) * 0.5 + mytreb );\nzoom=zoom + sin(q5 * (100 * q5) + time) * 0.006 - q5 * 0.001;","warp":" shader_body { \n  float state_1;\n  vec2 temp_2;\n  vec3 neighbourhood_3;\n  vec3 ret1_4;\n  vec3 ret_5;\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, uv);\n  ret1_4.y = tmpvar_6.y;\n  temp_2.x = (uv.x - texsize.z);\n  temp_2.y = (uv.y - texsize.w);\n  neighbourhood_3 = texture (sampler_main, temp_2).xyz;\n  temp_2.x = (temp_2.x + texsize.z);\n  neighbourhood_3 = (neighbourhood_3 + texture (sampler_main, temp_2).xyz);\n  temp_2.x = (temp_2.x + texsize.z);\n  neighbourhood_3 = (neighbourhood_3 + texture (sampler_main, temp_2).xyz);\n  float tmpvar_7;\n  tmpvar_7 = (2.0 * texsize.z);\n  temp_2.x = (temp_2.x - tmpvar_7);\n  temp_2.y = (temp_2.y + texsize.w);\n  neighbourhood_3 = (neighbourhood_3 + texture (sampler_main, temp_2).xyz);\n  temp_2.x = (temp_2.x + tmpvar_7);\n  neighbourhood_3 = (neighbourhood_3 + texture (sampler_main, temp_2).xyz);\n  temp_2.x = (temp_2.x - tmpvar_7);\n  temp_2.y = (temp_2.y + texsize.w);\n  neighbourhood_3 = (neighbourhood_3 + texture (sampler_main, temp_2).xyz);\n  temp_2.x = (temp_2.x + texsize.z);\n  neighbourhood_3 = (neighbourhood_3 + texture (sampler_main, temp_2).xyz);\n  temp_2.x = (temp_2.x + texsize.z);\n  neighbourhood_3 = (neighbourhood_3 + texture (sampler_main, temp_2).xyz);\n  state_1 = (((\n    ((float((neighbourhood_3.x >= 2.0)) * float((neighbourhood_3.x <= 3.0))) * float((tmpvar_6.x == 0.0)))\n   * \n    ((neighbourhood_3.y + q1) - q3)\n  ) * 0.5) + tmpvar_6.x);\n  state_1 = (state_1 - ((\n    float((neighbourhood_3.x < 2.0))\n   + \n    float((neighbourhood_3.x > 4.0))\n  ) * 0.001));\n  ret1_4.x = state_1;\n  state_1 = (((\n    (float((neighbourhood_3.z >= 2.0)) * float((neighbourhood_3.z <= 3.0)))\n   * \n    float((tmpvar_6.z == 0.0))\n  ) * (\n    ((tmpvar_6.y + state_1) + (neighbourhood_3.x + q3))\n   - q1)) + tmpvar_6.z);\n  state_1 = (state_1 - ((\n    float((neighbourhood_3.z < 2.0))\n   + \n    float((neighbourhood_3.z > 4.0))\n  ) * 0.0001));\n  ret1_4.z = state_1;\n  ret_5.x = (((ret1_4.x - \n    (ret1_4.x * float((state_1 > 0.0)))\n  ) + (1.2 * tmpvar_6.y)) - (bass * 0.1));\n  ret_5.y = (((tmpvar_6.y - \n    (((tmpvar_6.y * float(\n      (ret1_4.x > 0.0)\n    )) * ret1_4.x) * 1.2)\n  ) - (\n    ((tmpvar_6.y * float((state_1 > 0.0))) * state_1)\n   * 1.2)) + (0.04 * neighbourhood_3.y));\n  ret_5.z = ((state_1 + (\n    ((ret1_4.x * 0.2) + (tmpvar_6.y * 0.01))\n   * \n    float((state_1 > 0.0))\n  )) - ((\n    (2.0 * (sin((\n      (time * 0.4)\n     + \n      (rad * 10.0)\n    )) + 1.0))\n   / rad) * 0.01));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_5;\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.0);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\n  ), pow (hue_shader, ret_2)));\n  ret_2 = (ret_2 * hue_shader);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat3 ret1 = GetPixel(uv);\nfloat3 neighbourhood;\nneighbourhood.x = 0;\nneighbourhood.y = 0;\nneighbourhood.z= 0;\nfloat2 temp;\ntemp.x = uv.x - texsize.z;\ntemp.y = uv.y - texsize.w;\nneighbourhood = neighbourhood + GetPixel(temp);\ntemp.x = temp.x + texsize.z;\nneighbourhood = neighbourhood+ GetPixel(temp);\ntemp.x = temp.x + texsize.z;\nneighbourhood = neighbourhood + GetPixel(temp);\n\n\ntemp.x = temp.x - 2 * texsize.z;\ntemp.y = temp.y + texsize.w;\nneighbourhood = neighbourhood + GetPixel(temp);\ntemp.x = temp.x +  2 * texsize.z;\nneighbourhood = neighbourhood+ GetPixel(temp);\n\n\n\n\ntemp.x = temp.x - 2 * texsize.z;\ntemp.y = temp.y + texsize.w;\nneighbourhood = neighbourhood + GetPixel(temp);\ntemp.x = temp.x + texsize.z;\nneighbourhood = neighbourhood+ GetPixel(temp);\ntemp. x = temp.x + texsize.z;\nneighbourhood = neighbourhood + GetPixel(temp);\nfloat3 org = ret1;\nfloat state;\nstate = ((neighbourhood.x >= 2) * (neighbourhood.x <= 3)) * (ret1.x == 0.0) * (neighbourhood.y + q1 - q3) * 0.5 + ret1.x;\nstate = state - ((neighbourhood.x < 2) + (neighbourhood.x > 4)) * 0.001;\nret1.x = state;\n\n\n\n\n\nstate = ((neighbourhood.z >= 2) * (neighbourhood.z <= 3)) * (ret1.z == 0.0) * (ret1.y + ret1.x + neighbourhood.x + q3 - q1) + ret1.z;\nstate = state - ((neighbourhood.z < 2) + (neighbourhood.z > 4)) * 0.0001;\nret1.z = state;\nret.x = ret1.x - ret1.x * (ret1.z > 0) + 1.2 * ret1.y - bass * 0.1;\nret.y = ret1.y - ret1.y * (ret1.x > 0) * ret1.x * 1.2 - ret1.y * (ret1.z > 0) * ret1.z * 1.2 + 0.04 * neighbourhood.y;\nret.z = ret1.z + ((ret1.x * 0.2) + (ret1.y * 0.01)) * (ret1.z > 0) - ((2 * (sin(time * 0.4 + rad * 10) + 1)) / rad) * 0.01;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1;\n    float3 what = lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader,ret));\n    ret *=what;\n    ret *= hue_shader;\n\n    //ret *= 1.5; //old gamma effect    \n}"}