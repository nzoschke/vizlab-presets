{"version":2,"baseVals":{"rating":5,"wave_mode":5,"wrap":0,"wave_a":0.001,"wave_scale":4.778,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.037,"warpscale":0.015,"warp":0.033,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.36457,"g":1,"b":1,"a":0.1,"g2":0,"a2":0.1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":64,"x":0.36,"rad":0.03697,"a":0.2,"r2":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"smoothing":0,"r":0,"g":0,"b":0},"init_eqs_str":"a.xang=0;a.fov=0;a.tic=0;a.ab=0;a.tir=0;a.yang=0;a.vb=0;a.vg=0;a.dis=0;a.my=0;a.oz=0;a.ti=0;a.mz=0;a.vr=0;a.oy=0;a.ag=0;a.mx=0;a.vol=0;a.ar=0;a.sp=0;a.zang=0;a.ox=0;","frame_eqs_str":"a.tic=Math.min(a.time-a.tir,.1);a.tir=a.time;a.ti=a.ti+.5*a.tic+below(a.vr+a.vg+a.vb,.4)*a.tic*8;a.vr=.75+.25*Math.sin(1.132*a.ti+1);a.vg=.75+.25*Math.sin(1.121*a.ti+1);a.vb=.75+.25*Math.sin(1.187*a.ti+1);a.ar=a.vr;a.ag=a.vg;a.ab=a.vb;","point_eqs_str":"a.sp=10*a.sample;a.ti=a.time;a.ox=.001*Math.floor(rand(1001))+.001*Math.floor(rand(1001))-.001*Math.floor(rand(1001))-.001*Math.floor(rand(1001));a.oy=.001*Math.floor(rand(1001))+.001*Math.floor(rand(1001))-.001*Math.floor(rand(1001))-.001*Math.floor(rand(1001));a.oz=.001*Math.floor(rand(1001))+.001*Math.floor(rand(1001))-.001*Math.floor(rand(1001))-.001*Math.floor(rand(1001));a.dis=pow(a.ox*a.ox+a.oy*a.oy+a.oz*a.oz,.5);a.vol=2*(a.value1+a.value2);a.ox=sign(a.ox)*pow(a.ox,4)*\na.vol;a.oy=sign(a.oy)*pow(a.oy,4)*a.vol;a.oz=sign(a.oz)*pow(a.oz,4)*a.vol;a.a=.173205*(3.464-a.dis);a.xang=.154*a.time;a.yang=.103*a.time;a.zang=.118*a.time;a.fov=.5;a.mx=a.ox*Math.cos(a.yang)+a.oz*Math.sin(a.yang);a.mz=-a.ox*Math.sin(a.yang)+a.oz*Math.cos(a.yang);a.ox=a.mx;a.oz=a.mz;a.mx=a.ox*Math.cos(a.zang)-a.oy*Math.sin(a.zang);a.my=a.ox*Math.sin(a.zang)+a.oy*Math.cos(a.zang);a.ox=a.mx;a.oy=a.my;a.my=a.oy*Math.cos(a.xang)-a.oz*Math.sin(a.xang);a.mz=a.oy*Math.sin(a.xang)+a.oz*Math.cos(a.xang);\na.oy=a.my;a.oz=a.mz;a.oz=2*(a.oz-5*Math.floor(.2*a.oz)-5);a.x=div(a.ox*a.fov,a.oz)+.5;a.x=.75*(a.x-.5)+.5;a.y=div(a.oy*a.fov,a.oz)+.5;","init_eqs_eel":"","frame_eqs_eel":"tic = min(time-tir,.1);\ntir = time;\nti = ti + tic*.5 + below(vr+vg+vb,.4)*tic*8;\n\n\nvr = .75 + .25*sin(ti*1.132 + 1);\nvg = .75 + .25*sin(ti*1.121 + 1);\nvb = .75 + .25*sin(ti*1.187 + 1);\nar=vr;\nag=vg;\nab=vb;","point_eqs_eel":"sp = sample*10;\nti = time;\n\n\nox = (int(rand(1001))*.001 + int(rand(1001))*.001 - int(rand(1001))*.001 - int(rand(1001))*.001);\noy = (int(rand(1001))*.001 + int(rand(1001))*.001 - int(rand(1001))*.001 - int(rand(1001))*.001);\noz = (int(rand(1001))*.001 + int(rand(1001))*.001 - int(rand(1001))*.001 - int(rand(1001))*.001);\n\ndis = pow(ox*ox + oy*oy + oz*oz,.5);\n\nvol = (value1+value2)*2;\n\nox = sign(ox)*pow(ox,4)*vol;\noy = sign(oy)*pow(oy,4)*vol;\noz = sign(oz)*pow(oz,4)*vol;\n\na = (3.464 - dis)*.57735*.3;\n\nxang = time*.154;\nyang = time*.103;\nzang = time*.118;\n\n\nfov = .5;\n\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = (oz - int(oz*.2)*5 - 5)*2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.zm=0;a.vol=0;a.mtime=0;a.q1=0;a.gamma=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.decay=.975;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.mtime+=.01*a.vol;a.q1=.5*a.time;a.gamma=1+.7*Math.min(.8*a.vol,1);","pixel_eqs_str":"a.zm=1;a.sx=a.zm;a.sy=a.zm;","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"decay=0.975;\n\nvol=(bass+mid+treb)*0.25;\nvol=vol*vol;\n\nmtime=mtime+vol*0.01;\n\nq1=time*0.5;\n\n\ngamma=1 + min(vol*0.8,1)*0.7","pixel_eqs_eel":"zm=1.00;\n\nsx=zm;\nsy=zm;","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  ret_1.x = texture (sampler_main, (tmpvar_2 + 0.5)).x;\n  ret_1.y = texture (sampler_main, ((tmpvar_2 * 0.98) + 0.5)).y;\n  ret_1.z = texture (sampler_main, ((tmpvar_2 * 0.95) + 0.5)).z;\n  vec3 tmpvar_3;\n  tmpvar_3.x = -(ret_1.x);\n  tmpvar_3.y = (ret_1.x - ret_1.y);\n  tmpvar_3.z = (ret_1.y - ret_1.z);\n  ret_1 = (ret_1 + (tmpvar_3 * 0.03));\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 3.0));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec2 tmpvar_3;\n  tmpvar_3.x = uv.y;\n  tmpvar_3.y = abs((uv.x - 1.0));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz * tmpvar_2.xyz) * 10.0));\n  vec3 tmpvar_5;\n  tmpvar_5 = mix ((tmpvar_4.xyz + (\n    (tmpvar_4.xyz * tmpvar_4.xyz)\n   * 10.0)), ret_1, vec3(0.5, 0.5, 0.5));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (tmpvar_5, (tmpvar_2.xyz + (\n    (tmpvar_2.xyz * tmpvar_2.xyz)\n   * \n    (5.0 * treb)\n  )), (tmpvar_5 * bass));\n  ret_1 = tmpvar_6;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = tmpvar_6;\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body\n{\n    ret.x = tex2D( sampler_main, (uv-0.5)*1.00+0.5 ).x;\n    ret.y = tex2D( sampler_main, (uv-0.5)*0.98+0.5 ).y;\n    ret.z = tex2D( sampler_main, (uv-0.5)*0.95+0.5 ).z;\n\n    // .x = fastest layer, .z = slowest\n    // slowly shift stuff toward the front, over time:\n    ret += float3(-ret.x,ret.x-ret.y,ret.y-ret.z)*0.03;\n     \n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*3;\n\n    // darken over time\n    //ret -= 0.003;\n    //ret *= 0.99;\n    //ret *= 0.97 + 0.03*saturate( length(uv - uv_orig)*200 );  // center only\n}","comp_hlsl":"sampler sampler_ruin;\nshader_body\n{\n  ret = tex2D(sampler_main,uv).xyz;\n  float2 uv3 = float2(uv.x+((.2*mid)*sin(time)),uv.y+((.2*mid)*sin(time*.3456787)));\n  float3 ret3 = tex2D(sampler_main,uv).xyz;\n  float2 uv2 = float2(uv.y,abs(uv.x-1));\n  float3 ret2 = tex2D(sampler_main,uv2).xyz;\n  ret += ret*ret*10;\n  ret2 += ret2*ret2*10;\n  ret3 += ret3*ret3*5*treb;\n  ret = lerp(ret2,ret,.5);\n  ret = lerp(ret,ret3,ret*bass);\n}"}