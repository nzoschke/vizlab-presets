{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":1,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":100,"wave_scale":1.311,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.54279,"tex_ang":4.39823,"tex_zoom":0.90528,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.shpt=0;a.sdx_r=0;a.sdy_r=0;a.sg1=0;a.sg2=0;a.sg3=0;","frame_eqs_str":"a.shpt=2*above(a.bass_att,a.shpt)+(1-above(a.bass_att,a.shpt))*(.96*(a.shpt-1.3)+1.3);a.sdx_r=.015*equal(a.shpt,2)*Math.sin(5*a.time)+(1-equal(a.shpt,2))*a.sdx_r;a.sdy_r=.015*equal(a.shpt,2)*Math.sin(6*a.time)+(1-equal(a.shpt,2))*a.sdy_r;a.sg1=Math.abs(Math.sin(a.time));a.sg2=12*a.sdx_r*above(a.sg1,.5)+12*a.sdy_r*below(a.sg1,.5);a.sg3=.00001<Math.abs(equal(a.shpt,2))?a.sg2:a.sg3;a.ang=a.ang+6*a.time+2;a.rad+=a.sg3;","init_eqs_eel":"","frame_eqs_eel":"shpt = above(bass_att,shpt)*2+(1-above(bass_att,shpt))*((shpt-1.3)*0.96+1.3);\nsdx_r = equal(shpt,2)*0.015*sin(5*time)+(1-equal(shpt,2))*sdx_r;\nsdy_r = equal(shpt,2)*0.015*sin(6*time)+(1-equal(shpt,2))*sdy_r;\nsg1 = abs(sin(time));\nsg2 = 12*sdx_r*above(sg1,0.5) + 12*sdy_r*below(sg1,0.5);\nsg3 = if(equal(shpt,2),sg2,sg3);\n\n\nang = ang + 6*time+2;\nrad = rad + sg3;"},{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.20068,"tex_ang":4.39823,"tex_zoom":1.48886,"g2":0,"border_a":0},"init_eqs_str":"a.shpt=0;a.sdx_r=0;a.sdy_r=0;a.sg1=0;a.sg2=0;a.sg3=0;","frame_eqs_str":"a.shpt=2*above(a.bass_att,a.shpt)+(1-above(a.bass_att,a.shpt))*(.96*(a.shpt-1.3)+1.3);a.sdx_r=.015*equal(a.shpt,2)*Math.sin(5*a.time)+(1-equal(a.shpt,2))*a.sdx_r;a.sdy_r=.015*equal(a.shpt,2)*Math.sin(6*a.time)+(1-equal(a.shpt,2))*a.sdy_r;a.sg1=Math.abs(Math.sin(a.time));a.sg2=12*a.sdx_r*above(a.sg1,.5)+12*a.sdy_r*below(a.sg1,.5);a.sg3=.00001<Math.abs(equal(a.shpt,2))?a.sg2:a.sg3;a.ang=a.ang+6*a.time+2;a.x+=.32*Math.sin(3*a.time);a.y+=.32*Math.cos(3*a.time);","init_eqs_eel":"","frame_eqs_eel":"shpt = above(bass_att,shpt)*2+(1-above(bass_att,shpt))*((shpt-1.3)*0.96+1.3);\nsdx_r = equal(shpt,2)*0.015*sin(5*time)+(1-equal(shpt,2))*sdx_r;\nsdy_r = equal(shpt,2)*0.015*sin(6*time)+(1-equal(shpt,2))*sdy_r;\nsg1 = abs(sin(time));\nsg2 = 12*sdx_r*above(sg1,0.5) + 12*sdy_r*below(sg1,0.5);\nsg3 = if(equal(shpt,2),sg2,sg3);\n\n\nang = ang + 6*time+2;\nx = x + 0.32*sin(3*time);\ny = y + 0.32*cos(3*time);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"scaling":2.15546,"smoothing":0},"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.r=a.q1;a.g=a.q2;a.b=a.q3;","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"r = q1;\ng = q2;\nb = q3;","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q22=0;a.q21=0;a.q29=0;a.thresh=0;a.mq21=0;a.mq24=0;a.dy_r=0;a.chng=0;a.mq28=0;a.mq23=0;a.q23=0;a.q24=0;a.mq30=0;a.dx_r=0;a.q26=0;a.mq27=0;a.mq25=0;a.mq22=0;a.mq26=0;a.q27=0;a.q28=0;a.q30=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.99;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq29;a.mq30=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq30;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q30=a.mq30;a.monitor=a.mq1;a.wave_r=.5+.5*Math.sin(1.6*a.time);a.wave_g=.5+.5*Math.sin(4.1*a.time);a.wave_b=-1+(1-a.wave_r+1-a.wave_g);a.warp=0;","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.zoom=.1*a.rad+1;a.zoom-=6*a.dx_r*Math.max(1.2*a.bass_att*Math.tan(4*a.bass),a.dy_r*Math.cos(12*a.ang)*a.bass_att);a.rot+=6*a.dy_r*Math.max(1.2*a.treb_att*Math.tan(4*a.mid),a.dx_r*Math.sin(12*a.rad)*a.mid_att);","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.99;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1),mq29);\nmq30=if(above(chng,cthr),rand(1),mq30);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\n\nmonitor=mq1;\nwave_r = 0.5 + 0.5*sin(1.6*time);\nwave_g = 0.5 + 0.5*sin(4.1*time);\nwave_b = -1 + (1-wave_r + 1-wave_g);\nwarp = 0;\n\n//wave_x = wave_x + 0.14*sin(1.52*time)+0.1*sin(2.1*time)+0.12*cos(0.63*time);\n//wave_y = wave_y + 0.15*cos(time)+0.11*sin(0.52*time)+0.18*cos(1.1*time);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\n\nzoom = 0.1*rad+1;\nzoom = zoom - 6*dx_r*max(1.2*bass_att*tan(4*bass),dy_r*cos(12*ang)*bass_att);\nrot = rot + 6*dy_r*max(1.2*treb_att*tan(4*mid),dx_r*sin(12*rad)*mid_att);","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = clamp (((texture (sampler_pw_main, uv_orig).xyz * vec3(1.0, 1.0, 0.97)) - vec3(0.0, 0.0, 0.001)), 0.0, 1.0);\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_pw_main, (uv_orig + ((\n    (texture (sampler_noise_hq, fract(((\n      ((uv_orig * texsize.xy) * texsize_noise_lq.zw)\n     + rand_frame.xy) * 8.0))).xy - 0.5)\n   * 6.0) * texsize.zw)));\n  vec3 tmpvar_3;\n  tmpvar_3 = tmpvar_2.xyz;\n  float tmpvar_4;\n  vec2 x_5;\n  x_5 = (ret_1.xy - uv_orig);\n  tmpvar_4 = sqrt(dot (x_5, x_5));\n  float tmpvar_6;\n  vec2 x_7;\n  x_7 = (tmpvar_2.xy - uv_orig);\n  tmpvar_6 = sqrt(dot (x_7, x_7));\n  if ((tmpvar_4 > tmpvar_6)) {\n    ret_1.xy = tmpvar_3.xy;\n    ret_1.z = tmpvar_3.z;\n  };\n  ret_1.xy = (ret_1.xy * pow (ret_1.z, 0.01));\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * roam_cos.y)) && (ret_1.x <= (q24 * roam_sin.x)))) {\n    ret_1.y = (ret_1.y + (tmpvar_8.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * roam_sin.x)) && (ret_1.y <= (q25 * roam_cos.x)))) {\n    ret_1.z = (ret_1.z + (tmpvar_8.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * roam_cos.x)) && (ret_1.z <= (q26 * roam_sin.y)))) {\n    ret_1.x = (ret_1.x + (tmpvar_8.z * 0.5));\n  };\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_1;\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (texture (sampler_main, uv_1).xyz * 4.0);\n  ret_2 = (ret_2 - ((\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1) * 4.0));\n  ret_2 = -(ret_2);\n  vec3 tmpvar_3;\n  tmpvar_3 = pow (ret_2, vec3(0.5, 0.5, 0.7));\n  ret_2 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((tmpvar_3.x > (q26 * roam_cos.y)) && (tmpvar_3.x <= (q23 * roam_sin.x)))) {\n    ret_2.z = (tmpvar_3.z + (tmpvar_4.x * 0.5));\n  };\n  if (((tmpvar_3.y > (q25 * roam_sin.x)) && (tmpvar_3.y <= (q22 * roam_cos.x)))) {\n    ret_2.x = (tmpvar_3.x + (tmpvar_4.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * roam_cos.x)) && (ret_2.z <= (q21 * roam_sin.y)))) {\n    ret_2.y = (tmpvar_3.y + (tmpvar_4.z * 0.5));\n  };\n  ret_2 = ((ret_2 - 0.1) * 1.1);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv_orig;\n\nfloat2 noise_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_hq, frac(noise_uv*8));\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,.97) - float3(.0,.0,.001));\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*6*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;ret.z = rsamp.z;}\n\n//rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*2*pixelsize).xyz;\n//if (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\n//ret.xy = rsamp.xy;ret.z = rsamp.z;}\n\n\nret.xy *= pow(ret.z,.01);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y += (noise9).x*.5; \nif(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z += (noise9).y*.5; \nif(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x += (noise9).z*.5; \n\n\n\n}","comp_hlsl":"shader_body\n{\n    uv = 0.05 + 0.9*uv;\n\n    // equivalent of a laplacian: [center*4 - each of the 4 neighbors*1]\n    ret = 0;\n    ret += tex2D(sampler_main, uv ).xyz*4;\n    ret -= GetBlur1(uv)*4;\nret *= -1;\n\n    // little bit of noise:\n    //ret *= 1 + 0.12*(tex2D(sampler_noise_lq, rand_frame.xy \n    //       + uv*texsize.xy*texsize_noise_lq.zw).xxx*2-1);\n \n    // palettize:\n    ret = pow(ret, float3(0.5, 0.5, 0.7));\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q30 \n                     );\nif(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z += (noise9).x*.5; \nif(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x += (noise9).y*.5; \nif(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y += (noise9).z*.5; \n\n    ret = (ret-0.1)*1.1;\n   \n    //ret.xyz *= 2; // a little bit of overbright\n}\n\n"}