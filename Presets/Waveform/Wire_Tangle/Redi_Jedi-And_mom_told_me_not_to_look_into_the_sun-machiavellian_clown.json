{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"invert":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":1},"init_eqs_str":"a.rmod=0;a.ra=0;a.q2=0;a.q1=0;a.tmod=0;a.ta=0;a.ra=.5;a.rmod=-1;","frame_eqs_str":"a.rmod=.00001<Math.abs(above(a.ra,.8))?-1:.00001<Math.abs(below(a.ra,.2))?1:a.rmod;a.ra+=.01*a.q2*a.q1*a.rmod;a.rad=a.ra;a.border_r=1;a.border_b=0;a.border_g=0;a.tmod=.00001<Math.abs(above(a.ta,.2))?-1:.00001<Math.abs(below(a.ta,-.2))?1:a.tmod;a.ta+=a.q2*a.tmod*.0002;a.tex_zoom=1+a.ta;","init_eqs_eel":"ra=.5;\nrmod=-1;","frame_eqs_eel":"rmod=if(above(ra,.8),-1,if(below(ra,.2),1,rmod));\nra=ra+q2*.01*q1*rmod;\nrad=ra;\n\nborder_r=1;\nborder_b=0;\nborder_g=0;\n\n\ntmod=if(above(ta,.2),-1,if(below(ta,-.2),1,tmod));\nta=ta+q2*tmod*.0002;\ntex_zoom=1+ta;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":1},"init_eqs_str":"a.rmod=0;a.ra=0;a.q4=0;a.q3=0;a.tmod=0;a.ta=0;a.ra=.5;a.rmod=1;","frame_eqs_str":"a.rmod=.00001<Math.abs(above(a.ra,.8))?-1:.00001<Math.abs(below(a.ra,.2))?1:a.rmod;a.ra+=.01*a.q4*a.q3*a.rmod;a.rad=a.ra;a.border_r=0;a.border_b=1;a.border_g=0;a.tmod=.00001<Math.abs(above(a.ta,.2))?-1:.00001<Math.abs(below(a.ta,-.2))?1:a.tmod;a.ta+=a.q4*a.tmod*.0002;a.tex_zoom=1+a.ta;","init_eqs_eel":"ra=.5;\nrmod=1;","frame_eqs_eel":"rmod=if(above(ra,.8),-1,if(below(ra,.2),1,rmod));\nra=ra+q4*.01*q3*rmod;\nrad=ra;\n\n\nborder_r=0;\nborder_b=1;\nborder_g=0;\n\n\ntmod=if(above(ta,.2),-1,if(below(ta,-.2),1,tmod));\nta=ta+q4*tmod*.0002;\ntex_zoom=1+ta;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":1},"init_eqs_str":"a.rmod=0;a.ra=0;a.q6=0;a.q5=0;a.tmod=0;a.ta=0;a.ra=.5;a.rmod=1;","frame_eqs_str":"a.rmod=.00001<Math.abs(above(a.ra,.8))?-1:.00001<Math.abs(below(a.ra,.2))?1:a.rmod;a.ra+=.01*a.q6*a.q5*a.rmod;a.rad=a.ra;a.border_r=0;a.border_b=0;a.border_g=1;a.tmod=.00001<Math.abs(above(a.ta,.2))?-1:.00001<Math.abs(below(a.ta,-.2))?1:a.tmod;a.ta+=a.q6*a.tmod*.0002;a.tex_zoom=1+a.ta;","init_eqs_eel":"ra=.5;\nrmod=1;","frame_eqs_eel":"rmod=if(above(ra,.8),-1,if(below(ra,.2),1,rmod));\nra=ra+q6*.01*q5*rmod;\nrad=ra;\n\n\nborder_r=0;\nborder_b=0;\nborder_g=1;\n\ntmod=if(above(ta,.2),-1,if(below(ta,-.2),1,tmod));\nta=ta+q6*tmod*.0002;\ntex_zoom=1+ta;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":110,"thick":1,"scaling":1.34785,"smoothing":0},"init_eqs_str":"a.q2=0;a.q6=0;a.q1=0;a.q5=0;","frame_eqs_str":"","point_eqs_str":"a.x=a.value1+.5;a.y=a.value2+.5;a.r=a.value1+.5*a.q2;a.b=a.value2+.5+a.q6;a.g=a.value1*a.q1+a.value2*a.q5;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=value1+.5;\ny=value2+.5;\n\nr=value1+.5*q2;\nb=value2+.5+q6;\ng=value1*q1+value2*q5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.beatb=0;a.q6=0;a.cymod=0;a.beatt=0;a.q1=0;a.beatthard=0;a.q5=0;a.cxmod=0;a.beatbhard=0;a.vol_att=0;a.rt=0;a.ccx=0;a.q4=0;a.beatmhard=0;a.vol=0;a.beatm=0;a.q2=0;a.q3=0;a.ccy=0;","frame_eqs_str":"a.beatb=above(a.bass,a.bass_att);a.beatbhard=.00001<Math.abs(a.beatb)?a.bass-.9*a.bass_att:a.beatbhard;a.beatm=above(a.mid,a.mid_att);a.beatmhard=.00001<Math.abs(a.beatm)?a.mid-.9*a.mid_att:a.beatmhard;a.beatt=above(a.treb,a.treb_att);a.beatthard=.00001<Math.abs(a.beatt)?a.treb-.9*a.treb_att:a.beatthard;a.vol=a.bass+a.mid+a.treb;a.vol_att=a.bass_att+a.mid_att+a.treb_att;a.q1=a.beatb;a.q2=a.beatbhard;a.q3=a.beatm;a.q4=a.beatmhard;a.q5=a.beatt;a.q6=a.beatthard;a.decay=.99;a.rot=\n.3*a.q4-.3*a.q2;a.cxmod=.00001<Math.abs(above(a.ccx,.8))?-1:.00001<Math.abs(below(a.ccx,.2))?1:a.cxmod;a.ccx+=.001*a.q2*a.q1*a.cxmod;a.cymod=.00001<Math.abs(above(a.ccy,.8))?-1:.00001<Math.abs(below(a.ccy,.2))?1:a.cymod;a.ccy+=.001*a.q2*a.q1*a.cymod;","pixel_eqs_str":"a.rt=mod(10*a.x,10)*a.q2*mod(10*a.y,10)*a.q6;a.rot=.00001<Math.abs(equal(mod(a.rt,2),0))?-a.rot:a.rot;","init_eqs_eel":"","frame_eqs_eel":"beatb=above(bass,bass_att);\nbeatbhard=if(beatb,bass-bass_att*.9,beatbhard);\n\nbeatm=above(mid,mid_att);\nbeatmhard=if(beatm,mid-mid_att*.9,beatmhard);\n\nbeatt=above(treb,treb_att);\nbeatthard=if(beatt,treb-treb_att*.9,beatthard);\n\nvol=bass+mid+treb;\nvol_att=bass_att+mid_att+treb_att;\n\n\nq1=beatb;\nq2=beatbhard;\nq3=beatm;\nq4=beatmhard;\nq5=beatt;\nq6=beatthard;\n\ndecay=.99;\nrot=.3*q4-.3*q2;\n\n\n\ncxmod=if(above(ccx,.8),-1,if(below(ccx,.2),1,cxmod));\nccx=ccx+q2*.001*q1*cxmod;\n\ncymod=if(above(ccy,.8),-1,if(below(ccy,.2),1,cymod));\nccy=ccy+q2*.001*q1*cymod;","pixel_eqs_eel":"rt=((x*10)%10*q2)*((y*10)%10*q6);\nrot=if(equal((rt)%2,0),-rot,rot);","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((texture (sampler_main, (\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \n      mix (uv_orig, uv, vec2(4.0, 4.0))\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\n      ((texture (sampler_blur2, mix (uv_orig, uv, vec2(-12.0, -12.0))).xyz * scale2) + bias2)\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\n   + \n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\n  )).xyz + (\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\n   * 0.006).xyz) + -0.0006);\n  ret = tmpvar_2.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret2_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  uv2_3.y = uv.y;\n  uv2_3.x = (1.0 - uv.x);\n  uv2_3 = (0.5 + ((uv2_3 - 0.5) * 0.98));\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\n  vec2 tmpvar_5;\n  tmpvar_5 = (texsize.zw * 4.0);\n  vec3 tmpvar_6;\n  tmpvar_6 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_7;\n  tmpvar_7 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_8;\n  tmpvar_8.z = 0.0;\n  tmpvar_8.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\n    ((uv_1.xyy + (tmpvar_8 * 0.5)) * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\n  vec2 tmpvar_10;\n  tmpvar_10.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\n  tmpvar_10.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\n  uv_1 = (uv_1 - (tmpvar_10 * 0.04));\n  vec2 tmpvar_11;\n  tmpvar_11.x = dot (((\n    (texture (sampler_blur1, (uv2_3 + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv2_3 - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_11.y = dot (((\n    (texture (sampler_blur1, (uv2_3 + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv2_3 - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  uv2_3 = (uv2_3 - (tmpvar_11 * 0.04));\n  ret_4 = (abs((\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n  )) * (dot (tmpvar_9, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  ret2_2 = (abs((\n    ((texture (sampler_main, uv2_3).xyz + ((texture (sampler_blur1, uv2_3).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv2_3).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv2_3).xyz * scale3) + bias3)\n  )) * (dot (tmpvar_9, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  ret2_2 = (0.5 - pow (ret2_2, vec3(0.5, 0.5, 0.5)));\n  ret_4 = (pow (ret_4, vec3(0.5, 0.5, 0.5)) - (0.3 - ret2_2));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_4;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\n\n\nfloat error     = 0.5;        // maximum random pixel offset\nfloat diffusion = 0.006;      // dither strength\nfloat fadeout   = -0.0006;    // may be minor 1/256 due to the error diffusion dither;\n\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*1.5 + rand_frame.xy;\nfloat magic = lum(GetPixel(lerp(uv_orig,uv, 4))) - lum(GetBlur2(lerp(uv_orig,uv,-12)));\nuv = lerp(uv_orig,uv, magic*12 ) + (tex2D(sampler_noise_lq, dither_uv)-0.5)*texsize.zw*error;\nret = GetPixel(uv)+(tex2D(sampler_noise_lq, dither_uv)-0.5)*diffusion + fadeout;\n\n}","comp_hlsl":"shader_body\n{\nfloat2 uv2 = uv;\nuv2.x=1-uv2.x;\nuv2 = .5+(uv2-.5)*.98;\nuv = 0.5 + (uv-0.5)*0.98;\n    float2 d = texsize.zw*4;\n    float2 d2= texsize.zw*4;\n\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dx2= ( GetBlur1(uv2+float2(1,0)*d2)-GetBlur1(uv2-float2(1,0)*d2) );\n\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n    float3 dy2 = ( GetBlur1(uv2+float2(0,1)*d2)-GetBlur1(uv2-float2(0,1)*d2) );\n\nfloat4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nfloat4 noise2= tex3D(sampler_noisevol_hq, ((uv2.xyy+float3(lum(dx2),lum(dy2),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nuv -= float2(lum(dx),lum(dy))*0.04;\nuv2-= float2(lum(dx2),lum(dy2))*0.04;\n\nret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));\nfloat3 ret2 = abs(GetPixel(uv2)+GetBlur1(uv2)-GetBlur2(uv2)-GetBlur3(uv2));\nret *= lum(noise)*3; \nret2*= lum(noise)*3; \nret = pow(ret,0.5);\nret2= pow(ret2,0.5);\nret2=.5-ret2;\nret-=.3-ret2;\n}"}