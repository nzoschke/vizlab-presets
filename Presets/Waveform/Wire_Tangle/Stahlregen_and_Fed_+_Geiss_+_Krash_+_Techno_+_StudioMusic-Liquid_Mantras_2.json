{"version":2,"baseVals":{"rating":5,"decay":0.9,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"wave_brighten":0,"wave_a":3.786,"wave_scale":65.842,"wave_smoothing":0.117,"wave_mystery":-0.02,"modwavealphastart":1.36,"modwavealphaend":1.32,"warpscale":1.002,"zoomexp":1.00183,"zoom":0.99505,"dx":0.01,"dy":0.01,"warp":0.01,"wave_r":0.25,"wave_g":0.25,"wave_b":0.25,"ob_size":0.005,"ob_a":0.05,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.meanbass_att=0;a.q1=0;a.lastbeat=0;a.beatrate=0;a.mode=0;a.peakbass_att=0;a.att=0;a.volume=0;a.beat=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.volume=.3*(a.bass+a.mid+a.att);a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,a.peakbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-\na.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-a.beat)*a.peakbass_att*(.95*above(a.time-a.lastbeat,2*a.beatrate)+.995*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.mode=.00001<Math.abs(a.beat)?Math.floor(rand(4)):a.mode;a.q1=.08*mod(20*a.time,50);a.q2=1-2*below(a.mode,2);a.q3=1-2*mod(a.mode,2);a.wave_x=1-below(a.mode,\n2);a.wave_mystery=mod(a.frame,2)*(2*(1-equal(mod(a.mode,3),0))-1);a.wave_r=.00001<Math.abs(below(mod(a.frame,6),3))?.5*a.bass:0;a.wave_b=.9+.1*Math.sin(a.time);a.wave_g=.00001<Math.abs(above(mod(a.frame,6),2))?.5*a.bass:0;","pixel_eqs_str":"a.dx=a.dx*pow(-1,bitand(0,13+a.q1-5*a.q2*a.y))*Math.min(a.bass,1.2);a.dy=a.dy*pow(-1,bitand(0,13+a.q1-5*a.q3*a.x))*Math.min(a.bass,1.2);","init_eqs_eel":"","frame_eqs_eel":"volume = 0.3*(bass+mid+att);\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\nmode = if(beat,int(rand(4)),mode);\nq1 = ((time*20)%50)*0.08;\nq2 = 1 - below(mode,2)*2;\nq3 = 1 - 2*(mode%2);\nwave_x = 1-below(mode,2);\nwave_mystery = (frame%2)*(2*(1-equal(mode%3,0))-1);\nwave_r=if(below(frame%6,3),bass*0.5,0);\nwave_b=0.9+sin(time)*0.1;\nwave_g=if(above(frame%6,2),bass*0.5,0);","pixel_eqs_eel":"dx = dx*pow(-1,0&(13+q1 - 5*(q2*y)))*min(bass,1.2);\ndy = dy*pow(-1,0&(13+q1 - 5*(q3*x)))*min(bass,1.2);","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  float tmpvar_2;\n  tmpvar_2 = dot (texsize.zw, texsize.zw);\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \n    ((tmpvar_3 * (1.0 - (8.0 * \n      sqrt(tmpvar_2)\n    ))) + 0.5)\n  ).xyz), texture (sampler_main, (\n    (tmpvar_3 * (1.0 + (8.0 * sqrt(tmpvar_2))))\n   + 0.5)).xyz) - 0.024);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2.z = 0.0;\n  tmpvar_2.xy = texsize.zw;\n  vec3 tmpvar_3;\n  tmpvar_3 = (tmpvar_2 * 2.5);\n  ret_1 = (texture (sampler_main, uv).xyz * 0.5);\n  ret_1 = (ret_1 + (vec3(3.4, 2.38, 1.02) * (\n    dot (((texture (sampler_blur1, (uv + tmpvar_3.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n   - \n    dot (((texture (sampler_blur1, (uv - tmpvar_3.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  )));\n  ret_1 = (ret_1 + (vec3(0.68, 1.7, 2.38) * (\n    dot (((texture (sampler_blur1, (uv + tmpvar_3.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n   - \n    dot (((texture (sampler_blur1, (uv - tmpvar_3.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  )));\n  float tmpvar_4;\n  tmpvar_4 = dot (ret_1, vec3(0.32, 0.49, 0.29));\n  if ((tmpvar_4 > 0.6)) {\n    vec4 tmpvar_5;\n    tmpvar_5.w = 0.0;\n    tmpvar_5.xyz = ret_1;\n    ret_1 = (mix (tmpvar_5, texture (sampler_noise_lq, (uv * 10.0)), vec4(0.1, 0.1, 0.1, 0.1)) * 1.1).xyz;\n  };\n  ret_1 = (ret_1 * ((ret_1 * 0.8) + (\n    (q6 * q5)\n   * 0.35)));\n  ret_1 = (ret_1 * 2.1);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // feather pen\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1-8*length(texsize.zw)) + 0.5 ).xyz);\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1+8*length(texsize.zw)) + 0.5 ).xyz);\n\n    // darken over time\n    ret -= 0.024;\n}","comp_hlsl":"shader_body\n{\n    float3 goo = tex2D(sampler_main, uv).xyz;    \nret=goo;\n    float3 d = float3(texsize.zw, 0)*2.5;\n    float b1 = lum(GetBlur1(uv + d.xz));\n    float b2 = lum(GetBlur1(uv - d.xz));\n    float b3 = lum(GetBlur1(uv + d.zy));\n    float b4 = lum(GetBlur1(uv - d.zy));\n\n    ret *= 0.5; \n    ret += (b1-b2)*3.4*float3(1,0.7,0.3);\n    ret += (b3-b4)*3.4*float3(0.2,0.5,0.7);\n    if (lum(ret)>0.6){ret=lerp(ret, tex2d(sampler_noise_lq,uv*10),0.1)*1.1;};\n   ret*=ret*0.8+q6*q5*0.35;\nret *= 2.1;\n}"}