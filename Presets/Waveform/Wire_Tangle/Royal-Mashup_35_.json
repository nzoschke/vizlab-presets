{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":1,"modwavealphabyvolume":1,"wrap":0,"brighten":1,"wave_a":1.2,"wave_scale":3.587,"wave_smoothing":0.9,"wave_mystery":-0.28,"modwavealphastart":0.97,"modwavealphaend":1.67,"warpanimspeed":1.681,"warpscale":2.953,"zoomexp":0.01,"zoom":0.9901,"warp":1.24699,"wave_r":0.7,"wave_g":0.65,"wave_b":0.7,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":31.2,"mv_y":2.28,"mv_l":2.5,"mv_b":0.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.d=0;a.cx1=0;a.y3=0;a.y1=0;a.cy1=0;a.oldq13=0;a.q12=0;a.w2=0;a.x1=0;a.q13=0;a.q6=0;a.q1=0;a.q5=0;a.q9=0;a.x3=0;a.q11=0;a.q10=0;a.dir=0;a.w1=0;a.r=0;a.x2=0;a.y2=0;a.q2=0;a.q7=0;a.q8=0;","frame_eqs_str":"a.q1=a.aspectx;a.q2=a.aspecty;a.w1=.7*Math.asin(1);a.w2=1.3*Math.asin(1);a.q5=Math.sin(a.w1);a.q6=Math.cos(a.w1);a.q7=Math.sin(a.w2);a.q8=Math.cos(a.w2);a.w1=.7*Math.asin(1);a.w2=1.3*Math.asin(1);a.q9=Math.sin(a.w1);a.q10=Math.cos(a.w1);a.q11=Math.sin(a.w2);a.q12=Math.cos(a.w2);a.zoom=1;a.q13=a.oldq13+.1*a.bass*a.bass*a.bass_att*a.bass_att;a.oldq13=a.q13;","pixel_eqs_str":"a.r=div(a.bass,4);a.cx1=.5+.2*Math.sin(.618*a.time);a.cy1=.5+.2*Math.cos(1.618*a.time);a.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));a.dir=a.bass*(a.r*a.r-a.d*a.d)*.3;a.x1=.00001<Math.abs(above(a.d,a.r))?0:Math.sin(a.y-a.cy1)*a.dir;a.y1=.00001<Math.abs(above(a.d,a.r))?0:-Math.sin(a.x-a.cx1)*a.dir;a.cx1=.5+.3*Math.sin(2.618*a.time);a.cy1=.5+.3*Math.cos(3.14*a.time);a.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));a.dir=-a.mid*(a.r*a.r-a.d*a.d)*.3;a.x2=.00001<\nMath.abs(above(a.d,a.r))?0:Math.sin(a.y-a.cy1)*a.dir;a.y2=.00001<Math.abs(above(a.d,a.r))?0:-Math.sin(a.x-a.cx1)*a.dir;a.cx1=.5+.4*Math.sin(2.618*-a.time);a.cy1=.5+.4*Math.cos(1.14*-a.time);a.d=sqrt((a.x-a.cx1)*(a.x-a.cx1)+(a.y-a.cy1)*(a.y-a.cy1));a.dir=-a.treb*(a.r*a.r-a.d*a.d)*.3;a.x3=.00001<Math.abs(above(a.d,a.r))?0:Math.sin(a.y-a.cy1)*a.dir;a.y3=.00001<Math.abs(above(a.d,a.r))?0:-Math.sin(a.x-a.cx1)*a.dir;a.dx=a.x1+a.x2+a.x3;a.dy=a.y1+a.y2+a.y3;","init_eqs_eel":"","frame_eqs_eel":"q1 = aspectX;\nq2 = aspectY;\nw1 = asin(1)*0.7;\nw2 = asin(1)*1.3;\nq5 = sin(w1);\nq6 = cos(w1);\nq7 = sin(w2);\nq8 = cos(w2);\nw1 = asin(1)*0.7;\nw2 = asin(1)*1.3;\nq9 = sin(w1);\nq10 = cos(w1);\nq11 = sin(w2);\nq12 = cos(w2);\nzoom = 1;//0.999;\n//warp = 0;\n//wave_a = 0;\nq13 = oldq13 + 0.1*(bass*bass*bass_att*bass_att);\noldq13 = q13;","pixel_eqs_eel":"r = bass/4;\ncx1 = 0.5+sin(time*0.618)*0.2;\ncy1 = 0.5+cos(time*1.618)*0.2;\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\ndir = (bass)*(r*r-d*d)*0.3;\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\n\n\ncx1 = 0.5+sin(time*2.618)*0.3;\ncy1 = 0.5+cos(time*3.14)*0.3;\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\ndir = -(mid)*(r*r-d*d)*0.3;\nx2 = if( above(d,r),0,  sin(y-cy1)*dir);\ny2 = if( above(d,r),0, -sin(x-cx1)*dir);\n\ncx1 = 0.5+sin(-time*2.618)*0.4;\ncy1 = 0.5+cos(-time*1.14)*0.4;\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\ndir = -(treb)*(r*r-d*d)*0.3;\nx3 = if( above(d,r),0,  sin(y-cy1)*dir);\ny3 = if( above(d,r),0, -sin(x-cx1)*dir);\n\n\ndx = x1+x2+x3;\ndy = y1+y2+y3;","warp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  ret_2 = ((1.25 * (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3)) - (0.25 * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  vec3 theta_3;\n  theta_3 = (1.33 * ((texture (sampler_blur1, \n    clamp (ret_2.xy, 0.0, 1.0)\n  ).xyz * scale1) + bias1));\n  uv_1 = (uv * (1.0 + (0.15 * \n    (sin(theta_3) / cos(theta_3))\n  )).xy);\n  vec3 theta_4;\n  theta_4 = (1.33 * ((texture (sampler_blur1, \n    clamp (ret_2.xy, 0.0, 1.0)\n  ).xyz * scale1) + bias1));\n  uv_1 = (uv_1 - (0.075 * (\n    sin(theta_4)\n   / \n    cos(theta_4)\n  )).xy);\n  float tmpvar_5;\n  tmpvar_5 = dot (texsize.zw, texsize.zw);\n  ret_2 = (max (max (texture (sampler_main, uv_1).xyz, texture (sampler_main, \n    (((uv_1 - 0.5) * (1.0 - (8.0 * \n      sqrt(tmpvar_5)\n    ))) + 0.5)\n  ).xyz), texture (sampler_main, (\n    ((uv_1 - 0.5) * (1.0 + (8.0 * sqrt(tmpvar_5))))\n   + 0.5)).xyz) - 0.024);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\n  ), pow (hue_shader.zxy, ret_2)));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n\nret = 1.25*GetBlur3(uv)-.25*GetBlur1(uv);\n\nuv *= (1+.15*tan(1.33*GetBlur1(saturate(ret.xy))));\nuv -= .075*tan(1.33*GetBlur1(saturate(ret.xy)));\n\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // feather pen\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1-8*length(texsize.zw)) + 0.5 ).xyz);\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1+8*length(texsize.zw)) + 0.5 ).xyz);\n\n    // darken over time\n    ret -= 0.024;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader.zxy,ret));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}