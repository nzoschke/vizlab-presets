{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":1,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":1.003,"wave_scale":2.911,"wave_smoothing":0.9,"modwavealphastart":1.21,"modwavealphaend":1.59,"warpscale":3.138,"zoom":1.063,"dy":-0.005,"warp":0.00054,"wave_r":0.83,"wave_g":0.8,"wave_b":0.8,"wave_y":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.dx_residual=0;a.dy_residual=0;a.bass_thresh=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.wave_r+=.65*(.6*Math.sin(1.437*a.time)+.4*Math.sin(.97*a.time));a.wave_g+=.65*(.6*Math.sin(1.344*a.time)+.4*Math.sin(.841*a.time));a.wave_b+=.65*(.6*Math.sin(1.251*a.time)+.4*Math.sin(1.055*a.time));a.rot+=.01*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.cx+=.21*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.21*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.dx+=.01*(.6*Math.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.dy+=.01*(.6*Math.sin(.284*\na.time)+.4*Math.sin(.247*a.time));a.decay-=.01*equal(mod(a.frame,6),0);a.dx+=a.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.9*(.016*equal(a.bass_thresh,2.13)*Math.sin(7*a.time)+(1-equal(a.bass_thresh,2.13))*a.dx_residual);a.dy_residual=.9*(.012*equal(a.bass_thresh,2.13)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2.13))*a.dy_residual);a.wave_x-=7*a.dx_residual;a.wave_y-=7*a.dy_residual;\na.zoom+=.04*Math.cos(.513*a.time+2);a.q1=.12*Math.cos(.479*a.time+1);a.q2=.12*Math.cos(.359*a.time+2);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.650*( 0.60*sin(1.437*time) + 0.40*sin(0.970*time) );\nwave_g = wave_g + 0.650*( 0.60*sin(1.344*time) + 0.40*sin(0.841*time) );\nwave_b = wave_b + 0.650*( 0.60*sin(1.251*time) + 0.40*sin(1.055*time) );\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\ndx = dx + 0.010*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\ndy = dy + 0.010*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\ndecay = decay - 0.01*equal(frame%6,0);\ndx = dx + dx_residual;\ndy = dy + dy_residual;\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\ndx_residual = (equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual)*0.9;\ndy_residual = (equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual)*0.9;\nwave_x = wave_x - dx_residual*7;\nwave_y = wave_y - dy_residual*7;\n\nzoom = zoom + 0.04*cos(time*0.513+2);\nq1 = 0.12*cos(time*0.479+1);\nq2 = 0.12*cos(time*0.359+2);","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * ((1.0 + \n    (q1 * uv_1.y)\n  ) + (q2 * uv_1.x)));\n  uv_1 = (uv_1 + 0.5);\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv_1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((max (tmpvar_2.xyz, texture (sampler_main, \n    (uv_1 + (vec2(0.0, 13.0) * ((tmpvar_2.xy - 0.5) * texsize.zw)))\n  ).xyz) - 0.003) * 0.98);\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (abs((texture (sampler_main, uv).xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  )) * 6.0);\n  ret_1 = (ret_1 * 1.333);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    uv -= 0.5;\n    uv *= (1 + q1*uv.y + q2*uv.x);\n    uv += 0.5;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n\n    ret = max(ret,  tex2D(sampler_main, uv + (ret.xy-0.5)*texsize.zw*13*float2(0,1)).xyz );   \n \n    // darken (decay) over time\n    ret = (ret - 0.003)*0.98;\n}","comp_hlsl":"shader_body\n{  \n    ret = tex2D(sampler_main, uv).xyz;\n\n    //ret = tex2D(sampler_fw_wrenches, ret.xy*(1-ret.zz)).xyz;\n\n    ret = abs(ret - GetBlur1(uv))*6;\n\n    ret *= 1.333; // a little bit of overbright\n}"}