{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":5,"modwavealphabyvolume":1,"wave_a":2.929,"wave_scale":1.108,"wave_smoothing":0.9,"wave_mystery":0.4,"modwavealphastart":1.27,"modwavealphaend":1.43,"warpscale":3.138,"zoom":1.023,"warp":0.12262,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.dx_residual=0;a.dy_residual=0;a.bass_thresh=0;a.q2=0;","frame_eqs_str":"a.wave_r=.85+.35*Math.sin(.437*a.time+1)+.55*Math.sin(.197*a.time+4);a.wave_g=.85+.35*Math.sin(.544*a.time+2)+.55*Math.sin(.143*a.time+5);a.wave_b=.85+.35*Math.sin(.751*a.time+3)+.55*Math.sin(.117*a.time+6);a.wave_r=sqrt(a.wave_r);a.wave_g=sqrt(a.wave_g);a.wave_b=sqrt(a.wave_b);a.wave_x=.01*Math.floor(rand(100));a.wave_y=.25+.005*Math.floor(rand(100));a.rot+=.01*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.cx+=.21*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));\na.cy+=.21*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.dx+=.003*(.6*Math.sin(.234*a.time)+.4*Math.sin(.277*a.time));a.dy+=.003*(.6*Math.sin(.284*a.time)+.4*Math.sin(.247*a.time));a.decay-=.01*equal(mod(a.frame,6),0);a.dx+=a.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.016*equal(a.bass_thresh,2.13)*Math.sin(7*a.time)+(1-equal(a.bass_thresh,2.13))*a.dx_residual;a.dy_residual=\n.012*equal(a.bass_thresh,2.13)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2.13))*a.dy_residual;a.wave_x-=7*a.dx_residual;a.wave_y-=7*a.dy_residual;a.wave_mystery=.03*a.time;a.q2=a.bass+a.mid+a.treb;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.35*sin(0.437*time+1) + 0.55*sin(0.197*time+4);\nwave_g = 0.85 + 0.35*sin(0.544*time+2) + 0.55*sin(0.143*time+5);\nwave_b = 0.85 + 0.35*sin(0.751*time+3) + 0.55*sin(0.117*time+6);\nwave_r = sqrt(wave_r);\nwave_g = sqrt(wave_g);\nwave_b = sqrt(wave_b);\nwave_x = int(rand(100))*0.01;\nwave_y = 0.25 + 0.5*int(rand(100))*0.01;\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\ndecay = decay - 0.01*equal(frame%6,0);\ndx = dx + dx_residual;\ndy = dy + dy_residual;\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\nwave_x = wave_x - dx_residual*7;\nwave_y = wave_y - dy_residual*7;\nwave_mystery = time*0.03;\nq2=bass+mid+treb;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  ret_1.x = texture (sampler_main, (tmpvar_2 + 0.5)).x;\n  ret_1.y = texture (sampler_main, ((tmpvar_2 * 0.98) + 0.5)).y;\n  ret_1.z = texture (sampler_main, ((tmpvar_2 * 0.95) + 0.5)).z;\n  vec3 tmpvar_3;\n  tmpvar_3.x = -(ret_1.x);\n  tmpvar_3.y = (ret_1.x - ret_1.y);\n  tmpvar_3.z = (ret_1.y - ret_1.z);\n  ret_1 = (ret_1 + (tmpvar_3 * 0.03));\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 3.0));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret2_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 6.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = dot (((\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_4.y = dot (((\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_blur3, uv);\n  ret_2 = (vec3((0.25 * dot (\n    clamp ((2.0 * ((tmpvar_6.xyz * scale3) + bias3)), 0.0, 1.0)\n  , vec3(0.32, 0.49, 0.29)))) - (0.8 * dot (\n    clamp (((20.0 * (\n      (0.6 * ((texture (sampler_blur2, uv).xyz * scale2) + bias2))\n     - 0.01)) - 2.0), 0.0, 1.0)\n  , vec3(0.32, 0.49, 0.29))));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_blur1, uv);\n  ret_2 = ((ret_2 + dot (\n    clamp (((30.0 * (\n      (texture (sampler_main, uv).xyz + (((tmpvar_7.xyz * scale1) + bias1) * 0.15))\n     - 0.01)) - 2.0), 0.0, 1.0)\n  , vec3(0.32, 0.49, 0.29))) - 0.1);\n  ret_2 = (ret_2 + 0.55);\n  vec3 tmpvar_8;\n  tmpvar_8 = mix (ret_2, (ret_2 * (\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\n   - \n    ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1)\n  )), pow (hue_shader, (ret_2 + q2)));\n  ret2_1 = ((tmpvar_8 - (0.9 * texture (sampler_main, tmpvar_5).xyz)) - 0.1);\n  ret2_1 = (ret2_1 - 0.75);\n  vec3 tmpvar_9;\n  tmpvar_9 = mix (ret2_1, ((1.2 * ret2_1) * (\n    ((tmpvar_6.xyz * scale3) + bias3)\n   - \n    ((tmpvar_7.xyz * scale1) + bias1)\n  )), pow (hue_shader.zxy, tmpvar_8));\n  ret2_1 = tmpvar_9;\n  vec3 tmpvar_10;\n  tmpvar_10 = abs((tmpvar_8 - (1.2 * tmpvar_9)));\n  ret_2 = (tmpvar_10 * tmpvar_10);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_2;\n  ret = tmpvar_11.xyz;\n }","warp_hlsl":"shader_body\n{\n    ret.x = tex2D( sampler_main, (uv-0.5)*1.00+0.5 ).x;\n    ret.y = tex2D( sampler_main, (uv-0.5)*0.98+0.5 ).y;\n    ret.z = tex2D( sampler_main, (uv-0.5)*0.95+0.5 ).z;\n\n    // .x = fastest layer, .z = slowest\n    // slowly shift stuff toward the front, over time:\n    ret += float3(-ret.x,ret.x-ret.y,ret.y-ret.z)*0.03;\n     \n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*3;\n\n    // darken over time\n    //ret -= 0.003;\n    //ret *= 0.99;\n    //ret *= 0.97 + 0.03*saturate( length(uv - uv_orig)*200 );  // center only\n}","comp_hlsl":"shader_body\n{\n\n//Code bits by Flexi and Geiss\n\n    float2 d = texsize.zw*6;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\nfloat2 uv_y = uv-0.25*(float2(lum(dx),lum(dy)));\n\nret = .25*lum(saturate(2*GetBlur3(uv)));\nret -= .8*lum(saturate(20*(0.6*GetBlur2(uv)-.01)-2));\nret = ret + lum(saturate(30*((GetPixel(uv)+GetBlur1(uv)*.15)-.01)-2))-.1;\nret += .55;\nret = lerp(ret,ret*(GetBlur3(uv_y)-GetBlur1(uv_y)),pow(hue_shader,ret+q2));\n\nfloat3 ret2 = -.5*lum(GetBlur3(uv_y));\nret2 += .8*GetBlur1(uv_y);\nret2 = ret-.9*GetPixel(uv_y)-.1;\nret2 -= .75;\nret2 = lerp(ret2,1.2*ret2*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader.zxy,ret));\n\nret = abs(ret-1.2*ret2);\n//ret = ret2;\nret *= ret;\n\n}"}