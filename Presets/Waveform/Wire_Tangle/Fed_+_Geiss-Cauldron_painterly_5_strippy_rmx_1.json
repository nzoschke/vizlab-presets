{"version":2,"baseVals":{"rating":5,"gammaadj":2.7,"wave_mode":5,"modwavealphabyvolume":1,"wave_a":1.714,"wave_scale":1.139,"wave_smoothing":0.1,"warpscale":1.331,"zoom":1.004,"rot":-0.014,"warp":0.02944,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.ang=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.wave_r+=.35*(.6*Math.sin(3.98*a.time)+.4*Math.sin(11.047*a.time));a.wave_g+=.35*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.wave_b+=.35*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.cx+=.11*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.cy+=.11*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.dx+=.005*(.6*Math.sin(.173*a.time)+.4*Math.sin(.223*a.time));a.decay-=.01*equal(mod(a.frame,20),0);a.wave_x=.5+div(.25*Math.cos(2*a.time),a.aspecty);a.wave_y=\n.5+div(.25*Math.sin(2*a.time),a.aspectx);a.ang=2*a.time;a.q1=Math.cos(a.ang);a.q2=Math.sin(a.ang);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(3.980*time) + 0.40*sin(11.047*time) );\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\ndx = dx + 0.005*( 0.60*sin(0.173*time) + 0.40*sin(0.223*time) );\ndecay = decay - 0.01*equal(frame%20,0);\nwave_x = 0.5 + 0.25*cos(time*2)/aspecty;\nwave_y = 0.5 + 0.25*sin(time*2)/aspectx;\n\nang = time*2;\nq1 = cos(ang);\nq2 = sin(ang);","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 delta2_1;\n  vec2 uv2_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4.x = bass;\n  tmpvar_4.y = treb;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((texture (sampler_main, (\n    mix (uv, uv_orig, vec2(-1.0, -1.0))\n   + texsize.zw)).xy - 0.37) * (0.005 + (0.045 * \n    clamp ((tmpvar_4 - 1.0), 0.0, 1.0)\n  )));\n  uv2_2.x = (uv.x + ((tmpvar_5.x * q1) + (tmpvar_5.y * q2)));\n  uv2_2.y = (uv.y + ((tmpvar_5.x * q2) - (tmpvar_5.y * q1)));\n  delta2_1 = (texsize.zw * 4.0);\n  vec2 tmpvar_6;\n  tmpvar_6.y = 0.0;\n  tmpvar_6.x = delta2_1.x;\n  vec2 tmpvar_7;\n  tmpvar_7.y = 0.0;\n  tmpvar_7.x = delta2_1.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = 0.0;\n  tmpvar_8.y = delta2_1.y;\n  vec2 tmpvar_9;\n  tmpvar_9.x = 0.0;\n  tmpvar_9.y = delta2_1.y;\n  ret_3 = (texture (sampler_main, uv2_2).xyz * (1.0 - (\n    pow ((abs((\n      ((texture (sampler_blur1, (uv - tmpvar_6)).xyz * scale1) + bias1)\n     - \n      ((texture (sampler_blur1, (uv + tmpvar_7)).xyz * scale1) + bias1)\n    )) * (1.0 + abs(\n      (((texture (sampler_blur1, (uv - tmpvar_8)).xyz * scale1) + bias1) - ((texture (sampler_blur1, (uv + tmpvar_9)).xyz * scale1) + bias1))\n    ))), vec3(4.0, 4.0, 4.0))\n   * 67.0)));\n  ret_3 = (ret_3 - 0.001);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_3;\n  ret = tmpvar_10.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"shader_body\n{\n    // PAINTERLY EFFECT:\n    float2 t = 0.005 + 0.045*saturate(float2(bass,treb)-1);\n    float2 uv2 = uv;\n    float2 delta2 = texsize.zw*float2(1,1);\n    float3 blurry_color = tex2D( sampler_main, \n        lerp(uv,uv_orig,-1) + delta2 ).xyz;\n    float2 v = (blurry_color.xy-0.37) * t;\n      //uv2 += v;\n      // instead, add a rotated version:\n      uv2.x += v.x*q1 + v.y*q2;\n      uv2.y += v.x*q2 - v.y*q1;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv2 ).xyz;\n//flower fx:\ndelta2*=4;\nfloat3 a=GetBlur1(uv-float2(delta2.x,0));\nfloat3 b=GetBlur1(uv+float2(delta2.x,0));    \nfloat3 c=GetBlur1(uv-float2(0,delta2.y));\nfloat3 d=GetBlur1(uv+float2(0,delta2.y));\nfloat3 dx=abs(a-b);\nfloat3 dy=abs(c-d);\n//ret=lerp(ret*1.2,(dx+dy),0.2);\nret*=1-pow(((0+dx)*(1+dy)),4)*67;  \n  // darken over time\n    //ret -= 0.1*(0.5-tex2D(sampler_noise_lq,uv*9*rand_frame.xy));    \n    ret -= 0.001;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    //ret = (ret-0.1)*1.90; //old gamma effect    \n}"}