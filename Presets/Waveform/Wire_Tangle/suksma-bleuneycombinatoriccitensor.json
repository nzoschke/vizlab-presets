{"version":2,"baseVals":{"rating":5,"gammaadj":2.28,"decay":0.99,"wave_mode":3,"additivewave":1,"wrap":0,"darken_center":1,"wave_a":5.6,"wave_scale":4.603,"wave_smoothing":0.9,"warpanimspeed":100,"warpscale":0.01,"zoomexp":0.04914,"zoom":0.99951,"rot":1,"dx":0.2,"warp":1.86831,"sx":0.99817,"wave_r":0.25,"wave_g":0.25,"wave_b":0.9,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.sx=a.treb;a.sy=a.bass;","pixel_eqs_str":"a.wave_r=Math.abs(Math.sin(a.time));a.wave_g=Math.abs(Math.sin(a.time+.233));a.wave_b=Math.abs(Math.sin(a.time+.333));","init_eqs_eel":"","frame_eqs_eel":"sx=treb;\nsy=bass;","pixel_eqs_eel":"wave_r=abs(sin(time));\nwave_g=abs(sin(time+.233));\nwave_b=abs(sin(time+.333));","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_4);\n  tmpvar_5[uint(0)].y = sin(tmpvar_4);\n  tmpvar_5[1u].x = -(sin(tmpvar_4));\n  tmpvar_5[1u].y = cos(tmpvar_4);\n  uv6_2 = (tmpvar_3 * tmpvar_5);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_3)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_6;\n  tmpvar_6 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_7.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_7 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_7, tmpvar_7))\n   * tmpvar_6)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((crisp_1 - \n    (dot (tmpvar_6, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_blur1, uv);\n  ret_1 = (mix (vec3((\n    ((tmpvar_3.xyz * scale1) + bias1)\n  .x + \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  .x)), tmpvar_2.xxx, pow (tmpvar_2.xxx, vec3(0.5, 0.5, 0.5))) * 2.7);\n  vec2 tmpvar_4;\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \n    ((tmpvar_3.xyz * scale1) + bias1)\n  .zzz).xy) + 0.5);\n  vec3 tmpvar_5;\n  tmpvar_5 = (ret_1 + clamp ((\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    ((1.0 - ((tmpvar_3.xyz * scale1) + bias1).x) - ret_1.x)\n  ), 0.0, 1.0));\n  ret_1 = (((\n    pow ((tmpvar_5 + clamp ((\n      pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\n     * \n      ((1.0 - ((tmpvar_3.xyz * scale1) + bias1).x) - tmpvar_5.x)\n    ), 0.0, 1.0)), vec3(3.0, 0.95, 0.6))\n   * 1.25) - 0.25) - tmpvar_2.yyy);\n  ret_1 = (ret_1 * ret_1);\n  ret_1 = (ret_1 - 0.04);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"float3 color, mus;\nfloat dx,dy;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\n\nfloat2 uv1 = (uv-.5);\nfloat2 uv6 = uv1;\n\nfloat rota = lum(tex2D (sampler_noise_hq,uv/4))*q31;\n\nuv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));\nuv6 += sin(q32*uv1);\nmus = .2/(sqrt(uv6.x)+.2);\n\nmus *= float3 (1.1,1,.95);\nmus *= .9+.1*tex2D (sampler_noise_hq,uv);\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (0.005,0);\nfloat2 ver = float2 (0,.005);\n\nfloat dx = lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\n\nfloat2 zz = float2 (dx,dy);\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\nfloat3 crisp2 = tex2D(sampler_main,uv);\ncrisp += crisp2/2;\ncrisp *= .67;\ncrisp +=.08 * mus - length(zz)*blur;\n\nfloat3 ret1 = crisp - lum(blur)*.04;\nret = ret1 * .99 -  .04 ;\n}","comp_hlsl":"shader_body\n{\n\nfloat2 uvm = uv;\nret = tex2D(sampler_main, uvm).x,\n\nret = lerp (\nGetBlur1(uvm).x + GetBlur3(uvm).x,\nret,\npow(ret,.5));\n\nret *= 2.7;\n\nfloat2 uv3 = (uv-.5)*(1-GetBlur1(uvm).zzz)+.5;\n\nret += saturate(pow(tex2D(sampler_main, uv3).zzz,.5)*(1-GetBlur1(uvm).x -ret.x)),\nret += saturate(pow(GetBlur1(uv3).zzz,.5)*(1-GetBlur1(uvm).x -ret.x)),\n  \nret = pow(ret,float3(3,.95,.6))*1.25 -.25;\nret -= tex2D(sampler_main, uvm).yyy;\nret *= ret;\n \nret-= .04;\n//ret = pow(ret,float3(.5,1,2));\n//ret *= ret;\n//ret += tex2D(sampler_main, uvm).yyy*2,\n\n}"}