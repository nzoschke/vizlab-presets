{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.535,"wave_smoothing":0,"wave_mystery":-0.48,"modwavealphastart":1,"modwavealphaend":1.1,"warpanimspeed":2.699,"warpscale":2.518,"zoomexp":13.66864,"zoom":1.00499,"warp":0.24952,"wave_g":0.65,"wave_b":0,"mv_x":6.4,"mv_y":48,"mv_dx":0.5,"mv_dy":0.5,"mv_l":5,"mv_r":0.014,"mv_g":0.872,"mv_b":0.522,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":0.7463,"tex_zoom":0.94204,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.val=0;","frame_eqs_str":"a.ang=.5*Math.sin(a.time)+.5;a.val=3;a.a2=.33*a.val;a.a=.33*a.val;a.rad=.4*Math.cos(.3*a.time)+.65;a.x=.25*Math.sin(.25*a.time)+.5;a.y=.25*Math.cos(.45*a.time)+.5;","init_eqs_eel":"","frame_eqs_eel":"ang=sin(time)*.5+.5;\nval=3;\na2=val*.33;\na=val*.33;\nrad=cos(time*.3)*.4+0.65;\nx=sin(time*.25)*.25+.5;\ny=cos(time*.45)*.25+.5;\n\n\n"},{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":0.7463,"tex_zoom":0.94204,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.val=0;","frame_eqs_str":"a.ang=.5*Math.cos(.3*a.time)+.5;a.val=3;a.a2=.33*a.val;a.a=.33*a.val;a.rad=.4*Math.sin(.3*a.time)+.65;a.x=.25*Math.cos(.25*a.time)+.5;a.y=.25*Math.sin(.45*a.time)+.5;","init_eqs_eel":"","frame_eqs_eel":"ang=cos(time*.3)*.5+.5;\nval=3;\na2=val*.33;\na=val*.33;\nrad=sin(time*.3)*.4+0.65;\nx=cos(time*.25)*.25+.5;\ny=sin(time*.45)*.25+.5;\n\n\n"},{"baseVals":{"enabled":1,"thickoutline":1,"rad":0.36456,"r":0,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.h2=0;a.vr=0;a.vg=0;a.vb=0;a.dist=0;a.maat=0;","frame_eqs_str":"a.h2+=.8*above(a.treb,1.32)*.9;a.vr=.5*Math.sin(.8*a.h2)+.5;a.vg=.5*Math.sin(.5*a.h2)+.5;a.vb=.5*Math.sin(.1*a.h2)+.5;a.g=a.vg;a.r=a.vr;a.b=a.vb;a.g2=a.g;a.r2=a.r;a.b2=a.b;a.dist=.01*mod(a.frame,100);a.maat+=above(a.bass_att,1.5);a.maat*=below(a.maat,16);a.x=.00001<Math.abs(below(a.maat,8))?.00001<Math.abs(below(a.maat,4))?a.dist:1-a.dist:a.x;a.y=.00001<Math.abs(above(a.maat,8))?.00001<Math.abs(above(a.maat,4))?a.dist:1-a.dist:a.y;","init_eqs_eel":"","frame_eqs_eel":"\nh2=h2+(above(treb,1.32)*0.8)*.9;\nvr=sin(h2*.8)*.5+.5;\nvg=sin(h2*.5)*.5+.5;\nvb=sin(h2*.1)*.5+.5;\n\ng=vg;\nr=vr;\nb=vb;\ng2=g;\nr2=r;\nb2=b;\ndist=(frame%100)*.01;\nmaat=maat+(above(bass_att,1.5));\nmaat=below(maat,16)*maat;\nx=if(below(maat,8),if(below(maat,4),dist,1-dist),x);\ny=if(above(maat,8),if(above(maat,4),dist,1-dist),y);"},{"baseVals":{"thickoutline":1,"textured":1,"rad":0.36456,"r":0,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\nh2=h2+(above(treb,1.32)*0.8)*.9;\nvr=sin(h2*.8)*.5+.5;\nvg=sin(h2*.5)*.5+.5;\nvb=sin(h2*.1)*.5+.5;\n\ng=vg;\nr=vr;\nb=vb;\ng2=g;\nr2=r;\nb2=b;\ndist=(frame%100)*.01;\nmaat=maat+(above(bass_att,1.5));\nmaat=below(maat,16)*maat;\ny=if(below(maat,8),if(below(maat,4),dist,1-dist),y);\nx=if(above(maat,8),if(above(maat,4),dist,1-dist),x);","init_eqs_eel":"","frame_eqs_eel":"\nh2=h2+(above(treb,1.32)*0.8)*.9;\nvr=sin(h2*.8)*.5+.5;\nvg=sin(h2*.5)*.5+.5;\nvb=sin(h2*.1)*.5+.5;\n\ng=vg;\nr=vr;\nb=vb;\ng2=g;\nr2=r;\nb2=b;\ndist=(frame%100)*.01;\nmaat=maat+(above(bass_att,1.5));\nmaat=below(maat,16)*maat;\ny=if(below(maat,8),if(below(maat,4),dist,1-dist),y);\nx=if(above(maat,8),if(above(maat,4),dist,1-dist),x);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.q1=.0003*pow(1+1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,6);a.monitor=a.q1;a.wave_r+=.5*Math.sin(.565*a.time);a.wave_g+=.5*Math.sin(.615*a.time);a.wave_b+=.5*Math.sin(.665*a.time);","pixel_eqs_str":"a.zoom+=.025;a.rot+=.05*Math.sin(100*a.fps)*a.q1;","init_eqs_eel":"","frame_eqs_eel":"q1 = 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\nmonitor = q1;\nwave_r = wave_r + 0.5*sin(time*0.565);\nwave_g = wave_g + 0.5*sin(time*0.615);\nwave_b = wave_b + 0.5*sin(time*0.665);","pixel_eqs_eel":"zoom = zoom + 0.025;\nrot = rot + 0.05*sin(fps*100)*q1;","warp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.5 + ((uv - 0.5) * 1.002));\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 8.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((2.0 * \n    ((texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec3 tmpvar_5;\n  tmpvar_5 = (((2.0 * \n    ((texture (sampler_blur1, (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n  )) * 0.5);\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.x;\n  tmpvar_6.y = tmpvar_5.x;\n  vec2 tmpvar_7;\n  tmpvar_7 = fract(((0.5 + \n    (uv_1 - 0.5)\n  ) - (tmpvar_6 * texsize.zw)));\n  ret_2.x = texture (sampler_main, tmpvar_7).x;\n  ret_2.x = (ret_2.x + ((\n    ((2.0 * ret_2.x) - (2.0 * ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)))\n  .x * 0.2) + 0.006));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_5.x;\n  tmpvar_8.y = -(tmpvar_4.x);\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_4.z;\n  tmpvar_9.y = tmpvar_5.z;\n  ret_2.z = max ((clamp (\n    (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1).x - 0.3)\n  , 0.0, 1.0) * 2.0), (texture (sampler_fc_main, (\n    (uv_1 - ((tmpvar_8 * texsize.zw) * 8.0))\n   + \n    ((tmpvar_9 * texsize.zw) * 4.0)\n  )).z - 0.008));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.y;\n  tmpvar_10.y = tmpvar_5.y;\n  ret_2.y = max (ret_2.x, (texture (sampler_fc_main, (uv_1 + \n    (tmpvar_10 * texsize.zw)\n  )).y - 0.016));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_2;\n  ret = tmpvar_11.xyz;\n }","comp":" shader_body { \n  float ang2_1;\n  vec2 uv2_2;\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\n  float tmpvar_3;\n  tmpvar_3 = (3.0 + floor((rand_preset.z * 5.95)));\n  ang2_1 = (fract((ang2_1 * tmpvar_3)) / tmpvar_3);\n  ang2_1 = (abs((ang2_1 - \n    (0.5 / tmpvar_3)\n  )) * 6.283185);\n  vec2 tmpvar_4;\n  tmpvar_4.x = cos(ang2_1);\n  tmpvar_4.y = sin(ang2_1);\n  uv2_2 = (0.5 + ((\n    (0.4 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\n   * tmpvar_4) * texsize.zw));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (((texture (sampler_main, uv2_2).y * vec3(0.6, 0.2, 1.5)) + (texture (sampler_fw_main, uv2_2).x * vec3(1.0, 0.66, 0.0))) - (texture (sampler_main, uv2_2).z * vec3(-0.6, 1.0, 2.0)));\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body\n{\nuv = 0.5 + (uv-0.5)*1.002;\n\n    float2 d = texsize.zw*8;\n    float3 dx = ( 2*GetBlur1(uv+float2(1,0)*d)-2*GetBlur1(uv-float2(1,0)*d) )*0.5;\n    float3 dy = ( 2*GetBlur1(uv+float2(0,1)*d)-2*GetBlur1(uv-float2(0,1)*d) )*0.5;\n\nfloat2 uv_red = 0.5 + (uv-0.5) - float2(0,0)*texsize.zw - float2(dx.x,dy.x)*texsize.zw;\n\nuv_red = frac(uv_red); // fix for the old Radeons\n    ret.x = tex2D( sampler_main, uv_red ).x;\n    ret.x += (2*ret.x - 2*GetBlur2(uv_red)).x*0.2 + 0.006;\n\n\nfloat2 uv_blue = uv - float2(dy.x,-dx.x)*texsize.zw*8 + float2(dx.z,dy.z)*texsize.zw*4;\nret.z = max(saturate(GetBlur1(uv).x-0.3)*2, tex2d(sampler_fc_main,uv_blue + float2(2,1)*texsize.zw*0).z - 0.008);\n\nfloat2 uv_green = uv + float2(dx.y,dy.y)*texsize.zw*1;\nret.y = max(ret.x, tex2d(sampler_fc_main, uv_green).y - 0.016);\n\n\n}","comp_hlsl":"shader_body\n{\n    float rad_lq = rad * length(texsize.xy)*0.5;\n    float ang_lq = ang;\n    float2 uv_temp1 = (uv - 0.5) * texsize.xy;\n    float rad_hq = length(uv_temp1);\n    float ang_hq = atan2(-uv_temp1.y, uv_temp1.x);\n\n    float2 uv2 = (uv - 0.5);\n    float rad2 = rad_lq*0.8;\n    float ang2 = ang_lq * M_INV_PI_2;\n\n        // ROTATION OVER TIME\n        #if 1\n          ang2 += time*0.025;   //rotate over time\n        #endif\n\n        // FIN TYPE\n        float fins = 3 + floor(rand_preset.z*5.95);\n        #if 1     // SHARP FINS\n          ang2 = frac(ang2*fins)/fins;\n              // ENABLE THIS TO MAKE THE FINS ALTERNATE: (seamless!)\n              ang2 = abs(ang2 - 0.5/fins);\n        #else     // COSINE FINS - a bit slow\n          ang2 = cos(ang2*M_PI_2*fins) * 0.023;\n        #endif\n\n        // RADIAL KALEIDOSCOPING?\n        #if 0\n          rad2 *= g_fTexSize.z;\n            // choose one:\n            //rad2 = lerp(rad2, frac(rad2*3)/3.0, 0.5);\n            rad2 = cos(rad2*5);\n            //rad2 = sqrt(rad2)*0.5;\n            //rad2 += abs(frac(rad2*7)-0.5)/7.0 * 1.15;  // stepifier\n            //rad2 += cos(rad2*61)*0.02;\n          rad2 *= g_fTexSize.x;\n        #endif\n\n    ang2 *= M_PI_2;\n    uv2 = 0.5 + rad2*float2(cos(ang2),sin(ang2))*texsize.zw;\n\n    ret = tex2D(sampler_main,uv2).y*float3(0.6,0.2,1.5) + tex2D(sampler_fw_main,uv2).x*float3(1,0.66,0) - tex2D(sampler_main,uv2).z*float3(-0.6,1,2);\n}"}