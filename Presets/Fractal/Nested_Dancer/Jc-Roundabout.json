{"version":2,"baseVals":{"rating":5,"decay":0.96,"echo_zoom":1.007,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.02,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"fshader":1,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":32,"mv_y":24,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":1,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":1.67089,"tex_ang":0.94248,"tex_zoom":0.53426,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0.17},"init_eqs_str":"a.flux=0;a.q5=0;a.fluxs=0;a.advflux=0;a.q3=0;a.adv=0;a.advs=0;","frame_eqs_str":"a.flux=9*a.q5;a.fluxs=Math.max(a.flux,0);a.fluxs=Math.min(a.fluxs,1);a.advflux=a.q3*a.fluxs+-a.q3*(1-a.fluxs);a.adv+=a.advflux;a.advs=div(a.adv,256);a.ang=a.advs;a.rad=1.671+div(a.q3,25);","init_eqs_eel":"","frame_eqs_eel":"flux=q5*9;\nfluxs=max(flux,0);\nfluxs=min(fluxs,1);\nadvflux=(q3*fluxs) + (-q3 * (1-fluxs));\nadv=adv+advflux;\nadvs=adv/256;\n\n\nang=advs;\nrad=1.671 + q3/25"},{"baseVals":{"sides":3,"x":0.35,"g":1,"b":1,"g2":0,"b2":0.1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"y=0.1 + q2*0.4;\nrad=q2/2;\nang=-q2*2","init_eqs_eel":"","frame_eqs_eel":"y=0.1 + q2*0.4;\nrad=q2/2;\nang=-q2*2"},{"baseVals":{"sides":3,"x":0.59,"g":0.97,"b":0.96,"r2":0.1,"g2":0.05,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"y=0.1 + q3*0.4;\nrad=q3/2;\nang=q3*5","init_eqs_eel":"","frame_eqs_eel":"y=0.1 + q3*0.4;\nrad=q3/2;\nang=q3*5"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"x":0.84,"r":0.98,"g":1,"b":0.98,"a":0.3,"g2":0.09,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.x=.4*Math.sin(div(a.time,2))+.5;a.y=.4*Math.sin(a.time)+.5;a.rad=div(a.q1*a.q1,2);a.ang=4*a.q1;a.r=.7+.5*Math.sin(div(a.time,2));a.g=.7+.5*Math.sin(div(a.time,2)+2);a.b=.7+.5*Math.sin(div(a.time,2)+4);","init_eqs_eel":"","frame_eqs_eel":"x=sin(time/2)*0.4 + 0.5;\ny=sin(time)*0.4+0.5;\nrad=(q1*q1)/2;;\nang=q1*4;\n\nr=0.70 + (sin(time/2))*0.50;\ng=0.70 + (sin(time/2 + 2)) * 0.50;\nb=0.70 + (sin(time/2 + 4)) * 0.5"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.speedinv=0;a.q1=0;a.q5=0;a.flux=0;a.q4=0;a.q2=0;a.qb=0;a.speed=0;a.qc=0;a.q3=0;a.qa=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.decay=.99;a.zoom=1;a.speed=.8;a.speedinv=1-a.speed;a.q1=a.qa*a.speed+a.bass*a.speedinv;a.q2=a.qb*a.speed+a.mid*a.speedinv;a.q3=a.qc*a.speed+a.treb*a.speedinv;a.qa=a.q1;a.qb=a.q2;a.qc=a.q3;a.flux=Math.sin(div(a.time,2));a.q4=.5*a.flux+.5;a.q5=a.flux;","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0;\nq1=0;q2=0;q3=0","frame_eqs_eel":"decay=0.99;\nzoom=1.000;\nspeed=0.80;\nspeedinv=1-speed;\nq1=(qa*speed + bass*speedinv);\nq2=(qb*speed + mid *speedinv);\nq3=(qc*speed + treb*speedinv);\nqa=q1;\nqb=q2;\nqc=q3;\nflux=sin(time/2);\nq4=flux * 0.5 + 0.5;\nq5=flux","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.z;\n  tmpvar_5.y = tmpvar_4.z;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\n  ret_1.z = (((texture (sampler_main, tmpvar_6).z - \n    ((texture (sampler_main, tmpvar_6).z - ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3).z) * 0.02)\n  ) - 0.008) + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\n  ).xyz - 0.5) * 0.1)).x;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.x;\n  tmpvar_7.y = tmpvar_4.x;\n  vec2 tmpvar_8;\n  tmpvar_8 = ((0.5 + (uv - 0.5)) - (tmpvar_7 * texsize.zw));\n  ret_1.x = texture (sampler_main, tmpvar_8).x;\n  ret_1.x = (ret_1.x + ((\n    (ret_1.x - ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3))\n  .x * 0.4) + 0.006));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.x;\n  tmpvar_9.y = tmpvar_4.x;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_3.y;\n  tmpvar_10.y = tmpvar_4.y;\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_3.z;\n  tmpvar_11.y = tmpvar_4.z;\n  ret_1.y = texture (sampler_fc_main, (((uv - \n    ((tmpvar_9 * texsize.zw) * 8.0)\n  ) + (\n    (tmpvar_10 * texsize.zw)\n   * 4.0)) + ((tmpvar_11 * texsize.zw) * 8.0))).y;\n  ret_1.y = (ret_1.y * (1.0 + (ret_1.x * 0.1)));\n  ret_1.y = (ret_1.y - (0.004 + (\n    clamp (ret_1.z, 0.0, 1.0)\n   * 0.012)));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_1;\n  ret = tmpvar_12.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz * 2.0);\n  ret_1 = (ret_1 * hue_shader);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw * 8;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1 + rand_frame.xy;\n\nfloat2 uv_blue = lerp(uv_orig,uv,1) + float2(dx.z,dy.z)*texsize.zw*4;\nret.z = GetPixel(uv_blue).z  - (GetPixel(uv_blue).z - GetBlur3(uv_blue).z)*0.02 - 0.008\n            +(tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0.1;\n\n\nfloat2 uv_red = 0.5 + (uv-0.5) - float2(0,0)*texsize.zw - float2(dx.x,dy.x)*texsize.zw;\nret.x = tex2D( sampler_main, uv_red ).x;\nret.x += (ret.x - GetBlur3(uv_red)).x*0.4 + 0.006;\n\n\nfloat2 uv_green = lerp(uv_orig,uv,1) - float2(dx.x,dy.x)*texsize.zw*8\n                                       + float2(dx.y,dy.y)*texsize.zw*4\n                                       + float2(dx.z,dy.z)*texsize.zw*8;\nret.y = tex2d(sampler_fc_main,uv_green).y;\nret.y *= 1 + ret.x*0.1;\nret.y -= 0.004 + saturate(ret.z)*0.012;\n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret *= 2.00; //gamma\n    ret *= hue_shader; //old hue shader effect\n}"}