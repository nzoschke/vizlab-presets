{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_dots":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.005,"wave_scale":10.437,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.11,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"rad":1.30581,"ang":2.32478,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0.5,"g":1,"b":0.9,"a":0.03,"r2":0.83,"g2":0.93,"b2":0.8,"a2":0.06,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":1.26458,"tex_ang":1.4451,"tex_zoom":1.49331,"r":0.7,"g":0.4,"a":0.01,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=div(Math.floor(rand(10)),10);a.y=div(Math.floor(rand(10)),10);a.r=div(Math.floor(rand(4)),3);a.g=div(Math.floor(rand(4)),3);a.b=div(Math.floor(rand(4)),3);a.rad=.1;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(10))/10;\ny = int(rand(10))/10;\n\nr = int(rand(4))/3;\ng = int(rand(4))/3;\nb = int(rand(4))/3;\n\nrad = .1;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.5,"a":0.9,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"t2 = t2 + bass_att;","point_eqs_str":"k1 = (sample*100)%2;\n\nxi = value1*k1 + xi*(1-k1);\nyi = value2*(1-k1) + yi*k1;\n\nx = .5 + xi/2;\ny = .5 + yi/2;\n\n\na = bass + mid + treb ;\na = a/10 * sqrt(xi*xi+yi*yi);","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%2;\n\nxi = value1*k1 + xi*(1-k1);\nyi = value2*(1-k1) + yi*k1;\n\nx = .5 + xi/2;\ny = .5 + yi/2;\n\n\na = bass + mid + treb ;\na = a/10 * sqrt(xi*xi+yi*yi);"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = q4;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_str":"x0 = .5 + (-1) * q1/1;\ny0 = .0 - (-1)* .5;\n\n//x0 = .5; y0 = .5;\n\nk1 = int(100.0*sample);\nk2 = int(100.0*sample+1);\nk1 = k1%2;\nf1 = int(rand(100))/200-.25;\nf2 = int(rand(100))/200-.25;\n\nx = x0 + k1* f1;;\ny = y0 + k1* f2;\na = k2%2 /4;","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_eel":"x0 = .5 + (-1) * q1/1;\ny0 = .0 - (-1)* .5;\n\n//x0 = .5; y0 = .5;\n\nk1 = int(100.0*sample);\nk2 = int(100.0*sample+1);\nk1 = k1%2;\nf1 = int(rand(100))/200-.25;\nf2 = int(rand(100))/200-.25;\n\nx = x0 + k1* f1;;\ny = y0 + k1* f2;\na = k2%2 /4;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.index2=0;a.q25=0;a.index=0;a.q22=0;a.q21=0;a.q29=0;a.movex=0;a.q1=0;a.dec_med=0;a.index3=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.rott=0;a.mq23=0;a.is_beat=0;a.q31=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q10=0;a.mq30=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.movez=0;a.mq27=0;a.mq25=0;a.mq22=0;a.beat=0;a.vol=0;a.p1=0;a.peak=0;a.mq26=0;a.q2=0;a.q27=0;a.q3=0;a.t0=0;a.q28=0;a.q30=0;a.q20=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq30=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq30;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q30=a.mq30;a.monitor=a.mq1;a.dec_med=pow(.7,div(30,a.fps));a.dec_slow=pow(.96,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.2+a.avg+\na.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass_att+a.mid_att+a.treb_att;a.q27=a.index+1;a.q28=a.index2;a.k1=a.is_beat*equal(mod(a.index,2),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+\n(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,2);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.vol=a.vol*a.dec_slow+a.q26*(1-a.dec_slow)+a.q24*a.q1;a.q10=a.q27*a.q28;a.movex+=div(.03*30,a.fps);a.q29=a.movex;a.movez+=div(2.1,a.fps);a.q30=a.movez;a.q31=6+4*(1+Math.sin(div(a.time,7)));a.zoom=1;a.dy=0;a.dx=0;a.warp=0;a.rot=0;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq30=if(above(chng,cthr),rand(1)*.3,mq30);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\n\nmonitor=mq1;\ndec_med = pow (0.7, 30/fps);\ndec_slow = pow (0.96, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%4;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att ;\nq27 = index + 1;\nq28 = index2;\n\n\nk1 =  is_beat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/2;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n\nvol = vol*dec_slow + q26 * (1-dec_slow) + q24*q1;\nq10 = q27*q28;;\n\n\nmovex = movex + .03*30/fps;\nq29 = movex;\nmovez = movez + .07*30/fps;\nq30 = movez;\n\nq31 = 6 + 4*(1+sin(time/7));\n\nzoom = 1;\ndy = .00;\ndx = .0;\nwarp = 0;\nrot = .0;","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float x_5;\n  x_5 = (tmpvar_4.x * tmpvar_4.y);\n  float tmpvar_6;\n  tmpvar_6 = (124.0 * sqrt((x_5 * x_5)));\n  uv_1 = (uv + ((0.02 * \n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  ) * rad));\n  uv_1 = (uv_1 - (clamp (\n    ((sin(tmpvar_6) / cos(tmpvar_6)) * normalize(tmpvar_4))\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 8.0)\n   + \n    (rand_frame * 6.0)\n  .xy)));\n  xlat_mutablemus = (vec3((0.1 / sqrt(\n    dot (uv6_2, uv6_2)\n  ))) * (0.3 * (1.0 + roam_cos)).xyz);\n  ret_3 = (((texture (sampler_main, \n    (((uv_1 - 0.5) * (1.0 + (0.2 / tmpvar_6))) + 0.5)\n  ).xyz + \n    (0.1 * xlat_mutablemus)\n  ) * 0.99) - 0.02);\n  vec3 tmpvar_7;\n  tmpvar_7.x = xlat_mutablemus.y;\n  tmpvar_7.y = uv6_2.x;\n  tmpvar_7.z = uv_1.x;\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_7) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_3.x > (q21 * roam_cos.y)) && (ret_3.x <= (q24 * roam_sin.x)))) {\n    ret_3.y = (ret_3.y - (tmpvar_8.x * 0.5));\n  };\n  if (((ret_3.y > (q22 * roam_sin.x)) && (ret_3.y <= (q25 * roam_cos.x)))) {\n    ret_3.z = (ret_3.z - (tmpvar_8.y * 0.5));\n  };\n  if (((ret_3.z > (q23 * roam_cos.x)) && (ret_3.z <= (q26 * roam_sin.y)))) {\n    ret_3.x = (ret_3.x - (tmpvar_8.z * 0.5));\n  };\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_3;\n  ret = tmpvar_9.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\n shader_body { \n  vec2 uv_1;\n  float t_rel_2;\n  float inten_4;\n  float dist_5;\n  float ang2_6;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_5 = 1.0;\n  inten_4 = 1.0;\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\n  t_rel_2 = q29;\n  for (float n_3 = 0.0; n_3 <= 5.0; n_3 += 1.0) {\n    ang2_6 = (((6.28 * n_3) / 5.0) + q29);\n    float tmpvar_7;\n    tmpvar_7 = cos(ang2_6);\n    float tmpvar_8;\n    tmpvar_8 = sin(ang2_6);\n    xlat_mutableuv2.x = ((uv_1.x * tmpvar_7) - (uv_1.y * tmpvar_8));\n    xlat_mutableuv2.y = ((uv_1.x * tmpvar_8) + (uv_1.y * tmpvar_7));\n    xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n    dist_5 = (1.0 - fract((\n      (n_3 / 5.0)\n     + t_rel_2)));\n    inten_4 = ((4.0 * dist_5) * (1.0 - (dist_5 * dist_5)));\n    vec2 tmpvar_9;\n    tmpvar_9.x = q1;\n    tmpvar_9.y = q2;\n    xlat_mutableuv3 = (((\n      (3.0 * xlat_mutableuv2)\n     * dist_5) + 0.5) + (0.1 * tmpvar_9));\n    xlat_mutableblur = (((texture (sampler_blur1, \n      fract(xlat_mutableuv3)\n    ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\n    vec3 tmpvar_10;\n    tmpvar_10 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_4));\n    xlat_mutableret1 = tmpvar_10;\n    vec2 tmpvar_11;\n    tmpvar_11.x = -(n_3);\n    tmpvar_11.y = n_3;\n    vec3 tmpvar_12;\n    tmpvar_12.xy = (xlat_mutableuv3 * tmpvar_11);\n    tmpvar_12.z = (xlat_mutableuv2.y - n_3);\n    vec4 tmpvar_13;\n    tmpvar_13 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_12) * (\n      (q28 * texsize.xyy)\n     * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n    if (((tmpvar_10.x > (q26 * roam_cos.y)) && (tmpvar_10.x <= (q23 * roam_sin.x)))) {\n      xlat_mutableret1.z = (tmpvar_10.z - (tmpvar_13.x * 0.5));\n    };\n    if (((tmpvar_10.y > (q25 * roam_sin.x)) && (tmpvar_10.y <= (q22 * roam_cos.x)))) {\n      xlat_mutableret1.x = (tmpvar_10.x - (tmpvar_13.y * 0.5));\n    };\n    if (((xlat_mutableret1.z > (q24 * roam_cos.x)) && (xlat_mutableret1.z <= (q21 * roam_sin.y)))) {\n      xlat_mutableret1.y = (tmpvar_10.y - (tmpvar_13.z * 0.5));\n    };\n  };\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = (xlat_mutableret1 - 0.1);\n  ret = tmpvar_14.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\nfloat2 uv6 = uv1;\nfloat z = 124*length(((uv1.x)*(uv1.y)));\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-2,2);\nuv += .02*lum(GetBlur1(uv))*rad;\nuv -= rs/20;\n\nuv6 = .4*sin(uv*8+rand_frame*6);\nmus = .1/(length(uv6));\nmus *= .3*(1+roam_cos);\n//mus = .2;\n\nfloat3 crisp= tex2D(sampler_main,(uv-.5)*(1+.2/z)+.5);\n\nfloat3 ret1 = crisp + .1*mus;\n\nret = ret1*.99-.02;\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((float3(mus.y,uv6.x,uv.x)*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; \nif(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z -= (noise9).y*.5; \nif(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; \n}","comp_hlsl":"float3 ret1, neu, crisp, blur;\nfloat2 uv2, uv3;\n\nshader_body\n{\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nfloat dist = 1;\nfloat inten = 1;\nfloat mask = 0;\nret1 = 0;\nint anz = 5;\nfloat n = 0;\nfloat t_rel = q29;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz+q29;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    uv2*= aspect.yx;\n\n    dist = 1-frac(n/anz+t_rel); //evtl sqrt !\n\n    inten =  4*dist*(1-dist*dist);\n    uv3 = 3*uv2*dist + 0.5+.1*float2(q1,q2);\n    crisp = GetPixel(uv3);\n    blur = GetBlur1(frac(uv3)) * float3 (.8,.9,1);\n    ret1 = max(ret1,(crisp+blur)*inten);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((float3(uv3.xy*float2(-n,n),uv2.y-n)*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q30 \n                     );\nif(ret1.x> q26*roam_cos.y && ret1.x<= q23*roam_sin.x)ret1.z -= (noise9).x*.5; \nif(ret1.y> q25*roam_sin.x && ret1.y<= q22*roam_cos.x)ret1.x -= (noise9).y*.5; \nif(ret1.z> q24*roam_cos.x && ret1.z<= q21*roam_sin.y)ret1.y -= (noise9).z*.5; \nn++;\n}\nfloat3 ret1 = ret1 ;\nret = ret1-.1;\n}"}