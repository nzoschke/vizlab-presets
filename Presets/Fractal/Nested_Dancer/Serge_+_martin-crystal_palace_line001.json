{"version":2,"baseVals":{"rating":5,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"solarize":1,"wave_a":0.02,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":1.331,"zoomexp":5.42874,"zoom":1.00951,"warp":0.16217,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ib_size":0.26,"mv_x":32,"mv_y":24,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":1,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":1.67089,"tex_ang":0.94248,"tex_zoom":0.53426,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0.17},"init_eqs_str":"a.flux=0;a.q5=0;a.fluxs=0;a.advflux=0;a.q3=0;a.adv=0;a.advs=0;","frame_eqs_str":"a.flux=9*a.q5;a.fluxs=Math.max(a.flux,0);a.fluxs=Math.min(a.fluxs,1);a.advflux=a.q3*a.fluxs+-a.q3*(1-a.fluxs);a.adv+=a.advflux;a.advs=div(a.adv,256);a.ang=a.advs;a.rad=1.671+div(a.q3,25);","init_eqs_eel":"","frame_eqs_eel":"flux=q5*9;\nfluxs=max(flux,0);\nfluxs=min(fluxs,1);\nadvflux=(q3*fluxs) + (-q3 * (1-fluxs));\nadv=adv+advflux;\nadvs=adv/256;\n\n\nang=advs;\nrad=1.671 + q3/25"},{"baseVals":{"sides":3,"x":0.35,"g":1,"b":1,"g2":0,"b2":0.1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"y=0.1 + q2*0.4;\nrad=q2/2;\nang=-q2*2","init_eqs_eel":"","frame_eqs_eel":"y=0.1 + q2*0.4;\nrad=q2/2;\nang=-q2*2"},{"baseVals":{"enabled":1,"sides":3,"x":0.59,"rad":0.44484,"r":0,"r2":0.1,"g2":0.05,"border_a":0},"init_eqs_str":"a.rotator=0;a.dir=0;a.mover=0;a.dir=3;a.mover=0;a.rotator=.255;","frame_eqs_str":"a.ang=a.rotator;a.x=.00001<Math.abs(equal(a.dir,1))?1-a.mover:.00001<Math.abs(equal(a.dir,1.5))?.15:.00001<Math.abs(equal(a.dir,2))?0:.00001<Math.abs(equal(a.dir,2.5))?0:.00001<Math.abs(equal(a.dir,3))?0+a.mover:.00001<Math.abs(equal(a.dir,3.5))?1:(equal(a.dir,4),1);a.y=.00001<Math.abs(equal(a.dir,1))?1:.00001<Math.abs(equal(a.dir,1.5))?1:.00001<Math.abs(equal(a.dir,2))?1-a.mover:.00001<Math.abs(equal(a.dir,2.5))?0:.00001<Math.abs(equal(a.dir,3))?0:.00001<Math.abs(equal(a.dir,\n3.5))?0:.00001<Math.abs(equal(a.dir,4))?0+a.mover:1;a.mover=.00001<Math.abs(equal(a.dir,1))?a.mover+.005:.00001<Math.abs(equal(a.dir,1.5))?0:.00001<Math.abs(equal(a.dir,2))?a.mover+.005:.00001<Math.abs(equal(a.dir,2.5))?0:.00001<Math.abs(equal(a.dir,3))?a.mover+.005:.00001<Math.abs(equal(a.dir,3.5))?0:.00001<Math.abs(equal(a.dir,4))?a.mover+.005:0;a.dir=.00001<Math.abs(equal(a.dir,1))?.00001<Math.abs(above(a.mover,.995))?1.5:a.dir:.00001<Math.abs(equal(a.dir,1.5))?.00001<Math.abs(below(a.rotator,\n-1.29))?2:a.dir:.00001<Math.abs(equal(a.dir,2))?.00001<Math.abs(above(a.mover,.995))?2.5:a.dir:.00001<Math.abs(equal(a.dir,2.5))?.00001<Math.abs(below(a.rotator,-2.85))?3:a.dir:.00001<Math.abs(equal(a.dir,3))?.00001<Math.abs(above(a.mover,.995))?3.5:a.dir:.00001<Math.abs(equal(a.dir,3.5))?.00001<Math.abs(below(a.rotator,-4.44))?4:a.dir:.00001<Math.abs(equal(a.dir,4))?.00001<Math.abs(above(a.mover,.995))?4.5:a.dir:.00001<Math.abs(equal(a.dir,4.5))?.00001<Math.abs(below(a.rotator,-5.94))?1:a.dir:a.dir;\na.rotator=.00001<Math.abs(equal(a.dir,1.5))?.00001<Math.abs(above(a.rotator,-1.31))?a.rotator-.05:a.rotator:.00001<Math.abs(equal(a.dir,2))?-1.3:.00001<Math.abs(equal(a.dir,2.5))?.00001<Math.abs(above(a.rotator,-2.87))?a.rotator-.05:a.rotator:.00001<Math.abs(equal(a.dir,3))?-2.86:.00001<Math.abs(equal(a.dir,3.5))?.00001<Math.abs(above(a.rotator,-4.46))?a.rotator-.05:a.rotator:.00001<Math.abs(equal(a.dir,4))?-4.45:.00001<Math.abs(equal(a.dir,4.5))?.00001<Math.abs(above(a.rotator,-5.97))?a.rotator-\n.05:a.rotator:.00001<Math.abs(equal(a.dir,4))?-5.96:.26;a.b=above(a.mid,1.5);a.r2=above(a.mid,1.5);a.g2=above(a.mid,1.5);a.b2=above(a.mid,1.5);","init_eqs_eel":"dir = 3;\nmover = 0;\nrotator = .255","frame_eqs_eel":"ang = rotator;\nx = if(equal(dir,1),1 - mover,if(equal(dir,1.5),.15,if(equal(dir,2),0,if(equal(dir,2.5),0, if(equal(dir,3),0+mover,if(equal(dir,3.5),1,if(equal(dir,4),1,1)))))));\ny = if(equal(dir,1),1,if(equal(dir,1.5),1,if(equal(dir,2),1 - mover,if(equal(dir,2.5),0, if(equal(dir,3),0,if(equal(dir,3.5),0,if(equal(dir,4),0+mover,1)))))));\nmover = if(equal(dir,1),mover + .005,if(equal(dir,1.5),0,if(equal(dir,2),mover + .005,if(equal(dir,2.5),0, if(equal(dir,3),mover+.005,if(equal(dir,3.5),0,if(equal(dir,4),mover+.005,0)))))));\ndir = if(equal(dir,1),if(above(mover,.995),1.5,dir),if(equal(dir,1.5),if(below(rotator,-1.29),2,dir), if(equal(dir,2),if(above(mover,.995),2.5,dir),if(equal(dir,2.5),if(below(rotator,-2.85),3,dir), if(equal(dir,3),if(above(mover,.995),3.5,dir),if(equal(dir,3.5),if(below(rotator,-4.44),4,dir), if(equal(dir,4),if(above(mover,.995),4.5,dir),if(equal(dir,4.5),if(below(rotator,-5.94),1,dir),dir))))))));\nrotator = if(equal(dir,1.5),if(above(rotator,-1.31),rotator - .05,rotator),if(equal(dir,2),-1.3, if(equal(dir,2.5),if(above(rotator,-2.87),rotator-.05,rotator),if(equal(dir,3),-2.86, if(equal(dir,3.5),if(above(rotator,-4.46),rotator-.05,rotator),if(equal(dir,4),-4.45, if(equal(dir,4.5),if(above(rotator,-5.97),rotator-.05,rotator),if(equal(dir,4),-5.96,.26))))))));\n\n//Ok, enough with the crazy ifs, we got our tram moving, now for some reaction.\n\nb = above(mid,1.5);\nr2 = above(mid,1.5);\ng2 = above(mid,1.5);\nb2 = above(mid,1.5);"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"x":0.84,"r":0.98,"g":1,"b":0.98,"a":0.3,"g2":0.09,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.x=.4*Math.sin(div(a.time,2))+.5;a.y=.4*Math.sin(a.time)+.5;a.rad=div(a.q1*a.q1,2);a.ang=4*a.q1;a.r=.7+.5*Math.sin(div(a.time,2));a.g=.7+.5*Math.sin(div(a.time,2)+2);a.b=.7+.5*Math.sin(div(a.time,2)+4);","init_eqs_eel":"","frame_eqs_eel":"x=sin(time/2)*0.4 + 0.5;\ny=sin(time)*0.4+0.5;\nrad=(q1*q1)/2;;\nang=q1*4;\n\nr=0.70 + (sin(time/2))*0.50;\ng=0.70 + (sin(time/2 + 2)) * 0.50;\nb=0.70 + (sin(time/2 + 4)) * 0.5"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tic=0;a.vt=0;a.des=0;a.q6=0;a.bt=0;a.q1=0;a.q5=0;a.xd=0;a.mid_avg=0;a.dis=0;a.tt=0;a.tin=0;a.bass_avg=0;a.vav=0;a.yd=0;a.an=0;a.q4=0;a.mt=0;a.sz=0;a.ra=0;a.treb_avg=0;a.q2=0;a.q3=0;a.rb=0;","frame_eqs_str":"a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.ra=10;a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.rb=1;a.vav=a.tic*(a.vav*(div(1,a.tic)-a.rb)+a.rb*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb_avg;a.mt+=a.tic*a.mid_avg;a.bt+=a.tic*a.bass_avg;a.vt+=a.tic*(a.treb_avg+a.mid_avg+a.bass_avg)*.33333;a.sz=.2;a.q1=.5+a.sz*Math.sin(.629*\na.tt)-a.sz*Math.sin(.107*a.tt);a.q2=.5+a.sz*Math.sin(.987*a.tt)-a.sz*Math.sin(.456*a.tt);a.q3=.5+a.sz*Math.sin(.654*a.mt)-a.sz*Math.sin(.355*a.mt);a.q4=.5+a.sz*Math.sin(.548*a.mt)-a.sz*Math.sin(.875*a.mt);a.q5=.5+a.sz*Math.sin(.687*a.bt)-a.sz*Math.sin(.318*a.bt);a.q6=.5+a.sz*Math.sin(.465*a.bt)-a.sz*Math.sin(.526*a.bt);","pixel_eqs_str":"a.xd=a.q1-a.x;a.yd=a.q2-a.y;a.dis=pow(a.xd*a.xd+a.yd*a.yd,.5);a.des=1-.7071068*a.dis;a.des=pow(a.des,8)*-a.treb;a.an=Math.acos(div(Math.abs(a.xd),a.dis));a.dx=.07*sign(a.xd)*Math.cos(a.an)*a.des;a.dy=.07*sign(a.yd)*Math.sin(a.an)*a.des;a.dy+=sign(a.xd)*a.treb*.05*Math.cos(a.an)*a.des;a.dx+=sign(a.yd)*a.treb*.05*Math.sin(a.an)*a.des*-1;a.xd=a.q3-a.x;a.yd=a.q4-a.y;a.dis=pow(a.xd*a.xd+a.yd*a.yd,.5);a.des=1-.7071068*a.dis;a.des=pow(a.des,8)*-a.mid;a.an=Math.acos(div(Math.abs(a.xd),\na.dis));a.dx+=.07*sign(a.xd)*Math.cos(a.an)*a.des;a.dy+=.07*sign(a.yd)*Math.sin(a.an)*a.des;a.dy+=sign(a.xd)*a.mid*.05*Math.cos(a.an)*a.des;a.dx+=sign(a.yd)*a.mid*.05*Math.sin(a.an)*a.des*-1;a.xd=a.q5-a.x;a.yd=a.q6-a.y;a.dis=pow(a.xd*a.xd+a.yd*a.yd,.5);a.des=1-.7071068*a.dis;a.des=pow(a.des,8)*-a.bass;a.an=Math.acos(div(Math.abs(a.xd),a.dis));a.dx+=.07*sign(a.xd)*Math.cos(a.an)*a.des;a.dy+=.07*sign(a.yd)*Math.sin(a.an)*a.des;a.dy+=sign(a.xd)*a.bass*.05*Math.cos(a.an)*a.des;a.dx+=sign(a.yd)*a.bass*\n.05*Math.sin(a.an)*a.des*-1;","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\ntic = min(time - tin,.1);\ntin = time;\n\nra = 10;\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\n\nrb = 1;\nvav = tic*(vav*(1/tic - rb) + rb*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb_avg;\nmt = mt + tic*mid_avg;\nbt = bt + tic*bass_avg;\nvt = vt + tic*(treb_avg+mid_avg+bass_avg)*.33333;\n\nsz = .2;\n\nq1 = .5 + sz*sin(tt*.629) - sz*sin(tt*.107);\nq2 = .5 + sz*sin(tt*.987) - sz*sin(tt*.456);\n\nq3 = .5 + sz*sin(mt*.654) - sz*sin(mt*.355);\nq4 = .5 + sz*sin(mt*.548) - sz*sin(mt*.875);\n\nq5 = .5 + sz*sin(bt*.687) - sz*sin(bt*.318);\nq6 = .5 + sz*sin(bt*.465) - sz*sin(bt*.526);","pixel_eqs_eel":"xd = q1-x;\nyd = q2-y;\n\ndis = pow(xd*xd+yd*yd,.5);\ndes = 1 - dis*.7071068;\ndes = pow(des,8)*-treb;\nan = acos(abs(xd)/dis);\n\ndx = sign(xd)*.07*cos(an)*des;\ndy = sign(yd)*.07*sin(an)*des;\n\ndy = dy + sign(xd)*treb*.05*cos(an)*des;\ndx = dx + sign(yd)*treb*.05*sin(an)*des*-1;\n\nxd = q3-x;\nyd = q4-y;\n\ndis = pow(xd*xd+yd*yd,.5);\ndes = 1 - dis*.7071068;\ndes = pow(des,8)*-mid;\nan = acos(abs(xd)/dis);\n\ndx = dx + sign(xd)*.07*cos(an)*des;\ndy = dy + sign(yd)*.07*sin(an)*des;\n\ndy = dy + sign(xd)*mid*.05*cos(an)*des;\ndx = dx + sign(yd)*mid*.05*sin(an)*des*-1;\n\nxd = q5-x;\nyd = q6-y;\n\ndis = pow(xd*xd+yd*yd,.5);\ndes = 1 - dis*.7071068;\ndes = pow(des,8)*-bass;\nan = acos(abs(xd)/dis);\n\ndx = dx + sign(xd)*.07*cos(an)*des;\ndy = dy + sign(yd)*.07*sin(an)*des;\n\ndy = dy + sign(xd)*bass*.05*cos(an)*des;\ndx = dx + sign(yd)*bass*.05*sin(an)*des*-1;","warp":"vec2 xlat_mutablers;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv6;\n shader_body { \n  vec2 uv_1;\n  vec3 xlat_varmod_2;\n  vec2 uv2_3;\n  float ang2_4;\n  float dist_5;\n  float z_6;\n  vec3 ret_7;\n  uv_1 = uv_orig;\n  xlat_mutableuv1 = ((uv_orig - 0.2) * aspect.xy);\n  float tmpvar_8;\n  tmpvar_8 = ((16.0 * sqrt(\n    dot (xlat_mutableuv1, xlat_mutableuv1)\n  )) + time);\n  z_6 = tmpvar_8;\n  xlat_mutablers = (clamp ((\n    (sin(tmpvar_8) / cos(tmpvar_8))\n   * \n    normalize(xlat_mutableuv1)\n  ), vec2(-5.0, -5.0), vec2(5.0, 5.0)) / 2.0);\n  vec2 tmpvar_9;\n  tmpvar_9 = sin((xlat_mutableuv1 * q31));\n  dist_5 = (sqrt(dot (tmpvar_9, tmpvar_9)) * ((\n    abs(xlat_mutableuv1.x)\n   + \n    abs(xlat_mutableuv1.y)\n  ) + q32));\n  float tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = (min (abs(\n    (tmpvar_9.y / tmpvar_9.x)\n  ), 1.0) / max (abs(\n    (tmpvar_9.y / tmpvar_9.x)\n  ), 1.0));\n  float tmpvar_12;\n  tmpvar_12 = (tmpvar_11 * tmpvar_11);\n  tmpvar_12 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_12) + 0.05368138) * tmpvar_12) - 0.1173503)\n     * tmpvar_12) + 0.1938925) * tmpvar_12) - 0.3326756)\n   * tmpvar_12) + 0.9999793) * tmpvar_11);\n  tmpvar_12 = (tmpvar_12 + (float(\n    (abs((tmpvar_9.y / tmpvar_9.x)) > 1.0)\n  ) * (\n    (tmpvar_12 * -2.0)\n   + 1.570796)));\n  tmpvar_10 = (tmpvar_12 * sign((tmpvar_9.y / tmpvar_9.x)));\n  if ((abs(tmpvar_9.x) > (1e-08 * abs(tmpvar_9.y)))) {\n    if ((tmpvar_9.x < 0.0)) {\n      if ((tmpvar_9.y >= 0.0)) {\n        tmpvar_10 += 3.141593;\n      } else {\n        tmpvar_10 = (tmpvar_10 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_10 = (sign(tmpvar_9.y) * 1.570796);\n  };\n  ang2_4 = (0.1 * floor((16.0 * tmpvar_10)));\n  vec2 tmpvar_13;\n  tmpvar_13.x = cos(ang2_4);\n  tmpvar_13.y = sin(ang2_4);\n  z_6 = (1.0 - cos((2.0 * dist_5)));\n  float tmpvar_14;\n  tmpvar_14 = clamp (z_6, 0.0, 1.0);\n  z_6 = tmpvar_14;\n  float tmpvar_15;\n  tmpvar_15 = float((tmpvar_14 >= 0.5));\n  xlat_mutablers = ((q28 * xlat_mutablers) + ((1.0 - q28) * xlat_mutablers.yx));\n  uv_1 = (uv_orig + ((\n    ((1.0 - tmpvar_15) * 0.03)\n   * xlat_mutablers.yx) + (\n    ((0.5 * tmpvar_15) * tmpvar_14)\n   * \n    normalize(((0.5 * tmpvar_9) + tmpvar_13))\n  )));\n  mat2 tmpvar_16;\n  tmpvar_16[uint(0)] = _qb.xy;\n  tmpvar_16[1u] = _qb.zw;\n  xlat_mutableuv6 = (xlat_mutableuv1 * tmpvar_16);\n  vec2 tmpvar_17;\n  tmpvar_17.x = q5;\n  tmpvar_17.y = q6;\n  uv2_3 = (((0.7 * xlat_mutableuv1) + (0.3 * \n    sin(((xlat_mutableuv1 * 16.0) + (4.0 * tmpvar_17)))\n  )) * 0.2);\n  vec4 tmpvar_18;\n  tmpvar_18 = texture (sampler_main, uv_1);\n  vec3 tmpvar_19;\n  tmpvar_19 = ((tmpvar_18.xyz + vec3((\n    abs((0.01 / (sqrt(xlat_mutableuv6.x) + 0.001)))\n   * \n    (rad + 0.2)\n  ))) + vec3((q26 * clamp (\n    (0.001 / sqrt(dot (uv2_3, uv2_3)))\n  , 0.0, 1.0))));\n  xlat_varmod_2 = (1.0 - ((texture (sampler_noise_lq, \n    ((0.5 * uv_1) + (time * 0.01))\n  ) - 0.2).xyz * (tmpvar_18.xyz - \n    (0.5 * ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1))\n  )));\n  ret_7 = (((\n    (1.0 - tmpvar_15)\n   * tmpvar_19) * xlat_varmod_2) + ((tmpvar_15 * tmpvar_19) * xlat_varmod_2));\n  ret_7 = ((ret_7 * 0.75) - 0.03);\n  vec4 tmpvar_20;\n  tmpvar_20.w = 1.0;\n  tmpvar_20.xyz = ret_7;\n  ret = tmpvar_20.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\n    (0.5 - uv)\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\n  ret_1 = ((ret_1 * (1.0 - ret_1)) * 4.0);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"float3 mus;\nfloat2 rs, uv1, uv6, uv7, uv8;\nfloat dx,dy;\nshader_body {\nuv = uv_orig;\nuv1 = (uv-.2) * aspect.xy;\n\n//BACKGROUND\nfloat z = 16*length(uv1)+time;\nfloat2 uvn =normalize(uv1);\nrs = clamp(tan(z)*uvn,-5,5)/2;\n\n//CRYSTAL\nfloat mult = q31;\nuv7 = sin(uv1*mult);\nuv8 = uv7;\nfloat dist = length(uv8);\ndist *= (abs(uv1.x) + abs(uv1.y))+ q32;\n\nfloat ang2 = atan2 (uv8.y,uv8.x);\nang2 =  .1*floor (16* ang2);\nfloat2 dir = .5*uv8+float2 (cos(ang2), sin(ang2));\n\n\nz = (1-cos(2*dist));\nz = saturate (z);\n\n//ADD\nfloat mask = (z >= .5); //momentan beliebig\nrs = q28*rs + (1-q28)*rs.yx;\nuv += (1-mask)*.03*(rs.yx) + .5*mask*z*normalize(dir);\n\n//ZENTRALSTRAHL\nuv6 = mul (uv1,float2x2(_qb));\nmus = abs(0.01/(sqrt(uv6.x)+.001))*(rad+.2);\n\n//DOTS\nfloat2 uv2 = .7*uv1+.3*sin(uv1*16+4*float2 (q5,q6));\nuv2 *= .2;\nfloat3 dots = q26*saturate(.001/(length(uv2)));\nfloat3 blur = GetBlur1(frac(uv));\nfloat3 crisp= GetPixel(uv);\nfloat3 diff = (crisp) - .5*blur;\nfloat3 ret1 = crisp + mus + dots;\n\nfloat3 mod = tex2D (sampler_noise_lq,.5*uv+time*.01)-.2;\nmod = 1 - mod*diff;\n\nret = (1-mask)*ret1*mod + mask*ret1*mod;\nret = ret *.75- .03;\n\n}","comp_hlsl":"shader_body\n{\n\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo ).xyz, \n                0.50 \n              ); //video echo\n   ret *= 2;  \n   ret =  ret*(1-ret)*4; //solarize\n}"}