{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":4.616,"wave_smoothing":0.81,"modwavealphastart":0.47,"modwavealphaend":1.32,"wave_r":0.45,"wave_g":0.4,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0.02,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.15,"mv_r":0.6,"mv_g":0.2,"mv_b":0.7,"mv_a":0.3,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"x":0.53,"rad":0.0882,"tex_zoom":0.4928,"g":1,"b":0.7,"a":0.7,"r2":0.6,"g2":0,"b2":0.7,"a2":1,"border_r":0.3,"border_g":0,"border_b":0.6,"border_a":0},"init_eqs_str":"a.trig=0;a.q28=0;a.q24=0;a.seed=0;a.rr1=0;","frame_eqs_str":"a.trig=equal(mod(a.q28,2),1)*a.q24;a.seed=sqr(a.time-Math.floor(a.time));a.rr1=a.rr1*(1-a.trig)+a.seed*a.trig;a.textured=bnot(a.q24);a.ang=div(3.1416,4)*a.q28;a.ang=0;a.x=.5;a.y=a.x;a.border_a=.5;a.a=.8;a.a2=.5;a.rad=.4*a.rr1;a.rad=.35;a.tex_zoom=div(.8,a.rad);a.tex_zoom=2;","init_eqs_eel":"","frame_eqs_eel":"trig = equal(q28%2,1)*q24;\n\nseed = sqr(time - int(time));\nrr1 = rr1 * (1-trig) + seed*trig;\n\ntextured = bnot(q24);\nang = 3.1416 /4 * q28;\nang = 0;\nx = .5; y = x;\nborder_a = .5;\n\na = .8; a2 = .5;\nrad = 0.4*rr1+.0;//MUSS HIER STEHEN - MIST\nrad = .35;\ntex_zoom = .8/rad;\ntex_zoom = 2; \n"},{"baseVals":{"x":0.46,"rad":0.15962,"tex_zoom":0.02846,"g":1,"b":1,"a":0.03,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = int(rand(10))/10;\ny = int(rand(10))/10;\n\nr = int(rand(4))/3;\ng = int(rand(4))/3;\nb = int(rand(4))/3;\n\n\nis_beat = above(time, t0+.03);\nt0 = is_beat*time + (1-is_beat)*t0;\n\n\na = min(q21/2 ,.9) * is_beat;\nrad = a*a/3 ;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(10))/10;\ny = int(rand(10))/10;\n\nr = int(rand(4))/3;\ng = int(rand(4))/3;\nb = int(rand(4))/3;\n\n\nis_beat = above(time, t0+.03);\nt0 = is_beat*time + (1-is_beat)*t0;\n\n\na = min(q21/2 ,.9) * is_beat;\nrad = a*a/3 ;"},{"baseVals":{"enabled":1,"x":0.553,"y":0.6,"rad":0.04914,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"a.q24=0;","frame_eqs_str":"a.textured=bnot(a.q24);","init_eqs_eel":"","frame_eqs_eel":"textured = bnot(q24);"},{"baseVals":{"enabled":1,"x":0.45,"rad":0.20268,"tex_ang":0.62832,"tex_zoom":4.46172,"r":0.5,"b":1,"a":0.5,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0.4},"init_eqs_str":"a.dx=0;a.dy=0;a.q22=0;a.q24=0;","frame_eqs_str":"a.dx=div(Math.floor(rand(1E3)),1E3)-.5;a.dy=div(Math.floor(rand(1E3)),1E3)-.5;a.x=.5+a.dx*(1-div(a.q22,4));a.y=.5+a.dy*(1-div(a.q22,4));a.ang=div(Math.floor(rand(320)),100);a.a=1;a.rad=.1*a.q24+.08+div(a.q22,40);","init_eqs_eel":"","frame_eqs_eel":"dx =  int(rand(1000))/1000-.5;\ndy =  int(rand(1000))/1000-.5;\n\nx = .5 + dx*(1-q22/4);\ny = .5 + dy*(1-q22/4);\n\nang = int(rand(320))/100;\n\na = 1;\nrad = .1*q24+0.08 +q22/40; "}],"waves":[{"baseVals":{"enabled":1,"samples":102,"sep":10,"scaling":0.89152,"smoothing":0,"g":0.5,"b":0.5,"a":0.6},"init_eqs_str":"a.dx=0;a.iy=0;a.k1=0;a.ix=0;a.k2=0;a.q26=0;a.oy=0;a.dy=0;a.t2=0;a.sp=0;a.k0=0;a.ox=0;","frame_eqs_str":"a.t2+=a.bass_att;","point_eqs_str":"a.k0=Math.floor(100*a.sample);a.k2=Math.floor(100*a.sample+1);a.k1=equal(mod(a.k0,2),0);a.k2=equal(mod(a.k0,2),1);a.ix=mod(100*a.value1,7)-3;a.iy=mod(100*a.value2,7)-3;a.sp=a.bass_att+a.treb_att;a.sp=div(a.sp,3E3);a.dx=.99*(a.dx+a.sp*a.ix);a.dy=.99*(a.dy+a.sp*a.iy);a.ox=a.k1*a.dx+(1-a.k1)*a.ox;a.oy=a.k2*a.dy+(1-a.k2)*a.oy;a.x=a.ox+.5;a.y=a.oy+.5;a.r=.6;a.g=.8;a.b=.9;a.a=.1+div(a.q26,8);a.a=div(Math.max(a.a,1),4);","init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k0 = int(100.0*sample);\nk2 = int(100.0*sample+1);\nk1 = equal(k0%2,0);\nk2 = equal(k0%2,1);\n\n\nix = (100*value1)%7-3;\niy = (100*value2)%7-3;\n\nsp = bass_att + treb_att;\nsp = sp /3000;\n\n\ndx = (dx+sp*ix) * .99;\ndy = (dy+sp*iy) * .99 ;\n\n\nox = k1*dx + (1-k1)*ox;\noy = k2*dy + (1-k2)*oy;\n\n\n\n//ox = 0; oy = 0;\n\nx = ox+.5;\ny = oy+.5;\n\nr = .6;\ng = .8;\nb = .9;\na = .1 + q26/8;\na = max(a,1) / 4;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = int(rand(10001))*.0001;\nrb = rb + int(rand(10001))*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.b3=0;a.x1=0;a.meanbass_att=0;a.g3=0;a.r1=0;a.g2=0;a.lastbeat=0;a.x3=0;a.beatrate=0;a.peakbass_att=0;a.r2=0;a.framethird=0;a.r3=0;a.x2=0;a.volume=0;a.b2=0;a.beat=0;a.g1=0;a.b1=0;","frame_eqs_str":"a.warp=0;a.framethird=mod(a.frame,3);a.x1=.5+.15*Math.sin(.416*a.time)+.15*Math.sin(.832*a.time)+.1*Math.sin(1.324*a.time);a.x2=.5+.15*Math.sin(.341*a.time)+.15*Math.sin(.768*a.time)+.1*Math.sin(1.523*a.time);a.x3=.5+.15*Math.sin(.287*a.time)+.15*Math.sin(.913*a.time)+.1*Math.sin(1.142*a.time);a.r1=.5+.15*Math.sin(.512*a.time)+.15*Math.sin(.943*a.time)+.1*Math.sin(1.024*a.time);a.r2=.5+.15*Math.sin(.483*a.time)+.15*Math.sin(.879*a.time)+.1*Math.sin(1.423*a.time);a.r3=.5+.15*\nMath.sin(.531*a.time)+.15*Math.sin(.671*a.time)+.1*Math.sin(1.442*a.time);a.g1=.5+.15*Math.sin(.248*a.time)+.15*Math.sin(.829*a.time)+.1*Math.sin(1.623*a.time);a.g2=.5+.15*Math.sin(.461*a.time)+.15*Math.sin(.699*a.time)+.1*Math.sin(1.254*a.time);a.g3=.5+.15*Math.sin(.397*a.time)+.15*Math.sin(.768*a.time)+.1*Math.sin(1.157*a.time);a.b1=.5+.15*Math.sin(.211*a.time)+.15*Math.sin(.652*a.time)+.1*Math.sin(1.865*a.time);a.b2=.5+.15*Math.sin(.333*a.time)+.15*Math.sin(.978*a.time)+.1*Math.sin(1.359*a.time);\na.b3=.5+.15*Math.sin(.475*a.time)+.15*Math.sin(.791*a.time)+.1*Math.sin(1.011*a.time);a.wave_x=.00001<Math.abs(equal(a.framethird,0))?a.x1:.00001<Math.abs(equal(a.framethird,1))?a.x2:a.x3;a.wave_r=.00001<Math.abs(equal(a.framethird,0))?a.r1:.00001<Math.abs(equal(a.framethird,1))?a.r2:a.r3;a.wave_g=.00001<Math.abs(equal(a.framethird,0))?a.g1:.00001<Math.abs(equal(a.framethird,1))?a.g2:a.g3;a.wave_b=.00001<Math.abs(equal(a.framethird,0))?a.b1:.00001<Math.abs(equal(a.framethird,1))?a.b2:a.b3;a.volume=\n.3*(a.bass+a.mid);a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,a.peakbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+\na.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-a.beat)*a.peakbass_att*(.99*above(a.time-a.lastbeat,2*a.beatrate)+.998*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.dx=.00001<Math.abs(a.beat)?1-2*Math.floor(rand(2)):0;a.ob_a=.00001<Math.abs(a.beat)?0:.65;a.mv_a=.00001<Math.abs(a.beat)?1:.05;","pixel_eqs_str":"a.dy=.004+.0005*Math.sin(10*a.x+.459*a.time)+.0005*Math.sin(14*a.x+.325*a.time)+.0005*Math.sin(1.231*a.time);","init_eqs_eel":"","frame_eqs_eel":"warp=0;\n\nframethird = frame%3;\n\nx1 = 0.5 + 0.15*sin(0.416*time) + 0.15*sin(0.832*time) + 0.1*sin(1.324*time);\nx2 = 0.5 + 0.15*sin(0.341*time) + 0.15*sin(0.768*time) + 0.1*sin(1.523*time);\nx3 = 0.5 + 0.15*sin(0.287*time) + 0.15*sin(0.913*time) + 0.1*sin(1.142*time);\nr1 = 0.5 + 0.15*sin(0.512*time) + 0.15*sin(0.943*time) + 0.1*sin(1.024*time);\nr2 = 0.5 + 0.15*sin(0.483*time) + 0.15*sin(0.879*time) + 0.1*sin(1.423*time);\nr3 = 0.5 + 0.15*sin(0.531*time) + 0.15*sin(0.671*time) + 0.1*sin(1.442*time);\ng1 = 0.5 + 0.15*sin(0.248*time) + 0.15*sin(0.829*time) + 0.1*sin(1.623*time);\ng2 = 0.5 + 0.15*sin(0.461*time) + 0.15*sin(0.699*time) + 0.1*sin(1.254*time);\ng3 = 0.5 + 0.15*sin(0.397*time) + 0.15*sin(0.768*time) + 0.1*sin(1.157*time);\nb1 = 0.5 + 0.15*sin(0.211*time) + 0.15*sin(0.652*time) + 0.1*sin(1.865*time);\nb2 = 0.5 + 0.15*sin(0.333*time) + 0.15*sin(0.978*time) + 0.1*sin(1.359*time);\nb3 = 0.5 + 0.15*sin(0.475*time) + 0.15*sin(0.791*time) + 0.1*sin(1.011*time);\nwave_x = if(equal(framethird,0),x1,if(equal(framethird,1),x2,x3));\nwave_r = if(equal(framethird,0),r1,if(equal(framethird,1),r2,r3));\nwave_g = if(equal(framethird,0),g1,if(equal(framethird,1),g2,g3));\nwave_b = if(equal(framethird,0),b1,if(equal(framethird,1),b2,b3));\n\nvolume = 0.3*(bass+mid);\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.99 + (1-above(time - lastbeat, 2*beatrate))*0.998);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\ndx = if(beat,1-2*int(rand(2)),0);\nob_a = if(beat,0,0.65);\nmv_a = if(beat,1,0.05);","pixel_eqs_eel":"dy = 0.004 + 0.0005*sin(10*x+0.459*time) + 0.0005*sin(14*x+0.325*time) + 0.0005*sin(1.231*time);\n//dx = dx + 0.0001*sin(9*y+0.612*time) + 0.0001*sin(13*y+0.429*time) + 0.0001*sin(1.027*time);","warp":" shader_body { \n  vec2 uv6_1;\n  vec2 uv1_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float x_4;\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\n  float tmpvar_5;\n  tmpvar_5 = (12.0 * sqrt((x_4 * x_4)));\n  vec2 tmpvar_6;\n  tmpvar_6 = normalize(tmpvar_3);\n  uv1_2 = (tmpvar_3 + ((-0.01 * \n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_6));\n  uv1_2 = (uv1_2 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 60.0));\n  uv6_1 = (0.4 * cos((uv1_2 * 6.0)));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((0.5 * (\n    ((texture (sampler_main, ((uv1_2 * \n      (0.8 + (0.2 * tmpvar_5))\n    ) + 0.5)).xyz + (vec3((0.01 / \n      (sqrt(dot (uv6_1, uv6_1)) - (0.001 * q27))\n    )) * (0.3 * \n      (1.0 + roam_cos)\n    ).xyz)) * 0.96)\n   - 0.025)) + (0.5 * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = tmpvar_5;\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\n  uv2_3.x = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (tmpvar_5 * 1.5);\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv-.5);// * aspect.xy;\n\nfloat2 uv6 = uv1;\n\n//##hier unten statt - auch plus\nfloat z = 12*length((abs(uv1.x)-abs(uv1.y)));\n//z = length(uv1)*22;\n\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-2,2);\nuv1 += -.010*lum(GetBlur1(uv))*d;\nuv1 -= rs/60; //auch minus und frac versuchen\n\nuv6 = .4*cos(uv1*6+rand_frame*0);\nmus = .01/(length(uv6)-.001*q27);\nmus *= .3*(1+roam_cos);\n//mus = .2;\n\n\n//probier auch 1*z;\nfloat3 crisp= tex2D(sampler_main,(uv1)*(.8+.2*z)+.5);\n\nfloat3 ret1 = crisp + mus;\n\nq25 = q24+.4; //##hier auf 1 setzen\nq25 = .5;\nret = q25*(ret1*.96-.025) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\n//float ang1 = atan2(uv1.y, uv1.x);\n//float rad1 = log(length(uv1)-0.1);\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1);\nuv2.y = uv2.y  +0.1*time;\nuv2.x = uv2.x  +.0*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1*1.5);\nuv3.y = uv3.y  +0.08*time ;\nuv3.x = uv3.x  + time/32;\n\nfloat3 crisp = 2*GetPixel(uv2) + GetPixel(uv3);\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\n\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(uv);\n\n}"}