{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":3,"wave_dots":1,"modwavealphabyvolume":1,"wrap":0,"darken":1,"wave_scale":16.217,"wave_mystery":-0.44,"warpscale":1.331,"zoom":13.29089,"dx":-0.28,"dy":-0.32,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0.21,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"additive":1,"textured":1,"rad":0.59958,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.rd=0;a.q4=0;a.q5=0;a.vol=0;a.musictime=0;a.zoom=1;a.xpos=0;a.ypos=0;","frame_eqs_str":"a.decay=1;a.vol=.55*(a.bass+a.mid+a.treb);a.vol=a.vol;a.mv_r=.5+.4*Math.sin(1.324*a.time);a.mv_g=.5+.4*Math.cos(1.371*a.time);a.ib_a=above(a.treb,.9);a.invert=above(.5*Math.sin(20*a.time)+.5,.5);a.zoom=1;a.musictime+=a.vol;a.q4=.3*Math.cos(.02*a.musictime);a.q5=.3*Math.sin(.01*a.musictime);a.dx=.01*Math.sin(.1*a.musictime);a.dy=.01*Math.cos(.069*a.musictime);a.monitor=a.rot;","pixel_eqs_str":"a.rd=sqrt(sqr(1.7*(a.x-.5-a.q4))+sqr(1.2*(a.y-.5+a.q5)));a.cx=.5+a.q4;a.cy=.5-a.q5;a.zoom=Math.sin(div(a.rd,3)+.01)+div(Math.tan(div(a.rad,10)+.01),div(a.rd,a.rad));","init_eqs_eel":"zoom=1;\nxpos=0;\nypos=0;","frame_eqs_eel":"decay=1;\n\nvol= (bass+mid+treb)*0.55;\nvol=vol;\n\n\nmv_r = 0.5 + 0.4*sin(time*1.324);\nmv_g = 0.5 + 0.4*cos(time*1.371);\n\nib_a=above(treb,0.9);\ninvert=above((sin(time*20)*0.5+0.5),0.5);\n\nzoom=1;\n\nmusictime=musictime+vol;\nq4=cos(musictime*0.02)*0.3;\nq5=sin(musictime*0.01)*0.3;\n\ndx=sin(musictime*0.1)*0.01;\ndy=cos(musictime*0.069)*0.01;\n\n\n//invert=above((sin(time*5)*0.5+0.5),0.5);\n\nmonitor=rot;","pixel_eqs_eel":"rd=sqrt( sqr( (x-0.5-q4)*1.7) + sqr( (y-0.5+q5)*1.2 ) );\ncx=0.5+q4;\ncy=0.5-q5;\n\n//zoom=rd*((rad*0.5)+(0.2))*1.01;\nzoom=sin(rd/3+0.01)+tan(rad/10+0.01)/(rd/rad);","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = ((uv_orig - 0.5) * vec2(1.81, 1.81));\n  vec2 tmpvar_2;\n  tmpvar_2.x = ((tmpvar_1.x * tmpvar_1.x) - (tmpvar_1.y * tmpvar_1.y));\n  tmpvar_2.y = ((2.0 * tmpvar_1.x) * tmpvar_1.y);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (texture (sampler_fc_main, (tmpvar_2 + vec2(0.448, 0.701))) - 0.004).xyz;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = tmpvar_5;\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\n  uv2_3.x = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (tmpvar_5 * 1.5);\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = (((2.0 * texture (sampler_main, \n    fract(uv2_3)\n  ).xyz) + texture (sampler_main, fract(uv3_2)).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n\nfloat2 zoom = 2;\nfloat2 cntr = float2(-0,-0);\nfloat2 c = float2(0.6,0.6); // complex constant\n\n float2 my_uv = (uv-0.5-cntr)*zoom;\n my_uv = float2(my_uv.x*my_uv.x - my_uv.y*my_uv.y, 2*my_uv.x*my_uv.y) + c; // u -> u^2 + c\n\nzoom =1.81;\ncntr = float2(0,0);\nc = float2(0.448,0.701);\n\n float2 my_uv2 = (uv_orig-0.5-cntr)*zoom; // using uv_orig here - no contortion to the nice julia island\n my_uv2 = float2(my_uv2.x*my_uv2.x - my_uv2.y*my_uv2.y, 2*my_uv2.x*my_uv2.y) + c; // u -> u^2 + c\n\n//ret.x = tex2D( sampler_fc_main, my_uv).x - 0.1;\nret = tex2D( sampler_fc_main, my_uv2) - 0.004;\n\n my_uv = lerp(my_uv, my_uv2, 0.5);\n//ret.z = tex2D( sampler_fc_main, my_uv2).z - 0.1;\n\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\n//float ang1 = atan2(uv1.y, uv1.x);\n//float rad1 = log(length(uv1)-0.1);\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1);\nuv2.y = uv2.y  +0.1*time;\nuv2.x = uv2.x  +.0*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1*1.5);\nuv3.y = uv3.y  +0.08*time ;\nuv3.x = uv3.x  + time/32;\n\nfloat3 crisp = 2*GetPixel(frac(uv2)) + GetPixel(frac(uv3));\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\n\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(uv);\n\n}"}