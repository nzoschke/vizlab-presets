{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.169,"wave_smoothing":0,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0,"ob_b":1,"ob_a":0.3,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":53,"rad":0.0244,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0.2,"g":0.7,"g2":0,"a2":0.2,"border_b":0,"border_a":0},"init_eqs_str":"a.q22=0;a.r0=0;a.q24=0;a.b0=0;a.g0=0;","frame_eqs_str":"a.a=Math.min(div(a.q22,4),1);a.a2=1;a.r0=bnot(a.q24)*a.r0+div(a.q24*Math.floor(rand(10)),10);a.b0=bnot(a.q24)*a.b0+div(a.q24*Math.floor(rand(10)),10);a.g0=bnot(a.q24)*a.g0+div(a.q24*Math.floor(rand(10)),10);a.rad=div(a.q22,40);a.r=a.r0;a.b=a.b0;a.g=a.g0;a.r2=0;a.b2=0;a.g2=0;","init_eqs_eel":"","frame_eqs_eel":"a = min(q22/4,1); a2 = 1;\n\n\nr0 = bnot(q24)*r0 + q24 * int(rand(10))/10;\nb0 = bnot(q24)*b0 + q24 * int(rand(10))/10;\ng0 = bnot(q24)*g0 + q24 * int(rand(10))/10;\nrad = q22/40;\nr = r0; b = b0; g = g0;\nr2 = 0; b2 = 0; g2 = 0;"},{"baseVals":{"enabled":1,"sides":44,"textured":1,"x":0.7,"rad":0.2173,"tex_ang":0.62832,"tex_zoom":1.63319,"g":1,"b":1,"r2":0.99,"g2":0.99,"b2":1,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0},"init_eqs_str":"a.rot0=0;a.q1=0;a.posx=0;a.q24=0;a.posy=0;a.rad0=0;","frame_eqs_str":"a.textured=1;a.rot0+=div(1,a.fps)*a.q1;a.posx=(1-a.q24)*a.posx+a.q24*(.3+div(Math.floor(rand(100)),200));a.posy=(1-a.q24)*a.posy+a.q24*(.3+div(Math.floor(rand(100)),200));a.rad0=(1-a.q24)*a.rad0+a.q24*(.05+div(Math.floor(rand(100)),300));a.rad=a.rad0;a.x=a.posx;a.y=a.posy;a.ang=a.rot0;","init_eqs_eel":"","frame_eqs_eel":"textured = 1;\nrot0 = rot0 + 1/fps * q1;\n\nposx = (1-q24)*posx + q24*(.3+int(rand(100))/200);\nposy = (1-q24)*posy + q24*(.3+int(rand(100))/200);;\n\nrad0  = (1-q24)*rad0 + q24*(.05+int(rand(100))/300);\nrad = rad0;\n\n\nx =  posx;\ny =  posy;\nang = rot0;"},{"baseVals":{"enabled":1,"sides":63,"x":0.503,"rad":0.03886,"tex_zoom":2.2233,"g":0.1,"r2":1,"b2":1,"a2":0.7,"border_a":0},"init_eqs_str":"a.rot0=0;a.q2=0;a.posx=0;a.q24=0;a.posy=0;a.rad0=0;a.q26=0;","frame_eqs_str":"a.textured=1;a.rot0+=div(.1,a.fps)*a.q2;a.posx=(1-a.q24)*a.posx+a.q24*(.3+div(Math.floor(rand(100)),200));a.posy=(1-a.q24)*a.posy+a.q24*(.3+div(Math.floor(rand(100)),200));a.rad0=(1-a.q24)*a.rad0+a.q24*(.05+div(Math.floor(rand(100)),400));a.rad=a.rad0;a.x=a.posx+a.q26;a.y=a.posy;a.ang=a.rot0;","init_eqs_eel":"","frame_eqs_eel":"textured = 1;\nrot0 = rot0 + .1/fps * q2;\n\n\nposx = (1-q24)*posx + q24*(.3+int(rand(100))/200);\nposy = (1-q24)*posy + q24*(.3+int(rand(100))/200);;\n\nrad0  = (1-q24)*rad0 + q24*(.05+int(rand(100))/400);\nrad = rad0;\n\n\nx =  posx+q26;\ny =  posy;\nang = rot0;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t2 = t2 + bass_att;","point_eqs_str":"k1 = (sample*100)%8;\nk2 = bnot (k1);\nxi = value1*k2 + xi*(1-k2);\nyi = value2*(1-k2) + yi*k2;\n\ndx = dx*.99 + xi;\ndy = dy*.99 + yi;\n\nx = .5 + xi/2;\ny = .5 + yi/2;\n\na = q22/8; \na = min(a,.4);","init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\nk2 = bnot (k1);\nxi = value1*k2 + xi*(1-k2);\nyi = value2*(1-k2) + yi*k2;\n\ndx = dx*.99 + xi;\ndy = dy*.99 + yi;\n\nx = .5 + xi/2;\ny = .5 + yi/2;\n\na = q22/8; \na = min(a,.4);"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.02,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.trig2=0;a.p3z=0;a.index2=0;a.vtrig=0;a.index=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.hy=0;a.q13=0;a.q15=0;a.q6=0;a.q1=0;a.dec_med=0;a.q5=0;a.p2z=0;a.trel=0;a.q9=0;a.rott=0;a.p1z=0;a.is_beat=0;a.q23=0;a.q22slow=0;a.k1=0;a.q24=0;a.vx=0;a.dec_slow=0;a.q11=0;a.z0=0;a.q10=0;a.vy=0;a.q4=0;a.q16=0;a.q26=0;a.p2=0;a.avg=0;a.q19=0;a.beat=0;a.q17=0;a.vol=0;a.p1=0;a.peak=0;a.trig1=0;a.q2=0;a.q27=0;a.q14=0;a.trig3=0;a.speed=0;a.q3=0;a.t0=0;a.hx=0;a.q28=0;a.q20=0;a.prox=1;","frame_eqs_str":"a.dec_med=pow(.8,div(30,a.fps));a.dec_slow=pow(.8,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.q22=a.peak;a.q22slow=a.q22slow*a.dec_slow+a.q22*(1-a.dec_slow);a.q23=a.q22slow;a.q24=\na.is_beat;a.q26=a.bass_att+a.mid_att+a.treb_att;a.vol=a.vol*a.dec_med+(1-a.dec_med)*a.q26;a.q27=a.index+1;a.q28=a.index2;a.k1=a.is_beat*equal(mod(a.index,2),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott+=div(16*a.q22*(1-a.dec_med),a.fps)*below(a.q27,6);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.vtrig=a.is_beat*bnot(mod(a.index,2));a.vx=a.vx*bnot(a.vtrig)+a.vtrig*(div(Math.floor(rand(100)),100)-.5);a.vy=a.vy*bnot(a.vtrig)+a.vtrig*(div(Math.floor(rand(100)),\n100)-.5);a.vx*=below(mod(a.index,15),15);a.vy*=below(mod(a.index,15),15);a.q5=5*a.vx;a.q6=5*a.vy;a.q21=div(1+Math.sin(div(a.time,12)),8)+.01;a.trig1=a.q24*bnot(mod(a.index,12));a.trig2=a.q24*bnot(mod(a.index+4,12));a.trig3=a.q24*bnot(mod(a.index+8,12));a.trel+=div(a.vol,a.fps);a.z0=1;a.speed=div(a.vol,2);a.hx=Math.sin(a.trel);a.hy=Math.cos(a.trel);a.p1z=bnot(a.trig1)*(a.p1z+div((5+a.p1z)*a.speed,a.fps))+a.trig1*a.z0;a.p1z=Math.max(a.p1z,.1);a.q9=div(a.hx,a.p1z);a.q10=div(a.hy,a.p1z);a.q11=a.p1z;a.q12=\n.1+.02*a.q26*bnot(mod(a.index+2,3))*a.p1z*Math.exp(div(-a.p1z,100));a.p2z=bnot(a.trig2)*(a.p2z+div((5+a.p2z)*a.speed,a.fps))+a.trig2*a.z0;a.p2z=Math.max(a.p2z,.1);a.q13=div(2*a.hx,a.p2z);a.q14=div(-.5*a.hy,a.p2z);a.q15=a.p2z;a.q16=.1+.02*a.q26*bnot(mod(a.index+2,3))*a.p2z*Math.exp(div(-a.p2z,100));a.p3z=bnot(a.trig3)*(a.p3z+div((5+a.p3z)*a.speed,a.fps))+a.trig3*a.z0;a.p3z=Math.max(a.p3z,.1);a.q17=div(-1.4*a.hx,a.p3z);a.q18=div(2*a.hy,a.p3z);a.q19=a.p3z;a.q20=.1+.02*a.q26*bnot(mod(a.index+2,3))*a.p3z*\nMath.exp(div(-a.p3z,100));","pixel_eqs_str":"a.zoom=1.2+.2*Math.sin(div(a.time,3));","init_eqs_eel":"prox = 1;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\ndec_slow = pow (0.8, 30/fps);\n//dec_xlow = pow (0.999, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%4;\n\nq22 = peak;\nq22slow = q22slow*dec_slow + q22*(1-dec_slow);\nq23 = q22slow;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att;\nvol = vol*dec_med + (1-dec_med)*q26;\nq27 = index + 1;\nq28 = index2 ;\n\nk1 =  is_beat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\n//rott = p2 * 3.1416/2;\nrott = rott + q22*16*(1-dec_med)/fps*below(q27,6);\n//*****tunnel tilting\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n//****tunnel viewpoint x,y\nvtrig = is_beat * bnot(index%2);\nvx = vx * bnot(vtrig) + vtrig * (int(rand(100))/100-.5);\nvy = vy * bnot(vtrig) + vtrig * (int(rand(100))/100-.5);\nvx = vx* below(index%15,15); //###\nvy = vy* below(index%15,15);\nq5 = vx*5;\nq6 = vy*5;\n\n//***tunnel width\nq21 = (1+sin(time/12))/8+.01;\n\n\n//***********************\ntrig1= q24*bnot(index%12);\ntrig2= q24*bnot((index+4)%12);\ntrig3= q24*bnot((index+8)%12);\ntrel = trel + vol/fps;\nz0 = 1;\nspeed = vol/2;\nhx = sin(trel);\nhy = cos(trel);\n\np1z = bnot(trig1)* (p1z + (5+p1z)*speed/fps)+trig1*z0;\np1z = max(p1z,.1);\nq9 = hx/(p1z); \nq10 = hy/(p1z); \nq11 = p1z;\nq12 = .1+.02*q26*bnot((index+2)%3)*p1z*exp(-p1z/100);\n\np2z = bnot(trig2)* (p2z + (5+p2z)*speed/fps)+trig2*z0;\np2z = max(p2z,.1);\nq13 = 2*hx/(p2z); \nq14 = -.5*hy/(p2z); \nq15 = p2z;\nq16 = .1+.02*q26*bnot((index+2)%3)*p2z*exp(-p2z/100);\n\n\np3z = bnot(trig3)* (p3z + (5+p3z)*speed/fps)+trig3*z0;\np3z = max(p3z,.1);\nq17 = -1.4*hx/(p3z); \nq18 = 2*hy/(p3z); \nq19 = p3z;\nq20 = .1+.02*q26*bnot((index+2)%3)*p3z*exp(-p3z/100);","pixel_eqs_eel":"zoom = 1.2 + .2 *sin(time/3);","warp":" shader_body { \n  vec2 uv6_1;\n  vec2 uv1_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float x_4;\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\n  float tmpvar_5;\n  tmpvar_5 = (12.0 * sqrt((x_4 * x_4)));\n  vec2 tmpvar_6;\n  tmpvar_6 = normalize(tmpvar_3);\n  uv1_2 = (tmpvar_3 + ((-0.01 * \n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_6));\n  uv1_2 = (uv1_2 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 60.0));\n  uv6_1 = (0.4 * cos((uv1_2 * 6.0)));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((0.5 * (\n    ((texture (sampler_main, ((uv1_2 * \n      (0.8 + (0.2 * tmpvar_5))\n    ) + 0.5)).xyz + (vec3((0.01 / \n      (sqrt(dot (uv6_1, uv6_1)) - (0.001 * q27))\n    )) * (0.3 * \n      (1.0 + roam_cos)\n    ).xyz)) * 0.96)\n   - 0.025)) + (0.5 * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = tmpvar_5;\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\n  uv2_3.x = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (tmpvar_5 * 1.5);\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv-.5);// * aspect.xy;\n\nfloat2 uv6 = uv1;\n\n//##hier unten statt - auch plus\nfloat z = 12*length((abs(uv1.x)-abs(uv1.y)));\n//z = length(uv1)*22;\n\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-2,2);\nuv1 += -.010*lum(GetBlur1(uv))*d;\nuv1 -= rs/60; //auch minus und frac versuchen\n\nuv6 = .4*cos(uv1*6+rand_frame*0);\nmus = .01/(length(uv6)-.001*q27);\nmus *= .3*(1+roam_cos);\n//mus = .2;\n\n\n//probier auch 1*z;\nfloat3 crisp= tex2D(sampler_main,(uv1)*(.8+.2*z)+.5);\n\nfloat3 ret1 = crisp + mus;\n\nq25 = q24+.4; //##hier auf 1 setzen\nq25 = .5;\nret = q25*(ret1*.96-.025) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\n//float ang1 = atan2(uv1.y, uv1.x);\n//float rad1 = log(length(uv1)-0.1);\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, rad1);\nuv2.y = uv2.y  +0.1*time;\nuv2.x = uv2.x  +.0*time;\n\nfloat2 uv3 = float2 (ang/3.14, rad1*1.5);\nuv3.y = uv3.y  +0.08*time ;\nuv3.x = uv3.x  + time/32;\n\nfloat3 crisp = 2*GetPixel(uv2) + GetPixel(uv3);\ncrisp += 2*GetBlur2(frac(uv2)) + 2*GetBlur2(frac(uv3));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\n\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * GetPixel(uv);\n\n}"}