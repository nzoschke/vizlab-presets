{"version":2,"baseVals":{"rating":5,"gammaadj":1.28,"decay":0.985,"echo_zoom":0.997,"echo_orient":1,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"brighten":1,"darken":1,"invert":1,"wave_a":100,"wave_scale":0.133,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.9995,"warp":0.01,"ob_size":0,"ob_r":0.01,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":7.04,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"rad":0.26778,"ang":0.53,"r":0,"g2":0,"a2":0.4,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.ang=2*(a.time+a.q1);","init_eqs_eel":"","frame_eqs_eel":"ang = 2*(time+q1);"},{"baseVals":{"enabled":1,"sides":3,"rad":0.2865,"g":0.19,"b":0.01,"r2":0.7,"b2":1,"a2":0.9,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.q2=0;","frame_eqs_str":"a.ang=-2*(a.time+a.q2);","init_eqs_eel":"","frame_eqs_eel":"ang = -2*(time+q2);"},{"baseVals":{"enabled":1,"sides":30,"textured":1,"rad":0.05427,"tex_zoom":0.88745,"g":0.9,"b":1,"r2":1,"g2":0.9,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.q2=0;","frame_eqs_str":"a.ang=a.time+a.q3;a.x+=.45*Math.sin(.1*a.q3);a.y+=.45*Math.cos(.1*a.q3);a.x+=.15*Math.sin(.3*a.q2);a.y+=.15*Math.cos(.35*a.q2);","init_eqs_eel":"","frame_eqs_eel":"ang=time+q3;\n\nx=x+.45*sin(.1*q3);\ny=y+.45*cos(.1*q3);\n\nx=x+.15*sin(.3*q2);\ny=y+.15*cos(.35*q2);"},{"baseVals":{"enabled":1,"textured":1,"rad":16.80758,"tex_zoom":0.96097,"g":1,"b":1,"a":0.06,"r2":1,"b2":1,"a2":0.58,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"r":0.3,"g":0.9,"a":0.2},"init_eqs_str":"a.it=0;a.mx=0;a.q3=0;a.my=0;a.q12=0;a.q13=0;a.q11=0;","frame_eqs_str":"","point_eqs_str":"a.it+=1;a.x=.02*pow(-1,a.it)*Math.sin(6.28*a.sample);a.y=.02*Math.cos(6.28*a.sample);a.mx=a.x*Math.sin(a.q3)+a.y*Math.cos(a.q3);a.my=a.y*Math.sin(a.q3)-a.x*Math.cos(a.q3);a.x=.5-a.mx;a.y=.5+a.my;a.r=.6*a.sample*a.q12;a.g=.6*a.sample*a.q13;a.b=.6*a.sample*a.q11;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it=it+1;\nx=.02*pow(-1,it)*sin(2*3.14*sample);\ny=.02*cos(2*3.14*sample);\n\nmx=x*sin(q3)+y*cos(q3);\nmy=y*sin(q3)-x*cos(q3);\n\nx=.5-mx;\ny=.5+my;\n\nr=.6*sample*q12;\ng=.6*sample*q13;\nb=.6*sample*q11;"},{"baseVals":{"enabled":1},"init_eqs_str":"a.it=0;a.mx=0;a.q1=0;a.my=0;a.q11=0;a.q12=0;a.q13=0;","frame_eqs_str":"","point_eqs_str":"a.it+=1;a.x=.016*pow(-1,a.it)*Math.sin(6.28*a.sample);a.y=.016*Math.cos(6.28*a.sample);a.mx=a.x*Math.sin(a.q1)+a.y*Math.cos(a.q1);a.my=a.y*Math.sin(a.q1)-a.x*Math.cos(a.q1);a.x=.5+a.mx;a.y=.5+a.my;a.r=.6*a.sample*a.q11;a.g=.6*a.sample*a.q12;a.b=.6*a.sample*a.q13;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it=it+1;\nx=.016*pow(-1,it)*sin(2*3.14*sample);\ny=.016*cos(2*3.14*sample);\n\nmx=x*sin(q1)+y*cos(q1);\nmy=y*sin(q1)-x*cos(q1);\n\nx=.5+mx;\ny=.5+my;\n\nr=.6*sample*q11;\ng=.6*sample*q12;\nb=.6*sample*q13;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tt2=0;a.q12=0;a.q13=0;a.q29=0;a.q1=0;a.q5=0;a.tt1=0;a.bt2=0;a.mt1=0;a.q11=0;a.q4=0;a.bt1=0;a.vol=0;a.mt2=0;a.q2=0;a.q3=0;a.q30=0;","frame_eqs_str":"a.warp=0;a.wave_a=0;a.bt1=.95*a.bt1+div(30*sqr(5*a.bass),a.fps);a.mt1=.95*a.mt1+div(30*sqr(5*a.mid),a.fps);a.tt1=.95*a.tt1+div(30*sqr(5*a.treb),a.fps);a.bt2+=.005*a.bt1;a.mt2+=.005*a.mt1;a.tt2+=.005*a.tt1;a.q1=.01*a.bt2;a.q2=.01*a.mt2;a.q3=.01*a.tt2;a.q4=2+.7*Math.sin(.3*a.q1);a.q5=.5+.5*Math.sin(.5*a.q2);a.q11=Math.abs(Math.sin(.3*a.q1));a.q12=Math.abs(Math.sin(.3*a.q2));a.q13=Math.abs(Math.sin(.3*a.q3));a.vol=a.bass+a.treb+a.mid;a.q11=-2+.5*Math.sin(a.time)+a.vol;a.q12=-2+\n.5*Math.sin(a.time)+a.vol;a.q29=1*a.vol;a.q30=1.5*a.vol;","pixel_eqs_str":"a.rot=.1*pow(-a.ang,3)-a.q4*Math.sin((.5+.5*Math.sin(.2*a.q1))*a.ang);a.zoom=(.8+.2*Math.sin(.2*a.q2))*Math.sin(.2*Math.sin(.2*a.q3)-a.rad)+1.3;a.zoom+=.02*Math.sin(10*Math.sin(a.q5+a.x));","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\nwave_a=0;\n\n//// flexi's beat counter\nbt1 = bt1*0.95 + sqr(bass*5)*30/fps;\nmt1 = mt1*0.95 + sqr(mid*5)*30/fps;\ntt1 = tt1*0.95 + sqr(treb*5)*30/fps;\nbt2 = bt2 + bt1*0.005;\nmt2 = mt2 + mt1*0.005;\ntt2 = tt2 + tt1*0.005;\n\nq1 = bt2 *0.01;\nq2 = mt2 *0.01;\nq3 = tt2 *0.01;\n\nq4=2+.7*sin(.3*q1);\nq5=.5+.5*sin(.5*q2);\n\nq11=abs(sin(.3*q1));\nq12=abs(sin(.3*q2));\nq13=abs(sin(.3*q3));\nvol=bass+treb+mid;\nq11=-2+sin(time)*.5+vol;\nq12=-2+sin(time)*.5+vol;\nq29=(vol)*1;\nq30=vol*1.5;","pixel_eqs_eel":"/// based on bdrv code\n\nrot=.1*pow(-ang,3)-q4*sin((.5+.5*sin(.2*q1))*ang);\nzoom=(.8+.2*sin(.2*q2))*sin((.2*sin(.2*q3))-rad)+1.3;\nzoom=zoom+.02*sin(10*sin(q5+x));","warp":" shader_body { \n  vec3 rsamp_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_pw_main, uv);\n  ret_2 = tmpvar_4.xyz;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.xy - 0.5)\n   * 12.0) * texsize.zw)));\n  vec3 tmpvar_6;\n  tmpvar_6 = tmpvar_5.xyz;\n  rsamp_1 = tmpvar_6;\n  float tmpvar_7;\n  vec2 x_8;\n  x_8 = (tmpvar_4.xy - uv);\n  tmpvar_7 = sqrt(dot (x_8, x_8));\n  float tmpvar_9;\n  vec2 x_10;\n  x_10 = (tmpvar_5.xy - uv);\n  tmpvar_9 = sqrt(dot (x_10, x_10));\n  if ((tmpvar_7 > tmpvar_9)) {\n    ret_2.xy = tmpvar_6.xy;\n  };\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_pw_main, (uv + ((\n    (tmpvar_3.zw - 0.5)\n   * 48.0) * texsize.zw)));\n  rsamp_1 = tmpvar_11.xyz;\n  float tmpvar_12;\n  vec2 x_13;\n  x_13 = (ret_2.xy - uv);\n  tmpvar_12 = sqrt(dot (x_13, x_13));\n  float tmpvar_14;\n  vec2 x_15;\n  x_15 = (tmpvar_11.xy - uv);\n  tmpvar_14 = sqrt(dot (x_15, x_15));\n  if ((tmpvar_12 > tmpvar_14)) {\n    ret_2.xy = rsamp_1.xy;\n  };\n  ret_2.z = texture (sampler_fw_main, ret_2.xy).z;\n  ret_2.z = (ret_2.z + (q29 * 0.005));\n  if ((((ret_2.z + ret_2.y) + ret_2.x) < 0.9)) {\n    ret_2 = (ret_2 * 0.1);\n  };\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_2;\n  ret = tmpvar_16.xyz;\n }","comp":" shader_body { \n  vec3 plastic_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = q11;\n  tmpvar_5.y = q12;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.x;\n  tmpvar_6.y = tmpvar_4.x;\n  vec2 x_7;\n  x_7 = ((uv - (tmpvar_6 * 4.0)) - tmpvar_5);\n  plastic_1.x = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_7, x_7)), 0.5)\n  )));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_3.y;\n  tmpvar_8.y = tmpvar_4.y;\n  vec2 x_9;\n  x_9 = ((uv - (tmpvar_8 * 4.0)) - tmpvar_5);\n  plastic_1.y = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_9, x_9)), 0.5)\n  )));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_3.z;\n  tmpvar_10.y = tmpvar_4.z;\n  vec2 x_11;\n  x_11 = ((uv - (tmpvar_10 * 4.0)) - tmpvar_5);\n  plastic_1.z = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_11, x_11)), 0.5)\n  )));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ((plastic_1 * texture (sampler_main, uv).xyz) * 1.5);\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 pixelsize = texsize.zw;\nfloat2 uvm = uv;\n\nfloat2 noise_uv = uv*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\nfloat4 noiseVal = tex2D(sampler_noise_lq, noise_uv);\n\nret.xyz = saturate(tex2D( sampler_pw_main,uvm).xyz*float3(1,1,1) - float3(.0,.0,.0));\nret.xyz = tex2D( sampler_pw_main,uvm).xyz;\n\n\nfloat3 rsamp = tex2D(sampler_pw_main,uvm + (noiseVal.xy-.5)*12*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nrsamp = tex2D(sampler_pw_main,uvm + (noiseVal.zw-.5)*48*pixelsize).xyz;\nif (length(ret.xy - uvm) > length(rsamp.xy - uvm)) {\nret.xy = rsamp.xy;\n}\n\nret.z = tex2D(sampler_fw_main,ret.xy).z;\n\nret.z += q29*.005;\nif(ret.z+ret.y+ret.x<.9)ret*=.1;\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*8;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n    float2 light_pos = float2(q11,q12);\n    float3 col = float3(4,4,4);\n    float c = 4;\n    float dd = 16;\n    float3 plastic;\n    plastic.x = col.x/(1+dd*pow(length( uv - float2(dx.x,dy.x)*c - light_pos),0.5));\n    plastic.y = col.y/(1+dd*pow(length( uv - float2(dx.y,dy.y)*c - light_pos),0.5));\n    plastic.z = col.z/(1+dd*pow(length( uv - float2(dx.z,dy.z)*c - light_pos),0.5));\n\n    ret = plastic*GetPixel(uv)*1.5;\n\n\n}"}