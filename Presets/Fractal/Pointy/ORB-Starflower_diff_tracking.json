{"version":1,"baseVals":{"rating":5,"decay":1,"echo_zoom":1.0278,"echo_orient":1,"invert":1,"wave_a":0.001,"zoom":1.07,"rot":-0.5,"warp":0.011,"wave_r":0,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"smoothing":0},"init_eqs_str":"a.xs=0;a.ys=0;a.speed=0;a.q1=0;a.v=0;a.q3=0;a.q2=0;","frame_eqs_str":"","point_eqs_str":"a.xs=.00001<Math.abs(below(a.xs,1))?2.5:a.xs;a.ys=.00001<Math.abs(below(a.ys,1))?2:a.ys;a.speed=.6+.4*a.q1;a.v=1E3*a.sample+a.bass*a.value1*3;a.xs+=Math.sin(.1*a.v+a.time)*a.speed;a.ys+=Math.cos(1.2*a.v+a.q3)*a.speed;a.x=.5+.5*Math.cos(.02*a.xs+.1*a.time)*Math.sin(2*a.time+a.xs);a.y=.5+.5*Math.cos(.02*a.ys+.2*a.time)*Math.cos(a.q3+a.xs);a.r+=.5*Math.sin(4.22*a.q2);a.g+=.5*Math.sin(4.307*a.q2+(-.5-a.x)*(.5-a.y));a.b=a.g+.5*Math.sin(4.959*a.q2);a.x=.75*a.x+.125;a.y=.75*a.y+.125;\na.xs=.00001<Math.abs(above(a.xs,1E3))?2:a.xs;a.ys=.00001<Math.abs(above(a.ys,800))?2:a.ys;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//need for init\nxs = if(below(xs,1),2.5,xs);\nys = if(below(ys,1),2,ys);\n\n\nspeed = 0.6 + q1*0.4;\nv = sample*1000 + bass*value1*3;\n\nxs = xs + sin(v*0.1 + time)*speed;\nys = ys + cos(v*1.2 + q3)*speed;\n\nx = 0.5 + 0.5*cos(xs*0.02 +0.1*time)*sin(time*2 + xs);\ny = 0.5 + 0.5*cos(ys*0.02 + 0.2*time)*cos(q3 + xs);\n\nr = r + 0.5*sin(q2*4.22);\ng = g + 0.5*sin(q2*4.307  + (-0.5-x)*(0.5-y));\nb = g + 0.5*sin(q2*4.959);\n\nx = x*0.75 + 0.125;\ny = y*0.75 + 0.125;\n\nxs = if(above(xs,1000),2 ,xs);\nys = if(above(ys,800),2 ,ys);"},{"baseVals":{"spectrum":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.basstime=0;a.stickybit=0;a.bass_clip=0;a.volavg2=0;a.q1=0;a.sample1=0;a.diff=0;a.edge=0;a.volavg=0;a.time2=0;a.bit2=0;a.vol=0;a.q2=0;a.q3=0;a.basssum=0;a.sample2=0;","frame_eqs_str":"a.basstime+=.03*a.bass_att;a.vol=pow(a.bass+a.mid+a.treb,2);a.basssum=a.vol;a.stickybit=mod(a.time,2);a.volavg+=a.vol*equal(a.stickybit,1);a.sample1+=equal(a.stickybit,1);a.volavg2+=a.vol*equal(a.stickybit,0);a.sample2+=equal(a.stickybit,0);a.edge=bnot(equal(a.bit2,a.stickybit));a.volavg-=a.volavg*a.edge*a.stickybit;a.volavg2-=a.volavg2*a.edge*equal(a.stickybit,0);a.sample1-=a.sample1*a.edge*a.stickybit;a.sample2-=a.sample2*a.edge*equal(a.stickybit,0);a.diff=.00001<Math.abs(equal(a.stickybit,\n1))?div(a.basssum,div(a.volavg2,a.sample2)):0;a.diff=.00001<Math.abs(equal(a.stickybit,0))?div(a.basssum,div(a.volavg,a.sample1)):a.diff;a.diff=a.diff;a.monitor=a.diff;a.bit2=mod(a.time,2);a.q1=a.diff;a.basstime+=.09*a.bass_att;a.time2+=.01*a.bass_att;a.q2=a.time2+.4*equal(a.bass_clip,2);a.q3=a.basstime;","pixel_eqs_str":"a.rot=5*a.ang;a.zoom=1+.1*(1-a.rad);","init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass_att*0.03;\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg lvl in buffer\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\ndiff = diff;\n\nmonitor = diff;\n\nbit2 = time%2;\n\nq1 = diff;\n\n\nbasstime = basstime + (bass_att*0.09);\ntime2 = time2 + bass_att*0.01;\n\nq2 = time2 + equal(bass_clip,2)*0.4;\nq3 = basstime;","pixel_eqs_eel":"rot = ang*5;\nzoom = 1 + (1-rad)*0.1;// - 0.1*rad;","warp":"","comp":"","warp_hlsl":"","comp_hlsl":""}