{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":3,"wave_brighten":0,"wrap":0,"wave_a":100,"wave_scale":0.359,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.thresh=0;a.dx_r=0;a.dy_r=0;a.ax=0;a.bx=0;a.ay=0;a.by=0;a.q8=0;","frame_eqs_str":"a.wave_r=.5+.5*Math.sin(6*a.time);a.wave_g=.5+.5*Math.sin(4.1*a.time);a.wave_b=-1+(1-a.wave_r+1-a.wave_g);","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.ax=above(a.x,.5);a.bx=below(a.x,.5);a.ay=above(a.y,.5);a.by=below(a.y,.5);a.zoom=a.zoom+Math.abs(2*a.dx_r)+a.dy_r;a.zoom+=Math.abs(12*a.dx_r*Math.sin(4*a.rad-Math.cos(1-Math.sin(4*a.ang))));a.zoom+=.1*1.14*a.rad*below(a.rad,2.3);\na.dx+=16*a.dx_r*Math.sin(2.2*a.rad)*a.ax*a.ay;a.dy+=16*a.dy_r*Math.sin(-2.2*a.rad)*a.ax*a.ay;a.sx+=8.4*a.dx_r*Math.cos(14*a.ang)*a.ax*a.by;a.sy+=8.4*a.dy_r*Math.cos(14*a.ang)*a.ax*a.by;a.dx+=4*a.dx_r*Math.sin(5*a.rad)*a.bx*a.ay;a.dy+=4*a.dy_r*Math.sin(5*a.rad)*a.bx*a.ay;a.sx+=12.8*a.dx_r*Math.sin(.25-a.rad)*a.bx*a.by;a.sy+=12.8*a.dy_r*Math.sin(.25-a.rad)*a.bx*a.by;a.zoom-=.05*(2.2+a.rad)*Math.abs(Math.cos(3*a.ang));a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-\n1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.zoom+=.01;a.zoom+=.2*(.05+.04*Math.sin(a.time))*Math.sin(a.ang*a.time);a.rot+=.005*Math.cos(5*a.ang*a.bass*a.time);a.dx+=.1*above(a.rad,.25)*a.dx_r;a.dy+=.1*above(a.rad,.25)*a.dy_r;a.rot=.1*pow(-a.ang,3)-1.18*Math.sin(a.ang);a.zoom=1.45*Math.sin(-a.rad)+1.3+Math.sin(a.rad);a.dx+=.09*Math.sin(.785*a.q8);a.dy+=.09*Math.sin(.675*a.q8);\n","init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\nwave_g = 0.5 + 0.5*sin(4.1*time);\nwave_b = -1 + (1-wave_r + 1-wave_g);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\n\nax = above(x,0.5);\nbx = below(x,0.5);\nay = above(y,0.5);\nby = below(y,0.5);\nzoom = zoom + abs(2*dx_r)+dy_r;\n\nzoom = zoom + abs(6*dx_r*(2*sin(4*rad-cos(1-sin(4*ang)))));\nzoom = zoom + 0.1*(1.14*rad)*below(rad,2.3);\ndx = dx + 8*dx_r*(2*sin(2.2*rad))*ax*ay;\ndy = dy + 8*dy_r*(2*sin(-2.2*rad))*ax*ay;\nsx = sx + 7*dx_r*(1.2*cos(14*ang))*ax*by;\nsy = sy + 7*dy_r*(1.2*cos(14*ang))*ax*by;\ndx = dx + 4*dx_r*(sin(5*rad))*bx*ay;\ndy = dy + 4*dy_r*(sin(5*rad))*bx*ay;\nsx = sx + 8*dx_r*(1.6*sin(0.25-rad))*bx*by;\nsy = sy + 8*dy_r*(1.6*sin(0.25-rad))*bx*by;\nzoom = zoom - 0.05*((2.2+rad)*abs(cos(3*ang)));\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\n\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\nzoom = zoom + 0.01;\nzoom = zoom + (0.05 + 0.04*sin(time))*(0.2*sin(ang*time));\nrot = rot + 0.01*(0.5*cos(ang*5*bass*time));\n\ndx = dx + 0.1*above(rad,0.25)*dx_r;\ndy = dy + 0.1*above(rad,0.25)*dy_r;\nrot=0.1*pow(-ang,3)-1.18*sin(ang);\nzoom=1.45*sin(-rad)+1.3+ sin(rad);\ndx = dx + 0.09*sin(q8*0.785);\ndy = dy + 0.09*sin(q8*0.675);\n//zoom = zoom +q7;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_fc_main, uv).xyz * 0.8);\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (texsize.xyy * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.4) * time)));\n  if ((((ret_1.x + ret_1.y) + ret_1.z) > 0.5)) {\n    ret_1 = (ret_1 + (tmpvar_2 * 0.5).xyz);\n  };\n  ret_1 = (ret_1 + ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) * 0.2));\n  ret_1 = (ret_1 * (ret_1 / (1.4 * rad)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  float tmpvar_3;\n  tmpvar_3 = -(q8);\n  float tmpvar_4;\n  tmpvar_4 = (uv.x - 0.5);\n  float tmpvar_5;\n  tmpvar_5 = (uv.y - 0.5);\n  tmpvar_2.x = (((\n    (tmpvar_4 * cos((tmpvar_3 * 0.29)))\n   + \n    (tmpvar_5 * sin((tmpvar_3 * 0.29)))\n  ) * 0.8) + 0.5);\n  tmpvar_2.y = (((\n    (-(tmpvar_4) * sin((tmpvar_3 * 0.29)))\n   + \n    (tmpvar_5 * cos((tmpvar_3 * 0.29)))\n  ) * 0.8) + 0.5);\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\n    (0.5 - uv)\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 0.8);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (texsize.xyy * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.4) * time)));\n  if ((((ret_1.x + ret_1.y) + ret_1.z) < 0.1)) {\n    ret_1 = (ret_1 + (tmpvar_6 * 0.3).xyz);\n  };\n  ret_1 = (ret_1 + (texture (sampler_main, (tmpvar_2 * q9)).xyz * 0.2));\n  ret_1 = (1.0 - ((ret_1 * \n    (1.0 - ret_1)\n  ) * 4.0));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_fc_main, uv ).xyz*.8;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nif(ret.x+ret.y+ret.z>.5)ret += (noise2)*.5; \n\n    ret += GetBlur1(uv)*.2;\n\n    // darken (decay) over time and distance from center\n    ret *= ret/(1.4*rad); //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n    \n    //rotate texture cords\n    float texRotU2 = (uv[0] - 0.5)*cos(-q8*0.29) + (uv[1] - 0.5)*sin(-q8*0.29);\n    float texRotv2 = -(uv[0] - 0.5)*sin(-q8*0.29) + (uv[1] - 0.5)*cos(-q8*0.29);\n\n\t\n\t    float2 uv2 = float2(texRotU2*0.8 +0.5, texRotv2*0.8 + 0.5);\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo).xyz, \n                0.50 \n              )*0.8;\n    \nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nif(ret.x+ret.y+ret.z<.1)ret += (noise2)*.3; \n\n    ret += tex2D(sampler_main, uv2*q9).xyz*0.2;\n    ret *= 1.00; //gamma\n    ret = 1 - ret*(1 - ret)*4; //invert\n}"}