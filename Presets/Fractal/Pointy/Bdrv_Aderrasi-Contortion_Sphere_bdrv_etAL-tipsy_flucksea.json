{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":1,"echo_zoom":1,"echo_orient":2,"wave_mode":1,"wave_dots":1,"wave_thick":1,"wrap":0,"wave_a":100,"wave_scale":3.749,"wave_smoothing":0,"wave_mystery":-0.4,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":100,"warpscale":0.01,"zoomexp":11.20206,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_a":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.2,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q6=0;a.thresh=0;a.q1=0;a.q5=0;a.dy_r=0;a.vtime=0;a.q4=0;a.dx_r=0;a.ing=0;a.q2=0;a.q3=0;a.q7=0;a.q8=0;","frame_eqs_str":"a.wave_r=a.wave_r+.25*Math.sin(1.4*a.time)+.25*Math.sin(2.25*a.time);a.wave_g=a.wave_g+.25*Math.sin(1.7*a.time)+.25*Math.sin(2.11*a.time);a.wave_b=a.wave_b+.25*Math.sin(1.84*a.time)+.25*Math.sin(2.3*a.time);a.warp=0;a.ob_r=.3+.3*Math.sin(1.56*a.time);a.ob_g=.3+.3*Math.sin(2.15*a.time);a.ob_b=.3+.3*Math.cos(1.4*a.time);a.ib_r=.3+.3*Math.cos(1.83*a.time);a.ib_g=.3+.3*Math.cos(1.02*a.time);a.ib_b=.3+.3*Math.sin(2*a.time);a.ing=2*Math.sin(.25*a.time);a.wave_x+=.7*Math.sin(a.time);\na.wave_y+=.7*Math.cos(a.time);a.vtime+=.001*(a.bass+a.treb+a.mid);a.q1=Math.cos(a.vtime);a.q2=Math.sin(1.05*a.vtime);a.q3=-Math.sin(1.1*a.vtime);a.q4=-Math.cos(.95*-a.vtime);a.q5=-Math.tan(1.15*a.vtime);a.q6=Math.sin(.9*-a.vtime);a.q7=-Math.cos(.895*-a.vtime);a.q8=-Math.cos(1.3*a.vtime);a.monitor=a.q8;","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.rot+=.75*(1-a.rad)*Math.sin(.48*a.time*a.dy_r)*Math.sin(a.time);a.zoom-=.1*(.9-a.rad);a.cx+=.1875*Math.sin(a.time)*Math.sin(1.25*a.time*a.dy_r);a.cy+=.1875*Math.cos(a.time)*Math.cos(1.6*a.time*a.dx_r);a.thresh=2*above(a.bass_att,\na.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.zoom+=.01;a.zoom+=.2*(.05+.04*Math.sin(a.time))*Math.sin(a.ang*a.time);a.rot+=.005*Math.cos(5*a.ang*a.bass*a.time);a.dx+=.1*above(a.rad,.25)*a.dx_r;a.dy+=.1*above(a.rad,.25)*a.dy_r;a.rot=.1*pow(-a.ang,3)-1.18*Math.sin(a.ang);a.zoom=1.45*Math.sin(-a.rad)+1.3+Math.sin(a.rad);a.dx+=\n.09*Math.sin(.785*a.q8);a.dy+=.09*Math.sin(.675*a.q8);","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.25*sin(1.4*time) + 0.25*sin(2.25*time);\nwave_g = wave_g + 0.25*sin(1.7*time) + 0.25*sin(2.11*time);\nwave_b = wave_b + 0.25*sin(1.84*time) + 0.25*sin(2.3*time);\nwarp = 0;\nob_r = 0.3 + 0.3*sin(1.56*time);\nob_g = 0.3 + 0.3*sin(2.15*time);\nob_b = 0.3 + 0.3*cos(1.4*time);\nib_r = 0.3 + 0.3*cos(1.83*time);\nib_g = 0.3 + 0.3*cos(1.02*time);\nib_b = 0.3 + 0.3*sin(2*time);\ning = 2*sin(0.25*time);\nwave_x = wave_x + 0.7*sin(time);\nwave_y = wave_y + 0.7*cos(time);\nvtime=vtime+(bass+treb+mid)*.001;\nq1=cos(vtime);\nq2=sin(vtime*1.05);\nq3=-sin(vtime*1.1);\nq4=-cos(-vtime*.95);\nq5=-tan(vtime*1.15);\nq6=sin(-vtime*.9);\nq7=-cos(-vtime*.895);\nq8=-cos(vtime*1.3);\nmonitor=q8;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\nrot = rot + 0.15*(1-rad)*(5*sin(0.48*time*dy_r)*sin(time));\nzoom = zoom - 0.1*(0.9-rad);\ncx = cx + 0.25*sin(time)*(0.75*sin(1.25*time*dy_r));\ncy = cy + 0.25*cos(time)*(0.75*cos(1.6*time*dx_r));\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\n\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\nzoom = zoom + 0.01;\nzoom = zoom + (0.05 + 0.04*sin(time))*(0.2*sin(ang*time));\nrot = rot + 0.01*(0.5*cos(ang*5*bass*time));\n\ndx = dx + 0.1*above(rad,0.25)*dx_r;\ndy = dy + 0.1*above(rad,0.25)*dy_r;\nrot=0.1*pow(-ang,3)-1.18*sin(ang);\nzoom=1.45*sin(-rad)+1.3+ sin(rad);\ndx = dx + 0.09*sin(q8*0.785);\ndy = dy + 0.09*sin(q8*0.675);\n//zoom = zoom +q7;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  float tmpvar_2;\n  tmpvar_2 = dot (texsize.zw, texsize.zw);\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \n    ((tmpvar_3 * (1.0 - (8.0 * \n      sqrt(tmpvar_2)\n    ))) + 0.5)\n  ).xyz), texture (sampler_main, (\n    (tmpvar_3 * (1.0 + (8.0 * sqrt(tmpvar_2))))\n   + 0.5)).xyz) - 0.03);\n  ret = tmpvar_1.xyz;\n }","comp":"vec2 xlat_mutablefactorA;\n shader_body { \n  vec2 uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  vec2 tmpvar_3;\n  tmpvar_3.x = q1;\n  tmpvar_3.y = q2;\n  xlat_mutablefactorA = (tmpvar_2 + tmpvar_3);\n  vec2 tmpvar_4;\n  tmpvar_4 = (xlat_mutablefactorA * vec2(8.0, 8.0));\n  vec2 tmpvar_5;\n  tmpvar_5.x = q3;\n  tmpvar_5.y = q4;\n  xlat_mutablefactorA = (tmpvar_2 + tmpvar_5);\n  vec2 tmpvar_6;\n  tmpvar_6 = (xlat_mutablefactorA * vec2(8.0, 8.0));\n  vec2 tmpvar_7;\n  tmpvar_7.x = q5;\n  tmpvar_7.y = q6;\n  xlat_mutablefactorA = (tmpvar_2 + tmpvar_7);\n  vec2 tmpvar_8;\n  tmpvar_8 = (xlat_mutablefactorA * vec2(8.0, 8.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = q7;\n  tmpvar_9.y = q8;\n  xlat_mutablefactorA = (tmpvar_2 + tmpvar_9);\n  vec2 tmpvar_10;\n  tmpvar_10 = (xlat_mutablefactorA * vec2(8.0, 8.0));\n  vec2 tmpvar_11;\n  tmpvar_11.x = ((tmpvar_4.x * tmpvar_6.x) - (tmpvar_4.y * tmpvar_6.y));\n  tmpvar_11.y = ((tmpvar_4.x * tmpvar_6.y) + (tmpvar_4.y * tmpvar_6.x));\n  vec2 tmpvar_12;\n  tmpvar_12.x = ((tmpvar_8.x * tmpvar_10.x) - (tmpvar_8.y * tmpvar_10.y));\n  tmpvar_12.y = ((tmpvar_8.x * tmpvar_10.y) + (tmpvar_8.y * tmpvar_10.x));\n  xlat_mutablefactorA = tmpvar_11;\n  vec2 tmpvar_13;\n  tmpvar_13.x = ((tmpvar_11.x * tmpvar_12.x) - (tmpvar_11.y * tmpvar_12.y));\n  tmpvar_13.y = ((tmpvar_11.x * tmpvar_12.y) + (tmpvar_11.y * tmpvar_12.x));\n  vec2 tmpvar_14;\n  tmpvar_14.x = tmpvar_13.x;\n  tmpvar_14.y = -(tmpvar_13.y);\n  uv_1 = ((tmpvar_14 / (\n    (tmpvar_13.x * tmpvar_13.x)\n   + \n    (tmpvar_13.y * tmpvar_13.y)\n  )) * 16.0);\n  uv_1 = (0.5 + ((1.0 - \n    abs(((fract(\n      (mix ((0.5 + (tmpvar_2 * 2.0)), (uv_1 + 0.5), vec2(0.5, 0.5)) * 0.5)\n    ) * 2.0) - 1.0))\n  ) - 0.5));\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = texture (sampler_fc_main, uv_1).xyz;\n  ret = tmpvar_15.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // feather pen\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1-8*length(texsize.zw)) + 0.5 ).xyz);\n    ret = max(ret, tex2D( sampler_main, (uv-0.5)*(1+8*length(texsize.zw)) + 0.5 ).xyz);\n\n    // darken over time\n    ret -= 0.03;\n}","comp_hlsl":"sampler sampler_fc_sunrise;\nfloat2 factorA, factorB, product;\nfloat2 numerator, denominator, fraction;\nshader_body\n{\nfloat2 uvo = uv;\nuv = (uv-0.5);\nfactorA = uv+ float2(q1,q2);\nfactorB = float2(8,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv1 = product;\nfactorA = uv+ float2(q3,q4);\nfactorB = float2(8,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv2 = product;\nfactorA = uv+ float2(q5,q6);\nfactorB = float2(8,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv3 = product;\nfactorA = uv+ float2(q7,q8);\nfactorB = float2(8,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv4 = product;\nfactorA = uv1;\nfactorB = uv2;\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv12 = product;\nfactorA = uv3;\nfactorB = uv4;\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv34 = product;\nfactorA = uv12;\nfactorB = uv34;\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nnumerator = float2(1,0);\ndenominator = product;\nfraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part\n                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part\n                   (denominator.x*denominator.x + denominator.y*denominator.y);\nuv = fraction*16;\nuv = lerp(0.5 + (uvo-0.5)*2,uv+0.5,0.5);\nuv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5); // Eo.S. mirror code with cutted borders\n\nret = tex2D( sampler_fc_main, uv );\n\n}"}