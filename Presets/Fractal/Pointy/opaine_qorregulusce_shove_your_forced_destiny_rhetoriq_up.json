{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.95,"echo_zoom":0.672,"echo_orient":1,"wave_mode":5,"wave_brighten":0,"wave_a":100,"wave_scale":1.074,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":0.049,"warp":0.06961,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.20067,"tex_zoom":1.81669,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.r=2-Math.abs(a.q1);a.g=2-Math.abs(a.q2);a.b=2-Math.abs(a.q3);a.r2=a.q2;a.g2=2-Math.abs(a.q3);a.b2=.5+.5*Math.sin(a.time);a.rad=a.rad-.2+.2*a.bass_att;a.x+=.24*Math.cos(.5-Math.sin(2.342*a.time));a.y-=.291*Math.sin(.5-Math.sin(2.793*a.time));a.ang+=12*a.time;a.x+=.052*Math.cos(1.52*a.time);a.y+=.061*Math.sin(2.15*a.time);","init_eqs_eel":"","frame_eqs_eel":"r = 2-abs(q1);\ng = 2-abs(q2);\nb = 2-abs(q3);\nr2 = q2;\ng2 = 2-abs(q3);\nb2 = 0.5 + 0.5*sin(time);\nrad = rad -0.2 + 0.2*bass_att;\nx = x + 0.24*cos(0.5-sin(2.342*time));\ny = y - 0.291*sin(0.5-sin(2.793*time));\nang = ang + 12*time;\nx = x + 0.052*cos(1.52*time);\ny = y + 0.061*sin(2.15*time);"},{"baseVals":{"enabled":1,"textured":1,"rad":0.44484,"ang":2.51327,"tex_ang":0.06283,"tex_zoom":2.00676,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang+=4*a.time;a.x+=.152*Math.cos(6.52*a.time);a.y+=.161*Math.sin(5.15*a.time);","init_eqs_eel":"","frame_eqs_eel":"ang = ang + 4*time;\nx = x + 0.152*cos(6.52*time);\ny = y + 0.161*sin(5.15*time);"},{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.20067,"tex_zoom":1.48886,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.rad=a.rad-.2+.2*a.bass_att;a.x+=.154*Math.cos(1.652*a.time);a.y-=.1391*Math.sin(1.452*a.time);a.ang+=12*a.time;a.x+=.052*Math.cos(1.52*a.time);a.y+=.061*Math.sin(2.15*a.time);","init_eqs_eel":"","frame_eqs_eel":"rad = rad -0.2 + 0.2*bass_att;\nx = x + 0.154*cos(1.652*time);\ny = y - 0.1391*sin(1.452*time);\nang = ang + 12*time;\nx = x + 0.052*cos(1.52*time);\ny = y + 0.061*sin(2.15*time);"},{"baseVals":{"sides":100,"rad":0.07419,"tex_zoom":0.05996,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = x + 0.124*cos(1.342*time);\ny = y + 0.1391*sin(3.793*time);\nang = ang + 0.12*time;\nx = x + 0.052*cos(1.52*time);\ny = y + 0.061*sin(2.15*time);\nrad = rad + abs(0.11*sin(time));","init_eqs_eel":"","frame_eqs_eel":"x = x + 0.124*cos(1.342*time);\ny = y + 0.1391*sin(3.793*time);\nang = ang + 0.12*time;\nx = x + 0.052*cos(1.52*time);\ny = y + 0.061*sin(2.15*time);\nrad = rad + abs(0.11*sin(time));"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q29=0;a.q1=0;a.mq31=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.edge=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.edge2=0;a.atime=0;a.q26=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.q2=0;a.q27=0;a.q3=0;a.q28=0;a.edgemod=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.decay=.95;\na.ib_r=.5*Math.sin(a.time)+.5;a.ib_g=.5*Math.sin(a.time+2.1)+.5;a.ib_b=.5*Math.sin(a.time+4.2)+.5;a.ob_r=a.ib_r-.5;a.ob_g=a.ib_g-.5;a.ob_b=a.ib_b-.5;a.q1=a.ib_r;a.q2=a.ib_g;a.q3=a.ib_b;a.warp=0;","pixel_eqs_str":"a.edge=(a.rad+.48)*above(a.rad-.5,0)*.15;a.edge2=(a.rad+.48)*below(a.rad-.5,0)*.08;a.edgemod=-.5*Math.tan(5*a.rad-a.bass_att)+.5-Math.atan(5*a.rad+a.treb_att);a.zoom=-1-a.edge*a.edgemod*a.rad+a.edge2;","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\ndecay=0.95;\n\n\n\n\nib_r=sin(time)*0.5+0.5;\nib_g=sin(time+2.1)*0.5+0.5;\nib_b=sin(time+4.2)*0.5+0.5;\n\nob_r=ib_r-0.5;\nob_g=ib_g-0.5;\nob_b=ib_b-0.5;\nq1=ib_r;\nq2=ib_g;\nq3=ib_b;\n\n\nwarp=0.0;\n//echo_zoom=1;\n//rot=sin(time)*0.01;","pixel_eqs_eel":"edge=(rad+.48) * above(rad-0.5,0) * 0.15;\nedge2=(rad+.48) * below(rad-0.5,0) * 0.08;\nedgemod=-1*tan(rad*5-bass_att)*0.5+0.5-atan(rad*5+treb_att);\nzoom=-1-(edge*edgemod*1)*rad+edge2;\n//zoom=1 + sin(ang*3)*0.005","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec3 tmpvar_2;\n  tmpvar_2 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  ret_1 = (ret_1 + (mix (\n    (ret_1 - tmpvar_2)\n  , \n    ((((texture (sampler_blur2, uv).xyz * scale2) + bias2) - tmpvar_2) * 2.0)\n  , vec3(rad)) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(0.5, 0.5, 0.5), vec3(0.03, 0.03, 0.03));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((tmpvar_3.x > (q21 * q13)) && (tmpvar_3.x <= (q24 * q11)))) {\n    ret_1.y = (tmpvar_3.y + (tmpvar_4.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (tmpvar_3.z + (tmpvar_4.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (tmpvar_3.x + (tmpvar_4.z * 0.5));\n  };\n  ret_1 = (ret_1 + (19.52 * (\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0)));\n  ret_1 = mix (ret_1, ret_1.zxy, vec3(0.02, 0.02, 0.02));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec2 uv3_1;\n  vec2 uv2_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = (q27 * tmpvar_5);\n  float tmpvar_8;\n  tmpvar_8 = (0.1 * q30);\n  uv2_2.y = (tmpvar_6.y + tmpvar_8);\n  uv2_2.x = (tmpvar_7 + (0.2 * time));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_7;\n  tmpvar_9.y = (4.0 * tmpvar_5);\n  uv3_1.x = tmpvar_9.x;\n  uv3_1.y = (tmpvar_9.y - tmpvar_8);\n  float tmpvar_10;\n  tmpvar_10 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  ret_3 = (((\n    (3.0 * max (((2.0 * texture (sampler_main, uv2_2).xyz) + texture (sampler_main, uv3_1).xyz), ((2.0 * \n      ((texture (sampler_blur2, fract(uv2_2)).xyz * scale2) + bias2)\n    ) + (\n      (texture (sampler_blur2, fract(uv3_1)).xyz * scale2)\n     + bias2))))\n   * rad) + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_10)) + ((tmpvar_10 * 2.0) * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv3_1.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_3.x > (q26 * q13)) && (ret_3.x <= (q23 * q11)))) {\n    ret_3.z = (ret_3.z - (tmpvar_11.x * 0.5));\n  };\n  if (((ret_3.y > (q25 * q11)) && (ret_3.y <= (q22 * q12)))) {\n    ret_3.x = (ret_3.x - (tmpvar_11.y * 0.5));\n  };\n  if (((ret_3.z > (q24 * q12)) && (ret_3.z <= (q21 * q13)))) {\n    ret_3.y = (ret_3.y - (tmpvar_11.z * 0.5));\n  };\n  ret_3 = (1.0 - ret_3);\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_3;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret.xyz = tex2D( sampler_main, uv ).xyz;\n\n      // take the difference between the crisp and blurred images,\n      // then add it back into the image.  Creates spots and stripes over time.\n      float3 b0 = ret.xyz;\n      float3 b1 = GetBlur1(uv).xyz;\n      float3 b2 = GetBlur2(uv).xyz;\n      //float b3 = GetBlur3(uv).xyz;\n      float3 dc = b0-b1;\n      dc = lerp(dc, (b2-b1)*2, rad);\n      \n      ret.xyz += dc*0.3;\n      ret.xyz *= 0.9;\n      ret = lerp(ret, 0.5, 0.03);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n\n\n      // add noise:\n      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1 + rand_frame.xy;\n      ret.xyz += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 122 \n                    //* saturate(treb_att-1);\n                    *0.16;\n\n      // desaturate over time, to keep the globs white\n      //ret.xyz = lerp(ret.xyz, lum(ret.xyz), 0.2);\n      ret.xyz = lerp(ret.xyz, ret.zxy, 0.02);\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, q27*rad1);\nuv2.y = uv2.y  +.1*q30;\nuv2.x = uv2.x  +.2*time;\n\nfloat2 uv3 = float2 (ang/3.14, 4*rad1);\nuv3.y = uv3.y  -.1*q30;\n\n\nfloat3 crisp = 2*GetPixel(uv2) + GetPixel(uv3);\ncrisp = max(crisp,2*GetBlur2(frac(uv2)) + GetBlur2(frac(uv3)));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * 2*GetBlur1(uv);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv3.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret=1-ret;\n}"}