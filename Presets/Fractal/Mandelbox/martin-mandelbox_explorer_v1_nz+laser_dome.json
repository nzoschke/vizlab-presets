{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.958,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":0.2,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":25.6,"mv_y":9.6,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.09,"y":0.9,"rad":0.22437,"tex_zoom":1.76002,"r2":1,"g2":0,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":6.19589,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"additive":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.49981,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"thick":1,"additive":1,"scaling":3.91581,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.px=0;a.mq1=0;a.tic=0;a.w=0;a.index2=0;a.crit=0;a.q25=0;a.index=0;a.h3=0;a.q12=0;a.q22=0;a.q21=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.l1angy=0;a.bt=0;a.mq31=0;a.dec_med=0;a.q5=0;a.py=0;a.mindev=0;a.mq21=0;a.mq24=0;a.trel=0;a.v=0;a.t0a=0;a.chng=0;a.mq28=0;a.mm=0;a.h2=0;a.tt=0;a.bm=0;a.mq23=0;a.is_beat=0;a.q23=0;a.q24=0;a.jump=0;a.dec_slow=0;a.ran2=0;a.q11=0;a.q10=0;a.sdev=0;a.atime=0;a.q4=0;a.pp=0;a.spb=0;a.spb_=0;a.pz=0;a.q16=0;a.q26=0;a.mt=0;a.avg=0;a.puls=0;\na.mq27=0;a.mq25=0;a.trig=0;a.mx=0;a.mn=0;a.mq22=0;a.beat=0;a.q17=0;a.vol=0;a.l1angz=0;a.peak=0;a.mq26=0;a.bb=0;a.q27=0;a.q14=0;a.sw1=0;a.h1=0;a.q3=0;a.t0=0;a.ran1=0;a.q28=0;a.test=0;a.q30=0;a.q20=0;a.index2=Math.floor(rand(8));a.px=Math.floor(rand(100));a.py=Math.floor(rand(100));a.pz=Math.floor(rand(100));","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.dec_med=pow(.85,div(30,\na.fps));a.dec_slow=pow(.95,div(30,a.fps));a.beat=a.mid;a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,1.2*a.avg)*above(a.time,a.t0+.1);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,32);a.index2=mod(a.index2+a.is_beat*bnot(a.index),8);a.spb=Math.min(a.t0-a.t0a+.01,2);a.t0a=a.t0;a.spb_=.00001<Math.abs(a.is_beat)?.9*a.spb_+.1*a.spb:a.spb_;a.mindev=Math.min(Math.min(Math.abs(a.spb-a.spb_),Math.abs(2*a.spb-\na.spb_)),Math.abs(a.spb-2*a.spb_));a.sdev=.00001<Math.abs(a.is_beat)?.96*a.sdev+.04*pow(a.mindev+.01,2):a.sdev;a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q24=a.is_beat;a.q27=a.index;a.q28=a.index2;a.puls=a.puls*a.dec_med+(1-a.dec_med)*a.q24*16*bnot(mod(a.index,4));a.q23=Math.min(1,a.puls);a.test+=120*div(above(a.beat,1.2*a.avg)*(a.beat-a.avg),a.fps);a.tic=div(a.q27,2);a.l1angz=0*a.tic+33*a.test;a.l1angy=div(1.6*(1+Math.sin(2*a.test)),2);a.sw1=mod(a.q28,2)*above(a.avg,1);a.l1angy=a.l1angy-div(1,a.q22)*\na.sw1+div((1-a.sw1)*a.q22,8);a.l1angy+=2*above(a.avg,1.2)*Math.sin(a.q22);a.q10=Math.cos(a.l1angz)*Math.sin(a.l1angy);a.q11=Math.sin(a.l1angz)*Math.sin(a.l1angy);a.q12=Math.abs(Math.cos(a.l1angy)*Math.cos(a.l1angy));a.trig=a.q24*bnot(mod(a.index,2));a.ran1=.00001<Math.abs(a.trig)?div(Math.floor(rand(100)),100)-.5:a.ran1;a.ran2=.00001<Math.abs(a.trig)?div(Math.floor(rand(100)),100)-.5:a.ran2;a.q13=div(a.ran1,2);a.q14=div(a.ran2,2);a.pp=div(4*a.avg*a.q13,a.fps);a.pp=div(1,a.fps);a.crit=Math.floor(div(a.q27,\n8));a.px+=equal(a.crit,0)*a.pp;a.py+=equal(a.crit,1)*a.pp;a.pz+=equal(a.crit,2)*a.pp;a.trel+=div(div(1,a.spb_),a.fps);a.jump=Math.floor(a.trel)*below(a.sdev,.004*a.avg);a.q15=a.px+a.jump;a.q16=a.py+a.jump;a.q17=a.pz+a.jump;a.q30=above(a.q28,5);a.monitor=a.avg;a.q29=div(a.q22,16)*(above(a.q22,1.5)+.8-a.avg)+.1*(Math.sin(div(a.time,5))-.8);a.zoom=1;a.warp=0;a.rot=0;a.dx=0;a.dy=-.02;a.bb=.99*a.bb+.02*a.bass;a.mm=.99*a.mm+.02*a.mid;a.tt=.99*a.tt+.02*a.treb;a.mx=Math.max(Math.max(a.bb,a.mm),a.tt);a.mn=\nMath.min(Math.min(a.bb,a.mm),a.tt);a.h1=div(a.bb-a.mn,a.mx-a.mn);a.h2=div(a.mm-a.mn,a.mx-a.mn);a.h3=div(a.tt-a.mn,a.mx-a.mn);a.v=div(.2,a.fps);a.bm+=(a.h1-a.h2)*a.v;a.mt+=(a.h2-a.h3)*a.v;a.bt+=(a.h1-a.h3)*a.v;a.w=a.bm;a.q3=4*Math.sin(a.w);a.q4=Math.cos(a.w);a.q5=2*a.mt;a.q6=2*a.bt;a.q30=2*(a.bass+a.treb+a.mid);","pixel_eqs_str":"","init_eqs_eel":"index2 = int(rand(8));\npx = int(rand(100));\npy = int(rand(100));\npz = int(rand(100));","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;//q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\ndec_med = pow (0.85, 30/fps);\ndec_slow = pow (0.95, 30/fps);\nbeat = mid;\navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, 1.2*avg) * above (time, t0+.1);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %32;\nindex2 = (index2 + is_beat*bnot(index))%8;\n\nspb = min(t0-t0a + .01,2); t0a = t0;\nspb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);\nmindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));\nsdev = if(is_beat,sdev * .96 + .04*pow(mindev+.01,2),sdev);\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq24 = is_beat;\nq27 = index;\nq28 = index2;\npuls = puls*dec_med + (1-dec_med)*q24*16*bnot(index%4);\nq23 = min(1,puls);\n\ntest = test + above(beat,avg*1.2) * (beat-avg)/fps*30*4;\ntic = q27/2;\n\nl1angz = tic*0+ test*33;\nl1angy = (1+sin(2*test))*1.6/2;\nsw1 = (q28%2) * above(avg,1);\nl1angy = l1angy-1/q22*sw1+ (1-sw1)*q22/8;\nl1angy = l1angy+above(avg,1.2)*2*sin(q22);\n\nq10 = cos(l1angz)*sin(l1angy);\nq11 = sin(l1angz)*sin(l1angy);\nq12 = abs(cos(l1angy)*cos(l1angy));\n\ntrig = q24 * bnot(index%2);\nran1 = if (trig,int(rand(100))/100-.5, ran1);\nran2 = if (trig,int(rand(100))/100-.5, ran2);\nq13 = ran1/2;\nq14 = ran2/2;\n\npp =  4*avg*q13/fps;\npp = 1/fps;\ncrit= int(q27/8);\npx = px + equal(crit,0)*pp;\npy = py + equal(crit,1)*pp;\npz = pz + equal(crit,2)*pp;\n\ntrel = trel + 1/spb_/fps;\njump = int(trel) * below(sdev,.004*avg);\n\nq15 = px+jump;\nq16 = py+jump;\nq17 = pz+jump;\n\nq30 = above(q28,5);\nmonitor = avg;\n\nq29 = q22/16*(above(q22,1.5)+.8-avg)+(sin(time/5)-.8)*.1;\n\nzoom = 1;\nwarp = 0.0; rot = 0;\ndx = 0;\ndy = -.02;\n\nbb = bb*0.99 + bass*0.02;\nmm = mm*0.99 + mid*0.02;\ntt = tt*0.99 + treb*0.02;\n\nmx = max(max(bb,mm),tt);\nmn = min(min(bb,mm),tt);\n\nh1 = (bb-mn)/(mx-mn);\nh2 = (mm-mn)/(mx-mn);\nh3 = (tt-mn)/(mx-mn);\nv = 0.2/fps;\nbm = bm + (h1-h2)*v;\nmt = mt + (h2-h3)*v;\nbt = bt + (h1-h3)*v;\nw = bm;\nq3 = sin(w)*4;\nq4 = cos(w);\nq5 = mt*2;\nq6 = bt*2;\nq30=(bass+treb+mid)*2;","pixel_eqs_eel":"","warp":"float sustain;\nfloat xlat_mutabledist;\nfloat xlat_mutablestruc;\nvec2 xlat_mutableuv1;\n shader_body { \n  mat3 tmpvar_1;\n  tmpvar_1[uint(0)].x = q20;\n  tmpvar_1[uint(0)].y = q23;\n  tmpvar_1[uint(0)].z = q26;\n  tmpvar_1[1u].x = q21;\n  tmpvar_1[1u].y = q24;\n  tmpvar_1[1u].z = q27;\n  tmpvar_1[2u].x = q22;\n  tmpvar_1[2u].y = q25;\n  tmpvar_1[2u].z = q28;\n  vec3 tmpvar_2;\n  tmpvar_2.x = q4;\n  tmpvar_2.y = q5;\n  tmpvar_2.z = q6;\n  sustain = (0.98 - (q14 * 2.0));\n  vec2 uv_3;\n  vec3 uv2_4;\n  vec3 ret_5;\n  uv_3 = (((uv - 0.5) * q13) + 0.5);\n  xlat_mutableuv1 = ((uv_3 - 0.5) * aspect.xy);\n  vec4 tmpvar_6;\n  tmpvar_6 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\n  xlat_mutabledist = tmpvar_6.x;\n  if ((tmpvar_6.y > 0.2)) {\n    vec2 uvi_7;\n    uvi_7 = (uv_3 + (0.003 * (tmpvar_6.zy - 0.5)));\n    vec2 pix_8;\n    vec4 nb_9;\n    vec2 x_10;\n    x_10 = (uvi_7 - 0.5);\n    pix_8 = (texsize.zw * (1.0 + (\n      sqrt(dot (x_10, x_10))\n     * 3.0)));\n    vec2 tmpvar_11;\n    float tmpvar_12;\n    tmpvar_12 = (1.0/(q31));\n    tmpvar_11 = (tmpvar_12 * floor((\n      (q31 * texture (sampler_pw_main, uvi_7).yz)\n     + vec2(0.5, 0.5))));\n    vec2 tmpvar_13;\n    tmpvar_13 = (tmpvar_12 * floor((\n      (q31 * texture (sampler_pw_main, (uvi_7 - pix_8)).yz)\n     + vec2(0.5, 0.5))));\n    float tmpvar_14;\n    tmpvar_14 = (1.0/(q30));\n    nb_9.x = pow ((1.0 - (tmpvar_13.y + \n      (0.015625 * (tmpvar_13.x - 0.505))\n    )), tmpvar_14);\n    vec2 tmpvar_15;\n    tmpvar_15 = (tmpvar_12 * floor((\n      (q31 * texture (sampler_pw_main, (uvi_7 + (pix_8 * vec2(1.0, -1.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb_9.y = pow ((1.0 - (tmpvar_15.y + \n      (0.015625 * (tmpvar_15.x - 0.505))\n    )), tmpvar_14);\n    vec2 tmpvar_16;\n    tmpvar_16 = (tmpvar_12 * floor((\n      (q31 * texture (sampler_pw_main, (uvi_7 + pix_8)).yz)\n     + vec2(0.5, 0.5))));\n    nb_9.z = pow ((1.0 - (tmpvar_16.y + \n      (0.015625 * (tmpvar_16.x - 0.505))\n    )), tmpvar_14);\n    vec2 tmpvar_17;\n    tmpvar_17 = (tmpvar_12 * floor((\n      (q31 * texture (sampler_pw_main, (uvi_7 + (pix_8 * vec2(-1.0, 1.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb_9.w = pow ((1.0 - (tmpvar_17.y + \n      (0.015625 * (tmpvar_17.x - 0.505))\n    )), tmpvar_14);\n    float tmpvar_18;\n    tmpvar_18 = min (pow ((1.0 - \n      (tmpvar_11.y + (0.015625 * (tmpvar_11.x - 0.505)))\n    ), tmpvar_14), min (min (nb_9.x, nb_9.y), min (nb_9.z, nb_9.w)));\n    vec2 tmpvar_19;\n    tmpvar_19 = (tmpvar_12 * floor((\n      (q31 * texture (sampler_pw_main, (uvi_7 + (pix_8 * vec2(0.0, -1.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb_9.x = pow ((1.0 - (tmpvar_19.y + \n      (0.015625 * (tmpvar_19.x - 0.505))\n    )), tmpvar_14);\n    vec2 tmpvar_20;\n    tmpvar_20 = (tmpvar_12 * floor((\n      (q31 * texture (sampler_pw_main, (uvi_7 + (pix_8 * vec2(1.0, 0.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb_9.y = pow ((1.0 - (tmpvar_20.y + \n      (0.015625 * (tmpvar_20.x - 0.505))\n    )), tmpvar_14);\n    vec2 tmpvar_21;\n    tmpvar_21 = (tmpvar_12 * floor((\n      (q31 * texture (sampler_pw_main, (uvi_7 + (pix_8 * vec2(0.0, 1.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb_9.z = pow ((1.0 - (tmpvar_21.y + \n      (0.015625 * (tmpvar_21.x - 0.505))\n    )), tmpvar_14);\n    vec2 tmpvar_22;\n    tmpvar_22 = (tmpvar_12 * floor((\n      (q31 * texture (sampler_pw_main, (uvi_7 + (pix_8 * vec2(-1.0, 0.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb_9.w = pow ((1.0 - (tmpvar_22.y + \n      (0.015625 * (tmpvar_22.x - 0.505))\n    )), tmpvar_14);\n    xlat_mutabledist = (min (min (tmpvar_18, nb_9.x), min (\n      min (nb_9.y, nb_9.z)\n    , nb_9.w)) + ((0.005 * \n      (tmpvar_6.x - 0.4)\n    ) * abs(\n      (tmpvar_6.z - 0.5)\n    )));\n  };\n  vec2 tmpvar_23;\n  tmpvar_23 = ((1.0/(q31)) * floor((\n    (q31 * texture (sampler_pw_main, uv_3).yz)\n   + vec2(0.5, 0.5))));\n  float tmpvar_24;\n  tmpvar_24 = min (xlat_mutabledist, pow ((1.0 - \n    (tmpvar_23.y + (0.015625 * (tmpvar_23.x - 0.505)))\n  ), (1.0/(q30))));\n  xlat_mutabledist = tmpvar_24;\n  vec3 tmpvar_25;\n  tmpvar_25.xy = (xlat_mutableuv1 * tmpvar_24);\n  tmpvar_25.z = (tmpvar_24 - 0.02);\n  uv2_4 = ((fract(\n    ((((\n      (tmpvar_25 / q7)\n     * tmpvar_1) + tmpvar_2) / 8.0) + 0.5)\n  ) - 0.5) * 8.0);\n  vec3 zz_26;\n  zz_26 = ((2.0 * clamp (uv2_4, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - uv2_4);\n  float tmpvar_27;\n  tmpvar_27 = dot (zz_26, zz_26);\n  if ((tmpvar_27 <= 0.25)) {\n    zz_26 = (zz_26 * 4.0);\n  } else {\n    if ((tmpvar_27 <= 1.0)) {\n      zz_26 = (zz_26 / tmpvar_27);\n    };\n  };\n  zz_26 = ((2.6 * zz_26) + uv2_4);\n  zz_26 = ((2.0 * clamp (zz_26, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_26);\n  float tmpvar_28;\n  tmpvar_28 = dot (zz_26, zz_26);\n  if ((tmpvar_28 <= 0.25)) {\n    zz_26 = (zz_26 * 4.0);\n  } else {\n    if ((tmpvar_28 <= 1.0)) {\n      zz_26 = (zz_26 / tmpvar_28);\n    };\n  };\n  zz_26 = ((2.6 * zz_26) + uv2_4);\n  zz_26 = ((2.0 * clamp (zz_26, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_26);\n  float tmpvar_29;\n  tmpvar_29 = dot (zz_26, zz_26);\n  if ((tmpvar_29 <= 0.25)) {\n    zz_26 = (zz_26 * 4.0);\n  } else {\n    if ((tmpvar_29 <= 1.0)) {\n      zz_26 = (zz_26 / tmpvar_29);\n    };\n  };\n  zz_26 = ((2.6 * zz_26) + uv2_4);\n  zz_26 = ((2.0 * clamp (zz_26, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_26);\n  float tmpvar_30;\n  tmpvar_30 = dot (zz_26, zz_26);\n  if ((tmpvar_30 <= 0.25)) {\n    zz_26 = (zz_26 * 4.0);\n  } else {\n    if ((tmpvar_30 <= 1.0)) {\n      zz_26 = (zz_26 / tmpvar_30);\n    };\n  };\n  zz_26 = ((2.6 * zz_26) + uv2_4);\n  zz_26 = ((2.0 * clamp (zz_26, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_26);\n  float tmpvar_31;\n  tmpvar_31 = dot (zz_26, zz_26);\n  if ((tmpvar_31 <= 0.25)) {\n    zz_26 = (zz_26 * 4.0);\n  } else {\n    if ((tmpvar_31 <= 1.0)) {\n      zz_26 = (zz_26 / tmpvar_31);\n    };\n  };\n  zz_26 = ((2.6 * zz_26) + uv2_4);\n  zz_26 = ((2.0 * clamp (zz_26, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_26);\n  float tmpvar_32;\n  tmpvar_32 = dot (zz_26, zz_26);\n  if ((tmpvar_32 <= 0.25)) {\n    zz_26 = (zz_26 * 4.0);\n  } else {\n    if ((tmpvar_32 <= 1.0)) {\n      zz_26 = (zz_26 / tmpvar_32);\n    };\n  };\n  zz_26 = ((2.6 * zz_26) + uv2_4);\n  zz_26 = ((2.0 * clamp (zz_26, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_26);\n  float tmpvar_33;\n  tmpvar_33 = dot (zz_26, zz_26);\n  if ((tmpvar_33 <= 0.25)) {\n    zz_26 = (zz_26 * 4.0);\n  } else {\n    if ((tmpvar_33 <= 1.0)) {\n      zz_26 = (zz_26 / tmpvar_33);\n    };\n  };\n  zz_26 = ((2.6 * zz_26) + uv2_4);\n  zz_26 = ((2.0 * clamp (zz_26, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_26);\n  float tmpvar_34;\n  tmpvar_34 = dot (zz_26, zz_26);\n  if ((tmpvar_34 <= 0.25)) {\n    zz_26 = (zz_26 * 4.0);\n  } else {\n    if ((tmpvar_34 <= 1.0)) {\n      zz_26 = (zz_26 / tmpvar_34);\n    };\n  };\n  zz_26 = ((2.6 * zz_26) + uv2_4);\n  float tmpvar_35;\n  tmpvar_35 = sqrt(dot (zz_26, zz_26));\n  xlat_mutablestruc = (sqrt(dot (zz_26.zy, zz_26.zy)) / 20.0);\n  vec2 tmpvar_36;\n  tmpvar_36 = ((1.0/(q31)) * floor((\n    (q31 * texture (sampler_pw_main, uv_3).yz)\n   + vec2(0.5, 0.5))));\n  float tmpvar_37;\n  tmpvar_37 = pow ((1.0 - (tmpvar_36.y + \n    (0.015625 * (tmpvar_36.x - 0.505))\n  )), (1.0/(q30)));\n  if ((((tmpvar_24 <= tmpvar_37) && (tmpvar_35 < 20.0)) && (tmpvar_24 > 0.005))) {\n    ret_5.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * mix (texture (sampler_main, uv_3).xyz, \n      ((((texture (sampler_blur1, uv_3).xyz * scale1) + bias1) * 3.0) / 3.0)\n    , vec3(\n      (q14 * 4.0)\n    )).x));\n    float tmpvar_38;\n    tmpvar_38 = pow (tmpvar_24, q30);\n    vec2 tmpvar_39;\n    tmpvar_39 = ((1.0/(q31)) * floor((\n      (q31 * vec2((1.0 - tmpvar_38)))\n     + vec2(0.5, 0.5))));\n    vec2 tmpvar_40;\n    tmpvar_40.x = ((64.0 * (\n      (1.0 - tmpvar_38)\n     - tmpvar_39.x)) + 0.495);\n    tmpvar_40.y = tmpvar_39.x;\n    ret_5.yz = tmpvar_40;\n  } else {\n    vec3 tmpvar_41;\n    tmpvar_41.yz = vec2(1.0, 1.0);\n    tmpvar_41.x = sustain;\n    vec3 tmpvar_42;\n    tmpvar_42.xy = vec2(0.0, 0.0);\n    tmpvar_42.z = q14;\n    ret_5 = ((texture (sampler_pc_main, uv_orig).xyz * tmpvar_41) - tmpvar_42);\n  };\n  vec4 tmpvar_43;\n  tmpvar_43 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv2_4.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_5.x > (q21 * q13)) && (ret_5.x <= (q24 * q11)))) {\n    ret_5.y = (ret_5.y + (tmpvar_43.x * 0.5));\n  };\n  if (((ret_5.y > (q22 * q11)) && (ret_5.y <= (q25 * q12)))) {\n    ret_5.z = (ret_5.z + (tmpvar_43.y * 0.5));\n  };\n  if (((ret_5.z > (q23 * q12)) && (ret_5.z <= (q26 * q13)))) {\n    ret_5.x = (ret_5.x + (tmpvar_43.z * 0.5));\n  };\n  vec4 tmpvar_44;\n  tmpvar_44.w = 1.0;\n  tmpvar_44.xyz = ret_5;\n  ret = tmpvar_44.xyz;\n }","comp":"vec2 xlat_mutableuv1;\n shader_body { \n  vec3 tmpvar_1;\n  tmpvar_1.x = q4;\n  tmpvar_1.y = q5;\n  tmpvar_1.z = q6;\n  mat3 tmpvar_2;\n  tmpvar_2[uint(0)].x = q20;\n  tmpvar_2[uint(0)].y = q23;\n  tmpvar_2[uint(0)].z = q26;\n  tmpvar_2[1u].x = q21;\n  tmpvar_2[1u].y = q24;\n  tmpvar_2[1u].z = q27;\n  tmpvar_2[2u].x = q22;\n  tmpvar_2[2u].y = q25;\n  tmpvar_2[2u].z = q28;\n  vec2 tmpvar_3;\n  tmpvar_3.x = q1;\n  tmpvar_3.y = q2;\n  vec2 uv_4;\n  vec3 ret_5;\n  xlat_mutableuv1 = ((uv - tmpvar_3) * aspect.xy);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, uv);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_blur2, uv);\n  vec3 tmpvar_8;\n  tmpvar_8.xy = ((uv - 0.5) * min ((1.0 - tmpvar_6.z), (1.0 - \n    ((tmpvar_7.xyz * scale2) + bias2)\n  .z)));\n  tmpvar_8.z = min ((1.0 - tmpvar_6.z), (1.0 - (\n    (tmpvar_7.xyz * scale2)\n   + bias2).z));\n  vec3 tmpvar_9;\n  tmpvar_9 = (((tmpvar_8 / q7) * tmpvar_2) + tmpvar_1);\n  float tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = (clamp ((texture (sampler_noise_hq, \n    (0.02 * tmpvar_9)\n  .xy).x - 0.5), 0.0, 1.0) * 2.0);\n  tmpvar_10 = (tmpvar_11 * tmpvar_11);\n  vec2 tmpvar_12;\n  tmpvar_12.x = 0.0;\n  tmpvar_12.y = (time / 4.0);\n  uv_4 = (uv + ((0.002 * tmpvar_10) * texture (sampler_noise_mq, (\n    (uv / 2.0)\n   + tmpvar_12))).xy);\n  float tmpvar_13;\n  tmpvar_13 = min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - (\n    (texture (sampler_blur2, uv_4).xyz * scale2)\n   + bias2).z));\n  float tmpvar_14;\n  tmpvar_14 = mix (tmpvar_13, (1.0 - (\n    (texture (sampler_blur1, uv_4).xyz * scale1)\n   + bias1).z), 0.2);\n  float tmpvar_15;\n  tmpvar_15 = clamp ((abs(\n    ((1.0 - ((texture (sampler_blur1, uv_4).xyz * scale1) + bias1).z) - clamp ((1.0 - (\n      (texture (sampler_blur2, tmpvar_3).xyz * scale2)\n     + bias2).z), 0.02, 0.5))\n  ) * 3.0), 0.0, 1.0);\n  vec3 tmpvar_16;\n  tmpvar_16 = mix (texture (sampler_main, uv_4).xyz, ((texture (sampler_blur1, uv_4).xyz * scale1) + bias1), vec3(tmpvar_15));\n  ret_5 = ((pow (tmpvar_16.x, 1.5) * (0.1 + \n    (pow ((1.0 - tmpvar_15), 0.8) * mix (tmpvar_13, (1.0 - tmpvar_13), q18))\n  )) * (vec3(1.0, 0.7, 0.3) + (0.2 * slow_roam_sin).xyz));\n  vec3 tmpvar_17;\n  tmpvar_17.yz = vec2(0.0, 0.0);\n  tmpvar_17.x = (tmpvar_10 * (0.8 + (0.1 / texture (sampler_noisevol_lq, \n    (tmpvar_9 * 2.0)\n  ))).x);\n  ret_5 = (ret_5 + (clamp (\n    exp((-4.0 * max (tmpvar_16.x, tmpvar_14)))\n  , 0.0, 1.0) * tmpvar_17));\n  ret_5 = (ret_5 + ((\n    (tmpvar_14 * tmpvar_14)\n   * \n    mix (vec3(0.0, 0.4, 1.0), vec3(1.0, 0.4, 0.0), vec3(float((rand_preset.x >= 0.8))))\n  ) * q19));\n  ret_5 = (ret_5 + ((\n    (1.0 - dot (ret_5, vec3(0.32, 0.49, 0.29)))\n   * vec3(1.04, 1.2, 1.6)) * (\n    (clamp ((1.0 - (4.0 * \n      sqrt(dot (xlat_mutableuv1, xlat_mutableuv1))\n    )), 0.0, 1.0) * tmpvar_16.x)\n   * \n    clamp ((1.0 - (2.0 * tmpvar_14)), 0.0, 1.0)\n  )));\n  ret_5 = (1.0 - exp((-1.6 * ret_5)));\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = ret_5;\n  ret = tmpvar_18.xyz;\n }","warp_hlsl":"float dist, struc; float2 uv0, uv1; float3 box;\nstatic const float3x3 RotMat = float3x3(q20,q21,q22,q23,q24,q25,q26,q27,q28);\nstatic const float3 CamPos = float3(q4,q5,q6);\nstatic const float myzoom = q7,  res = q31, res2 = 64, limit = 20;\nstatic const float sustain = .98 - q14*2, change = q14;\n\nfloat2 fstep2 (float2 xy) {return 1.0/res*round(res*xy);}\n\nfloat GetDist(float2 uvi) {float2 tmp; tmp = fstep2(tex2D (sampler_pw_main, uvi).gb); \n  return pow(1-(tmp.y + 1.0/res2*(tmp.x-.505)),1/q30);}\n\nfloat2 PutDist(float x) {float tmp; x = pow(x,q30);   tmp = fstep2(1-x);\n  return (float2(res2*((1-x)-tmp)+.495,tmp));}\n\nfloat MinDist (float2 uvi) {float tmp; float4 nb; float2 pix;\n  pix = texsize.zw*(1+length(uvi-.5)*3);\n  tmp = GetDist(uvi);\n  nb.x = GetDist(uvi+pix*float2(-1,-1));  nb.y = GetDist(uvi+pix*float2(1,-1));\n  nb.z = GetDist(uvi+pix*float2(1,1));   nb.w = GetDist(uvi+pix*float2(-1,1));\n  tmp = min(tmp,min(min(min(nb.x, nb.y),nb.z),nb.w)) ;\n  nb.x = GetDist(uvi+pix*float2(0,-1));  nb.y = GetDist(uvi+pix*float2(1,0));\n  nb.z = GetDist(uvi+pix*float2(0,1));   nb.w = GetDist(uvi+pix*float2(-1,0));\n  tmp = min(tmp,min(min(min(nb.x, nb.y),nb.z),nb.w)) ;\n  return tmp;}\n\nfloat3 Get1 (float2 uvi) {float3 tmp; float2 pix;\n  tmp = GetBlur1(uvi)*3;\n  return lerp (GetPixel(uvi),tmp/3,change*4);}\n\nfloat3 mbox (float3 uvi) {float3 zz, zz0; float tmp, li;\n  zz = uvi; zz0 = zz;\n  for (int n = 0; n <= 7; n++) {\n    zz = 2.0*clamp(zz,-1,1)-zz;  tmp = dot(zz,zz);\n    if (tmp <= 0.25) {zz *= 4;} else if (tmp <= 1) {zz /= pow(tmp,1);}\n    zz = 2.6*zz + zz0;}\n  return zz;}\n\nshader_body {\nuv = (uv-.5)*q13 + .5;\nuv1 = (uv-.5)*aspect.xy;\nfloat3 noise = frac(8*tex2D (sampler_noise_lq,uv+rand_frame.yz)); \n\ndist = noise.r;\nif (noise.g > 0.2) {dist = MinDist(uv+.003*(noise.zy-.5)) + .005*(noise.r-.4)*abs(noise.b-.5);}\ndist = min(dist,GetDist(uv));\n\nfloat3 uv2 = mul(float3(uv1*dist,dist-.02)/myzoom,RotMat)+CamPos;\nuv2 = (frac(uv2/8.0+.5)-.5)*8.0;\nbox = mbox (uv2);\nfloat len = (length(box));\nstruc = length(box.zy) /limit;\n\nif ((dist <= GetDist(uv)) && (len < limit) && (dist > 0.005)){\n ret.r = (1-sustain)*struc+sustain*(Get1(uv).r); ret.gb=  PutDist(dist); } \n else {ret = tex2D(sampler_pc_main,uv_orig)*float3(sustain,1,1)-float3(0,0,change);} \nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv2.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n}","comp_hlsl":"#define sat saturate\nstatic const float2 pix = texsize.zw;\nfloat glow, tmp, lamp, dist, bdist, b2dist, dist_c;\nfloat2 dz, uv1, uv3;\nstatic const float3 CamPos = float3(q4,q5,q6);\nstatic const float myzoom = q7;\nstatic const float3x3 RotMat = float3x3(q20,q21,q22,q23,q24,q25,q26,q27,q28);\nstatic const float3 col_back = lerp(float3(0,0.4,1), float3(1,0.4,0),rand_preset.x>=0.8);\nstatic const float3 col_struc =  float3(1,.7,.3) + .2*slow_roam_sin;\nstatic float2 center = float2 (q1,q2);\n\nfloat3 GetBlurX (float2 uvi, float x) {return lerp (GetPixel(uvi), GetBlur1(uvi), x);}\nfloat GetDist(float2 uvi)   {return 1-GetPixel(uvi).b;}\nfloat GetDistB(float2 uvi)  {return 1-GetBlur1(uvi).b;}\nfloat GetDistB2(float2 uvi) {return 1-GetBlur2(uvi).b;}\n\nfloat MinDistB (float2 uvi) {float tmp; float4 nb; //##nicht ideal\n  tmp = GetDist(uvi);\n  tmp = min(tmp,GetDistB2(uvi)) ;\n  return tmp;}\n\nshader_body {uv1 = (uv-center)*aspect.xy;\n//Glow\nfloat3 uv2 = mul(float3((uv-.5)*MinDistB(uv),MinDistB(uv))/myzoom,RotMat)+CamPos;\nglow = pow (sat(tex2D (sampler_noise_hq,.02*uv2).r-.5)*2,2);\nuv += .002*glow*tex2D (sampler_noise_mq,uv/2+float2(0,time/4));\n\ndist = MinDistB(uv);\nbdist = lerp(dist,GetDistB(uv),.2);\nb2dist= lerp(dist,GetDistB(uv),1);;\ndist_c = clamp(GetDistB2 (center),.02,.5); //center distance\n\nfloat focus = sat(abs(b2dist-dist_c)*3);\nfloat struc = GetBlurX(uv,focus).r;\n\nret = pow(struc,1.5)* (.1+pow(1-focus,.8) *lerp(dist,1-dist,q18)) * col_struc;\n\n//Glow\nglow *=  (.8+ .1/tex3D (sampler_noisevol_lq,(uv2*2)));\nret += saturate(exp(-4*max(struc,bdist))) * float3(glow,0,0);\n\n//distant light\nret += bdist*bdist*col_back *q19;\n\n//Lamp\nuv3 = uv1; \nlamp = saturate(1-4*length(uv3))*struc*saturate(1-2*bdist)*1.6;\nret += (1-lum(ret))*lamp*float3(.65,.75,1) ;\n\nret = 1-exp((-1.6)*ret);\n}\n\n//-------------------------------------------\n//Written by martin\n"}