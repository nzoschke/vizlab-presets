{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"darken":1,"wave_a":0.001,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":0.8,"ib_size":0.26,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"smoothing":0},"init_eqs_str":"a.q1=0;a.speed=0;a.q2=0;a.v=0;a.xs=0;a.ys=0;","frame_eqs_str":"","point_eqs_str":"a.q1=0;a.speed=Math.cos(a.q2)+.1*a.bass;a.v=1E3*a.sample+a.bass*a.value1;a.xs+=Math.sin(.1*a.v+a.time)*a.speed;a.ys+=Math.cos(1.2*a.v+a.q2)*a.speed;a.x=.5+.5*Math.cos(.04*a.xs+.2*a.time)*Math.sin(2*a.time+a.xs);a.y=.5+.5*Math.cos(.04*a.ys+.4*a.time)*Math.cos(a.q2+a.xs);a.r+=.5*Math.sin(4.22*a.time);a.g+=.5*Math.sin(4.307*a.time+(-.5-a.x)*(.5-a.y));a.b=a.g+.5*Math.sin(4.959*a.time);a.x=.75*a.x+.125;a.y=.75*a.y+.125;a.xs=.00001<Math.abs(above(a.xs,1E3))?0:a.xs;a.ys=.00001<Math.abs(above(a.ys,\n800))?0:a.ys;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 =0;\nspeed = 1*cos(q2) + bass*0.1;\nv = sample*1000 + bass*value1;\n\n//state 0 elipse\nxs = xs + sin(v*0.1 + time)*speed;\nys = ys + cos(v*1.2 + q2)*speed;\n\nx = 0.5 + 0.5*cos(xs*0.04 +0.2*time)*sin(time*2 + xs);\ny = 0.5 + 0.5*cos(ys*0.04 + 0.4*time)*cos(q2 + xs);\n\n\nr = r + 0.5*sin(time*4.22);\ng = g + 0.5*sin(time*4.307  + (-0.5-x)*(0.5-y));\nb = g + 0.5*sin(time*4.959);\n\nx = x*0.75 + 0.125;\ny = y*0.75 + 0.125;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,800),0 ,ys);"},{"baseVals":{"spectrum":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"//q1 = state;\n//q2 = basstime;\n\nq1 =0;\nspeed = 0.01*bass_att;\nv = sample*100 + (value1*bass);\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*0.1 + time)*speed;\nys = ys + (equal(0,q1))*cos(v*1.2 + time)*speed;\n\nx = 0.5 + 0.5*cos(xs*0.02 +0.1*time)*sin(time*2 + xs);\ny = 0.5 + 0.5*cos(ys*0.02 + 0.2*time)*cos(time + xs);\n\n\nr = r + 0.5*sin(time*5.52);\ng = g + 0.5*sin(time*5.107);\nb = g + 0.5*sin(time*5.359 + (-0.5-x)*(0.5-y));\n\nx = x*0.7 + 0.15;\ny = y*0.7 + 0.15;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,800),0 ,ys);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 =0;\nspeed = 0.01*bass_att;\nv = sample*100 + (value1*bass);\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*0.1 + time)*speed;\nys = ys + (equal(0,q1))*cos(v*1.2 + time)*speed;\n\nx = 0.5 + 0.5*cos(xs*0.02 +0.1*time)*sin(time*2 + xs);\ny = 0.5 + 0.5*cos(ys*0.02 + 0.2*time)*cos(time + xs);\n\n\nr = r + 0.5*sin(time*5.52);\ng = g + 0.5*sin(time*5.107);\nb = g + 0.5*sin(time*5.359 + (-0.5-x)*(0.5-y));\n\nx = x*0.7 + 0.15;\ny = y*0.7 + 0.15;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,800),0 ,ys);"},{"baseVals":{"spectrum":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"//q1 = state;\n//q2 = basstime;\n\nq1 =0;\nspeed = 0.01*bass_att;\nv = sample*100 + (value1*bass);\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*0.1 + time)*speed;\nys = ys + (equal(0,q1))*cos(v*1.2 + time)*speed;\n\nx = 0.5 + 0.5*cos(xs*0.02 +0.1*time)*sin(time*2 + xs);\ny = 0.5 + 0.5*cos(ys*0.02 + 0.2*time)*cos(time + xs);\n\n\nr = r + 0.5*sin(time*5.62 + (-0.5-x)*(0.5-y));\ng = g + 0.5*sin(time*5.907);\nb = g + 0.5*sin(time*5.359);\n\nx = x*0.4 + 0.3;\ny = y*0.4 + 0.3;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,800),0 ,ys);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\n//q2 = basstime;\n\nq1 =0;\nspeed = 0.01*bass_att;\nv = sample*100 + (value1*bass);\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*0.1 + time)*speed;\nys = ys + (equal(0,q1))*cos(v*1.2 + time)*speed;\n\nx = 0.5 + 0.5*cos(xs*0.02 +0.1*time)*sin(time*2 + xs);\ny = 0.5 + 0.5*cos(ys*0.02 + 0.2*time)*cos(time + xs);\n\n\nr = r + 0.5*sin(time*5.62 + (-0.5-x)*(0.5-y));\ng = g + 0.5*sin(time*5.907);\nb = g + 0.5*sin(time*5.359);\n\nx = x*0.4 + 0.3;\ny = y*0.4 + 0.3;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,800),0 ,ys);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.index=0;a.copy=0;a.q22=0;a.q21=0;a.q29=0;a.q1=0;a.dec_med=0;a.str=0;a.index3=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.avg=0;a.movez=0;a.beat=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.p3=0;a.q3=0;a.t0=0;a.rot1=0;a.q28=0;a.q30=0;a.q20=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,4);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.q20=a.avg;a.q21=\na.beat;a.q22=Math.max(a.peak,4);a.q23=a.index;a.q24=a.is_beat;a.q26=Math.max(a.bass+a.mid+a.treb,3);a.movez+=div(3*(1+.3*a.q26),a.fps);a.q30=a.movez;a.k1=a.is_beat*equal(a.index,0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.rott=div(3.1416*a.p3,2);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.str=a.str*a.dec_slow+(1-a.dec_slow)*a.index3;a.q27=4-a.str;a.mv_a=equal(a.index2,2)*bnot(a.index)*.5;a.rot1=a.dec_med*\na.rot1+(1-a.dec_med)*bnot(a.index2);a.q28=a.rot1;a.copy=a.copy*a.dec_slow+(1-a.dec_slow)*a.index3;a.q29=.3*a.copy;","pixel_eqs_str":"a.dx=.04*a.q28;a.rot=.06*a.q2;a.zoom=.96+.1*Math.sin(div(a.time,7));","init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %4;\nindex2 = (index2 + is_beat*bnot(index))%4;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\n\nq20 = avg;\nq21 = beat;\nq22 = max(peak,4);\nq23 = index;\nq24 = is_beat;\nq26 = max(bass + mid + treb,3);\n\nmovez = movez + .1*(1+.3*q26)*30/fps;\nq30 = movez;\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\np3 = dec_med * p3+ (1-dec_med)*p2;\nrott = p3*3.1416/2;\n\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n\nstr = str * dec_slow + (1-dec_slow) * index3;\nq27 = 4 - str;\n\nmv_a = equal(index2,2)*bnot(index)*.5;\n\nrot1 = dec_med * rot1 + (1-dec_med) * bnot(index2) ;\nq28 = rot1;\n\ncopy = copy * dec_slow + (1-dec_slow)*index3;\nq29 = .3*copy;","pixel_eqs_eel":"dx = 0.04*q28;\nrot = .06*q2;\nzoom = .96 + .1*sin(time/7);\n//zoom = 1.04;","warp":"uniform sampler2D sampler_fw_clouds;\n shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz - ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\n  ret_1 = (ret_1 + (texture (sampler_fw_clouds, uv) * 0.5).xyz);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","comp":"vec2 xlat_mutablefactorA;\n shader_body { \n  vec2 uv_1;\n  uv_1 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_2;\n  tmpvar_2.x = q1;\n  tmpvar_2.y = q2;\n  xlat_mutablefactorA = (uv_1 + tmpvar_2);\n  vec2 tmpvar_3;\n  tmpvar_3 = (xlat_mutablefactorA * vec2(4.0, 4.0));\n  vec2 tmpvar_4;\n  tmpvar_4.x = q3;\n  tmpvar_4.y = q4;\n  xlat_mutablefactorA = (uv_1 + tmpvar_4);\n  vec2 tmpvar_5;\n  tmpvar_5 = (xlat_mutablefactorA * vec2(4.0, 4.0));\n  vec2 tmpvar_6;\n  tmpvar_6.x = q5;\n  tmpvar_6.y = q6;\n  xlat_mutablefactorA = (uv_1 + tmpvar_6);\n  vec2 tmpvar_7;\n  tmpvar_7 = (xlat_mutablefactorA * vec2(4.0, 4.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = q7;\n  tmpvar_8.y = q8;\n  xlat_mutablefactorA = (uv_1 + tmpvar_8);\n  vec2 tmpvar_9;\n  tmpvar_9 = (xlat_mutablefactorA * vec2(4.0, 4.0));\n  vec2 tmpvar_10;\n  tmpvar_10.x = ((tmpvar_3.x * tmpvar_5.x) - (tmpvar_3.y * tmpvar_5.y));\n  tmpvar_10.y = ((tmpvar_3.x * tmpvar_5.y) + (tmpvar_3.y * tmpvar_5.x));\n  vec2 tmpvar_11;\n  tmpvar_11.x = ((tmpvar_7.x * tmpvar_9.x) - (tmpvar_7.y * tmpvar_9.y));\n  tmpvar_11.y = ((tmpvar_7.x * tmpvar_9.y) + (tmpvar_7.y * tmpvar_9.x));\n  xlat_mutablefactorA = tmpvar_10;\n  vec2 tmpvar_12;\n  tmpvar_12.x = ((tmpvar_10.x * tmpvar_11.x) - (tmpvar_10.y * tmpvar_11.y));\n  tmpvar_12.y = ((tmpvar_10.x * tmpvar_11.y) + (tmpvar_10.y * tmpvar_11.x));\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_12.x;\n  tmpvar_13.y = -(tmpvar_12.y);\n  uv_1 = ((tmpvar_13 / (\n    (tmpvar_12.x * tmpvar_12.x)\n   + \n    (tmpvar_12.y * tmpvar_12.y)\n  )) * (1.0 + (\n    (bass_att + treb_att)\n   * 0.1)));\n  uv_1 = (0.5 + ((\n    (1.0 - abs(((\n      fract((uv_1 * 0.5))\n     * 2.0) - 1.0)))\n   - 0.5) * 0.99));\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = texture (sampler_fc_main, uv_1).xyz;\n  ret = tmpvar_14.xyz;\n }","warp_hlsl":"sampler sampler_fw_clouds;\nshader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz-GetBlur1(uv);\nret+=tex2D(sampler_fw_clouds,uv)*0.5;\n}","comp_hlsl":"sampler sampler_fc_sunrise;\nfloat2 factorA, factorB, product;\nfloat2 numerator, denominator, fraction;\nshader_body\n{\nuv = (uv-0.5)*aspect.xy;\nfactorA = uv+ float2(q1,q2);\nfactorB = float2(4,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv1 = product;\nfactorA = uv+ float2(q3,q4);\nfactorB = float2(4,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv2 = product;\nfactorA = uv+ float2(q5,q6);\nfactorB = float2(4,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv3 = product;\nfactorA = uv+ float2(q7,q8);\nfactorB = float2(4,0);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv4 = product;\nfactorA = uv1;\nfactorB = uv2;\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv12 = product;\nfactorA = uv3;\nfactorB = uv4;\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nfloat2 uv34 = product;\nfactorA = uv12;\nfactorB = uv34;\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\nnumerator = float2(1,0);\ndenominator = product;\nfraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part\n                   numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part\n                   (denominator.x*denominator.x + denominator.y*denominator.y);\nuv = fraction*(1+(bass_att + treb_att)*0.1);\nuv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.99; // Eo.S. mirror code with cutted borders\nret = tex2D( sampler_fc_main, uv );\n\n}"}