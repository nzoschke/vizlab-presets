{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.94,"echo_zoom":1.104,"echo_alpha":0.85,"echo_orient":3,"additivewave":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.797,"warpscale":1.331,"zoomexp":0.7418,"zoom":13.29089,"dx":-0.28,"dy":-0.32,"warp":0.09441,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.02,"ob_g":0.2,"ob_b":0.3,"ob_a":1,"ib_size":0.05,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.49138,"r2":0.3,"g2":0,"b2":0.5,"a2":0.05,"border_a":0},"init_eqs_str":"a.q6=0;","frame_eqs_str":"a.rad*=a.q6;","init_eqs_eel":"","frame_eqs_eel":"rad = rad*q6;\n"},{"baseVals":{"sides":24,"x":0.03,"y":0.16,"rad":0.04914,"tex_zoom":0.81954,"g":1,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tic = time - tir;\ntir = time;\n\nmix = (mix + q3*tic)*below(mix,10000);\nx = mix - int(mix);\ny = .0;","init_eqs_eel":"","frame_eqs_eel":"tic = time - tir;\ntir = time;\n\nmix = (mix + q3*tic)*below(mix,10000);\nx = mix - int(mix);\ny = .0;"},{"baseVals":{"enabled":1,"sides":24,"rad":0.2216,"tex_zoom":0.13669,"g":1,"b":1,"r2":1,"border_a":0},"init_eqs_str":"a.q6=0;","frame_eqs_str":"a.rad*=a.q6;","init_eqs_eel":"","frame_eqs_eel":"rad = rad*q6;\n"},{"baseVals":{"sides":24,"x":0.03,"y":0.16,"rad":0.04914,"tex_zoom":0.81954,"g":1,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tic = time - tir;\ntir = time;\n\nmix = (mix + (q1+q2)*tic*.5)*below(mix,10000);\ny = mix - int(mix);\nx = 1;","init_eqs_eel":"","frame_eqs_eel":"tic = time - tir;\ntir = time;\n\nmix = (mix + (q1+q2)*tic*.5)*below(mix,10000);\ny = mix - int(mix);\nx = 1;"}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"a.dc=0;a.tic=0;a.t1=0;a.tir=0;a.mixc=0;a.it=0;a.q1=0;a.t3=0;a.my=0;a.ly=0;a.mixa=0;a.mx=0;a.t2=0;a.mixb=0;a.lx=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.tic=a.time-a.tir;a.tir=a.time;a.mixa=(a.mixa+a.q1*a.tic)*below(a.mixa,1E4);a.t1=a.mixa-Math.floor(a.mixa);a.mixb=(a.mixb+a.q2*a.tic)*below(a.mixb,1E4);a.t2=a.mixb-Math.floor(a.mixb);a.mixc=(a.mixc+a.q3*a.tic)*below(a.mixc,1E4);a.t3=a.mixc-Math.floor(a.mixc);","point_eqs_str":"a.it=(a.it+1)*above(a.sample,0);a.dc=(a.dc+equal(mod(a.it,48),0))*above(a.sample,0);a.lx=a.t1*equal(a.dc,0)+(1-a.t3)*(equal(a.dc,2)+equal(a.dc,1))+a.t2*equal(a.dc,3);a.ly=.975*(equal(a.dc,1)+equal(a.dc,3));a.mx=-.1*equal(mod(a.it+6,6),0)+-.1*equal(mod(a.it+1,6),0)+.1*equal(mod(a.it+4,6),0)+.1*equal(mod(a.it+3,6),0);a.my=(a.my+.01*equal(mod(a.it+3,6),0)+.01*equal(mod(a.it,6),0))*(above(a.sample,0)-equal(mod(.5*a.it,48),0));a.x=.00001<Math.abs(below(a.dc,2))?a.lx+.2*a.mx:a.ly+\n.1*a.my;a.y=.00001<Math.abs(below(a.dc,2))?a.ly+.1*a.my:a.lx+.2*a.mx;a.b=1;a.r=.8*equal(a.mx,0);a.g=1*equal(a.mx,0);a.a=equal(a.mx,0)*below(a.dc,4);","init_eqs_eel":"","frame_eqs_eel":"tic = time - tir;\ntir = time;\n\nmixa = (mixa + q1*tic)*below(mixa,10000);\nt1 = mixa - int(mixa);\nmixb = (mixb + q2*tic)*below(mixb,10000);\nt2 = mixb - int(mixb);\nmixc = (mixc + q3*tic)*below(mixc,10000);\nt3 = mixc - int(mixc);","point_eqs_eel":"it = (it+1)*above(sample,0);\n\ndc = (dc + equal(it%48,0))*above(sample,0);\n\nlx = t1*equal(dc,0) + (1-t3)*(equal(dc,2) + equal(dc,1)) + t2*equal(dc,3);\nly = 0 + (equal(dc,1) + equal(dc,3))*.975;\n\nmx = equal((it+6)%6,0)*-.1 + equal((it+1)%6,0)*-.1 + equal((it+4)%6,0)*.1 + equal((it+3)%6,0)*.1;\nmy = (my + equal((it+3)%6,0)*.01 + equal((it)%6,0)*.01)*(above(sample,0) - equal((it*.5)%48,0));\n\nx = if(below(dc,2),lx + mx*.2,ly + my*.1);\ny = if(below(dc,2),ly + my*.1,lx + mx*.2);\n\nb = 1;\nr = equal(mx,0)*.8;\ng = equal(mx,0)*1;\na = equal(mx,0)*below(dc,4);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tic=0;a.td=0;a.q6=0;a.q1=0;a.mid_avg=0;a.tin=0;a.bass_avg=0;a.vav=0;a.q4=0;a.rd=0;a.sz=0;a.ra=0;a.tm=0;a.treb_avg=0;a.q2=0;a.q3=0;a.q7=0;a.rb=0;a.zoom=1;a.xpos=0;a.ypos=0;","frame_eqs_str":"a.decay=1;a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.ra=10;a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.rb=1;a.vav=a.tic*(a.vav*(div(1,a.tic)-a.rb)+a.rb*(a.bass+a.treb+a.mid)*.33333);a.q1=a.treb_avg;a.q2=a.mid_avg;a.q3=a.bass_avg;a.q4=a.vav;a.tm=.00001<Math.abs(above(a.vav,a.tm))?a.tm+a.tic:a.tm-.3*a.tic;a.td=(a.td+a.tic*a.tm*\n4)*below(a.td,1E4);a.q6=.75+.25*Math.sin(a.td);a.q7=a.tm;","pixel_eqs_str":"a.rd=sqrt(sqr((a.x-.5)*(1.5+.2*Math.sin(.11*a.time)))+sqr((a.y-.5)*(3.5+.2*Math.sin(.15*a.time))));a.sz=.01*a.q7;a.zoom=div(a.rd*a.rd,.5)+a.sz-a.q6*a.sz;a.warp=2*a.q4+24*Math.max(1-2*a.rad,0)*a.q4;","init_eqs_eel":"zoom=1;\nxpos=0;\nypos=0;","frame_eqs_eel":"decay=1;\n\nwarp = 0;\n\ntic = min(time - tin,.1);\ntin = time;\n\nra = 10;\n\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\n\nrb = 1;\nvav = tic*(vav*(1/tic - rb) + rb*(bass+treb+mid)*.33333);\n\nq1 = treb_avg;\nq2 = mid_avg;\nq3 = bass_avg;\nq4 = vav;\n\n\ntm = if(above(vav,tm),tm + tic,tm - tic*.3);\ntd = (td + tic*tm*4)*below(td,10000);\n\nq6 = .75 + sin(td)*.25;\nq7 = tm;","pixel_eqs_eel":"rd=sqrt( sqr((x-.5)*(1.5 + sin(time*.11)*.2)) + sqr((y-.5)*(3.5 + sin(time*.15)*.2)));\n\nsz = .01*q7;\n\nzoom=(rd*rd)/.5 + sz - q6*sz;\n\nwarp = 2*q4 + max(1-rad*2,0)*8*3*q4;","warp":"vec3 xlat_mutablenoise;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv1;\n shader_body { \n  vec3 copy_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = 0.5;\n  tmpvar_3.y = q5;\n  xlat_mutableuv1 = (uv - tmpvar_3);\n  float tmpvar_4;\n  tmpvar_4 = (1.0/(xlat_mutableuv1.y));\n  xlat_mutablers0.x = (xlat_mutableuv1.x * tmpvar_4);\n  xlat_mutablers0.y = tmpvar_4;\n  xlat_mutablers.x = xlat_mutablers0.x;\n  xlat_mutablers.y = (tmpvar_4 + (time * 0.3));\n  xlat_mutablenoise = (vec3(dot (texture (sampler_pw_noise_lq, (xlat_mutablers / 63.0)), vec4(0.32, 0.49, 0.29, 0.0))) * (dot (texture (sampler_pw_noise_lq, \n    (xlat_mutablers / 12.0)\n  ), vec4(0.32, 0.49, 0.29, 0.0)) + 0.5));\n  xlat_mutablenoise = (xlat_mutablenoise * (clamp (\n    ((10.0 * xlat_mutablenoise) - 8.0)\n  , 0.0, 1.0) * clamp (\n    (2.0 / tmpvar_4)\n  , 0.0, 1.0)));\n  vec2 tmpvar_5;\n  tmpvar_5.x = uv.x;\n  tmpvar_5.y = (uv.y - (0.024 / tmpvar_4));\n  vec2 tmpvar_6;\n  tmpvar_6.x = uv.x;\n  tmpvar_6.y = (uv.y - (0.012 / tmpvar_4));\n  copy_1 = (texture (sampler_main, tmpvar_5).xyz + texture (sampler_main, tmpvar_6).xyz);\n  vec2 tmpvar_7;\n  tmpvar_7.x = uv.x;\n  tmpvar_7.y = (uv.y - (0.006 / tmpvar_4));\n  copy_1 = (copy_1 + texture (sampler_main, tmpvar_7).xyz);\n  ret_2 = ((xlat_mutablenoise + (\n    (((copy_1 / 3.0) * (1.0 + slow_roam_cos).xyz) / 2.0)\n   * 0.99)) - 0.005);\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (texsize.xyy * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.4) * time)));\n  if ((((ret_2.x + ret_2.y) + ret_2.z) > 0.5)) {\n    ret_2 = (ret_2 * (tmpvar_8 * 0.5).xyz);\n  };\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 24.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (((texture (sampler_blur2, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale2) + bias2)).y;\n  tmpvar_3.y = (((texture (sampler_blur2, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale2) + bias2)).y;\n  vec3 tmpvar_4;\n  tmpvar_4 = texture (sampler_fc_main, (uv + (tmpvar_3 * 0.1))).xxx;\n  ret_1 = tmpvar_4;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (texsize.xyy * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.4) * time)));\n  if ((((tmpvar_4.x + tmpvar_4.y) + tmpvar_4.z) > 0.5)) {\n    ret_1 = (tmpvar_4 + (tmpvar_5 * 0.095).xyz);\n  };\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"sampler sampler_pw_noise_lq;\nfloat3 color, mus, neu, ret1, noise, noise2;\nfloat2 uv1, rs0, rs, uv2, uv3, dz, hor, ver;\nfloat dx,dy,speed;\nshader_body {\nspeed = .3;\nuv1 = uv-float2(0.5,q5);\nfloat z = 1/(uv1.y);\nrs0.x = (uv1.x)*z;\nrs0.y = z;\nrs.x = rs0.x *1;\nrs.y = rs0.y + time*speed;\n\n\n//Kacheln\nnoise = lum(tex2D(sampler_pw_noise_lq,rs/63 ));\nnoise *= lum(tex2D(sampler_pw_noise_lq,rs/12 ))+.5;\nnoise *= saturate(10*noise - 8) * saturate(2/z);\nnoise2 = saturate(8* (lum(tex2D(sampler_pw_noise_lq,uv))-.5));\n\nspeed *= 2;\nfloat3 copy = + GetPixel(float2(uv.x,uv.y-.04*speed/z));\ncopy +=GetPixel(float2(uv.x,uv.y-.02*speed/z));\ncopy +=GetPixel(float2(uv.x,uv.y-.01*speed/z));\n\nret = noise*1 + copy/3*(1+slow_roam_cos)/2*.99-.005;\n\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nif(ret.x+ret.y+ret.z>.5)ret *= (noise2)*.5; \n\n}","comp_hlsl":"sampler sampler_fc_wrenches;\n\nshader_body\n{\nret = tex2D( sampler_fw_main, uv);\n\n    float2 d = texsize.zw*24;\n    float1 dx = ( GetBlur2(uv + float2(1,0)*d) - GetBlur2(uv-float2(1,0)*d) ).y;\n    float1 dy = ( GetBlur2(uv + float2(0,1)*d) - GetBlur2(uv-float2(0,1)*d) ).y;\n    float2 my_uv = uv + float2(dx,dy)*0.1;\n    ret = tex2D(sampler_fc_main, my_uv).x;\nfloat4 noise2 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*0.4 \n                     );\nif(ret.x+ret.y+ret.z>.5)ret += (noise2)*.095; \n}"}