{"version":2,"baseVals":{"rating":5,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"rad":2.07978,"r":0.07,"g":0.05,"b":0.06,"a":0.05,"r2":0.07,"g2":0.05,"b2":0.06,"a2":0.04,"border_r":0.04,"border_g":0.04,"border_b":0.04,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":3,"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=div(a.time,2);","init_eqs_eel":"","frame_eqs_eel":"ang=time/2;"},{"baseVals":{"enabled":1,"additive":1,"y":0.07,"rad":0.5321,"g":0.5,"a":0.1,"r2":0.7,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.y=.25*Math.sin(a.time)+.25;","init_eqs_eel":"","frame_eqs_eel":"y = sin(time)*0.25+0.25;"},{"baseVals":{"g":1,"b":1,"r2":0.5,"g2":0.7,"b2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.xs=0;a.fix=0;a.yp=0;a.t1=0;a.q1=0;a.xq=0;a.sang=0;a.ys=0;a.zq=0;a.ang=0;a.zp=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.t1=a.q1;","point_eqs_str":"a.n=6.283*a.sample;a.xp=Math.floor(rand(3))-1;a.yp=Math.floor(rand(3))-1;a.zp=Math.floor(rand(3))-1;a.fix=equal(Math.abs(a.xp),1)+equal(Math.abs(a.yp),1)+equal(Math.abs(a.zp),1);a.fix=.00001<Math.abs(equal(a.fix,3))?.5:1;a.xp=a.xp*a.fix+a.q1;a.yp=a.yp*a.fix+a.q2;a.zp=a.zp*a.fix+a.q3;a.ang=a.t1;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.cang-a.zp*a.sang;a.yq=a.yp;a.zq=a.xp*a.sang+a.zp*a.cang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.ang=div(a.t1,3);a.sang=Math.sin(a.ang);\na.cang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.cang-a.zp*a.sang;a.zq=a.yp*a.sang+a.zp*a.cang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.zp+=6.1;a.xs=div(a.xp,a.zp)+.5;a.ys=1.333*div(a.yp,a.zp)+.5;a.x=a.xs;a.y=a.ys;","init_eqs_eel":"","frame_eqs_eel":"t1 = q1","point_eqs_eel":"n=sample*6.283;\n\nxp= int(rand(3)) - 1;\nyp= int(rand(3)) - 1;\nzp= int(rand(3)) - 1;\n\nfix= equal(abs(xp),1) + equal(abs(yp),1) + equal(abs(zp),1);\nfix= if( equal(fix,3) , 0.5 , 1 );\nxp= xp*fix + q1;\nyp= yp*fix + q2;\nzp= zp*fix + q3;\n\n\nang = t1;\nsang = sin(ang);cang = cos(ang);\nxq = xp*cang - zp*sang;\nyq = yp;\nzq = xp*sang + zp*cang;\nxp=xq;yp=yq;zp=zq;\n\nang = t1/3;\nsang = sin(ang);cang = cos(ang);\nxq = xp;\nyq = yp*cang - zp*sang;;\nzq = yp*sang + zp*cang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp = zp+6.1;\nxs = xp/zp + 0.5;\nys = yp/zp * 1.333 + 0.5;\n\n\nx=xs;\ny=ys;"},{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0,"b":0},"init_eqs_str":"a.cang=0;a.n=0;a.yq=0;a.xp=0;a.xs=0;a.fix=0;a.yp=0;a.t1=0;a.scale=0;a.q1=0;a.xq=0;a.sang=0;a.ys=0;a.zq=0;a.ang=0;a.zp=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.t1=a.q1;","point_eqs_str":"a.n=6.283*a.sample;a.scale=.99;a.xp=Math.floor(rand(3))-1;a.yp=Math.floor(rand(3))-1;a.zp=Math.floor(rand(3))-1;a.fix=equal(Math.abs(a.xp),1)+equal(Math.abs(a.yp),1)+equal(Math.abs(a.zp),1);a.fix=.00001<Math.abs(equal(a.fix,3))?.5:1;a.xp*=a.fix;a.yp*=a.fix;a.zp*=a.fix;a.xp=a.xp*a.scale+a.q1;a.yp=a.yp*a.scale+a.q2;a.zp=a.zp*a.scale+a.q3;a.ang=a.t1;a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp*a.cang-a.zp*a.sang;a.yq=a.yp;a.zq=a.xp*a.sang+a.zp*a.cang;a.xp=a.xq;a.yp=\na.yq;a.zp=a.zq;a.ang=div(a.t1,3);a.sang=Math.sin(a.ang);a.cang=Math.cos(a.ang);a.xq=a.xp;a.yq=a.yp*a.cang-a.zp*a.sang;a.zq=a.yp*a.sang+a.zp*a.cang;a.xp=a.xq;a.yp=a.yq;a.zp=a.zq;a.zp+=6.1;a.xs=div(a.xp,a.zp)+.5;a.ys=1.333*div(a.yp,a.zp)+.5;a.x=a.xs;a.y=a.ys;","init_eqs_eel":"","frame_eqs_eel":"t1 = q1;","point_eqs_eel":"n=sample*6.283;\n\nscale=0.99;\n\nxp= int(rand(3)) - 1;\nyp= int(rand(3)) - 1;\nzp= int(rand(3)) - 1;\n\nfix= equal(abs(xp),1) + equal(abs(yp),1) + equal(abs(zp),1);\nfix= if( equal(fix,3) , 0.5 , 1 );\nxp= xp*fix;\nyp= yp*fix;\nzp= zp*fix;\n\nxp= xp*scale + q1;\nyp= yp*scale + q2;\nzp= zp*scale + q3;\n\n\nang = t1;\nsang = sin(ang);cang = cos(ang);\nxq = xp*cang - zp*sang;\nyq = yp;\nzq = xp*sang + zp*cang;\nxp=xq;yp=yq;zp=zq;\n\nang = t1/3;\nsang = sin(ang);cang = cos(ang);\nxq = xp;\nyq = yp*cang - zp*sang;;\nzq = yp*sang + zp*cang;\nxp=xq;yp=yq;zp=zq;\n\n\nzp = zp+6.1;\nxs = xp/zp + 0.5;\nys = yp/zp * 1.333 + 0.5;\n\n\nx=xs;\ny=ys;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mtime=0;a.flip=0;a.vol=0;a.q1=0;a.q2=0;a.q3=0;a.q4=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;a.flip=1;","frame_eqs_str":"a.decay=1;a.zoom=1.001;a.sx=.1*Math.sin(2*a.mtime)+.9;a.sy=-a.sx;a.flip+=.01;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol*a.vol;a.mtime+=.01*a.vol;a.q1=Math.sin(a.mtime);a.q2=Math.cos(1.3*a.mtime);a.q3=Math.sin(3.3*a.mtime);a.warp=0;a.q4=a.mtime;a.rot+=.1*above(Math.sin(div(a.mtime,2)),0);a.rot=Math.sin(.3*a.mtime);","pixel_eqs_str":"","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0;\nflip=1;","frame_eqs_eel":"decay=1;\nzoom=1.001;\n\nsx= sin(mtime*2)*0.1+0.9;\nsy=-sx;\n\nflip=flip+0.01;\n\nvol= (bass+mid+treb)*0.25;\nvol= vol*vol*vol;\n\nmtime = mtime + vol * 0.01;\n\nq1= sin(mtime);\nq2= cos(mtime*1.3);\nq3= sin(mtime*3.3);\nwarp=0;\n\nq4 = mtime;\n\nrot = rot + above( sin(mtime/2) , 0 )*0.1;\nrot= sin(mtime*0.3);","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  float tmpvar_2;\n  tmpvar_2 = (dot (texture (sampler_noise_hq, (\n    (q30 * uv)\n   + \n    (0.001 * time)\n  )), vec4(0.32, 0.49, 0.29, 0.0)) * 3.14);\n  mat2 tmpvar_3;\n  tmpvar_3[uint(0)].x = cos(tmpvar_2);\n  tmpvar_3[uint(0)].y = sin(tmpvar_2);\n  tmpvar_3[1u].x = -(sin(tmpvar_2));\n  tmpvar_3[1u].y = cos(tmpvar_2);\n  xlat_mutablemus = (abs(vec3((0.2 / \n    (sqrt(((\n      (uv - 0.5)\n     * aspect.xy) * tmpvar_3).y) + 0.2)\n  ))) * vec3(1.0, 0.96, 0.9));\n  xlat_mutablemus = (xlat_mutablemus * (vec3(1.0, 0.96, 0.9) + (0.1 * \n    (texture (sampler_noise_lq, uv) - 0.5)\n  .xyz)));\n  vec3 tmpvar_4;\n  tmpvar_4 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_5;\n  tmpvar_5.x = dot ((texture (sampler_main, (uv + vec2(0.004, 0.0))) - texture (sampler_main, (uv - vec2(0.004, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_5.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.004))) - texture (sampler_main, (uv - vec2(0.0, 0.004)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_5 * 0.02))).xyz + (0.5 * texture (sampler_main, uv)).xyz);\n  crisp_1 = (crisp_1 * 0.667);\n  crisp_1 = (crisp_1 + (vec3(0.018, 0.018, 0.018) - (\n    sqrt(dot (tmpvar_5, tmpvar_5))\n   * tmpvar_4)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((\n    (crisp_1 - (tmpvar_4 * 0.03))\n   + \n    (0.04 * xlat_mutablemus)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_6.xyz;\n }","comp":"vec3 xlat_mutableret1;\nvec3 xlat_mutableret2;\nvec2 xlat_mutablesam;\n shader_body { \n  vec2 uv_1;\n  xlat_mutablesam = (texture (sampler_main, (uv * 0.5)).xy * ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, (xlat_mutablesam + uv));\n  float tmpvar_3;\n  tmpvar_3 = (0.5 * bass_att);\n  xlat_mutableret1 = ((tmpvar_2.x * (\n    (tmpvar_3 * uv_orig.y)\n   + tmpvar_2.xyz)) + (tmpvar_2.x * texture (sampler_main, uv).xyz));\n  xlat_mutableret1 = (xlat_mutableret1 * ((xlat_mutableret1 + 1.0) / 2.0));\n  uv_1 = (((uv - 0.5) * 0.3) + 0.5);\n  xlat_mutablesam = (texture (sampler_main, (uv_1 * 0.5)).xy * ((\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur3, uv_1).xyz * scale3)\n   + bias3)).xy);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, (xlat_mutablesam + uv_1));\n  xlat_mutableret2 = ((tmpvar_4.x * (\n    (tmpvar_3 * uv_orig.y)\n   + tmpvar_4.xyz)) + (tmpvar_4.x * texture (sampler_main, uv_1).xyz));\n  xlat_mutableret2 = (xlat_mutableret2 * (xlat_mutableret1 + 1.0));\n  vec3 tmpvar_5;\n  tmpvar_5 = max (xlat_mutableret1, xlat_mutableret2);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (tmpvar_5 * (0.5 + (0.5 * \n    dot (tmpvar_5, vec3(0.32, 0.49, 0.29))\n  )));\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat2 uv1,uv6;\nfloat dx,dy;\n\nshader_body {\nuv1 = (uv-.5) * aspect.xy;\n\n\nfloat rota = lum(tex2D (sampler_noise_hq,q30*uv+.001*time))*3.14;\n\n\nuv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));\n\n\nmus = .2/(sqrt(uv6.y)+.2);\nmus = abs(mus);\nmus *= float3 (1,.96,.9);\n\nfloat3 no = tex2D (sampler_noise_lq,uv)-.5;\nmus *= float3 (1,.96,.9) + 0.1*no;\n\ncolor =  1;\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (0.004,0);\nfloat2 ver = float2 (0,.004);\n\ndx = lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\ndy = lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\nfloat2 zz = float2 (dx,dy);\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\nfloat3 crisp2 = .5*tex2D(sampler_main,uv);\ncrisp += crisp2;\ncrisp *= .667;\ncrisp +=.018*color - length(zz)*blur;\n\nfloat3 ret1 = crisp - blur*.03 + .04*mus;\n//ret1 -= abs(mus)/52;\nret = ret1 * .99 -  .04 ;\n}","comp_hlsl":"float3 ret1, ret2, reta;\nfloat2 sam;\nshader_body\n{\n    sam = tex2D(sampler_main,uv*.5);\n    ret1 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret1 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret1;\n    ret1 *= (ret1+1)/2; //gamma\n\nuv = (uv-.5)*.3+.5;\n    sam = tex2D(sampler_main,uv*.5);\n    ret2 = tex2D(sampler_main, float2(uv.x, uv.y));\n    sam *= GetBlur1(uv)-GetBlur3(uv);       \n\n    reta = tex2D(sampler_main, sam+uv ).rgb;\n    ret2 = reta.r * (.5*bass_att*uv_orig.y+reta) + (reta.r)*ret2;\n    ret2 *= (ret1+1); //gamma\n\n\n\nret = max(ret1, ret2);\nret *= .5+.5*lum(ret);\n//ret = (1+ret1)*ret2;\n\n}\n\n"}