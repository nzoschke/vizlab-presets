{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wave_a":1,"wave_scale":4.575,"wave_mystery":-0.4,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_b":1,"ob_a":1,"ib_size":0.04,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_dx":-0.002,"mv_l":0,"mv_g":0,"mv_b":0,"mv_a":0.6},"shapes":[{"baseVals":{"sides":100,"textured":1,"rad":0.49138,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xpos=0;a.q1=0;a.myx=0;a.myy=0;a.x_pos=0;a.q4=0;a.ypos=0;a.movement=0;a.att=0;a.volume=0;a.q2=0;a.q4=.249+.005*rand(100);a.q5=.249+.005*rand(100);a.q6=.249+.005*rand(100);","frame_eqs_str":"a.warp=0;a.volume=.3*(a.bass+a.mid+a.att);a.wave_x=1-(a.xpos+.5);a.wave_y=a.ypos+.5;a.mv_r=.5+.499*(.6*Math.sin(3.98*a.time)+.4*Math.sin(1.047*a.time));a.mv_g=.5+.499*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.mv_b=.5+.499*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.q1=a.x_pos+.5;a.q2=1-(a.ypos+.5);a.wave_a=0;a.warp=0;a.zoom=1;a.movement+=.5*div(a.bass+a.bass_att+.075*pow(a.bass+.6*a.bass_att+.2*a.treb_att,3),a.fps);a.movement=.00001<Math.abs(above(a.movement,\n1E4))?0:a.movement;a.rot=-.04+.01*(Math.sin(.696*a.movement)+Math.cos(.463*a.movement)+Math.sin(.365*a.movement));a.cx=.1*(Math.sin(.247*a.movement)+Math.cos(.373*a.movement)+Math.sin(.187*a.movement));a.cy=.1*(Math.sin(.317*a.movement)+Math.cos(.209*a.movement)+Math.sin(.109*a.movement));a.ob_b=a.q4+.25*Math.sin(3.816*a.movement);a.ob_g=a.q4+.25*Math.sin(.744*a.movement);a.ob_r=a.q4+.25*Math.sin(.707*a.movement);a.wrap=below(a.bass+a.bass_att,3);a.zoom=.99+.0035*(Math.sin(.217*a.movement)+Math.cos(.413*\na.movement)+Math.sin(.311*a.movement));","pixel_eqs_str":"a.myy=a.y-.250025;a.myx=a.x-.5;a.dx=4*a.myx*a.myy;a.dy=2*(a.myy*a.myy-a.myx*a.myx);","init_eqs_eel":"q4 = 0.249+0.5*(rand(100)*0.01);\nq5 = 0.249+0.5*(rand(100)*0.01);\nq6 = 0.249+0.5*(rand(100)*0.01);","frame_eqs_eel":"warp = 0;\nvolume = 0.3*(bass+mid+att);\nwave_x = 1-(xpos + 0.5);\nwave_y = ypos + 0.5;\nmv_r = 0.5 + 0.499*(0.60*sin(3.980*time) + 0.40*sin(1.047*time) );\nmv_g = 0.5+ 0.499*(0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\nmv_b = 0.5 + 0.499*(0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\nq1 = (x_pos+0.5);\nq2 = 1- (ypos+0.5);\nwave_a =0;\nwarp=0;\nzoom =1;\nmovement =movement + 0.5*(((bass+bass_att + 0.075*pow((bass+0.6*bass_att+0.2*treb_att),3)))/fps);\nmovement = if(above(movement,10000), 0, movement);\nrot =-0.04+ 0.01*(sin(movement*0.696)+cos(movement*0.463)+sin(movement*0.365));\ncx = 0 + 0.1*(sin(movement*0.247)+cos(movement*0.373)+sin(movement*0.187));\ncy = 0 + 0.1*(sin(movement*0.317)+cos(movement*0.209)+sin(movement*0.109));\nob_b = q4+0.25*sin(movement*3.816);\nob_g = q4+0.25*sin(movement*0.744);\nob_r = q4+0.25*sin(movement*0.707);\nwrap = below(bass+bass_att,3);\nzoom = 0.99 + 0.0035*(sin(movement*0.217)+cos(movement*0.413)+sin(movement*0.311));","pixel_eqs_eel":"myy = y-(0.250025);\nmyx = x-0.5;\ndx = 2*(2*myx*myy);\ndy = 2*((myy*myy) - (myx*myx));","warp":"","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\n  ), pow (hue_shader.yxz, ret_2)));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader.yxz,ret));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}