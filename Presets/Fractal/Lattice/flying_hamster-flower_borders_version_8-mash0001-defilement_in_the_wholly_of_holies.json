{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":6,"wave_brighten":0,"wave_a":0,"wave_scale":0.167,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":0.107,"zoomexp":4.10046,"cx":1,"cy":0,"warp":0,"wave_x":0.95,"wave_y":1,"ob_size":0.07,"ob_a":1,"ib_size":0.07,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.beat_threshold=0;a.tb=0;a.last_time_bass=0;a.tempo_treb=0;a.lowpitch=0;a.q6=0;a.q1=0;a.q5=0;a.last_treb=0;a.timegap_treb=0;a.tempo_bass=0;a.beat_treb=0;a.tt=0;a.time_threshold=0;a.beat_bass=0;a.last_bass=0;a.tgb=0;a.ltb=0;a.highpitch=0;a.ltt=0;a.q4=0;a.last_time_treb=0;a.volume=0;a.beat=0;a.q2=0;a.timegap_bass=0;a.q3=0;a.downbeat=0;a.tgt=0;a.zoom=1;a.xpos=0;a.ypos=0;","frame_eqs_str":"a.decay=1;a.ob_r=1-Math.abs(Math.sin(div(a.time,2)));a.ob_g=1-Math.abs(Math.sin(div(a.time,2)));a.ob_b=1-Math.abs(Math.sin(div(a.time,2)));a.ib_r=1-Math.abs(Math.cos(div(a.time,3)));a.ib_g=1-Math.abs(Math.cos(div(a.time,3)));a.ib_b=1-Math.abs(Math.cos(div(a.time,3)));a.q1=.00001<Math.abs(above(Math.abs(a.ob_size-a.ib_size),.06))?17:.8;a.ob_size=Math.abs(div(Math.sin(div(a.time,5*a.q1)),13));a.ib_size=.08-a.ob_size;a.volume=div(a.bass_att+a.mid_att+a.treb_att,3);a.beat_threshold=\ndiv(1.7,.5*(a.tb+a.tt));a.time_threshold=.8;a.highpitch=.9*a.treb_att+.1*a.mid_att;a.lowpitch=a.bass_att;a.beat_bass=.00001<Math.abs(above(a.lowpitch,a.last_bass*a.beat_threshold))?1:0;a.beat_treb=.00001<Math.abs(above(a.highpitch,a.last_treb*a.beat_threshold))?1:0;a.timegap_bass=.00001<Math.abs(equal(a.beat_bass,1))?a.time-a.ltb:a.tgb;a.timegap_treb=.00001<Math.abs(equal(a.beat_treb,1))?a.time-a.ltt:a.tgt;a.tgb=a.timegap_bass;a.tgt=a.timegap_treb;a.last_time_bass=.00001<Math.abs(equal(a.beat_bass,\n1))?a.time:a.ltb;a.last_time_treb=.00001<Math.abs(equal(a.beat_treb,1))?a.time:a.ltt;a.ltb=a.last_time_bass;a.ltt=a.last_time_treb;a.tempo_bass=.00001<Math.abs(equal(a.beat_bass,1))?.92*a.tb+.08*a.tgb:a.tb;a.tempo_treb=.00001<Math.abs(equal(a.beat_treb,1))?.92*a.tt+.08*a.tgt:a.tt;a.tb=a.tempo_bass;a.tt=a.tempo_treb;a.q2=a.beat_bass;a.q3=a.beat_treb;a.q4=a.ob_r;a.q5=a.ib_r;a.q6=a.volume;a.monitor=a.downbeat;a.last_treb=a.highpitch;a.last_bass=a.lowpitch;a.rot=Math.sin(div(a.time,5.3));a.beat=0;a.dx=\ndiv(Math.sin(div(a.time,4.4)),5);a.dy=div(Math.cos(div(a.time,3.6)),5);","pixel_eqs_str":"","init_eqs_eel":"zoom=1;\nxpos=0;\nypos=0;","frame_eqs_eel":"decay=1;\nob_r=1-abs(sin(time/2));\nob_g=1-abs(sin(time/2));\nob_b=1-abs(sin(time/2));\nib_r=1-abs(cos(time/3));\nib_g=1-abs(cos(time/3));\nib_b=1-abs(cos(time/3));\nq1 = if(above(abs(ob_size - ib_size),0.06),17,0.8);\nob_size=abs(sin(time/(5*q1))/13);\nib_size=0.08-ob_size;\nvolume = (bass_att+mid_att+treb_att)/3;\nbeat_threshold = 1.7/((tb+tt)*0.5);\ntime_threshold = 0.8;\nhighpitch = 0.9 * treb_att + 0.1 * mid_att;\nlowpitch = bass_att;\nbeat_bass = if(above(lowpitch,last_bass*beat_threshold),1,0);\nbeat_treb = if(above(highpitch,last_treb*beat_threshold),1,0);\ntimegap_bass = if(equal(beat_bass,1), (time-ltb), tgb);\ntimegap_treb = if(equal(beat_treb,1), (time-ltt), tgt);\ntgb = timegap_bass;\ntgt = timegap_treb;\nlast_time_bass = if(equal(beat_bass,1), time, ltb);\nlast_time_treb = if(equal(beat_treb,1), time, ltt);\nltb = last_time_bass;\nltt = last_time_treb;\ntempo_bass = if(equal(beat_bass,1), (tb * 0.92 + 0.08 * tgb), tb);\ntempo_treb = if(equal(beat_treb,1), (tt * 0.92 + 0.08 * tgt), tt);\ntb = tempo_bass;\ntt = tempo_treb;\nq2 = beat_bass;\nq3 = beat_treb;\nq4 = ob_r;\nq5 = ib_r;\nq6 = volume;\n\n\n\n\n\n\n\n\n\nmonitor = downbeat;\n\n\nlast_treb = highpitch;\nlast_bass = lowpitch;\nrot=sin(time/5.3);\nbeat = 0;\ndx= sin(time/4.4)/5;\ndy= cos(time/3.6)/5;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\n  tmpvar_4 = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  float tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\n  tmpvar_7 = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4;\n  tmpvar_10.y = tmpvar_7;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  tmpvar_11.y = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x + 0.004);\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_7;\n  tmpvar_13.y = -(tmpvar_4);\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_14;\n  x_14 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\n   * 180.0) / sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )));\n  ret_2.z = (ret_2.z * 0.8);\n  ret_2.z = (ret_2.z + 0.004);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_7);\n  tmpvar_15.y = tmpvar_4;\n  my_uv_1 = (tmpvar_15 * 0.045);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_3.x);\n  tmpvar_16.y = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_3.y);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\n   * 0.1) + 0.01));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_2;\n  ret = tmpvar_17.xyz;\n }","comp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1.x = (0.005 * (_qa.y + _qb.y));\n  tmpvar_1.y = (0.005 * (_qa.z + _qb.y));\n  vec3 tmpvar_2;\n  tmpvar_2.x = _qb.x;\n  tmpvar_2.y = _qb.x;\n  tmpvar_2.z = _qb.x;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = tmpvar_2;\n  vec3 tmpvar_4;\n  tmpvar_4.x = _qa.w;\n  tmpvar_4.y = _qa.w;\n  tmpvar_4.z = _qa.w;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 0.0;\n  tmpvar_5.xyz = tmpvar_4;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (mix (tmpvar_3, tmpvar_5, texture (sampler_main, (uv + tmpvar_1))) * texture (sampler_main, uv)).xyz;\n  ret = tmpvar_6.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with\n    float1 d = 0.005;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;\n    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;\n    float2 my_uv = uv - float2(dx,dy)*0.01 + float2(dxb,dyb)*0.003;\n\n\n\n    float2 v = 0.01;\n    ret.x = tex2D( sampler_fw_main, my_uv -floor(my_uv)*0).x;\n\n    \n    ret.x += (ret.x - GetBlur3(uv).x)*.1;\n    ret.x += 0.004;\n\n\n//--------------------------------\n\n    my_uv = uv + float2(dy,-dx)*0.05*(1.2-GetBlur3(uv).y);\n\n\n\n    v = 0.01;\n    ret.z = tex2D( sampler_fw_main, my_uv).z;\n    \n    ret.z += (ret.z - GetBlur1(uv).z)*length(my_uv-uv)*180/length(scale);\n    ret.z *= 0.8;\n    ret.z += 0.004;\n\n\n\n//--------------------------------\n\n    d = 0.01;\n    my_uv = float2(-dy,dx)*0.045;\n\n    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;\n    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;\n    my_uv += uv - float2(dx,dy)*0.03;\n\n\n\n    v = 0.01;\n    ret.y =tex2D( sampler_fw_main, my_uv).y;\n\n    \n    ret.y += (ret.y - GetBlur3(my_uv).y)*0.1 + 0.01;\n//ret = 0;\n}","comp_hlsl":"shader_body\n{\n    float2 uv_post = uv + float2(0.005*(_qa.y+_qb.y),0.005*(_qa.z+_qb.y));\n    \t\n    ret = lerp(float3(0,0,0),lerp(float3(_qb.x,_qb.x,_qb.x),float3(_qa.w,_qa.w,_qa.w),tex2D(sampler_main, uv_post)),tex2D(sampler_main, uv));\n    \n}"}