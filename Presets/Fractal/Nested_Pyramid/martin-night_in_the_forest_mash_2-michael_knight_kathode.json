{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.168,"wave_smoothing":0,"wave_mystery":-0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":32,"mv_y":24,"mv_l":0.5,"mv_r":0.3,"mv_g":0.5,"mv_b":0.4,"mv_a":0,"b1ed":0.7},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"y":0.13,"rad":1.50499,"tex_zoom":0.45951,"r2":1,"g2":0,"border_r":0.7,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"rad":0.02217,"tex_zoom":0.49981,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.07,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":14,"additive":1,"textured":1,"x":0.59,"y":0,"rad":1.21524,"ang":0.06283,"tex_zoom":0.51494,"r":0.6,"g":0.5,"b":0.7,"a":0.1,"r2":0.7,"g2":0.5,"b2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5+.3*cos(time/78);\ny = .5+.3*sin(time/78);\n\ntex_zoom = .2 / (sin(time/31)+1.1)\n\n","init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/78);\ny = .5+.3*sin(time/78);\n\ntex_zoom = .2 / (sin(time/31)+1.1)\n\n"},{"baseVals":{"sides":63,"additive":1,"textured":1,"x":0.76,"y":0.75,"rad":0.68636,"ang":0.43982,"tex_ang":0.50266,"tex_zoom":0.6159,"r":0.7,"g":0.7,"b":0.7,"a":0.15,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5+.3*cos(time/59);\ny = .5+.3 *sin(time/59);","init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/59);\ny = .5+.3 *sin(time/59);"}],"waves":[{"baseVals":{"enabled":1,"samples":247,"sep":9,"usedots":1,"additive":1,"scaling":0.06708,"smoothing":0.82,"r":0,"b":0.5},"init_eqs_str":"a.t1=0;a.t2=0;a.k1=0;a.k2=0;a.mod=0;a.t3=0;a.t1=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t2=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t3=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t4=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t5=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t6=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t7=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));\na.t8=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));","frame_eqs_str":"a.t1=1;a.t3=Math.sin(div(a.time,2));a.t3=Math.max(a.t3,0);a.t3=4.9*Math.min(a.t3,.2);","point_eqs_str":"a.t1=mod(67*a.t1+37,4096);a.t2=div(a.t1,4096);a.k1=mod(100*a.sample+2*a.time,2);a.k2=mod(100*a.sample+5*a.time,2);a.x=.49+.48*Math.sin(31*a.sample+div(a.t2*a.time,27));a.y=.2*a.t2+.2*Math.sin(131*a.sample+div(a.t2*a.time,37));a.mod=Math.sin(600*a.sample+.4*a.time);a.mod=Math.max(a.mod,0);a.mod=3*Math.min(a.mod,.33);a.a=1;a.r=.02;a.b=.6*a.mod;a.g=a.mod*(.7+div(a.t2,4));","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"t1 = 1;\nt3 = sin(time/2);\nt3 = max (t3,0);\nt3 = 4.9*min(t3,.2);\n","point_eqs_eel":"t1 = (t1*67+37)%4096;\nt2 = t1/4096;\n\nk1 = (100*sample+time*2)%2;\nk2 = (100*sample+time*5)%2;\n\nx = .49 + .48*sin(sample*31+t2*time/27);\ny =  0 + .2*t2 + .2*sin(sample*131+t2*time/37);\n\n\nmod = sin(sample*600+.4*time);\nmod = max (mod,0);\nmod = 3*min(mod,.33);\n\n\na = 1;\nr = .02;\nb = mod * .6 ; g = mod * (.7 + t2/4);\n "},{"baseVals":{"enabled":1,"scaling":0.89152,"smoothing":0.82,"a":0.1},"init_eqs_str":"a.t1=0;a.px=0;a.t2=0;a.py=0;a.k1=0;a.t1=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t2=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t3=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t4=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t5=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t6=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t7=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));\na.t8=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));","frame_eqs_str":"a.t1=1;a.t2=7;","point_eqs_str":"a.r=.31;a.b=0;a.g=0;a.a=1;a.t1=mod(67*a.t1+37,4096);a.px=div(a.t1-2047,4096);a.t2=mod(67*a.t2+37,4096);a.py=div(a.t2-0,4096);a.k1=mod(100*a.sample,8);a.y=div(a.py,3.5)+0;a.a=below(a.y,.2);a.x=.5+.4*Math.sin(26*a.sample);","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"t1 = 1; t2 = 7;","point_eqs_eel":"r = .31;\nb = 0;\ng = .0;\n\na = 1;\n//g = 1;b=1;\n\nt1 = (t1*67 + 37)%4096;\npx = (t1-2047)/4096;\n\nt2 = (t2*67 + 37)%4096;\npy = (t2-0)/4096;\n\n\nk1 = (sample*100)%8;\n\ny = py/3.5 + .0;\na = below(y,.2);\n\nx = .5 + .4*sin(sample*26)  ;\n"},{"baseVals":{"enabled":1,"samples":100,"scaling":0.01,"smoothing":0.82,"a":0.1},"init_eqs_str":"a.t5=0;a.t1=0;a.bird=0;a.y0=0;a.dx=0;a.t3=0;a.ground=0;a.k1=0;a.t6=0;a.f1=0;a.trig=0;a.dy=0;a.t2=0;a.t4=0;a.t1=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t2=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t3=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t4=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t5=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t6=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));\na.t7=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));a.t8=1+.3*(.01*Math.floor(rand(101))-.01*Math.floor(rand(101)));","frame_eqs_str":"a.t1=Math.sin(3*a.time);a.t2=Math.cos(3*a.time);a.t3=Math.sin(div(a.time,3));a.t4=Math.cos(div(a.time,3));a.t5=Math.cos(div(a.time,4));a.ground=below(a.t5,-.9);a.trig=below(Math.floor(rand(100)),1);a.trig=a.trig*bnot(a.ground)*bnot(a.bird);a.bird*=bnot(a.ground);a.bird=bnot(a.bird)*a.trig;a.t6=a.bird;","point_eqs_str":"a.r=1;a.g=0;a.b=0;a.k1=below(a.sample,.5);a.dx=.02*a.k1*Math.sin(50*a.sample);a.f1=sqr(a.dx);a.dy=20*a.f1*a.t1+div(a.t2,150);a.dy+=.004*(1-a.k1)*Math.sin(50*a.sample);a.x=a.dx+.5+.1*a.t3;a.dy+=.2*a.dx*a.t4;a.y0+=div(a.time,7);a.y0-=Math.floor(a.y0);a.y0=a.t5;a.y=a.dy+.7+div(a.y0,8);a.a=.04;","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"\nt1 = sin(time*3);\nt2 = cos(time*3);\n\nt3 = sin(time/3);\nt4 = cos(time/3);\n\nt5 = cos(time/4);\n\n//give him a break\n//bird = 1;\n\nground = below(t5,-.9);\ntrig = below(int(rand(100)),1);\ntrig = trig * bnot(ground) * bnot(bird);\nbird = bird * bnot(ground);\n\nbird = bnot(bird)*trig;\n\nt6 = bird;","point_eqs_eel":"\nr = 1; g = 0; b = 0;\nk1 = below(sample,.5);\n\ndx = .02*k1*sin(sample*50);\n\n//clb = above(sin(time/3),0);\n\nf1 = sqr(dx);\n\ndy =  20*f1*t1 + t2/150;\ndy = dy+ (1-k1) * .004*sin(sample*50);\n\nx = dx + .5 + .1*t3;\n\ndy = dy + +.2*dx*t4;\n\ny0 = y0 + time/7;\ny0 = y0 - int(y0) ;\ny0 = t5;\ny = dy+ .7 + y0/8;\n\na = .04;\n\n"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index=0;a.q22=0;a.q21=0;a.q29=0;a.dec_med=0;a.movz=0;a.movx=0;a.rott=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q26=0;a.p2=0;a.avg=0;a.beat=0;a.p1=0;a.peak=0;a.q27=0;a.p3=0;a.t0=0;a.q28=0;a.q30=0;a.q20=0;a.q28=0;a.q29=0;a.p1=0;","frame_eqs_str":"a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.q20=a.avg;a.q21=a.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;a.k1=a.is_beat*equal(a.index,0);a.p1=\na.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.p3=a.dec_med*a.p3+(1-a.dec_med)*a.p2;a.rott=div(3.1416*a.p3,2);a.q27=a.index+1;a.movz+=div(.18,a.fps)*(1.5+Math.sin(a.rott));a.q29=a.movz;a.movx+=div(.3,a.fps)*Math.sin(div(a.time,5));a.q28=a.movx;a.q30=Math.sin(div(a.time,9))+2;","pixel_eqs_str":"a.warp=.02;","init_eqs_eel":"q28 = 0; q29 = 0; p1= 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\n\nk1 =  is_beat*equal(index,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\n\np2 = dec_med * p2+ (1-dec_med)*p1;\np3 = dec_med * p3+ (1-dec_med)*p2;\nrott = p3 * 3.1416/2;\nq27 = index + 1;\n\nmovz = movz + .006*30/fps*(1.5+sin(rott));\nq29 = movz ;\n\n\nmovx = movx + .01*30/fps*(sin(time/5));\nq28 = movx;\n\n\nq30 = sin(time/9)+2;","pixel_eqs_eel":"//rot = q1/10* (rad\nwarp = .02;","warp":" shader_body { \n  vec2 uv6_1;\n  vec2 uv1_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float x_4;\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\n  float tmpvar_5;\n  tmpvar_5 = ((12.0 * (1.0 + rand_preset)) * sqrt((x_4 * x_4))).x;\n  uv1_2 = (tmpvar_3 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * normalize(tmpvar_3))\n  , vec2(-4.0, -4.0), vec2(4.0, 4.0)) / 40.0));\n  uv6_1 = (0.4 * cos((uv1_2 * 8.0)));\n  float x_6;\n  x_6 = (uv6_1.y + uv6_1.x);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((texture (sampler_main, \n    ((uv1_2 * ((1.0 - \n      (q28 / 12.0)\n    ) + (0.4 * tmpvar_5))) + 0.5)\n  ).xyz + \n    (vec3((0.002 / sqrt((x_6 * x_6)))) * (1.0 + roam_cos).xyz)\n  ) * 0.99) - 0.025);\n  ret = tmpvar_7.xyz;\n }","comp":"float xlat_mutabledist;\nfloat xlat_mutabledist2;\nvec3 xlat_mutableglow;\nfloat xlat_mutableinten;\nfloat xlat_mutablem;\nfloat xlat_mutablemask;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\nvec2 xlat_mutableuv4;\n shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  int tmpvar_3;\n  tmpvar_3 = int(q29);\n  xlat_mutablem = (1.0 - float(tmpvar_3));\n  float tmpvar_4;\n  tmpvar_4 = -(q29);\n  xlat_mutabledist = (1.0 - fract((0.3333333 - \n    (fract(tmpvar_4) / 3.0)\n  )));\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\n  xlat_mutableinten = (1.0 - xlat_mutabledist2);\n  xlat_mutableuv2 = (((q30 * xlat_mutabledist) * (uv_1 - 0.2)) - 0.2);\n  xlat_mutablemask = (float((xlat_mutableuv2.y <= 0.0)) * float((xlat_mutableuv2.y >= -1.0)));\n  xlat_mutableuv3 = (fract((xlat_mutableuv2 + \n    ((xlat_mutablem + q28) * vec2(0.3, 0.0))\n  )) * xlat_mutablemask);\n  xlat_mutableglow = (((texture (sampler_blur1, xlat_mutableuv3).xyz * scale1) + bias1) * vec3(0.6, 1.0, 1.0));\n  xlat_mutableret1 = ((texture (sampler_main, xlat_mutableuv3).xyz + (2.0 * xlat_mutableglow)) * xlat_mutableinten);\n  xlat_mutablem = (2.0 - float(tmpvar_3));\n  xlat_mutabledist = (1.0 - fract((0.6666667 - \n    (fract(tmpvar_4) / 3.0)\n  )));\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\n  xlat_mutableinten = (1.0 - xlat_mutabledist2);\n  xlat_mutableuv2 = (((q30 * xlat_mutabledist) * (uv_1 - 0.2)) - 0.2);\n  xlat_mutablemask = (float((xlat_mutableuv2.y <= 0.0)) * float((xlat_mutableuv2.y >= -1.0)));\n  xlat_mutableuv3 = (fract((xlat_mutableuv2 + \n    ((xlat_mutablem + q28) * vec2(0.3, 0.0))\n  )) * xlat_mutablemask);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_main, xlat_mutableuv3);\n  xlat_mutableglow = (((texture (sampler_blur1, xlat_mutableuv3).xyz * scale1) + bias1) * vec3(0.6, 1.0, 1.0));\n  xlat_mutablemask = (1.0 - clamp ((12.0 * tmpvar_5.xyz), 0.0, 1.0)).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + ((tmpvar_5.xyz + \n    (2.0 * xlat_mutableglow)\n  ) * xlat_mutableinten));\n  xlat_mutablem = (3.0 - float(tmpvar_3));\n  xlat_mutabledist = (1.0 - fract((1.0 - \n    (fract(tmpvar_4) / 3.0)\n  )));\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\n  xlat_mutableinten = (1.0 - xlat_mutabledist2);\n  xlat_mutableuv2 = (((q30 * xlat_mutabledist) * (uv_1 - 0.2)) - 0.2);\n  xlat_mutablemask = (float((xlat_mutableuv2.y <= 0.0)) * float((xlat_mutableuv2.y >= -1.0)));\n  xlat_mutableuv3 = (fract((xlat_mutableuv2 + \n    ((xlat_mutablem + q28) * vec2(0.3, 0.0))\n  )) * xlat_mutablemask);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, xlat_mutableuv3);\n  xlat_mutableglow = (((texture (sampler_blur1, xlat_mutableuv3).xyz * scale1) + bias1) * vec3(0.6, 1.0, 1.0));\n  xlat_mutablemask = (1.0 - clamp ((12.0 * tmpvar_6.xyz), 0.0, 1.0)).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + ((tmpvar_6.xyz + \n    (2.0 * xlat_mutableglow)\n  ) * xlat_mutableinten));\n  xlat_mutableuv4 = (uv_1 + vec2(-0.3, 0.1));\n  float tmpvar_7;\n  tmpvar_7 = (0.5 * clamp ((1.0/(\n    (abs(uv_1.y) + 0.1)\n  )), 0.0, 12.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = (uv_1.x * tmpvar_7);\n  tmpvar_8.y = tmpvar_7;\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (8.0 * xlat_mutableret1.x)), 0.0, 1.0);\n  vec3 tmpvar_10;\n  tmpvar_10.x = (0.4 * clamp ((1.0 - \n    (4.0 * uv_1.y)\n  ), 0.0, 1.0));\n  tmpvar_10.y = (0.4 * clamp ((1.0 - \n    (2.0 * uv_1.y)\n  ), 0.0, 1.0));\n  tmpvar_10.z = clamp ((1.0 - (3.0 * uv_1.y)), 0.0, 1.0);\n  ret_2 = ((xlat_mutableret1 * vec3(0.0, 1.0, 1.0)) + ((0.25 * tmpvar_10) * tmpvar_9));\n  ret_2 = (ret_2 + ((vec3(\n    dot (texture (sampler_noise_hq, (tmpvar_8 + (0.04 * time))), vec4(0.32, 0.49, 0.29, 0.0))\n  ) * \n    ((clamp ((1.0 - \n      (16.0 * uv_1.y)\n    ), 0.0, 1.0) * 0.02) / (0.01 + sqrt(dot (xlat_mutableuv4, xlat_mutableuv4))))\n  ) * tmpvar_9));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_2;\n  ret = tmpvar_11.xyz;\n }","warp_hlsl":"float3 color, mus;\nfloat dx,dy;\nshader_body {\n\nfloat2 uv1 = (uv-.5);// * aspect.xy;\n\nfloat2 uv6 = uv1;\nfloat z = 12*(1+rand_preset)*length((abs(uv1.x)-abs(uv1.y)));\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-4,4);\nuv1 -= rs/40;\n\nuv6 = .4*cos(uv1*8);\nmus = .002/(length(uv6.y+uv6.x));\nmus *= (1+roam_cos);\n\nfloat3 crisp= tex2D(sampler_main,uv1*(1-q28/12+.4*z)+.5);\n\nfloat3 ret1 = crisp + mus;\n\nret = (ret1*.99-.025);\n\n}","comp_hlsl":"float3 ret1, neu, neu2, glow, sky;\nfloat2 uv1,uv2,uv3,uv4,uv5,rs;\nfloat k,m,n,zoom,dist,dist2,inten,mask;\nfloat2x2 dir;\nint i, anz;\n\nshader_body\n{\nuv -= 0.5;\nuv *= aspect.xy;    \n\nret1 = 0; anz = 3; n = 1; \n\nfloat t_rel = q29;\n\nfor (n=1;n<=anz;n++) {\n    m =  n-int(t_rel);\n\n    dist = 1-frac(n/anz-frac(-t_rel)/anz); \n   //evtl sqrt !\n\n   zoom = q30;\n//   zoom = 2 ;\n\n    dist2 = dist*dist;\n    inten =  (1-dist2);\n    \n    uv2 =zoom*dist*(uv -.2)-.2; //Blickpunkt vert.\n\n    mask = (uv2.y<=0) * (uv2.y>= -1);\n    uv3 = frac(uv2+(m+q28)*float2(0.3,0))*mask;\n\n    neu = GetPixel (uv3);\n    glow = GetBlur1(uv3) * float3 (0.6,1,1);\n\n    mask = 1-saturate(12*neu);\n    ret1 = ret1*mask + (neu+2*glow)*inten;\n//n++;\n}\n\nuv4 = uv + float2 (-.3,.1); //pos. moon\n\n\n//clouds\nfloat z = .5*clamp(1/(abs(uv.y)+.1),0,12);\nrs = float2(uv.x * z, z);\nfloat3 clouds = lum(tex2D (sampler_noise_hq,rs+.04*time));\nclouds *= saturate(1-16*uv.y) * 0.02/(.01+length(uv4));\n\nfloat mask = saturate(1-8*ret1.r);\n\nfloat3 fog = .0*float3(0,0,saturate(uv.y));\n\n\nsky = .25*float3 (.4*saturate(1-4*uv.y),\n                 .4*saturate(1-2*uv.y),\n                   saturate(1-3*uv.y));\nret = ret1*float3(0,1,1)+ sky*mask +fog;\nret += clouds * mask;\n//ret = GetPixel(uv+.5)*2;\n}"}