{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":6,"wrap":0,"wave_a":0.001,"wave_scale":5.098,"wave_smoothing":0.81,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":0.1,"ob_a":1,"ib_size":0.05,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":2.15,"mv_r":0.4,"mv_g":0.2,"mv_b":0.1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"x":0.53,"rad":0.0882,"tex_zoom":0.4928,"g":1,"b":1,"a":0.7,"r2":0.6,"g2":0.3,"b2":0.1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.trig=0;a.q28=0;a.q24=0;a.seed=0;a.rr1=0;","frame_eqs_str":"a.trig=equal(mod(a.q28,2),1)*a.q24;a.seed=sqr(a.time-Math.floor(a.time));a.rr1=a.rr1*(1-a.trig)+a.seed*a.trig;a.textured=1;a.ang=0;a.tex_ang=.2*Math.sin(div(a.time,9));a.x=.5;a.y=.5;a.a=.9;a.a2=0;a.rad=.35;a.tex_zoom=2.2;","init_eqs_eel":"","frame_eqs_eel":"trig = equal(q28%2,1)*q24;\n\nseed = sqr(time - int(time));\nrr1 = rr1 * (1-trig) + seed*trig;\n\ntextured = 1;\nang = 0;\ntex_ang = .2*sin(time/9);\n\nx = .5; y = .5;\n\na = .9; a2 = 0;\nrad = .35;\ntex_zoom = 2.2;"},{"baseVals":{"enabled":1,"sides":54,"x":0.52,"rad":0.24146,"tex_zoom":0.02846,"g":1,"b":1,"a":0.03,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"a.q24=0;","frame_eqs_str":"a.a=a.q24;a.a2=.1;a.r=0;a.b=0;a.g=0;a.r2=0;a.b2=0;a.g2=0;","init_eqs_eel":"","frame_eqs_eel":"a = q24;a2 = 0.1;\n\nr = .0; b =.0; g = 0; \nr2 = .0; b2 = .0; g2 = 0;"},{"baseVals":{"x":0.553,"y":0.6,"rad":0.7969,"tex_zoom":0.49981,"g":1,"b":1,"a":0,"r2":1,"g2":0,"b2":1,"a2":0.01,"border_g":0.5,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5 + .0*sin(time);\ny = .5 + .2*cos(time);","init_eqs_eel":"","frame_eqs_eel":"x = .5 + .0*sin(time);\ny = .5 + .2*cos(time);"},{"baseVals":{"enabled":1,"sides":44,"x":0.45,"rad":0.20268,"tex_ang":0.62832,"tex_zoom":4.46172,"r":0.5,"a":0.5,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"a.dx=0;a.dy=0;a.q22=0;a.q24=0;","frame_eqs_str":"a.dx=div(rand(200),1E3)-.1;a.dy=div(rand(200),1E3)-.1;a.x=.5+a.dx*(1-div(a.q22,4));a.y=.5+a.dy*(1-div(a.q22,4));a.a=.9;a.a2=.8;a.g=div(rand(10),50);a.rad=.05*a.q24+.04+div(a.q22,40);","init_eqs_eel":"","frame_eqs_eel":"dx =  rand(200)/1000-.1;\ndy =  rand(200)/1000-.1;\n\nx = .5 + dx*(1-q22/4);\ny = .5 + dy*(1-q22/4);\n\n\na = .9;\na2 = .8; \ng = rand(10)/50;\nrad = .05*q24+0.04 +q22/40; "}],"waves":[{"baseVals":{"samples":102,"sep":10,"scaling":0.89152,"smoothing":0,"g":0.5,"b":0.5,"a":0.6,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t2 = t2 + bass_att;","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\nrb = .5;\npib = 6.28318530718;\n\n\ntic = min(time-tin,.1);\ntin = if(equal(sample,0),time,tin);\n\nmod = 1.5 + .5*sin(time*.15);\nmed = 1.5 + .5*sin(time*.134);\nmed = 5;\namod = 3;\n\nvr = rand(10001)*.0001;\nrb = rb + rand(10001)*.0001*.1;\n\na = vr;\n\nsa = vr*pib*.5;\nsp = sa*mod + q1*1.3;\nsam = sa*med - q1*.219;\n\nox = ra*sin(sam*pib);\noy = ra*cos(sam*pib);\nox = ox + rb*-cos(sp)*sin(sam*pib);\noz = rb*-sin(sp);\noy = oy + rb*-cos(sp)*cos(sam*pib);\n\n\nxang = time*.132;\nxang = q2;\nyang = time*.153;\nyang = q3;\nzang = time*.110;\nzang = q4;\nfov = 0.6 + 0.2*sin(time);\nfov = .5;\n\nmx = ox*cos(zang) - oy*sin(zang);\nmy = ox*sin(zang) + oy*cos(zang);\nox = mx;\noy = my;\nmx = ox*cos(yang) + oz*sin(yang);\nmz = - ox*sin(yang) + oz*cos(yang);\nox = mx;\noz = mz;\nmy = oy*cos(xang) - oz*sin(xang);\nmz = oy*sin(xang) + oz*cos(xang);\noy = my;\noz = mz;\n\noz = oz - 2;\nx = ox*fov/oz + 0.5;\nx = (x-.5)*0.75 + 0.5;\ny = oy*fov/oz + 0.5;\n"}],"init_eqs_str":"a.xpos=0;a.yamptarg=0;a.y_pos=0;a.ydir=0;a.meanbass_att=0;a.q1=0;a.myx=0;a.myy=0;a.lastbeat=0;a.beatrate=0;a.peakbass_att=0;a.xamptarg=0;a.xamp=0;a.xspeed=0;a.ypos=0;a.movement=0;a.att=0;a.volume=0;a.beat=0;a.q2=0;a.yamp=0;a.q3=0;a.xdir=0;a.q8=0;a.yspeed=0;","frame_eqs_str":"a.warp=0;a.volume=.3*(a.bass+a.mid+a.att);a.xamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.25*a.volume*a.bass_att,.5):a.xamptarg;a.xamp+=.5*(a.xamptarg-a.xamp);a.xdir=.00001<Math.abs(above(Math.abs(a.xpos),a.xamp))?-sign(a.xpos):.00001<Math.abs(below(Math.abs(a.xspeed),.1))?2*above(a.xpos,0)-1:a.xdir;a.xspeed=a.xspeed+a.xdir*a.xamp-a.xpos-.055*a.xspeed*below(Math.abs(a.xpos),a.xamp);a.xpos+=.001*a.xspeed;a.yamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.15*\na.volume*a.treb_att,.5):a.yamptarg;a.yamp+=.5*(a.yamptarg-a.yamp);a.ydir=.00001<Math.abs(above(Math.abs(a.ypos),a.yamp))?-sign(a.ypos):.00001<Math.abs(below(Math.abs(a.yspeed),.1))?2*above(a.ypos,0)-1:a.ydir;a.yspeed=a.yspeed+a.ydir*a.yamp-a.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.ypos+=.001*a.yspeed;a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.1*(9*a.meanbass_att+\na.bass_att);a.peakbass_att=Math.max(a.bass_att,a.peakbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-a.beat)*a.peakbass_att*(.95*above(a.time-a.lastbeat,2*a.beatrate)+.995*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=\na.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.wave_x=a.xpos+.5;a.wave_y=1-(a.ypos+.5);a.wave_r=.5+.499*(.6*Math.sin(.98*a.time)+.4*Math.sin(1.047*a.time));a.wave_g=.5+.499*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.wave_b=.5+.499*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.wave_mystery=-.17+.03*(.6*Math.sin(.637*a.time)+.4*Math.sin(.949*a.time));a.mv_r=.00001<Math.abs(a.beat)?1:a.ib_r;a.mv_b=.00001<Math.abs(a.beat)?a.wave_b:\na.ib_b;a.q3=a.wave_mystery;a.q1=a.wave_x;a.q2=1-a.wave_y;a.q2=a.ypos+.5;a.warp=0;a.ob_r=1-a.wave_g;a.ob_b=1-a.wave_r;a.ob_g=1-a.wave_b;a.monitor=a.wave_y;a.movement+=.4*div(a.bass+a.bass_att+.1*pow(a.bass+.6*a.bass_att+.2*a.treb_att,3),a.fps);a.movement=.00001<Math.abs(above(a.movement,1E4))?0:a.movement;a.rot=Math.sin(a.movement);a.cx=a.wave_x;a.cy=a.y_pos+.5;a.q8=a.movement;","pixel_eqs_str":"a.myy=a.x-a.q1;a.myx=a.y-a.q2+.1;a.dx=6*Math.sin(.675*a.q8)*a.myx*a.myy;a.dy=3*Math.sin(.675*a.q8)*(a.myx*a.myx-a.myy*a.myy);","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\nvolume = 0.3*(bass+mid+att);\nxamptarg = if(equal(frame%15,0),min(0.25*volume*bass_att,0.5),xamptarg);\nxamp = xamp + 0.5*(xamptarg-xamp);\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\nxpos = xpos + 0.001*xspeed;\nyamptarg = if(equal(frame%15,0),min(0.15*volume*treb_att,0.5),yamptarg);\nyamp = yamp + 0.5*(yamptarg-yamp);\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\nypos = ypos + 0.001*yspeed;\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\nwave_x = xpos + 0.5;\nwave_y = 1-(ypos + 0.5);\nwave_r = 0.5 + 0.499*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\nwave_g = 0.5 + 0.499*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\nwave_b = 0.5 + 0.499*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\nwave_mystery = -0.17 + 0.03*(0.6*sin(0.637*time) + 0.4*sin(0.949*time));\nmv_r = if(beat, 1, ib_r);\nmv_b = if(beat, wave_b, ib_b);\n//mv_a = if(beat, 0.1, ib_a);\n//ib_a = 0.015;\nq3 = wave_mystery;\nq1 = wave_x;\nq2 = 1-wave_y;\nq2 = ypos+0.5;\nwarp=0;\n\n//q2 = 1-(ypos + 0.5);\n//q1 = 0.5;\n//q2=0.5;\nob_r = 1-wave_g;\nob_b = 1-wave_r;\nob_g = 1-wave_b;\n\nmonitor = wave_y;\nmovement =movement + 0.4*(((bass+bass_att + 0.1*pow((bass+0.6*bass_att+0.2*treb_att),3)))/fps);\nmovement = if(above(movement,10000), 0, movement);\nrot =1*sin(movement);\ncx = wave_x;\ncy = y_pos+0.5;\n\nq8 = movement;","pixel_eqs_eel":"myy = x-q1;\nmyx = y-q2+0.1;\ndx = 3*sin(q8*0.675)*(2*myx*myy);\ndy = 3*sin(q8*0.675)*((myx*myx) - (myy*myy));","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\n   / 2.0) + q23)) + 1.0).xyz;\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\n  tmpvar_4.y = tmpvar_3.y;\n  ret_1 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\n   - \n    (tmpvar_2 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_3 * 0.01)\n  .xy)).xyz + (tmpvar_2 * 0.1)));\n  float tmpvar_5;\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\n  ret_1 = (ret_1 - 0.04);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (uv * 2.0);\n  vec2 tmpvar_3;\n  tmpvar_3 = floor((fract(\n    (uv_1 * 0.5)\n  ) * 2.0));\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_3)) + (tmpvar_3 * fract(\n    (1.0 - uv_1)\n  )));\n  vec2 tmpvar_4;\n  tmpvar_4.x = rad;\n  tmpvar_4.y = uv_1.y;\n  uv_1 = tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (((vec2(rad) - 0.5) * vec2(-1.0, 1.0)) + 0.5);\n  ret_2 = (texture (sampler_main, tmpvar_4).xyz * clamp ((\n    (((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2) * 2.8)\n   - 0.13), 0.0, 1.0));\n  vec3 tmpvar_6;\n  tmpvar_6 = abs(((0.1 + ret_2) - (0.1 + \n    (texture (sampler_main, tmpvar_5).xyz * clamp (((\n      ((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2)\n     * 2.8) - 0.13), 0.0, 1.0))\n  )));\n  ret_2 = (tmpvar_6 * tmpvar_6);\n  ret_2 = (ret_2 * vec3(0.9, 1.6, 2.3));\n  ret_2 = (ret_2 * (4.0 + bass_att));\n  ret_2 = (ret_2 * 1.5);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_2;\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body {\n\n//uv = uv_orig;\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat2 tmp = uv1;\ntmp.x = ang*3; tmp.y = rad;\nuv1 = tmp;\n\nfloat3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);\n\nfloat3 ret1 = GetBlur1 (uv)-.3;\nfloat3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;\nfloat3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;\n\nret = -.4*blur + crisp;\n    \n ret *= 0.98 * pow(1-.01*q28*q28*rad,2); \n  ret -= 0.04;\n}","comp_hlsl":"shader_body\n{\n\nfloat2 uv0 = uv;    \nuv *=2 ;\nfloat2 m = floor(frac(uv*0.5)*2);\nuv = frac(uv)*(1-m) + (m)*frac(1-uv);\n    uv = float2(rad,uv.y);\n\n\n    float2 uv_echo = (uv.xx- 0.5)*1.000*float2(-1,1) + 0.5;\n    ret = tex2D(sampler_main, uv.xy).xyz*+saturate(GetBlur2(uv)*2.8 - 0.13); \n    float3 ret2 = tex2D(sampler_main, uv_echo).xyz*+saturate(GetBlur2(uv_echo)*2.8 - 0.13);\n    ret = abs((.1+ret)-(.1+ret2));\n    ret *= ret; //darken\n    ret *= float3(.9,1.6,2.3);\n    ret *= 4+bass_att; //gamma\n    //ret *= 2;\n//    ret = pow(ret,1-ret);\n  //  ret -= .8*lum(1-GetPixel(uv0));\n//    ret = .5*lum(ret);\n//    ret = max(ret3,.8*lerp(ret3,ret.zxy,.75));\n    ret *= 1.5;\n\n}"}