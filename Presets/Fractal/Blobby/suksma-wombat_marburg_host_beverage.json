{"version":2,"baseVals":{"rating":5,"gammaadj":1.993,"decay":0.99,"echo_zoom":1.007,"echo_orient":3,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":100,"wave_scale":28.599,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"ob_size":0.03,"ob_g":0.4,"ob_a":0.2,"ib_size":0.03,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.2,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.40031,"r":0.5,"g":0.5,"r2":0.5,"g2":0,"border_b":0.5,"border_a":0},"init_eqs_str":"a.sounds=0;","frame_eqs_str":"a.sounds=div(a.bass+a.treb+a.mid,3);a.rad=a.rad*a.sounds*.6;a.r+=Math.sin(a.bass)*a.g;a.g+=Math.sin(a.mid)*a.g;a.x+=.207*Math.cos(a.time*a.bass*.1);a.y+=.207*Math.sin(a.time*a.bass*.1);","init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\n\nrad=rad*sounds*0.6;\n\nr=r+sin(bass)*g;\ng=g+sin(mid)*g;\n\n\nx=x+0.207*cos(time*bass*0.1);\ny=y+0.207*sin(time*bass*0.1);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13465,"r2":1,"a2":0.3,"border_a":0},"init_eqs_str":"a.sounds=0;","frame_eqs_str":"a.g2+=.09*Math.sin(1.23*(a.treb+a.mid));a.g+=.09*Math.cos(1.37*(a.bass+a.mid));a.sounds=div(a.bass+a.mid+a.treb,3);a.rad=div(a.rad*(a.treb+a.mid),3);a.x+=.3*Math.sin(a.time*a.bass);a.y+=.317*Math.cos(a.time*a.bass);","init_eqs_eel":"","frame_eqs_eel":"\ng2=g2+0.09*sin((treb+mid)*1.23);\ng=g+0.09*cos((bass+mid)*1.37);\n\nsounds=(bass+mid+treb)/3;\n\nrad=rad*(treb+mid)/3;\n\nx=x+0.300*sin(time*bass);\ny=y+0.317*cos(time*bass);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.20047,"g":1,"b":1,"r2":0.5,"g2":0.5,"b2":1,"border_b":0.5,"border_a":0},"init_eqs_str":"a.sounds=0;a.att=0;","frame_eqs_str":"a.sounds=div(a.bass+a.treb+a.mid,3);a.att=div(a.bass_att+a.treb_att+a.mid_att,3);a.att=div(a.bass_att+a.treb_att+a.mid_att,3);a.r2=a.r2+.25*Math.sin(6.28*a.time)-a.bass;a.g2=a.g2+.25*Math.sin(6.28*a.time)-a.bass;a.rad=a.rad;a.x=a.x+.217*Math.cos(2.3*a.time)+.1*a.sounds;a.y+=.217*Math.sin(3.5*a.time+.3*a.sounds);","init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\natt=(bass_att+treb_att+mid_att)/3;\natt=(bass_att+treb_att+mid_att)/3;\nr2=r2+(0.25*sin(time*6.28))-bass;\ng2=g2+(0.25*sin(time*6.28))-bass;\n\nrad=rad;\nx=x+0.217*cos(time*2.3)+sounds*0.1;\ny=y+0.217*sin((time*3.5)+(sounds*0.3));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"scaling":20.35074,"enabled":0},"init_eqs_str":"","frame_eqs_str":"r=r+0.5*sin(treb*1.13);\ng=g+0.5*sin(bass*1.33);\nb=b+0.5*sin(mid*1.23);","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"r=r+0.5*sin(treb*1.13);\ng=g+0.5*sin(bass*1.33);\nb=b+0.5*sin(mid*1.23);","point_eqs_eel":""},{"baseVals":{"sep":256,"usedots":1,"scaling":100,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.treb_tick=0;a.bass_shift=0;a.thresh=0;a.dy_r=0;a.bass_tick=0;a.mid_tick=0;a.dx_r=0;a.treb_shift=0;a.mid_shift=0;","frame_eqs_str":"a.bass_tick=2*above(a.bass_att,a.bass_tick)+(1-above(a.bass_att,a.bass_tick))*(.96*(a.bass_tick-1.3)+1.3);a.treb_tick=2*above(a.treb_att,a.treb_tick)+(1-above(a.treb_att,a.treb_tick))*(.96*(a.treb_tick-1.3)+1.3);a.mid_tick=2*above(a.mid_att,a.mid_tick)+(1-above(a.mid_att,a.mid_tick))*(.96*(a.mid_tick-1.3)+1.3);a.bass_shift=.95*equal(a.bass_tick,2)*Math.sin(5*a.time)+(1-equal(a.bass_tick,2))*a.bass_shift;a.treb_shift=.95*equal(a.treb_tick,2)*Math.sin(5*a.time)+(1-equal(a.treb_tick,\n2))*a.treb_shift;a.mid_shift=.95*equal(a.mid_tick,2)*Math.sin(5*a.time)+(1-equal(a.mid_tick,2))*a.mid_shift;a.wave_r+=a.bass_shift;a.wave_g+=a.mid_shift;a.wave_b+=a.treb_shift;a.ob_b=.5+.5*Math.cos(a.bass_att);a.ib_b=.5+.5*Math.sin(a.bass_att);","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.01*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.01*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.zoom-=.004*Math.cos(12*a.rad*a.ang*above(a.bass_att,a.treb_att));a.rot+=.021*Math.cos(12*a.ang*below(a.bass_att,1));a.dx+=2.5*a.dx_r*Math.sin(12*a.ang*above(a.bass_att,1));a.dy+=2.5*a.dy_r*Math.sin(12*a.ang*above(a.treb_att,1));\n","init_eqs_eel":"","frame_eqs_eel":"bass_tick = above(bass_att,bass_tick)*2 + (1-above(bass_att,bass_tick))*\n((bass_tick-1.3)*0.96+1.3);\ntreb_tick = above(treb_att,treb_tick)*2 + (1-above(treb_att,treb_tick))*\n((treb_tick-1.3)*0.96+1.3);\nmid_tick = above(mid_att,mid_tick)*2 + (1-above(mid_att,mid_tick))*\n((mid_tick-1.3)*0.96+1.3);\nbass_shift = equal(bass_tick,2)*0.95*sin(time*5) + (1-equal(bass_tick,2))*bass_shift;\ntreb_shift = equal(treb_tick,2)*0.95*sin(time*5) + (1-equal(treb_tick,2))*treb_shift;\nmid_shift = equal(mid_tick,2)*0.95*sin(time*5) + (1-equal(mid_tick,2))*mid_shift;\n\nwave_r = wave_r + bass_shift;\nwave_g = wave_g + mid_shift;\nwave_b = wave_b + treb_shift;\nob_b = 0.5+0.5*cos(bass_att);\nib_b = 0.5+0.5*sin(bass_att);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.01*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.01*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\n\nzoom = zoom - 0.001*(4*cos(12*rad*ang*(above(bass_att,treb_att))));\nrot = rot + 0.007*(3*cos(12*ang*(below(bass_att,1))));\ndx = dx + dx_r*(2.5*sin(12*ang*(above(bass_att,1))));\ndy = dy + dy_r*(2.5*sin(12*ang*(above(treb_att,1))));","warp":" shader_body { \n  vec2 my_uv2_1;\n  vec2 my_uv_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * vec2(2.9, 2.9));\n  vec2 tmpvar_5;\n  tmpvar_5.x = ((tmpvar_4.x * tmpvar_4.x) - (tmpvar_4.y * tmpvar_4.y));\n  tmpvar_5.y = ((2.0 * tmpvar_4.x) * tmpvar_4.y);\n  vec2 tmpvar_6;\n  tmpvar_6.x = -((tmpvar_5.y * 2.0));\n  tmpvar_6.y = (tmpvar_5.x * 2.0);\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((tmpvar_5.x * (tmpvar_6.x + 1.0)) + (tmpvar_5.y * tmpvar_6.y));\n  tmpvar_7.y = ((tmpvar_5.y * (tmpvar_6.x + 1.0)) - (tmpvar_5.x * tmpvar_6.y));\n  my_uv_2 = (tmpvar_7 * (1.0/((\n    ((tmpvar_6.x + 1.0) * (tmpvar_6.x + 1.0))\n   + \n    (tmpvar_6.y * tmpvar_6.y)\n  ))));\n  vec2 tmpvar_8;\n  tmpvar_8 = ((uv_orig - 0.5) * vec2(1.84, 1.84));\n  vec2 tmpvar_9;\n  tmpvar_9.x = ((tmpvar_8.x * tmpvar_8.x) - (tmpvar_8.y * tmpvar_8.y));\n  tmpvar_9.y = ((2.0 * tmpvar_8.x) * tmpvar_8.y);\n  my_uv2_1 = (tmpvar_9 + vec2(0.2806, 0.4508));\n  ret_3.z = ((texture (sampler_fw_main, (my_uv_2 - \n    floor(my_uv_2)\n  )).z * 0.9) - 0.04);\n  ret_3.x = (texture (sampler_fc_main, my_uv2_1).x - 0.008);\n  vec2 tmpvar_10;\n  tmpvar_10 = mix (my_uv_2, my_uv2_1, vec2(0.8, 0.8));\n  my_uv_2 = tmpvar_10;\n  ret_3.y = ((texture (sampler_fw_main, (tmpvar_10 - \n    floor(tmpvar_10)\n  )).y * 0.9) - 0.004);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_3;\n  ret = tmpvar_11.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  uv_1 = (uv * 0.5);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (max (max (\n    max (texture (sampler_main, uv_1).xyz, texture (sampler_main, (uv_1 + vec2(0.5, 0.0))).xyz)\n  , texture (sampler_main, \n    (uv_1 + vec2(0.0, 0.5))\n  ).xyz), texture (sampler_main, (uv_1 + vec2(0.5, 0.5))).xyz) * 1.3);\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n\nfloat2 zoom = 2.9;\nfloat2 cntr = float2(-0,-0);\nfloat2 c = float2(0,2); // complex constant\n\n float2 my_uv = (uv-0.5-cntr)*zoom; // center and scale dx/dy pane\n float2 u2 = float2(my_uv.x*my_uv.x - my_uv.y*my_uv.y, 2*my_uv.x*my_uv.y); //complex squaring of u\n float2 cu2 = float2(u2.x*c.x - u2.y*c.y, u2.x*c.y + c.x*u2.y); // complex multiplication by c\n float denom = 1/((cu2.x+1)*(cu2.x+1)+cu2.y*cu2.y);\n my_uv = float2(u2.x*(cu2.x+1)+u2.y*cu2.y,u2.y*(cu2.x+1)-u2.x*cu2.y)*denom; // complex division u^2/(1+c*u^2)\n\nzoom = 1.84+(bass-treb)*0.0;\ncntr = float2(0,0);\nc = float2(0.2806,0.4508);\n\n float2 my_uv2 = (uv_orig-0.5-cntr)*zoom; // using uv_orig here - no contortion to the nice julia island\n my_uv2 = float2(my_uv2.x*my_uv2.x - my_uv2.y*my_uv2.y, 2*my_uv2.x*my_uv2.y) + c; // u -> u^2 + c\n\nret.z = tex2D( sampler_fw_main, my_uv - floor(my_uv) ).z*0.9- 0.04;\nret.x = tex2D( sampler_fc_main, my_uv2).x - 0.008;\n\n my_uv = lerp(my_uv,my_uv2,0.8); // linear interpolation between the two solutions\n\nret.y = tex2D( sampler_fw_main, my_uv - floor(my_uv) ).y*0.9- 0.004;\n\n}","comp_hlsl":"shader_body\n{\n    uv *= 0.5;\n    ret = tex2D(sampler_main, uv).xyz;\n    ret = max(ret, tex2D(sampler_main,uv + float2(0.5,0)).xyz);\n    ret = max(ret, tex2D(sampler_main,uv + float2(0,0.5)).xyz);\n    ret = max(ret, tex2D(sampler_main,uv + float2(0.5,0.5)).xyz);\n    ret *= 1.3; // a little bit of overbright\n}\n\n"}