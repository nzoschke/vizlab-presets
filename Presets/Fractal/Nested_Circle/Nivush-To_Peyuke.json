{"version":2,"baseVals":{"rating":5,"wave_mode":6,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":39.053,"wave_scale":0.094,"wave_smoothing":0.9,"modwavealphastart":0.7,"zoomexp":1.10451,"zoom":0.9999,"warp":0.07829,"wave_g":0,"wave_b":0,"wave_x":1,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"num_inst":181,"x":1,"y":0,"rad":0.2954,"r":0.77,"g":0.89,"r2":0.91,"g2":0.31,"b2":0.92,"border_r":0,"border_g":0,"border_b":0.43,"border_a":0.2,"enabled":0},"init_eqs_str":"x= 0.5;","frame_eqs_str":"\n\nrg1 = max(rg1*0.77, 0.02 + 0.5*min(2,max(0,bass_att-1)*1.3));\nrg_bass = max(0,min((bass_att-1.1)*1.5,0.5));\n\n//rg1 = max(rg1*0.77, 0.02 + 0.5*min(2,max(0,treb_att-1)*1.3));\n\n//ang = 3 + 3*sin(0.4*time);\n\nnext_x = 0.00001*sin(5*time) + if(equal(frame%30,0),0.01*rand(100), next_x);\n//**next_y = if(equal(frame%10,0),0.5 - 0.005*rand(100), next_y);\n//next_y = 0.00001*cos(5*time) + if(equal(frame%50,0),q1 - 0.1 - 0.1*(q1)*rand(q1*10), next_y);\n\nnext_y = 0.00001*cos(5*time) + if(equal(frame%50,0),0.01*rand(100), next_y);\n\n//rad = 0.05 + 0.1*rg1;\n//rad = 0.05 + 0.15*rg_bass ;\nspeed = 0.00001 + 0.00017*rg_bass;\n\nmx=if(abs(mx-next_x)>0.001,if(above(mx,next_x),mx-speed,mx+speed),next_x); \nmy = if(abs(my-next_y)>0.001,if(above(my,next_y),my-speed,my+speed),next_y);\n\n//next_x = if(next_x = mx, 0.19*rand(5), mx); \n//next_y = if(next_y = my, 0.19*rand(5), my);\n\nx = mx;\ny = my;\n\n\n\n// each wall hit, the parameter change to a number between 3-8 (1, then 2, then 3, ... )\n// each number between 3-8 represents a state of the 7 colors below\ncounter3_8 = if(mx >= 0.985, if(counter3_8 <= 8, counter3_8+1, 3), counter3_8);\ncounter3_8 = if(mx <= 0.015, if(counter3_8 <= 8, counter3_8+1, 3), counter3_8);\ncounter3_8 = if(my >= (0.985), if(counter3_8 <= 8, counter3_8+1, 3), counter3_8);\ncounter3_8 = if(my <= 0.015, if(counter3_8 <= 8, counter3_8+1, 3), counter3_8);\n\n// 7 colors options\n// Thanks to Zylot for the colors, counter1, and counter2\nr3 = 1;\ng3 = 0;\nb3 = sin(counter1+2.1);\n\nr4 = 1;\ng4 = sin(counter2*.5);\nb4 = 0;\n\nr5 = 1;\ng5 = sin((counter1+1.75)*.4);\nb5 = 0;\n\nr6 = sin(counter2+2.1);\ng6 = 1;\nb6 = 0;\n\nr7 = 0;\ng7 = 1;\nb7 = sin(counter1);\n\nr8 = 0;\ng8 = sin(counter2+2);\nb8 = 1;\n\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\n\n// set the colors when counter3_8 changes\ncolor_r = if(equal(counter3_8,3), r3, color_r);\ncolor_r = if(equal(counter3_8,4), r4, color_r);\ncolor_r = if(equal(counter3_8,5), r5, color_r);\ncolor_r = if(equal(counter3_8,6), r6, color_r);\ncolor_r = if(equal(counter3_8,7), r7, color_r);\ncolor_r = if(equal(counter3_8,8), r8, color_r);\n\ncolor_g = if(equal(counter3_8, 3), g3, color_g);\ncolor_g = if(equal(counter3_8, 4), g4, color_g);\ncolor_g = if(equal(counter3_8, 5), g5, color_g);\ncolor_g = if(equal(counter3_8, 6), g6, color_g);\ncolor_g = if(equal(counter3_8, 7), g7, color_g);\ncolor_g = if(equal(counter3_8, 8), g8, color_g);\n\ncolor_b = if(equal(counter3_8, 3), b3, color_b);\ncolor_b = if(equal(counter3_8, 4), b4, color_b);\ncolor_b = if(equal(counter3_8, 5), b5, color_b);\ncolor_b = if(equal(counter3_8, 6), b6, color_b);\ncolor_b = if(equal(counter3_8, 7), b7, color_b);\ncolor_b = if(equal(counter3_8, 8), b8, color_b);\n\n// each wall hit, the color will change\nrr2 = if(mx >= 0.985, color_r, rr2);\ngg2 = if(mx >= 0.985, color_g, gg2);\nbb2 = if(mx >= 0.985, color_b, bb2);\n\nrr2 = if(mx <= 0.015, color_r, rr2);\ngg2 = if(mx <= 0.015, color_g, gg2);\nbb2 = if(mx <= 0.015, color_b, bb2);\n\nrr2 = if(my >= (0.985), color_r, rr2);\ngg2 = if(my >= (0.985), color_g, gg2);\nbb2 = if(my >= (0.985), color_b, bb2);\n\nrr2 = if(my <= 0.015, color_r, rr2);\ngg2 = if(my <= 0.015, color_g, gg2);\nbb2 = if(my <= 0.015, color_b, bb2);\n\nr2=rr2;\ng2=gg2;\nb2=bb2;\n\nr=r2;\ng=g2;\nb=b2;","init_eqs_eel":"x= 0.5;","frame_eqs_eel":"\n\nrg1 = max(rg1*0.77, 0.02 + 0.5*min(2,max(0,bass_att-1)*1.3));\nrg_bass = max(0,min((bass_att-1.1)*1.5,0.5));\n\n//rg1 = max(rg1*0.77, 0.02 + 0.5*min(2,max(0,treb_att-1)*1.3));\n\n//ang = 3 + 3*sin(0.4*time);\n\nnext_x = 0.00001*sin(5*time) + if(equal(frame%30,0),0.01*rand(100), next_x);\n//**next_y = if(equal(frame%10,0),0.5 - 0.005*rand(100), next_y);\n//next_y = 0.00001*cos(5*time) + if(equal(frame%50,0),q1 - 0.1 - 0.1*(q1)*rand(q1*10), next_y);\n\nnext_y = 0.00001*cos(5*time) + if(equal(frame%50,0),0.01*rand(100), next_y);\n\n//rad = 0.05 + 0.1*rg1;\n//rad = 0.05 + 0.15*rg_bass ;\nspeed = 0.00001 + 0.00017*rg_bass;\n\nmx=if(abs(mx-next_x)>0.001,if(above(mx,next_x),mx-speed,mx+speed),next_x); \nmy = if(abs(my-next_y)>0.001,if(above(my,next_y),my-speed,my+speed),next_y);\n\n//next_x = if(next_x = mx, 0.19*rand(5), mx); \n//next_y = if(next_y = my, 0.19*rand(5), my);\n\nx = mx;\ny = my;\n\n\n\n// each wall hit, the parameter change to a number between 3-8 (1, then 2, then 3, ... )\n// each number between 3-8 represents a state of the 7 colors below\ncounter3_8 = if(mx >= 0.985, if(counter3_8 <= 8, counter3_8+1, 3), counter3_8);\ncounter3_8 = if(mx <= 0.015, if(counter3_8 <= 8, counter3_8+1, 3), counter3_8);\ncounter3_8 = if(my >= (0.985), if(counter3_8 <= 8, counter3_8+1, 3), counter3_8);\ncounter3_8 = if(my <= 0.015, if(counter3_8 <= 8, counter3_8+1, 3), counter3_8);\n\n// 7 colors options\n// Thanks to Zylot for the colors, counter1, and counter2\nr3 = 1;\ng3 = 0;\nb3 = sin(counter1+2.1);\n\nr4 = 1;\ng4 = sin(counter2*.5);\nb4 = 0;\n\nr5 = 1;\ng5 = sin((counter1+1.75)*.4);\nb5 = 0;\n\nr6 = sin(counter2+2.1);\ng6 = 1;\nb6 = 0;\n\nr7 = 0;\ng7 = 1;\nb7 = sin(counter1);\n\nr8 = 0;\ng8 = sin(counter2+2);\nb8 = 1;\n\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\n\n// set the colors when counter3_8 changes\ncolor_r = if(equal(counter3_8,3), r3, color_r);\ncolor_r = if(equal(counter3_8,4), r4, color_r);\ncolor_r = if(equal(counter3_8,5), r5, color_r);\ncolor_r = if(equal(counter3_8,6), r6, color_r);\ncolor_r = if(equal(counter3_8,7), r7, color_r);\ncolor_r = if(equal(counter3_8,8), r8, color_r);\n\ncolor_g = if(equal(counter3_8, 3), g3, color_g);\ncolor_g = if(equal(counter3_8, 4), g4, color_g);\ncolor_g = if(equal(counter3_8, 5), g5, color_g);\ncolor_g = if(equal(counter3_8, 6), g6, color_g);\ncolor_g = if(equal(counter3_8, 7), g7, color_g);\ncolor_g = if(equal(counter3_8, 8), g8, color_g);\n\ncolor_b = if(equal(counter3_8, 3), b3, color_b);\ncolor_b = if(equal(counter3_8, 4), b4, color_b);\ncolor_b = if(equal(counter3_8, 5), b5, color_b);\ncolor_b = if(equal(counter3_8, 6), b6, color_b);\ncolor_b = if(equal(counter3_8, 7), b7, color_b);\ncolor_b = if(equal(counter3_8, 8), b8, color_b);\n\n// each wall hit, the color will change\nrr2 = if(mx >= 0.985, color_r, rr2);\ngg2 = if(mx >= 0.985, color_g, gg2);\nbb2 = if(mx >= 0.985, color_b, bb2);\n\nrr2 = if(mx <= 0.015, color_r, rr2);\ngg2 = if(mx <= 0.015, color_g, gg2);\nbb2 = if(mx <= 0.015, color_b, bb2);\n\nrr2 = if(my >= (0.985), color_r, rr2);\ngg2 = if(my >= (0.985), color_g, gg2);\nbb2 = if(my >= (0.985), color_b, bb2);\n\nrr2 = if(my <= 0.015, color_r, rr2);\ngg2 = if(my <= 0.015, color_g, gg2);\nbb2 = if(my <= 0.015, color_b, bb2);\n\nr2=rr2;\ng2=gg2;\nb2=bb2;\n\nr=r2;\ng=g2;\nb=b2;"},{"baseVals":{"sides":7,"textured":1,"num_inst":166,"x":0.55,"rad":0.27014,"ang":0.7539,"tex_zoom":2.00676,"r":0.77,"g":0.89,"a":0.6,"g2":0.31,"b2":0.92,"border_r":0.89,"border_g":0.54,"border_b":0.43,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_ang = cos(time);\n\nang = sin(0.5*time) + 0.2*q2;\n\n\nx = x - 0.15*cos(time) ;\ny = y - 0.1*sin(time) ;\n\nr = 1;\ng = 0.5 + 0.376*sin(time*0.3);\nb = 0.3 + 0.233*cos(time*0.7);;\na = 1;\n\nr2 = 1;\ng2 = 0.6 + 0.4*sin(time*0.5);\nb2 = 0;\na2 = 0.1;\n","init_eqs_eel":"","frame_eqs_eel":"tex_ang = cos(time);\n\nang = sin(0.5*time) + 0.2*q2;\n\n\nx = x - 0.15*cos(time) ;\ny = y - 0.1*sin(time) ;\n\nr = 1;\ng = 0.5 + 0.376*sin(time*0.3);\nb = 0.3 + 0.233*cos(time*0.7);;\na = 1;\n\nr2 = 1;\ng2 = 0.6 + 0.4*sin(time*0.5);\nb2 = 0;\na2 = 0.1;\n"},{"baseVals":{"sides":7,"textured":1,"num_inst":132,"x":0.45,"rad":0.27037,"ang":0.81681,"tex_zoom":2.0067,"r":0.77,"g":0.89,"r2":0.91,"g2":0.31,"b2":0.92,"border_r":0.89,"border_g":0.54,"border_b":0.43,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_ang = sin(time);\nang = -sin(0.5*time) - 0.2*q2;\n\nx = x + 0.15*cos(time) ;\ny = y + 0.1*sin(time) ;\n\nr = 1;\ng = 0.5 + 0.376*sin(time*0.3);\nb = 0.3 + 0.233*cos(time*0.7);;\na = 1;\n\nr2 = 1;\ng2 = 0.6 + 0.4*sin(time*0.5);\nb2 = 0;\na2 = 0.1;\n","init_eqs_eel":"","frame_eqs_eel":"tex_ang = sin(time);\nang = -sin(0.5*time) - 0.2*q2;\n\nx = x + 0.15*cos(time) ;\ny = y + 0.1*sin(time) ;\n\nr = 1;\ng = 0.5 + 0.376*sin(time*0.3);\nb = 0.3 + 0.233*cos(time*0.7);;\na = 1;\n\nr2 = 1;\ng2 = 0.6 + 0.4*sin(time*0.5);\nb2 = 0;\na2 = 0.1;\n"},{"baseVals":{"enabled":1,"sides":37,"textured":1,"num_inst":181,"x":1,"y":0,"rad":0.27552,"r":0.77,"g":0.89,"r2":0.91,"g2":0.31,"b2":0.92,"border_r":0,"border_g":0,"border_b":0.43,"border_a":0.03},"init_eqs_str":"a.b3=0;a.r6=0;a.next_y=0;a.b4=0;a.gg2=0;a.g3=0;a.b7=0;a.rr2=0;a.r5=0;a.rg_treb=0;a.r7=0;a.counter2=0;a.my=0;a.g4=0;a.b5=0;a.rg_mid=0;a.counter3_8=0;a.g7=0;a.my_volume=0;a.next_x=0;a.g8=0;a.color_b=0;a.b6=0;a.g5=0;a.color_r=0;a.r3=0;a.g6=0;a.mx=0;a.rg_bass=0;a.bb2=0;a.counter1=0;a.speed=0;a.color_g=0;a.r4=0;a.r8=0;a.b8=0;a.x=.5;","frame_eqs_str":"a.my_volume=div(a.bass+a.mid+a.treb,3);a.rg_bass=Math.max(0,Math.min(1.5*(a.bass_att-1.1),.5));a.rg_treb=Math.max(.77*a.rg_treb,.02+.5*Math.min(2,1.3*Math.max(0,a.treb_att-1)));a.rg_mid=Math.max(.77*a.rg_mid,.02+.5*Math.min(2,1.3*Math.max(0,a.mid_att-1)));a.rg_treb=Math.max(0,Math.min(.5*(a.rg_treb-1.1),.5));a.next_x=.00005*Math.sin(5*a.time)+(.00001<Math.abs(equal(mod(a.frame,20),0))?.15+.01*rand(70):a.next_x);a.next_y=.00005*Math.cos(5*a.time)+(.00001<Math.abs(equal(mod(a.frame,\n20),0))?.1+.01*rand(80):a.next_y);a.speed=.00005+.000517*a.rg_treb+.000817*a.rg_mid;a.mx=.00001<Math.abs(.001<Math.abs(a.mx-a.next_x)?1:0)?.00001<Math.abs(above(a.mx,a.next_x))?a.mx-a.speed:a.mx+a.speed:a.next_x;a.my=.00001<Math.abs(.001<Math.abs(a.my-a.next_y)?1:0)?.00001<Math.abs(above(a.my,a.next_y))?a.my-a.speed:a.my+a.speed:a.next_y;a.x=a.mx;a.y=a.my;a.counter3_8=.00001<Math.abs(2<=a.my_volume?1:0)?.00001<Math.abs(8>=a.counter3_8?1:0)?a.counter3_8+1:3:a.counter3_8;a.r3=.7;a.g3=.5;a.b3=Math.sin(a.counter1+\n2.1);a.r4=1;a.g4=Math.sin(.5*a.counter2);a.b4=0;a.r5=1;a.g5=Math.sin(.4*(a.counter1+1.75));a.b5=0;a.r6=Math.sin(a.counter2+2.1);a.g6=1;a.b6=0;a.r7=0;a.g7=1;a.b7=Math.sin(a.counter1);a.r8=0;a.g8=Math.sin(a.counter2+2);a.b8=1;a.counter1=.00001<Math.abs(equal(a.counter2,1))?.00001<Math.abs(equal(a.counter1,1))?0:a.counter1+.2:1;a.counter2=.00001<Math.abs(equal(a.counter1,1))?.00001<Math.abs(equal(a.counter2,1))?0:a.counter2+.2:1;a.color_r=.00001<Math.abs(equal(a.counter3_8,3))?a.r3:a.color_r;a.color_r=\n.00001<Math.abs(equal(a.counter3_8,4))?a.r4:a.color_r;a.color_r=.00001<Math.abs(equal(a.counter3_8,5))?a.r5:a.color_r;a.color_r=.00001<Math.abs(equal(a.counter3_8,6))?a.r6:a.color_r;a.color_r=.00001<Math.abs(equal(a.counter3_8,7))?a.r7:a.color_r;a.color_r=.00001<Math.abs(equal(a.counter3_8,8))?a.r8:a.color_r;a.color_g=.00001<Math.abs(equal(a.counter3_8,3))?a.g3:a.color_g;a.color_g=.00001<Math.abs(equal(a.counter3_8,4))?a.g4:a.color_g;a.color_g=.00001<Math.abs(equal(a.counter3_8,5))?a.g5:a.color_g;\na.color_g=.00001<Math.abs(equal(a.counter3_8,6))?a.g6:a.color_g;a.color_g=.00001<Math.abs(equal(a.counter3_8,7))?a.g7:a.color_g;a.color_g=.00001<Math.abs(equal(a.counter3_8,8))?a.g8:a.color_g;a.color_b=.00001<Math.abs(equal(a.counter3_8,3))?a.b3:a.color_b;a.color_b=.00001<Math.abs(equal(a.counter3_8,4))?a.b4:a.color_b;a.color_b=.00001<Math.abs(equal(a.counter3_8,5))?a.b5:a.color_b;a.color_b=.00001<Math.abs(equal(a.counter3_8,6))?a.b6:a.color_b;a.color_b=.00001<Math.abs(equal(a.counter3_8,7))?a.b7:\na.color_b;a.color_b=.00001<Math.abs(equal(a.counter3_8,8))?a.b8:a.color_b;a.rr2=.00001<Math.abs(2<=a.my_volume?1:0)?a.color_r:a.rr2;a.gg2=.00001<Math.abs(2<=a.my_volume?1:0)?a.color_g:a.gg2;a.bb2=.00001<Math.abs(2<=a.my_volume?1:0)?a.color_b:a.bb2;a.r2=a.rr2;a.g2=a.gg2;a.b2=a.bb2;a.r=a.r2;a.g=a.g2;a.b=a.b2;a.border_r=a.r;a.border_g=a.g;a.border_b=a.b;","init_eqs_eel":"x= 0.5;","frame_eqs_eel":"my_volume = (bass + mid + treb)/3;\n\n//rg_treb = max(0,min((treb_att-1.1)*1.5,0.5));\nrg_bass = max(0,min((bass_att-1.1)*1.5,0.5));\nrg_treb = max(rg_treb*0.77, 0.02 + 0.5*min(2,max(0,treb_att-1)*1.3));\nrg_mid = max(rg_mid*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\n\nrg_treb = max(0,min((rg_treb-1.1)*0.5,0.5));\n\n//rg1 = max(rg1*0.77, 0.02 + 0.5*min(2,max(0,treb_att-1)*1.3));\n\n//ang = 3 + 3*sin(0.4*time);\n\nnext_x = 0.00005*sin(5*time) + if(equal(frame%20,0),0.15 + 0.01*rand(70), next_x);\n\nnext_y = 0.00005*cos(5*time) + if(equal(frame%20,0),0.1 + 0.01*rand(80), next_y);\n\nspeed = 0.00005 + 0.000517*rg_treb + 0.000817*rg_mid;\n\nmx=if(abs(mx-next_x)>0.001,if(above(mx,next_x),mx-speed,mx+speed),next_x); \nmy = if(abs(my-next_y)>0.001,if(above(my,next_y),my-speed,my+speed),next_y);\n\nx = mx;\ny = my;\n\n// each wall hit, the parameter change to a number between 3-8 (1, then 2, then 3, ... )\n// each number between 3-8 represents a state of the 7 colors below\n\n//counter3_8 = if(mx >= 0.985, if(counter3_8 <= 8, counter3_8+1, 3), counter3_8);\n//counter3_8 = if(mx <= 0.015, if(counter3_8 <= 8, counter3_8+1, 3), counter3_8);\n//counter3_8 = if(my >= (0.985), if(counter3_8 <= 8, counter3_8+1, 3), counter3_8);\n//counter3_8 = if(my <= 0.015, if(counter3_8 <= 8, counter3_8+1, 3), counter3_8);\n\ncounter3_8 = if(my_volume >= 2, if(counter3_8 <= 8, counter3_8+1, 3), counter3_8);\n\n//counter3_8 = 3;\n\n// 7 colors options\n// Thanks to Zylot for the colors, counter1, and counter2\nr3 = 0.7;\ng3 = 0.5;\nb3 = sin(counter1+2.1);\n\nr4 = 1;\ng4 = sin(counter2*.5);\nb4 = 0;\n\nr5 = 1;\ng5 = sin((counter1+1.75)*.4);\nb5 = 0;\n\nr6 = sin(counter2+2.1);\ng6 = 1;\nb6 = 0;\n\nr7 = 0;\ng7 = 1;\nb7 = sin(counter1);\n\nr8 = 0;\ng8 = sin(counter2+2);\nb8 = 1;\n\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\n\n// set the colors when counter3_8 changes\ncolor_r = if(equal(counter3_8,3), r3, color_r);\ncolor_r = if(equal(counter3_8,4), r4, color_r);\ncolor_r = if(equal(counter3_8,5), r5, color_r);\ncolor_r = if(equal(counter3_8,6), r6, color_r);\ncolor_r = if(equal(counter3_8,7), r7, color_r);\ncolor_r = if(equal(counter3_8,8), r8, color_r);\n\ncolor_g = if(equal(counter3_8, 3), g3, color_g);\ncolor_g = if(equal(counter3_8, 4), g4, color_g);\ncolor_g = if(equal(counter3_8, 5), g5, color_g);\ncolor_g = if(equal(counter3_8, 6), g6, color_g);\ncolor_g = if(equal(counter3_8, 7), g7, color_g);\ncolor_g = if(equal(counter3_8, 8), g8, color_g);\n\ncolor_b = if(equal(counter3_8, 3), b3, color_b);\ncolor_b = if(equal(counter3_8, 4), b4, color_b);\ncolor_b = if(equal(counter3_8, 5), b5, color_b);\ncolor_b = if(equal(counter3_8, 6), b6, color_b);\ncolor_b = if(equal(counter3_8, 7), b7, color_b);\ncolor_b = if(equal(counter3_8, 8), b8, color_b);\n\n// each wall hit, the color will change\n\n//rr2 = if(mx >= 0.985, color_r, rr2);\n//gg2 = if(mx >= 0.985, color_g, gg2);\n//bb2 = if(mx >= 0.985, color_b, bb2);\n\nrr2 = if(my_volume >= 2, color_r, rr2);\ngg2 = if(my_volume >= 2, color_g, gg2);\nbb2 = if(my_volume >= 2, color_b, bb2);\n\n//rr2 = if(mx <= 0.015, color_r, rr2);\n//gg2 = if(mx <= 0.015, color_g, gg2);\n//bb2 = if(mx <= 0.015, color_b, bb2);\n\n//rr2 = if(my >= (0.985), color_r, rr2);\n//gg2 = if(my >= (0.985), color_g, gg2);\n//bb2 = if(my >= (0.985), color_b, bb2);\n\n//rr2 = if(my <= 0.015, color_r, rr2);\n//gg2 = if(my <= 0.015, color_g, gg2);\n//bb2 = if(my <= 0.015, color_b, bb2);\n\nr2=rr2;\ng2=gg2;\nb2=bb2;\n\nr=r2;\ng=g2;\nb=b2;\n\nborder_r=r;\nborder_g=g;\nborder_b=b;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"samples = 20;","point_eqs_str":"samples = 20;\n\n//x = cos(time);\n//y = sin(time);","init_eqs_eel":"","frame_eqs_eel":"samples = 20;","point_eqs_eel":"samples = 20;\n\n//x = cos(time);\n//y = sin(time);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.rg2=0;a.rg1=0;a.q1=0;a.q2=0;a.q3=0;a.q4=0;","frame_eqs_str":"a.wave_r=1;a.wave_g=1;a.wave_b=1;a.rg1=Math.max(.77*a.rg1,.02+.5*Math.min(2,1.3*Math.max(0,a.mid_att-1)));a.rg2=Math.max(.77*a.rg2,.02+.5*Math.min(2,1.3*Math.max(0,a.treb_att-1)));a.q1=.5+.3*Math.sin(.1*a.time);a.q2=a.rg1;a.q3=.1*rand(3);a.q4=.1*rand(3);a.wave_a=.1;","pixel_eqs_str":"a.rg2=Math.max(.77*a.rg2,.02+.5*Math.min(2,1.3*Math.max(0,a.mid_att-1)));a.zoom=0*Math.sin(a.rad)+.88+0*Math.sin(.7*a.time)+.07*a.rg2;a.zoom+=.3*a.rad*Math.sin(.3*a.time);a.rot=0*Math.tan(a.rad)+20+.5*Math.sin(.3*a.time)+0*Math.sin(.1*a.time)*Math.cos(.2*a.time);","init_eqs_eel":"","frame_eqs_eel":"//wave_r = 0.6 + 0.3*sin(time);\n//wave_g = 0.5 + 0.5*cos(3*time);\n//wave_b = 0.7 + 0.3*cos(time*0.2);\nwave_r=1;\nwave_g=1;\nwave_b=1;\n\nrg1 = max(rg1*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\nrg2 = max(rg2*0.77, 0.02 + 0.5*min(2,max(0,treb_att-1)*1.3));\n\n\nq1 = 0.5 + 0.3*sin(0.1*time);\nq2 = rg1;\nq3 = 0.1*rand(3);\nq4 = 0.1*rand(3);\n\n//wave_x = 0.5 + 0.3*sin(time*0.2);\n//wave_mystery = 0.4 + 0.6*sin(time*0.3);\nwave_a=0.1;\n\n//zoom = 0.8 + 0.2*sin(0.3*time) + 0.1*rg2;\n\n//rot = 20 + sin(0.1*time)*cos(0.2*time);\n\n//zoom = if(rad < 0.5, 0.1, 3.1);","pixel_eqs_eel":"//zoom = if(rad > 0.3, 0.8, 1.1);\n\nrg2 = max(rg2*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\n\nzoom =  0*0.2*sin(rad) + 0.88 + 0*0.08*sin(0.7*time) + 0.07*rg2;\n//zoom = 0.9;\nzoom = zoom + 0.3*rad*sin(0.3*time);\nrot = 0*tan(rad) + 20 + 0.5*sin(0.3*time) + 0*sin(0.1*time)*cos(0.2*time);\n//zoom = 0.97;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * (0.98 - (0.01 * \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  )));\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec3 uvw_1;\n  vec3 ret_2;\n  vec3 tmpvar_3;\n  tmpvar_3.z = 0.3;\n  tmpvar_3.xy = (uv * 3.3);\n  uvw_1.xy = tmpvar_3.xy;\n  uvw_1.z = (0.3 + (time * 0.3));\n  ret_2 = (texture (sampler_main, (uv + (\n    ((((texture (sampler_noisevol_hq, uvw_1).xy * 2.0) - 1.0) * texsize.zw) * 15.0)\n   * \n    sin((0.5 * time))\n  ))).xyz + ((\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3) * 1.4));\n  ret_2 = (pow (ret_2, vec3(0.5, 0.8, 1.7)) * 3.0);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_2;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"\nshader_body\n{\nfloat4  texsize_noise_lq;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    //ret = tex2D(sampler_main, float2(uv.x + texsize.z, uv.y));\n\n    // darken (decay) over time\n    ret *= 0.98 - 0.01*GetBlur3(uv); //or try: ret -= 0.004;\n  // ret *= 0.78 + 0.21*GetBlur3(uv);\n    //ret = (ret - 0.001)*0.9;\n    \n}","comp_hlsl":"shader_body\n{\n    // use 3D noise \n    float3 uvw = float3(uv*3.3, 0.3);\n    //uvw = mul(uvw, rot_s2);\n    uvw.z += time*0.3;\n\n    // sample a high-quality 3D noise volume!\n    float4 N = tex3D(sampler_noisevol_hq, uvw);\n\n    float2 uv2 = uv;\n    uv2 += (N.xy*2-1)*texsize.zw*15*sin(0.5*time);\n\n    ret = tex2D(sampler_main, uv2).xyz;\n    ret += GetBlur3(uv)*1.4;\n \n    // palettize:\n    ret = pow(ret, float3(0.5, 0.8, 1.7));\n           \n    ret.xyz *= 3; // a little bit of overbright\n}\n\n"}