{"version":2,"baseVals":{"rating":5,"decay":0.997,"echo_zoom":1,"wave_dots":1,"modwavealphabyvolume":1,"wrap":0,"wave_a":4.1,"wave_scale":0.972,"wave_smoothing":0.504,"wave_mystery":-0.2,"modwavealphastart":1,"modwavealphaend":1.3,"zoomexp":18.42324,"sx":0.9901,"sy":0.9901,"wave_g":0.5,"wave_b":0.44,"wave_x":1,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":40,"textured":1,"rad":0.59957,"tex_zoom":1.3345,"g":1,"b":1,"r2":1,"b2":1,"border_b":0,"border_a":0},"init_eqs_str":"a.vol=0;a.bob=0;a.border_1=0;a.ro=0;a.sp=0;a.red=0;a.spi=0;a.tm=0;a.bob=1.5;a.ro=0;a.red=Math.floor(rand(20));","frame_eqs_str":"a.vol=1+.2*div(a.bass_att+a.treb_att+a.mid_att,3);a.bob=a.bob*above(a.bob,.01)-.01+(1-above(a.bob,.01));a.bob=.4+.4*Math.sin(.8*a.time);a.bob*=a.vol;a.rad=a.bob;a.border_1=.4;a.sides=30;a.ro+=.02;a.ang=a.ro;a.rad=.6;a.sp=.025*a.red;a.spi=.5-a.sp;a.tm=.1*a.time;a.border_r=.5+a.sp*Math.sin(.6*a.tm)+a.spi*Math.cos(1.46*a.tm);a.border_g=.5+a.sp*Math.sin(1.294*a.tm)+a.spi*Math.cos(.87*a.tm);a.border_b=.5+a.sp*Math.sin(1.418*a.tm)+a.spi*Math.cos(.76*a.tm);","init_eqs_eel":"bob = 1.5;\nro = 0;\nred = int(rand(20));","frame_eqs_eel":"vol = 1 + 0.2*((bass_att+treb_att+mid_att)/3);\nbob = bob*above(bob,0.01) - 0.01 + 1*(1 - above(bob,0.01));\nbob = 0.4 + 0.4*sin(time*0.8);\nbob = bob*vol;\nrad = bob;\nborder_1 = 0.4;\nsides = 30;\nro = ro + 0.02;\nang = ro;\nrad = 0.6;\n\nsp = red*0.025;\nspi = 0.5 - sp;\ntm = time*0.1;\nborder_r = 0.5 + sp*sin(tm*0.6) + spi*cos(tm*1.46);\nborder_g = 0.5 + sp*sin(tm*1.294) + spi*cos(tm*0.87);\nborder_b = 0.5 + sp*sin(tm*1.418) + spi*cos(tm*0.76);"},{"baseVals":{"enabled":1,"sides":40,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.5*(.3*Math.sin(1.1*a.time)+.7*Math.sin(.5*a.time));a.x=.5+.225*Math.sin(a.time);a.y=.5+.3*Math.cos(a.time);a.rad*=a.mid_att;a.r=.5+.5*Math.sin(.5*a.frame);a.b=.5+.5*Math.sin(.5*a.frame+2.094);a.g=.5+.5*Math.sin(.5*a.frame+4.188);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\nx = 0.5 + 0.225*sin(time);\ny = 0.5 + 0.3*cos(time);\n\nrad = rad*mid_att;\nr = 0.5 + 0.5*sin(frame*0.5);\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\n"},{"baseVals":{"enabled":1,"sides":40,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.5*(.3*Math.sin(1.1*a.time)+.7*Math.sin(.5*a.time));a.x=.5+.225*Math.sin(a.time+2.09);a.y=.5+.3*Math.cos(a.time+2.09);a.rad*=a.bass_att;a.r=.5+.5*Math.sin(.5*a.frame);a.b=.5+.5*Math.sin(.5*a.frame+2.094);a.g=.5+.5*Math.sin(.5*a.frame+4.188);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\nx = 0.5 + 0.225*sin(time + 2.09);\ny = 0.5 + 0.3*cos(time + 2.09);\n\nrad = rad*bass_att;\nr = 0.5 + 0.5*sin(frame*0.5);\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\n"},{"baseVals":{"enabled":1,"sides":40,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.5*(.3*Math.sin(1.1*a.time)+.7*Math.sin(.5*a.time));a.x=.5+.225*Math.sin(a.time+4.19);a.y=.5+.3*Math.cos(a.time+4.19);a.rad*=a.treb_att;a.r=.5+.5*Math.sin(.5*a.frame);a.b=.5+.5*Math.sin(.5*a.frame+2.094);a.g=.5+.5*Math.sin(.5*a.frame+4.188);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\nx = 0.5 + 0.225*sin(time + 4.19);\ny = 0.5 + 0.3*cos(time + 4.19);\n\nrad = rad*treb_att;\nr = 0.5 + 0.5*sin(frame*0.5);\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\n"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q25=0;a.treb_effect=0;a.q22=0;a.q21=0;a.q1=0;a.bass_thresh=0;a.disk_shift=0;a.bm=0;a.q23=0;a.q24=0;a.net_effect=0;a.shift=0;a.rot_residual=0;a.q26=0;a.mt=0;a.q27=0;a.wave_random=0;a.timer=0;a.x_or_y=0;","frame_eqs_str":"a.warp=0;a.wave_random=div(Math.floor(rand(100)),100);a.wave_r=1+Math.sin(3.1415*-a.wave_random);a.wave_g=Math.abs(Math.sin(6.283*a.wave_random));a.wave_b=Math.sin(3.1415*a.wave_random);a.treb_effect=.00001<Math.abs(above(div(3*a.treb_att+a.mid_att+a.bass_att,5),1.4))?pow(.99,a.treb_att):1.03;a.net_effect=.00001<Math.abs(above(a.bass_att,.8*a.treb_att))?1:a.treb_effect;a.zoom=a.net_effect;a.rot+=a.rot_residual;a.bass_thresh=1.3;a.bass_thresh=2*above(div(3*a.bass_att+a.mid_att+\na.treb_att,5),a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.shift=Math.tan(7*a.time)-.05;a.shift=.00001<Math.abs(above(a.shift,0))?0:.00001<Math.abs(below(a.shift,-.1))?-.1:a.shift;a.rot_residual=.00001<Math.abs(equal(a.bass_thresh,2))?a.shift:a.rot_residual;a.timer=Math.sin(.888*a.time);a.wave_mystery=.00001<Math.abs(above(a.timer,0))?0:1;a.q1=a.timer;a.q21=.5;a.q22=0;a.q23=-.5;a.q24=0;a.q25=div(.5,Math.asin(1));a.q26=-a.bm;a.q27=a.mt;","pixel_eqs_str":"a.disk_shift=.00001<Math.abs(equal(Math.abs(Math.sin(a.ang)),.00001<Math.abs(above(a.q1,0))?0:1))?-a.rot:.05;a.timer=Math.sin(1.3*a.time);a.x_or_y=.00001<Math.abs(above(a.q1,0))?a.y:a.x;a.rot+=.00001<Math.abs(equal(mod(10*a.x_or_y,2),0))?.00001<Math.abs(below(a.timer,0))?a.disk_shift:-a.rot:.00001<Math.abs(above(a.timer,0))?a.disk_shift:-a.rot;","init_eqs_eel":"","frame_eqs_eel":"warp=0;\nwave_random = int(rand(100))/100;\nwave_r = 1 + sin(-wave_random*3.1415);\nwave_g = abs(sin(2*wave_random*3.1415));\nwave_b = sin(wave_random*3.1415);\ntreb_effect = if(above((treb_att*3+mid_att+bass_att)/5,1.4),pow(.99,treb_att),1.03);\nnet_effect = if(above(bass_att,0.8*treb_att),1,treb_effect);\nzoom = net_effect;\nrot = rot + rot_residual;\nbass_thresh = 1.3;\nbass_thresh = above((bass_att*3+mid_att+treb_att)/5,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\nshift = (tan(time*7)) -0.05;\nshift = if(above(shift,0),0,if(below(shift,-0.1),-0.1,shift));\nrot_residual = if(equal(bass_thresh,2),shift,rot_residual);\ntimer=sin(time*.888);\nwave_mystery=if(above(timer,0),0,1);\nq1=timer;\n\n// coordinates spiral 1\nq21 = 0.5; // X\nq22 = 0; // Y\n\n// coordinates spiral 2\nq23 = -0.5;\nq24 = 0;\n\nq25 = 0.5/asin(1); // pi/4\n\nq26 = -bm; // rotation\nq27 = mt; // growth","pixel_eqs_eel":"disk_shift = if(equal(abs(sin(ang)), if(above(q1,0),0,1)), -rot, 0.05);\ntimer=sin(time*1.3);\nx_or_y=if(above(q1,0),y,x);\nrot = rot + if(equal(x_or_y*10%2,0),if(below(timer,0),disk_shift,-rot),if(above(timer,0),disk_shift,-rot));","warp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\n  xlat_mutabled = (texsize.zw * 4.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabled = uv;\n  vec2 tmpvar_3;\n  tmpvar_3.x = xlat_mutabledx.y;\n  tmpvar_3.y = xlat_mutabledy.y;\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.z;\n  tmpvar_4.y = xlat_mutabledy.z;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_main, uv_orig);\n  ret_1.y = ((texture (sampler_main, (uv - \n    ((tmpvar_3 * texsize.zw) * 6.0)\n  )).y - 0.008) + ((1.0 - tmpvar_5.x) * 0.018));\n  ret_1.z = ((texture (sampler_main, (uv - \n    ((tmpvar_4 * texsize.zw) * 6.0)\n  )).z - 0.008) + (tmpvar_5.x * 0.018));\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\n  ret_1.x = (ret_1.x + ((\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\n   * 0.15) + (tmpvar_2 * 0.0042)).x);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":"vec2 xlat_mutabledenominator;\nvec2 xlat_mutablenumerator;\n shader_body { \n  vec2 spiral_1;\n  vec2 c_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv_orig - vec2(0.5, 0.667));\n  float tmpvar_5;\n  tmpvar_5 = (3.0 / tmpvar_4.y);\n  vec2 tmpvar_6;\n  tmpvar_6.x = ((tmpvar_4.x * tmpvar_5) * 0.333);\n  tmpvar_6.y = (tmpvar_5 * 0.333);\n  vec2 tmpvar_7;\n  tmpvar_7 = fract(((\n    (1.0 - abs(((\n      fract(((tmpvar_4 + vec2(0.5, 1.0)) * 0.5))\n     * 2.0) - 1.0)))\n   + vec2(0.0, -0.333)) - (\n    ((texture (sampler_noise_hq, ((tmpvar_6 * 0.05) + (vec2(0.05, -0.025) * time))) - 0.5) * float(int((tmpvar_4.y > 0.0))))\n  .xy * 0.025)));\n  c_2 = (((uv - 0.5) * 2.0) * aspect.wz);\n  vec2 tmpvar_8;\n  tmpvar_8.x = q21;\n  tmpvar_8.y = q22;\n  xlat_mutablenumerator = ((c_2 + tmpvar_8) * 64.0);\n  vec2 tmpvar_9;\n  tmpvar_9.x = q23;\n  tmpvar_9.y = q24;\n  xlat_mutabledenominator = (c_2 + tmpvar_9);\n  vec2 tmpvar_10;\n  tmpvar_10.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n  tmpvar_10.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n  c_2 = ((tmpvar_10 / (\n    (xlat_mutabledenominator.x * xlat_mutabledenominator.x)\n   + \n    (xlat_mutabledenominator.y * xlat_mutabledenominator.y)\n  )) - 0.5);\n  float tmpvar_11;\n  float tmpvar_12;\n  tmpvar_12 = (min (abs(\n    (c_2.x / c_2.y)\n  ), 1.0) / max (abs(\n    (c_2.x / c_2.y)\n  ), 1.0));\n  float tmpvar_13;\n  tmpvar_13 = (tmpvar_12 * tmpvar_12);\n  tmpvar_13 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_13) + 0.05368138) * tmpvar_13) - 0.1173503)\n     * tmpvar_13) + 0.1938925) * tmpvar_13) - 0.3326756)\n   * tmpvar_13) + 0.9999793) * tmpvar_12);\n  tmpvar_13 = (tmpvar_13 + (float(\n    (abs((c_2.x / c_2.y)) > 1.0)\n  ) * (\n    (tmpvar_13 * -2.0)\n   + 1.570796)));\n  tmpvar_11 = (tmpvar_13 * sign((c_2.x / c_2.y)));\n  if ((abs(c_2.y) > (1e-08 * abs(c_2.x)))) {\n    if ((c_2.y < 0.0)) {\n      if ((c_2.x >= 0.0)) {\n        tmpvar_11 += 3.141593;\n      } else {\n        tmpvar_11 = (tmpvar_11 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_11 = (sign(c_2.x) * 1.570796);\n  };\n  float tmpvar_14;\n  tmpvar_14 = (2.0 * tmpvar_11);\n  vec2 tmpvar_15;\n  tmpvar_15.x = ((tmpvar_14 * q25) + q26);\n  tmpvar_15.y = (((\n    (0.8 * aspect.w)\n   * \n    log(sqrt(dot (c_2, c_2)))\n  ) + (tmpvar_14 * q25)) + q27);\n  spiral_1 = (0.5 + ((0.5 - \n    abs(((fract(\n      (tmpvar_15 * 0.5)\n    ) * 2.0) - 1.0))\n  ) * 0.95));\n  ret_3 = (vec3(((\n    ((texture (sampler_blur3, spiral_1).xyz * scale3) + bias3)\n  .y - \n    ((texture (sampler_blur2, spiral_1).xyz * scale2) + bias2)\n  .y) + texture (sampler_main, spiral_1).y)) * clamp ((1.0 - \n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).x * 2.0)\n  ), 0.0, 1.0));\n  vec3 tmpvar_16;\n  tmpvar_16 = mix (mix (ret_3, vec3(0.5, 0.0, 1.0), vec3((texture (sampler_main, uv).x + \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur2, uv).xyz * scale2) + bias2))\n  .x))), vec3(1.0, 0.7, 0.0), vec3(((\n    ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)\n  .z * 2.0) + texture (sampler_main, tmpvar_7).z)));\n  ret_3 = tmpvar_16;\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = tmpvar_16;\n  ret = tmpvar_17.xyz;\n }","warp_hlsl":"float2 d, uv_y, uv_z;\nfloat3 dx, dy;\n\nshader_body\n{\n\n   float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n   float3 rand = tex2D(sampler_noise_lq, dither_uv).xyz-0.5;\n\n   d = texsize.zw*4;\n   dx = GetBlur1(uv_orig + float2(1,0)*d) - GetBlur1(uv_orig - float2(1,0)*d);\n   dy = GetBlur1(uv_orig + float2(0,1)*d) - GetBlur1(uv_orig - float2(0,1)*d);\n   \n   d = lerp(uv_orig,uv,1);\n   uv_y = d - float2(dx.y,dy.y)*texsize.zw*6;\n   uv_z = d - float2(dx.z,dy.z)*texsize.zw*6;\n\n\n   ret.y = GetPixel(uv_y).y - 0.008 + (1-GetPixel(uv_orig).x)*0.018;\n   ret.z = GetPixel(uv_z).z - 0.008 + (0+GetPixel(uv_orig).x)*0.018;\n\n    ret.x = tex2D( sampler_fc_main, uv+rand*texsize.zw*.5 ).x;\n    ret.x += (ret.x - GetBlur3(uv).x)*0.15 + rand*0.0042;\n}","comp_hlsl":"float2 d, uv_y;\nfloat3 dx, dy;\nfloat2 numerator, denominator, fraction;\n\nshader_body\n{\n\n// ***** Martin's ripples on water surface code, parameterized by Flexi *****\n\nfloat h = 0.333;                      // height of the horizon\nfloat cut_off = 0.333;              // cut off lower border\nfloat2 t = float2(0.05,-0.025)*time;  // velocity\nfloat strength = 0.025;\n\n\nfloat2 c = uv_orig-float2(0.5,1-h);\nfloat z = 3/c.y;\nfloat2 uv_water = float2(c.x*z*h,z*h)*0.05+t;\nint mask = (c.y>0);\nuv_water = (tex2D(sampler_noise_hq,uv_water)-0.5)*mask;\nfloat2 uv_mirror = 1.0-abs(frac((c+float2(0.5,1))*0.5)*2-1)+float2(0,-cut_off);\nuv_mirror =frac(uv_mirror-uv_water.xy*strength);\n\n// ***** :)\n\n\n/*** Flexis cleaned up bipolar moebius spiral code ***/\n\nfloat cutoff = 0.95;\nint n = 2; // number of arms per spiral, use negative for other direction\nfloat s = 0.8; // zoom - keep close to n/2\n\n   c = (uv-0.5)*2*aspect.wz;\n   numerator = (c + float2(q21,q22))*64;\n   denominator = c + float2(q23,q24);\n   fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,\n                      numerator.y*denominator.x - numerator.x*denominator.y)/\n                      (denominator.x*denominator.x + denominator.y*denominator.y);\n   c = fraction-0.5;\n   float1 ang_hq = n*atan2(c.x,c.y);\n   float2 spiral = float2(ang_hq*q25+q26,s*aspect.w*log(length(c))+ang_hq*q25+q27);\n   spiral = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 ))*cutoff; // mirror\n\n/**********************************************/\n\nret = GetBlur3(spiral).y-GetBlur2(spiral).y+GetPixel(spiral).y;\nret *= saturate(1 - GetBlur1(uv).x*2);\nret = lerp(ret,float3(0.5,0,1),GetPixel(uv).x + (GetBlur3(uv)-GetBlur2(uv)).x);\nret = lerp(ret,float3(1,0.7,0),GetBlur2(uv_mirror).z*2 + GetPixel(uv_mirror).z) ;\n\n//ret = GetPixel(uv);\n}\n"}