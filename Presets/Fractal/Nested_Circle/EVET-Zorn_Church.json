{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.96,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_dots":1,"darken":1,"wave_a":0.003,"wave_scale":0.262,"wave_smoothing":0.9,"wave_mystery":0.173,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_x":0.448,"wave_y":0.122,"ob_size":0,"ob_a":0.7,"ib_size":0.26,"mv_x":1.28,"mv_y":1,"mv_dx":0.087,"mv_dy":0.343,"mv_l":1.663},"shapes":[{"baseVals":{"enabled":1,"sides":24,"textured":1,"rad":0.71646,"ang":6.2831,"tex_zoom":0.99999,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q2=0;","frame_eqs_str":"a.border_r+=1.5*Math.sin(1.13*a.q2);a.border_b+=.5*Math.sin(1.23*a.q2);a.border_g+=.5*Math.sin(1.33*a.q2);a.x=.5+.4*Math.sin(a.time);a.y=.5-.4*Math.cos(a.time);","init_eqs_eel":"","frame_eqs_eel":"border_r = border_r + 1.5*sin(q2*1.13);\nborder_b = border_b + 0.5*sin(q2*1.23);\nborder_g = border_g + 0.5*sin(q2*1.33);\n//ang = 1+sin(q1);\nx = 0.5 + (.4 * sin(time));\ny = 0.5 - (.4 * cos(time));"},{"baseVals":{"enabled":1,"sides":40,"textured":1,"rad":0.72436,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5-.1*Math.sin(a.time+.01*a.bass);a.y=.5+.1*Math.cos(a.time+.01*a.bass);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 - (.1 * sin(time + (bass * 0.01)));\ny = 0.5 + (.1 * cos(time + (bass * 0.01)));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":192,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"t3 = acos(-1)*128;\nt4 = 4/3;","frame_eqs_str":"spin = spin + .01;\nt2 = spin;\nred = (-1 * cos(time))  + abs(-1 * cos(time)) + 0.2 * (cos(sin(time))+(abs(cos(sin(time)))+cos(sin(time))));\ngreen = abs(sin(time)) ;\nblue = cos(time)  + abs(cos(time));\nr = if(above(red,1),1,if(above(red,0), abs(red),0));\ng = if(above(green,1),1,if(above(green,0), abs(green),0));\nb = if(above(blue,1),1,if(above(blue,0), abs(blue),0));","point_eqs_str":"rad = sample*t3+t2;\nx = .5 + cos(rad/64)*0.65 + sin(rad)*0.35;\ny = .5 + sin(rad/64)*t4*0.65 + cos(rad)*t4*0.35;","init_eqs_eel":"t3 = acos(-1)*128;\nt4 = 4/3;","frame_eqs_eel":"spin = spin + .01;\nt2 = spin;\nred = (-1 * cos(time))  + abs(-1 * cos(time)) + 0.2 * (cos(sin(time))+(abs(cos(sin(time)))+cos(sin(time))));\ngreen = abs(sin(time)) ;\nblue = cos(time)  + abs(cos(time));\nr = if(above(red,1),1,if(above(red,0), abs(red),0));\ng = if(above(green,1),1,if(above(green,0), abs(green),0));\nb = if(above(blue,1),1,if(above(blue,0), abs(blue),0));","point_eqs_eel":"rad = sample*t3+t2;\nx = .5 + cos(rad/64)*0.65 + sin(rad)*0.35;\ny = .5 + sin(rad/64)*t4*0.65 + cos(rad)*t4*0.35;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.index2=0;a.ddir=0;a.index=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.height=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.tele=0;a.q5=0;a.dec_f=0;a.q9=0;a.dec_s=0;a.vdir=0;a.is_beat=0;a.q31=0;a.q24=0;a.ran2=0;a.q11=0;a.hpeak=0;a.ddir_=0;a.q10=0;a.ran3=0;a.dec_m=0;a.q4=0;a.dir=0;a.q16=0;a.vdir1=0;a.p2=0;a.avg=0;a.rota=0;a.trig=0;a.beat=0;a.q17=0;a.p1=0;a.peak=0;a.q27=0;a.q14=0;a.sidestep=0;a.speed=0;a.q3=0;a.t0=0;a.vol_=0;a.ran1=0;a.q32=0;a.q7=0;a.q30=0;a.q20=0;a.q8=0;a.t0a=a.time;a.t0=a.time+\n.5;a.p1=0;a.p2=0;a.height=1.5;a.speed=.2;a.p1=Math.floor(rand(100));a.p2=Math.floor(rand(100));a.sidestep=div(Math.floor(rand(10))-5,20);","frame_eqs_str":"a.dec_m=pow(.85,div(30,a.fps));a.dec_s=pow(.96,div(30,a.fps));a.dec_f=pow(.7,div(30,a.fps));a.beat=a.bass+a.mid+a.treb;a.avg=a.avg*a.dec_s+a.beat*(1-a.dec_s);a.is_beat=above(a.beat,.2+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_m;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),8);a.hpeak=a.hpeak*a.dec_f+above(a.peak,6)*a.is_beat;a.q20=a.vol_;a.q22=Math.max(0,a.peak-\n0)+.01;a.q24=a.is_beat;a.q27=a.index+1;a.tele=18*(Math.sin(div(a.time,14)+div(a.p1-a.p2,73))-.75);a.q29=Math.max(Math.min(a.tele,1),0);a.ob_size=div(a.q29-Math.max(Math.min(a.tele-1,1),0),2);a.q29=3*a.q29+1;a.trig=a.is_beat*below(Math.floor(rand(100)),2*a.avg);a.ran1+=a.trig*(div(Math.floor(rand(100)),50)-1);a.trig=a.is_beat*below(Math.floor(rand(100)),10);a.ran2=a.ran2*bnot(a.trig)+a.trig*(div(Math.floor(rand(100)),50)-1.1);a.monitor=a.ran2;a.trig=a.is_beat*below(Math.floor(rand(100)),5*a.avg);a.ran3=\na.ran3*bnot(a.trig)+a.trig*(div(a.avg,32)+.05);a.speed+=div(1,a.fps)*Math.max(Math.min(a.ran3+div(a.q29-1,6)-a.speed,.05),-.05);a.rota=0;a.ddir=a.ddir*a.dec_s+(1-a.dec_s)*(2*a.ran1-a.dir);a.ddir_=a.ddir_*a.dec_s+a.ddir*(1-a.dec_s);a.dir+=div(a.ddir_,a.fps)*Math.abs(a.speed);a.q9=a.dir;a.vdir1=a.vdir1*a.dec_s+8*div((1-a.dec_s)*a.ran2,a.fps);a.vdir=a.vdir*a.dec_s+(1-a.dec_s)*a.vdir1;a.vdir=.00001<Math.abs(below(a.vdir,0))?a.vdir*(.00001<Math.abs(below(a.height,3))?1-div(pow(a.height-3,2),4):1):a.vdir;\na.vdir=.00001<Math.abs(above(a.vdir,0))?a.vdir*(.00001<Math.abs(above(a.height,4))?1-div(pow(a.height-4,2),4):1):a.vdir;a.height+=div(a.speed,a.fps)*a.vdir*16;a.height=Math.min(Math.max(a.height,1),6);a.q7=a.vdir;a.q8=.00001<Math.abs(above(a.vdir,0))?a.height:a.height-4*a.vdir;a.q3=Math.cos(a.dir);a.q4=Math.sin(a.dir);a.p1+=div(a.q3,a.fps)*a.speed*Math.cos(a.vdir);a.p2+=div(a.q4,a.fps)*a.speed*Math.cos(a.vdir);a.q5=-a.p2+a.time*a.sidestep;a.q6=a.p1;a.q10=.4*Math.sin(div(a.time,77)+div(a.p1+a.p2,47))-\n.1;a.q11=.8+div(Math.cos(div(a.p1,11)),3);a.q12=.5+.3*Math.sin(div(a.time,22)+div(a.p1,37));a.q13=.1+.3*Math.sin(div(a.p1,3));a.q14=div(1+Math.cos(div(a.p2,5)),3);a.q30=.3*(Math.cos(div(a.time,75)+div(a.p2,123))+1);a.q31=.2+.1*Math.sin(div(a.time,94));a.q32=-.2-div(Math.sin(div(a.time,22)),4);a.q15=Math.abs(Math.sin(div(a.time,45)+div(a.p1,87)))-.75;a.q16=div(.2,a.height);a.q17=Math.tan(div(a.dir,2));a.q18=a.q16-a.q15;a.q21=div(Math.min(a.hpeak,1)*Math.floor(rand(10)),10)*below(a.q15,-.4)*above(a.q10,\n.1);a.rot=div(-a.ddir_*a.speed,2)+a.rota;a.dx=.5;a.dy=.25+a.q7;","pixel_eqs_str":"","init_eqs_eel":"t0a = time; t0 = time+.5;\n//sdev = .01;\n//spb_ = .5; spb = .51;\np1 = 0; p2 = 0;\nheight = 1.5;\nspeed = .2;\np1 = int(rand(100)); p2 = int(rand(100)); //starting pos\nsidestep = (int(rand(10))-5)/20;","frame_eqs_eel":"dec_m = pow (0.85, 30/fps); dec_s = pow (0.96, 30/fps); dec_f = pow (0.7, 30/fps);\n\nbeat = bass+mid+treb; \navg = avg*dec_s + beat*(1-dec_s);\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_m;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%8;\nhpeak = hpeak*dec_f + above(peak,6)*is_beat;\n\nq20 = vol_;\nq22 = max(0,peak-.0)+.01;\nq24 = is_beat;\nq27 = index +1;\n\n//*********** Tele****************\ntele = 18*(sin(time/14+(p1-p2)/73)-.75);\nq29 = max(min(tele,1),0);\nob_size= (q29 - max(min(tele-1,1),0))/2 ;\nq29 = q29*3+1;\n\ntrig = is_beat*below(int(rand(100)),2*avg);\nran1 = ran1 + trig*(int(rand(100))/50-1)*1; //dir\n\ntrig = is_beat*below(int(rand(100)),10);\nran2 = ran2*bnot(trig) + trig*(int(rand(100))/50-1.1); //vdir\nmonitor = ran2;\ntrig = is_beat*below(int(rand(100)),5*avg);\nran3 = ran3*bnot(trig) + trig*(avg/32+.05); //speed\n\nspeed = speed + 1/fps*(max(min(ran3+(q29-1)/6-speed,.05),-.05));\n//speed = -.0;\nrota =  0;\n\nddir = ddir *dec_s + (1-dec_s)*(ran1*2-dir);\n//ddir = 61/fps; vdir = 0;\nddir_ = ddir_ *dec_s + ddir *(1-dec_s);\ndir = dir + ddir_/fps*abs(speed) ;\n//dir = 0;\n//dir = dir + sin(time/2)/fps*above(sin(time/2),0);\nq9 = dir;\n\nvdir1 = vdir1*dec_s + (1-dec_s)*(ran2)/fps*8;\nvdir = vdir*dec_s + (1-dec_s)*vdir1;\nvdir =  if (below(vdir,0), vdir*if(below(height,3),1-pow(height-3,2)/4,1),vdir);\nvdir =  if (above(vdir,0), vdir*if(above(height,4),1-pow(height-4,2)/4,1),vdir);\n\nheight = height + speed/fps * vdir*16;\nheight = min(max(height,1),6);\n\nq7 = vdir; //Blick vertikal; verschiebt nur uv1.y\nq8 = if (above(vdir,0),height,height-4*vdir); //Flughoehe; \n\n\n//***** Tilt\n//q1 = cos(ddir*20*speed);\n//q2 = sin(-ddir*20*speed);\n//q1 = 1; q2 = 0;\n//***** moving direction\n\nq3 = cos(dir);\nq4 = sin(dir);\n\n//***** x-y-Position\np1 = p1 + q3/fps*speed*cos(vdir);\np2 = p2 + q4/fps*speed*cos(vdir);\n\nq5 = -p2+time*sidestep;\nq6 = p1;\n\n//*******landscape\nq10 = .4*sin(time/77+(p1+p2)/47)-.1; // cloud density, -1 bis .5\nq11 = .8 + cos(p1/11)/3; //rock smooth/-brightness, 0.5 - 3; //use for daylight ?#\nq12 = 0.5 + .3 * sin(time/22+p1/37); //hormask;\nq13 = .1+.3*sin(p1/3); // glow; -.4 - max ca 0.4, nicht ersetzen durch lavmod2\nq14 =  (1+cos(p2/5))/3;  //lava structure harshness, 0 bis 1\nq30 = .3*(cos(time/75+p2/123)+1); //horizon brightness (moon effect)\nq31 = .2 + .1 * sin(time/94); //cloud size\nq32 = -.2-sin(time/22)/4; //Planet Y\n//****** daytime\nq15 = abs(sin(time/45+p1/87))-.75; //daytime\n\n// q10 = -.4;\n\n//******sunpos xy\nq16 =  0.2/height; //sky_gnd\n\nq17 = tan(dir/2);\nq18 = q16-q15;\n//*************** flash ****************\nq21 = min(hpeak,1) * int(rand(10))/10 * below(q15,-.4) * above(q10,.1);\n\n//side = below(speed,.3)*below(q29,2)*below(ddir_,.1)*(index2%3-1);\nrot = -ddir_*speed/2 + rota;\ndx = .5; dy = .25+q7 ;","pixel_eqs_eel":"","warp":"float xlat_mutabledx;\nfloat xlat_mutabledy;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutablezz;\n shader_body { \n  vec2 uv_1;\n  vec3 crisp_2;\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.w;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.z;\n  xlat_mutablezz = ((uv * texsize.xy) * 0.01);\n  vec2 tmpvar_5;\n  tmpvar_5.x = (cos((xlat_mutablezz.y * q1)) * sin(-(xlat_mutablezz.y)));\n  tmpvar_5.y = (sin(xlat_mutablezz.x) * cos((xlat_mutablezz.y * q2)));\n  uv_1 = (uv - ((tmpvar_5 * texsize.zw) * (8.0 + \n    (6.0 * q11)\n  )));\n  xlat_mutableuv2 = (((uv_1 / 2.0) * q27) / 4.0);\n  xlat_mutabledx = dot ((texture (sampler_main, (xlat_mutableuv2 + tmpvar_3)).xyz - texture (sampler_main, (xlat_mutableuv2 - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutabledy = dot ((texture (sampler_main, (xlat_mutableuv2 + tmpvar_4)).xyz - texture (sampler_main, (xlat_mutableuv2 - tmpvar_4)).xyz), vec3(0.32, 0.49, 0.29));\n  float tmpvar_6;\n  tmpvar_6 = (0.15 + (0.1 * q28));\n  vec2 tmpvar_7;\n  tmpvar_7 = (xlat_mutableuv2 + (time / 100.0));\n  xlat_mutabledx = (xlat_mutabledx + (tmpvar_6 * (texture (sampler_noise_hq, tmpvar_7).x - 0.5)));\n  xlat_mutabledy = (xlat_mutabledy + (tmpvar_6 * (texture (sampler_noise_hq, tmpvar_7).y - 0.5)));\n  vec2 tmpvar_8;\n  tmpvar_8.x = xlat_mutabledx;\n  tmpvar_8.y = xlat_mutabledy;\n  xlat_mutablezz = tmpvar_8;\n  crisp_2 = (texture (sampler_main, (uv_1 + (tmpvar_8 * 0.04))).xyz + texture (sampler_main, uv_1).xyz);\n  crisp_2 = (crisp_2 * 0.5);\n  crisp_2 = (crisp_2 + ((0.05 * \n    (0.9 + (0.1 * roam_cos))\n  .xyz) - (\n    sqrt(dot (tmpvar_8, tmpvar_8))\n   * 0.3)));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ((crisp_2 * 0.97) - 0.015);\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * treb_att))\n  ), pow (hue_shader.xzy, vec3(bass_att))));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"float3 color;\nfloat2 uv2, zz;\nfloat dx, dy;\nshader_body {\n\nfloat2 uv1 = (uv-.5)*aspect.xy;\n\nfloat2 hor = float2 (texsize.w,0);\nfloat2 ver = float2 (0,texsize.z);\n\n\nfloat2 k1 = float2((uv.x), (uv.y));\n\nfloat3 ret1 = GetBlur1(uv) ;\n\nzz = uv.xy * texsize.xy *(.01);\nfloat h1 = (cos(zz.y*q1) * sin(-zz.y));\nfloat h2 = (sin(zz.x) * cos(zz.y*q2));\nuv.xy -= float2(h1,h2)*texsize.zw * (8+6*q11);\n\nuv2 = uv/2*q27/4; //variieren\n\nfloat2 uv3 = uv2; //Krausen nur mit uv\n\ndx = lum(GetPixel(uv3+hor) - GetPixel(uv3-hor));\ndy = lum(GetPixel(uv3+ver) - GetPixel(uv3-ver));\n\n//dx = 0; dy = 0;\n\ndx *=1; dy *= 1;;\nfloat f1 = .15+.1*q28;\nfloat2 uv4 = uv2+time/100;\n\ndx += f1*(tex2D(sampler_noise_hq,uv4).x-.5); \ndy += f1*(tex2D(sampler_noise_hq,uv4).y-.5); \n\ncolor =  .9+.1*roam_cos;\n\nfloat2 dz = float2 (dx,dy);\n\nzz = dz;\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.04);\nfloat3 crisp2 = tex2D(sampler_main,uv);\ncrisp += crisp2;\ncrisp *= .5;\ncrisp +=.05*color - length(zz)*.3;\n\nret1 = crisp;\nret = ret1 * .97 -  .015 ;\n}","comp_hlsl":"// tribute to suksma!\n\nshader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)*treb_att),pow(hue_shader.xzy,bass_att));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}