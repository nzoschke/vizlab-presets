{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_mode":5,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":1.136,"wave_scale":1.951,"wave_smoothing":0.9,"wave_mystery":0.094,"modwavealphastart":1,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"rot":0.2599,"cx":0.32,"cy":0.29,"warp":0.01105,"wave_x":1,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"textured":1,"rad":0.59957,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_b":0,"border_a":0},"init_eqs_str":"a.vol=0;a.bob=0;a.border_1=0;a.ro=0;a.sp=0;a.red=0;a.spi=0;a.tm=0;a.bob=1.5;a.ro=0;a.red=rand(20);","frame_eqs_str":"a.vol=1+.2*div(a.bass_att+a.treb_att+a.mid_att,3);a.bob=a.bob*above(a.bob,.01)-.01+(1-above(a.bob,.01));a.bob=.4+.4*Math.sin(.8*a.time);a.bob*=a.vol;a.rad=a.bob;a.border_1=.4;a.sides=30;a.ro+=.02;a.ang=a.ro;a.rad=.6;a.sp=.025*a.red;a.spi=.5-a.sp;a.tm=.1*a.time;a.border_r=.5+a.sp*Math.sin(.6*a.tm)+a.spi*Math.cos(1.46*a.tm);a.border_g=.5+a.sp*Math.sin(1.294*a.tm)+a.spi*Math.cos(.87*a.tm);a.border_b=.5+a.sp*Math.sin(1.418*a.tm)+a.spi*Math.cos(.76*a.tm);","init_eqs_eel":"bob = 1.5;\nro = 0;\nred = rand(20);","frame_eqs_eel":"vol = 1 + 0.2*((bass_att+treb_att+mid_att)/3);\nbob = bob*above(bob,0.01) - 0.01 + 1*(1 - above(bob,0.01));\nbob = 0.4 + 0.4*sin(time*0.8);\nbob = bob*vol;\nrad = bob;\nborder_1 = 0.4;\nsides = 30;\nro = ro + 0.02;\nang = ro;\nrad = 0.6;\n\nsp = red*0.025;\nspi = 0.5 - sp;\ntm = time*0.1;\nborder_r = 0.5 + sp*sin(tm*0.6) + spi*cos(tm*1.46);\nborder_g = 0.5 + sp*sin(tm*1.294) + spi*cos(tm*0.87);\nborder_b = 0.5 + sp*sin(tm*1.418) + spi*cos(tm*0.76);"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.5*(.3*Math.sin(1.1*a.time)+.7*Math.sin(.5*a.time));a.x=.5+.225*Math.sin(a.time);a.y=.5+.3*Math.cos(a.time);a.rad*=a.mid_att;a.r=.5+.5*Math.sin(.5*a.frame);a.b=.5+.5*Math.sin(.5*a.frame+2.094);a.g=.5+.5*Math.sin(.5*a.frame+4.188);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\nx = 0.5 + 0.225*sin(time);\ny = 0.5 + 0.3*cos(time);\n\nrad = rad*mid_att;\nr = 0.5 + 0.5*sin(frame*0.5);\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.5*(.3*Math.sin(1.1*a.time)+.7*Math.sin(.5*a.time));a.x=.5+.225*Math.sin(a.time+2.09);a.y=.5+.3*Math.cos(a.time+2.09);a.rad*=a.bass_att;a.r=.5+.5*Math.sin(.5*a.frame);a.b=.5+.5*Math.sin(.5*a.frame+2.094);a.g=.5+.5*Math.sin(.5*a.frame+4.188);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\nx = 0.5 + 0.225*sin(time + 2.09);\ny = 0.5 + 0.3*cos(time + 2.09);\n\nrad = rad*bass_att;\nr = 0.5 + 0.5*sin(frame*0.5);\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.5*(.3*Math.sin(1.1*a.time)+.7*Math.sin(.5*a.time));a.x=.5+.225*Math.sin(a.time+4.19);a.y=.5+.3*Math.cos(a.time+4.19);a.rad*=a.treb_att;a.r=.5+.5*Math.sin(.5*a.frame);a.b=.5+.5*Math.sin(.5*a.frame+2.094);a.g=.5+.5*Math.sin(.5*a.frame+4.188);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\nx = 0.5 + 0.225*sin(time + 4.19);\ny = 0.5 + 0.3*cos(time + 4.19);\n\nrad = rad*treb_att;\nr = 0.5 + 0.5*sin(frame*0.5);\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\n"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tic=0;a.vt=0;a.q6=0;a.bt=0;a.q1=0;a.q5=0;a.rc=0;a.mid_avg=0;a.tt=0;a.tin=0;a.bass_avg=0;a.pi=0;a.vav=0;a.an=0;a.q4=0;a.rd=0;a.oy=0;a.mt=0;a.mod=0;a.ra=0;a.treb_avg=0;a.vol=0;a.num=0;a.re=0;a.q2=0;a.seg=0;a.q3=0;a.q7=0;a.anga=0;a.rb=0;a.radi=0;a.ox=0;","frame_eqs_str":"a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.vol=.333333*(a.bass_att+a.treb_att+a.mid_att);a.ra=.25*div(1,a.tic);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;a.vt+=a.tic*a.vav;a.q1=3*a.tt;a.q2=3*a.mt;\na.q3=3*a.bt;a.q4=a.vt;a.rb=.00001<Math.abs(a.rb)?a.rb:.2+.0006*rand(1001);a.rc=.00001<Math.abs(a.rc)?a.rc:.2+.0006*rand(1001);a.rd=.00001<Math.abs(a.rd)?a.rd:.2+.0006*rand(1001);a.re=.00001<Math.abs(a.re)?a.re:.2+.0006*rand(1001);a.rot=.26;a.cx=.3+.1*Math.sin(a.vt*a.re)+.1*Math.cos(a.vt*a.rc);a.cy=.5+.2*Math.sin(a.vt*a.rb)+.1*Math.cos(a.vt*a.rd);a.q5=.035*Math.min(1,.5*a.treb_avg);a.q6=.035*Math.min(1,.5*a.mid_avg);a.q7=.035*Math.min(1,.5*a.bass_avg);","pixel_eqs_str":"a.num=8;a.pi=3.141592654;a.radi=.75*(a.y-.5);a.radi=a.y-.5;a.radi=pow(a.radi*a.radi+(a.x-.5)*(a.x-.5),.5);a.an=a.ang+a.pi+a.time;a.an-=2*a.pi*Math.floor(div(a.an,2*a.pi));a.mod=.1;a.seg=a.ang+a.pi;a.seg=div(a.seg,2*a.pi)*a.num;a.seg=Math.floor(a.seg);a.seg-=equal(a.seg,a.num);a.anga=a.ang+a.pi-div(2*a.pi,a.num)*a.seg;a.anga=.00001<Math.abs(equal(mod(a.seg,2),0))?div(2*a.pi,a.num)-a.anga:a.anga;a.anga+=div(a.pi,4);a.ox=.5-a.radi*Math.sin(a.anga);a.oy=.5+a.radi*Math.cos(a.anga);\na.dx=equal(a.seg,3)*(a.x-a.ox);a.dy=equal(a.seg,3)*(a.y-a.oy);a.dx=above(a.seg,0)*(a.x-a.ox);a.dy=above(a.seg,0)*(a.y-a.oy);","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n//zoom = 1;\n\ntic = min(time-tin,.1);\ntin = time;\n\nvol = (bass_att + treb_att + mid_att)*.333333;\n\nra = 1/tic*.25;\n\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\nvt = vt + tic*vav;\n\nq1 = tt*3;// wave morph speeds\nq2 = mt*3;\nq3 = bt*3;\n\nq4 = vt; // wave colour cycle\n\nrb = if(rb,rb,.2 + rand(1001)*.001*.6);\nrc = if(rc,rc,.2 + rand(1001)*.001*.6);\nrd = if(rd,rd,.2 + rand(1001)*.001*.6);\nre = if(re,re,.2 + rand(1001)*.001*.6);\n\nrot = .26;\ncx = .3 + .1*sin(vt*re) + .1*cos(vt*rc);\ncy = .5 + .2*sin(vt*rb) + .1*cos(vt*rd);\n\n\nq5 = min(1,.5*treb_avg)*.035;\nq6 = min(1,.5*mid_avg)*.035;\nq7 = min(1,.5*bass_avg)*.035;","pixel_eqs_eel":"num = 8;\npi = 3.141592654;\nradi = (y-.5)*.75;\nradi = (y-.5);\nradi = pow(radi*radi + (x-.5)*(x-.5),.5);\n\nan = ang + pi + time;\nan = an - pi*2*int(an/(pi*2));\n\nmod = .1;\n\nseg = ang + pi;\nseg = seg/(pi*2)*num;\nseg = int(seg);\nseg = seg - equal(seg,num);\n\nanga = (ang + pi) - (pi*2/num)*seg;\nanga = if(equal(seg%2,0),(pi*2/num) - anga,anga);\n//anga = anga + pi/6; // num = 6\nanga = anga + pi/4; // num = 8\n//anga = anga + .85; // num = 10\n\n\nox = .5 - radi*sin(anga);\noy = .5 + radi*cos(anga);\n\n//rot = if(equal(seg,0),rot,0);\n\ndx = equal(seg,3)*(x-ox);\ndy = equal(seg,3)*(y-oy);\n\ndx = above(seg,0)*(x-ox);\ndy = above(seg,0)*(y-oy);\n\n//dx = equal(seg,1)*(x - .5)*2;","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (normalize((\n    (texture (sampler_main, (((uv - 0.5) * 0.99) + 0.5)).xyz * 0.1)\n   + \n    (texture (sampler_main, uv).xyz * 0.9)\n  )) * 1.04);\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * treb_att))\n  ), pow (hue_shader.xzy, vec3(bass_att))));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    \n\n     float3 output1 = tex2D( sampler_main, (uv-0.5)*0.99 + 0.5).xyz;\n     float3 output2 = tex2D( sampler_main, uv).xyz;\n   \n    ret = normalize(output1*0.1 + output2*0.9);\n    // darken (decay) over time\n    ret *= 1.04; //or try: ret -= 0.004;\n}","comp_hlsl":"// tribute to suksma!\n\nshader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)*treb_att),pow(hue_shader.xzy,bass_att));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}