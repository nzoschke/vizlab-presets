{"version":2,"baseVals":{"rating":5,"decay":0.9,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":6,"wave_dots":1,"wrap":0,"brighten":1,"wave_a":0.003,"wave_scale":0.262,"wave_smoothing":0.9,"wave_mystery":0.173,"zoom":0.96,"rot":-18.84024,"warp":0.00052,"wave_x":0.448,"wave_y":0.122,"ob_r":1,"ob_g":1,"ob_b":0.9,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.6,"mv_x":1.28,"mv_y":1,"mv_dx":0.087,"mv_dy":0.343,"mv_l":1.663,"b1n":0.05},"shapes":[{"baseVals":{"enabled":1,"sides":24,"textured":1,"rad":0.54767,"ang":6.2831,"tex_zoom":0.99999,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q2=0;","frame_eqs_str":"a.border_r+=1.5*Math.sin(1.13*a.q2);a.border_b+=.5*Math.sin(1.23*a.q2);a.border_g+=.5*Math.sin(1.33*a.q2);a.x=.5+.4*Math.sin(.2*a.time);a.y=.5-.4*Math.cos(.2*a.time);","init_eqs_eel":"","frame_eqs_eel":"border_r = border_r + 1.5*sin(q2*1.13);\nborder_b = border_b + 0.5*sin(q2*1.23);\nborder_g = border_g + 0.5*sin(q2*1.33);\n//ang = 1+sin(q1);\nx = 0.5 + (.4 * sin(time * 0.2));\ny = 0.5 - (.4 * cos(time * 0.2));"},{"baseVals":{"enabled":1,"sides":40,"textured":1,"rad":0.7243,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q9=0;","frame_eqs_str":"a.q9=4.5;a.x=.5-.1*Math.sin(a.q9);a.y=.5+.1*Math.cos(a.q9);","init_eqs_eel":"","frame_eqs_eel":"q9 = 4.5;\nx = 0.5 - (.1 * sin(q9));\ny = 0.5 + (.1 * cos(q9));"},{"baseVals":{"enabled":1,"rad":0.24979,"r2":1,"g2":0,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.a=a.bass;a.r=a.mid;a.b=a.treb;a.r2=1-a.r;a.b2=1-a.b;a.rad=.5*a.bass;","init_eqs_eel":"","frame_eqs_eel":"a = bass;\nr = mid;\nb = treb;\nr2 = 1.0 - r;\nb2 = 1.0 - b;\nrad = (bass * 0.5);"},{"baseVals":{"enabled":1,"sides":31,"textured":1,"rad":0.97632,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.15;a.y=.49+.02*a.bass;","init_eqs_eel":"","frame_eqs_eel":"//x = 0.5 + (.4 * sin(time * 0.2));\nx = 0.15;\n//y = 0.5 + (.4 * cos(time * 0.2));\ny = 0.49+ (bass * 0.02);"}],"waves":[{"baseVals":{"samples":192,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"t3 = acos(-1)*128;\nt4 = 4/3;","frame_eqs_str":"spin = spin + .01;\nt2 = spin;\nred = (-1 * cos(time))  + abs(-1 * cos(time)) + 0.2 * (cos(sin(time))+(abs(cos(sin(time)))+cos(sin(time))));\ngreen = abs(sin(time)) ;\nblue = cos(time)  + abs(cos(time));\nr = if(above(red,1),1,if(above(red,0), abs(red),0));\ng = if(above(green,1),1,if(above(green,0), abs(green),0));\nb = if(above(blue,1),1,if(above(blue,0), abs(blue),0));","point_eqs_str":"rad = sample*t3+t2;\nx = .5 + cos(rad/64)*0.65 + sin(rad)*0.35;\ny = .5 + sin(rad/64)*t4*0.65 + cos(rad)*t4*0.35;","init_eqs_eel":"t3 = acos(-1)*128;\nt4 = 4/3;","frame_eqs_eel":"spin = spin + .01;\nt2 = spin;\nred = (-1 * cos(time))  + abs(-1 * cos(time)) + 0.2 * (cos(sin(time))+(abs(cos(sin(time)))+cos(sin(time))));\ngreen = abs(sin(time)) ;\nblue = cos(time)  + abs(cos(time));\nr = if(above(red,1),1,if(above(red,0), abs(red),0));\ng = if(above(green,1),1,if(above(green,0), abs(green),0));\nb = if(above(blue,1),1,if(above(blue,0), abs(blue),0));","point_eqs_eel":"rad = sample*t3+t2;\nx = .5 + cos(rad/64)*0.65 + sin(rad)*0.35;\ny = .5 + sin(rad/64)*t4*0.65 + cos(rad)*t4*0.35;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.basstime=0;a.stickybit=0;a.volavg2=0;a.q1=0;a.q9=0;a.sample1=0;a.difftime=0;a.diff=0;a.edge=0;a.volavg=0;a.bit2=0;a.vol=0;a.q2=0;a.q3=0;a.basssum=0;a.sample2=0;a.state=0;","frame_eqs_str":"a.basstime+=.06*a.bass;a.q1=a.basstime;a.q9=.000005*a.basstime;a.basstime=.00001<Math.abs(below(a.basstime,1E3))?1E3:a.basstime;a.vol=pow(a.bass+a.mid+a.treb,2);a.basssum=a.vol;a.stickybit=mod(a.time,2);a.volavg+=a.vol*equal(a.stickybit,1);a.sample1+=equal(a.stickybit,1);a.volavg2+=a.vol*equal(a.stickybit,0);a.sample2+=equal(a.stickybit,0);a.edge=bnot(equal(a.bit2,a.stickybit));a.volavg-=a.volavg*a.edge*a.stickybit;a.volavg2-=a.volavg2*a.edge*equal(a.stickybit,0);a.sample1-=\na.sample1*a.edge*a.stickybit;a.sample2-=a.sample2*a.edge*equal(a.stickybit,0);a.diff=.00001<Math.abs(equal(a.stickybit,1))?div(a.basssum,div(a.volavg2,a.sample2)):0;a.diff=.00001<Math.abs(equal(a.stickybit,0))?div(a.basssum,div(a.volavg,a.sample1)):a.diff;a.q3=a.diff;a.bit2=mod(a.time,2);a.difftime+=.03*a.diff;a.q2=a.difftime;a.difftime=.00001<Math.abs(above(a.difftime,2E3))?0:a.difftime;a.monitor=a.q1;a.mv_a=a.q3-2;a.ob_a=.1*above(a.q3,4);a.mv_g=.4-.3*above(a.q3,3.2);","pixel_eqs_str":"a.zoom=.98;a.rot=0;","init_eqs_eel":"state = 0;","frame_eqs_eel":"basstime = basstime + bass*0.06;\nq1 = basstime;\n\nq9 = basstime * 0.000005;\n\nbasstime = if(below(basstime,1000),1000,basstime);\n\nvol = pow(bass+mid+treb,2);\nbasssum = vol;\n\nstickybit = time%2;\n\n//avg vol\n//buffer 1\nvolAvg = volAvg + vol*equal(stickybit,1);\n//number of samples 1 or framerate\nsample1 = sample1 + equal(stickybit,1);\n//buffer 2\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\n//number of samples 2\nsample2 = sample2 + equal(stickybit,0);\n\n//transision\nedge = bnot(equal(bit2,stickybit));\n\nvolAvg = volAvg - volAvg*edge*stickybit;\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\n\nsample1 = sample1  - sample1*edge*stickybit;\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\n\n//test vol against avg buffer lvl\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\n\nq3 = diff;\n\nbit2 = time%2;\n\ndifftime = difftime + diff*0.03;\nq2 = difftime;\n\n//fix a strange error\ndifftime = if(above(difftime,2000),0, difftime);\n\n\n\nmonitor = q1;\n\nmv_a = q3 - 2;\n\nob_a = above(q3,4)*0.1;\nmv_g = 0.4 - above(q3,3.2)*0.3;\n//mv_b = above(q3,5)*0.1 + 0.1;","pixel_eqs_eel":"zoom = 0.98;\nrot = 0;","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  , vec3(0.32, 0.49, 0.29))));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 8.0)\n   + \n    (rand_frame * 6.0)\n  .xy)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.1 * (vec3((0.1 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_3.xyz;\n }","comp":"","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .01*lum(GetBlur1(uv))*float2 (0,1);\n\n\nuv6 = .4*sin(uv*8+rand_frame*6);\nmus = .1/(length(uv6));\nmus *= (1+roam_cos)/2;\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .1*mus;\n//float2 uv2 = (uv_orig-.5)-float2(.5,.5+0.1*q25);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":""}