{"version":2,"baseVals":{"rating":5,"gammaadj":2.75,"decay":1,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":3,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":4.1,"wave_scale":0.972,"wave_smoothing":0.9,"wave_mystery":0.094,"modwavealphastart":1,"modwavealphaend":1.3,"zoom":0.9999,"rot":0.1,"wave_x":1,"ob_size":0.03,"ob_a":1,"ib_size":0.005,"ib_r":0.4,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"textured":1,"rad":0.59957,"tex_zoom":1.3345,"g":1,"b":1,"r2":1,"b2":1,"border_b":0,"border_a":0},"init_eqs_str":"a.vol=0;a.bob=0;a.border_1=0;a.ro=0;a.sp=0;a.red=0;a.spi=0;a.tm=0;a.bob=1.5;a.ro=0;a.red=rand(20);","frame_eqs_str":"a.vol=1+.2*div(a.bass_att+a.treb_att+a.mid_att,3);a.bob=a.bob*above(a.bob,.01)-.01+(1-above(a.bob,.01));a.bob=.4+.4*Math.sin(.8*a.time);a.bob*=a.vol;a.rad=a.bob;a.border_1=.4;a.sides=30;a.ro+=.02;a.ang=a.ro;a.rad=.6;a.sp=.025*a.red;a.spi=.5-a.sp;a.tm=.1*a.time;a.border_r=.5+a.sp*Math.sin(.6*a.tm)+a.spi*Math.cos(1.46*a.tm);a.border_g=.5+a.sp*Math.sin(1.294*a.tm)+a.spi*Math.cos(.87*a.tm);a.border_b=.5+a.sp*Math.sin(1.418*a.tm)+a.spi*Math.cos(.76*a.tm);","init_eqs_eel":"bob = 1.5;\nro = 0;\nred = rand(20);","frame_eqs_eel":"vol = 1 + 0.2*((bass_att+treb_att+mid_att)/3);\nbob = bob*above(bob,0.01) - 0.01 + 1*(1 - above(bob,0.01));\nbob = 0.4 + 0.4*sin(time*0.8);\nbob = bob*vol;\nrad = bob;\nborder_1 = 0.4;\nsides = 30;\nro = ro + 0.02;\nang = ro;\nrad = 0.6;\n\nsp = red*0.025;\nspi = 0.5 - sp;\ntm = time*0.1;\nborder_r = 0.5 + sp*sin(tm*0.6) + spi*cos(tm*1.46);\nborder_g = 0.5 + sp*sin(tm*1.294) + spi*cos(tm*0.87);\nborder_b = 0.5 + sp*sin(tm*1.418) + spi*cos(tm*0.76);"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.5*(.3*Math.sin(1.1*a.time)+.7*Math.sin(.5*a.time));a.x=.5+.225*Math.sin(a.time);a.y=.5+.3*Math.cos(a.time);a.rad*=a.mid_att;a.r=.5+.5*Math.sin(.5*a.frame);a.b=.5+.5*Math.sin(.5*a.frame+2.094);a.g=.5+.5*Math.sin(.5*a.frame+4.188);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\nx = 0.5 + 0.225*sin(time);\ny = 0.5 + 0.3*cos(time);\n\nrad = rad*mid_att;\nr = 0.5 + 0.5*sin(frame*0.5);\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.5*(.3*Math.sin(1.1*a.time)+.7*Math.sin(.5*a.time));a.x=.5+.225*Math.sin(a.time+2.09);a.y=.5+.3*Math.cos(a.time+2.09);a.rad*=a.bass_att;a.r=.5+.5*Math.sin(.5*a.frame);a.b=.5+.5*Math.sin(.5*a.frame+2.094);a.g=.5+.5*Math.sin(.5*a.frame+4.188);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\nx = 0.5 + 0.225*sin(time + 2.09);\ny = 0.5 + 0.3*cos(time + 2.09);\n\nrad = rad*bass_att;\nr = 0.5 + 0.5*sin(frame*0.5);\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.5*(.3*Math.sin(1.1*a.time)+.7*Math.sin(.5*a.time));a.x=.5+.225*Math.sin(a.time+4.19);a.y=.5+.3*Math.cos(a.time+4.19);a.rad*=a.treb_att;a.r=.5+.5*Math.sin(.5*a.frame);a.b=.5+.5*Math.sin(.5*a.frame+2.094);a.g=.5+.5*Math.sin(.5*a.frame+4.188);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\nx = 0.5 + 0.225*sin(time + 4.19);\ny = 0.5 + 0.3*cos(time + 4.19);\n\nrad = rad*treb_att;\nr = 0.5 + 0.5*sin(frame*0.5);\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\n"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xpos=0;a.yamptarg=0;a.ydir=0;a.q6=0;a.q1=0;a.newrad=0;a.q5=0;a.bass_thresh=0;a.xamptarg=0;a.xamp=0;a.xspeed=0;a.q4=0;a.dx_residual=0;a.ypos=0;a.newx=0;a.vol=0;a.newzoom=0;a.q2=0;a.yamp=0;a.q3=0;a.xdir=0;a.newy=0;a.mtime=0;a.q8=0;a.yspeed=0;a.dy_residual=0;","frame_eqs_str":"a.warp=0;a.wave_r+=.45*(.5*Math.sin(.701*a.time)+.3*Math.cos(.438*a.time));a.wave_b-=.4*(.5*Math.sin(4.782*a.time)+.5*Math.cos(.722*a.time));a.wave_g+=.4*Math.sin(1.931*a.time);a.wave_r=.2125*a.wave_r+.7154*a.wave_g+.0721*a.wave_b;a.wave_g=a.wave_r;a.wave_b=a.wave_r;a.vol=.167*(a.bass+a.mid);a.xamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.5*a.vol*a.bass_att,.5):a.xamptarg;a.xamp+=.5*(a.xamptarg-a.xamp);a.xdir=.00001<Math.abs(above(Math.abs(a.xpos),a.xamp))?-sign(a.xpos):\n.00001<Math.abs(below(Math.abs(a.xspeed),.1))?2*above(a.xpos,0)-1:a.xdir;a.xspeed=a.xspeed+a.xdir*a.xamp-a.xpos-.055*a.xspeed*below(Math.abs(a.xpos),a.xamp);a.xpos+=.001*a.xspeed;a.wave_x=1.25*a.xpos+.5;a.yamptarg=.00001<Math.abs(equal(mod(a.frame,15),0))?Math.min(.3*a.vol*a.treb_att,.5):a.yamptarg;a.yamp+=.5*(a.yamptarg-a.yamp);a.ydir=.00001<Math.abs(above(Math.abs(a.ypos),a.yamp))?-sign(a.ypos):.00001<Math.abs(below(Math.abs(a.yspeed),.1))?2*above(a.ypos,0)-1:a.ydir;a.yspeed=a.yspeed+a.ydir*a.yamp-\na.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.ypos+=.001*a.yspeed;a.wave_y=1.25*a.ypos+.5;a.dx+=a.dx_residual;a.dy+=a.dy_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.dx_residual=.003*equal(a.bass_thresh,2)*Math.sin(7*a.time)+(1-equal(a.bass_thresh,2))*a.dx_residual;a.dy_residual=.001*equal(a.bass_thresh,2)*Math.sin(9*a.time)+(1-equal(a.bass_thresh,2))*a.dy_residual;a.rot=.1;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=\na.vol;a.mtime+=.01*a.vol;a.q8=a.mtime;a.q1=Math.sin(a.mtime)*Math.sin(3*a.mtime)*.4+.5;a.q2=Math.cos(1.3*a.mtime)*Math.sin(5.4*a.mtime)*.4+.5;a.ib_r=Math.tan(a.time);a.ib_r=Math.min(1,Math.max(a.ib_r,0));a.ib_g=Math.tan(a.time+2.1);a.ib_g=Math.min(1,Math.max(a.ib_g,0));a.ib_b=Math.tan(a.time+4.2);a.ib_b=Math.min(1,Math.max(a.ib_b,0));a.q3=10+8*(.6*Math.sin(.223*a.time)+.4*Math.sin(.153*a.time));a.q4=div(1,a.q3);a.q5=.5*sign(a.xpos);a.q6=.5*sign(a.ypos);a.monitor=a.q4;","pixel_eqs_str":"a.cx=(bitand(0,a.x*a.q3-a.q5)+a.q5)*a.q4;a.cy=(bitand(0,a.y*a.q3-a.q6)+a.q6)*a.q4;a.newx=a.q1-a.x;a.newy=a.q2-a.y;a.newrad=2*sqrt(a.newx*a.newx+.5625*a.newy*a.newy);a.newzoom=pow(1.05+.03*a.newrad,pow(.01+Math.sin(a.newrad*a.newrad),2*a.newrad-1));a.dx=a.newx*a.newzoom-a.newx;a.dy=a.newy*a.newzoom-a.newy;a.dx*=.1;a.dy*=.1;a.rot=2*a.newrad*(.5*(.5-a.rad)+.1);a.rot=a.rot*Math.sin(a.time)*.2;a.sx=-1;","init_eqs_eel":"","frame_eqs_eel":"warp=0;\nwave_r = wave_r + 0.45*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));\nwave_b = wave_b - 0.4*(0.5*sin(time*4.782)+0.5*cos(time*0.722));\nwave_g = wave_g + 0.4*sin(time*1.931);\nwave_r = 0.2125*wave_r + 0.7154*wave_g + 0.0721*wave_b;\nwave_g = wave_r;\nwave_b = wave_r;\nvol = 0.167*(bass+mid);\nxamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);\nxamp = xamp + 0.5*(xamptarg-xamp);\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\nxpos = xpos + 0.001*xspeed;\nwave_x = 1.25*xpos + 0.5;\nyamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);\nyamp = yamp + 0.5*(yamptarg-yamp);\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\nypos = ypos + 0.001*yspeed;\nwave_y = 1.25*ypos + 0.5;\ndx = dx + dx_residual;\ndy = dy + dy_residual;\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\ndx_residual = equal(bass_thresh,2)*0.003*sin(time*7) + (1-equal(bass_thresh,2))*dx_residual;\ndy_residual = equal(bass_thresh,2)*0.001*sin(time*9) + (1-equal(bass_thresh,2))*dy_residual;\nrot = 0.1;\n\nvol=(bass+mid+treb)*0.25;\nvol=vol*vol;\nmtime=mtime + vol*0.01;\nq8=mtime;\n\n\nq1=sin(mtime) * sin(mtime*3) * 0.4 + 0.5;\nq2=cos(mtime*1.3) * sin(mtime*5.4) * 0.4 + 0.5;\n\n\n\nib_r = tan(time);\nib_r = min(1, max(ib_r,0));\n\nib_g = tan(time+2.1);\nib_g = min(1, max(ib_g,0));\n\nib_b = tan(time+4.2);\nib_b = min(1, max(ib_b,0));\n\nq3 = 10+8*(0.6*sin(0.223*time) + 0.4*sin(0.153*time));\nq4 = 1/q3;\nq5 = 0.5*sign(xpos);\nq6 = 0.5*sign(ypos);\n\nmonitor=q4","pixel_eqs_eel":"cx = ((0&(x*q3-q5))+q5)*q4;\ncy = ((0&(y*q3-q6))+q6)*q4;\nnewx = q1-x;\nnewy = q2-y;\nnewrad = sqrt((newx)*(newx)+0.5625*(newy)*(newy))*2;\nnewzoom = pow(1.05 + 0.03*newrad, pow(0.01+sin(newrad*newrad), newrad*2-1));\ndx = (newx)*newzoom - newx;\ndy = (newy)*newzoom - newy;\ndx =dx*0.1;\ndy=dy*0.1;\nrot = 2*newrad*(0.5*(0.5-rad)+0.1);\nrot=rot*sin(time)*0.2;\nsx=-1;","warp":" shader_body { \n  vec2 v_1;\n  vec3 ret_2;\n  v_1 = (normalize((uv - 0.5)) * texsize.zw);\n  ret_2 = (0.2 * ((\n    ((texture (sampler_main, uv).xyz + texture (sampler_main, (uv - (v_1 * 2.5))).xyz) + texture (sampler_main, (uv - (v_1 * 5.5))).xyz)\n   + texture (sampler_main, \n    (uv - (v_1 * 9.0))\n  ).xyz) + texture (sampler_main, (uv - \n    (v_1 * 13.0)\n  )).xyz));\n  ret_2 = ((ret_2 - 0.01) * 0.975);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }","comp":"vec3 xlat_mutableblur;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  vec2 uv2_2;\n  vec3 ret_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = (0.02 * q27);\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv_1 + 0.4)\n   + tmpvar_4)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, (\n    (uv_1 + 0.4)\n   + tmpvar_4)).xyz + (xlat_mutableblur * 2.0)));\n  uv2_2.x = ((uv_1.x * 0.3096228) - (uv_1.y * 0.9508595));\n  uv2_2.y = ((uv_1.x * 0.9508595) + (uv_1.y * 0.3096228));\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv2_2 + 0.4)\n   + tmpvar_4)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    (uv2_2 + 0.4)\n   + tmpvar_4)).xyz + (xlat_mutableblur * 2.0)));\n  uv2_2.x = ((uv_1.x * -0.8082675) - (uv_1.y * 0.5888155));\n  uv2_2.y = ((uv_1.x * 0.5888155) + (uv_1.y * -0.8082675));\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv2_2 + 0.4)\n   + tmpvar_4)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    (uv2_2 + 0.4)\n   + tmpvar_4)).xyz + (xlat_mutableblur * 2.0)));\n  uv2_2.x = ((uv_1.x * -0.8101388) - (uv_1.y * -0.5862381));\n  uv2_2.y = ((uv_1.x * -0.5862381) + (uv_1.y * -0.8101388));\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv2_2 + 0.4)\n   + tmpvar_4)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    (uv2_2 + 0.4)\n   + tmpvar_4)).xyz + (xlat_mutableblur * 2.0)));\n  uv2_2.x = ((uv_1.x * 0.3065926) - (uv_1.y * -0.9518408));\n  uv2_2.y = ((uv_1.x * -0.9518408) + (uv_1.y * 0.3065926));\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv2_2 + 0.4)\n   + tmpvar_4)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    (uv2_2 + 0.4)\n   + tmpvar_4)).xyz + (xlat_mutableblur * 2.0)));\n  uv2_2.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  uv2_2.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  xlat_mutableblur = ((texture (sampler_blur1, (\n    (uv2_2 + 0.4)\n   + tmpvar_4)).xyz * scale1) + bias1);\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    (uv2_2 + 0.4)\n   + tmpvar_4)).xyz + (xlat_mutableblur * 2.0)));\n  ret_3 = ((xlat_mutableret1 - 0.0125) * 0.7);\n  vec3 tmpvar_5;\n  tmpvar_5 = (1.0 - ((ret_3 * \n    (1.0 - ret_3)\n  ) * 4.0));\n  vec3 tmpvar_6;\n  tmpvar_6.xy = (tmpvar_5.xy * vec2(0.5, 0.5));\n  tmpvar_6.z = tmpvar_5.z;\n  ret_3 = (tmpvar_6 * 0.5);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_3;\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame 3 times, creating radial blur\n    float2 v = normalize(uv - 0.5);\n    //v = v.yx * float2(1,-1);\n    v *= texsize.zw;\n    ret = 0.2*(   tex2D( sampler_main, uv ).xyz\n                   +  tex2D(sampler_main, uv - v*2.5 ).xyz\n                   +  tex2D(sampler_main, uv - v*5.5 ).xyz\n                   +  tex2D(sampler_main, uv - v*9  ).xyz\n                   +  tex2D(sampler_main, uv - v*13 ).xyz\n    );\n    \n    // darken over time\n    ret = (ret-0.01)*0.975; //or try: ret -= 0.004;\n}","comp_hlsl":"float3 ret1, neu, blur;\n\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nret1 = 0;\nint anz = 5;\nint n = 0;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    neu = GetPixel (uv2 + 0.4 + .02*q27 );\n    blur= GetBlur1 (uv2 + 0.4 + .02*q27 );\n    ret1 = max(ret1, neu+blur*2);\nn++;\n}\n\n\n// I think this bit's from ORB\nret = (ret1-0.0125)*0.7;\n    float3 retish = 1 - ret*(1-ret)*4; //solarize\n    ret = float3(retish[0]*0.5,retish[1]*0.5,retish[2]);\n    ret *= 0.5;\n\n\n}"}