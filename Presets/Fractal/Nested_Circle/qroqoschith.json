{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.981,"echo_zoom":1.008,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"fshader":1,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_b":1,"ob_a":0.3,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":50,"textured":1,"y":1.8,"rad":2.34265,"tex_zoom":0.43865,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":50,"rad":0.25735,"a":0.2,"r2":1,"g2":0,"border_a":0},"init_eqs_str":"a.tic=0;a.tin=0;a.ti=0;a.cull=0;","frame_eqs_str":"a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.ti=.8*a.time+below(a.cull,1)*(1-a.cull)*a.tic*100;a.b=.5+.5*Math.sin(1.123*a.ti);a.r=.5+.5*Math.sin(1.456*a.ti);a.g=.5+.5*Math.sin(1.789*a.ti);a.cull=a.r+a.g+a.b;a.r2=a.r;a.g2=a.g;a.b2=a.b;","init_eqs_eel":"","frame_eqs_eel":"tic = min(time-tin,.1);\ntin = time;\n\nti = time*.8 + below(cull,1)*(1-cull)*tic*100;\n\n\n\nb = .5 + .5*sin(ti*1.123);\nr = .5 + .5*sin(ti*1.456);\ng = .5 + .5*sin(ti*1.789);\n\ncull = r + g + b;\n\nr2 = r;\ng2 = g;\nb2 = b;"},{"baseVals":{"enabled":1,"sides":50,"textured":1,"rad":0.20463,"tex_ang":3.14159,"tex_zoom":0.88026,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.r2=a.r;a.g2=a.g;a.b2=a.b;","init_eqs_eel":"","frame_eqs_eel":"//r = .5 + .5*sin(time*1.123);\n//g = .5 + .5*sin(time*1.456);\n//b = .5 + .5*sin(time*1.789);\n\n//tex_ang = int(rand(1001))*.001*6.2832;\n//tex_ang = int(rand(9))*.7854;\n\nr2 = r;\ng2 = g;\nb2 = b;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"smoothing":0,"r":0,"g":0,"b":0},"init_eqs_str":"a.sp=0;a.q1=0;a.sw=0;a.sz=0;a.val=0;","frame_eqs_str":"","point_eqs_str":"a.sp=4.1846112*(a.q1+a.sample);a.sw=1-a.sw;a.sz=.1+.01*a.sw;a.x=.5+a.sz*Math.sin(a.sp)*.75;a.y=.5+a.sz*Math.cos(a.sp);a.val=Math.min(1,4*a.value1);a.a=(1-a.val)*below(a.sample,.75);a.a*=a.sw;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = (q1 + sample)*6.2832*.666;\n\nsw = 1-sw;\nsz = .1 + .01*sw;\n\nx = .5 + sz*sin(sp)*.75;\ny = .5 + sz*cos(sp);\n\nval = min(1,value1*4);\na = (1-val)*below(sample,.75);\na = a*sw;"},{"baseVals":{"enabled":1,"spectrum":1,"smoothing":0},"init_eqs_str":"a.sp=0;a.q1=0;a.sw=0;a.sz=0;a.val=0;","frame_eqs_str":"","point_eqs_str":"a.sp=4.1846112*(a.q1+a.sample+.75);a.sw=1-a.sw;a.sz=.1+.01*a.sw;a.x=.5+a.sz*Math.sin(a.sp)*.75;a.y=.5+a.sz*Math.cos(a.sp);a.val=Math.min(1,4*a.value2);a.a=(1-a.val)*below(a.sample,.75);a.a*=a.sw;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = (q1 + sample + .75)*6.2832*.666;\n\nsw = 1-sw;\nsz = .1 + .01*sw;\n\nx = .5 + sz*sin(sp)*.75;\ny = .5 + sz*cos(sp);\n\nval = min(1,value2*4);\na = (1-val)*below(sample,.75);\na = a*sw;"},{"baseVals":{"spectrum":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"val = min(1,value1*4);\nsp = (q1 + sample)*6.2832*.666;\nswi = above(val,.8);\n\nsw = 1-sw;\nsz = .0 + .1*sw*swi;\n\nx = .5 + sz*sin(sp)*.75;\ny = .5 + sz*cos(sp);\n\na = (1-val)*below(sample,.75);\na = a*sw*swi;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"val = min(1,value1*4);\nsp = (q1 + sample)*6.2832*.666;\nswi = above(val,.8);\n\nsw = 1-sw;\nsz = .0 + .1*sw*swi;\n\nx = .5 + sz*sin(sp)*.75;\ny = .5 + sz*cos(sp);\n\na = (1-val)*below(sample,.75);\na = a*sw*swi;"},{"baseVals":{"spectrum":1,"thick":1,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"val = min(1,value2*4);\nsp = (q1 + sample + .75)*6.2832*.666;\nswi = above(val,.8);\n\nsw = 1-sw;\nsz = .01 + .09*sw*swi;\n\nx = .5 + sz*sin(sp)*.75;\ny = .5 + sz*cos(sp);\n\na = (1-val)*below(sample,.75);\na = a*sw*swi;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"val = min(1,value2*4);\nsp = (q1 + sample + .75)*6.2832*.666;\nswi = above(val,.8);\n\nsw = 1-sw;\nsz = .01 + .09*sw*swi;\n\nx = .5 + sz*sin(sp)*.75;\ny = .5 + sz*cos(sp);\n\na = (1-val)*below(sample,.75);\na = a*sw*swi;"}],"init_eqs_str":"a.trig2=0;a.mq29=0;a.cthr=0;a.mq1=0;a.p3z=0;a.index2=0;a.q25=0;a.vtrig=0;a.index=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.hy=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.q1=0;a.mq31=0;a.dec_med=0;a.q5=0;a.p2z=0;a.mq21=0;a.mq24=0;a.trel=0;a.q9=0;a.chng=0;a.mq28=0;a.rott=0;a.mq23=0;a.p1z=0;a.is_beat=0;a.q31=0;a.q23=0;a.q22slow=0;a.k1=0;a.q24=0;a.vx=0;a.dec_slow=0;a.q11=0;a.z0=0;a.q10=0;a.atime=0;a.vy=0;a.q4=0;a.q16=0;a.q26=0;a.p2=0;a.avg=0;a.mq27=0;a.mq25=0;a.q19=0;a.mq22=0;a.beat=0;a.q17=0;\na.vol=0;a.p1=0;a.peak=0;a.mq26=0;a.trig1=0;a.q2=0;a.q27=0;a.q14=0;a.trig3=0;a.speed=0;a.q3=0;a.t0=0;a.hx=0;a.q28=0;a.q20=0;a.prox=1;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.dec_med=\npow(.8,div(30,a.fps));a.dec_slow=pow(.8,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,16);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.q22=a.peak;a.q22slow=a.q22slow*a.dec_slow+a.q22*(1-a.dec_slow);a.q23=a.q22slow;a.q24=a.is_beat;a.q26=a.bass_att+a.mid_att+\na.treb_att;a.vol=a.vol*a.dec_med+(1-a.dec_med)*a.q26;a.q27=a.index+1;a.q28=a.index2;a.k1=a.is_beat*equal(mod(a.index,2),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott+=div(16*a.q22*(1-a.dec_med),a.fps)*below(a.q27,6);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.vtrig=a.is_beat*bnot(mod(a.index,2));a.vx=a.vx*bnot(a.vtrig)+a.vtrig*(div(Math.floor(rand(100)),100)-.5);a.vy=a.vy*bnot(a.vtrig)+a.vtrig*(div(Math.floor(rand(100)),100)-.5);a.vx*=below(mod(a.index,\n15),15);a.vy*=below(mod(a.index,15),15);a.q5=5*a.vx;a.q6=5*a.vy;a.q21=div(1+Math.sin(div(a.time,12)),8)+.01;a.trig1=a.q24*bnot(mod(a.index,12));a.trig2=a.q24*bnot(mod(a.index+4,12));a.trig3=a.q24*bnot(mod(a.index+8,12));a.trel+=div(a.vol,a.fps);a.z0=1;a.speed=div(a.vol,2);a.hx=Math.sin(a.trel);a.hy=Math.cos(a.trel);a.p1z=bnot(a.trig1)*(a.p1z+div((5+a.p1z)*a.speed,a.fps))+a.trig1*a.z0;a.p1z=Math.max(a.p1z,.1);a.q9=div(a.hx,a.p1z);a.q10=div(a.hy,a.p1z);a.q11=a.p1z;a.q12=.1+.02*a.q26*bnot(mod(a.index+\n2,3))*a.p1z*Math.exp(div(-a.p1z,100));a.p2z=bnot(a.trig2)*(a.p2z+div((5+a.p2z)*a.speed,a.fps))+a.trig2*a.z0;a.p2z=Math.max(a.p2z,.1);a.q13=div(2*a.hx,a.p2z);a.q14=div(-.5*a.hy,a.p2z);a.q15=a.p2z;a.q16=.1+.02*a.q26*bnot(mod(a.index+2,3))*a.p2z*Math.exp(div(-a.p2z,100));a.p3z=bnot(a.trig3)*(a.p3z+div((5+a.p3z)*a.speed,a.fps))+a.trig3*a.z0;a.p3z=Math.max(a.p3z,.1);a.q17=div(-1.4*a.hx,a.p3z);a.q18=div(2*a.hy,a.p3z);a.q19=a.p3z;a.q20=.1+.02*a.q26*bnot(mod(a.index+2,3))*a.p3z*Math.exp(div(-a.p3z,100));\n","pixel_eqs_str":"a.zoom=1.2+.2*Math.sin(div(a.time,3));","init_eqs_eel":"prox = 1;","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\ndec_med = pow (0.8, 30/fps);\ndec_slow = pow (0.8, 30/fps);\n//dec_xlow = pow (0.999, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %16;\nindex2 = (index2 + is_beat*bnot(index))%4;\n\nq22 = peak;\nq22slow = q22slow*dec_slow + q22*(1-dec_slow);\nq23 = q22slow;\nq24 = is_beat;\nq26 = bass_att + mid_att + treb_att;\nvol = vol*dec_med + (1-dec_med)*q26;\nq27 = index + 1;\nq28 = index2 ;\n\nk1 =  is_beat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\n//rott = p2 * 3.1416/2;\nrott = rott + q22*16*(1-dec_med)/fps*below(q27,6);\n//*****tunnel tilting\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\n//****tunnel viewpoint x,y\nvtrig = is_beat * bnot(index%2);\nvx = vx * bnot(vtrig) + vtrig * (int(rand(100))/100-.5);\nvy = vy * bnot(vtrig) + vtrig * (int(rand(100))/100-.5);\nvx = vx* below(index%15,15); //###\nvy = vy* below(index%15,15);\nq5 = vx*5;\nq6 = vy*5;\n\n//***tunnel width\nq21 = (1+sin(time/12))/8+.01;\n\n\n//***********************\ntrig1= q24*bnot(index%12);\ntrig2= q24*bnot((index+4)%12);\ntrig3= q24*bnot((index+8)%12);\ntrel = trel + vol/fps;\nz0 = 1;\nspeed = vol/2;\nhx = sin(trel);\nhy = cos(trel);\n\np1z = bnot(trig1)* (p1z + (5+p1z)*speed/fps)+trig1*z0;\np1z = max(p1z,.1);\nq9 = hx/(p1z); \nq10 = hy/(p1z); \nq11 = p1z;\nq12 = .1+.02*q26*bnot((index+2)%3)*p1z*exp(-p1z/100);\n\np2z = bnot(trig2)* (p2z + (5+p2z)*speed/fps)+trig2*z0;\np2z = max(p2z,.1);\nq13 = 2*hx/(p2z); \nq14 = -.5*hy/(p2z); \nq15 = p2z;\nq16 = .1+.02*q26*bnot((index+2)%3)*p2z*exp(-p2z/100);\n\n\np3z = bnot(trig3)* (p3z + (5+p3z)*speed/fps)+trig3*z0;\np3z = max(p3z,.1);\nq17 = -1.4*hx/(p3z); \nq18 = 2*hy/(p3z); \nq19 = p3z;\nq20 = .1+.02*q26*bnot((index+2)%3)*p3z*exp(-p3z/100);","pixel_eqs_eel":"zoom = 1.2 + .2 *sin(time/3);","warp":" shader_body { \n  vec2 dz_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = dot ((texture (sampler_main, (uv + vec2(0.002, 0.0))) - texture (sampler_main, (uv - vec2(0.002, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_2.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.002))) - texture (sampler_main, (uv - vec2(0.0, 0.002)))), vec4(0.32, 0.49, 0.29, 0.0));\n  dz_1 = (sqrt(tmpvar_2) / 8.0);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((texture (sampler_main, (\n    (uv - (dz_1 * 0.01))\n   + \n    ((((texture (sampler_blur1, uv).xyz * scale1) + bias1) * 0.01) * q22)\n  .xy)).xyz - (\n    sqrt(dot (dz_1, dz_1))\n   * 0.5)) + ((0.02 * vec3(\n    (dot (texture (sampler_noise_lq, uv), vec4(0.32, 0.49, 0.29, 0.0)) - 0.2)\n  )) * (1.0 - rad)));\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = pow (((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) / bass_att), vec3((1.0 - dot (\n    clamp (pow (((\n      (texture (sampler_blur1, uv).xyz * scale1)\n     + bias1) / treb_att), vec3((1.0 - dot (\n      clamp (texture (sampler_main, uv).xyz, 0.0, 1.0)\n    , vec3(0.32, 0.49, 0.29))))), 0.0, 1.0)\n  , vec3(0.32, 0.49, 0.29)))));\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"float2 uv1, rs, dz;\nfloat z;\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\n\nfloat2 tmp = uv1;\ntmp.x = ang; tmp.y = rad ;\nuv1 = .001*tmp;\n\nfloat2 hor = float2 (.002,0.0);\nfloat2 ver = float2 (0,.002);\nfloat dx = lum(tex2D(sampler_main,uv+hor) \n  - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) \n  - tex2D(sampler_main,uv-ver));\nfloat2 dz = float2 (dx,dy);\n\ndz = sqrt(dz)/8;\nfloat3 ret1 = GetBlur1(uv);\n\nfloat3 crisp = tex2D(sampler_main, \n   -0*uv1+uv - dz*.01 + ret1*.01*q22 );\n\n\nfloat3 noise = lum(tex2D (sampler_noise_lq,uv))-.2;\n\nret =  crisp*1 - length(dz)*.5 + .02*noise*(1-rad);;\n\n ret *= 1; \n}","comp_hlsl":"shader_body\n{\nret=tex2D(sampler_main,uv);\n//ret=lum(ret)>0+(lum(ret)<=0.75)*ret;\nret=pow(GetBlur1(uv).xyz/treb_att,1-lum(saturate(ret.xyz)));\nret=pow(GetBlur2(uv).xyz/bass_att,1-lum(saturate(ret.xyz)));\n//ret=1-ret;\n}"}