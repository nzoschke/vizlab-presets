{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"wave_mode":6,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.00564,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.05,"ob_r":0.01,"ob_a":0.2,"ib_size":0.05,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":0.1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.7316,"ang":5.17734,"tex_zoom":0.92992,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"scaling":15.927,"smoothing":0,"r":0,"g":0,"b":0},"init_eqs_str":"a.rd=0;a.gn=0;a.bl=0;","frame_eqs_str":"","point_eqs_str":"a.x=.5+(.35*Math.cos(6.284*a.sample)-.5*a.value1);a.y=.5+(.45*Math.sin(6.284*a.sample)-.5*a.value2);a.rd=.75+.25*Math.sin(.1*a.time+6.284*a.sample);a.gn=.75+.25*Math.sin(.1*a.time+2.0946+6.284*a.sample);a.bl=.75+.25*Math.sin(.1*a.time+4.1892+6.284*a.sample);a.r=.00001<Math.abs(above(a.rd,.75))?a.rd:0;a.g=.00001<Math.abs(above(a.gn,.75))?a.gn:0;a.b=.00001<Math.abs(above(a.bl,.75))?a.bl:0;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=0.5+(cos(sample*6.284)*0.35-(value1*0.5));\ny=0.5+(sin(sample*6.284)*0.45-(value2*0.5));\n\nrd=0.75+(sin((time*0.1)+0.0000+(sample*6.284))*0.25);\ngn=0.75+(sin((time*0.1)+2.0946+(sample*6.284))*0.25);\nbl=0.75+(sin((time*0.1)+4.1892+(sample*6.284))*0.25);\n\nr=if(above(rd,0.75),rd,0);\ng=if(above(gn,0.75),gn,0);\nb=if(above(bl,0.75),bl,0);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.rad=0;a.t1=0;a.bamx=0;a.bom=0;a.q6=0;a.speedb=0;a.q1=0;a.q5=0;a.x=0;a.rox=0;a.wecrut=0;a.t3=0;a.t6=0;a.weconz=0;a.rhox=0;a.q4=0;a.t7=0;a.daz=0;a.speedc=0;a.q2=0;a.boom=0;a.wec=0;a.speeda=0;a.speed=0;a.q3=0;a.t4=0;a.shox=0;a.tri=0;a.q8=0;a.mv_x=60;a.mv_y=89;a.monitor=a.echo_zoom;","frame_eqs_str":"a.zoom=Math.sin(a.echo_zoom-a.q4);a.cx=.8*Math.sin(1.5*div(a.time,2))+.5;a.cy=.8*Math.sin(1.1*a.time)+.5;a.ob_r=1.4*a.time;a.ob_b=1.2*a.time;a.ob_g=1*a.time;a.ib_r=.5*a.time;a.ib_b=.6*a.time;a.ib_g=.7*a.time;a.rot=.1;a.decay=.999999;a.wec=Math.sin(a.time-1);a.weconz=(a.q4-a.q2)*a.wec;a.wecrut=3*a.tri-Math.sin(a.time-a.rad);a.tri=a.q8;a.t1=a.wec+a.x;a.t3=a.tri*a.weconz;a.t6=a.wecrut;a.t7=a.wec*a.time;a.q1=a.wec;a.q2=a.tri-a.t1;a.q6=div(2*a.weconz,a.time);","pixel_eqs_str":"a.bamx=Math.sin(a.time-a.bass);a.boom=Math.sin(mod(a.bamx,a.boom)*a.bass*a.time);a.bom=2*rand(.1*(a.time-a.boom)*(a.time-a.bamx));a.speed=mod(Math.sin((a.speeda-a.speedb)*(a.speedb-a.speeda)),a.speedc);a.speeda=Math.sin((3*a.bass-a.speedb)*a.time);a.speedb=Math.sin((3*a.mid+a.speedc)*a.time);a.speedc=Math.sin((3*a.treb-a.speeda)*a.time);a.shox=Math.cos(a.q3-a.q8)*a.speed;a.rhox=mod(Math.sin(a.q5+a.speedb),a.speed);a.rox=div(a.shox-a.rhox,2);a.daz=a.speed*(a.time-1)*a.bass*.5+\n.5;a.wec=Math.sin(a.time-1);a.weconz=a.t4-a.q4;a.wecrut=3*a.tri-Math.sin(a.time-a.rad);a.tri=a.q8;a.warp=1.42;a.q3=a.treb*a.bom;a.q8=a.bass*a.boom;a.q5=a.mid*a.rox;a.q6=mod(a.rox,a.speed);a.q4=a.daz-a.q4;a.wec=Math.sin(a.time-1);a.weconz=(a.q4-a.q2)*a.wec;a.wecrut=3*a.tri-Math.sin(a.time-a.rad);a.tri=a.q8;a.t1=a.wec+a.x;a.t3=a.tri*a.weconz;a.t6=a.wecrut;a.t7=a.wec*a.time;","init_eqs_eel":"mv_x = (60);\nmv_y = 89;\nmonitor = echo_zoom;","frame_eqs_eel":"zoom =sin( echo_zoom-q4);\n\ncx = (sin((time/2)*1.5)*0.8 + 0.5);\ncy = (sin(time*1.1)*0.8 + 0.5);\n\n\n\nob_r = 2*(time*.7);\nob_b = 2*(time*.6);\nob_g = 2*(time*.5);\n\nib_r = 1*(time*.5);\nib_b = 1*(time*.6);\nib_g = 1*(time*.7);\n\n\nrot = 0.1;\n\n\n\ndecay = .999999;\n\n\nwec=sin(time-1);\nweconz=(q4-q2)*wec;\nwecrut=(tri*3)-(sin(time-rad));\ntri= q8;\n\n\nt1 = wec+x;\nt3 = tri*weconz;\nt6 = wecrut;\nt7 = wec * time;\n\n\nq1 = wec;\nq2 = tri-t1;\nq6 = (weconz*2)/time;","pixel_eqs_eel":"bamx=sin(time-bass);\nboom=sin(((bamx%boom)*bass)*time);\nbom=(rand(0.1*(time-boom)*(time-bamx))*2);\n\n\nspeed = sin(((speedA-speedB)*(speedB-speedA)))%speedC;\nspeedA =  sin((bass*3 - speedB )* time);\nspeedB =  sin((mid*3 + speedC ) * time);\nspeedC = sin((treb*3 - speedA ) * time);\n\nshox = cos(q3 - q8)*speed;\nrhox = sin(q5 + speedB)%speed;\nrox = (shox - rhox)/2;\n\ndaz=((speed*(time-1))*bass)* 0.5 + 0.5;\n\n\n\n\nwec=sin(time-1);\nweconz=t4-q4;\nwecrut=(tri*3)-(sin(time-rad));\ntri= q8;\n\n\n\nwarp = 1.420;\n\nq3 = treb*bom;\nq8 = bass* boom;\nq5 = mid*rox;\nq6 = rox%speed;\nq4 = daz - q4;\n\n\nwec=sin(time-1);\nweconz=(q4-q2)*wec;\nwecrut=(tri*3)-(sin(time-rad));\ntri= q8;\n\n\n\nt1 = wec+x;\nt3 = tri*weconz;\nt6 = wecrut;\nt7 = wec * time;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1.z = (texture (sampler_main, uv_orig).xyz - 0.004).z;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 2.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  ret_1.x = (texture (sampler_main, ((\n    mix (uv_orig, uv, vec2(-0.4, -0.4))\n   - \n    (tmpvar_5 * texsize.zw)\n  ) + (\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5).xy * texsize.zw)\n   * 2.0))).x - 0.001);\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.y;\n  tmpvar_6.y = tmpvar_4.y;\n  ret_1.y = max (((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1).x, (texture (sampler_fc_main, (\n    (uv + (vec2(0.0, 1.0) * texsize.zw))\n   - \n    ((tmpvar_6 * texsize.zw) * 2.0)\n  )).y - 0.004));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.0);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\n  ), pow (hue_shader, ret_2)));\n  ret_2 = (ret_2 * hue_shader);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\nret = GetPixel(uv_orig) - 0.004;\n\n\nfloat2 d = texsize.zw*2;\nfloat3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\nfloat3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n\nfloat2 uv_red = lerp(uv_orig,uv,-.4) - float2(dx.x,dy.x)*texsize.zw + (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)*texsize.zw*2;\nret.x = GetPixel(uv_red).x - 0.001;\n\nfloat2 uv_green = lerp(uv_orig,uv,1) + float2(0,1)*texsize.zw - float2(dx.y,dy.y)*texsize.zw*2;\nret.y = max( GetBlur1(uv_orig).x, tex2d(sampler_fc_main, uv_green).y - 0.004);\n\n//ret = 0;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1;\n    float3 what = lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader,ret));\n    ret *=what;\n    ret *= hue_shader;\n\n    //ret *= 1.5; //old gamma effect    \n}"}