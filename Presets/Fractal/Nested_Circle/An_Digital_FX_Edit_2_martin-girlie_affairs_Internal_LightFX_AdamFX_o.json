{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":3,"additivewave":1,"modwavealphabyvolume":1,"darken_center":1,"darken":1,"wave_a":4.1,"wave_scale":0.01,"wave_smoothing":0.36,"wave_mystery":-0.5,"modwavealphastart":0.71,"modwavealphaend":1.7,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.rm=0;a.ampl=0;a.index2=0;a.index=0;a.q18=0;a.q22=0;a.q21=0;a.movex=0;a.q1=0;a.dec_med=0;a.index3=0;a.trel=0;a.rott=0;a.ava=0;a.is_beat=0;a.q23=0;a.k1=0;a.q24=0;a.dec_slow=0;a.q4=0;a.q26=0;a.p2=0;a.mov=0;a.avg=0;a.movez=0;a.q19=0;a.beat=0;a.q17=0;a.p1=0;a.peak=0;a.q2=0;a.q27=0;a.movey=0;a.q3=0;a.t0=0;a.q28=0;a.q30=0;a.q20=0;a.dirx=1;","frame_eqs_str":"a.dec_med=pow(.6,div(30,a.fps));a.dec_slow=pow(.9,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.2+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.index=mod(a.index+a.is_beat,8);a.index2=mod(a.index2+a.is_beat*bnot(a.index),4);a.index3=mod(a.index3+a.is_beat*bnot(a.index)*bnot(a.index2),3);a.q20=a.avg;a.q21=\na.beat;a.q22=a.peak;a.q23=a.index;a.q24=a.is_beat;a.q26=a.bass+a.mid+a.treb;a.ava=a.ava*a.dec_slow+a.q26*(1-a.dec_slow);a.k1=a.is_beat*equal(mod(a.index,2),0);a.p1=a.k1*(a.p1+1)+(1-a.k1)*a.p1;a.p2=a.dec_med*a.p2+(1-a.dec_med)*a.p1;a.rott=div(3.1416*a.p2,2);a.q1=Math.cos(a.rott);a.q2=Math.sin(a.rott);a.q3=-a.q2;a.q4=a.q1;a.q27=8-a.index;a.q28=.5+div(Math.sin(div(a.time,7)),10);a.rm=Math.min(a.q26-1.5*a.ava,2);a.mov=a.is_beat*a.rm+(1-a.is_beat)*a.mov;a.movez+=div(.4,a.fps)*a.mov;a.q30=a.movez;a.ampl=\ndiv(a.q26,8);a.movex+=div(.2,a.fps)*Math.sin(a.rott);a.movey+=div(.2,a.fps)*Math.cos(a.rott);a.q18=a.movex;a.q19=a.movey;a.trel=a.trel+div(1,a.fps)+a.q24;a.q17=2*Math.sin(div(a.trel,4));","pixel_eqs_str":"","init_eqs_eel":"dirx = 1;","frame_eqs_eel":"dec_med = pow (0.6, 30/fps);\ndec_slow = pow (0.9, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\nindex = (index + is_beat) %8;\nindex2 = (index2 + is_beat*bnot(index))%4;\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\n\n\nq20 = avg;\nq21 = beat;\nq22 = peak;\nq23 = index;\nq24 = is_beat;\nq26 = bass + mid + treb;\nava = ava*dec_slow + q26*(1-dec_slow);\n\n\n//k1 =  is_beat*bnot(index)*bnot(index2);\n\nk1 =  is_beat*equal(index%2,0);\np1 =  k1*(p1+1) + (1-k1)*p1;\np2 = dec_med * p2+ (1-dec_med)*p1;\nrott = p2 * 3.1416/2;\nq1 = cos(rott);\nq2 = sin(rott);\nq3 = -q2;\nq4 = q1;\n\nq27 = 8-index;\nq28 = .5 + sin(time/7)/10;\n\nrm = min(q26-1.5*ava,2);\nmov = is_beat*rm + (1-is_beat)*mov;\n\nmovez = movez + .4/fps*mov;\nq30 = movez;\n//**************************\n\nampl = q26/8;\n\nmovex = movex + .2/fps*sin(rott);\nmovey = movey + .2/fps*cos(rott);\n\nq18 = movex; q19 = movey;\ntrel = trel + 1/fps + q24;\nq17 = 2*sin(trel/4);","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv6_1;\n  vec2 uv1_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float x_4;\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\n  float tmpvar_5;\n  tmpvar_5 = (12.0 * sqrt((x_4 * x_4)));\n  vec2 tmpvar_6;\n  tmpvar_6 = normalize(tmpvar_3);\n  uv1_2 = (tmpvar_3 + ((-0.01 * \n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_6));\n  uv1_2 = (uv1_2 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 60.0));\n  uv6_1 = (0.4 * cos((uv1_2 * 6.0)));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((0.5 * (\n    ((texture (sampler_main, ((uv1_2 * \n      (0.8 + (0.2 * tmpvar_5))\n    ) + 0.5)).xyz + (vec3((0.01 / \n      (sqrt(dot (uv6_1, uv6_1)) - (0.001 * q27))\n    )) * (0.3 * \n      (1.0 + roam_cos)\n    ).xyz)) * 0.96)\n   - 0.025)) + (0.5 * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_7.xyz;\n }","comp":"vec3 xlat_mutableneu;\nvec2 xlat_mutablers2;\n shader_body { \n  vec2 uv_1;\n  vec3 ret1_3;\n  float ang2_4;\n  vec2 uv2_5;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  ret1_3 = vec3(0.0, 0.0, 0.0);\n  for (int n_2 = 0; n_2 <= 6; n_2++) {\n    ang2_4 = ((6.28 * float(n_2)) / 6.0);\n    float tmpvar_6;\n    tmpvar_6 = cos(ang2_4);\n    float tmpvar_7;\n    tmpvar_7 = sin(ang2_4);\n    uv2_5.x = ((uv_1.x * tmpvar_6) - (uv_1.y * tmpvar_7));\n    uv2_5.y = ((uv_1.x * tmpvar_7) + (uv_1.y * tmpvar_6));\n    uv2_5 = (uv2_5 * aspect.yx);\n    uv2_5 = (uv2_5 + 0.5);\n    vec2 tmpvar_8;\n    tmpvar_8 = fract(uv2_5);\n    uv2_5 = tmpvar_8;\n    xlat_mutableneu = (texture (sampler_main, tmpvar_8).xyz + ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1));\n    ret1_3 = max (ret1_3, xlat_mutableneu);\n  };\n  vec2 tmpvar_9;\n  tmpvar_9.x = q5;\n  tmpvar_9.y = q6;\n  xlat_mutablers2 = (sin((\n    (uv_1 * 18.0)\n   + tmpvar_9)) + (4.0 * dot (ret1_3, vec3(0.32, 0.49, 0.29))));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((q22 * ret1_3) + ((24.0 * \n    clamp ((0.04 / sqrt(dot (xlat_mutablers2, xlat_mutablers2))), 0.0, 1.0)\n  ) * (0.2 + \n    ((q1 * ret1_3) / 2.0)\n  )));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv-.5);// * aspect.xy;\n\nfloat2 uv6 = uv1;\n\n//##hier unten statt - auch plus\nfloat z = 12*length((abs(uv1.x)-abs(uv1.y)));\n//z = length(uv1)*22;\n\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-2,2);\nuv1 += -.010*lum(GetBlur1(uv))*d;\nuv1 -= rs/60; //auch minus und frac versuchen\n\nuv6 = .4*cos(uv1*6+rand_frame*0);\nmus = .01/(length(uv6)-.001*q27);\nmus *= .3*(1+roam_cos);\n//mus = .2;\n\n\n//probier auch 1*z;\nfloat3 crisp= tex2D(sampler_main,(uv1)*(.8+.2*z)+.5);\n\nfloat3 ret1 = crisp + mus;\n\nq25 = q24+.4; //##hier auf 1 setzen\nq25 = .5;\nret = q25*(ret1*.96-.025) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"float3 neu;\nfloat2 rs2;\nshader_body\n{\n    float2 uv2, uv3, dz;\n    float ang2, c, s;\n\n    uv -= 0.5;\n    uv *= aspect.xy;    \n\nfloat3 ret1 = 0;\nint anz = 6;\nint n = 0;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    uv2 *= aspect.yx;\n    uv2 += .5;\n    uv2 = frac(uv2);\n    neu = GetPixel(uv2) + GetBlur1(uv2);\n    ret1 = max(ret1,neu);\nn++;\n}\n\n\nrs2 = sin(uv*18+float2 (q5,q6)) \n      + 4*lum(ret1);;\nfloat dots = saturate(.04/length(rs2))-.0;\n\nret = q22*ret1 + 24*dots*(.2+q1*ret1/2);\n}\n\n"}