{"version":2,"baseVals":{"rating":5,"gammaadj":1.94,"decay":0.9,"echo_zoom":1.001,"echo_alpha":0.5,"echo_orient":1,"wave_mode":6,"wave_dots":1,"wrap":0,"wave_a":0.003,"wave_scale":0.262,"wave_smoothing":0.9,"wave_mystery":0.173,"warpscale":1.35,"zoom":0.9399,"rot":-6.14,"dx":0.001,"dy":0.005,"warp":1.5088,"sx":0.9999,"sy":0.9999,"wave_x":0.448,"wave_y":0.122,"ob_size":0.009,"ob_r":0.6,"ob_b":1,"ob_a":0.15,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":1,"mv_x":1.28,"mv_y":1,"mv_dx":0.087,"mv_dy":0.343,"mv_l":1.663},"shapes":[{"baseVals":{"enabled":1,"sides":24,"textured":1,"rad":0.71646,"ang":6.2831,"tex_zoom":0.99999,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q2=0;","frame_eqs_str":"a.border_r+=1.5*Math.sin(1.13*a.q2);a.border_b+=.5*Math.sin(1.23*a.q2);a.border_g+=.5*Math.sin(1.33*a.q2);a.x=.5+.4*Math.sin(a.time);a.y=.5-.4*Math.cos(a.time);","init_eqs_eel":"","frame_eqs_eel":"border_r = border_r + 1.5*sin(q2*1.13);\nborder_b = border_b + 0.5*sin(q2*1.23);\nborder_g = border_g + 0.5*sin(q2*1.33);\n//ang = 1+sin(q1);\nx = 0.5 + (.4 * sin(time));\ny = 0.5 - (.4 * cos(time));"},{"baseVals":{"enabled":1,"sides":40,"textured":1,"rad":0.72436,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5-.1*Math.sin(a.time+.01*a.bass);a.y=.5+.1*Math.cos(a.time+.01*a.bass);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 - (.1 * sin(time + (bass * 0.01)));\ny = 0.5 + (.1 * cos(time + (bass * 0.01)));"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":192,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_str":"t3 = acos(-1)*128;\nt4 = 4/3;","frame_eqs_str":"spin = spin + .01;\nt2 = spin;\nred = (-1 * cos(time))  + abs(-1 * cos(time)) + 0.2 * (cos(sin(time))+(abs(cos(sin(time)))+cos(sin(time))));\ngreen = abs(sin(time)) ;\nblue = cos(time)  + abs(cos(time));\nr = if(above(red,1),1,if(above(red,0), abs(red),0));\ng = if(above(green,1),1,if(above(green,0), abs(green),0));\nb = if(above(blue,1),1,if(above(blue,0), abs(blue),0));","point_eqs_str":"rad = sample*t3+t2;\nx = .5 + cos(rad/64)*0.65 + sin(rad)*0.35;\ny = .5 + sin(rad/64)*t4*0.65 + cos(rad)*t4*0.35;","init_eqs_eel":"t3 = acos(-1)*128;\nt4 = 4/3;","frame_eqs_eel":"spin = spin + .01;\nt2 = spin;\nred = (-1 * cos(time))  + abs(-1 * cos(time)) + 0.2 * (cos(sin(time))+(abs(cos(sin(time)))+cos(sin(time))));\ngreen = abs(sin(time)) ;\nblue = cos(time)  + abs(cos(time));\nr = if(above(red,1),1,if(above(red,0), abs(red),0));\ng = if(above(green,1),1,if(above(green,0), abs(green),0));\nb = if(above(blue,1),1,if(above(blue,0), abs(blue),0));","point_eqs_eel":"rad = sample*t3+t2;\nx = .5 + cos(rad/64)*0.65 + sin(rad)*0.35;\ny = .5 + sin(rad/64)*t4*0.65 + cos(rad)*t4*0.35;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.crest=0;a.vol_now=0;a.q1=0;a.slowtime=0;a.my_rot=0;a.zoom_target=0;a.beat=0;a.my_beat=0;a.q2=0;a.q3=0;a.vol_mean=0;a.my_rot=.01;","frame_eqs_str":"a.mv_l=1.21894646*rand(Math.floor(a.ob_size*a.zoom));a.wave_y=bnot(a.wave_y+a.mv_b);a.zoomexp=-1*Math.abs(2.4*log10(a.wave_b*a.wave_mode));a.mv_b=a.zoom*a.cx;a.crest=.47+.5*Math.abs(Math.sin(a.slowtime));a.dy=.00001<Math.abs(below(a.sy*a.crest,a.mv_b*a.mv_x))?sigmoid(a.mv_l*a.dy,a.ib_size*a.mv_y):a.ob_a*a.mv_x;a.mv_l*=a.warp;a.ib_b=.00001<Math.abs(below(a.decay+a.ib_g,a.cy*a.ob_size))?a.wave_mystery*a.warp:a.wave_mystery*a.mv_g;a.mv_x=.68256116*Math.abs(a.mv_a-a.mv_r);a.wave_y=\nsigmoid(sigmoid(a.wave_y*a.zoomexp,a.ib_a*a.ib_g),a.ib_b+a.mv_l);a.ob_g=Math.max(0,Math.abs(Math.sin(a.slowtime))-.3)+.7;a.ob_b=Math.max(-1.81535745*log10(a.ob_b*a.ib_a),a.crest*a.wave_b)+.6;a.ob_r=.3*sign(.00001<Math.abs(equal(a.wave_mystery*a.wave_y,a.mv_x*a.ob_a))?.71052909*Math.log(a.ob_r*a.warp):a.wave_x*a.sy)+.6;a.ib_r=1-a.ob_r;a.ib_g=1-a.ob_g;a.ib_b=1-a.ob_b;a.zoomexp=.00001<Math.abs(below(a.zoomexp,.5))?.5:a.zoomexp;a.zoomexp=.00001<Math.abs(above(a.zoomexp,500))?500:a.zoomexp;a.dy=.00001<\nMath.abs(below(a.dy,-1))?-6:a.dy;a.dy=.00001<Math.abs(above(a.dy,1))?6:a.dy;a.wave_y=.00001<Math.abs(below(a.wave_y,0))?0:a.wave_y;a.wave_y=.00001<Math.abs(above(a.wave_y,1))?1:a.wave_y;a.vol_now=.4*a.bass+.1*(a.bass_att+a.treb+a.mid);a.vol_mean=.00001<Math.abs(equal(mod(a.frame,50),0))?a.vol_mean-.5*(a.vol_mean-a.vol_now):.1*(9*a.vol_mean+a.vol_now);a.beat=.00001<Math.abs(above(a.vol_now,1.15*a.vol_mean))?1:0;a.slowtime+=a.beat*a.time;a.q2=Math.sin(a.slowtime);a.q3=a.slowtime;a.my_beat+=1*a.beat;\na.my_beat=.00001<Math.abs(above(a.my_beat,4))?1:a.my_beat;a.my_rot=.00001<Math.abs(above(a.my_rot,0))?a.my_rot+.005*a.vol_mean:a.my_rot-.02*a.vol_mean;a.my_rot=.00001<Math.abs(above(a.my_rot,.23))?.1:a.my_rot;a.my_rot=.00001<Math.abs(below(a.my_rot,-.6))?.01:a.my_rot;a.rot=a.my_rot;a.zoom_target=.8+.1*a.q2;a.zoom+=.2*(a.zoom_target-a.zoom);","pixel_eqs_str":"a.warp=.36676717*pow(a.q2-a.y,a.q2*a.q1);a.warp=1.82335234*pow(-.69122636*log10(a.warp*a.q2),a.q1*a.x);a.cx=-.51261795*sqrt(a.q3*a.q1);a.warp=.00001<Math.abs(below(a.warp,.01))?.01:a.warp;a.warp=.00001<Math.abs(above(a.warp,100))?500:a.warp;a.cx=.00001<Math.abs(below(a.cx,-1))?-1:a.cx;a.cx=.00001<Math.abs(above(a.cx,2))?2:a.cx;a.rot=.5*a.ang;","init_eqs_eel":"my_rot = 0.01;","frame_eqs_eel":"mv_l = 1.21894646*rand(int(ob_size * zoom));\nwave_y = bnot(wave_y + mv_b);\nzoomexp = -1*abs(2.4*log10(wave_b * wave_mode));\nmv_b = zoom * cx;\ncrest = .47+.5*abs(sin(slowtime));\ndy = if(below(sy * crest, mv_b * mv_x) , sigmoid(mv_l * dy , ib_size * mv_y) , ob_a * mv_x);\nmv_l = mv_l * warp;\nib_b = if(below(decay + ib_g , cy * ob_size) , wave_mystery * warp , wave_mystery * mv_g);\nmv_x = 0.68256116*abs(mv_a - mv_r);\nwave_y = sigmoid(sigmoid(wave_y * zoomexp , ib_a * ib_g) , ib_b + mv_l);\nob_g = max(0,abs(sin(slowtime))-.3) + .7;\nob_b = max(-1.81535745*log10(ob_b * ib_a) , crest * wave_b) + 0.6;\nob_r = .3*sign(if(equal(wave_mystery * wave_y , mv_x * ob_a) , 0.71052909*log(ob_r * warp) , wave_x * sy)) + 0.6;\nib_r = 1.0 - ob_r;\nib_g = 1.0 - ob_g;\nib_b = 1.0 - ob_b;\nzoomexp=if(below(zoomexp,0.5), 0.5, zoomexp);\nzoomexp=if(above(zoomexp,500.0), 500.0, zoomexp);\ndy=if(below(dy,-1), -6, dy);\ndy=if(above(dy,1.0), 6.0, dy);\nwave_y=if(below(wave_y,0.0), 0.0, wave_y);\nwave_y=if(above(wave_y,1.0), 1.0, wave_y);\nvol_now =  .4 * bass + 0.1 * (bass_att + treb + mid);\nvol_mean =  if(equal(frame%50,0),vol_mean - 0.5 * (vol_mean-vol_now),0.1 * (vol_mean * 9 + vol_now));\nbeat = if(above(vol_now,1.15 * vol_mean),1,0);\nslowtime = slowtime + beat*time;\nq2=sin(slowtime);\nq3=slowtime;\nmy_beat = my_beat + (1.0 * beat);\nmy_beat = if(above(my_beat, 4), 1, my_beat);\nmy_rot = if(above(my_rot, 0),my_rot + (0.005 * vol_mean),my_rot - (0.02 * vol_mean));\nmy_rot = if(above(my_rot, 0.230), .1, my_rot);\nmy_rot = if(below(my_rot, -.6), 0.01, my_rot);\nrot = my_rot;\nzoom_target = (0.8 + (q2 * 0.1));\n//move slowly towards zoom target?\nzoom = zoom + ((zoom_target - zoom) * .2);","pixel_eqs_eel":"warp = 0.36676717*pow(q2 - y , q2 * q1);\nwarp = 1.82335234*pow(-0.69122636*log10(warp * q2) , q1 * x);\ncx = -0.51261795*sqrt(q3 * q1);\nwarp=if(below(warp,0.01), 0.01, warp);\nwarp=if(above(warp,100.0), 500.0, warp);\ncx=if(below(cx,-1.0), -1.0, cx);\ncx=if(above(cx,2.0), 2.0, cx);\nrot = ang * 0.5;","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\n   / 2.0) + q23)) + 1.0).xyz;\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\n  tmpvar_4.y = tmpvar_3.y;\n  ret_1 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\n   - \n    (tmpvar_2 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_3 * 0.01)\n  .xy)).xyz + (tmpvar_2 * 0.1)));\n  float tmpvar_5;\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\n  ret_1 = (ret_1 - 0.04);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":"","warp_hlsl":"shader_body {\n\n//uv = uv_orig;\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat2 tmp = uv1;\ntmp.x = ang*3; tmp.y = rad;\nuv1 = tmp;\n\nfloat3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);\n\nfloat3 ret1 = GetBlur1 (uv)-.3;\nfloat3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;\nfloat3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;\n\nret = -.4*blur + crisp;\n    \n ret *= 0.98 * pow(1-.01*q28*q28*rad,2); \n  ret -= 0.04;\n}","comp_hlsl":""}