{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.94,"echo_zoom":1.971,"echo_alpha":0.5,"echo_orient":2,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":13.29089,"dx":-0.28,"dy":-0.32,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0.05,"ib_r":0,"ib_g":1,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":0,"mv_r":0,"mv_g":0.7,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"rad":0.04983,"r":0,"g":1,"b":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x=.5+q4;y=.5+q5;","init_eqs_eel":"","frame_eqs_eel":"x=.5+q4;y=.5+q5;"},{"baseVals":{"enabled":1,"sides":24,"textured":1,"rad":0.86642,"tex_zoom":1.16096,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.q4=0;a.q5=0;","frame_eqs_str":"a.tex_ang=.01;a.x=.5-a.q4;a.y=.5-a.q5;","init_eqs_eel":"","frame_eqs_eel":"tex_ang=0.01;\n//tex_zoom=2.235;\nx=.5-q4;\ny=.5-q5;"},{"baseVals":{"enabled":1,"sides":8,"textured":1,"rad":0.44484,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.thick=0;","frame_eqs_str":"a.tex_ang=a.time;a.thick=above(.9,a.bass);","init_eqs_eel":"","frame_eqs_eel":"tex_ang=time;\nthick=above(.9,bass);\n//sides=treb*20;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"a.n=0;a.size=0;a.f=0;a.t1=0;","frame_eqs_str":"a.t1=Math.sin(.5*a.time);","point_eqs_str":"a.n=6.283*a.sample;a.size=.165;a.x=Math.sin(a.n)*a.size+.5;a.y=Math.cos(a.n)*a.size*1.3333+.5;a.f=a.t1;a.r=.5*Math.sin(3*a.n+a.f)+.5;a.g=.5*Math.sin(3*a.n+1.5*a.f)+.5;a.b=.5*Math.sin(3*a.n+2*a.f)+.5;","init_eqs_eel":"","frame_eqs_eel":"t1= sin(time*0.5)*1","point_eqs_eel":"\nn=sample*6.283;\nsize=0.165;\n\nx=sin(n)*size + 0.5;\ny=cos(n)*size*1.3333 + 0.5;\n\nf=t1;\nr=sin(n*3+f)*0.5 + 0.5;\ng=sin(n*3+f*1.5)*0.5+0.5;\nb=sin(n*3+f*2.0)*0.5 + 0.5;\n//r=r*flux;\n//g=g*flux;\n//b=b*flux"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"n=sample*6.283;\nflip=-flip;\n\nxp=0;\nyp=0;\nzp=0;\n\n\n\n\nzp=zp+2.1;\nx=xp/zp+0.5;\ny=yp/zp*1.33+0.5;\nr=1;g=1;b=1;\na=1;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\nflip=-flip;\n\nxp=0;\nyp=0;\nzp=0;\n\n\n\n\nzp=zp+2.1;\nx=xp/zp+0.5;\ny=yp/zp*1.33+0.5;\nr=1;g=1;b=1;\na=1;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.vol=0;a.musictime=0;a.q4=0;a.q5=0;a.q1=0;a.q2=0;a.q8=0;a.q20=0;a.zoom=1;a.xpos=0;a.ypos=0;","frame_eqs_str":"a.decay=1;a.vol=.25*(a.bass+a.mid+a.treb);a.vol*=a.vol;a.mv_r=.5+.4*Math.sin(1.324*a.time);a.mv_g=.5+.4*Math.cos(1.371*a.time);a.musictime+=a.vol;a.q4=0;a.q5=0;a.dx=.03*Math.sin(.1*a.musictime);a.dy=.03*Math.cos(.069*a.musictime);a.q1=.4*Math.sin(.001*a.musictime)+.5;a.q2=.5*Math.cos(.001*a.musictime)+.5;a.q8=a.musictime;a.monitor=a.rot;a.q20=.3*(a.bass+a.mid+a.treb);","pixel_eqs_str":"a.warp=a.rad;","init_eqs_eel":"zoom=1;\nxpos=0;\nypos=0;","frame_eqs_eel":"decay=1;\n\nvol= (bass+mid+treb)*0.25;\nvol=vol*vol;\n\n\nmv_r = 0.5 + 0.4*sin(time*1.324);\nmv_g = 0.5 + 0.4*cos(time*1.371);\n\n\n\nmusictime=musictime+vol;\n\nq4=0;\nq5=0;\n//q4=sin(musictime*0.02)*0.3;\n//q5=sin(musictime*0.01)*0.3;\n\ndx=sin(musictime*0.1)*0.03;\ndy=cos(musictime*0.069)*0.03;\nq1=sin(musictime*0.001)*0.4+0.5;\nq2=cos(musictime*0.001)*0.5+0.5;\n\nq8=musictime;\n\n\nmonitor=rot;\nq20=(bass+mid+treb)*.3;","pixel_eqs_eel":"warp=rad","warp":" shader_body { \n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\n   / 2.0) + q23)) + 1.0).xyz;\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\n  tmpvar_4.y = tmpvar_3.y;\n  ret_1 = ((-0.4 * (\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\n   - \n    (tmpvar_2 * 0.1)\n  )) + (texture (sampler_main, (uv + \n    (tmpvar_3 * 0.01)\n  .xy)).xyz + (tmpvar_2 * 0.1)));\n  float tmpvar_5;\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\n  ret_1 = (ret_1 - 0.04);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\n  ret_1 = ((0.8 * (\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\n  ret_1 = (ret_1 + (0.6 * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 - ((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\n  )));\n  ret_1 = (ret_1 + 0.9);\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) - (0.15 * dot (texture (sampler_noise_hq, \n    (uv + (0.01 * time))\n  ), vec4(0.32, 0.49, 0.29, 0.0))));\n  ret_1 = (mix (ret_1, (\n    (0.75 * ret_1)\n   * \n    dot ((((0.6 * \n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\n     + bias1))), vec3(0.32, 0.49, 0.29))\n  ), pow (hue_shader, \n    (q20 * ret_1)\n  )) * 0.8);\n  ret_1 = (ret_1 * ret_1);\n  vec3 tmpvar_9;\n  tmpvar_9 = sqrt(ret_1);\n  ret_1 = tmpvar_9;\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = tmpvar_9;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body {\n\n//uv = uv_orig;\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\nfloat2 tmp = uv1;\ntmp.x = ang*3; tmp.y = rad;\nuv1 = tmp;\n\nfloat3 noise = (tex2D(sampler_noise_lq,corr*uv/2+q23)+1);\n\nfloat3 ret1 = GetBlur1 (uv)-.3;\nfloat3 crisp = tex2D(sampler_main, uv+ret1*.01 ) + noise*0.1;\nfloat3 blur = GetBlur1 (uv/4+.4*float2(.3*ret1.x,ret1.y)) - noise*.1;\n\nret = -.4*blur + crisp;\n    \n ret *= 0.98 * pow(1-.01*q28*q28*rad,2); \n  ret -= 0.04;\n}","comp_hlsl":"shader_body\n{\n\n//Code bits by Flexi and Geiss\n\n    float2 d = texsize.zw*8;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\nfloat2 uv_y = uv-.25*(float2(lum(dx),lum(dy)));\nfloat2 uv_y2 = uv+.25*(float2(lum(dx),lum(dy)));\n\n\nret = .8*GetBlur3(uv_y)-GetBlur1(uv_y);\nret += .6*GetBlur1(uv);\nret -= (GetBlur2(uv_y2)-GetBlur1(uv_y2));\nret += 1.2*GetPixel(uv_y2)+.15*GetBlur1(uv_y2);\nret += .9;\nret = lum(ret);\nret -= .15*lum(tex2d(sampler_noise_hq,(uv+.01*time)));\nret = lerp(ret,.75*ret*lum(.6*GetBlur3(uv_y)-.7*GetPixel(uv)-.3*GetBlur1(uv_y2)),pow(hue_shader,q20*ret));\nret *= .8;\nret *= ret;\nret = sqrt(ret);\n\n}"}