{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.99,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ib_size":0.05,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"rad":1.77544,"r":0,"a":0.02,"g2":0,"a2":0.4,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.brightness=0;","frame_eqs_str":"a.brightness=0*a.a;a.a2=a.a;a.r=a.brightness;a.g=a.brightness;a.b=a.brightness;a.r2=a.brightness;a.g2=a.brightness;a.b2=a.brightness;a.a2=a.brightness;","init_eqs_eel":"","frame_eqs_eel":"brightness = a*0.1*0;\n\na2 = a;\n\nr = brightness;\ng = brightness;\nb = brightness;\n\n\nr2 = brightness;\ng2 = brightness;\nb2 = brightness;\na2 = brightness;"},{"baseVals":{"textured":1,"y":1,"rad":1.88467,"tex_ang":1.9729,"tex_zoom":0.70584,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_zoom = tex_zoom/rad;\n\nx = 0;\ny = 1.166;","init_eqs_eel":"","frame_eqs_eel":"tex_zoom = tex_zoom/rad;\n\nx = 0;\ny = 1.166;"},{"baseVals":{"sides":100,"textured":1,"rad":0.3644,"tex_zoom":0.67165,"g":1,"b":1,"a":0,"r2":1,"b2":1,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = q7;\ny = 1-q8;\n\ntex_cx = x;\ntex_cy = 1-y;\n\ntex_zoom = 1/rad;","init_eqs_eel":"","frame_eqs_eel":"x = q7;\ny = 1-q8;\n\ntex_cx = x;\ntex_cy = 1-y;\n\ntex_zoom = 1/rad;"},{"baseVals":{"sides":3,"textured":1,"rad":0.37561,"g":1,"b":1,"a":0,"r2":1,"b2":1,"a2":1,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5 + .4*sin(time*.3444);\ny = .5 + .4*sin(time*.2873);\n\ntex_zoom = tex_zoom/rad;\n//tex_zoom = .7;\n\nang = time*4;\n\nx = .5 + .4*sin(time*1.2552);\ny = .5 + .4*sin(time*1.3456);\n\ntex_ang = ang;\n\ntex_cx = .25 + .5*x + .0005 + .5;\ntex_cy = .75 -.5*y + .0005;","init_eqs_eel":"","frame_eqs_eel":"x = .5 + .4*sin(time*.3444);\ny = .5 + .4*sin(time*.2873);\n\ntex_zoom = tex_zoom/rad;\n//tex_zoom = .7;\n\nang = time*4;\n\nx = .5 + .4*sin(time*1.2552);\ny = .5 + .4*sin(time*1.3456);\n\ntex_ang = ang;\n\ntex_cx = .25 + .5*x + .0005 + .5;\ntex_cy = .75 -.5*y + .0005;"}],"waves":[{"baseVals":{"samples":432,"r":0,"g":0,"b":0,"a":0.01,"enabled":0},"init_eqs_str":"","frame_eqs_str":"t1 = time/2;","point_eqs_str":"n = sample * 6.283 * 64;\n\n\nxp = sin(n)*1.5;\nyp = cos(n)*1.5;\n\nsize = 1 - a * sample;\nx = xp+0.5;\nx = min( max(x,0) , 1 );\nx = (x-0.5) * size + 0.5;\n\nsize = 1 - a * sample * 1.3333;\ny = yp+0.5;\ny = min( max(y,0) , 1 );\ny = (y-0.5) * size + 0.5;\n\na = 1;\n\nn = sample * 64;\nn = n - int(n);\nn = n*6.283;\nn = n/2 + t1;\nr = sin(n)*0.5+0.5;\ng = sin(n+2.1)*0.5+0.5;\nb = sin(n+4.2)*0.5+0.5;","init_eqs_eel":"","frame_eqs_eel":"t1 = time/2;","point_eqs_eel":"n = sample * 6.283 * 64;\n\n\nxp = sin(n)*1.5;\nyp = cos(n)*1.5;\n\nsize = 1 - a * sample;\nx = xp+0.5;\nx = min( max(x,0) , 1 );\nx = (x-0.5) * size + 0.5;\n\nsize = 1 - a * sample * 1.3333;\ny = yp+0.5;\ny = min( max(y,0) , 1 );\ny = (y-0.5) * size + 0.5;\n\na = 1;\n\nn = sample * 64;\nn = n - int(n);\nn = n*6.283;\nn = n/2 + t1;\nr = sin(n)*0.5+0.5;\ng = sin(n+2.1)*0.5+0.5;\nb = sin(n+4.2)*0.5+0.5;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_str":"a.it=0;a.sp=0;a.mod=0;","frame_eqs_str":"","point_eqs_str":"a.it=(a.it+1)*above(a.sample,0);a.sp=.785398163375*a.it;a.x=.5+.75*Math.sin(a.sp);a.y=.5+.75*Math.cos(a.sp);a.x=Math.min(Math.max(a.x,0),1);a.y=Math.min(Math.max(a.y,0),1);a.mod=Math.floor(.125*(a.it-1));a.x=(a.x-.5)*(1-.001*a.mod)+.5;a.y=(a.y-.5)*(1-.001*a.mod)+.5;a.a=1-pow(a.sample,.05);a.sp=2*a.sp+.02*a.mod+a.time;a.r=.5+.5*Math.sin(a.sp);a.g=.5+.5*Math.sin(a.sp+1.0472);a.b=.5+.5*Math.sin(a.sp+2.0944);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = (it + 1)*above(Sample,0);\n\nsp = it*6.283185307*.125;\n\nx = .5 + .75*sin(sp);\ny = .5 + .75*cos(sp);\n\nx = min(max(x,0),1);\ny = min(max(y,0),1);\n\nmod = int((it - 1)*.125);\nx = (x - .5)*(1-.001*mod) + .5;\ny = (y - .5)*(1-.001*mod) + .5;\n\na = 1 - pow(sample,.05);\n\nsp = sp*2 + mod*.02 + time;\nr = .5 + .5*sin(sp);\ng = .5 + .5*sin(sp + 1.0472);\nb = .5 + .5*sin(sp + 2.0944);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.tic=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q29=0;a.bt=0;a.q1=0;a.mq31=0;a.mq21=0;a.mq24=0;a.mid_avg=0;a.chng=0;a.mq28=0;a.tt=0;a.my=0;a.tin=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.ti=0;a.q11=0;a.bass_avg=0;a.vav=0;a.atime=0;a.zm=0;a.q26=0;a.mt=0;a.mq27=0;a.ra=0;a.mq25=0;a.mx=0;a.treb_avg=0;a.mq22=0;a.vol=0;a.mq26=0;a.q27=0;a.q7=0;a.q28=0;a.q8=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.decay=1;\na.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.vol=.333333*(a.bass_att+a.treb_att+a.mid_att);a.ra=.25*div(1,a.tic);a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb;a.mt+=a.tic*a.mid;a.bt+=a.tic*a.bass;a.vt+=a.tic*(a.bass*a.bass+a.mid*a.mid+a.treb*a.treb)*.3333;a.zoom=\n1;a.ti=3*a.time;a.ib_r=.5+.5*Math.sin(1.123*a.ti);a.ib_g=.5+.5*Math.sin(1.456*a.ti);a.ib_b=.5+.5*Math.sin(1.789*a.ti);a.q1=1-.5*a.vav;a.q7=.5+.3*Math.sin(a.vt);a.q8=.5+.3*Math.sin(2.6546*a.vt);","pixel_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.mx=(a.x-\n.5)*a.q1+.5;a.mx-=a.q7;a.my=a.y-a.q8;a.mx+=.000001*equal(a.mx,0);a.ra=4*pow(a.mx*a.mx+a.my*a.my*.5625,.5)+.1;a.zm=a.ra*a.ra+.0001;a.zm=1-div(1,a.zm);a.dx=a.zm*(a.x-a.q7);a.dy=a.zm*(a.y-a.q8);","init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\ndecay = 1;\nwarp = 0;\n\ntic = min(time-tin,.1);\ntin = time;\n\nvol = (bass_att + treb_att + mid_att)*.333333;\n\nra = 1/tic*.25;\n\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb;\nmt = mt + tic*mid;\nbt = bt + tic*bass;\nvt = vt + tic*(bass*bass + mid*mid + treb*treb)*.3333;\n\nzoom = 1;\n\n\nti = time*3;\nib_r = .5 + .5*sin(ti*1.123);\nib_g = .5 + .5*sin(ti*1.456);\nib_b = .5 + .5*sin(ti*1.789);\n\n\nq1 = 1 - vav*.5;\n\nq7 = .5 + .3*sin(vt);\nq8 = .5 + .3*sin(vt*2.6546);","pixel_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\nmx = (x-.5)*q1 + .5;\n\nmx = mx - q7;\nmy = y - q8;\nmx = mx + equal(mx,0)*.000001;\n\nra = pow(mx*mx + my*my*.5625,.5)*4 + .1;\n\nzm = ra*ra + .0001;\nzm = 1 - 1/zm;\ndx = zm*(x-q7);\ndy = zm*(y-q8);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 112.0));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_3.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_3.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_3.z * 0.5));\n  };\n  vec3 tmpvar_4;\n  tmpvar_4 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  ret_1 = tmpvar_4;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = tmpvar_4;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 5.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.y;\n  tmpvar_5.y = tmpvar_4.y;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.y;\n  tmpvar_6.y = -(tmpvar_3.y);\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.x;\n  tmpvar_7.y = tmpvar_4.y;\n  vec3 tmpvar_8;\n  tmpvar_8 = (vec3(((\n    ((texture (sampler_blur1, (uv - (tmpvar_5 * 0.2))).xyz * scale1) + bias1)\n  .y * 0.75) + (\n    ((-(tmpvar_3) + tmpvar_4).y + 0.5)\n   * 0.25))) * (vec3(1.0, 1.0, 1.0) - vec3(clamp (\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 1.2)\n  , 0.0, 1.0))));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.x;\n  tmpvar_9.y = tmpvar_4.x;\n  vec2 tmpvar_10;\n  tmpvar_10.x = -(tmpvar_4.z);\n  tmpvar_10.y = tmpvar_3.z;\n  vec2 tmpvar_11;\n  tmpvar_11 = ((uv + (\n    (tmpvar_9 * texsize.zw)\n   * 6.0)) + ((tmpvar_10 * texsize.zw) * 24.0));\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_3.x;\n  tmpvar_12.y = tmpvar_4.x;\n  vec2 tmpvar_13;\n  tmpvar_13.x = -(tmpvar_4.z);\n  tmpvar_13.y = tmpvar_3.z;\n  vec3 tmpvar_14;\n  tmpvar_14 = mix (mix (mix (tmpvar_8, \n    (tmpvar_8 * vec3(2.0, 1.0, 0.0))\n  , vec3(\n    (texture (sampler_main, uv).z * 3.0)\n  )), vec3(0.0, -0.2, -1.0), vec3((\n    ((texture (sampler_blur1, ((\n      ((vec2(0.5, 0.5) + ((uv - vec2(0.5, 0.5)) * (1.0 - \n        (bass_att * 0.04)\n      ))) - ((tmpvar_6 * texsize.zw) * 16.0))\n     - \n      ((tmpvar_7 * texsize.zw) * 8.0)\n    ) + (vec2(16.0, -16.0) * texsize.zw))).xyz * scale1) + bias1)\n  .x * 2.4))), (vec3(0.0, 0.5, 1.0) * (0.9 + \n    (-(tmpvar_3) + tmpvar_4)\n  .x)), vec3(max (texture (sampler_main, tmpvar_11).x, texture (sampler_main, (\n    (uv + ((tmpvar_12 * texsize.zw) * 6.0))\n   - \n    ((tmpvar_13 * texsize.zw) * 24.0)\n  )).x)));\n  ret_1 = tmpvar_14;\n  vec4 tmpvar_15;\n  tmpvar_15 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_11.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_14.x > (q26 * q13)) && (tmpvar_14.x <= (q23 * q11)))) {\n    ret_1.z = (tmpvar_14.z - (tmpvar_15.x * 0.5));\n  };\n  if (((tmpvar_14.y > (q25 * q11)) && (tmpvar_14.y <= (q22 * q12)))) {\n    ret_1.x = (tmpvar_14.x - (tmpvar_15.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\n    ret_1.y = (tmpvar_14.y - (tmpvar_15.z * 0.5));\n  };\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_1;\n  ret = tmpvar_16.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, uv ).xyz;\n    // take the difference between the crisp and blurred images,\n    // then add it back into the image.  Creates spots and stripes over time.\n    ret += (ret - GetBlur1(uv))*0.3;\n    ret *= 0.9;\n\n    // add noise:\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.4 + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0 * 112;\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \n\n    // desaturate over time, to keep the globs white\n    ret = lerp(ret, lum(ret), 0.2);\n}","comp_hlsl":"shader_body\n{\n    float2 d = texsize.zw*5;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\nfloat2 uv1 = uv - float2(dx.y,dy.y)*0.2;\nret = GetBlur1(uv1).y*0.75 + ((-dx+dy).y+0.5)*0.25;\n\nfloat2 c = 0.5;\nfloat2 uv2 = c + (uv-c)*(1-bass_att*0.04) - float2(dy.y,-dx.y)*texsize.zw*16 - float2(dx.x,dy.y)*texsize.zw*8 + float2(1,-1)*texsize.zw*16;\nret = lerp(ret,0,saturate(GetBlur1(uv).z*1.2));\nret = lerp(ret,ret*float3(2,1,0),GetPixel(uv).z*3);\nret = lerp(ret*float3(1,1,1),float3(0,-0.2,-1),GetBlur1(uv2).x*2.4);\nfloat2 uv3 = uv + float2(dx.x,dy.x)*texsize.zw*6 + float2(-dy.z,dx.z)*texsize.zw*24;\nfloat2 uv31 = uv + float2(dx.x,dy.x)*texsize.zw*6 - float2(-dy.z,dx.z)*texsize.zw*24;\nfloat x = max(GetPixel(uv3).x,GetPixel(uv31).x);\nret = lerp(ret,float3(0,0.5,1)*(0.9+(-dx+dy).x),x);\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv3.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \n}"}