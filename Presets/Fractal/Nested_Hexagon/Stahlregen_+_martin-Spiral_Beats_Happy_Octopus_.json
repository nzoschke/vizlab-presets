{"version":2,"baseVals":{"rating":5,"echo_zoom":1.007,"wave_mode":7,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":1.006,"wave_scale":0.06,"zoomexp":1.14947,"zoom":0.96098,"cx":0.65,"cy":0.35,"warp":0.01,"sx":0.99999,"sy":0.99999,"wave_y":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.97633,"tex_zoom":0.88907,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.ang=a.ang+a.q1-a.q2;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + q1 - q2;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.vol=0;a.beat=0;a.res=0;a.diff=0;a.x=0;a.y=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.wave_r=.5+.4*Math.sin(1.133*(a.time+a.bass));a.wave_g=.5+.4*Math.sin(1.333*(a.time+a.bass));a.wave_b=.5+.4*Math.sin(1.533*(a.time+a.bass));a.vol=8*a.bass+4*a.mid+2*a.treb;a.vol*=above(a.vol,17);a.monitor=a.vol;a.beat=above(a.vol,a.res);a.diff=(1-a.beat)*a.diff+a.beat*(a.vol-a.res);a.res=a.beat*(a.vol+2*a.diff)+(1-a.beat)*(a.res-div(60*(.04*a.diff+.12),a.fps));a.res=Math.max(0,a.res);a.monitor=a.res;a.x=.00001<Math.abs(a.beat)?.01*Math.floor(rand(60))+.2:a.x;a.y=.00001<Math.abs(a.beat)?\n.01*Math.floor(rand(60))+.2:a.y;a.q1=a.x;a.q2=a.y;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.4*sin((time+bass)*1.133);\nwave_g = 0.5 + 0.4*sin((time+bass)*1.333);\nwave_b = 0.5 + 0.4*sin((time+bass)*1.533);\n\n\n// And again, beat detection by flexi!\n\nvol = bass*8 + mid*4 + treb*2;\nvol = vol*above(vol,17);\nmonitor = vol;\nbeat = above(vol,res);\ndiff = (1-beat)*diff + beat*(vol-res);\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\nres = max(0,res);\nmonitor = res;\n\nx = if(beat,int(rand(60))*0.01 + 0.2,x);\ny = if(beat,int(rand(60))*0.01 + 0.2,y);\nq1 = x;\nq2 = y;","pixel_eqs_eel":"","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (((texture (sampler_main, \n    ((uv + (0.01 * sin(\n      ((uv * q23) * 20.0)\n    ))) + (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * 0.02).xy)\n  ).xyz + \n    (vec3(dot (texture (sampler_noise_lq, ((\n      ((texsize.xy * texsize_noise_lq.zw).x * uv)\n     * 0.02) + (0.1 * rand_frame).xy)), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0)\n  ) - 0.03) - (0.1 * pow (\n    (1.0 - rad)\n  , 8.0)));\n  ret = tmpvar_1.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret1_2;\n  vec2 uv2_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  ret1_2 = vec3(0.0, 0.0, 0.0);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = ret1_2;\n  float tmpvar_5;\n  tmpvar_5 = (0.1 * q1);\n  ret1_2 = max (tmpvar_4, texture (sampler_main, ((uv_1 + 0.5) + tmpvar_5))).xyz;\n  uv2_3.x = ((uv_1.x * 0.5004596) - (uv_1.y * 0.8657598));\n  uv2_3.y = ((uv_1.x * 0.8657598) + (uv_1.y * 0.5004596));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 0.0;\n  tmpvar_6.xyz = ret1_2;\n  ret1_2 = max (tmpvar_6, texture (sampler_main, ((uv2_3 + 0.5) + tmpvar_5))).xyz;\n  uv2_3.x = ((uv_1.x * -0.4990803) - (uv_1.y * 0.8665558));\n  uv2_3.y = ((uv_1.x * 0.8665558) + (uv_1.y * -0.4990803));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 0.0;\n  tmpvar_7.xyz = ret1_2;\n  ret1_2 = max (tmpvar_7, texture (sampler_main, ((uv2_3 + 0.5) + tmpvar_5))).xyz;\n  uv2_3.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\n  uv2_3.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 0.0;\n  tmpvar_8.xyz = ret1_2;\n  ret1_2 = max (tmpvar_8, texture (sampler_main, ((uv2_3 + 0.5) + tmpvar_5))).xyz;\n  uv2_3.x = ((uv_1.x * -0.5018377) - (uv_1.y * -0.8649619));\n  uv2_3.y = ((uv_1.x * -0.8649619) + (uv_1.y * -0.5018377));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 0.0;\n  tmpvar_9.xyz = ret1_2;\n  ret1_2 = max (tmpvar_9, texture (sampler_main, ((uv2_3 + 0.5) + tmpvar_5))).xyz;\n  uv2_3.x = ((uv_1.x * 0.4976997) - (uv_1.y * -0.8673494));\n  uv2_3.y = ((uv_1.x * -0.8673494) + (uv_1.y * 0.4976997));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 0.0;\n  tmpvar_10.xyz = ret1_2;\n  ret1_2 = max (tmpvar_10, texture (sampler_main, ((uv2_3 + 0.5) + tmpvar_5))).xyz;\n  uv2_3.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  uv2_3.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 0.0;\n  tmpvar_11.xyz = ret1_2;\n  ret1_2 = max (tmpvar_11, texture (sampler_main, ((uv2_3 + 0.5) + tmpvar_5))).xyz;\n  ret1_2 = ((ret1_2 - (rad / 2.0)) * (1.0 + (slow_roam_cos.xyz / 2.0)));\n  vec3 tmpvar_12;\n  tmpvar_12 = max (ret1_2, vec3((dot (\n    (texture (sampler_noise_hq, ((uv_1 * 8.0) + (dot (ret1_2, vec3(0.32, 0.49, 0.29)) / 8.0))) + 0.15)\n  .xyz, vec3(0.32, 0.49, 0.29)) / 6.0)));\n  ret1_2 = tmpvar_12;\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = (((tmpvar_12 - 0.125) * tmpvar_12) * 1.5);\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"shader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;\n\n\nfloat3 noiseVal =lum (tex2D(sampler_noise_lq, corr*uv*.02+ .1*rand_frame));\n\nfloat2 k1 = float2((uv.x), (uv.y));\n\nfloat3 ret1 = GetBlur1(uv) ;\n\nfloat3 crisp = tex2D(sampler_main,uv+\n              .01*sin(uv*q23*20)+ret1*.02) + noiseVal/30;\n    \n ret = crisp -.03 - 0.1*pow(1-rad,8);\n}","comp_hlsl":"shader_body\n{\n    float2 uv2, uv3;\n    float ang2, c, s;\n\n    uv -= 0.5;\n    uv *= aspect.xy;    \n\nfloat3 ret1 = 0;\nint anz = 6;\nint n = 0;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    ret1 = max(ret1,tex2D(sampler_main, uv2 + 0.5+.1*q1));\nn++;\n}\n\nret1 = (ret1 - rad/2) * (1+slow_roam_cos.xyz/2);\n\nfloat3 noise = tex2D (sampler_noise_hq,uv*8+lum(ret1)/8)+.15;\n\nret1 = max(ret1,lum(noise)/6);\n\n//ret = lerp(ret, lum(ret), -5);\n\n ret = (ret1-.125)*ret1*1.5; \n}\n\n"}