{"version":2,"baseVals":{"rating":5,"gammaadj":1,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":6,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":2.63,"warpscale":3.209,"zoomexp":1.00016,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.5,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_a":0},"shapes":[{"baseVals":{"sides":34,"textured":1,"x":0,"y":0,"rad":1.3291,"tex_ang":1.5708,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"additive":1,"r":0,"g":0,"b":0,"a":0.03},"init_eqs_str":"a.sw=0;a.mx=0;a.q2=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.r=.6+.4*Math.sin(a.time);a.g=.4+.4*Math.sin(a.time+2.094);a.b=.4+.4*Math.sin(a.time+4.188);a.sw=1-a.sw;a.mx=equal(mod(Math.floor(a.q2),2),0);a.mx=Math.abs(a.mx-(a.q2-Math.floor(a.q2)));a.my=.5+(.5-a.mx);a.x=a.mx+a.value1*(1-2*a.sw);a.y=a.my+a.value2*(1-2*a.sw);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"r = .6 + .4*sin(time);\ng = .4 + .4*sin(time + 2.094);\nb = .4 + .4*sin(time + 4.188);\n\nsw = 1-sw;\n\nmx = equal(int(q2)%2,0);\nmx = abs(mx - (q2 - int(q2)));\nmy = .5 + (.5 - mx);\n\n\nx = mx + value1*(1-2*sw);\ny = my + value2*(1-2*sw);\n"},{"baseVals":{"enabled":1,"spectrum":1,"additive":1,"r":0,"g":0,"b":0,"a":0.03},"init_eqs_str":"a.sw=0;a.mx=0;a.q3=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.g=.6+.4*Math.sin(a.time);a.b=.4+.4*Math.sin(a.time+2.094);a.r=.4+.4*Math.sin(a.time+4.188);a.sw=1-a.sw;a.mx=equal(mod(Math.floor(a.q3),2),0);a.mx=Math.abs(a.mx-(a.q3-Math.floor(a.q3)));a.my=.5+(.5-a.mx);a.x=a.mx+a.value1*(1-2*a.sw);a.y=a.my+a.value2*(1-2*a.sw);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"g = .6 + .4*sin(time);\nb = .4 + .4*sin(time + 2.094);\nr = .4 + .4*sin(time + 4.188);\n\nsw = 1-sw;\n\nmx = equal(int(q3)%2,0);\nmx = abs(mx - (q3 - int(q3)));\nmy = .5 + (.5 - mx);\n\n\nx = mx + value1*(1-2*sw);\ny = my + value2*(1-2*sw);\n"},{"baseVals":{"enabled":1,"spectrum":1,"additive":1,"r":0,"g":0,"b":0,"a":0.03},"init_eqs_str":"a.sw=0;a.mx=0;a.q4=0;a.my=0;","frame_eqs_str":"","point_eqs_str":"a.b=.6+.4*Math.sin(a.time);a.r=.4+.4*Math.sin(a.time+2.094);a.g=.4+.4*Math.sin(a.time+4.188);a.sw=1-a.sw;a.mx=equal(mod(Math.floor(a.q4),2),0);a.mx=Math.abs(a.mx-(a.q4-Math.floor(a.q4)));a.my=.5+(.5-a.mx);a.x=a.mx+a.value1*(1-2*a.sw);a.y=a.my+a.value2*(1-2*a.sw);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"b = .6 + .4*sin(time);\nr = .4 + .4*sin(time + 2.094);\ng = .4 + .4*sin(time + 4.188);\n\nsw = 1-sw;\n\nmx = equal(int(q4)%2,0);\nmx = abs(mx - (q4 - int(q4)));\nmy = .5 + (.5 - mx);\n\n\nx = mx + value1*(1-2*sw);\ny = my + value2*(1-2*sw);\n"},{"baseVals":{"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = int(rand(1001))*.001;\ny = int(rand(1001))*.001;"}],"init_eqs_str":"a.tg3=0;a.six=0;a.dt=0;a.thresh=0;a.dy_r=0;a.dm=0;a.tg2=0;a.tg1=0;a.vtime=0;a.dx_r=0;a.db=0;a.vol=0;","frame_eqs_str":"a.db=.8*a.db+.2*a.bass;a.dt=.8*a.dt+.2*a.treb;a.dm=.8*a.dm+.2*a.mid;a.vol=.2*(a.db+a.dt+a.dm);a.vol*=a.vol;a.vtime+=.03*a.vol;a.monitor=a.vtime;a.wave_r=.5+.5*Math.sin(1.6*a.vtime);a.wave_g=.5+.5*Math.sin(4.1*a.vtime);a.wave_b=-1+(1-a.wave_r+1-a.wave_g);a.warp=2;a.ob_r+=a.wave_b*above(Math.sin(.1*a.vtime),0);a.ob_b+=a.wave_g*above(Math.sin(.1*a.vtime),0);a.ob_g+=a.wave_r*above(Math.sin(.1*a.vtime),0);a.ob_r+=a.wave_g*below(Math.sin(.1*a.vtime),0);a.ob_b+=a.wave_r*below(Math.sin(.1*\na.vtime),0);a.ob_g+=a.wave_b*below(Math.sin(.1*a.vtime),0);","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.05*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.056*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.tg1=Math.abs(Math.sin(a.time));a.tg2=22*above(a.tg1,.75)+12*below(a.tg1,.25)+18*above(a.tg1,.25)*below(a.tg1,.5)+12*above(a.tg1,.5)*below(a.tg1,.75);a.tg3=.00001<Math.abs(equal(a.thresh,2))?a.tg2:a.tg3;a.six=Math.sin(a.x);a.dx+=\na.dx_r*Math.sin(Math.abs(a.tg3*a.y))*Math.sin(a.time);a.dy+=a.dy_r*Math.sin(Math.abs(a.tg3*a.x))*Math.cos(a.time);a.dx+=a.dx_r*pow(a.rad,2*a.y)*Math.sin(a.time);a.dy+=a.dy_r*pow(a.rad,2*a.x)*Math.sin(a.time);a.zoom-=.0825*pow(a.rad,6*a.x)*Math.cos(6*a.ang);a.rot-=.039375*Math.sin(1.25*a.time)*pow(a.rad,a.x)*Math.sin(1.45*a.time)*Math.sin(a.time);","init_eqs_eel":"","frame_eqs_eel":"db = db*0.8 + bass*0.2; //dampening the bass value\ndt = dt*0.8 + treb*0.2;\ndm = dm*0.8 + mid*0.2;\nvol = (db+dt+dm)*.2;\nvol = vol*vol;\nvtime = vtime + .03*vol;\nmonitor = vtime;\n\nwave_r = 0.5 + 0.5*sin(1.6*vtime);\nwave_g = 0.5 + 0.5*sin(4.1*vtime);\nwave_b = -1 + (1-wave_r + 1-wave_g);\nwarp = 2;\n\nob_r = ob_r+wave_b*above(sin(0.1*vtime),0);\nob_b = ob_b+wave_g*above(sin(0.1*vtime),0);\nob_g = ob_g+wave_r*above(sin(0.1*vtime),0);\nob_r = ob_r+wave_g*below(sin(0.1*vtime),0);\nob_b = ob_b+wave_r*below(sin(0.1*vtime),0);\nob_g = ob_g+wave_b*below(sin(0.1*vtime),0);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.05*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.056*sin(6*time)+(1-equal(thresh,2))*dy_r;\ntg1 = abs(sin(time));\ntg2 = 22*above(tg1,0.75) + 12*below(tg1,0.25) + 18*above(tg1,0.25)*below(tg1,0.5)+\n12*above(tg1,0.5)*below(tg1,0.75);\ntg3 = if(equal(thresh,2),tg2,tg3);\n\nsix = sin(x);\n\ndx = dx + dx_r*sin(abs(tg3*y))*sin(time);\ndy = dy + dy_r*sin(abs(tg3*x))*cos(time);\ndx = dx + dx_r*pow(rad,y*2)*sin(time);\ndy = dy + dy_r*pow(rad,x*2)*sin(time);\nzoom = zoom - 0.0825*pow(rad,x*6)*cos(ang*6);\nrot = rot - 0.0525*(0.75*sin(1.25*time)*pow(rad,x)*sin(1.45*time))*sin(time);","warp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, fract(uv)).xyz * 0.94);\n  ret = tmpvar_1.xyz;\n }","comp":"vec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  vec2 uv2_2;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), texture (sampler_main, (uv_1 + 0.5)).xyz);\n  uv2_2.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\n  uv2_2.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\n  uv2_2.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\n  uv2_2.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\n  uv2_2.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\n  uv2_2.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\n  uv2_2.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  uv2_2.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (xlat_mutableret1 * 2.0);\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret = tex2D( sampler_main, frac(uv) ).xyz;\n    \n    // darken (decay) over time\n    ret *= 0.94; //or try: ret -= 0.004;\n}","comp_hlsl":"float3 ret1, neu;\n\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nret1 = 0;\nint anz = 4;\nint n = 0;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    neu = tex2D(sampler_main, uv2 + 0.5 );\n    ret1 = max(ret1,neu-.0);\nn++;\n}\n\nret = ret1*2;\n\n}"}