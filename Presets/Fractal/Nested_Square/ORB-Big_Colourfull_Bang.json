{"version":2,"baseVals":{"rating":5,"decay":0.5,"echo_zoom":0.999609,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"solarize":1,"wave_a":0.001,"rot":-0.28,"warp":0.01,"wave_r":0,"wave_g":0.4,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":2.667177,"tex_zoom":0.389281,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.4,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_capture = above(bass,1);\nang = basstime;\n\n\nob_r = 0.5 * sin(basstime*1.12);\nob_g = 0.5 * sin(basstime*1.5);\nob_b = 0.5 * sin(basstime*2.12);","init_eqs_eel":"","frame_eqs_eel":"tex_capture = above(bass,1);\nang = basstime;\n\n\nob_r = 0.5 * sin(basstime*1.12);\nob_g = 0.5 * sin(basstime*1.5);\nob_b = 0.5 * sin(basstime*2.12);"},{"baseVals":{"textured":1,"rad":2.667177,"tex_zoom":0.3697,"g":1,"b":1,"a":0.6,"a2":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_capture = above(bass,1);","init_eqs_eel":"","frame_eqs_eel":"tex_capture = above(bass,1);"},{"baseVals":{"enabled":1,"y":0.55,"rad":0.036971,"r2":1,"b2":1,"a2":1},"init_eqs_str":"a.q6=0;a.a6=0;","frame_eqs_str":"a.r=.5+.5*Math.sin(a.q6);a.g=.5+.5*Math.sin(.9*a.q6);a.b=.5+.5*Math.sin(.8*a.a6);a.x=.5+.1*Math.sin(a.q6);","init_eqs_eel":"","frame_eqs_eel":"r = 0.5 + 0.5*sin(q6);\ng = 0.5 + 0.5*sin(q6*0.9);\nb = 0.5 + 0.5*sin(a6*0.8);\nx = 0.5 + 0.1*sin(q6);"},{"baseVals":{"enabled":1,"a2":1},"init_eqs_str":"a.q6=0;","frame_eqs_str":"a.r=.5+.5*Math.sin(a.q6);a.g=.5+.5*Math.sin(.9*a.q6);a.b=.5+.5*Math.sin(.56*a.q6);a.r2=.5+.5*Math.sin(a.q6);a.g2=.5+.5*Math.sin(.9*a.q6);a.b2=.5+.5*Math.sin(.56*a.q6);","init_eqs_eel":"","frame_eqs_eel":"r = 0.5 + 0.5*sin(q6);\ng = 0.5 + 0.5*sin(q6*0.9);\nb = 0.5 + 0.5*sin(q6*0.56);\n\nr2 = 0.5 + 0.5*sin(q6);\ng2 = 0.5 + 0.5*sin(q6*0.9);\nb2 = 0.5 + 0.5*sin(q6*0.56);"}],"waves":[{"baseVals":{"spectrum":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"speed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = x - sample*0.01;\n\nx = x*0.6 + 0.2;\ny = y + bass*0.1;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*6.22) + 0.1;\ng = 0.4 + 0.4*sin(time*5.307);\nb = 0.4 + 0.4*sin(time*4.959)*x;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\nx = x - sample*0.01;\n\nx = x*0.6 + 0.2;\ny = y + bass*0.1;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*6.22) + 0.1;\ng = 0.4 + 0.4*sin(time*5.307);\nb = 0.4 + 0.4*sin(time*4.959)*x;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"speed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\ny = y - sample*0.01;\n\nx = x*0.6 + 0.2;\ny = y + bass*0.1;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*6.22) + 0.1;\ng = 0.4 + 0.4*sin(time*5.307);\nb = 0.4 + 0.4*sin(time*4.959)*x;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass_att*0.8;\nv = sample*10000 + value2*bass*0.1;\n\n//state 0 elipse\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\nys = ys + (equal(0,q1))*sin(v*1)*speed;\n\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\n\ny = y - sample*0.01;\n\nx = x*0.6 + 0.2;\ny = y + bass*0.1;\ny = y*0.8;\n\nr = 0.5 + 0.5*sin(time*6.22) + 0.1;\ng = 0.4 + 0.4*sin(time*5.307);\nb = 0.4 + 0.4*sin(time*4.959)*x;\n\nxs = if(above(xs,1000),0 ,xs);\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_str":"a.othertime=0;a.basstime=0;a.q2=0;a.q1=0;a.q4=0;a.q5=0;a.q6=0;","frame_eqs_str":"a.othertime+=.03*a.bass;a.basstime+=.0003*a.bass;a.q2=a.basstime;a.q1=.1*a.basstime;a.q4=Math.cos(a.basstime);a.q5=Math.sin(a.basstime);a.q6=a.othertime;","pixel_eqs_str":"a.warp=1;a.zoom=1;a.rot=1;","init_eqs_eel":"","frame_eqs_eel":"othertime = othertime + bass*0.03;\n\nbasstime  = basstime + bass*0.0003;\nq2 = basstime;\nq1 = basstime*0.1;\nq4 = cos(basstime);\nq5 = sin(basstime);\nq6 = othertime;","pixel_eqs_eel":"warp = 1;\nzoom = 1;\nrot = 1;","warp":" shader_body { \n  float final_noise_1;\n  vec3 tmpvar_2;\n  tmpvar_2.xy = uv;\n  tmpvar_2.z = q2;\n  final_noise_1 = ((texture (sampler_noisevol_lq, tmpvar_2) * 2.0) - 1.0).x;\n  final_noise_1 = (final_noise_1 + (0.5 * (\n    (texture (sampler_noisevol_lq, (tmpvar_2 * 2.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.25 * (\n    (texture (sampler_noisevol_lq, (tmpvar_2 * 4.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.125 * (\n    (texture (sampler_noisevol_lq, (tmpvar_2 * 8.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = ((final_noise_1 + 1.0) * 0.5);\n  mat2 tmpvar_3;\n  tmpvar_3[uint(0)].x = q4;\n  tmpvar_3[uint(0)].y = -(q5);\n  tmpvar_3[1u].x = q5;\n  tmpvar_3[1u].y = q4;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = texture (sampler_main, (((\n    ((uv - 0.5) * tmpvar_3)\n   * \n    (1.0 - (rad * 0.05))\n  ) + 0.5) + ((final_noise_1 * 0.01) * rad))).xyz;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\n    (0.5 - uv)\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\n  ret_1 = ((ret_1 * (1.0 - ret_1)) * 4.0);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n            float3 txr = float3(uv,q2);\n\n    float final_noise = 0;\n    final_noise += (1.0/pow(2,0))*(tex3D(sampler_noisevol_lq, txr*pow(2,0))*2-1); \n    final_noise += (1.0/pow(2,1))*(tex3D(sampler_noisevol_lq, txr*pow(2,1))*2-1); \n    final_noise += (1.0/pow(2,2))*(tex3D(sampler_noisevol_lq, txr*pow(2,2))*2-1); \n    final_noise += (1.0/pow(2,3))*(tex3D(sampler_noisevol_lq, txr*pow(2,3))*2-1); \n\n    final_noise =  (final_noise+1)*0.5;\n\n    // sample previous frame\n    float2x2 rot =  {  q4, q5,\n                       -q5, q4};\n\n\n    ret = tex2D( sampler_main, mul(uv-0.5,rot)*(1-rad*0.05) + 0.5 + final_noise*0.01*rad ).xyz; \n   \n    // darken (decay) over time\n    ret -= 0.0; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = lerp( tex2D(sampler_main, uv).xyz, \n                tex2D(sampler_main, uv_echo ).xyz, \n                0.50 \n              ); //video echo\n   ret *= 2;  \n   ret =  ret*(1-ret)*4; //solarize\n}"}