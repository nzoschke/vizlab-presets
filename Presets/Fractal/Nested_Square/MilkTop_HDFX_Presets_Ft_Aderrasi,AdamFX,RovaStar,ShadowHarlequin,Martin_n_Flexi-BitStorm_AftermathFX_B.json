{"version":2,"baseVals":{"rating":5,"gammaadj":1.42,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.325,"wave_smoothing":0.9,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":0.01,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":6.4,"mv_y":4.8,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.thresh=0;a.dx_r=0;a.dy_r=0;","frame_eqs_str":"a.wave_r=a.wave_r+.25*Math.sin(1.4*a.time)+.25*Math.sin(2.25*a.time);a.wave_g=a.wave_g+.25*Math.sin(1.7*a.time)+.25*Math.sin(2.11*a.time);a.wave_b=a.wave_b+.25*Math.sin(1.84*a.time)+.25*Math.sin(2.3*a.time);a.warp=0;a.ob_r+=.3*Math.sin(1.2*a.time);a.ob_g+=.3*Math.cos(2*a.time);a.ob_b+=.25*Math.sin(1.5*a.time);a.ib_r=a.wave_r;a.ib_b=a.wave_b;a.ib_g=a.wave_g;","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.rot+=.05*(2-a.rad)*(.2*Math.cos(a.rad-.22*Math.abs(12*a.ang+div(a.bass,a.time)))-1.3*a.treb*Math.cos(a.bass_att));a.zoom-=.02*Math.abs(Math.sin(a.bass-div(a.time,22)*a.rad)-Math.cos(.3*a.bass-a.mid_att));a.zoom-=.2*Math.abs(.5*\nMath.sin(.2*a.bass*a.rot-3*(.5-Math.sin(.5*a.time)-(.25-a.rad))));a.zoomexp=a.zoomexp+.25+Math.abs(.5*Math.sin(a.time*a.bass_att));a.zoom=.00001<Math.abs(below(a.bass,.05))?0:a.zoom;a.rot=.00001<Math.abs(below(a.bass,.05))?0:Math.sin(.2);a.cy+=5.5*Math.sin(a.time)*a.dy_r;a.cx+=5.5*Math.cos(2.5*a.time)*a.dx_r;","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.25*sin(1.4*time) + 0.25*sin(2.25*time);\nwave_g = wave_g + 0.25*sin(1.7*time) + 0.25*sin(2.11*time);\nwave_b = wave_b + 0.25*sin(1.84*time) + 0.25*sin(2.3*time);\nwarp = 0;\n\nob_r = ob_r + 0.3*sin(1.2*time);\nob_g = ob_g + 0.3*cos(2*time);\nob_b = ob_b + 0.25*sin(1.5*time);\nib_r = wave_r;\nib_b = wave_b;\nib_g = wave_g;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\nrot = rot + 0.05*(2-rad)*(0.5*cos(rad-0.22*abs(ang*12+bass/time))*0.4-treb*1.3*cos(bass_att));\nzoom = zoom - 0.02*abs(sin(bass-time/22*rad)-cos(0.3*bass-mid_att));\n//zoom = zoom - 1.86*(0.5*(sin(time)-rad)*bass)*(bass/treb_att*0.2);\nzoom = zoom - 0.2*abs(0.5*sin(0.2*bass*rot-3*(0.5-sin(0.5*time)-(0.25-rad))));\nzoomexp = zoomexp + 0.25 + abs(0.5*sin(time*bass_att));\nzoom = if(below(bass,0.05),0,zoom);\nrot = if(below(bass,0.05),0,sin(0.2));\ncy = cy + 0.25*sin(time)*22*dy_r;\ncx = cx + 0.25*cos(2.5*time)*22*dx_r;","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.2, 0.2));\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = dot (((\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_3.y = dot (((\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\n    (tmpvar_3 * texsize.zw)\n   * 4.0))) - 0.01).xyz;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret3_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (((uv - 0.5) * vec2(-1.0, 1.0)) + 0.5);\n  vec3 tmpvar_5;\n  tmpvar_5 = abs(((texture (sampler_main, uv).xyz * \n    clamp ((((\n      (texture (sampler_blur2, uv).xyz * scale2)\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\n  ) - (texture (sampler_main, tmpvar_4).xyz * \n    clamp ((((\n      (texture (sampler_blur2, tmpvar_4).xyz * scale2)\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\n  )));\n  ret3_2 = (tmpvar_5 * sqrt(tmpvar_5));\n  ret3_2 = (ret3_2 * vec3(0.9, 1.6, 2.3));\n  ret3_2 = (ret3_2 * 3.0);\n  vec3 tmpvar_6;\n  tmpvar_6 = pow (ret3_2, (1.0 - ret3_2));\n  ret3_2 = tmpvar_6;\n  uv_1 = (uv * 2.0);\n  vec2 tmpvar_7;\n  tmpvar_7 = floor((fract(\n    (uv_1 * 0.5)\n  ) * 2.0));\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_7)) + (tmpvar_7 * fract(\n    (1.0 - uv_1)\n  )));\n  vec2 tmpvar_8;\n  tmpvar_8.x = rad;\n  tmpvar_8.y = uv_1.y;\n  uv_1 = tmpvar_8;\n  vec2 tmpvar_9;\n  tmpvar_9 = ((0.5 - tmpvar_8.yx) + 0.5);\n  ret_3 = (texture (sampler_main, tmpvar_8.yx).xyz * clamp ((\n    (((texture (sampler_blur2, tmpvar_8.yx).xyz * scale2) + bias2) * 2.8)\n   - 0.13), 0.0, 1.0));\n  vec3 tmpvar_10;\n  tmpvar_10 = mix (ret_3, (texture (sampler_main, tmpvar_9).xyz * clamp (\n    ((((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2) * 2.8) - 0.13)\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\n  ret_3 = (tmpvar_10 * tmpvar_10);\n  ret_3 = (ret_3 * vec3(0.9, 1.6, 2.3));\n  ret_3 = (ret_3 * 3.0);\n  vec3 tmpvar_11;\n  tmpvar_11 = max (tmpvar_6, (0.8 * vec3((0.5 * \n    dot (ret_3, vec3(0.32, 0.49, 0.29))\n  ))));\n  ret_3 = tmpvar_11;\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = tmpvar_11;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\n\nuv = lerp(uv_orig,uv,0.2);\n\nfloat2 d = texsize.zw * 4;\nfloat3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\nfloat3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n\nuv += float2(lum(dx),lum(dy))*texsize.zw*4;\nret = tex2d(sampler_fc_main, uv) - 0.01;\n\n}","comp_hlsl":"shader_body\n{\n\n\n    float2 uv_echo2 = (uv - 0.5)*1.000*float2(-1,1) + 0.5;\n    float3 ret3 = tex2D(sampler_main, uv).xyz*+saturate(GetBlur2(uv)*2.8 - 0.13); \n    float3 ret4 = tex2D(sampler_main, uv_echo2).xyz*+saturate(GetBlur2(uv_echo2)*2.8 - 0.13);\n    ret3 = abs(ret3-ret4);\n    ret3 *= sqrt(ret3); //darken\n    ret3 *= float3(.9,1.6,2.3);\n    ret3 *= 3; //gamma\n    ret3 = pow(ret3,1-ret3);\n   \n\nuv *=2 ;\nfloat2 m = floor(frac(uv*0.5)*2);\nuv = frac(uv)*(1-m) + (m)*frac(1-uv);\n    uv = float2(rad,uv.y);\n\n\n    float2 uv_echo = (uv.yx - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = tex2D(sampler_main, uv.yx).xyz*+saturate(GetBlur2(uv.yx)*2.8 - 0.13); \n    float3 ret2 = tex2D(sampler_main, uv_echo).xyz*+saturate(GetBlur2(uv_echo)*2.8 - 0.13);\n    ret = lerp(ret,ret2,.5);\n    ret *= ret; //darken\n    ret *= float3(.9,1.6,2.3);\n    ret *= 3; //gamma\n    //ret *= 2;\n    //ret = pow(ret,5);\n    ret = .5*lum(ret);\n    ret = max(ret3,.8*ret.zxy);\n}"}