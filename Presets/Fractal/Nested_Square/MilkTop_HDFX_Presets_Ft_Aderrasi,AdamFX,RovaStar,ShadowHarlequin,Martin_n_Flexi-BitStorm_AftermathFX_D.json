{"version":2,"baseVals":{"rating":5,"gammaadj":1.42,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.015,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":24.16,"mv_y":48,"mv_l":0.05,"mv_a":0},"shapes":[{"baseVals":{"sides":13,"textured":1,"rad":0.61162,"tex_zoom":0.21859,"r":0,"g2":0,"a2":1,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":14,"textured":1,"rad":0.33004,"ang":1.00531,"tex_ang":0.62832,"tex_zoom":0.30546,"g":1,"b":1,"r2":1,"b2":1,"a2":1},"init_eqs_str":"","frame_eqs_str":"a.ang=.4*Math.cos(div(a.time,2))+.5;","init_eqs_eel":"","frame_eqs_eel":"ang=cos(time/2)*0.4+0.5;"},{"baseVals":{"enabled":1,"sides":13,"textured":1,"rad":1.01596,"tex_ang":2.19912,"tex_zoom":0.91266,"g":1,"b":1,"r2":1,"b2":0.8,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.188*(.5*Math.sin(div(a.time,2))+.5);","init_eqs_eel":"","frame_eqs_eel":"ang=(sin(time/2)*.5+.5)*.188;"},{"baseVals":{"enabled":1,"textured":1,"x":0.53,"y":0.75,"rad":0.45378,"tex_ang":0.62832,"tex_zoom":2.2167,"g":1,"b":1,"r2":1,"b2":1,"a2":1},"init_eqs_str":"","frame_eqs_str":"a.x=.3*Math.sin(a.time)+.5;","init_eqs_eel":"","frame_eqs_eel":"x=(sin(time)*0.3+0.5);"}],"waves":[{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\n\nbasstime=basstime+bass;\nt1=basstime;","point_eqs_str":"masterspeed=604*q1;\nmasterspeed=30;\nrotation1=time*0.01;\n\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\nperspective=0.7;\n\n//error bump\nerror = sin(time*128.5)*8 - 7;\nerror = error * above(error,0);\nerror=error+1;\nerror=1;\n\n//plot x,y,z to point on sphere\nflx=sin(tm*14);\nfly=cos(tm*14);\nsmp=sample*6.283;\nxp=sin(smp*masterspeed )*0.25 * error;\nyp=cos(smp*masterspeed )*0.25 * error;\nzp=0;\n\n\n\n//rotate on y axis;\nangy=time*43;\nangy=q1*100;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\nt2=xp;\nt3=yp;\nt4=zp;\n\n//rotate on x axis\naxs1 = sin(time) + 1.6;\nyq= yp*cos(axs1) - zp*sin(axs1);\nzq= yp*sin(axs1) + zp*cos(axs1);\nyp=yq;\nzp=zq;\n\n//rotate on y axis again\naxs2 = sin(time*0.4)*3.3;\nxq=xp*cos(axs2) - zp*sin(axs2);\nzq=xp*sin(axs2) + zp*cos(axs2);\nxp=xq;\nzp=zq;\n\n//stretch y axis to compensate for aspect ratio\nyp=yp*1.2;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5;\ny=ys+0.5;\n\nr=(value1+0.5)*0.01;\ng=(value1+0.5)*0.4;\nb=(value1+0.5)*0.01;\n","init_eqs_eel":"","frame_eqs_eel":"\n\nbasstime=basstime+bass;\nt1=basstime;","point_eqs_eel":"masterspeed=604*q1;\nmasterspeed=30;\nrotation1=time*0.01;\n\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\nperspective=0.7;\n\n//error bump\nerror = sin(time*128.5)*8 - 7;\nerror = error * above(error,0);\nerror=error+1;\nerror=1;\n\n//plot x,y,z to point on sphere\nflx=sin(tm*14);\nfly=cos(tm*14);\nsmp=sample*6.283;\nxp=sin(smp*masterspeed )*0.25 * error;\nyp=cos(smp*masterspeed )*0.25 * error;\nzp=0;\n\n\n\n//rotate on y axis;\nangy=time*43;\nangy=q1*100;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\nt2=xp;\nt3=yp;\nt4=zp;\n\n//rotate on x axis\naxs1 = sin(time) + 1.6;\nyq= yp*cos(axs1) - zp*sin(axs1);\nzq= yp*sin(axs1) + zp*cos(axs1);\nyp=yq;\nzp=zq;\n\n//rotate on y axis again\naxs2 = sin(time*0.4)*3.3;\nxq=xp*cos(axs2) - zp*sin(axs2);\nzq=xp*sin(axs2) + zp*cos(axs2);\nxp=xq;\nzp=zq;\n\n//stretch y axis to compensate for aspect ratio\nyp=yp*1.2;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5;\ny=ys+0.5;\n\nr=(value1+0.5)*0.01;\ng=(value1+0.5)*0.4;\nb=(value1+0.5)*0.01;\n"},{"baseVals":{"enabled":1,"additive":1},"init_eqs_str":"a.rp_fltime=0;a.xp=0;a.yr=0;a.xs=0;a.rotation1=0;a.yp=0;a.smp=0;a.xr=0;a.q1=0;a.rp_fly=0;a.t3=0;a.ys=0;a.rp_flx=0;a.fly=0;a.rptime=0;a.tm=0;a.t2=0;a.perspective=0;a.masterspeed=0;a.flx=0;a.zp=0;a.t4=0;a.zr=0;","frame_eqs_str":"a.tm+=.02*a.bass;a.t2=.4*Math.sin(1*a.tm);a.t3=.4*Math.cos(1*a.tm);a.t4=.2*Math.sin(1*a.tm+.32*a.tm);","point_eqs_str":"a.masterspeed=604*a.q1;a.rotation1=.01*a.time;a.tm=a.time*a.masterspeed*.1;a.perspective=.7;a.rptime=.2*a.time;a.rp_fltime=a.time;a.rp_flx=Math.sin(a.rp_fltime);a.rp_fly=Math.cos(a.rp_fltime);a.xr=.25*Math.sin(a.rptime)*a.rp_fly;a.yr=.33*Math.cos(a.rptime);a.zr=Math.sin(a.rptime)*a.perspective*a.rp_flx;a.flx=Math.sin(14*a.tm);a.fly=Math.cos(14*a.tm);a.smp=6.283*a.sample;a.xp=.25*Math.sin(a.smp*a.masterspeed)*a.fly;a.yp=.33*Math.cos(a.smp*a.masterspeed);a.zp=Math.sin(a.smp*a.masterspeed)*\na.perspective*a.flx;a.xp*=.3;a.yp*=.3;a.zp*=.3;a.xp+=a.t2;a.zp+=a.t3;a.yp+=a.t4;a.zp+=2.1;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=a.ys+.5;a.r=1*(a.value1+.5);a.g=.2*(a.value1+.5);a.b=.1*(a.value1+.5);","init_eqs_eel":"","frame_eqs_eel":"tm=tm+bass*0.02;\nt2=sin(tm*1) * 0.4;\nt3=cos(tm*1) * 0.4;\nt4=sin(tm*1 + tm*0.32) * 0.2;","point_eqs_eel":"masterspeed=604*q1;\nrotation1=time*0.01;\n\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\nperspective=0.7;\n\n//generate rotation point\nrptime=time*0.2;\nrp_fltime=time;\nrp_flx=sin(rp_fltime);\nrp_fly=cos(rp_fltime);\nxr=sin(rptime )*0.25*rp_fly ;\nyr=cos(rptime)*0.33 ;\nzr=sin(rptime)*perspective*rp_flx;\n\n//plot x,y,z to point on sphere\nflx=sin(tm*14);\nfly=cos(tm*14);\nsmp=sample*6.283;\nxp=sin(smp*masterspeed )*0.25*fly ;\nyp=cos(smp*masterspeed )*0.33 ;\nzp=sin(smp*masterspeed )*perspective*flx;\nxp=xp*0.3;\nyp=yp*0.3;\nzp=zp*0.3;\n\n//add orbit value\nxp=xp+t2;\nzp=zp+t3;\nyp=yp+t4;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5;\ny=ys+0.5;\n\nr=(value1+0.5)*1.0;\ng=(value1+0.5)*0.2;\nb=(value1+0.5)*0.1;"},{"baseVals":{"enabled":1,"additive":1},"init_eqs_str":"a.rp_fltime=0;a.xp=0;a.yr=0;a.xs=0;a.rotation1=0;a.yp=0;a.smp=0;a.xr=0;a.q1=0;a.rp_fly=0;a.t3=0;a.ys=0;a.rp_flx=0;a.fly=0;a.rptime=0;a.tm=0;a.t2=0;a.perspective=0;a.masterspeed=0;a.flx=0;a.zp=0;a.t4=0;a.zr=0;","frame_eqs_str":"a.tm+=.02*a.mid;a.t2=.5*Math.sin(1*a.tm);a.t3=.5*Math.cos(1*a.tm);a.t4=.2*Math.sin(1*a.tm+.32*a.tm);","point_eqs_str":"a.masterspeed=604*a.q1;a.rotation1=.01*a.time;a.tm=a.time*a.masterspeed*.1;a.perspective=.7;a.rptime=.2*a.time;a.rp_fltime=a.time;a.rp_flx=Math.sin(a.rp_fltime);a.rp_fly=Math.cos(a.rp_fltime);a.xr=.25*Math.sin(a.rptime)*a.rp_fly;a.yr=.33*Math.cos(a.rptime);a.zr=Math.sin(a.rptime)*a.perspective*a.rp_flx;a.flx=Math.sin(14*a.tm);a.fly=Math.cos(14*a.tm);a.smp=6.283*a.sample;a.xp=.25*Math.sin(a.smp*a.masterspeed)*a.fly;a.yp=.33*Math.cos(a.smp*a.masterspeed);a.zp=Math.sin(a.smp*a.masterspeed)*\na.perspective*a.flx;a.xp*=.3;a.yp*=.3;a.zp*=.3;a.xp+=a.t2;a.zp+=a.t3;a.yp+=a.t4;a.zp+=2.1;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=a.ys+.5;a.r=1*(a.value1+.5);a.g=.1*(a.value1+.5);a.b=.8*(a.value1+.5);","init_eqs_eel":"","frame_eqs_eel":"tm=tm+mid*0.02;\nt2=sin(tm*1) * 0.5;\nt3=cos(tm*1) * 0.5;\nt4=sin(tm*1 + tm*0.32) * 0.2;","point_eqs_eel":"masterspeed=604*q1;\nrotation1=time*0.01;\n\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\nperspective=0.7;\n\n//generate rotation point\nrptime=time*0.2;\nrp_fltime=time;\nrp_flx=sin(rp_fltime);\nrp_fly=cos(rp_fltime);\nxr=sin(rptime )*0.25*rp_fly ;\nyr=cos(rptime)*0.33 ;\nzr=sin(rptime)*perspective*rp_flx;\n\n//plot x,y,z to point on sphere\nflx=sin(tm*14);\nfly=cos(tm*14);\nsmp=sample*6.283;\nxp=sin(smp*masterspeed )*0.25*fly ;\nyp=cos(smp*masterspeed )*0.33 ;\nzp=sin(smp*masterspeed )*perspective*flx;\nxp=xp*0.3;\nyp=yp*0.3;\nzp=zp*0.3;\n\n//add orbit value\nxp=xp+t2;\nzp=zp+t3;\nyp=yp+t4;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5;\ny=ys+0.5;\n\n\nr=(value1+0.5)*1.0;\ng=(value1+0.5)*0.1;\nb=(value1+0.5)*0.8;"},{"baseVals":{"enabled":1,"additive":1},"init_eqs_str":"a.rp_fltime=0;a.xp=0;a.yr=0;a.xs=0;a.rotation1=0;a.yp=0;a.smp=0;a.xr=0;a.q1=0;a.rp_fly=0;a.t3=0;a.ys=0;a.rp_flx=0;a.fly=0;a.rptime=0;a.tm=0;a.t2=0;a.perspective=0;a.masterspeed=0;a.flx=0;a.zp=0;a.t4=0;a.zr=0;","frame_eqs_str":"a.tm+=.02*a.treb;a.t2=.6*Math.sin(1*a.tm);a.t3=.6*Math.cos(1*a.tm);a.t4=.2*Math.sin(1*a.tm+.32*a.tm);","point_eqs_str":"a.masterspeed=604*a.q1;a.rotation1=.01*a.time;a.tm=a.time*a.masterspeed*.1;a.perspective=.7;a.rptime=.2*a.time;a.rp_fltime=a.time;a.rp_flx=Math.sin(a.rp_fltime);a.rp_fly=Math.cos(a.rp_fltime);a.xr=.25*Math.sin(a.rptime)*a.rp_fly;a.yr=.33*Math.cos(a.rptime);a.zr=Math.sin(a.rptime)*a.perspective*a.rp_flx;a.flx=Math.sin(14*a.tm);a.fly=Math.cos(14*a.tm);a.smp=6.283*a.sample;a.xp=.25*Math.sin(a.smp*a.masterspeed)*a.fly;a.yp=.33*Math.cos(a.smp*a.masterspeed);a.zp=Math.sin(a.smp*a.masterspeed)*\na.perspective*a.flx;a.xp*=.3;a.yp*=.3;a.zp*=.3;a.xp+=a.t2;a.zp+=a.t3;a.yp+=a.t4;a.zp+=2.1;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=a.ys+.5;a.r=.1*(a.value1+.5);a.g=.2*(a.value1+.5);a.b=1*(a.value1+.5);","init_eqs_eel":"","frame_eqs_eel":"tm=tm+treb*0.02;\nt2=sin(tm*1) * 0.6;\nt3=cos(tm*1) * 0.6;\nt4=sin(tm*1 + tm*0.32) * 0.2;","point_eqs_eel":"masterspeed=604*q1;\nrotation1=time*0.01;\n\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\nperspective=0.7;\n\n//generate rotation point\nrptime=time*0.2;\nrp_fltime=time;\nrp_flx=sin(rp_fltime);\nrp_fly=cos(rp_fltime);\nxr=sin(rptime )*0.25*rp_fly ;\nyr=cos(rptime)*0.33 ;\nzr=sin(rptime)*perspective*rp_flx;\n\n//plot x,y,z to point on sphere\nflx=sin(tm*14);\nfly=cos(tm*14);\nsmp=sample*6.283;\nxp=sin(smp*masterspeed )*0.25*fly ;\nyp=cos(smp*masterspeed )*0.33 ;\nzp=sin(smp*masterspeed )*perspective*flx;\nxp=xp*0.3;\nyp=yp*0.3;\nzp=zp*0.3;\n\n//add orbit value\nxp=xp+t2;\nzp=zp+t3;\nyp=yp+t4;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5;\ny=ys+0.5;\n\n\nr=(value1+0.5)*0.1;\ng=(value1+0.5)*0.2;\nb=(value1+0.5)*1.0;"}],"init_eqs_str":"a.pfdx_r=0;a.pfthresh=0;a.thresh=0;a.ladder=0;a.q1=0;a.leafset=0;a.dy_r=0;a.pfdy_r=0;a.leaf=0;a.dx_r=0;a.q2=0;a.q3=0;a.leafset=3;","frame_eqs_str":"a.wave_r=.5+.5*Math.sin(1.6*a.time);a.wave_g=.5+.5*Math.sin(4.1*a.time);a.wave_b=-1+(1-a.wave_r+1-a.wave_g);a.warp=0;a.pfthresh=3*above(a.bass_att,a.pfthresh)+(1-above(a.bass_att,a.pfthresh))*(.96*(a.pfthresh-1.3)+1.3);a.pfdx_r=.015*equal(a.pfthresh,3)*Math.sin(5*a.time)+(1-equal(a.pfthresh,3))*a.pfdx_r;a.pfdy_r=.015*equal(a.pfthresh,3)*Math.sin(6*a.time)+(1-equal(a.pfthresh,3))*a.pfdy_r;a.q1=a.wave_r;a.q2=a.wave_g;a.q3=a.wave_b;a.ob_r=1-.75*Math.abs(a.q1);a.ob_g=1-.75*Math.abs(a.q2);\na.ob_b=1-.75*Math.abs(a.q3);a.echo_zoom+=Math.min(Math.max(.75,50*a.pfdx_r),1);a.echo_orient+=16*a.pfdy_r;a.dx+=15.1*a.pfdx_r;a.dy+=15.1*a.pfdy_r;a.ob_size+=.005*a.bass_att;a.ib_a-=Math.min(.5,.5-Math.abs(a.dx+a.dy));","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.ladder=Math.abs(Math.sin(1*a.time));a.leaf=5*below(a.ladder,.2)+8*above(a.ladder,.2)*below(a.ladder,.4)+12*above(a.ladder,.4)*below(a.ladder,.6)+18*above(a.ladder,.6)*below(a.ladder,.8)+24*above(a.ladder,.8);a.leafset=.00001<Math.abs(equal(a.thresh,\n2))?a.leaf:a.leafset;a.zoom+=.05*(.75-Math.cos(a.leafset*a.rad))*(1-a.rad);a.zoom-=Math.abs(.05*(.75-Math.cos(4*a.rad)));","init_eqs_eel":"leafset = 3;","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(1.6*time);\nwave_g = 0.5 + 0.5*sin(4.1*time);\nwave_b = -1 + (1-wave_r + 1-wave_g);\nwarp = 0;\npfthresh = above(bass_att,pfthresh)*3+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);\npfdx_r = equal(pfthresh,3)*0.015*sin(5*time)+(1-equal(pfthresh,3))*pfdx_r;\npfdy_r = equal(pfthresh,3)*0.015*sin(6*time)+(1-equal(pfthresh,3))*pfdy_r;\nq1 = wave_r;\nq2 = wave_g;\nq3 = wave_b;\n\nob_r = 1-abs(q1)*0.75;\nob_g = 1-abs(q2)*0.75;\nob_b = 1-abs(q3)*0.75;\necho_zoom = echo_zoom + min(max(0.75,50*pfdx_r),1);\n\necho_orient = echo_orient + 16*pfdy_r;\n\ndx = dx + 15.1*pfdx_r;\ndy = dy + 15.1*pfdy_r;\nob_size = ob_size + 0.005*bass_att;\nib_a = ib_a - min(0.5,0.5-abs(dx+dy));","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\n\nladder = abs(sin(1*time));\nleaf = 5*below(ladder,0.2) + 8*above(ladder,0.2)*below(ladder,0.4) +\n12*above(ladder,0.4)*below(ladder,0.6) + 18*above(ladder,0.6)*below(ladder,0.8) +\n24*above(ladder,0.8);\nleafset = if(equal(thresh,2), leaf, leafset);\n\nzoom = zoom + 0.05*(0.75-cos(leafset*rad))*(1-rad);\nzoom = zoom - abs(0.05*(0.75-cos(4*rad)));","warp":" shader_body { \n  float k1_1;\n  float ky_2;\n  vec2 uv3_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - vec2(0.5, 0.5));\n  uv3_3 = ((40.0 + (30.0 * rand_preset)).x * tmpvar_4);\n  float tmpvar_5;\n  tmpvar_5 = dot (texture (sampler_noise_lq, uv), vec4(0.32, 0.49, 0.29, 0.0));\n  ky_2 = clamp (((\n    (-(uv3_3.y) / 50.0)\n   + \n    ((tmpvar_5 / (4.0 + (16.0 * rand_preset)).x) * cos((16.0 * tmpvar_5)))\n  ) + 0.2), 0.0, 1.0);\n  float tmpvar_6;\n  tmpvar_6 = (uv3_3.x * 2.0);\n  k1_1 = (tmpvar_6 - (sign(tmpvar_6) * 24.0));\n  k1_1 = (k1_1 - (sign(k1_1) * 9.0));\n  k1_1 = (k1_1 - (sign(k1_1) * 5.0));\n  float tmpvar_7;\n  tmpvar_7 = (6.0 * rand_preset.x);\n  k1_1 = (k1_1 + ((2.0 * \n    (k1_1 - ((3.0 + tmpvar_7) * sign(k1_1)))\n  ) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  k1_1 = (k1_1 + ((2.0 * \n    (k1_1 - (((3.0 + tmpvar_7) * 2.0) * sign(k1_1)))\n  ) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  k1_1 = (k1_1 + ((2.0 * \n    (k1_1 - (((3.0 + tmpvar_7) * 3.0) * sign(k1_1)))\n  ) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  k1_1 = (k1_1 + ((2.0 * \n    (k1_1 - (((3.0 + tmpvar_7) * 4.0) * sign(k1_1)))\n  ) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  k1_1 = (k1_1 + ((2.0 * \n    (k1_1 - (((3.0 + tmpvar_7) * 5.0) * sign(k1_1)))\n  ) * ky_2));\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\n  float tmpvar_8;\n  tmpvar_8 = clamp (k1_1, -1.6, 1.6);\n  k1_1 = tmpvar_8;\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = clamp ((clamp (\n    ((vec3((abs(\n      cos(tmpvar_8)\n    ) / 2.0)) * vec3(1.0, 0.0, 0.0)) * (1.0 - pow ((\n      (3.0 * tmpvar_4.y)\n     - 0.1), 4.0)))\n  , 0.0, 1.0) + (vec3(0.5, 0.0, 0.0) * \n    pow ((2.0 * tmpvar_4.y), 6.0)\n  )), 0.0, 1.0);\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret3_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (((uv - 0.5) * vec2(-1.0, 1.0)) + 0.5);\n  vec3 tmpvar_5;\n  tmpvar_5 = abs(((texture (sampler_main, uv).xyz * \n    clamp ((((\n      (texture (sampler_blur2, uv).xyz * scale2)\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\n  ) - (texture (sampler_main, tmpvar_4).xyz * \n    clamp ((((\n      (texture (sampler_blur2, tmpvar_4).xyz * scale2)\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\n  )));\n  ret3_2 = (tmpvar_5 * sqrt(tmpvar_5));\n  ret3_2 = (ret3_2 * vec3(0.9, 1.6, 2.3));\n  ret3_2 = (ret3_2 * 3.0);\n  vec3 tmpvar_6;\n  tmpvar_6 = pow (ret3_2, (1.0 - ret3_2));\n  ret3_2 = tmpvar_6;\n  uv_1 = (uv * 2.0);\n  vec2 tmpvar_7;\n  tmpvar_7 = floor((fract(\n    (uv_1 * 0.5)\n  ) * 2.0));\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_7)) + (tmpvar_7 * fract(\n    (1.0 - uv_1)\n  )));\n  vec2 tmpvar_8;\n  tmpvar_8.x = rad;\n  tmpvar_8.y = uv_1.y;\n  uv_1 = tmpvar_8;\n  vec2 tmpvar_9;\n  tmpvar_9 = ((0.5 - tmpvar_8.yx) + 0.5);\n  ret_3 = (texture (sampler_main, tmpvar_8.yx).xyz * clamp ((\n    (((texture (sampler_blur2, tmpvar_8.yx).xyz * scale2) + bias2) * 2.8)\n   - 0.13), 0.0, 1.0));\n  vec3 tmpvar_10;\n  tmpvar_10 = mix (ret_3, (texture (sampler_main, tmpvar_9).xyz * clamp (\n    ((((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2) * 2.8) - 0.13)\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\n  ret_3 = (tmpvar_10 * tmpvar_10);\n  ret_3 = (ret_3 * vec3(0.9, 1.6, 2.3));\n  ret_3 = (ret_3 * 3.0);\n  vec3 tmpvar_11;\n  tmpvar_11 = max (tmpvar_6, (0.8 * vec3((0.5 * \n    dot (ret_3, vec3(0.32, 0.49, 0.29))\n  ))));\n  ret_3 = tmpvar_11;\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = tmpvar_11;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"float3 ret1, tree;\nfloat mask1;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_hq.zw * 0.05;\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;\n\nfloat2 uv3 = uv1;\nfloat dist = 40 + 30*rand_preset;\n\nuv3 = dist * uv1;\n\nfloat zu = lum(tex2D (sampler_noise_lq,uv));\nfloat shape = 40* (q29+2);\nfloat leaf = 4 + 16*rand_preset;\nfloat ky = saturate(-uv3.y/50+zu/leaf*cos(16*zu)+.2);\n//Faktor an uv.y drehen\n\nfloat k1 = uv3.x*(2-.0*uv.y);;\n\nk1 = k1 - sign (k1)*24; //Verdoppelung\nk1 = k1 - sign (k1)*9; //Verdoppelung\nk1 = k1 - sign (k1)*5; //Verdoppelung\n\nint n = 1 ;\nfloat delta = .1;\nwhile (n <= 5) \n{\n  k1 += 2*(k1-(3+6*rand_preset.x)*n*sign(k1))*ky;\n  //Mult. mit n steuert \"Breitenwuchs\"\n  ky = saturate (ky - delta);\n  delta *= 1;\n  //delta ist vertikaler Verzweig. abstand\n  n++; \n}\n\nk1 = clamp(k1,-1.6,1.6);\n\ntree = abs(cos(k1))/2;\ntree *= float3 (1,.0,.0) ;\n\nret1 = saturate(tree*(1-pow(3*uv1.y-.1,4)));\n\nret = saturate( ret1+ float3(.5,0,0)*pow(2*uv1.y,6)); //Boden dunkel\n\n}","comp_hlsl":"shader_body\n{\n\n\n    float2 uv_echo2 = (uv - 0.5)*1.000*float2(-1,1) + 0.5;\n    float3 ret3 = tex2D(sampler_main, uv).xyz*+saturate(GetBlur2(uv)*2.8 - 0.13); \n    float3 ret4 = tex2D(sampler_main, uv_echo2).xyz*+saturate(GetBlur2(uv_echo2)*2.8 - 0.13);\n    ret3 = abs(ret3-ret4);\n    ret3 *= sqrt(ret3); //darken\n    ret3 *= float3(.9,1.6,2.3);\n    ret3 *= 3; //gamma\n    ret3 = pow(ret3,1-ret3);\n   \n\nuv *=2 ;\nfloat2 m = floor(frac(uv*0.5)*2);\nuv = frac(uv)*(1-m) + (m)*frac(1-uv);\n    uv = float2(rad,uv.y);\n\n\n    float2 uv_echo = (uv.yx - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = tex2D(sampler_main, uv.yx).xyz*+saturate(GetBlur2(uv.yx)*2.8 - 0.13); \n    float3 ret2 = tex2D(sampler_main, uv_echo).xyz*+saturate(GetBlur2(uv_echo)*2.8 - 0.13);\n    ret = lerp(ret,ret2,.5);\n    ret *= ret; //darken\n    ret *= float3(.9,1.6,2.3);\n    ret *= 3; //gamma\n    //ret *= 2;\n    //ret = pow(ret,5);\n    ret = .5*lum(ret);\n    ret = max(ret3,.8*ret.zxy);\n}"}