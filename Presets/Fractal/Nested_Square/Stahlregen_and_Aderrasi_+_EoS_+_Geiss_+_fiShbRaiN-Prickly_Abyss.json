{"version":2,"baseVals":{"rating":5,"gammaadj":1.21,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":7,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.772,"zoomexp":4.401,"zoom":1.031,"rot":0.003,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":1.46815,"tex_zoom":0.63904,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.1*a.time;a.sides=Math.floor(Math.abs(7*Math.sin(.5*a.time)));","init_eqs_eel":"","frame_eqs_eel":"ang=time*.1;\n\nsides=int(abs(sin(time*.5)*7));"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"rad":0.02743,"a":0.05,"r2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.1*a.time;a.r=.7+.3*Math.sin(a.time);a.g=.7+.3*Math.cos(a.time);a.b=.7+.3*Math.sin(a.time+.12);a.rad+=a.treb_att*a.bass_att*.5;a.x=.5+.5*Math.sin(a.time);","init_eqs_eel":"","frame_eqs_eel":"ang=time*.1;\n\nr=.7+(sin(time)*.3);\ng=.7+(cos(time)*.3);\nb=.7+(sin(time+.12)*.3);\n\nrad=rad+(treb_att*bass_att*.5);\nx=.5+(sin(time)*.5);"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"rad":0.02508,"a":0.05,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.25*a.time;a.g=.7+.3*Math.sin(a.time);a.b=.7+.3*Math.cos(a.time);a.r=.7+.3*Math.sin(a.time+.12);a.r2=.7+.3*Math.sin(a.time);a.g2=.7+.3*Math.cos(a.time);a.b2=.7+.3*Math.sin(a.time+.12);a.rad+=a.treb_att*a.bass_att*.5;a.y=.5+.25*Math.sin(a.time);","init_eqs_eel":"","frame_eqs_eel":"ang=time*.25;\n\ng=.7+(sin(time)*.3);\nb=.7+(cos(time)*.3);\nr=.7+(sin(time+.12)*.3);\n\nr2=.7+(sin(time)*.3);\ng2=.7+(cos(time)*.3);\nb2=.7+(sin(time+.12)*.3);\n\nrad=rad+(treb_att*bass_att*.5);\ny=.5+(sin(time)*.25);"},{"baseVals":{"additive":1,"textured":1,"rad":2.66717,"tex_zoom":0.60804,"a":0.1,"a2":0.01,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"a.branch=0;a.wx=0;a.sc=0;a.wy=0;a.d=0;a.wainc=0;a.wa=0;","frame_eqs_str":"","point_eqs_str":"a.branch=Math.floor(rand(2));a.wx=.00001<Math.abs(equal(a.sc,0))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,0))?0:a.wy;a.wx=.00001<Math.abs(equal(a.sc,1))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,1))?.1:a.wy;a.d=.00001<Math.abs(below(a.sc,2))?.3:.7*a.d;a.wainc=.00001<Math.abs(equal(a.branch,1))?.2+Math.sin(a.time):-.2;a.wa=.00001<Math.abs(below(a.sc,2))?1.57079635:a.wa+a.wainc;a.wx=.00001<Math.abs(above(a.sc,2))?a.wx+Math.cos(a.wa)*a.d:a.wx;a.wy=.00001<Math.abs(above(a.sc,2))?a.wy+\nMath.sin(a.wa)*a.d:a.wy;a.sc=.00001<Math.abs(equal(a.sc,11))?0:a.sc+1;a.a=.00001<Math.abs(below(a.sc,2))?0:.1;a.x=a.wx;a.y=a.wy;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\n\n//base\nwx=if(equal(sc,0),.5,wx);\nwy=if(equal(sc,0),0,wy);\n\nwx=if(equal(sc,1),.5,wx);\nwy=if(equal(sc,1),.1,wy);\n\n//calculate previous branch length\nd=if(below(sc,2),.3,.7*d);\n\n//angle\nwainc=if(equal(branch,1),.2+sin(time),-.2);\n\nwa=if(below(sc,2),3.1415927*.5,wa+wainc);\n\n//branches\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\n\n//sample count\nsc=if(equal(sc,11),0,sc+1);\n\na=if(below(sc,2),0,.1);\n\nx=wx;\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"a.branch=0;a.wx=0;a.sc=0;a.wy=0;a.d=0;a.wainc=0;a.wa=0;","frame_eqs_str":"","point_eqs_str":"a.branch=Math.floor(rand(2));a.wx=.00001<Math.abs(equal(a.sc,0))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,0))?1:a.wy;a.wx=.00001<Math.abs(equal(a.sc,1))?.5:a.wx;a.wy=.00001<Math.abs(equal(a.sc,1))?.9:a.wy;a.d=.00001<Math.abs(below(a.sc,2))?.3:.7*a.d;a.wainc=.00001<Math.abs(equal(a.branch,1))?.2+Math.sin(a.time):-.2;a.wa=.00001<Math.abs(below(a.sc,2))?4.71238905:a.wa+a.wainc;a.wx=.00001<Math.abs(above(a.sc,2))?a.wx+Math.cos(a.wa)*a.d:a.wx;a.wy=.00001<Math.abs(above(a.sc,2))?a.wy+\nMath.sin(a.wa)*a.d:a.wy;a.sc=.00001<Math.abs(equal(a.sc,11))?0:a.sc+1;a.a=.00001<Math.abs(below(a.sc,2))?0:.1;a.x=a.wx;a.y=a.wy;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\n\n//base\nwx=if(equal(sc,0),.5,wx);\nwy=if(equal(sc,0),1,wy);\n\nwx=if(equal(sc,1),.5,wx);\nwy=if(equal(sc,1),.9,wy);\n\n//calculate previous branch length\nd=if(below(sc,2),.3,.7*d);\n\n//angle\nwainc=if(equal(branch,1),.2+sin(time),-.2);\n\nwa=if(below(sc,2),3.1415927*1.5,wa+wainc);\n\n//branches\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\n\n//sample count\nsc=if(equal(sc,11),0,sc+1);\n\na=if(below(sc,2),0,.1);\n\nx=wx;\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"a.branch=0;a.wx=0;a.sc=0;a.wy=0;a.d=0;a.wainc=0;a.wa=0;","frame_eqs_str":"","point_eqs_str":"a.branch=Math.floor(rand(2));a.wx=.00001<Math.abs(equal(a.sc,0))?0:a.wx;a.wy=.00001<Math.abs(equal(a.sc,0))?.5:a.wy;a.wx=.00001<Math.abs(equal(a.sc,1))?.1:a.wx;a.wy=.00001<Math.abs(equal(a.sc,1))?.5:a.wy;a.d=.00001<Math.abs(below(a.sc,2))?.3:.7*a.d;a.wainc=.00001<Math.abs(equal(a.branch,1))?.25+Math.cos(a.time):-.25;a.wa=.00001<Math.abs(below(a.sc,2))?6.2831854:a.wa+a.wainc;a.wx=.00001<Math.abs(above(a.sc,2))?a.wx+Math.cos(a.wa)*a.d:a.wx;a.wy=.00001<Math.abs(above(a.sc,2))?\na.wy+Math.sin(a.wa)*a.d:a.wy;a.sc=.00001<Math.abs(equal(a.sc,11))?0:a.sc+1;a.a=.00001<Math.abs(below(a.sc,2))?0:.1;a.x=a.wx;a.y=a.wy;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\n\n//base\nwx=if(equal(sc,0),0,wx);\nwy=if(equal(sc,0),.5,wy);\n\nwx=if(equal(sc,1),.1,wx);\nwy=if(equal(sc,1),.5,wy);\n\n//calculate previous branch length\nd=if(below(sc,2),.3,.7*d);\n\n//angle\nwainc=if(equal(branch,1),.25+cos(time),-.25);\n\nwa=if(below(sc,2),3.1415927*2,wa+wainc);\n\n//branches\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\n\n//sample count\nsc=if(equal(sc,11),0,sc+1);\n\na=if(below(sc,2),0,.1);\n\nx=wx;\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"a.branch=0;a.wx=0;a.sc=0;a.wy=0;a.d=0;a.wainc=0;a.wa=0;","frame_eqs_str":"","point_eqs_str":"a.branch=Math.floor(rand(2));a.wx=.00001<Math.abs(equal(a.sc,0))?1:a.wx;a.wy=.00001<Math.abs(equal(a.sc,0))?.5:a.wy;a.wx=.00001<Math.abs(equal(a.sc,1))?.9:a.wx;a.wy=.00001<Math.abs(equal(a.sc,1))?.5:a.wy;a.d=.00001<Math.abs(below(a.sc,2))?.3:.7*a.d;a.wainc=.00001<Math.abs(equal(a.branch,1))?.25+Math.cos(a.time):-.25;a.wa=.00001<Math.abs(below(a.sc,2))?3.1415927:a.wa+a.wainc;a.wx=.00001<Math.abs(above(a.sc,2))?a.wx+Math.cos(a.wa)*a.d:a.wx;a.wy=.00001<Math.abs(above(a.sc,2))?\na.wy+Math.sin(a.wa)*a.d:a.wy;a.sc=.00001<Math.abs(equal(a.sc,11))?0:a.sc+1;a.a=.00001<Math.abs(below(a.sc,2))?0:.1;a.x=a.wx;a.y=a.wy;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\n\n//base\nwx=if(equal(sc,0),1,wx);\nwy=if(equal(sc,0),.5,wy);\n\nwx=if(equal(sc,1),.9,wx);\nwy=if(equal(sc,1),.5,wy);\n\n//calculate previous branch length\nd=if(below(sc,2),.3,.7*d);\n\n//angle\nwainc=if(equal(branch,1),.25+cos(time),-.25);\n\nwa=if(below(sc,2),3.1415927*1,wa+wainc);\n\n//branches\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\n\n//sample count\nsc=if(equal(sc,11),0,sc+1);\n\na=if(below(sc,2),0,.1);\n\nx=wx;\ny=wy;"}],"init_eqs_str":"","frame_eqs_str":"a.wave_r=Math.min(1,Math.max(0,1.3*(a.bass_att-1)));a.wave_g=.7*a.wave_r;a.wave_b=.1*a.wave_r;a.rot+=.01*(.6*Math.sin(.038*a.time)+.4*Math.sin(.054*a.time));a.dx+=.002*(.6*Math.sin(.434*a.time)+.4*Math.sin(.277*a.time));a.dy+=.002*(.6*Math.sin(.384*a.time)+.4*Math.sin(.477*a.time));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = min(1,max(0,(bass_att-1)*1.3));\nwave_g = wave_r*0.7;\nwave_b = wave_r*0.1;\nrot = rot + 0.010*( 0.60*sin(0.038*time) + 0.40*sin(0.054*time) );\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );","pixel_eqs_eel":"","warp":"uniform sampler2D sampler_prayerwheel;\n shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\n  ).xyz - 0.5) / 256.0));\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_prayerwheel, uv_orig);\n  vec2 x_3;\n  x_3 = (uv - uv_orig);\n  ret_1 = (mix (ret_1, tmpvar_2.xyz, vec3(clamp (\n    (1.0 - (abs((\n      dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29))\n     - \n      fract((time * 0.2))\n    )) * 33.0))\n  , 0.0, 1.0))) * (0.97 + (0.03 * \n    clamp ((sqrt(dot (x_3, x_3)) * 200.0), 0.0, 1.0)\n  )));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (texture (sampler_main, uv_1).xyz * 4.0);\n  ret_2 = (ret_2 - ((\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1) * 4.0));\n  ret_2 = -(ret_2);\n  ret_2 = ((pow (ret_2, vec3(0.5, 0.5, 0.7)) - 0.1) * 1.1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"#define sampler_pic sampler_prayerwheel\nsampler2D sampler_pic;\n\nshader_body\n{\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/256.0*1;\n\n    // mix in img...\n    float3 pic = tex2D(sampler_pic, uv_orig).xyz;\n    float lum = lum(pic);\n    float use_it = abs(lum - frac(time*0.2));\n    use_it = saturate(1 - use_it*33);\n    ret = lerp(ret, pic, use_it.xxx);\n\n    // darken over time\n    //ret -= 0.004;\n    //ret *= 0.99;\n    ret *= 0.97 + 0.03*saturate( length(uv - uv_orig)*200 );  // center only\n}\n","comp_hlsl":"shader_body\n{\n    uv = 0.05 + 0.9*uv;\n\n    // equivalent of a laplacian: [center*4 - each of the 4 neighbors*1]\n    ret = 0;\n    ret += tex2D(sampler_main, uv ).xyz*4;\n    ret -= GetBlur1(uv)*4;\nret *= -1;\n\n    // little bit of noise:\n    //ret *= 1 + 0.12*(tex2D(sampler_noise_lq, rand_frame.xy \n    //       + uv*texsize.xy*texsize_noise_lq.zw).xxx*2-1);\n \n    // palettize:\n    ret = pow(ret, float3(0.5, 0.5, 0.7));\n\n    ret = (ret-0.1)*1.1;\n   \n    //ret.xyz *= 2; // a little bit of overbright\n}\n\n"}