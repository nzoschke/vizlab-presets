{"version":1,"baseVals":{"rating":5,"decay":0.95,"echo_zoom":3.007504,"echo_orient":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":1,"wave_scale":0.880224,"wave_smoothing":0,"wave_mystery":0.933237,"zoomexp":1.074097,"fshader":1,"wave_r":0.541826,"wave_g":0.907035,"wave_b":0.436348,"wave_x":0.911091,"wave_y":0.486312,"ob_r":0.429397,"ob_g":0.567931,"ob_b":0.857834,"ob_a":0.309108,"ib_r":0.33151,"ib_g":0.27242,"ib_b":0.199382,"ib_a":0.856912,"mv_dx":-0.523285,"mv_dy":-0.160162,"mv_l":0.055,"mv_r":0.934155,"mv_g":0.462715,"mv_b":0.821308,"mv_a":0.850204},"shapes":[{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.ray=0;a.q1=0;a.b=0;a.a=0;","frame_eqs_str":"a.warp=0;a.wave_r=a.wave_r+.5*Math.sin(333*a.time)+.3*a.bass;a.wave_g=a.wave_g+.5*Math.sin(222*a.time)+.3*a.treb;a.wave_b=a.wave_b+.5*Math.sin(111*a.time)+.3*a.mid;a.rot=.4*Math.sin(.05*a.mid_att);a.wave_r+=.4*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.4*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.wave_b+=.4*(.6*Math.sin(.91*a.time)+.4*Math.sin(.92*a.time));a.wave_b=.00001<Math.abs(equal(a.bass+a.wave_y,a.bass+a.bass))?Math.min(Math.min(a.bass*a.treb,\na.time*a.treb_att),a.time+a.wave_g):a.treb_att*a.treb;a.ob_g=Math.max(.00001<Math.abs(below(a.frame-a.bass_att,a.wave_g*a.bass))?a.time+a.treb:a.wave_y*a.wave_g,a.wave_y*a.wave_r);a.wave_g=.00001<Math.abs(below(a.wave_r+a.time,a.treb-a.bass_att))?a.treb_att*a.treb:a.bass*a.bass;a.ib_a=Math.min(Math.min(a.wave_g*a.wave_r,a.treb*a.mid),a.wave_g-a.warp);a.wave_r=.00001<Math.abs(below(a.bass+a.bass_att,a.wave_b+a.frame))?a.wave_b*a.bass_att:a.wave_g*a.treb;a.mv_x=12+a.bass_att-a.warp;a.ob_a=Math.max(a.bass*\na.time,a.bass_att*a.wave_b);a.ib_g=a.treb+a.warp;a.dy=.00001<Math.abs(equal(a.treb+a.bass,a.mid_att*a.zoom))?a.bass_att-a.bass:a.bass_att-a.treb;a.wave_r=.00001<Math.abs(below(a.wave_r*a.treb_att,a.wave_b+a.frame))?Math.min(a.zoom+a.wave_g,a.wave_g*a.bass):a.wave_b-a.warp;a.ob_g=Math.max(.00001<Math.abs(equal(a.ob_g+a.wave_y,a.wave_b+a.wave_b))?a.wave_y+a.wave_b:a.wave_g*a.warp,a.treb*a.wave_g);a.wave_y=.00001<Math.abs(above(a.treb*a.treb,a.treb+a.treb))?a.wave_r*a.frame:a.mid*a.wave_x;a.dy=.00001<\nMath.abs(below(a.dy,-1))?-1:a.dy;a.dy=.00001<Math.abs(above(a.dy,1))?1:a.dy;a.wave_r=.00001<Math.abs(below(a.wave_r,0))?0:a.wave_r;a.wave_r=.00001<Math.abs(above(a.wave_r,1))?1:a.wave_r;a.wave_b=.00001<Math.abs(below(a.wave_b,0))?0:a.wave_b;a.wave_b=.00001<Math.abs(above(a.wave_b,1))?1:a.wave_b;a.wave_g=.00001<Math.abs(below(a.wave_g,0))?0:a.wave_g;a.wave_g=.00001<Math.abs(above(a.wave_g,1))?1:a.wave_g;a.wave_y=.00001<Math.abs(below(a.wave_y,0))?0:a.wave_y;a.wave_y=.00001<Math.abs(above(a.wave_y,\n1))?1:a.wave_y;a.ob_g=.00001<Math.abs(below(a.ob_g,0))?0:a.ob_g;a.ob_g=.00001<Math.abs(above(a.ob_g,1))?1:a.ob_g;a.ob_a=.00001<Math.abs(below(a.ob_a,0))?0:a.ob_a;a.ob_a=.00001<Math.abs(above(a.ob_a,1))?1:a.ob_a;a.ib_g=.00001<Math.abs(below(a.ib_g,0))?0:a.ib_g;a.ib_g=.00001<Math.abs(above(a.ib_g,1))?1:a.ib_g;a.ib_a=.00001<Math.abs(below(a.ib_a,0))?0:a.ib_a;a.ib_a=.00001<Math.abs(above(a.ib_a,1))?1:a.ib_a;a.mv_x=.00001<Math.abs(below(a.mv_x,0))?0:a.mv_x;a.mv_x=.00001<Math.abs(above(a.mv_x,64))?64:a.mv_x;\na.wave_r=.00001<Math.abs(below(a.wave_r,0))?0:a.wave_r;a.wave_r=.00001<Math.abs(above(a.wave_r,1))?1:a.wave_r;a.wave_g=.00001<Math.abs(below(a.wave_g,0))?0:a.wave_g;a.wave_g=.00001<Math.abs(above(a.wave_g,1))?1:a.wave_g;a.wave_b=.00001<Math.abs(below(a.wave_b,0))?0:a.wave_b;a.wave_b=.00001<Math.abs(above(a.wave_b,1))?1:a.wave_b;a.ob_g=.00001<Math.abs(below(a.ob_g,0))?0:a.ob_g;a.ob_g=.00001<Math.abs(above(a.ob_g,1))?1:a.ob_g;a.wave_y=.00001<Math.abs(below(a.wave_y,0))?0:a.wave_y;a.wave_y=.00001<Math.abs(above(a.wave_y,\n1))?1:a.wave_y;a.wave_b=.00001<Math.abs(below(a.wave_b,0))?0:a.wave_b;a.wave_b=.00001<Math.abs(above(a.wave_b,1))?1:a.wave_b;a.wave_g=.00001<Math.abs(below(a.wave_g,0))?0:a.wave_g;a.wave_g=.00001<Math.abs(above(a.wave_g,1))?1:a.wave_g;a.wave_r=.00001<Math.abs(below(a.wave_r,0))?0:a.wave_r;a.wave_r=.00001<Math.abs(above(a.wave_r,1))?1:a.wave_r;a.ob_a=.00001<Math.abs(below(a.ob_a,0))?0:a.ob_a;a.ob_a=.00001<Math.abs(above(a.ob_a,1))?1:a.ob_a;a.ob_g=.00001<Math.abs(below(a.ob_g,0))?0:a.ob_g;a.ob_g=.00001<\nMath.abs(above(a.ob_g,1))?1:a.ob_g;a.ib_g=.00001<Math.abs(below(a.ib_g,0))?0:a.ib_g;a.ib_g=.00001<Math.abs(above(a.ib_g,1))?1:a.ib_g;a.wave_y=.00001<Math.abs(below(a.wave_y,0))?0:a.wave_y;a.wave_y=.00001<Math.abs(above(a.wave_y,1))?1:a.wave_y;a.ib_a=.00001<Math.abs(below(a.ib_a,0))?0:a.ib_a;a.ib_a=.00001<Math.abs(above(a.ib_a,1))?1:a.ib_a;","pixel_eqs_str":"a.ray=pow(a.rad,1.8)+.05;a.zoom=1.4*div(a.ray,a.rad)+.3*Math.sin(5*a.ang*a.bass)+.2*a.bass;a.rot=0;a.dx=(a.x-.5+.25*(a.y-.5)*Math.sin(div(a.time,10)))*(2+.1*a.treb_att);a.dy=(a.y-.5)*(2-.1*a.treb_att);a.zoom=1;a.warp=1+(.00001<Math.abs(above(a.q1*a.b,a.sx*a.y))?a.zoomexp*a.a:a.bass_att*a.warp);a.warp=.00001<Math.abs(below(a.warp,.01))?.01:a.warp;a.warp=.00001<Math.abs(above(a.warp,100))?100:a.warp;","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\nwave_r = wave_r + .5*sin(time*333) + bass*.3;\nwave_g = wave_g + .5*sin(time*222) + treb*.3;\nwave_b = wave_b + .5*sin(time*111) + mid*.3;\nrot = .4*sin(mid_att*.05);\nwave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\n// Appended Code From C:\\Program Files\\Winamp\\Plugins\\MilkDrop\\Self\\Turbulence.milk\nwave_b = if(equal(bass + wave_y , bass + bass) , min(min(bass * treb , time * treb_att) , time + wave_g) , treb_att * treb);\nob_g = max(if(below(frame - bass_att , wave_g * bass) , time + treb , wave_y * wave_g) , wave_y * wave_r);\nwave_g = if(below(wave_r + time , treb - bass_att) , treb_att * treb , bass * bass);\nib_a = min(min(wave_g * wave_r , treb * mid) , wave_g - warp);\nwave_r = if(below(bass + bass_att , wave_b + frame) , wave_b * bass_att , wave_g * treb);\nmv_x = 12 + bass_att - warp;\nob_a = max(bass * time , bass_att * wave_b);\nib_G = treb + warp;\ndy = 0 + if(equal(treb + bass , mid_att * zoom) , bass_att - bass , bass_att - treb);\nwave_r = if(below(wave_r * treb_att , wave_b + frame) , min(zoom + wave_g , wave_g * bass) , wave_b - warp);\nob_g = max(if(equal(ob_g + wave_y , wave_b + wave_b) , wave_y + wave_b , wave_g * warp) , treb * wave_g);\nwave_y = if(above(treb * treb , treb + treb) , wave_r * frame , mid * wave_x);\ndy=if(below(dy,-1), -1, dy);\ndy=if(above(dy,1.0), 1.0, dy);\nwave_r=if(below(wave_r,0.0), 0.0, wave_r);\nwave_r=if(above(wave_r,1.0), 1.0, wave_r);\nwave_b=if(below(wave_b,0.0), 0.0, wave_b);\nwave_b=if(above(wave_b,1.0), 1.0, wave_b);\nwave_g=if(below(wave_g,0.0), 0.0, wave_g);\nwave_g=if(above(wave_g,1.0), 1.0, wave_g);\nwave_y=if(below(wave_y,0.0), 0.0, wave_y);\nwave_y=if(above(wave_y,1.0), 1.0, wave_y);\nob_g=if(below(ob_g,0.0), 0.0, ob_g);\nob_g=if(above(ob_g,1.0), 1.0, ob_g);\nob_a=if(below(ob_a,0.0), 0.0, ob_a);\nob_a=if(above(ob_a,1.0), 1.0, ob_a);\nib_g=if(below(ib_g,0.0), 0.0, ib_g);\nib_g=if(above(ib_g,1.0), 1.0, ib_g);\nib_a=if(below(ib_a,0.0), 0.0, ib_a);\nib_a=if(above(ib_a,1.0), 1.0, ib_a);\nmv_x=if(below(mv_x,0.0), 0.0, mv_x);\nmv_x=if(above(mv_x,64.0), 64.0, mv_x);\nwave_r=if(below(wave_r,0.0), 0.0, wave_r);\nwave_r=if(above(wave_r,1.0), 1.0, wave_r);\nwave_g=if(below(wave_g,0.0), 0.0, wave_g);\nwave_g=if(above(wave_g,1.0), 1.0, wave_g);\nwave_b=if(below(wave_b,0.0), 0.0, wave_b);\nwave_b=if(above(wave_b,1.0), 1.0, wave_b);\nob_g=if(below(ob_g,0.0), 0.0, ob_g);\nob_g=if(above(ob_g,1.0), 1.0, ob_g);\nwave_y=if(below(wave_y,0.0), 0.0, wave_y);\nwave_y=if(above(wave_y,1.0), 1.0, wave_y);\nwave_b=if(below(wave_b,0.0), 0.0, wave_b);\nwave_b=if(above(wave_b,1.0), 1.0, wave_b);\nwave_g=if(below(wave_g,0.0), 0.0, wave_g);\nwave_g=if(above(wave_g,1.0), 1.0, wave_g);\nwave_r=if(below(wave_r,0.0), 0.0, wave_r);\nwave_r=if(above(wave_r,1.0), 1.0, wave_r);\nob_a=if(below(ob_a,0.0), 0.0, ob_a);\nob_a=if(above(ob_a,1.0), 1.0, ob_a);\nob_g=if(below(ob_g,0.0), 0.0, ob_g);\nob_g=if(above(ob_g,1.0), 1.0, ob_g);\nib_G=if(below(ib_G,0.0), 0.0, ib_G);\nib_G=if(above(ib_G,1.0), 1.0, ib_G);\nwave_y=if(below(wave_y,0.0), 0.0, wave_y);\nwave_y=if(above(wave_y,1.0), 1.0, wave_y);\nib_a=if(below(ib_a,0.0), 0.0, ib_a);\nib_a=if(above(ib_a,1.0), 1.0, ib_a);","pixel_eqs_eel":"ray = pow(rad,1.8)+.05;\nzoom = (ray/rad)*1.4 + .3*sin(ang*(bass*5))+(bass*.2);\nrot=0;\ndx = ((x-.5)+(y-.5)*.25*sin(time/10))*(2+.1*treb_att);\ndy=(y-.5)*(2-.1*treb_att);\nzoom =1;\n;\nwarp = 1 + if(above(q1 * b , sx * y) , zoomexp * a , bass_att * warp);\nwarp=if(below(warp,0.01), 0.01, warp);\nwarp=if(above(warp,100.0), 100.0, warp);","warp":"","comp":"","warp_hlsl":"","comp_hlsl":""}