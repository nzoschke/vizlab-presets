{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.995,"echo_zoom":0.199862,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":4.099998,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.0018,"warpscale":1.0018,"zoomexp":0.39961,"zoom":0.998169,"rot":0.02,"warp":0.01,"sy":0.999999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_b":0.4,"ib_r":0,"ib_g":0.3,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":0.986086,"ang":0.753982,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":1},"init_eqs_str":"a.q2=0;a.q6=0;","frame_eqs_str":"a.rad=.9+.1*a.q2-.1*a.q6;","init_eqs_eel":"","frame_eqs_eel":"rad=.9+q2*.1-q6*.1;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.rad=0;a.xpos=0;a.q1=0;a.mytime=0;a.x=0;a.dy_r=0;a.dx_r=0;a.ypos=0;a.y=0;a.vol=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.wave_r+=.45*(.5*Math.sin(.701*a.time)+.3*Math.cos(.438*a.time));a.wave_b-=.4*(.5*Math.sin(4.782*a.time)+.5*Math.cos(.722*a.time));a.wave_g+=.4*Math.sin(1.931*a.time);a.vol=.15*(a.bass_att+a.bass+a.mid+a.mid_att);a.dx=.00001<Math.abs(below(a.q1,0))?a.dx-a.dx_r*a.q3*.3:a.dx;a.dy=.00001<Math.abs(below(a.q1,0))?a.dy-a.dx_r*a.q3*.3:a.dy;a.dx_r=.00001<Math.abs(equal(a.q3,0))?.00001<Math.abs(above(a.x,a.xpos))?a.dx-a.q1-a.xpos:a.dx+a.q2-a.xpos:a.dx;a.dy_r=.00001<Math.abs(equal(a.q3,\n0))?.00001<Math.abs(above(a.y,a.ypos))?a.dy-a.q1-a.ypos:a.dy+a.q2-a.ypos:a.dy;a.rot+=.03*(.6*Math.sin(.381*a.time)+.4*Math.sin(.479*a.time));a.mytime=.7;a.q1=Math.sin(a.time*a.mytime*4);a.q2=Math.sin(a.time*a.mytime*2);a.q3=Math.abs(a.rad-.5)*a.q2*a.q1;a.xpos=div(.5,a.vol);a.ypos=div(.5,a.vol);a.wave_x=.5;a.wave_y=.5;a.monitor=a.q3;a.ib_r=a.q3;a.ib_b=a.q2;a.ib_g=a.q1;","pixel_eqs_str":"a.zoom=a.zoom+.05*a.q3+.05*a.q1-a.vol;a.rot+=.16*(a.zoom-1);a.zoom=a.zoom+(a.ypos*a.q2-a.q1)*(.06+.12*Math.sin(.351*a.time))+(a.xpos*a.q2-a.q1)*(.06+.12*Math.cos(.351*a.time));","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.45*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));\nwave_b = wave_b - 0.4*(0.5*sin(time*4.782)+0.5*cos(time*0.722));\nwave_g = wave_g + 0.4*sin(time*1.931);\nvol=0.15*(bass_att+bass+mid+mid_att);\ndx=if(below(q1,0),dx-dx_r*q3*.3,dx);\ndy=if(below(q1,0),dy-dx_r*q3*.3,dy);\ndx_r=if(equal(q3,0),if(above(x,xpos),dx-q1-xpos,dx+q2-xpos),dx);\ndy_r=if(equal(q3,0),if(above(y,ypos),dy-q1-ypos,dy+q2-ypos),dy);\nrot = rot+0.030*( 0.60*sin(0.381*time) + 0.40*sin(0.479*time) );\nmytime=.7;\nq1=sin(time*mytime*4);\nq2=sin(time*mytime*2);\nq3=abs(rad-.5)*(q2*q1);\nxpos=.5/vol;\nypos=.5/vol;\nwave_x=.5;\nwave_y=.5;\nmonitor=q3;\nib_r=q3;\nib_b=q2;\nib_g=q1;","pixel_eqs_eel":"zoom=zoom+.05*q3+.05*q1-vol;\nrot=rot+(zoom-1.0)*0.16;\nzoom = zoom+(ypos*q2-q1)*(0.06+0.12*sin(time*0.351))+(xpos*q2-q1)*(0.06+0.12*cos(time*0.351));","warp":"","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\n  ), pow (hue_shader.zxy, ret_2)));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader.zxy,ret));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}