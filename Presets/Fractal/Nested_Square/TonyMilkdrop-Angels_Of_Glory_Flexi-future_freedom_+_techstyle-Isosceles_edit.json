{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"wave_dots":1,"wave_thick":1,"wrap":0,"invert":1,"wave_a":0.001,"wave_scale":0.5,"wave_smoothing":0,"zoomexp":100,"zoom":0.99504,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.004,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.q1=.0003*pow(1+1.2*a.bass+.4*a.bass_att+.1*a.treb+.1*a.treb_att+.1*a.mid+.1*a.mid_att,6);a.wave_r+=Math.sin(.339*a.time);a.wave_g+=Math.sin(.369*a.time);a.wave_b+=Math.sin(.399*a.time);a.wave_x+=.3*Math.sin(a.time);a.wave_y+=.3*Math.cos(a.time);a.ib_r+=Math.sin(.565*a.time);a.ib_g+=Math.sin(.615*a.time);a.ib_b+=Math.sin(.665*a.time);a.ob_r+=Math.cos(.565*a.time);a.ob_g+=Math.cos(.615*a.time);a.ob_b+=Math.cos(.665*a.time);a.warp=0;","pixel_eqs_str":"a.zoom-=.025*Math.sin(6.6*a.fps);a.zoom-=.035*Math.sin(11*a.ang+a.time);a.rot+=.005*Math.sin(5.8*a.fps);","init_eqs_eel":"","frame_eqs_eel":"q1 = 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\nwave_r = wave_r + 1*sin(time*0.339);\nwave_g = wave_g + 1*sin(time*0.369);\nwave_b = wave_b + 1*sin(time*0.399);\nwave_x = wave_x + 0.3*sin(time);\nwave_y = wave_y + 0.3*cos(time);\nib_r = ib_r + 1*sin(time*0.565);\nib_g = ib_g + 1*sin(time*0.615);\nib_b = ib_b + 1*sin(time*0.665);\nob_r = ob_r + 1*cos(time*0.565);\nob_g = ob_g + 1*cos(time*0.615);\nob_b = ob_b + 1*cos(time*0.665);\n//ib_size = ib_size + 0.035*bass;\nwarp = 0;","pixel_eqs_eel":"zoom = zoom - 0.025*sin(fps*6.6);\nzoom = zoom - 0.035*sin(ang*11+(time));\nrot = rot + 0.005*sin(fps*5.8);","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 2.0);\n  vec2 tmpvar_2;\n  tmpvar_2.x = dot (((\n    (2.0 * ((texture (sampler_blur1, (uv + \n      (vec2(1.0, 0.0) * tmpvar_1)\n    )).xyz * scale1) + bias1))\n   - \n    (2.0 * ((texture (sampler_blur1, (uv - \n      (vec2(1.0, 0.0) * tmpvar_1)\n    )).xyz * scale1) + bias1))\n  ) * 0.5), vec3(0.32, 0.49, 0.29));\n  tmpvar_2.y = dot (((\n    (2.0 * ((texture (sampler_blur1, (uv + \n      (vec2(0.0, 1.0) * tmpvar_1)\n    )).xyz * scale1) + bias1))\n   - \n    (2.0 * ((texture (sampler_blur1, (uv - \n      (vec2(0.0, 1.0) * tmpvar_1)\n    )).xyz * scale1) + bias1))\n  ) * 0.5), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (texture (sampler_fc_main, (uv + (\n    (tmpvar_2 * texsize.zw)\n   * 6.0))).xyz + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)).xxx - 0.5)\n   * 0.04) - 0.008));\n  ret = tmpvar_3.xyz;\n }","comp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\n shader_body { \n  vec3 ret_1;\n  xlat_mutabled = (texsize.zw * 1.5);\n  xlat_mutabledx = (texture (sampler_main, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz);\n  xlat_mutabledy = (texture (sampler_main, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz);\n  vec2 tmpvar_2;\n  tmpvar_2.x = xlat_mutabledx.y;\n  tmpvar_2.y = xlat_mutabledy.y;\n  vec2 x_3;\n  x_3 = (tmpvar_2 * 8.0);\n  ret_1 = (((texture (sampler_main, uv).x * \n    (1.0 - sqrt(dot (x_3, x_3)))\n  ) * pow (hue_shader, vec3(6.0, 6.0, 6.0))) * 1.4);\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.z;\n  tmpvar_4.y = xlat_mutabledy.z;\n  vec2 x_5;\n  x_5 = (tmpvar_4 * 4.0);\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (ret_1, vec3(1.0, 1.0, 1.0), vec3(sqrt(dot (x_5, x_5))));\n  ret_1 = tmpvar_6;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = tmpvar_6;\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw * 2;\n    float3 dx = ( 2*GetBlur1(uv + float2(1,0)*d) - 2*GetBlur1(uv-float2(1,0)*d) )*0.5;\n    float3 dy = ( 2*GetBlur1(uv + float2(0,1)*d) - 2*GetBlur1(uv-float2(0,1)*d) )*0.5;\nfloat2 my_uv = uv + float2(lum(dx),lum(dy))*texsize.zw*6;\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1.2 + rand_frame.xy;\n\nret = tex2d(sampler_fc_main, my_uv);\nret += (tex2D(sampler_noise_lq, dither_uv).xxx-0.5) *0.04 - 0.008;\n\n}","comp_hlsl":"float2 d;\nfloat3 dx, dy;\n\nshader_body\n{\n   d = texsize.zw*1.5;\n   dx = GetPixel(uv_orig + float2(1,0)*d) - GetPixel(uv_orig - float2(1,0)*d);\n   dy = GetPixel(uv_orig + float2(0,1)*d) - GetPixel(uv_orig - float2(0,1)*d);\n\n\nret = GetPixel(uv).x*(1-length(float2(dx.y,dy.y)*8))*pow(hue_shader,6)*1.4;\nret = lerp(ret,float3(1,1,1),length(float2(dx.z,dy.z)*4));\n\n\n}"}