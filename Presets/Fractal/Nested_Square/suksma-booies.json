{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.104,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.9995,"warp":0.01,"sx":1.22019,"sy":1.22019,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_a":0.4,"ib_r":1,"ib_g":1,"ib_b":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0.126,"y":0,"rad":1.41367,"tex_zoom":0.64033,"r":0.99,"g":0.99,"b":0.99,"r2":0.99,"g2":0.99,"b2":0.99,"a2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.ra=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.y=.001;a.x-=.75*a.q3;a.y-=a.q3;a.ra=.00001<Math.abs(a.ra)?a.ra:(1-2*Math.floor(rand(2)))*(.9+.0002*Math.floor(rand(1001)));a.tex_ang=a.q1*a.ra;a.tex_zoom=a.q2;","init_eqs_eel":"","frame_eqs_eel":"y = .001;\n\nx = x - q3*.75;\ny = y - q3;\n\nra = if(ra,ra,(1-int(rand(2))*2)*(.9 + int(rand(1001))*.001*.2));\n\ntex_ang = q1*ra;\ntex_zoom = q2;"},{"baseVals":{"enabled":1,"textured":1,"x":0.874,"y":0,"rad":1.41367,"tex_zoom":0.70732,"r":0.99,"g":0.99,"b":0.99,"r2":0.99,"g2":0.99,"b2":0.99,"a2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.ra=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.y=.001;a.x+=.75*a.q3;a.y-=a.q3;a.ra=.00001<Math.abs(a.ra)?a.ra:(1-2*Math.floor(rand(2)))*(.9+.0002*Math.floor(rand(1001)));a.tex_ang=a.q1*a.ra;a.tex_zoom=a.q2;","init_eqs_eel":"","frame_eqs_eel":"y = .001;\nx = x + q3*.75;\ny = y - q3;\n\nra = if(ra,ra,(1-int(rand(2))*2)*(.9 + int(rand(1001))*.001*.2));\n\ntex_ang = q1*ra;\ntex_zoom = q2;"},{"baseVals":{"enabled":1,"textured":1,"x":0.126,"y":1,"rad":1.41367,"tex_zoom":0.70732,"r":0.99,"g":0.99,"b":0.99,"r2":0.99,"g2":0.99,"b2":0.99,"a2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.ra=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.y=1;a.x-=.75*a.q3;a.y+=a.q3;a.ra=.00001<Math.abs(a.ra)?a.ra:(1-2*Math.floor(rand(2)))*(.9+.0002*Math.floor(rand(1001)));a.tex_ang=a.q1*a.ra;a.tex_zoom=a.q2;","init_eqs_eel":"","frame_eqs_eel":"y = 1;\nx = x - q3*.75;\ny = y + q3;\n\nra = if(ra,ra,(1-int(rand(2))*2)*(.9 + int(rand(1001))*.001*.2));\n\ntex_ang = q1*ra;\ntex_zoom = q2;"},{"baseVals":{"enabled":1,"textured":1,"x":0.874,"y":1,"rad":1.41367,"tex_zoom":0.70732,"r":0.99,"g":0.99,"b":0.99,"r2":0.99,"g2":0.99,"b2":0.99,"a2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.ra=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.x+=.75*a.q3;a.y+=a.q3;a.ra=.00001<Math.abs(a.ra)?a.ra:(1-2*Math.floor(rand(2)))*(.9+.0002*Math.floor(rand(1001)));a.tex_ang=a.q1*a.ra;a.tex_zoom=a.q2;","init_eqs_eel":"","frame_eqs_eel":"x = x + q3*.75;\ny = y + q3;\n\nra = if(ra,ra,(1-int(rand(2))*2)*(.9 + int(rand(1001))*.001*.2));\n\ntex_ang = q1*ra;\ntex_zoom = q2;"}],"waves":[{"baseVals":{"enabled":1,"samples":442,"spectrum":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"a.sp=0;a.q5=0;a.tic=0;a.tir=0;","frame_eqs_str":"a.tic=Math.min(a.time-a.tir,.1);a.tir=a.time;a.a=3*a.tic;","point_eqs_str":"a.x=a.sample;a.y=.5;a.sp=6.28*a.sample;a.r=.5+.25*(Math.sin(5.23*a.sp-a.q5)+Math.sin(6.94*a.sp+a.q5));a.g=.5+.25*(Math.sin(8.65*a.sp-a.q5)+Math.sin(4.28*a.sp+a.q5));a.b=.5+.25*(Math.sin(3.54*a.sp-a.q5)+Math.sin(7.86*a.sp+a.q5));","init_eqs_eel":"","frame_eqs_eel":"tic = min(time-tir,.1);\ntir = time;\n\na = tic*3;","point_eqs_eel":"x = sample;\ny = .5;\n\nsp = sample*6.28;\n\nr = .5 + .25*(sin(sp*5.23 - q5) + sin(sp*6.94 + q5));\ng = .5 + .25*(sin(sp*8.65 - q5) + sin(sp*4.28 + q5));\nb = .5 + .25*(sin(sp*3.54 - q5) + sin(sp*7.86 + q5));\n\n\n"},{"baseVals":{"enabled":1,"samples":452,"spectrum":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"a.sp=0;a.q5=0;a.tic=0;a.tir=0;","frame_eqs_str":"a.tic=Math.min(a.time-a.tir,.1);a.tir=a.time;a.a=3*a.tic;","point_eqs_str":"a.y=a.sample;a.x=.5;a.sp=6.28*a.sample;a.b=.5+.25*(Math.sin(5.23*a.sp-a.q5)+Math.sin(6.94*a.sp+a.q5));a.r=.5+.25*(Math.sin(8.65*a.sp-a.q5)+Math.sin(4.28*a.sp+a.q5));a.g=.5+.25*(Math.sin(3.54*a.sp-a.q5)+Math.sin(7.86*a.sp+a.q5));","init_eqs_eel":"","frame_eqs_eel":"tic = min(time-tir,.1);\ntir = time;\n\na = tic*3;","point_eqs_eel":"y = sample;\nx = .5;\n\nsp = sample*6.28;\n\nb = .5 + .25*(sin(sp*5.23 - q5) + sin(sp*6.94 + q5));\nr = .5 + .25*(sin(sp*8.65 - q5) + sin(sp*4.28 + q5));\ng = .5 + .25*(sin(sp*3.54 - q5) + sin(sp*7.86 + q5));\n\n\n"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tic=0;a.slide=0;a.toc=0;a.sw=0;a.vt=0;a.bt=0;a.q1=0;a.q5=0;a.mid_avg=0;a.tt=0;a.tin=0;a.ti=0;a.bass_avg=0;a.vav=0;a.mt=0;a.ra=0;a.treb_avg=0;a.sp=0;a.size=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.warp=0;a.tic=Math.min(a.time-a.tin,.1);a.tin=a.time;a.q1=.3*a.time;a.q2=.6;a.ti+=a.tic;a.ib_r=.5+.5*Math.sin(1.123*a.ti);a.ib_g=.5+.5*Math.sin(1.456*a.ti);a.ib_b=.5+.5*Math.sin(1.789*a.ti);a.ra=10;a.treb_avg=a.tic*(a.treb_avg*(div(1,a.tic)-a.ra)+a.ra*a.treb);a.mid_avg=a.tic*(a.mid_avg*(div(1,a.tic)-a.ra)+a.ra*a.mid);a.bass_avg=a.tic*(a.bass_avg*(div(1,a.tic)-a.ra)+a.ra*a.bass);a.vav=a.tic*(a.vav*(div(1,a.tic)-a.ra)+a.ra*(a.bass+a.treb+a.mid)*.33333);a.tt+=a.tic*a.treb_avg;\na.mt+=a.tic*a.mid_avg;a.bt+=a.tic*a.bass_avg;a.vt+=a.tic*a.vav;a.sp=.1*Math.abs(a.vav-a.slide);a.slide=.00001<Math.abs(above(a.slide,a.vav))?a.slide-a.tic*a.sp:a.slide+a.tic*a.sp+equal(a.toc,0)*a.vav*.7;a.toc=1;a.q1=.5*-a.vt;a.q2=.554*Math.min(a.slide,1.25);a.q3=.025+.0075*a.slide;a.q5=-1*(a.tt+a.mt);a.monitor=a.size;","pixel_eqs_str":"a.sw=Math.sin(75.36*a.x+a.time)+Math.cos(25.12*a.y+a.time)+Math.sin(18.84*a.x-a.time)+Math.cos(56.52*a.y-a.time);a.sx=1+.2*below(Math.abs(a.x-.5),.03)+.2*a.sw;a.sy=1+.2*below(Math.abs(a.y-.5),.04)+.2*a.sw;","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\ntic = min(time-tin,.1);\ntin = time;\n\nq1 = time*.3;\nq2 = .6;\n\nti = ti + tic;\nib_r = .5 + .5*sin(ti*1.123);\nib_g = .5 + .5*sin(ti*1.456);\nib_b = .5 + .5*sin(ti*1.789);\n\nra = 10;\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\n\ntt = tt + tic*treb_avg;\nmt = mt + tic*mid_avg;\nbt = bt + tic*bass_avg;\nvt = vt + tic*vav;\n\nsp = abs(vav - slide)*.1;\nslide = if(above(slide,vav),slide-tic*sp,slide+tic*sp + equal(toc,0)*vav*.7);\ntoc = 1;\n\nq1 = -vt*.5;\nq2 = min(slide,1.25)*.554;\nq3 = .025 + slide*.0075;\nq5 = (tt + mt)*-1;\n\nmonitor = size;","pixel_eqs_eel":"sw = sin(x*6.28*12 + time) + cos(y*6.28*4 + time) + sin(x*6.28*3 - time) + cos(y*6.28*9 - time);\n\nsx = 1 + below(abs(x-.5),.03)*.2 + sw*.2;\nsy = 1 + below(abs(y-.5),.04)*.2 + sw*.2;","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_4);\n  tmpvar_5[uint(0)].y = sin(tmpvar_4);\n  tmpvar_5[1u].x = -(sin(tmpvar_4));\n  tmpvar_5[1u].y = cos(tmpvar_4);\n  uv6_2 = (tmpvar_3 * tmpvar_5);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_3)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_6;\n  tmpvar_6 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_7.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_7 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_7, tmpvar_7))\n   * tmpvar_6)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((crisp_1 - \n    (dot (tmpvar_6, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec2 uv3_1;\n  vec2 uv2_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = (0.1 / (sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  ) + 0.1));\n  vec2 tmpvar_5;\n  float tmpvar_6;\n  tmpvar_6 = (ang / 3.14);\n  tmpvar_5.x = tmpvar_6;\n  tmpvar_5.y = (q27 * tmpvar_4);\n  float tmpvar_7;\n  tmpvar_7 = (0.1 * q30);\n  uv2_2.y = (tmpvar_5.y + tmpvar_7);\n  uv2_2.x = (tmpvar_6 + (0.2 * time));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_6;\n  tmpvar_8.y = (4.0 * tmpvar_4);\n  uv3_1.x = tmpvar_8.x;\n  uv3_1.y = (tmpvar_8.y - tmpvar_7);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = (((\n    (3.0 * max (((2.0 * texture (sampler_main, uv2_2).xyz) + texture (sampler_main, uv3_1).xyz), ((2.0 * \n      ((texture (sampler_blur2, fract(uv2_2)).xyz * scale2) + bias2)\n    ) + (\n      (texture (sampler_blur2, fract(uv3_1)).xyz * scale2)\n     + bias2))))\n   * rad) + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + ((tmpvar_9 * 2.0) * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"float3 color, mus;\nfloat dx,dy;\n\nshader_body {\nfloat corr = texsize.xy*texsize_noise_lq.zw;\n\nfloat2 uv1 = (uv-.5);\nfloat2 uv6 = uv1;\n\nfloat rota = lum(tex2D (sampler_noise_hq,uv/4))*q31;\n\nuv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));\nuv6 += sin(q32*uv1);\nmus = .2/(sqrt(uv6.x)+.2);\n\nmus *= float3 (1.1,1,.95);\nmus *= .9+.1*tex2D (sampler_noise_hq,uv);\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (0.005,0);\nfloat2 ver = float2 (0,.005);\n\nfloat dx = lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\nfloat dy = lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\n\nfloat2 zz = float2 (dx,dy);\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\nfloat3 crisp2 = tex2D(sampler_main,uv);\ncrisp += crisp2/2;\ncrisp *= .67;\ncrisp +=.08 * mus - length(zz)*blur;\n\nfloat3 ret1 = crisp - lum(blur)*.04;\nret = ret1 * .99 -  .04 ;\n}","comp_hlsl":"shader_body\n{\nfloat2 uv1 = (uv-0.5)*aspect.xy;\n\nfloat rad2 = length(uv1) + .1;\nfloat rad1 = .1/rad2 ;\n\nfloat2 uv2 = float2 (ang/3.14, q27*rad1);\nuv2.y = uv2.y  +.1*q30;\nuv2.x = uv2.x  +.2*time;\n\nfloat2 uv3 = float2 (ang/3.14, 4*rad1);\nuv3.y = uv3.y  -.1*q30;\n\n\nfloat3 crisp = 2*GetPixel(uv2) + GetPixel(uv3);\ncrisp = max(crisp,2*GetBlur2(frac(uv2)) + GetBlur2(frac(uv3)));\n\nfloat3 lay1 = float3 (0,0,1)*uv.y*pow(1-rad,8);\n\ncrisp = 3*crisp * pow(rad,1);\nfloat mask = saturate(1-4*rad);\n\nret = crisp + lay1*mask + mask * 2*GetBlur1(uv);\n\n}"}