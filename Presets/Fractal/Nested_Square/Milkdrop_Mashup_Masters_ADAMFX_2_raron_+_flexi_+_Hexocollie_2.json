{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.02,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":1.331,"zoom":0.99951,"warp":0.00564,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.05,"ob_r":0.01,"ob_a":0.2,"ib_size":0.05,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":0.1,"mv_x":32,"mv_y":24,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":1,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":1.67089,"tex_ang":0.94248,"tex_zoom":0.53426,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0.17},"init_eqs_str":"a.flux=0;a.q5=0;a.fluxs=0;a.advflux=0;a.q3=0;a.adv=0;a.advs=0;","frame_eqs_str":"a.flux=9*a.q5;a.fluxs=Math.max(a.flux,0);a.fluxs=Math.min(a.fluxs,1);a.advflux=a.q3*a.fluxs+-a.q3*(1-a.fluxs);a.adv+=a.advflux;a.advs=div(a.adv,256);a.ang=a.advs;a.rad=1.671+div(a.q3,25);","init_eqs_eel":"","frame_eqs_eel":"flux=q5*9;\nfluxs=max(flux,0);\nfluxs=min(fluxs,1);\nadvflux=(q3*fluxs) + (-q3 * (1-fluxs));\nadv=adv+advflux;\nadvs=adv/256;\n\n\nang=advs;\nrad=1.671 + q3/25"},{"baseVals":{"sides":3,"x":0.35,"g":1,"b":1,"g2":0,"b2":0.1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"y=0.1 + q2*0.4;\nrad=q2/2;\nang=-q2*2","init_eqs_eel":"","frame_eqs_eel":"y=0.1 + q2*0.4;\nrad=q2/2;\nang=-q2*2"},{"baseVals":{"enabled":1,"sides":3,"x":0.59,"rad":0.44484,"r":0,"r2":0.1,"g2":0.05,"border_a":0},"init_eqs_str":"a.rotator=0;a.dir=0;a.mover=0;a.dir=3;a.mover=0;a.rotator=.255;","frame_eqs_str":"a.ang=a.rotator;a.x=.00001<Math.abs(equal(a.dir,1))?1-a.mover:.00001<Math.abs(equal(a.dir,1.5))?.15:.00001<Math.abs(equal(a.dir,2))?0:.00001<Math.abs(equal(a.dir,2.5))?0:.00001<Math.abs(equal(a.dir,3))?0+a.mover:.00001<Math.abs(equal(a.dir,3.5))?1:(equal(a.dir,4),1);a.y=.00001<Math.abs(equal(a.dir,1))?1:.00001<Math.abs(equal(a.dir,1.5))?1:.00001<Math.abs(equal(a.dir,2))?1-a.mover:.00001<Math.abs(equal(a.dir,2.5))?0:.00001<Math.abs(equal(a.dir,3))?0:.00001<Math.abs(equal(a.dir,\n3.5))?0:.00001<Math.abs(equal(a.dir,4))?0+a.mover:1;a.mover=.00001<Math.abs(equal(a.dir,1))?a.mover+.005:.00001<Math.abs(equal(a.dir,1.5))?0:.00001<Math.abs(equal(a.dir,2))?a.mover+.005:.00001<Math.abs(equal(a.dir,2.5))?0:.00001<Math.abs(equal(a.dir,3))?a.mover+.005:.00001<Math.abs(equal(a.dir,3.5))?0:.00001<Math.abs(equal(a.dir,4))?a.mover+.005:0;a.dir=.00001<Math.abs(equal(a.dir,1))?.00001<Math.abs(above(a.mover,.995))?1.5:a.dir:.00001<Math.abs(equal(a.dir,1.5))?.00001<Math.abs(below(a.rotator,\n-1.29))?2:a.dir:.00001<Math.abs(equal(a.dir,2))?.00001<Math.abs(above(a.mover,.995))?2.5:a.dir:.00001<Math.abs(equal(a.dir,2.5))?.00001<Math.abs(below(a.rotator,-2.85))?3:a.dir:.00001<Math.abs(equal(a.dir,3))?.00001<Math.abs(above(a.mover,.995))?3.5:a.dir:.00001<Math.abs(equal(a.dir,3.5))?.00001<Math.abs(below(a.rotator,-4.44))?4:a.dir:.00001<Math.abs(equal(a.dir,4))?.00001<Math.abs(above(a.mover,.995))?4.5:a.dir:.00001<Math.abs(equal(a.dir,4.5))?.00001<Math.abs(below(a.rotator,-5.94))?1:a.dir:a.dir;\na.rotator=.00001<Math.abs(equal(a.dir,1.5))?.00001<Math.abs(above(a.rotator,-1.31))?a.rotator-.05:a.rotator:.00001<Math.abs(equal(a.dir,2))?-1.3:.00001<Math.abs(equal(a.dir,2.5))?.00001<Math.abs(above(a.rotator,-2.87))?a.rotator-.05:a.rotator:.00001<Math.abs(equal(a.dir,3))?-2.86:.00001<Math.abs(equal(a.dir,3.5))?.00001<Math.abs(above(a.rotator,-4.46))?a.rotator-.05:a.rotator:.00001<Math.abs(equal(a.dir,4))?-4.45:.00001<Math.abs(equal(a.dir,4.5))?.00001<Math.abs(above(a.rotator,-5.97))?a.rotator-\n.05:a.rotator:.00001<Math.abs(equal(a.dir,4))?-5.96:.26;a.b=above(a.mid,1.5);a.r2=above(a.mid,1.5);a.g2=above(a.mid,1.5);a.b2=above(a.mid,1.5);","init_eqs_eel":"dir = 3;\nmover = 0;\nrotator = .255","frame_eqs_eel":"ang = rotator;\nx = if(equal(dir,1),1 - mover,if(equal(dir,1.5),.15,if(equal(dir,2),0,if(equal(dir,2.5),0, if(equal(dir,3),0+mover,if(equal(dir,3.5),1,if(equal(dir,4),1,1)))))));\ny = if(equal(dir,1),1,if(equal(dir,1.5),1,if(equal(dir,2),1 - mover,if(equal(dir,2.5),0, if(equal(dir,3),0,if(equal(dir,3.5),0,if(equal(dir,4),0+mover,1)))))));\nmover = if(equal(dir,1),mover + .005,if(equal(dir,1.5),0,if(equal(dir,2),mover + .005,if(equal(dir,2.5),0, if(equal(dir,3),mover+.005,if(equal(dir,3.5),0,if(equal(dir,4),mover+.005,0)))))));\ndir = if(equal(dir,1),if(above(mover,.995),1.5,dir),if(equal(dir,1.5),if(below(rotator,-1.29),2,dir), if(equal(dir,2),if(above(mover,.995),2.5,dir),if(equal(dir,2.5),if(below(rotator,-2.85),3,dir), if(equal(dir,3),if(above(mover,.995),3.5,dir),if(equal(dir,3.5),if(below(rotator,-4.44),4,dir), if(equal(dir,4),if(above(mover,.995),4.5,dir),if(equal(dir,4.5),if(below(rotator,-5.94),1,dir),dir))))))));\nrotator = if(equal(dir,1.5),if(above(rotator,-1.31),rotator - .05,rotator),if(equal(dir,2),-1.3, if(equal(dir,2.5),if(above(rotator,-2.87),rotator-.05,rotator),if(equal(dir,3),-2.86, if(equal(dir,3.5),if(above(rotator,-4.46),rotator-.05,rotator),if(equal(dir,4),-4.45, if(equal(dir,4.5),if(above(rotator,-5.97),rotator-.05,rotator),if(equal(dir,4),-5.96,.26))))))));\n\n//Ok, enough with the crazy ifs, we got our tram moving, now for some reaction.\n\nb = above(mid,1.5);\nr2 = above(mid,1.5);\ng2 = above(mid,1.5);\nb2 = above(mid,1.5);"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"x":0.84,"r":0.98,"g":1,"b":0.98,"a":0.3,"g2":0.09,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.x=.4*Math.sin(div(a.time,2))+.5;a.y=.4*Math.sin(a.time)+.5;a.rad=div(a.q1*a.q1,2);a.ang=4*a.q1;a.r=.7+.5*Math.sin(div(a.time,2));a.g=.7+.5*Math.sin(div(a.time,2)+2);a.b=.7+.5*Math.sin(div(a.time,2)+4);","init_eqs_eel":"","frame_eqs_eel":"x=sin(time/2)*0.4 + 0.5;\ny=sin(time)*0.4+0.5;\nrad=(q1*q1)/2;;\nang=q1*4;\n\nr=0.70 + (sin(time/2))*0.50;\ng=0.70 + (sin(time/2 + 2)) * 0.50;\nb=0.70 + (sin(time/2 + 4)) * 0.50"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.rad=0;a.t1=0;a.bamx=0;a.bom=0;a.q6=0;a.speedb=0;a.q1=0;a.q5=0;a.x=0;a.rox=0;a.wecrut=0;a.t3=0;a.t6=0;a.weconz=0;a.rhox=0;a.q4=0;a.t7=0;a.daz=0;a.speedc=0;a.q2=0;a.boom=0;a.wec=0;a.speeda=0;a.speed=0;a.q3=0;a.t4=0;a.shox=0;a.tri=0;a.q8=0;a.mv_x=60;a.mv_y=89;a.monitor=a.echo_zoom;","frame_eqs_str":"a.zoom=Math.sin(a.echo_zoom-a.q4);a.cx=.8*Math.sin(1.5*div(a.time,2))+.5;a.cy=.8*Math.sin(1.1*a.time)+.5;a.ob_r=1.4*a.time;a.ob_b=1.2*a.time;a.ob_g=1*a.time;a.ib_r=.5*a.time;a.ib_b=.6*a.time;a.ib_g=.7*a.time;a.rot=.1;a.decay=.999999;a.wec=Math.sin(a.time-1);a.weconz=(a.q4-a.q2)*a.wec;a.wecrut=3*a.tri-Math.sin(a.time-a.rad);a.tri=a.q8;a.t1=a.wec+a.x;a.t3=a.tri*a.weconz;a.t6=a.wecrut;a.t7=a.wec*a.time;a.q1=a.wec;a.q2=a.tri-a.t1;a.q6=div(2*a.weconz,a.time);","pixel_eqs_str":"a.bamx=Math.sin(a.time-a.bass);a.boom=Math.sin(mod(a.bamx,a.boom)*a.bass*a.time);a.bom=2*rand(.1*(a.time-a.boom)*(a.time-a.bamx));a.speed=mod(Math.sin((a.speeda-a.speedb)*(a.speedb-a.speeda)),a.speedc);a.speeda=Math.sin((3*a.bass-a.speedb)*a.time);a.speedb=Math.sin((3*a.mid+a.speedc)*a.time);a.speedc=Math.sin((3*a.treb-a.speeda)*a.time);a.shox=Math.cos(a.q3-a.q8)*a.speed;a.rhox=mod(Math.sin(a.q5+a.speedb),a.speed);a.rox=div(a.shox-a.rhox,2);a.daz=a.speed*(a.time-1)*a.bass*.5+\n.5;a.wec=Math.sin(a.time-1);a.weconz=a.t4-a.q4;a.wecrut=3*a.tri-Math.sin(a.time-a.rad);a.tri=a.q8;a.warp=1.42;a.q3=a.treb*a.bom;a.q8=a.bass*a.boom;a.q5=a.mid*a.rox;a.q6=mod(a.rox,a.speed);a.q4=a.daz-a.q4;a.wec=Math.sin(a.time-1);a.weconz=(a.q4-a.q2)*a.wec;a.wecrut=3*a.tri-Math.sin(a.time-a.rad);a.tri=a.q8;a.t1=a.wec+a.x;a.t3=a.tri*a.weconz;a.t6=a.wecrut;a.t7=a.wec*a.time;","init_eqs_eel":"mv_x = (60);\nmv_y = 89;\nmonitor = echo_zoom;","frame_eqs_eel":"zoom =sin( echo_zoom-q4);\n\ncx = (sin((time/2)*1.5)*0.8 + 0.5);\ncy = (sin(time*1.1)*0.8 + 0.5);\n\n\n\nob_r = 2*(time*.7);\nob_b = 2*(time*.6);\nob_g = 2*(time*.5);\n\nib_r = 1*(time*.5);\nib_b = 1*(time*.6);\nib_g = 1*(time*.7);\n\n\nrot = 0.1;\n\n\n\ndecay = .999999;\n\n\nwec=sin(time-1);\nweconz=(q4-q2)*wec;\nwecrut=(tri*3)-(sin(time-rad));\ntri= q8;\n\n\nt1 = wec+x;\nt3 = tri*weconz;\nt6 = wecrut;\nt7 = wec * time;\n\n\nq1 = wec;\nq2 = tri-t1;\nq6 = (weconz*2)/time;","pixel_eqs_eel":"bamx=sin(time-bass);\nboom=sin(((bamx%boom)*bass)*time);\nbom=(rand(0.1*(time-boom)*(time-bamx))*2);\n\n\nspeed = sin(((speedA-speedB)*(speedB-speedA)))%speedC;\nspeedA =  sin((bass*3 - speedB )* time);\nspeedB =  sin((mid*3 + speedC ) * time);\nspeedC = sin((treb*3 - speedA ) * time);\n\nshox = cos(q3 - q8)*speed;\nrhox = sin(q5 + speedB)%speed;\nrox = (shox - rhox)/2;\n\ndaz=((speed*(time-1))*bass)* 0.5 + 0.5;\n\n\n\n\nwec=sin(time-1);\nweconz=t4-q4;\nwecrut=(tri*3)-(sin(time-rad));\ntri= q8;\n\n\n\nwarp = 1.420;\n\nq3 = treb*bom;\nq8 = bass* boom;\nq5 = mid*rox;\nq6 = rox%speed;\nq4 = daz - q4;\n\n\nwec=sin(time-1);\nweconz=(q4-q2)*wec;\nwecrut=(tri*3)-(sin(time-rad));\ntri= q8;\n\n\n\nt1 = wec+x;\nt3 = tri*weconz;\nt6 = wecrut;\nt7 = wec * time;","warp":" shader_body { \n  vec3 ret_1;\n  ret_1.z = (texture (sampler_main, uv_orig).xyz - 0.004).z;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 2.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  ret_1.x = (texture (sampler_main, ((\n    mix (uv_orig, uv, vec2(-0.4, -0.4))\n   - \n    (tmpvar_5 * texsize.zw)\n  ) + (\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5).xy * texsize.zw)\n   * 2.0))).x - 0.001);\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.y;\n  tmpvar_6.y = tmpvar_4.y;\n  ret_1.y = max (((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1).x, (texture (sampler_fc_main, (\n    (uv + (vec2(0.0, 1.0) * texsize.zw))\n   - \n    ((tmpvar_6 * texsize.zw) * 2.0)\n  )).y - 0.004));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.0);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\n  ), pow (hue_shader, ret_2)));\n  ret_2 = (ret_2 * hue_shader);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\nret = GetPixel(uv_orig) - 0.004;\n\n\nfloat2 d = texsize.zw*2;\nfloat3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\nfloat3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n\nfloat2 uv_red = lerp(uv_orig,uv,-.4) - float2(dx.x,dy.x)*texsize.zw + (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)*texsize.zw*2;\nret.x = GetPixel(uv_red).x - 0.001;\n\nfloat2 uv_green = lerp(uv_orig,uv,1) + float2(0,1)*texsize.zw - float2(dx.y,dy.y)*texsize.zw*2;\nret.y = max( GetBlur1(uv_orig).x, tex2d(sampler_fc_main, uv_green).y - 0.004);\n\n//ret = 0;\n}","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1;\n    float3 what = lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader,ret));\n    ret *=what;\n    ret *= hue_shader;\n\n    //ret *= 1.5; //old gamma effect    \n}"}