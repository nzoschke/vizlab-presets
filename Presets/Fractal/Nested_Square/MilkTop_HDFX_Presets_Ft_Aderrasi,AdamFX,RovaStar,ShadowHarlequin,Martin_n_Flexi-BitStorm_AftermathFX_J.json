{"version":2,"baseVals":{"rating":5,"gammaadj":1.42,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.325,"wave_smoothing":0.9,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.335,"warpscale":3.928,"zoomexp":2.1,"zoom":0.961,"warp":1.77101,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":0.5,"ib_size":0.029,"ib_r":0.34,"ib_g":0.34,"ib_b":0.34,"ib_a":0.1,"mv_x":6.4,"mv_y":4.8,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.blah=0;","frame_eqs_str":"a.wave_x+=.29*(.6*Math.sin(2.121*a.time)+.4*Math.sin(1.621*a.time));a.wave_y+=.29*(.6*Math.sin(1.742*a.time)+.4*Math.sin(2.322*a.time));a.wave_r+=.35*(.6*Math.sin(.823*a.time)+.4*Math.sin(.916*a.time));a.wave_g+=.35*(.6*Math.sin(.9*a.time)+.4*Math.sin(1.023*a.time));a.wave_b+=.35*(.6*Math.sin(.808*a.time)+.4*Math.sin(.949*a.time));a.blah=div(.5,a.wave_r+a.wave_g+a.wave_b);a.wave_r*=a.blah;a.wave_g*=a.blah;a.wave_b*=a.blah;a.rot+=.35*(.6*Math.sin(.21*a.time)+.3*Math.sin(.339*\na.time));a.cx+=.3*(.6*Math.sin(.374*a.time)+.14*Math.sin(.194*a.time));a.cy+=.37*(.6*Math.sin(.274*a.time)+.1*Math.sin(.394*a.time));a.dx+=.01*(.6*Math.sin(.324*a.time)+.4*Math.sin(.234*a.time));a.dy+=.01*(.6*Math.sin(.244*a.time)+.4*Math.sin(.264*a.time));a.ib_r+=.2*Math.sin(.5413*a.time);a.ib_g+=.2*Math.sin(.6459*a.time);a.ib_b+=.2*Math.sin(.7354*a.time);a.blah=3*div(12.4,a.ib_r+a.ib_g+a.ib_b);a.ib_r*=a.blah;a.ib_g*=a.blah;a.ib_b*=a.blah;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_x = wave_x + 0.2900*( 0.60*sin(2.121*time) + 0.40*sin(1.621*time) );\nwave_y = wave_y + 0.2900*( 0.60*sin(1.742*time) + 0.40*sin(2.322*time) );\nwave_r = wave_r + 0.350*( 0.60*sin(0.823*time) + 0.40*sin(0.916*time) );\nwave_g = wave_g + 0.350*( 0.60*sin(0.900*time) + 0.40*sin(1.023*time) );\nwave_b = wave_b + 0.350*( 0.60*sin(0.808*time) + 0.40*sin(0.949*time) );\nblah = 0.5/(wave_r+wave_g+wave_b);\nwave_r = wave_r*blah; wave_g = wave_g*blah; wave_b = wave_b*blah;\nrot = rot + 0.35*( 0.60*sin(0.21*time) + 0.30*sin(0.339*time) );\ncx = cx + 0.30*( 0.60*sin(0.374*time) + 0.14*sin(0.194*time) );\ncy = cy + 0.37*( 0.60*sin(0.274*time) + 0.10*sin(0.394*time) );\ndx = dx + 0.01*( 0.60*sin(0.324*time) + 0.40*sin(0.234*time) );\ndy = dy + 0.01*( 0.60*sin(0.244*time) + 0.40*sin(0.264*time) );\nib_r = ib_r + 0.2*sin(time*0.5413);\nib_g = ib_g + 0.2*sin(time*0.6459);\nib_b = ib_b + 0.2*sin(time*0.7354);\nblah = 12.4/(ib_r+ib_g+ib_b)*3;\nib_r = ib_r*blah; ib_g = ib_g*blah; ib_b = ib_b*blah;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.2, 0.2));\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = dot (((\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_3.y = dot (((\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\n    (tmpvar_3 * texsize.zw)\n   * 4.0))) - 0.01).xyz;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret3_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (((uv - 0.5) * vec2(-1.0, 1.0)) + 0.5);\n  vec3 tmpvar_5;\n  tmpvar_5 = abs(((texture (sampler_main, uv).xyz * \n    clamp ((((\n      (texture (sampler_blur2, uv).xyz * scale2)\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\n  ) - (texture (sampler_main, tmpvar_4).xyz * \n    clamp ((((\n      (texture (sampler_blur2, tmpvar_4).xyz * scale2)\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\n  )));\n  ret3_2 = (tmpvar_5 * sqrt(tmpvar_5));\n  ret3_2 = (ret3_2 * vec3(0.9, 1.6, 2.3));\n  ret3_2 = (ret3_2 * 3.0);\n  vec3 tmpvar_6;\n  tmpvar_6 = pow (ret3_2, (1.0 - ret3_2));\n  ret3_2 = tmpvar_6;\n  uv_1 = (uv * 2.0);\n  vec2 tmpvar_7;\n  tmpvar_7 = floor((fract(\n    (uv_1 * 0.5)\n  ) * 2.0));\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_7)) + (tmpvar_7 * fract(\n    (1.0 - uv_1)\n  )));\n  vec2 tmpvar_8;\n  tmpvar_8.x = rad;\n  tmpvar_8.y = uv_1.y;\n  uv_1 = tmpvar_8;\n  vec2 tmpvar_9;\n  tmpvar_9 = ((0.5 - tmpvar_8.yx) + 0.5);\n  ret_3 = (texture (sampler_main, tmpvar_8.yx).xyz * clamp ((\n    (((texture (sampler_blur2, tmpvar_8.yx).xyz * scale2) + bias2) * 2.8)\n   - 0.13), 0.0, 1.0));\n  vec3 tmpvar_10;\n  tmpvar_10 = mix (ret_3, (texture (sampler_main, tmpvar_9).xyz * clamp (\n    ((((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2) * 2.8) - 0.13)\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\n  ret_3 = (tmpvar_10 * tmpvar_10);\n  ret_3 = (ret_3 * vec3(0.9, 1.6, 2.3));\n  ret_3 = (ret_3 * 3.0);\n  vec3 tmpvar_11;\n  tmpvar_11 = max (tmpvar_6, (0.8 * vec3((0.5 * \n    dot (ret_3, vec3(0.32, 0.49, 0.29))\n  ))));\n  ret_3 = tmpvar_11;\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = tmpvar_11;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\n\nuv = lerp(uv_orig,uv,0.2);\n\nfloat2 d = texsize.zw * 4;\nfloat3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\nfloat3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n\nuv += float2(lum(dx),lum(dy))*texsize.zw*4;\nret = tex2d(sampler_fc_main, uv) - 0.01;\n\n}","comp_hlsl":"shader_body\n{\n\n\n    float2 uv_echo2 = (uv - 0.5)*1.000*float2(-1,1) + 0.5;\n    float3 ret3 = tex2D(sampler_main, uv).xyz*+saturate(GetBlur2(uv)*2.8 - 0.13); \n    float3 ret4 = tex2D(sampler_main, uv_echo2).xyz*+saturate(GetBlur2(uv_echo2)*2.8 - 0.13);\n    ret3 = abs(ret3-ret4);\n    ret3 *= sqrt(ret3); //darken\n    ret3 *= float3(.9,1.6,2.3);\n    ret3 *= 3; //gamma\n    ret3 = pow(ret3,1-ret3);\n   \n\nuv *=2 ;\nfloat2 m = floor(frac(uv*0.5)*2);\nuv = frac(uv)*(1-m) + (m)*frac(1-uv);\n    uv = float2(rad,uv.y);\n\n\n    float2 uv_echo = (uv.yx - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = tex2D(sampler_main, uv.yx).xyz*+saturate(GetBlur2(uv.yx)*2.8 - 0.13); \n    float3 ret2 = tex2D(sampler_main, uv_echo).xyz*+saturate(GetBlur2(uv_echo)*2.8 - 0.13);\n    ret = lerp(ret,ret2,.5);\n    ret *= ret; //darken\n    ret *= float3(.9,1.6,2.3);\n    ret *= 3; //gamma\n    //ret *= 2;\n    //ret = pow(ret,5);\n    ret = .5*lum(ret);\n    ret = max(ret3,.8*ret.zxy);\n}"}