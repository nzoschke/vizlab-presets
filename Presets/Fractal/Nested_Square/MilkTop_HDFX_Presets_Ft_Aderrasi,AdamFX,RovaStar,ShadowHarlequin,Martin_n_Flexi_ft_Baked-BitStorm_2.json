{"version":2,"baseVals":{"rating":5,"gammaadj":1.42,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":1,"wave_scale":0,"wave_smoothing":0.9,"wave_mystery":0.173,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_g":0,"wave_b":0,"wave_x":0.448,"wave_y":0.122,"ob_r":0.01,"ob_a":1,"ib_size":0.02,"ib_a":1,"mv_x":1,"mv_y":1,"mv_dx":0.087,"mv_dy":0.343,"mv_l":1.663,"mv_r":0.89,"mv_g":0.03,"mv_b":0.881,"mv_a":0.199},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":1.32775,"tex_zoom":0.57959,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q2=0;a.my_ang=0;","frame_eqs_str":"a.border_r+=1.5*Math.sin(1.13*a.q2);a.border_b+=.5*Math.sin(1.23*a.q2);a.border_g+=.5*Math.sin(1.33*a.q2);a.my_ang+=.005+.001*a.bass;a.ang=a.my_ang;","init_eqs_eel":"","frame_eqs_eel":"border_r = border_r + 1.5*sin(q2*1.13);\nborder_b = border_b + 0.5*sin(q2*1.23);\nborder_g = border_g + 0.5*sin(q2*1.33);\n//ang = 0.503 + (bass_att * 0.04);\nmy_ang = my_ang + (0.005 + (0.001 * bass));\nang = my_ang;"},{"baseVals":{"enabled":1,"sides":14,"thickoutline":1,"textured":1,"rad":0.67491,"tex_zoom":0.7072,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q2=0;a.my_ang=0;","frame_eqs_str":"a.border_r+=1.5*Math.sin(1.13*a.q2);a.border_b+=.5*Math.sin(1.23*a.q2);a.border_g+=.5*Math.sin(1.33*a.q2);a.my_ang+=.005+.001*a.bass;a.ang=a.my_ang;","init_eqs_eel":"","frame_eqs_eel":"border_r = border_r + 1.5*sin(q2*1.13);\nborder_b = border_b + 0.5*sin(q2*1.23);\nborder_g = border_g + 0.5*sin(q2*1.33);\n//ang = 0.503 + (bass_att * 0.04);\nmy_ang = my_ang + (0.005 + (0.001 * bass));\nang = my_ang;\n//textured = max(int(q3)%2,int(bass+1)%2);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.beet=0;a.beetcd=0;a.beeta=0;a.cdelay1=0;a.cdelay2=0;a.beetb=0;a.beetc=0;a.bas=0;a.trebtemp=0;a.bass_thresh=0;a.beetab=0;a.counter2=0;a.treb_thresh=0;a.midbeat=0;a.trebb=0;a.trassave=0;a.basst=0;a.colorcounter=0;a.mtb=0;a.bos=0;a.counter1=0;a.beetd=0;a.madbeat=0;a.midtb=0;a.basstemp=0;a.trasstemp=0;","frame_eqs_str":"a.wave_a=0;a.counter1=.00001<Math.abs(equal(a.counter2,1))?.00001<Math.abs(equal(a.counter1,1))?0:a.counter1+.2:1;a.counter2=.00001<Math.abs(equal(a.counter1,1))?.00001<Math.abs(equal(a.counter2,1))?0:a.counter2+.2:1;a.cdelay1=.00001<Math.abs(equal(a.cdelay2,1))?1:.00001<Math.abs(equal(mod(a.colorcounter,2),1))?.00001<Math.abs(equal(a.counter1,1))?2:0:.00001<Math.abs(equal(a.counter2,1))?2:0;a.cdelay2=.00001<Math.abs(equal(a.cdelay1,2))?1:0;a.colorcounter=.00001<Math.abs(above(a.colorcounter,\n7))?0:.00001<Math.abs(equal(a.cdelay1,1))?a.colorcounter+1:a.colorcounter;a.ob_r=.5*(.00001<Math.abs(equal(a.colorcounter,1))?1:.00001<Math.abs(equal(a.colorcounter,2))?1:.00001<Math.abs(equal(a.colorcounter,3))?1:.00001<Math.abs(equal(a.colorcounter,4))?Math.sin(a.counter2+2.1):.00001<Math.abs(equal(a.colorcounter,5))?0:.00001<Math.abs(equal(a.colorcounter,6))?0:Math.sin(a.counter1));a.ob_g=.5*(.00001<Math.abs(equal(a.colorcounter,1))?0:.00001<Math.abs(equal(a.colorcounter,2))?Math.sin(.5*a.counter2):\n.00001<Math.abs(equal(a.colorcounter,3))?Math.sin(.4*(a.counter1+1.75)):.00001<Math.abs(equal(a.colorcounter,4))?1:.00001<Math.abs(equal(a.colorcounter,5))?1:.00001<Math.abs(equal(a.colorcounter,6))?Math.sin(a.counter2+2):0);a.ob_b=.00001<Math.abs(equal(a.colorcounter,1))?Math.sin(a.counter1+2.1):.00001<Math.abs(equal(a.colorcounter,2))?0:.00001<Math.abs(equal(a.colorcounter,3))?0:.00001<Math.abs(equal(a.colorcounter,4))?0:.00001<Math.abs(equal(a.colorcounter,5))?Math.sin(a.counter1):(equal(a.colorcounter,\n6),1);a.ib_r=1.001*a.ob_r;a.ib_g=1.001*a.ob_g;a.ib_b=1.001*a.ob_b;a.decay=.9999;a.basstemp=a.bass+a.bass_att+a.bass_thresh;a.trebtemp=a.treb+a.treb_att+a.treb_thresh;a.trasstemp=Math.max(a.basstemp,a.trebtemp);a.trassave=div(a.trasstemp,3);a.basst=Math.max(a.bass+a.bass_att,a.treb+a.treb_att);a.trebb=Math.min(a.basst+a.bass_thresh,a.basst+a.treb_thresh);a.midbeat=div(a.trebb,3);a.midtb=Math.max(a.midbeat+a.mid,a.midbeat+a.mid_att);a.mtb=div(a.midtb,2.25);a.beeta=div(Math.max(a.treb,a.bass)+Math.min(a.treb_att,\na.bass_att),2);a.beetb=div(Math.max(a.mid,a.beeta)+Math.min(a.mid_att,.5*a.beeta),2);a.beetab=div(a.beeta+a.beetb,2);a.beetc=div(Math.max(a.mid,a.treb)+Math.min(a.mid_att,a.treb_att),2);a.beetd=div(Math.max(a.bass,a.beetc)+Math.min(a.bass_att,.5*a.beetc),2);a.beetcd=div(a.beetc+a.beetd,2);a.beet=div(a.beetab+a.beetcd,2);a.madbeat=div(a.trassave+a.mtb+a.beet,3);","pixel_eqs_str":"a.rot+=.05*Math.sin(a.rad-(.1*a.time+a.bas));a.bas=2.5*a.bass;a.bos=a.bass;a.warp=.1*(a.bos+a.bass+a.bass);a.cx=.5*(a.cx+a.treb);a.dx=a.dy+.01;a.dy=a.dx-.01;a.basstemp=a.bass+a.bass_att+a.bass_thresh;a.trebtemp=a.treb+a.treb_att+a.treb_thresh;a.trasstemp=Math.max(a.basstemp,a.trebtemp);a.trassave=div(a.trasstemp,3);a.basst=Math.max(a.bass+a.bass_att,a.treb+a.treb_att);a.trebb=Math.min(a.basst+a.bass_thresh,a.basst+a.treb_thresh);a.midbeat=div(a.trebb,3);a.midtb=Math.max(a.midbeat+\na.mid,a.midbeat+a.mid_att);a.mtb=div(a.midtb,2.25);a.beeta=div(Math.max(a.treb,a.bass)+Math.min(a.treb_att,a.bass_att),2);a.beetb=div(Math.max(a.mid,a.beeta)+Math.min(a.mid_att,.5*a.beeta),2);a.beetab=div(a.beeta+a.beetb,2);a.beetc=div(Math.max(a.mid,a.treb)+Math.min(a.mid_att,a.treb_att),2);a.beetd=div(Math.max(a.bass,a.beetc)+Math.min(a.bass_att,.5*a.beetc),2);a.beetcd=div(a.beetc+a.beetd,2);a.beet=div(a.beetab+a.beetcd,2);a.madbeat=div(a.trassave+a.mtb+a.beet,3);","init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\n\n\n\n//Thanks to Zylot for rainbow generator\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\ncdelay2 = if(equal(cdelay1,2),1,0);\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\nob_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\nob_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\nob_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\n\n\n\nib_r = ob_r*1.001;\nib_g = ob_g*1.001;\nib_b = ob_b*1.001;\n\n\n\ndecay = 0.9999;\n\n\n\n\n\nbasstemp= bass + bass_att + bass_thresh;\ntrebtemp= treb + treb_att + treb_thresh;\ntrasstemp= (max(basstemp, trebtemp));\ntrassave= (trasstemp/3);\n\nbasst= max(bass + bass_att, treb + treb_att);\ntrebb= min(basst + bass_thresh, basst + treb_thresh);\nmidbeat= trebb/3;\nmidtb= max(midbeat + mid, midbeat + mid_att);\nmtb= midtb/2.25;\n\nbeetA= (max(treb, bass) + min(treb_att, bass_att)) /2;\nbeetB= (max(mid, beetA) + min(mid_att, beetA*0.5)) /2;\nbeetAB= (beetA+beetB)/2;\nbeetC= (max(mid, treb) + min(mid_att, treb_att)) /2;\nbeetD= (max(bass, beetC) + min(bass_att, beetC*0.5)) /2;\nbeetCD= (beetC+beetD)/2;\nbeet= (beetAB+beetCD) /2;\n\nmadbeat= (trassave+mtb+beet) /3;","pixel_eqs_eel":"rot = rot +.05 * sin(rad-(time*.1+bas))  ;\nbas =  (bass*2.5);\nbos = bass;\nwarp = (bos + bass + bass) * .1;\ncx = (cx + treb) * .5;\n\ndx = dy+.01 ;\ndy = dx-.01 ;\n\nbasstemp= bass + bass_att + bass_thresh;\ntrebtemp= treb + treb_att + treb_thresh;\ntrasstemp= (max(basstemp, trebtemp));\ntrassave= (trasstemp/3);\n\nbasst= max(bass + bass_att, treb + treb_att);\ntrebb= min(basst + bass_thresh, basst + treb_thresh);\nmidbeat= trebb/3;\nmidtb= max(midbeat + mid, midbeat + mid_att);\nmtb= midtb/2.25;\n\nbeetA= (max(treb, bass) + min(treb_att, bass_att)) /2;\nbeetB= (max(mid, beetA) + min(mid_att, beetA*0.5)) /2;\nbeetAB= (beetA+beetB)/2;\nbeetC= (max(mid, treb) + min(mid_att, treb_att)) /2;\nbeetD= (max(bass, beetC) + min(bass_att, beetC*0.5)) /2;\nbeetCD= (beetC+beetD)/2;\nbeet= (beetAB+beetCD) /2;\n\nmadbeat= (trassave+mtb+beet) /3;","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.2, 0.2));\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = dot (((\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_3.y = dot (((\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\n    (tmpvar_3 * texsize.zw)\n   * 4.0))) - 0.01).xyz;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret3_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (((uv - 0.5) * vec2(-1.0, 1.0)) + 0.5);\n  vec3 tmpvar_5;\n  tmpvar_5 = abs(((texture (sampler_main, uv).xyz * \n    clamp ((((\n      (texture (sampler_blur2, uv).xyz * scale2)\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\n  ) - (texture (sampler_main, tmpvar_4).xyz * \n    clamp ((((\n      (texture (sampler_blur2, tmpvar_4).xyz * scale2)\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\n  )));\n  ret3_2 = (tmpvar_5 * sqrt(tmpvar_5));\n  ret3_2 = (ret3_2 * vec3(0.9, 1.6, 2.3));\n  ret3_2 = (ret3_2 * 3.0);\n  vec3 tmpvar_6;\n  tmpvar_6 = pow (ret3_2, (1.0 - ret3_2));\n  ret3_2 = tmpvar_6;\n  uv_1 = (uv * 2.0);\n  vec2 tmpvar_7;\n  tmpvar_7 = floor((fract(\n    (uv_1 * 0.5)\n  ) * 2.0));\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_7)) + (tmpvar_7 * fract(\n    (1.0 - uv_1)\n  )));\n  vec2 tmpvar_8;\n  tmpvar_8.x = rad;\n  tmpvar_8.y = uv_1.y;\n  uv_1 = tmpvar_8;\n  vec2 tmpvar_9;\n  tmpvar_9 = ((0.5 - tmpvar_8.yx) + 0.5);\n  ret_3 = (texture (sampler_main, tmpvar_8.yx).xyz * clamp ((\n    (((texture (sampler_blur2, tmpvar_8.yx).xyz * scale2) + bias2) * 2.8)\n   - 0.13), 0.0, 1.0));\n  vec3 tmpvar_10;\n  tmpvar_10 = mix (ret_3, (texture (sampler_main, tmpvar_9).xyz * clamp (\n    ((((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2) * 2.8) - 0.13)\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\n  ret_3 = (tmpvar_10 * tmpvar_10);\n  ret_3 = (ret_3 * vec3(0.9, 1.6, 2.3));\n  ret_3 = (ret_3 * 3.0);\n  vec3 tmpvar_11;\n  tmpvar_11 = max (tmpvar_6, (0.8 * vec3((0.5 * \n    dot (ret_3, vec3(0.32, 0.49, 0.29))\n  ))));\n  ret_3 = tmpvar_11;\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = tmpvar_11;\n  ret = tmpvar_12.xyz;\n }","warp_hlsl":"shader_body\n{\n\nuv = lerp(uv_orig,uv,0.2);\n\nfloat2 d = texsize.zw * 4;\nfloat3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\nfloat3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n\nuv += float2(lum(dx),lum(dy))*texsize.zw*4;\nret = tex2d(sampler_fc_main, uv) - 0.01;\n\n}","comp_hlsl":"shader_body\n{\n\n\n    float2 uv_echo2 = (uv - 0.5)*1.000*float2(-1,1) + 0.5;\n    float3 ret3 = tex2D(sampler_main, uv).xyz*+saturate(GetBlur2(uv)*2.8 - 0.13); \n    float3 ret4 = tex2D(sampler_main, uv_echo2).xyz*+saturate(GetBlur2(uv_echo2)*2.8 - 0.13);\n    ret3 = abs(ret3-ret4);\n    ret3 *= sqrt(ret3); //darken\n    ret3 *= float3(.9,1.6,2.3);\n    ret3 *= 3; //gamma\n    ret3 = pow(ret3,1-ret3);\n   \n\nuv *=2 ;\nfloat2 m = floor(frac(uv*0.5)*2);\nuv = frac(uv)*(1-m) + (m)*frac(1-uv);\n    uv = float2(rad,uv.y);\n\n\n    float2 uv_echo = (uv.yx - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = tex2D(sampler_main, uv.yx).xyz*+saturate(GetBlur2(uv.yx)*2.8 - 0.13); \n    float3 ret2 = tex2D(sampler_main, uv_echo).xyz*+saturate(GetBlur2(uv_echo)*2.8 - 0.13);\n    ret = lerp(ret,ret2,.5);\n    ret *= ret; //darken\n    ret *= float3(.9,1.6,2.3);\n    ret *= 3; //gamma\n    //ret *= 2;\n    //ret = pow(ret,5);\n    ret = .5*lum(ret);\n    ret = max(ret3,.8*ret.zxy);\n}"}