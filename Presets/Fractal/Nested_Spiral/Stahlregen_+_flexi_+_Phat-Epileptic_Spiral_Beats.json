{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":1,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"darken":1,"wave_a":2.803,"wave_scale":0.06,"wave_mystery":1,"zoomexp":1.14947,"fshader":1,"zoom":0.94204,"cx":0.65,"cy":0.35,"warp":0.01,"sx":0.99999,"sy":0.99999,"wave_x":1,"wave_y":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0.1},"shapes":[{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.21525,"tex_zoom":0.69327,"g":1,"b":1,"a":0.9,"r2":1,"b2":1,"a2":0.9,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.ang=3.14*a.q1+3.14*a.q2*(.00001<Math.abs(equal(a.q3,1))?-1:1);","init_eqs_eel":"","frame_eqs_eel":"ang = 3.14*q1 + 3.14*q2*if(equal(q3,1),-1,1);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.z=0;a.q1=0;a.dec_med=0;a.x=0;a.is_beat=0;a.dec_slow=0;a.avg=0;a.y=0;a.beat=0;a.peak=0;a.q2=0;a.q3=0;a.t0=0;","frame_eqs_str":"a.wave_r=.45+.45*Math.sin(1.133*(a.time+a.bass));a.wave_g=.45+.45*Math.sin(1.333*(a.time+a.bass));a.wave_b=.45+.45*Math.sin(1.533*(a.time+a.bass));a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.x=.00001<Math.abs(a.is_beat)?\n.01*Math.floor(rand(60))+.2:a.x;a.y=.00001<Math.abs(a.is_beat)?.01*Math.floor(rand(60))+.2:a.y;a.z=.00001<Math.abs(a.is_beat)?Math.floor(rand(2))-1:a.z;a.wave_mystery=.00001<Math.abs(above(a.x,a.y))?0:-1;a.q1=a.x;a.q2=a.y;a.q3=a.z;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.45 + 0.45*sin((time+bass)*1.133);\nwave_g = 0.45 + 0.45*sin((time+bass)*1.333);\nwave_b = 0.45 + 0.45*sin((time+bass)*1.533);\n\n// Beat detection by martin!\n\ndec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\n\nx = if(is_beat,int(rand(60))*0.01 + 0.2,x);\ny = if(is_beat,int(rand(60))*0.01 + 0.2,y);\nz = if(is_beat,int(rand(2))-1,z);\nwave_mystery = if(above(x,y),0,-1);\nq1 = x;\nq2 = y;\nq3 = z;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 tmpvar_1;\n  tmpvar_1 = ((uv_orig - 0.5) * vec2(1.81, 1.81));\n  vec2 tmpvar_2;\n  tmpvar_2.x = ((tmpvar_1.x * tmpvar_1.x) - (tmpvar_1.y * tmpvar_1.y));\n  tmpvar_2.y = ((2.0 * tmpvar_1.x) * tmpvar_1.y);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (texture (sampler_fc_main, (tmpvar_2 + vec2(0.448, 0.701))) - 0.004).xyz;\n  ret = tmpvar_3.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (uv * 2.0);\n  vec2 tmpvar_3;\n  tmpvar_3 = floor((fract(\n    (uv_1 * 0.5)\n  ) * 2.0));\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_3)) + (tmpvar_3 * fract(\n    (1.0 - uv_1)\n  )));\n  vec2 tmpvar_4;\n  tmpvar_4.x = rad;\n  tmpvar_4.y = uv_1.y;\n  uv_1 = tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((0.5 - tmpvar_4) + 0.5);\n  vec3 tmpvar_6;\n  tmpvar_6 = mix ((texture (sampler_main, tmpvar_4).xyz * clamp (\n    ((((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2) * 2.8) - 0.13)\n  , 0.0, 1.0)), (texture (sampler_main, tmpvar_5).xyz * clamp (\n    ((((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2) * 2.8) - 0.13)\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\n  ret_2 = (tmpvar_6 * tmpvar_6);\n  ret_2 = (ret_2 * vec3(1.9, 2.1, 1.5));\n  ret_2 = ((ret_2 - (\n    sqrt(ret_2)\n   * 0.2)) * 2.0);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_2;\n  ret = tmpvar_7.xyz;\n }","warp_hlsl":"shader_body\n{\n\nfloat2 zoom = 2;\nfloat2 cntr = float2(-0,-0);\nfloat2 c = float2(0.6,0.6); // complex constant\n\n float2 my_uv = (uv-0.5-cntr)*zoom;\n my_uv = float2(my_uv.x*my_uv.x - my_uv.y*my_uv.y, 2*my_uv.x*my_uv.y) + c; // u -> u^2 + c\n\nzoom =1.81;\ncntr = float2(0,0);\nc = float2(0.448,0.701);\n\n float2 my_uv2 = (uv_orig-0.5-cntr)*zoom; // using uv_orig here - no contortion to the nice julia island\n my_uv2 = float2(my_uv2.x*my_uv2.x - my_uv2.y*my_uv2.y, 2*my_uv2.x*my_uv2.y) + c; // u -> u^2 + c\n\n//ret.x = tex2D( sampler_fc_main, my_uv).x - 0.1;\nret = tex2D( sampler_fc_main, my_uv2) - 0.004;\n\n my_uv = lerp(my_uv, my_uv2, 0.5);\n//ret.z = tex2D( sampler_fc_main, my_uv2).z - 0.1;\n\n}","comp_hlsl":"shader_body\n{\n\nuv *=2 ;\nfloat2 m = floor(frac(uv*0.5)*2);\nuv = frac(uv)*(1-m) + (m)*frac(1-uv);\n\n\n    uv = float2(rad,uv.y);\n\n\n    float2 uv_echo = (uv - 0.5)*1.000*float2(-1,-1) + 0.5;\n    ret = lerp( tex2D(sampler_main, uv).xyz*+saturate(GetBlur2(uv)*2.8 - 0.13), \n                tex2D(sampler_main, uv_echo).xyz*+saturate(GetBlur2(uv_echo)*2.8 - 0.13), \n                0.50 \n              ); //video echo\n    ret *= ret; //darken\n    ret *= float3(1.9,2.1,1.5);\n    ret = (ret - (sqrt(ret)*.2))*2; //gamma\n\n}"}