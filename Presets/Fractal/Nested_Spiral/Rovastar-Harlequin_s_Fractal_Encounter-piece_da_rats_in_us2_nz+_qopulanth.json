{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":1,"echo_orient":1,"wave_thick":1,"wave_a":7.015,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.4,"warpanimspeed":5.996,"warpscale":1.331,"zoomexp":1.01,"zoom":0.99853,"rot":0.002,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.1,"wave_y":0.9,"ob_g":0.9,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0.201,"ib_g":0.5,"ib_b":0.5,"ib_a":1,"mv_x":63.936,"mv_y":48,"mv_l":1,"mv_r":0.63,"mv_g":0.2,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"a.trans=0;a.q30=0;a.trans2=0;a.trans3=0;","frame_eqs_str":"a.trans=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.trans2=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.trans3=div(rand(Math.floor(a.q30)),15)+a.instance-a.instance;a.a=a.trans;a.x=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.y=.5+.01*Math.floor(rand(15))*a.bass_att*(.00001<Math.abs(equal(Math.floor(rand(2)),1))?1:-1)+a.instance-a.instance;a.rad=.09+div(rand(Math.floor(a.q30)),15)+\na.instance-a.instance;a.r=.1*rand(a.q30)+a.instance-a.instance;a.g=.1*rand(a.q30)+a.instance-a.instance;a.b=.1*rand(a.q30)+a.instance-a.instance;a.r2=.1*rand(a.q30)+a.instance-a.instance;a.g2=.1*rand(a.q30)+a.instance-a.instance;a.b2=.1*rand(a.q30)+a.instance-a.instance;a.border_r=.1*rand(a.q30)+a.instance-a.instance;a.border_g=.1*rand(a.q30)+a.instance-a.instance;a.border_b=.1*rand(a.q30)+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\ntrans2 = rand(int(q30))/15+instance-instance;\ntrans3 = rand(int(q30))/15+instance-instance;\na = trans;\n\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\nrad = .09 + rand(int(q30))/15+instance-instance;\nr=rand(q30)*.1+instance-instance;\ng=rand(q30)*.1+instance-instance;\nb=rand(q30)*.1+instance-instance;\nr2=rand(q30)*.1+instance-instance;\ng2=rand(q30)*.1+instance-instance;\nb2=rand(q30)*.1+instance-instance;\nborder_r=rand(q30)*.1+instance-instance;\nborder_g=rand(q30)*.1+instance-instance;\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":7,"rad":0.03333,"r":0,"g2":0,"border_a":0},"init_eqs_str":"a.vol=0;","frame_eqs_str":"a.x=.01*Math.floor(rand(100))+a.instance-a.instance;a.y=.01*Math.floor(rand(100))+a.instance-a.instance;a.a=1;a.vol=a.bass+a.mid+a.treb;a.rad=div(Math.floor(rand(Math.floor(a.vol))),7)+a.instance-a.instance;","init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01+instance-instance;\ny = int(rand(100))*.01+instance-instance;\n\na =1;\nvol=bass+mid+treb;\nrad = int(rand(int(vol)))/7+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.ma=0;a.mx=0;a.my=0;a.pi23=0;a.t1=0;","frame_eqs_str":"a.ma+=3.1415*above(a.bass,1)*.01*a.bass;a.ma-=3.1415*above(a.treb,1)*.01*a.treb;a.mx+=.0002*Math.cos(a.ma);a.my+=.0002*Math.tan(a.ma);a.mx=.00001<Math.abs(above(a.mx,.9))?.9-a.mx:a.mx;a.my=.00001<Math.abs(above(a.my,.9))?.9-a.my:a.my;a.mx=.00001<Math.abs(below(a.mx,.1))?.9+a.mx:a.mx;a.my=.00001<Math.abs(below(a.my,.1))?.9+a.my:a.my;a.x=1-a.mx;a.y=1-a.my;a.ang=3*(Math.sin(.35*a.time)+1);a.pi23=1.333333332*Math.asin(1);a.t1=a.bass+a.mid+a.treb;","init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\nma=ma-(above(treb,1)*3.1415*.01*treb);\n\nmx=mx+(.0002*cos(ma));\nmy=my+(.0002*tan(ma));\n\nmx=if(above(mx,.9),(.9-mx),mx);\nmy=if(above(my,.9),(.9-my),my);\nmx=if(below(mx,.1),(.9+mx),mx);\nmy=if(below(my,.1),(.9+my),my);\n\nx=1-mx;\ny=1-my;\n\nang=(sin(time*.35)+1)*3;\n//a=(above(bass+mid+treb,.8));\npi23=4*asin(1)*.333333333;\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.mq1=0;a.beateven=0;a.xpos=0;a.yamptarg=0;a.q25=0;a.q12=0;a.q22=0;a.q21=0;a.ydir=0;a.q13=0;a.meanbass_att=0;a.q29=0;a.q6=0;a.q1=0;a.mq31=0;a.mq21=0;a.mq24=0;a.chng=0;a.mq28=0;a.box=0;a.lastbeat=0;a.mq23=0;a.beatrate=0;a.mode=0;a.q31=0;a.q23=0;a.q24=0;a.yaccel=0;a.q11=0;a.peakbass_att=0;a.xamptarg=0;a.atime=0;a.xamp=0;a.xspeed=0;a.bass_effect=0;a.beatcounter=0;a.q4=0;a.ypos=0;a.q26=0;a.xaccel=0;a.mq27=0;a.mq25=0;a.volume=0;a.mq22=0;a.beat=0;a.vol=0;a.mq26=\n0;a.q2=0;a.q27=0;a.yamp=0;a.q7=0;a.xdir=0;a.q28=0;a.q30=0;a.yspeed=0;a.beatcounter=0;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.vol=a.bass+a.treb+a.mid;a.atime+=a.vol;a.q11=.4+.4*Math.sin(.006*a.atime);a.q12=.4+.4*Math.cos(.00613828348*a.atime);a.q13=.4+.4*Math.sin(.00598593455*a.atime);a.monitor=a.q13;a.ob_r=.21-\n.2*(.5*Math.sin(.701*a.time)+.3*Math.cos(.438*a.time));a.ob_g=.5-.46*Math.sin(1.724*a.time);a.ob_b=.65-.3*Math.cos(1.816*a.time);a.warp=0;a.ib_size=.025;a.ib_r+=.2*(.6*Math.sin(3.034*a.time)+.4*Math.cos(2.14*a.time));a.ib_g+=.5*(.6*Math.sin(3.147*a.time)+.4*Math.cos(2.015*a.time));a.ib_b-=.5*(.6*Math.sin(3.431*a.time)+.4*Math.cos(1.842*a.time));a.dx=a.dx+.001+Math.abs(.003*(.6*Math.sin(.234*a.time)+.4*Math.cos(.437*a.time)));a.dy+=Math.abs(.003*(.7*Math.sin(.213*a.time)+.3*Math.cos(.315*a.time)));\na.volume=.15*(a.bass+a.bass_att+a.treb+a.treb_att+a.mid+a.mid_att);a.xamptarg=.00001<Math.abs(equal(mod(a.frame+.5,15),0))?Math.min(.5*a.volume*a.bass_att,.5):a.xamptarg;a.xamp+=.5*(a.xamptarg-a.xamp);a.xdir=.00001<Math.abs(above(Math.abs(a.xpos),a.xamp))?-sign(a.xpos):.00001<Math.abs(below(Math.abs(a.xspeed),.1))?2*above(a.xpos,0)-1:a.xdir;a.xaccel=a.xdir*a.xamp-a.xpos-.055*a.xspeed*below(Math.abs(a.xpos),a.xamp);a.xspeed=a.xspeed+a.xdir*a.xamp-a.xpos-.055*a.xspeed*below(Math.abs(a.xpos),a.xamp);\na.xpos+=.001*a.xspeed;a.q2=a.xpos;a.yamptarg=.00001<Math.abs(equal(mod(a.frame+.5,15),0))?Math.min(.3*a.volume*a.treb_att,.5):a.yamptarg;a.yamp+=.5*(a.yamptarg-a.yamp);a.ydir=.00001<Math.abs(above(Math.abs(a.ypos),a.yamp))?-sign(a.ypos):.00001<Math.abs(below(Math.abs(a.yspeed),.1))?2*above(a.ypos,0)-1:a.ydir;a.yaccel=a.ydir*a.yamp-a.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.yspeed=a.yspeed+a.ydir*a.yamp-a.ypos-.055*a.yspeed*below(Math.abs(a.ypos),a.yamp);a.ypos+=.001*a.yspeed;a.q4=a.ypos;\na.bass_effect=Math.max(Math.max(a.bass,a.bass_att)-1.2,0);a.echo_zoom=1.32+.3*(.59*Math.sin(a.q4+.865*a.time)+.41*Math.cos(a.q2+1.192*a.time))+.05*a.bass_effect;a.volume=.15*(a.bass_att+a.bass+a.mid+a.mid_att);a.beatrate=.00001<Math.abs(equal(a.beatrate,0))?1:.00001<Math.abs(below(a.volume,.01))?1:a.beatrate;a.lastbeat=.00001<Math.abs(equal(a.lastbeat,0))?a.time:a.lastbeat;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.peakbass_att=.00001<Math.abs(above(a.bass_att,a.peakbass_att))?a.bass_att:a.peakbass_att;\na.beat=.00001<Math.abs(above(a.volume,.8))?.00001<Math.abs(below(a.peakbass_att-a.bass_att,.05*a.peakbass_att))?.00001<Math.abs(above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1)))?1:0:0:0;a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+a.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=.00001<Math.abs(equal(a.beat,0))?.00001<Math.abs(above(a.time-a.lastbeat,2*a.beatrate))?.95*a.peakbass_att:.995*a.peakbass_att:a.bass_att;a.lastbeat=\n.00001<Math.abs(a.beat)?a.time:a.lastbeat;a.peakbass_att=Math.max(.00001<Math.abs(a.beat)?a.bass_att:a.peakbass_att,1.1*a.meanbass_att);a.beatcounter=.00001<Math.abs(above(a.beat,0))?a.beatcounter+1:a.beatcounter;a.beatcounter=.00001<Math.abs(above(a.beatcounter,7))?0:a.beatcounter;a.beateven=mod(a.beatcounter+.5,2);a.mode=.00001<Math.abs(a.beat)?mod(a.mode+(Math.floor(rand(3))+1)+.5,4):a.mode;a.echo_orient=a.mode;a.wave_a=.00001<Math.abs(a.beat)?1:0;a.wave_r=a.wave_r+.2*Math.sin(.7854*a.time)-.2*\na.beateven;a.wave_b=a.wave_b+.1*Math.sin(.8254*a.time)+.2*a.beateven;a.wave_g=a.wave_g+.1*Math.sin(.854*a.time)+.2*a.beateven;a.q6=a.beat;a.wave_mode=.00001<Math.abs(a.beateven)?7:0;a.mv_a=.00001<Math.abs(a.beat)?.00001<Math.abs(equal(a.beatcounter,6))?1:0:0;a.mv_r=.00001<Math.abs(a.mv_a)?Math.floor(rand(2)):0;a.mv_b=.00001<Math.abs(a.mv_a)?Math.floor(rand(2)):0;a.mv_g=.00001<Math.abs(a.mv_a)?Math.floor(rand(2)):0;a.q30=a.bass+a.treb+a.mid;","pixel_eqs_str":"a.box=.5+.8*(mod(2*a.x+.5,4)+mod(2*a.y+.5,2));a.q1=8.45+.3*(Math.sin(pow(a.x,3)+.177*a.time)-Math.cos(pow(a.y,3)+.223*a.time));a.q7=above(a.box,1);a.zoom=.00001<Math.abs(a.q7)?.1*a.q1+6*a.q6:a.zoom;a.rot=.00001<Math.abs(a.q7)?.63*Math.sin(.385*a.time+.12*Math.sin(.67*a.time)+.1*a.q4+.12*a.q2+50*a.q6):a.rot;a.cx-=.15*Math.sin(2*a.q4);a.cy+=.14*Math.sin(2*a.q2);a.sx=.00001<Math.abs(a.q7)?a.sx+18*a.q6:a.sx;a.sy=.00001<Math.abs(a.q7)?a.sy+18*a.q6:a.sy;","init_eqs_eel":"beatcounter =0;","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\nvol=bass+treb+mid;\natime=atime+vol;\nq11=.4+sin(atime*.006        )*.4;\nq12=.4+cos(atime*.00613828348)*.4;\nq13=.4+sin(atime*.00598593455)*.4;\nmonitor=q13;\n\nob_r = 0.21 - 0.2*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));\nob_g = 0.5 - 0.46*sin(time*1.724);\nob_b = 0.65 - 0.3*cos(time*1.816);\nwarp =0;\nib_size = 0.025;\nib_r = ib_r + 0.2*(0.6*sin(time*3.034)+0.4*cos(time*2.14));\nib_g = ib_g + 0.5*(0.6*sin(time*3.147)+0.4*cos(time*2.015));\nib_b = ib_b - 0.5*(0.6*sin(time*3.431)+0.4*cos(time*1.842));\ndx = dx +0.001+abs(0.003*(0.6*sin(time*0.234) + 0.4*cos(time*0.437)));\ndy = dy + abs(0.003*(0.7*sin(time*0.213) + 0.3*cos(time*0.315)));\nvolume = 0.15*(bass+bass_att+treb+treb_att+mid+mid_att);\nxamptarg = if(equal((frame+.5)%15,0),min(0.5*volume*bass_att,0.5),xamptarg);\nxamp = xamp + 0.5*(xamptarg-xamp);\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\nxaccel = xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\nxpos = xpos + 0.001*xspeed;\nq2 = xpos;\nyamptarg = if(equal((frame+.5)%15,0),min(0.3*volume*treb_att,0.5),yamptarg);\nyamp = yamp + 0.5*(yamptarg-yamp);\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\nyaccel = ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\nypos = ypos + 0.001*yspeed;\nq4 = ypos;\nbass_effect = max(max(bass,bass_att)-1.2,0);\necho_zoom = 1.32 + 0.3*(0.59*sin(q4+time*0.865) + 0.41*cos(q2+time*1.192)) + 0.05*bass_effect;\nvolume = 0.15*(bass_att+bass+mid+mid_att);\nbeatrate = if(equal(beatrate,0),1,if(below(volume,0.01),1,beatrate));\nlastbeat = if(equal(lastbeat,0),time,lastbeat);\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\npeakbass_att = if(above(bass_att,peakbass_att),bass_att,peakbass_att);\nbeat = if(above(volume,0.8),if(below(peakbass_att - bass_att, 0.05*peakbass_att),if(above(time - lastbeat,0.1+0.5*(beatrate-0.1)),1,0),0),0);\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = if(equal(beat,0),if(above(time - lastbeat,2*beatrate),peakbass_att*0.95,peakbass_att*0.995),bass_att);\nlastbeat = if(beat,time,lastbeat);\npeakbass_att = max(if(beat,bass_att,peakbass_att),1.1*meanbass_att);\nbeatcounter = if(above(beat,0),beatcounter +1, beatcounter);\nbeatcounter = if(above(beatcounter,7), 0, beatcounter);\nbeateven = (beatcounter+.5)%2;\nmode = if(beat,(mode+(int(rand(3))+1)+.5)%4,mode);\necho_orient = mode;\nwave_a = if(beat,1,0);\nwave_r = wave_r + 0.2*sin(time*0.7854) - 0.2*beateven;\nwave_b = wave_b + 0.1*sin(time*0.8254) + 0.2*beateven;\nwave_g = wave_g + 0.1*sin(time*0.854) + 0.2*beateven;\nq6 = beat;\nwave_mode = if(beateven,7,0);\nmv_a = if(beat,if(equal(beatcounter,6),1,0),0);\nmv_r = if(mv_a,int(rand(2)),0);\nmv_b = if(mv_a,int(rand(2)),0);\nmv_g= if(mv_a,int(rand(2)),0);\n\nq30=bass+treb+mid;","pixel_eqs_eel":"box =0.5+0.8*((2*x+.5)%4+(2*y+.5)%2);\nq1 = 8.45+0.3*(sin(pow(x,3)+0.177*time)-cos(pow(y,3)+0.223*time));\nq7 = above(box,1);\nzoom = if(q7,(q1*.1) + q6*6 ,zoom);\nrot = if(q7,0.63*sin(0.385*time + 0.12*sin(0.67*time) + 0.1*q4 + 0.12*q2 +q6*50),rot);\ncx = cx - 0.15*sin(2*q4);\ncy = cy + 0.14*sin(2*q2);\nsx = if(q7,sx+q6*18,sx);\nsy = if(q7,sy+q6*18,sy);","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 8.0));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.y;\n  tmpvar_7.y = tmpvar_4.y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 8.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.z;\n  tmpvar_9.y = tmpvar_4.z;\n  vec2 tmpvar_10;\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 8.0));\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\n  ).x * 0.02));\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\n  ).y * 0.02));\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\n  ).z * 0.02));\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_6.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_11.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_11.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_11.z * 0.5));\n  };\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.2) - 0.06));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_1;\n  ret = tmpvar_12.xyz;\n }","comp":"vec3 xlat_mutablecont;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers2;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  vec3 ret_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_3 = (1.0 - fract(q6));\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\n  vec2 tmpvar_5;\n  tmpvar_5 = fract(((uv_1 * dist_3) + 0.55));\n  xlat_mutableneu = texture (sampler_main, tmpvar_5).xyz;\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\n  xlat_mutablecont = max (vec3(0.0, 0.0, 0.0), ((\n    -(texture (sampler_main, tmpvar_5).xyz)\n   + \n    ((texture (sampler_blur1, (tmpvar_5 + q7)).xyz * scale1) + bias1)\n  ) * inten_2));\n  dist_3 = (1.0 - fract((0.5 + q6)));\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\n  vec2 tmpvar_6;\n  tmpvar_6 = fract(((uv_1 * dist_3) + 0.55));\n  xlat_mutableneu = texture (sampler_main, tmpvar_6).xyz;\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  xlat_mutablecont = max (xlat_mutablecont, ((\n    -(texture (sampler_main, tmpvar_6).xyz)\n   + \n    ((texture (sampler_blur1, (tmpvar_6 + q7)).xyz * scale1) + bias1)\n  ) * inten_2));\n  dist_3 = (1.0 - fract((1.0 + q6)));\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\n  vec2 tmpvar_7;\n  tmpvar_7 = fract(((uv_1 * dist_3) + 0.55));\n  xlat_mutableneu = texture (sampler_main, tmpvar_7).xyz;\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  xlat_mutablecont = max (xlat_mutablecont, ((\n    -(texture (sampler_main, tmpvar_7).xyz)\n   + \n    ((texture (sampler_blur1, (tmpvar_7 + q7)).xyz * scale1) + bias1)\n  ) * inten_2));\n  vec2 tmpvar_8;\n  tmpvar_8.y = 5.0;\n  tmpvar_8.x = (time / 12.0);\n  xlat_mutablers2 = ((0.1 * cos(\n    ((uv_1 * 3.0) + tmpvar_8)\n  )) + (0.1 * xlat_mutableret1).xy);\n  ret_4 = (((-0.1 * xlat_mutableret1) + (\n    (clamp ((0.005 / sqrt(\n      dot (xlat_mutablers2, xlat_mutablers2)\n    )), 0.0, 1.0) * vec3(18.0, 16.2, 10.8))\n   * \n    (0.2 + (0.3 * xlat_mutableret1))\n  )) + ((\n    dot (xlat_mutablecont, vec3(0.32, 0.49, 0.29))\n   * \n    (1.0 + slow_roam_cos)\n  ) / 2.0).xyz);\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * xlat_mutablers2.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_4.x > (q26 * q13)) && (ret_4.x <= (q23 * q11)))) {\n    ret_4.z = (ret_4.z - (tmpvar_9.x * 0.5));\n  };\n  if (((ret_4.y > (q25 * q11)) && (ret_4.y <= (q22 * q12)))) {\n    ret_4.x = (ret_4.x - (tmpvar_9.y * 0.5));\n  };\n  if (((ret_4.z > (q24 * q12)) && (ret_4.z <= (q21 * q13)))) {\n    ret_4.y = (ret_4.y - (tmpvar_9.z * 0.5));\n  };\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_4;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw * 4;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1.2 + rand_frame.xy;\n\n    float2 my_uv =  lerp(uv_orig,uv,1) ;\n    float2 uv_x= my_uv + float2(dx.x,dy.x)*texsize.zw  *8;\n    float2 uv_y= my_uv + float2(dx.y,dy.y)*texsize.zw  *8;\n    float2 uv_z= my_uv + float2(dx.z,dy.z)*texsize.zw  *8;\n    ret.x = GetPixel(uv_x).x - (GetPixel(uv_x) - GetBlur3(uv_x)).x  * 0.02;\n    ret.y = GetPixel(uv_y).y - (GetPixel(uv_y) - GetBlur3(uv_y)).y  * 0.02;\n    ret.z = GetPixel(uv_z).z - (GetPixel(uv_z) - GetBlur3(uv_z)).z  * 0.02;\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv_x.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*q13         && ret.x<= q24*q11        )ret.y += (noise9).x*.5; \nif(ret.y> q22*q11         && ret.y<= q25*q12        )ret.z += (noise9).y*.5; \nif(ret.z> q23*q12         && ret.z<= q26*q13        )ret.x += (noise9).z*.5; \nret -= ret.yzx*0.2 - 0.06;\n\n}","comp_hlsl":"sampler sampler_pw_noise_lq;\n\nfloat3 ret1, neu, cont;\nfloat2 rs,rs2,uv1,dz, uv3;\nfloat noise;\nshader_body\n{\nfloat2 uv2;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nnoise = tex2D (sampler_pw_noise_lq,uv3);\nnoise *= (noise >= .9);\n\nfloat dist = 1;\nfloat inten = 1;\nfloat mask = 0;\nret1 = 0;\nint anz = 2;\nfloat n = 0;\ncont = 0;\nwhile (n <= anz) {\nuv2 = uv;\n    dist = 1-frac(1.0/anz*n+q6); //evtl sqrt !\n\n    inten =  (dist)*(1-dist)*6;\n    float2 uv3 =  frac(1*uv2*dist+.55);\n\n    neu = 1*GetPixel(uv3) + GetBlur1(uv3)*0;\n    ret1 = max(ret1,neu*inten);\n    cont = max(cont,(-GetPixel(uv3)+GetBlur1(uv3+q7))*inten);\nn++;\n}\n\nrs2 = .1*cos(uv*3+float2(time/12,5)) + .1*ret1;\nfloat3 dots = saturate(.005/length(rs2)) * float3 (1,.9,.6);\n\nret = -.1*ret1 + 18*dots*(.2+.3*ret1) \n+ lum(cont)*(1+slow_roam_cos)/2;\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((rs2.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31\n                     );\nif(ret.x> q26*q13         && ret.x<= q23*q11        )ret.z -= (noise9).x*.5; \nif(ret.y> q25*q11         && ret.y<= q22*q12        )ret.x -= (noise9).y*.5; \nif(ret.z> q24*q12         && ret.z<= q21*q13        )ret.y -= (noise9).z*.5; \nret += .0*ret1;\n//ret = GetPixel(uv_orig+.5);\n}"}