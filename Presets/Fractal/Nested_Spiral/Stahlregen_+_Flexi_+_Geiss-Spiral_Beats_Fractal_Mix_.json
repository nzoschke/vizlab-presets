{"version":2,"baseVals":{"rating":5,"echo_zoom":1.007,"wave_mode":7,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":1.006,"wave_scale":0.06,"zoomexp":1.14947,"zoom":0.96098,"cx":0.65,"cy":0.35,"warp":0.01,"sx":0.99999,"sy":0.99999,"wave_y":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":1.03639,"tex_zoom":0.88907,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.ang=a.ang+a.q1-a.q2;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + q1 - q2;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.vol=0;a.beat=0;a.res=0;a.diff=0;a.x=0;a.y=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.wave_r=.5+.4*Math.sin(1.133*(a.time+a.bass));a.wave_g=.5+.4*Math.sin(1.333*(a.time+a.bass));a.wave_b=.5+.4*Math.sin(1.533*(a.time+a.bass));a.vol=8*a.bass+4*a.mid+2*a.treb;a.vol*=above(a.vol,17);a.monitor=a.vol;a.beat=above(a.vol,a.res);a.diff=(1-a.beat)*a.diff+a.beat*(a.vol-a.res);a.res=a.beat*(a.vol+2*a.diff)+(1-a.beat)*(a.res-div(60*(.04*a.diff+.12),a.fps));a.res=Math.max(0,a.res);a.monitor=a.res;a.x=.00001<Math.abs(a.beat)?.01*Math.floor(rand(60))+.2:a.x;a.y=.00001<Math.abs(a.beat)?\n.01*Math.floor(rand(60))+.2:a.y;a.q1=a.x;a.q2=a.y;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.4*sin((time+bass)*1.133);\nwave_g = 0.5 + 0.4*sin((time+bass)*1.333);\nwave_b = 0.5 + 0.4*sin((time+bass)*1.533);\n\n\n// And again, beat detection by flexi!\n\nvol = bass*8 + mid*4 + treb*2;\nvol = vol*above(vol,17);\nmonitor = vol;\nbeat = above(vol,res);\ndiff = (1-beat)*diff + beat*(vol-res);\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\nres = max(0,res);\nmonitor = res;\n\nx = if(beat,int(rand(60))*0.01 + 0.2,x);\ny = if(beat,int(rand(60))*0.01 + 0.2,y);\nq1 = x;\nq2 = y;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 my_uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.6;\n  tmpvar_2.y = (-0.5 + q2);\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * vec2(2.0, 2.0));\n  vec2 tmpvar_4;\n  tmpvar_4.x = ((tmpvar_3.x * tmpvar_3.x) - (tmpvar_3.y * tmpvar_3.y));\n  tmpvar_4.y = ((2.0 * tmpvar_3.x) * tmpvar_3.y);\n  my_uv_1 = (tmpvar_4 + tmpvar_2);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).xyz - 0.004);\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (abs((\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\n  ret_2 = (ret_2 * 1.333);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"shader_body\n{\nfloat2 zoom = 2;\nfloat2 cntr = float2(0,0);\nfloat2 c = float2(0.6,-0.5 + q2);\nfloat2 my_uv = (uv-0.5-cntr)*zoom;\nmy_uv = float2(my_uv.x*my_uv.x - my_uv.y*my_uv.y, 2*my_uv.x*my_uv.y) + c;\n\nfloat2 d = texsize.zw*12;\nfloat3 dx = ( GetBlur3(uv+float2(1,0)*d)-GetBlur3(uv-float2(1,0)*d) );\nfloat3 dy = ( GetBlur3(uv+float2(0,1)*d)-GetBlur3(uv-float2(0,1)*d) );\nfloat2 uv_y = float2(dy.z,-dx.z)*texsize.zw*40 - float2(dx.z,dy.z)*texsize.zw*30 - float2(dx.y,dy.y)*texsize.zw*20;\n\nfloat3 julia = tex2D( sampler_fw_main, my_uv - floor(my_uv));\nfloat3 pre = tex2D( sampler_fw_main, 0.5 + (uv_orig+uv_y-0.5)*1.002);\n\n//ret.x = pre.x - (GetBlur2(uv_orig+uv_y).x - pre.x)*0.1  - 0.0 + pre.y*0.01 - pre.z*0.04;\n//ret.y = julia.y + 0.004;\n//ret.z = julia.z*0.92 + 0.04;\n//ret.z = julia.z + 0.008;\nret = julia - 0.004;\n}","comp_hlsl":"\n\n\n\nshader_body\n{\n    uv = 0.05 + 0.9*uv;\n    ret = tex2D(sampler_main, uv).xyz;\n      // SUPER GLOW EDGES - looks awesome w/octopus\n      float3 avg_col = GetBlur3(uv);\n      ret = abs(avg_col - ret)*6;\n    ret *= 1.333; // a little bit of overbright\n}"}