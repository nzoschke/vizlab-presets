{"version":1,"baseVals":{"rating":5,"decay":0.9,"echo_zoom":1,"wave_brighten":0,"wrap":0,"wave_a":1,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":18.4,"mv_y":13.799999,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.710083,"r":0,"g2":0,"border_a":0},"init_eqs_str":"a.radc=0;a.speedc=0;a.trebc=0;a.speedc=0;a.trebc=0;a.radc=0;","frame_eqs_str":"a.x=.5+a.radc*Math.sin(a.speedc);a.y=.5+a.radc*Math.cos(a.speedc);a.radc=.00001<Math.abs(above(.3*a.bass,a.radc))?a.radc+.0005:a.radc-.0005;a.radc=.00001<Math.abs(below(a.radc,0))?0:a.radc;a.trebc=.00001<Math.abs(above(.05*a.treb,a.trebc))?a.trebc+.0005:a.trebc-.0005;a.trebc=.00001<Math.abs(below(a.trebc,0))?0:a.trebc;a.speedc+=a.trebc;a.r=.01*Math.floor(randint(100));a.g=.01*Math.floor(randint(100));a.b=.01*Math.floor(randint(100));a.r2=.5+.4*Math.sin(.9999*a.speedc);a.g2=\n.5+.4*Math.sin(1.121*a.speedc);a.b2=.5+.4*Math.sin(.77*a.speedc);","init_eqs_eel":"speedc=0;\ntrebc=0;\nradc=0;","frame_eqs_eel":"x = .5+radc*sin(speedc);\ny = .5+radc*cos(speedc);\n\nradc = if(above(bass*.3,radc),radc+.0005,radc-.0005);\nradc = if(below(radc,0),0,radc);\n\ntrebc = if(above(treb*.05,trebc),trebc+.0005,trebc-.0005);\ntrebc = if(below(trebc,0),0,trebc);\n\nspeedc = speedc + trebc;\n\nr = int(rand(100))*.01;\ng = int(rand(100))*.01;\nb = int(rand(100))*.01;\n\nr2 = .5+.4*sin(speedc*.9999);\ng2 = .5+.4*sin(speedc*1.121);\nb2 = .5+.4*sin(speedc*.77);"},{"baseVals":{"enabled":1,"textured":1,"rad":1.621724,"tex_ang":1.130974,"tex_zoom":0.518543,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=6.4*Math.sin(div(a.time,6));","init_eqs_eel":"","frame_eqs_eel":"ang=sin(time/6)*6.4"},{"baseVals":{"sides":14,"textured":1,"rad":1.791419,"tex_ang":0.125664,"tex_zoom":0.889067,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang=sin(time/3)*6.4","init_eqs_eel":"","frame_eqs_eel":"ang=sin(time/3)*6.4"},{"baseVals":{"enabled":1,"sides":14,"textured":1,"rad":0.7316,"tex_ang":3.204425,"tex_zoom":1.184299,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=6.4*Math.sin(div(a.time,8));","init_eqs_eel":"","frame_eqs_eel":"ang=sin(time/8)*6.4"}],"waves":[{"baseVals":{"thick":1,"scaling":0.463735,"smoothing":0,"enabled":0},"init_eqs_str":"//pi\nt8=3.14159265;\nt5 = 1;","frame_eqs_str":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 3*sin(time);\nt5 = 10+8*cos(time);\n\ng = 0.5-0.4*cos(time);\nr = 0.5-0.4*sin(time);","point_eqs_str":"//Define 3D Shape\n\n//Spiral\nx1 = 0.5*sin(8*t8*sample);\ny1 = 2*(sample-0.5)-value1;\nz1= 0.5*cos(8*t8*sample);\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3+t4;\ny4 = y3;\nz4 = z3+t5;\n//draw 3d shape in 2d\nx=0.5+0.5*(x4/(1+z4*0.5));\ny=0.5+0.5*(y4/(1+z4*0.5));\n\nb= r+value1;","init_eqs_eel":"//pi\nt8=3.14159265;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 3*sin(time);\nt5 = 10+8*cos(time);\n\ng = 0.5-0.4*cos(time);\nr = 0.5-0.4*sin(time);","point_eqs_eel":"//Define 3D Shape\n\n//Spiral\nx1 = 0.5*sin(8*t8*sample);\ny1 = 2*(sample-0.5)-value1;\nz1= 0.5*cos(8*t8*sample);\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3+t4;\ny4 = y3;\nz4 = z3+t5;\n//draw 3d shape in 2d\nx=0.5+0.5*(x4/(1+z4*0.5));\ny=0.5+0.5*(y4/(1+z4*0.5));\n\nb= r+value1;"},{"baseVals":{"thick":1,"scaling":0.463735,"smoothing":0,"enabled":0},"init_eqs_str":"//pi\nt8=3.14159265;\nt5 = 1;","frame_eqs_str":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 3*sin(time+0.66*t8);\nt5 = 10+8*cos(time+0.66*t8);\n\nb = 0.5-0.4*cos(time+0.66*t8);\ng = 0.5-0.4*sin(time+0.66*t8);","point_eqs_str":"//Define 3D Shape\n\n//Sphere\nfvar = sample*512;\nsvar = fvar/32;\ntvar = 0&svar;\nnsample = tvar*3.5;\nx1 = (1*sin(t8*nsample));\ny1 = (1*cos(t8*nsample));\nz1 = 1.5*sin((0&sample));\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3;\ny4 = y3;\nz4 = z3+5;\n//draw 3d shape in 2d\nx=0.5+0.5*(x4/(1+z4*0.5));\ny=0.5+0.5*(y4/(1+z4*0.5));\n\nr = g+value1;","init_eqs_eel":"//pi\nt8=3.14159265;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 3*sin(time+0.66*t8);\nt5 = 10+8*cos(time+0.66*t8);\n\nb = 0.5-0.4*cos(time+0.66*t8);\ng = 0.5-0.4*sin(time+0.66*t8);","point_eqs_eel":"//Define 3D Shape\n\n//Sphere\nfvar = sample*512;\nsvar = fvar/32;\ntvar = 0&svar;\nnsample = tvar*3.5;\nx1 = (1*sin(t8*nsample));\ny1 = (1*cos(t8*nsample));\nz1 = 1.5*sin((0&sample));\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3;\ny4 = y3;\nz4 = z3+5;\n//draw 3d shape in 2d\nx=0.5+0.5*(x4/(1+z4*0.5));\ny=0.5+0.5*(y4/(1+z4*0.5));\n\nr = g+value1;"},{"baseVals":{"thick":1,"scaling":0.463735,"smoothing":0,"enabled":0},"init_eqs_str":"//pi\nt8=3.14159265;\nt5 = 1;","frame_eqs_str":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 3*sin(time+1.33*t8);\nt5 = 10+8*cos(time+1.33*t8);\n\nr = 0.5-0.4*cos(time+1.33*t8);\nb = 0.5-0.4*sin(time+1.33*t8);","point_eqs_str":"//Define 3D Shape\n\n//Cube\nx0 = if(below(sample*12,1),sample*12, if(below(sample*12,2),1, if(below(sample*12,3),abs(sample*12-3), if(below(sample*12,6),0, if(below(sample*12,8),1, if(below(sample*12,9),abs(sample*12-9), if(below(sample*12,10),0, if(below(sample*12,11),sample*12-10,1))))))));\ny0 = if(below(sample*12,1),0, if(below(sample*12,2),sample*12-1, if(below(sample*12,3),1, if(below(sample*12,4),abs(sample*12-4), if(below(sample*12,5),0, if(below(sample*12,7),1, if(below(sample*12,9),0, if(below(sample*12,10),sample*12-9, if(below(sample*12,11),1,abs(sample*12-12))))))))));\nz0 = if(below(sample*12,4),0, if(below(sample*12,5),sample*12-4, if(below(sample*12,6),abs(sample*12-6), if(below(sample*12,7),sample*12-6, if(below(sample*12,8),abs(sample*12-8),1)))));\nx1 = 0.5-x0+if(below(sin(sample*12*3.1415),0),value1,0);\ny1 = 0.5-y0+if(below(cos((sample*12-1.5)*3.1415),0),value1,0);\nz1 = 0.5-z0+if(below(sample*12,4),0,if(below(sample*12,8),value1,0));\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3+t4;\ny4 = y3;\nz4 = z3+t5;\n//draw 3d shape in 2d\nx=0.5+0.5*(x4/(1+z4*0.5));\ny=0.5+0.5*(y4/(1+z4*0.5));\n\ng = b+value1;","init_eqs_eel":"//pi\nt8=3.14159265;\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\nroty = roty+mid;\nrotz = rotz+treb;\n//rotx = 0;\n//roty =0;\n//rotz = 0;\n\n//convert rotation values from degrees to radians\nt1= t8*rotx/180;\nt2 = t8*roty/180;\nt3 = t8*rotz/180;\n\nt4 = 3*sin(time+1.33*t8);\nt5 = 10+8*cos(time+1.33*t8);\n\nr = 0.5-0.4*cos(time+1.33*t8);\nb = 0.5-0.4*sin(time+1.33*t8);","point_eqs_eel":"//Define 3D Shape\n\n//Cube\nx0 = if(below(sample*12,1),sample*12, if(below(sample*12,2),1, if(below(sample*12,3),abs(sample*12-3), if(below(sample*12,6),0, if(below(sample*12,8),1, if(below(sample*12,9),abs(sample*12-9), if(below(sample*12,10),0, if(below(sample*12,11),sample*12-10,1))))))));\ny0 = if(below(sample*12,1),0, if(below(sample*12,2),sample*12-1, if(below(sample*12,3),1, if(below(sample*12,4),abs(sample*12-4), if(below(sample*12,5),0, if(below(sample*12,7),1, if(below(sample*12,9),0, if(below(sample*12,10),sample*12-9, if(below(sample*12,11),1,abs(sample*12-12))))))))));\nz0 = if(below(sample*12,4),0, if(below(sample*12,5),sample*12-4, if(below(sample*12,6),abs(sample*12-6), if(below(sample*12,7),sample*12-6, if(below(sample*12,8),abs(sample*12-8),1)))));\nx1 = 0.5-x0+if(below(sin(sample*12*3.1415),0),value1,0);\ny1 = 0.5-y0+if(below(cos((sample*12-1.5)*3.1415),0),value1,0);\nz1 = 0.5-z0+if(below(sample*12,4),0,if(below(sample*12,8),value1,0));\n\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\ny2 = y1*cos(t1)-z1*sin(t1);\nz2 = y1*sin(t1)+z1*cos(t1);\nx2 = z2*sin(t2)+x1*cos(t2);\nz3 = z2*cos(t2)-x1*sin(t2);\nx3 = x2*cos(t3)-y2*sin(t3);\ny3 = y2*cos(t3)+x2*sin(t3);\n//move resulting shape in 3d space\nx4 = x3+t4;\ny4 = y3;\nz4 = z3+t5;\n//draw 3d shape in 2d\nx=0.5+0.5*(x4/(1+z4*0.5));\ny=0.5+0.5*(y4/(1+z4*0.5));\n\ng = b+value1;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;a.newrad=0;a.radc=0;a.newx=0;a.speedc=0;a.trebc=0;a.newzoom=0;a.q2=0;a.newy=0;a.radc=0;a.trebc=0;a.speedc=0;","frame_eqs_str":"a.warp=0;a.wave_a=0;a.radc=.00001<Math.abs(above(.3*a.bass,a.radc))?a.radc+.0005:a.radc-.0005;a.radc=.00001<Math.abs(below(a.radc,0))?0:a.radc;a.trebc=.00001<Math.abs(above(.05*a.treb,a.trebc))?a.trebc+.0005:a.trebc-.0005;a.trebc=.00001<Math.abs(below(a.trebc,0))?0:a.trebc;a.speedc+=a.trebc;a.q1=a.radc;a.q2=a.speedc;","pixel_eqs_str":"a.newx=.5-a.x+a.q1*Math.sin(a.q2);a.newy=.5-a.y-a.q1*Math.cos(a.q2);a.newrad=2*sqrt(a.newx*a.newx+.5625*a.newy*a.newy);a.newzoom=3.2*a.newrad;a.newzoom=.00001<Math.abs(above(a.newzoom,1))?1:a.newzoom;a.dx=a.newx*a.newzoom-a.newx;a.dy=a.newy*a.newzoom-a.newy;","init_eqs_eel":"radc = 0;\ntrebc = 0;\nspeedc = 0;","frame_eqs_eel":"warp=0;\nwave_a=0;\n\nradc = if(above(bass*.3,radc),radc+.0005,radc-.0005);\nradc = if(below(radc,0),0,radc);\n\ntrebc = if(above(treb*.05,trebc),trebc+.0005,trebc-.0005);\ntrebc = if(below(trebc,0),0,trebc);\n\nspeedc = speedc + trebc;\n\nq1 = radc;\nq2 = speedc;","pixel_eqs_eel":"newx = .5-x+q1*sin(q2);\nnewy = .5-y-q1*cos(q2);\nnewrad = sqrt((newx)*(newx)+0.5625*(newy)*(newy))*2;\nnewzoom = .8*newrad*4;\nnewzoom = if(above(newzoom,1),1,newzoom);\n\ndx = (newx)*newzoom - newx;\ndy = (newy)*newzoom - newy;","warp":"","comp":"","warp_hlsl":"","comp_hlsl":""}