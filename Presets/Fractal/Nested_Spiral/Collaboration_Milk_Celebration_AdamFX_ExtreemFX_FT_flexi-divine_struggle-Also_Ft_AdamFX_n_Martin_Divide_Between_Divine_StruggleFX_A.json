{"version":2,"baseVals":{"rating":5,"gammaadj":1.21,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.32104,"fshader":1,"zoom":0.9901,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":24.16,"mv_y":48,"mv_l":0.05,"mv_a":0},"shapes":[{"baseVals":{"sides":13,"textured":1,"rad":0.61162,"tex_zoom":0.21859,"r":0,"g2":0,"a2":1,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":14,"textured":1,"rad":0.33004,"ang":1.00531,"tex_ang":0.62832,"tex_zoom":0.30546,"g":1,"b":1,"r2":1,"b2":1,"a2":1},"init_eqs_str":"","frame_eqs_str":"a.ang=.4*Math.cos(div(a.time,2))+.5;","init_eqs_eel":"","frame_eqs_eel":"ang=cos(time/2)*0.4+0.5;"},{"baseVals":{"enabled":1,"sides":13,"textured":1,"rad":1.01596,"tex_ang":2.19912,"tex_zoom":0.91266,"g":1,"b":1,"r2":1,"b2":0.8,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.ang=.188*(.5*Math.sin(div(a.time,2))+.5);","init_eqs_eel":"","frame_eqs_eel":"ang=(sin(time/2)*.5+.5)*.188;"},{"baseVals":{"enabled":1,"textured":1,"x":0.53,"y":0.75,"rad":0.45378,"tex_ang":0.62832,"tex_zoom":2.2167,"g":1,"b":1,"r2":1,"b2":1,"a2":1},"init_eqs_str":"","frame_eqs_str":"a.x=.3*Math.sin(a.time)+.5;","init_eqs_eel":"","frame_eqs_eel":"x=(sin(time)*0.3+0.5);"}],"waves":[{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"\n\nbasstime=basstime+bass;\nt1=basstime;","point_eqs_str":"masterspeed=604*q1;\nmasterspeed=30;\nrotation1=time*0.01;\n\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\nperspective=0.7;\n\n//error bump\nerror = sin(time*128.5)*8 - 7;\nerror = error * above(error,0);\nerror=error+1;\nerror=1;\n\n//plot x,y,z to point on sphere\nflx=sin(tm*14);\nfly=cos(tm*14);\nsmp=sample*6.283;\nxp=sin(smp*masterspeed )*0.25 * error;\nyp=cos(smp*masterspeed )*0.25 * error;\nzp=0;\n\n\n\n//rotate on y axis;\nangy=time*43;\nangy=q1*100;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\nt2=xp;\nt3=yp;\nt4=zp;\n\n//rotate on x axis\naxs1 = sin(time) + 1.6;\nyq= yp*cos(axs1) - zp*sin(axs1);\nzq= yp*sin(axs1) + zp*cos(axs1);\nyp=yq;\nzp=zq;\n\n//rotate on y axis again\naxs2 = sin(time*0.4)*3.3;\nxq=xp*cos(axs2) - zp*sin(axs2);\nzq=xp*sin(axs2) + zp*cos(axs2);\nxp=xq;\nzp=zq;\n\n//stretch y axis to compensate for aspect ratio\nyp=yp*1.2;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5;\ny=ys+0.5;\n\nr=(value1+0.5)*0.01;\ng=(value1+0.5)*0.4;\nb=(value1+0.5)*0.01;\n","init_eqs_eel":"","frame_eqs_eel":"\n\nbasstime=basstime+bass;\nt1=basstime;","point_eqs_eel":"masterspeed=604*q1;\nmasterspeed=30;\nrotation1=time*0.01;\n\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\nperspective=0.7;\n\n//error bump\nerror = sin(time*128.5)*8 - 7;\nerror = error * above(error,0);\nerror=error+1;\nerror=1;\n\n//plot x,y,z to point on sphere\nflx=sin(tm*14);\nfly=cos(tm*14);\nsmp=sample*6.283;\nxp=sin(smp*masterspeed )*0.25 * error;\nyp=cos(smp*masterspeed )*0.25 * error;\nzp=0;\n\n\n\n//rotate on y axis;\nangy=time*43;\nangy=q1*100;\nxq=xp*cos(angy) - zp*sin(angy);\nzq=xp*sin(angy) + zp*cos(angy);\nxp=xq;\nzp=zq;\n\nt2=xp;\nt3=yp;\nt4=zp;\n\n//rotate on x axis\naxs1 = sin(time) + 1.6;\nyq= yp*cos(axs1) - zp*sin(axs1);\nzq= yp*sin(axs1) + zp*cos(axs1);\nyp=yq;\nzp=zq;\n\n//rotate on y axis again\naxs2 = sin(time*0.4)*3.3;\nxq=xp*cos(axs2) - zp*sin(axs2);\nzq=xp*sin(axs2) + zp*cos(axs2);\nxp=xq;\nzp=zq;\n\n//stretch y axis to compensate for aspect ratio\nyp=yp*1.2;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5;\ny=ys+0.5;\n\nr=(value1+0.5)*0.01;\ng=(value1+0.5)*0.4;\nb=(value1+0.5)*0.01;\n"},{"baseVals":{"enabled":1,"additive":1},"init_eqs_str":"a.rp_fltime=0;a.xp=0;a.yr=0;a.xs=0;a.rotation1=0;a.yp=0;a.smp=0;a.xr=0;a.q1=0;a.rp_fly=0;a.t3=0;a.ys=0;a.rp_flx=0;a.fly=0;a.rptime=0;a.tm=0;a.t2=0;a.perspective=0;a.masterspeed=0;a.flx=0;a.zp=0;a.t4=0;a.zr=0;","frame_eqs_str":"a.tm+=.02*a.bass;a.t2=.4*Math.sin(1*a.tm);a.t3=.4*Math.cos(1*a.tm);a.t4=.2*Math.sin(1*a.tm+.32*a.tm);","point_eqs_str":"a.masterspeed=604*a.q1;a.rotation1=.01*a.time;a.tm=a.time*a.masterspeed*.1;a.perspective=.7;a.rptime=.2*a.time;a.rp_fltime=a.time;a.rp_flx=Math.sin(a.rp_fltime);a.rp_fly=Math.cos(a.rp_fltime);a.xr=.25*Math.sin(a.rptime)*a.rp_fly;a.yr=.33*Math.cos(a.rptime);a.zr=Math.sin(a.rptime)*a.perspective*a.rp_flx;a.flx=Math.sin(14*a.tm);a.fly=Math.cos(14*a.tm);a.smp=6.283*a.sample;a.xp=.25*Math.sin(a.smp*a.masterspeed)*a.fly;a.yp=.33*Math.cos(a.smp*a.masterspeed);a.zp=Math.sin(a.smp*a.masterspeed)*\na.perspective*a.flx;a.xp*=.3;a.yp*=.3;a.zp*=.3;a.xp+=a.t2;a.zp+=a.t3;a.yp+=a.t4;a.zp+=2.1;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=a.ys+.5;a.r=1*(a.value1+.5);a.g=.2*(a.value1+.5);a.b=.1*(a.value1+.5);","init_eqs_eel":"","frame_eqs_eel":"tm=tm+bass*0.02;\nt2=sin(tm*1) * 0.4;\nt3=cos(tm*1) * 0.4;\nt4=sin(tm*1 + tm*0.32) * 0.2;","point_eqs_eel":"masterspeed=604*q1;\nrotation1=time*0.01;\n\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\nperspective=0.7;\n\n//generate rotation point\nrptime=time*0.2;\nrp_fltime=time;\nrp_flx=sin(rp_fltime);\nrp_fly=cos(rp_fltime);\nxr=sin(rptime )*0.25*rp_fly ;\nyr=cos(rptime)*0.33 ;\nzr=sin(rptime)*perspective*rp_flx;\n\n//plot x,y,z to point on sphere\nflx=sin(tm*14);\nfly=cos(tm*14);\nsmp=sample*6.283;\nxp=sin(smp*masterspeed )*0.25*fly ;\nyp=cos(smp*masterspeed )*0.33 ;\nzp=sin(smp*masterspeed )*perspective*flx;\nxp=xp*0.3;\nyp=yp*0.3;\nzp=zp*0.3;\n\n//add orbit value\nxp=xp+t2;\nzp=zp+t3;\nyp=yp+t4;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5;\ny=ys+0.5;\n\nr=(value1+0.5)*1.0;\ng=(value1+0.5)*0.2;\nb=(value1+0.5)*0.1;"},{"baseVals":{"enabled":1,"additive":1},"init_eqs_str":"a.rp_fltime=0;a.xp=0;a.yr=0;a.xs=0;a.rotation1=0;a.yp=0;a.smp=0;a.xr=0;a.q1=0;a.rp_fly=0;a.t3=0;a.ys=0;a.rp_flx=0;a.fly=0;a.rptime=0;a.tm=0;a.t2=0;a.perspective=0;a.masterspeed=0;a.flx=0;a.zp=0;a.t4=0;a.zr=0;","frame_eqs_str":"a.tm+=.02*a.mid;a.t2=.5*Math.sin(1*a.tm);a.t3=.5*Math.cos(1*a.tm);a.t4=.2*Math.sin(1*a.tm+.32*a.tm);","point_eqs_str":"a.masterspeed=604*a.q1;a.rotation1=.01*a.time;a.tm=a.time*a.masterspeed*.1;a.perspective=.7;a.rptime=.2*a.time;a.rp_fltime=a.time;a.rp_flx=Math.sin(a.rp_fltime);a.rp_fly=Math.cos(a.rp_fltime);a.xr=.25*Math.sin(a.rptime)*a.rp_fly;a.yr=.33*Math.cos(a.rptime);a.zr=Math.sin(a.rptime)*a.perspective*a.rp_flx;a.flx=Math.sin(14*a.tm);a.fly=Math.cos(14*a.tm);a.smp=6.283*a.sample;a.xp=.25*Math.sin(a.smp*a.masterspeed)*a.fly;a.yp=.33*Math.cos(a.smp*a.masterspeed);a.zp=Math.sin(a.smp*a.masterspeed)*\na.perspective*a.flx;a.xp*=.3;a.yp*=.3;a.zp*=.3;a.xp+=a.t2;a.zp+=a.t3;a.yp+=a.t4;a.zp+=2.1;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=a.ys+.5;a.r=1*(a.value1+.5);a.g=.1*(a.value1+.5);a.b=.8*(a.value1+.5);","init_eqs_eel":"","frame_eqs_eel":"tm=tm+mid*0.02;\nt2=sin(tm*1) * 0.5;\nt3=cos(tm*1) * 0.5;\nt4=sin(tm*1 + tm*0.32) * 0.2;","point_eqs_eel":"masterspeed=604*q1;\nrotation1=time*0.01;\n\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\nperspective=0.7;\n\n//generate rotation point\nrptime=time*0.2;\nrp_fltime=time;\nrp_flx=sin(rp_fltime);\nrp_fly=cos(rp_fltime);\nxr=sin(rptime )*0.25*rp_fly ;\nyr=cos(rptime)*0.33 ;\nzr=sin(rptime)*perspective*rp_flx;\n\n//plot x,y,z to point on sphere\nflx=sin(tm*14);\nfly=cos(tm*14);\nsmp=sample*6.283;\nxp=sin(smp*masterspeed )*0.25*fly ;\nyp=cos(smp*masterspeed )*0.33 ;\nzp=sin(smp*masterspeed )*perspective*flx;\nxp=xp*0.3;\nyp=yp*0.3;\nzp=zp*0.3;\n\n//add orbit value\nxp=xp+t2;\nzp=zp+t3;\nyp=yp+t4;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5;\ny=ys+0.5;\n\n\nr=(value1+0.5)*1.0;\ng=(value1+0.5)*0.1;\nb=(value1+0.5)*0.8;"},{"baseVals":{"enabled":1,"additive":1},"init_eqs_str":"a.rp_fltime=0;a.xp=0;a.yr=0;a.xs=0;a.rotation1=0;a.yp=0;a.smp=0;a.xr=0;a.q1=0;a.rp_fly=0;a.t3=0;a.ys=0;a.rp_flx=0;a.fly=0;a.rptime=0;a.tm=0;a.t2=0;a.perspective=0;a.masterspeed=0;a.flx=0;a.zp=0;a.t4=0;a.zr=0;","frame_eqs_str":"a.tm+=.02*a.treb;a.t2=.6*Math.sin(1*a.tm);a.t3=.6*Math.cos(1*a.tm);a.t4=.2*Math.sin(1*a.tm+.32*a.tm);","point_eqs_str":"a.masterspeed=604*a.q1;a.rotation1=.01*a.time;a.tm=a.time*a.masterspeed*.1;a.perspective=.7;a.rptime=.2*a.time;a.rp_fltime=a.time;a.rp_flx=Math.sin(a.rp_fltime);a.rp_fly=Math.cos(a.rp_fltime);a.xr=.25*Math.sin(a.rptime)*a.rp_fly;a.yr=.33*Math.cos(a.rptime);a.zr=Math.sin(a.rptime)*a.perspective*a.rp_flx;a.flx=Math.sin(14*a.tm);a.fly=Math.cos(14*a.tm);a.smp=6.283*a.sample;a.xp=.25*Math.sin(a.smp*a.masterspeed)*a.fly;a.yp=.33*Math.cos(a.smp*a.masterspeed);a.zp=Math.sin(a.smp*a.masterspeed)*\na.perspective*a.flx;a.xp*=.3;a.yp*=.3;a.zp*=.3;a.xp+=a.t2;a.zp+=a.t3;a.yp+=a.t4;a.zp+=2.1;a.xs=div(a.xp,a.zp);a.ys=div(a.yp,a.zp);a.x=a.xs+.5;a.y=a.ys+.5;a.r=.1*(a.value1+.5);a.g=.2*(a.value1+.5);a.b=1*(a.value1+.5);","init_eqs_eel":"","frame_eqs_eel":"tm=tm+treb*0.02;\nt2=sin(tm*1) * 0.6;\nt3=cos(tm*1) * 0.6;\nt4=sin(tm*1 + tm*0.32) * 0.2;","point_eqs_eel":"masterspeed=604*q1;\nrotation1=time*0.01;\n\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\nperspective=0.7;\n\n//generate rotation point\nrptime=time*0.2;\nrp_fltime=time;\nrp_flx=sin(rp_fltime);\nrp_fly=cos(rp_fltime);\nxr=sin(rptime )*0.25*rp_fly ;\nyr=cos(rptime)*0.33 ;\nzr=sin(rptime)*perspective*rp_flx;\n\n//plot x,y,z to point on sphere\nflx=sin(tm*14);\nfly=cos(tm*14);\nsmp=sample*6.283;\nxp=sin(smp*masterspeed )*0.25*fly ;\nyp=cos(smp*masterspeed )*0.33 ;\nzp=sin(smp*masterspeed )*perspective*flx;\nxp=xp*0.3;\nyp=yp*0.3;\nzp=zp*0.3;\n\n//add orbit value\nxp=xp+t2;\nzp=zp+t3;\nyp=yp+t4;\n\n//push forward into viewpace\nzp=zp+2.1;\n\n//project x,y,z into screenspace\nxs=xp/zp;\nys=yp/zp;\n\n//center 0,0 in middle of screen\nx=xs+0.5;\ny=ys+0.5;\n\n\nr=(value1+0.5)*0.1;\ng=(value1+0.5)*0.2;\nb=(value1+0.5)*1.0;"}],"init_eqs_str":"a.d=0;a.vt=0;a.q6=0;a.q1=0;a.q5=0;a.vb=0;a.v=0;a.mm=0;a.tt=0;a.q4=0;a.bb=0;a.q2=0;a.q3=0;a.vvm=0;a.vvb=0;a.vm=0;a.vvt=0;a.x1=0;a.y1=0;","frame_eqs_str":"a.zoom=1;a.q1=.1*(a.bass-a.treb);a.vvb=.00001<Math.abs(below(a.vvb,0))?0:a.vvb;a.vvm=.00001<Math.abs(below(a.vvm,0))?0:a.vvm;a.vvt=.00001<Math.abs(below(a.vvt,0))?0:a.vvt;a.vb=.85*a.vb+(1-a.vb)*pow(a.bass,2)*.001;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.2;a.vm=.85*a.vm+(1-a.vm)*pow(a.mid,2)*.01;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.2;a.vt=.85*a.vt+(1-a.vt)*pow(a.treb,2)*.001;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.2;a.q1=(a.vvb-a.vvt)*a.vvm;a.q2=a.vvm;a.q3=a.vvt;a.v=.2;a.d=0;a.bb=a.bb+a.vvb*a.v-a.d;\na.mm=a.mm+a.vvm*a.v-a.d;a.tt=a.tt+a.vvt*a.v-a.d;a.q4=a.bb;a.q5=a.mm;a.q6=a.tt;a.decay=.00001<Math.abs(above(Math.abs(a.q1),.005))?.99:1;","pixel_eqs_str":"","init_eqs_eel":"x1 = 0;\ny1 = 0;","frame_eqs_eel":"zoom = 1.0;\n\nq1 = .1*(bass-treb);\n\nvvb = if(below(vvb,0),0,vvb);\nvvm = if(below(vvm,0),0,vvm);\nvvt = if(below(vvt,0),0,vvt);\nvb = vb*0.85 + (1-vb)*pow(bass,2)*0.001;\nvvb = vvb*0.95 + (1-vvb)*vb*0.2;\nvm = vm*0.85 + (1-vm)*pow(mid,2)*0.01;\nvvm = vvm*0.95 + (1-vvm)*vm*0.2;\nvt = vt*0.85 + (1-vt)*pow(treb,2)*0.001;\nvvt = vvt*0.95 + (1-vvt)*vt*0.2;\n\nq1 = (vvb-vvt)*vvm;//0.5 + vb - vvb;\nq2 = vvm;//0.5 + vm - vvm;\nq3 = vvt;//0.5 + vt - vvt;\n\nv=0.2;\nd = 0;//v*0.2;\nbb = bb + vvb*v - d;\nmm = mm + vvm*v - d;\ntt = tt + vvt*v - d;\nq4 = bb;\nq5 = mm;\nq6 = tt;\n\n\ndecay = if(above(abs(q1),0.005),0.99,1);","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + ((0.004 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ).xy * vec2(0.0, 1.0)));\n  uv6_2 = (0.4 * sin((\n    (((uv - 0.5) * aspect.xy) * 18.0)\n   * rand_frame.xy)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (vec3((0.051 / sqrt(dot (uv6_2, uv6_2)))) * vec3(0.15, 0.12, 0.075))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_3.xyz;\n }","comp":"vec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  vec2 uv2_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (time / 2.0);\n  dist_3 = (1.0 - fract(tmpvar_5));\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 8.0);\n  vec2 tmpvar_6;\n  tmpvar_6.x = q1;\n  tmpvar_6.y = q2;\n  vec2 tmpvar_7;\n  tmpvar_7 = fract(((\n    ((3.0 * uv_1) * dist_3)\n   + 0.5) + (tmpvar_6 * 0.05)));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_7).xyz - ((texture (sampler_blur1, \n    (tmpvar_7 + 0.003)\n  ).xyz * scale1) + bias1));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * -0.4990803) - (uv_1.y * 0.8665558));\n  uv2_4.y = ((uv_1.x * 0.8665558) + (uv_1.y * -0.4990803));\n  dist_3 = (1.0 - fract((0.3333333 + tmpvar_5)));\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 8.0);\n  vec2 tmpvar_8;\n  tmpvar_8.x = q1;\n  tmpvar_8.y = q2;\n  vec2 tmpvar_9;\n  tmpvar_9 = fract(((\n    ((3.0 * uv2_4) * dist_3)\n   + 0.5) + (tmpvar_8 * 0.05)));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_9).xyz - ((texture (sampler_blur1, \n    (tmpvar_9 + 0.003)\n  ).xyz * scale1) + bias1));\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * -0.5018377) - (uv_1.y * -0.8649619));\n  uv2_4.y = ((uv_1.x * -0.8649619) + (uv_1.y * -0.5018377));\n  dist_3 = (1.0 - fract((0.6666667 + tmpvar_5)));\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 8.0);\n  vec2 tmpvar_10;\n  tmpvar_10.x = q1;\n  tmpvar_10.y = q2;\n  vec2 tmpvar_11;\n  tmpvar_11 = fract(((\n    ((3.0 * uv2_4) * dist_3)\n   + 0.5) + (tmpvar_10 * 0.05)));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_11).xyz - ((texture (sampler_blur1, \n    (tmpvar_11 + 0.003)\n  ).xyz * scale1) + bias1));\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  uv2_4.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  uv2_4.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  dist_3 = (1.0 - fract((1.0 + tmpvar_5)));\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 8.0);\n  vec2 tmpvar_12;\n  tmpvar_12.x = q1;\n  tmpvar_12.y = q2;\n  vec2 tmpvar_13;\n  tmpvar_13 = fract(((\n    ((3.0 * uv2_4) * dist_3)\n   + 0.5) + (tmpvar_12 * 0.05)));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_13).xyz - ((texture (sampler_blur1, \n    (tmpvar_13 + 0.003)\n  ).xyz * scale1) + bias1));\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = (xlat_mutableret1 * 4.0);\n  ret = tmpvar_14.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\n\nfloat2 uv6 = uv1;\nfloat z = q29*2*length(uv1)+rand_frame * 64;\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-8,8);\nuv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;\n\n\nuv6 = .4*sin(uv1*18*rand_frame);\nmus = .051/(length(uv6));\nmus *= float3 (1,.8,.5);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.03 + .15*mus;\nfloat2 uv2 = (uv_orig-.5)-float2(.5,.5+0.1*q25);\n\nq25 = 1;\nret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"float3 ret1, neu;\nfloat2 rs,rs2,uv1;\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat dist = 1;\nfloat inten = 1;\nfloat mask = 0;\nret1 = 0;\nint anz = 3;\nfloat n = 0;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    dist = 1-frac(1.0/anz*n+time/2); //evtl sqrt !\n\n    inten =  sqrt(dist)*(1-dist)*8;\nfloat2 uv3 =  frac(3*uv2*dist + 0.5+float2(q1,q2)*.05);\n    neu = 1*GetPixel(uv3) -GetBlur1(uv3+.003);\n    ret1 = max(ret1,neu*inten);\nn++;\n}\n\nrs2 = .5*cos(uv*13) - ret1;;\nfloat dots = saturate(.05/length(rs2)) ;\n\n\nret = 2*ret1.gbr + 21*dots*(.1+3*ret1) ;\nret = ret1*4;\n}"}