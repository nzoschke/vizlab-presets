{"version":2,"baseVals":{"rating":5,"wave_mode":2,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_a":0.001,"wave_scale":0.685,"warpscale":2.853,"zoomexp":3.6,"zoom":1.02109,"rot":-0.16,"warp":0.309,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_x":64,"mv_y":48,"mv_l":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":1.79142,"tex_ang":0.06283,"g":1,"b":1,"a":0.08,"r2":1,"b2":1,"a2":0.08,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.additive=a.q1;a.a=.00001<Math.abs(a.q1)?1:a.a;a.a2=a.a;a.r=a.q1;a.r2=a.q1;a.tex_zoom=3-3*a.bass;","init_eqs_eel":"","frame_eqs_eel":"additive = q1;\na = if(q1,1,a);\na2 = a;\nr = q1;\nr2 =q1;\ntex_zoom = 3 - 3*bass;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":1.79142,"tex_ang":0.06283,"b":1,"a":0.08,"r2":1,"a2":0.08,"border_a":0},"init_eqs_str":"a.q1=0;","frame_eqs_str":"a.additive=a.q1;a.a=.00001<Math.abs(a.q1)?1:a.a;a.a2=a.a;a.r=a.q1;a.r2=a.q1;a.tex_zoom=3-2*a.bass;","init_eqs_eel":"","frame_eqs_eel":"additive = q1;\na = if(q1,1,a);\na2 = a;\nr = q1;\nr2 =q1;\ntex_zoom = 3 - 2*bass;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.91974,"tex_ang":1.69646,"tex_zoom":1.0303,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.tex_zoom=a.q1+a.tex_zoom-.01*a.q2;a.a2=1;a.tex_ang=.2*a.q2+Math.sin(.4*a.time);","init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q1+tex_zoom - 0.01*q2;\na2 = 1;\ntex_ang = 0.2*q2 + sin(0.4*time);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q8=0;a.oldq8=0;","frame_eqs_str":"a.wave_r+=.4*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.4*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.wave_b+=.4*(.6*Math.sin(.91*a.time)+.4*Math.sin(.92*a.time));a.q8=a.oldq8+(.00001<Math.abs(above(a.bass+a.bass_att,1.8))?a.q8+.0005*pow(a.bass+a.bass_att-1,9):0);a.oldq8=a.q8;a.monitor=a.q8;a.zoom+=.023*(.6*Math.sin(.339*a.q8)+.4*Math.sin(.276*a.q8));a.rot+=.03*(.6*Math.sin(.381*a.q8)+.4*Math.sin(.579*a.q8));a.mv_r=a.wave_r;a.mv_b=a.wave_b;a.mv_g=\na.wave_g;a.mv_x=1.25;a.mv_y=1.25;a.mv_dx=.1*Math.sin(1.1*a.time);a.mv_dy=.1*Math.cos(1.112*a.time);","pixel_eqs_str":"a.rot+=div(1,10*(a.rad+.2+.1*Math.sin(a.q8)));","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\noldq8 = q8;\nmonitor = q8;\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\n//decay = decay - 0.02*equal(frame%40,0);\nmv_r = wave_r;\nmv_b = wave_b;\nmv_g = wave_g;\nmv_x = 1.25;\nmv_y = 1.25;\nmv_dx = 0.1*sin(1.1*time);\nmv_dy = 0.1*cos(1.112*time);","pixel_eqs_eel":"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\n   * 0.01))).xyz + ((\n    (texture (sampler_noise_lq, ((uv_orig * 4.0) + rand_frame.xy)) * 2.0)\n   - 1.0) * 0.02).xyz);\n  float vec_y_2;\n  vec_y_2 = (uv_orig.y - 0.5);\n  float vec_x_3;\n  vec_x_3 = (uv_orig.x - 0.5);\n  float tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (min (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0) / max (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0));\n  float tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\n  tmpvar_6 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\n  tmpvar_6 = (tmpvar_6 + (float(\n    (abs((vec_y_2 / vec_x_3)) > 1.0)\n  ) * (\n    (tmpvar_6 * -2.0)\n   + 1.570796)));\n  tmpvar_4 = (tmpvar_6 * sign((vec_y_2 / vec_x_3)));\n  if ((abs(vec_x_3) > (1e-08 * abs(vec_y_2)))) {\n    if ((vec_x_3 < 0.0)) {\n      if ((vec_y_2 >= 0.0)) {\n        tmpvar_4 += 3.141593;\n      } else {\n        tmpvar_4 = (tmpvar_4 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_4 = (sign(vec_y_2) * 1.570796);\n  };\n  ret_1 = (ret_1 + (cos(\n    ((tmpvar_4 * 17.0) + (time * 12.0))\n  ) * 0.15));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  float tmpvar_3;\n  tmpvar_3 = dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29));\n  ret_1 = (((vec3(1.1, 0.8, 0.7) * tmpvar_2.x) + (vec3(0.4, 0.6, 0.55) * tmpvar_2.y)) + (vec3(0.7, 0.6, 0.9) * tmpvar_2.z));\n  ret_1 = ((ret_1 * ret_1) * (1.3 + (\n    (clamp (((\n      cos(((tmpvar_3 * 27.0) + 3.0))\n     * 30.0) - 26.0), 0.0, 1.0) * clamp (((\n      cos(((tmpvar_3 * 27.0) + 3.0))\n     * 30.0) - 26.0), 0.0, 1.0))\n   * 5.0)));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // PAINTERLY EFFECT:\n    float2 uv2 = uv;\n    const float mipbias = 0;\n    float2 delta2 = texsize.zw*float2(1,1);\n    float3 blurry_color = tex2D( sampler_main, uv2 + delta2 ).xyz;\n    uv2.xy += (blurry_color.xy-0.37) * 0.01;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv2 ).xyz;\n\n    ret += (tex2D(sampler_noise_lq, uv_orig*4 + rand_frame.xy)*2-1)*0.02;\n\n    float ang2 = atan2(uv_orig.y-0.5,uv_orig.x-0.5);\n    ret += (  cos(ang2*17 + time*12 + lum(ret)*0) )*0.15;\n\n    // darken over time\n    //ret -= 0.004;    \n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    float L = lum(ret);\n    float bw = saturate(cos(L*27 + 3)*30 - 26);\n    float L2 = lum(GetBlur1(uv));\n    float bw2 = saturate(cos(L*27 + 3)*30 - 26);\n\n    ret = float3(1.1,0.8,0.7)*ret.x +\n          float3(0.4,0.6,0.55)*ret.y + \n          float3(0.7,0.6,0.9)*ret.z;\n\n    ret = ret*ret * (1.3 + bw*bw2*5);\n\n}"}