{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1.817,"echo_orient":1,"wave_mode":4,"wave_dots":1,"modwavealphabyvolume":1,"wave_a":0.181,"wave_scale":1.161,"wave_smoothing":0.417,"wave_mystery":-0.3,"modwavealphaend":1.65,"fshader":0.45,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.97,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":31.2,"mv_y":2.28,"mv_dy":0.78,"mv_l":2.5,"mv_b":0.8,"mv_a":0.42},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.b3=0;a.x1=0;a.meanbass_att=0;a.g3=0;a.r1=0;a.g2=0;a.lastbeat=0;a.x3=0;a.beatrate=0;a.peakbass_att=0;a.r2=0;a.framethird=0;a.r3=0;a.x2=0;a.volume=0;a.b2=0;a.beat=0;a.g1=0;a.b1=0;","frame_eqs_str":"a.warp=0;a.framethird=mod(a.frame,3);a.x1=.5+.15*Math.sin(.416*a.time)+.15*Math.sin(.832*a.time)+.1*Math.sin(1.324*a.time);a.x2=.5+.15*Math.sin(.341*a.time)+.15*Math.sin(.768*a.time)+.1*Math.sin(1.523*a.time);a.x3=.5+.15*Math.sin(.287*a.time)+.15*Math.sin(.913*a.time)+.1*Math.sin(1.142*a.time);a.r1=.5+.15*Math.sin(.512*a.time)+.15*Math.sin(.943*a.time)+.1*Math.sin(1.024*a.time);a.r2=.5+.15*Math.sin(.483*a.time)+.15*Math.sin(.879*a.time)+.1*Math.sin(1.423*a.time);a.r3=.5+.15*\nMath.sin(.531*a.time)+.15*Math.sin(.671*a.time)+.1*Math.sin(1.442*a.time);a.g1=.5+.15*Math.sin(.248*a.time)+.15*Math.sin(.829*a.time)+.1*Math.sin(1.623*a.time);a.g2=.5+.15*Math.sin(.461*a.time)+.15*Math.sin(.699*a.time)+.1*Math.sin(1.254*a.time);a.g3=.5+.15*Math.sin(.397*a.time)+.15*Math.sin(.768*a.time)+.1*Math.sin(1.157*a.time);a.b1=.5+.15*Math.sin(.211*a.time)+.15*Math.sin(.652*a.time)+.1*Math.sin(1.865*a.time);a.b2=.5+.15*Math.sin(.333*a.time)+.15*Math.sin(.978*a.time)+.1*Math.sin(1.359*a.time);\na.b3=.5+.15*Math.sin(.475*a.time)+.15*Math.sin(.791*a.time)+.1*Math.sin(1.011*a.time);a.wave_x=.00001<Math.abs(equal(a.framethird,0))?a.x1:.00001<Math.abs(equal(a.framethird,1))?a.x2:a.x3;a.wave_r=.00001<Math.abs(equal(a.framethird,0))?a.r1:.00001<Math.abs(equal(a.framethird,1))?a.r2:a.r3;a.wave_g=.00001<Math.abs(equal(a.framethird,0))?a.g1:.00001<Math.abs(equal(a.framethird,1))?a.g2:a.g3;a.wave_b=.00001<Math.abs(equal(a.framethird,0))?a.b1:.00001<Math.abs(equal(a.framethird,1))?a.b2:a.b3;a.volume=\n.3*(a.bass+a.mid);a.beatrate=equal(a.beatrate,0)+(1-equal(a.beatrate,0))*(below(a.volume,.01)+(1-below(a.volume,.01))*a.beatrate);a.lastbeat+=equal(a.lastbeat,0)*a.time;a.meanbass_att=.1*(9*a.meanbass_att+a.bass_att);a.peakbass_att=Math.max(a.bass_att,a.peakbass_att);a.beat=above(a.volume,.8)*below(a.peakbass_att-a.bass_att,.05*a.peakbass_att)*above(a.time-a.lastbeat,.1+.5*(a.beatrate-.1));a.beatrate=Math.max(.00001<Math.abs(a.beat)?.00001<Math.abs(below(a.time-a.lastbeat,2*a.beatrate))?.1*(9*a.beatrate+\na.time-a.lastbeat):a.beatrate:a.beatrate,.1);a.peakbass_att=a.beat*a.bass_att+(1-a.beat)*a.peakbass_att*(.99*above(a.time-a.lastbeat,2*a.beatrate)+.998*(1-above(a.time-a.lastbeat,2*a.beatrate)));a.lastbeat=a.beat*a.time+(1-a.beat)*a.lastbeat;a.peakbass_att=Math.max(a.peakbass_att,1.1*a.meanbass_att);a.dx=.00001<Math.abs(a.beat)?1-2*rand(2):0;a.ob_a=.00001<Math.abs(a.beat)?0:.65;a.mv_a=.00001<Math.abs(a.beat)?1:.05;","pixel_eqs_str":"a.dy=.004+.0005*Math.sin(10*a.x+.459*a.time)+.0005*Math.sin(14*a.x+.325*a.time)+.0005*Math.sin(1.231*a.time);","init_eqs_eel":"","frame_eqs_eel":"warp=.0;\n\nframethird = frame%3;\n\nx1 = 0.5 + 0.15*sin(0.416*time) + 0.15*sin(0.832*time) + 0.1*sin(1.324*time);\nx2 = 0.5 + 0.15*sin(0.341*time) + 0.15*sin(0.768*time) + 0.1*sin(1.523*time);\nx3 = 0.5 + 0.15*sin(0.287*time) + 0.15*sin(0.913*time) + 0.1*sin(1.142*time);\nr1 = 0.5 + 0.15*sin(0.512*time) + 0.15*sin(0.943*time) + 0.1*sin(1.024*time);\nr2 = 0.5 + 0.15*sin(0.483*time) + 0.15*sin(0.879*time) + 0.1*sin(1.423*time);\nr3 = 0.5 + 0.15*sin(0.531*time) + 0.15*sin(0.671*time) + 0.1*sin(1.442*time);\ng1 = 0.5 + 0.15*sin(0.248*time) + 0.15*sin(0.829*time) + 0.1*sin(1.623*time);\ng2 = 0.5 + 0.15*sin(0.461*time) + 0.15*sin(0.699*time) + 0.1*sin(1.254*time);\ng3 = 0.5 + 0.15*sin(0.397*time) + 0.15*sin(0.768*time) + 0.1*sin(1.157*time);\nb1 = 0.5 + 0.15*sin(0.211*time) + 0.15*sin(0.652*time) + 0.1*sin(1.865*time);\nb2 = 0.5 + 0.15*sin(0.333*time) + 0.15*sin(0.978*time) + 0.1*sin(1.359*time);\nb3 = 0.5 + 0.15*sin(0.475*time) + 0.15*sin(0.791*time) + 0.1*sin(1.011*time);\nwave_x = if(equal(framethird,0),x1,if(equal(framethird,1),x2,x3));\nwave_r = if(equal(framethird,0),r1,if(equal(framethird,1),r2,r3));\nwave_g = if(equal(framethird,0),g1,if(equal(framethird,1),g2,g3));\nwave_b = if(equal(framethird,0),b1,if(equal(framethird,1),b2,b3));\n\nvolume = 0.3*(bass+mid);\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\nlastbeat = lastbeat + equal(lastbeat,0)*time;\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\npeakbass_att = max(bass_att,peakbass_att);\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.99 + (1-above(time - lastbeat, 2*beatrate))*0.998);\nlastbeat = beat*time + (1-beat)*lastbeat;\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\ndx = if(beat,1-2*rand(2),0);\nob_a = if(beat,0,0.65);\nmv_a = if(beat,1,0.05);","pixel_eqs_eel":"dy = 0.004 + 0.0005*sin(10*x+0.459*time) + 0.0005*sin(14*x+0.325*time) + 0.0005*sin(1.231*time);\n//dx = dx + 0.0001*sin(9*y+0.612*time) + 0.0001*sin(13*y+0.429*time) + 0.0001*sin(1.027*time);","warp":"","comp":"float trel;\nfloat vshift;\nvec2 sunpos;\nvec3 xlat_mutablelava;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nfloat xlat_mutablesmoke;\nfloat xlat_mutablesmoke2;\nfloat xlat_mutablesun;\nvec2 xlat_mutableuv_l;\nvec3 xlat_mutableuv_vol;\nvec2 xlat_mutableuvc;\nfloat xlat_mutablew;\nfloat xlat_mutablez;\n shader_body { \n  trel = (time / 2.0);\n  vshift = (0.5 - q29);\n  vec2 tmpvar_1;\n  tmpvar_1.x = rand_preset.x;\n  tmpvar_1.y = ((-0.1 - (rand_preset.y / 2.0)) + vshift);\n  sunpos = (tmpvar_1 * aspect.xy);\n  float tmpvar_2;\n  tmpvar_2 = (time * 0.1);\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.wz);\n  float tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (min (abs(\n    (tmpvar_3.x / tmpvar_3.y)\n  ), 1.0) / max (abs(\n    (tmpvar_3.x / tmpvar_3.y)\n  ), 1.0));\n  float tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\n  tmpvar_6 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\n  tmpvar_6 = (tmpvar_6 + (float(\n    (abs((tmpvar_3.x / tmpvar_3.y)) > 1.0)\n  ) * (\n    (tmpvar_6 * -2.0)\n   + 1.570796)));\n  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.x / tmpvar_3.y)));\n  if ((abs(tmpvar_3.y) > (1e-08 * abs(tmpvar_3.x)))) {\n    if ((tmpvar_3.y < 0.0)) {\n      if ((tmpvar_3.x >= 0.0)) {\n        tmpvar_4 += 3.141593;\n      } else {\n        tmpvar_4 = (tmpvar_4 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_4 = (sign(tmpvar_3.x) * 1.570796);\n  };\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((0.3183098 * tmpvar_4) + tmpvar_2);\n  tmpvar_7.y = (((\n    (aspect.w * log(sqrt(dot (tmpvar_3, tmpvar_3))))\n   * 0.6) + (0.3183098 * tmpvar_4)) - (tmpvar_2 * 4.0));\n  vec2 tmpvar_8;\n  tmpvar_8 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_7 * 0.5)) * 2.0) - 1.0)\n  )));\n  xlat_mutableuvc = (((tmpvar_8 - 0.5) * aspect.xy) + 0.5);\n  vec2 tmpvar_9;\n  tmpvar_9.y = 0.0;\n  tmpvar_9.x = (0.005 * time);\n  xlat_mutableuv_l = (tmpvar_8 + tmpvar_9);\n  vec2 tmpvar_10;\n  tmpvar_10 = sin((xlat_mutableuvc - sunpos));\n  xlat_mutablesun = (0.1 / sqrt(dot (tmpvar_10, tmpvar_10)));\n  vec2 tmpvar_11;\n  tmpvar_11 = fract(tmpvar_8);\n  vec3 tmpvar_12;\n  tmpvar_12 = vec3((texture (sampler_fc_main, tmpvar_11).x + (2.0 * (\n    (texture (sampler_blur2, tmpvar_11).xyz * scale2)\n   + bias2).x)));\n  vec3 tmpvar_13;\n  tmpvar_13.x = tmpvar_12.x;\n  tmpvar_13.y = pow (tmpvar_12.x, 2.1);\n  tmpvar_13.z = pow (tmpvar_12.x, 4.0);\n  xlat_mutablew = ((tmpvar_8.y - (\n    ((dot (texture (sampler_noise_hq, vec2((xlat_mutableuv_l.x / 6.0))), vec4(0.32, 0.49, 0.29, 0.0)) + tmpvar_8.x) - 0.5)\n   / 4.0)) - vshift);\n  xlat_mutablez = (0.2 / xlat_mutablew);\n  float tmpvar_14;\n  tmpvar_14 = clamp ((-0.2 - (\n    (8.0 * q5)\n   * xlat_mutablew)), 0.0, 1.0);\n  xlat_mutablers0.x = (((tmpvar_8.x - 0.5) * (1.0 + \n    abs(xlat_mutablez)\n  )) * 2.0);\n  xlat_mutablers0.y = xlat_mutablez;\n  xlat_mutablers0 = (xlat_mutablers0 * ((4.0 * \n    float((xlat_mutablez <= 0.0))\n  ) + 1.0));\n  vec2 tmpvar_15;\n  tmpvar_15.x = 0.0;\n  tmpvar_15.y = (1.5 + xlat_mutablew);\n  vec2 x_16;\n  x_16 = (xlat_mutablers0 - tmpvar_15);\n  float tmpvar_17;\n  tmpvar_17 = ((q26 / sqrt(\n    dot (x_16, x_16)\n  )) / 4.0);\n  xlat_mutablers0 = (xlat_mutablers0 * (1.0 + (tmpvar_17 * tmpvar_17)));\n  xlat_mutablers.x = (xlat_mutablers0 * 2.0).x;\n  xlat_mutablers.y = (xlat_mutablers0.y + (trel * 0.5));\n  float tmpvar_18;\n  tmpvar_18 = (texture (sampler_main, tmpvar_8).y * tmpvar_14);\n  vec3 tmpvar_19;\n  tmpvar_19.xy = (xlat_mutablers * 2.0);\n  tmpvar_19.z = (0.2 * trel);\n  xlat_mutableuv_vol = (tmpvar_19 * float((xlat_mutablez >= 0.0)));\n  xlat_mutablelava = (((\n    (2.0 * clamp ((texture (sampler_noisevol_hq, xlat_mutableuv_vol) - 0.2), 0.0, 1.0))\n  .xyz * \n    clamp ((texture (sampler_noise_hq, (xlat_mutablers / 16.0)) - 0.5), 0.0, 1.0)\n  .x) / sqrt(\n    abs(xlat_mutablez)\n  )) + tmpvar_17);\n  float tmpvar_20;\n  tmpvar_20 = dot (xlat_mutablelava, vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_21;\n  tmpvar_21.x = tmpvar_20;\n  tmpvar_21.y = pow (tmpvar_20, 2.1);\n  tmpvar_21.z = pow (tmpvar_20, 6.0);\n  xlat_mutableret1 = (((\n    ((tmpvar_8.y * (1.0 + q23)) + xlat_mutablesun)\n   * vec3(0.1, 0.1, 0.2)) * tmpvar_14) + (clamp (tmpvar_21, 0.0, 1.0) * (1.0 - \n    clamp ((-1.0 - (12.0 * xlat_mutablew)), 0.0, 1.0)\n  )));\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((1.0 - \n    (tmpvar_18 * 8.0)\n  ), 0.0, 1.0));\n  xlat_mutablesmoke = texture (sampler_main, fract(((tmpvar_8 - 0.5) + 0.5))).z;\n  xlat_mutablesmoke = (xlat_mutablesmoke * (xlat_mutablesmoke * q5));\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((1.0 - \n    ((xlat_mutablesmoke * q32) * tmpvar_14)\n  ), 0.0, 1.0));\n  xlat_mutablesmoke2 = (texture (sampler_main, ((\n    (tmpvar_8 - 0.5)\n   / 2.0) + 0.5)).z * q30);\n  xlat_mutableret1 = (xlat_mutableret1 + (clamp (tmpvar_13, 0.0, 1.0) - (\n    ((xlat_mutablez * clamp ((xlat_mutablesmoke + \n      (xlat_mutablew * q31)\n    ), 0.0, 1.0)) * vec3(1.0, 0.4, 0.1))\n   * tmpvar_14)));\n  float tmpvar_22;\n  tmpvar_22 = clamp (((\n    (tmpvar_18 * xlat_mutablez)\n   * xlat_mutablez) / 16.0), 0.0, 1.0);\n  vec3 tmpvar_23;\n  tmpvar_23.x = tmpvar_22;\n  tmpvar_23.y = pow (tmpvar_22, 2.1);\n  tmpvar_23.z = pow (tmpvar_22, 6.0);\n  xlat_mutableret1 = (xlat_mutableret1 + clamp (tmpvar_23, 0.0, 1.0));\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((\n    (((dot (texture (sampler_noise_mq, vec2(\n      ((xlat_mutableuv_l.x / 4.0) + (0.02 * trel))\n    )), vec4(0.32, 0.49, 0.29, 0.0)) / 6.0) - tmpvar_8.y) + 0.8)\n   * 32.0), 0.0, 1.0));\n  vec3 tmpvar_24;\n  tmpvar_24.x = xlat_mutablesmoke2;\n  tmpvar_24.y = pow (xlat_mutablesmoke2, 2.1);\n  tmpvar_24.z = pow (xlat_mutablesmoke2, 6.0);\n  xlat_mutableret1 = ((xlat_mutableret1 * clamp (\n    (1.0 - xlat_mutablesmoke2)\n  , 0.0, 1.0)) + clamp (tmpvar_24, 0.0, 1.0));\n  vec4 tmpvar_25;\n  tmpvar_25.w = 1.0;\n  tmpvar_25.xyz = (1.0 - exp((\n    -(xlat_mutableret1)\n   * 2.0)));\n  ret = tmpvar_25.xyz;\n }","warp_hlsl":"","comp_hlsl":"float3 ret1, fountain, sky, lava, uv_vol;\nfloat2 rs0,rs,uv0, uv1, uv2, uv3, uv4, uv_l, uvc, dz1;\nfloat sun, w, z, smoke, smoke2, skymask,lavmask,lavamod,fonmask;\nstatic float2 dz = float2(texsize.z,texsize.w)*1;\nstatic float trel = time/2;\nstatic float vshift = .5-q29;\nstatic float3 skycol = float3 (.1,.1,.2);\nstatic float sm_dens = q32;\nstatic float sm_lit  = q31;\nstatic float2 sunpos = float2 (rand_preset.x,-.1-rand_preset.y/2+vshift)*aspect.xy;\nfloat3 lavcol (float t) {return saturate(float3(t,pow(t,2.1),pow(t,6)));}\nfloat3 foncol (float t) {return saturate(float3(t,pow(t,2.1),pow(t,4)));}\n\nshader_body {\nfloat t = time*0.1; // set velocity here\nfloat2 c = (uv-0.5)*aspect.wz;\nfloat1 ang_hq = atan2(c.x,c.y);\nfloat2 spiral = float2(ang_hq*M_INV_PI_2*2+t,aspect.w*log(length(c))*.6+ang_hq*M_INV_PI_2*2-t*4);\nfloat2 mirror = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 )); // mirror\nuv = mirror;\n\nuv0 = uv;\n//uv = (uv-.5)*1+.5;\nuvc = (uv-.5)*aspect.xy+.5;\nuv_l = uv + float2(.005*time,0);\n\nfloat berg1 = lum(tex2D (sampler_noise_mq,uv_l.x/4+.02*trel))/6-uv.y+.8;\nfloat berg2 = lum(tex2D (sampler_noise_hq,uv_l.x/6))+uv.x-.5;\nsun = .1/length(sin(uvc-sunpos)); //##Vorfaktor spielen\n\nuv2 = frac(uv);\nfountain = 1*tex2D(sampler_fc_main,uv2).r +2* GetBlur2(uv2).r;\nfountain=foncol(fountain.r);\n\nw = uv.y-berg2/4-vshift; //#hier spielen\nz = .2/w;\nskymask = saturate(-.2-8*q5*w); //32*w fuer mehr Leuchten\nlavmask = saturate(-1-12*w); //lava background\n\nrs0.x = (uv.x-.5) * (1+abs(z))*2 ; rs0.y = z; //#hier an q29 anpassen\nrs0 *= 4*(z<=0)+1;\n\nfloat glow = q26/length(rs0-float2(0.,1.5+w))/4;\nrs0 *= 1+glow*glow;\nrs.x = rs0*2; rs.y = rs0.y + trel*.5;\n\nfloat bridge = tex2D (sampler_main,uv).g*skymask;\n\nlavamod = saturate((tex2D (sampler_noise_hq,rs/16)-.5));\nuv_vol = float3(rs*2,.2*trel+0*lavamod)*(z >=0); //# faster\nlava = 2*saturate(tex3D (sampler_noisevol_hq,uv_vol)-.2);\nlava = lava*lavamod/sqrt(abs(z))+glow;\n\nret1 = (uv.y*(1+q23)+sun)*skycol*skymask + lavcol(lum(lava)) * (1-lavmask);\nret1 *= saturate(1-bridge*8);\n\nsmoke = GetPixel(frac((uv-.5)*1+.5)).b; smoke *= smoke*q5;\nret1 *= saturate(1-smoke*sm_dens*skymask);\nsmoke2 = GetPixel((uv-.5)/2+.5).b*q30; ;\n\nret1 += fountain -z*saturate(smoke+w*sm_lit)*float3(1,.4,0.1)*skymask; \n\nret1 += lavcol(saturate(bridge*z*z/16));\nret1 *= saturate(berg1*32);\nret1 = ret1*saturate(1-smoke2)+lavcol(smoke2)*1;\nret = 1-exp(-ret1*2); //exposure control\n}"}