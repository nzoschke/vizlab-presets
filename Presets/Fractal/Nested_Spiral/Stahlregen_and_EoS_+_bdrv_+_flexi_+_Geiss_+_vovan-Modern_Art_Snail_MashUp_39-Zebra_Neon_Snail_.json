{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":2,"wave_brighten":0,"wave_a":1.17,"wave_scale":0.625,"wave_smoothing":0,"modwavealphastart":0.8,"modwavealphaend":1.2,"warpanimspeed":0.408,"warpscale":0.905,"zoom":1.025,"warp":0.63735,"wave_r":0.5,"wave_y":0.47,"ob_size":0.02,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0.02,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"textured":1,"rad":0.80814,"ang":0.75398,"tex_ang":1.3823,"tex_zoom":1.10462,"g":0.9,"b":0.7,"r2":1,"b2":0.8,"a2":1,"border_a":0.4},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.03*Math.cos(.69*a.time+2);a.y=.5+.02*Math.cos(.73*a.time+1);","init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.03*cos(time*0.69 + 2);\ny = 0.5 + 0.02*cos(time*0.73 + 1);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.r=0;a.rr=0;a.q1=0;","frame_eqs_str":"a.zoom=1;a.wave_a=0;a.r=.96*a.r+.1*(a.bass-a.treb);a.rr=.94*a.rr+.1*a.r;a.rot=.1*a.rr;a.q1=5.5+5.5*Math.sin(.1*a.time);a.ob_r=.2+.4*Math.sin(1.13*a.time)+.2*Math.sin(a.bass-.5*a.treb);a.ob_g=.2+.3*Math.sin(1.33*a.time)+.3*Math.sin(a.bass+.5*a.mid);a.ob_b=.2+.2*Math.sin(1.53*a.time)+.4*Math.sin(a.treb+a.bass);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"zoom = 1.0;\nwave_a = 0;\n//warp = 0;\n\nr = r*0.96 + (bass-treb)*0.1;\nrr = rr*0.94 + r*0.1;\nrot = rr*0.1;\nq1 = 5.5 + sin(time*0.1)*5.5;\n\nob_r = 0.2 + 0.4 * sin(time*1.13) + 0.2*sin(bass - 0.5 * treb);\nob_g = 0.2 + 0.3 * sin(time*1.33) + 0.3*sin(bass + 0.5 * mid);\nob_b = 0.2 + 0.2 * sin(time*1.53) + 0.4*sin(treb + bass);","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (((texture (sampler_blur2, \n    (uv + vec2(0.0009, 0.0))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - vec2(0.0009, 0.0))\n  ).xyz * scale2) + bias2)).y;\n  tmpvar_2.y = (((texture (sampler_blur2, \n    (uv + vec2(0.0, 0.0009))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - vec2(0.0, 0.0009))\n  ).xyz * scale2) + bias2)).y;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - (tmpvar_2 * 0.01));\n  ret_1.y = texture (sampler_fc_main, (tmpvar_3 - floor(tmpvar_3))).y;\n  ret_1.y = (ret_1.y + ((ret_1.y - \n    ((texture (sampler_blur3, (tmpvar_3 - floor(tmpvar_3))).xyz * scale3) + bias3)\n  .y) * 0.1));\n  ret_1.y = (ret_1.y + 0.006);\n  ret_1.y = ret_1.y;\n  ret_1.x = ret_1.y;\n  ret_1.z = ret_1.y;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) * 1.5));\n  ret_1 = (ret_1 * vec3(0.7, 1.1, 1.5));\n  ret_1 = (ret_1 * 0.98);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n    float1 d = 0.0009;\n    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y;\n    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y;\n    float2 my_uv = uv - float2(dx,dy)*0.01;\n\n\n\n    float2 v = 0.01;\n    ret.y = tex2D( sampler_fc_main, my_uv-floor(my_uv)).y;\n\n    \n    ret.y += (ret.y - GetBlur3(my_uv-floor(my_uv)).y)*.1;\n    ret.y += 0.006;//-GetBlur3(uv-floor(uv)).x*5;\n\n    ret.y = lerp( ret.y, lum(ret).x, 0);\nret.x = ret.y;\nret.z = ret.y;\n\n//--------------------------------\n\n    d = 0.01;\n    my_uv = float2(-dy,dx)*0.05;\n\n//    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).z;\n//    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).z;\n  //  my_uv += uv - float2(dx,dy)*0.005;\n\n\n\n    v = 0.01;\n//    ret.z =tex2D( sampler_fw_main, my_uv - floor(my_uv)).z;\n\n    \n  //  ret.z += (ret.z - GetBlur3(my_uv-floor(my_uv)).z)*0.13;\n    //ret.z *= 0.95;\n//    ret.z += 0.03-GetBlur3(uv-floor(uv)).x - tex2D( sampler_main, my_uv - floor(my_uv)).y*0.05;\n\n//    ret.x = tex2D( sampler_main, uv).x * 0.003;\n\n}","comp_hlsl":"shader_body      \n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret += GetBlur1(uv)*1.5;\n    ret *= float3(0.7,1.1,1.5);\n    ret *= 0.98;\n}"}