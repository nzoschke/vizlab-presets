{"version":2,"baseVals":{"rating":5,"gammaadj":1.99,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.625,"wave_smoothing":0,"modwavealphastart":0,"modwavealphaend":0,"warpscale":2.853,"zoom":1.064,"warp":0,"wave_r":0.5,"wave_y":0.47,"mv_x":64,"mv_y":48,"mv_l":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"textured":1,"rad":0.80814,"ang":0.75398,"tex_ang":1.3823,"tex_zoom":1.10462,"g":0.9,"b":0.7,"r2":1,"b2":0.8,"a2":1,"border_a":0.4},"init_eqs_str":"","frame_eqs_str":"a.x+=.03*Math.cos(.69*a.time+2);a.y+=.02*Math.cos(.73*a.time+1);","init_eqs_eel":"","frame_eqs_eel":"x = x + 0.03*cos(time*0.69 + 2);\ny = y + 0.02*cos(time*0.73 + 1);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_r+=.5*(.6*Math.sin(.933*a.time)+.4*Math.sin(1.045*a.time));a.wave_g+=.5*(.6*Math.sin(.9*a.time)+.4*Math.sin(.956*a.time));a.wave_b+=.5*(.6*Math.sin(.91*a.time)+.4*Math.sin(.92*a.time));a.zoom+=.013*(.6*Math.sin(.339*a.time)+.4*Math.sin(.276*a.time));a.rot+=.04*(.6*Math.sin(.381*a.time)+.4*Math.sin(.579*a.time));a.zoom+=Math.max(0,.0333*(a.bass_att+a.treb_att+a.mid_att-3));a.decay-=.01*equal(mod(a.frame,10),0);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.500*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\nwave_g = wave_g + 0.500*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\nwave_b = wave_b + 0.500*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\nzoom = zoom + 0.013*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\nzoom = zoom + max(0,(bass_att+treb_att+mid_att-3)*0.0333);\ndecay = decay - 0.01*equal(frame%10,0);","pixel_eqs_eel":"","warp":" shader_body { \n  vec4 b_1;\n  vec3 ret_2;\n  ret_2 = texture (sampler_main, uv).xyz;\n  b_1.x = dot (((texture (sampler_blur2, vec2(0.35, 0.35)).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29));\n  b_1.y = dot (((texture (sampler_blur2, vec2(0.65, 0.35)).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29));\n  b_1.z = dot (((texture (sampler_blur2, vec2(0.35, 0.65)).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29));\n  b_1.w = dot (((texture (sampler_blur2, vec2(0.65, 0.65)).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29));\n  float tmpvar_3;\n  tmpvar_3 = (min (min (b_1.x, b_1.y), min (b_1.z, b_1.w)) * 0.8);\n  vec3 tmpvar_4;\n  tmpvar_4 = mix (ret_2, ((ret_2 - tmpvar_3) / (\n    (max (max (b_1.x, b_1.y), max (b_1.z, b_1.w)) / 0.8)\n   - tmpvar_3)).xxx, vec3(0.04, 0.04, 0.04));\n  ret_2 = tmpvar_4;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = tmpvar_4;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (((\n    (texture (sampler_main, uv).xyz * -2.0)\n   + \n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * 2.0)\n  ) + (\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n   * 2.0)) - 0.7);\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"shader_body\n{\n    // sample previous frame\n    ret.xyz = tex2D( sampler_main, uv ).xyz;\n\n    // slow, smooth brightness normalizer:\n    float4 b;\n    b.x = lum(GetBlur2(float2(0.35,0.35)));\n    b.y = lum(GetBlur2(float2(0.65,0.35)));\n    b.z = lum(GetBlur2(float2(0.35,0.65)));\n    b.w = lum(GetBlur2(float2(0.65,0.65)));\n    float fmin = min(min(b.x,b.y), min(b.z,b.w)) * 0.8;\n    float fmax = max(max(b.x,b.y), max(b.z,b.w)) / 0.8;\n    float normalized = (ret - fmin)/(fmax-fmin);\n    ret = lerp(ret, normalized, 0.04); \n}","comp_hlsl":"shader_body\n{\n    ret = tex2D(sampler_main, uv).xyz*-2 +\n              GetBlur1(uv)*2 +\n              GetBlur2(uv)*2 - 0.7;\n    //ret *= 1.2;\n}"}