{"version":2,"baseVals":{"rating":5,"decay":0.96,"echo_zoom":1.905,"wave_mode":1,"wave_thick":1,"wave_a":1.008,"wave_scale":0.408,"wave_smoothing":0.9,"wave_mystery":0.4,"warpscale":1.772,"zoomexp":2.301,"fshader":1,"zoom":1.059,"warp":0.29,"wave_r":0.3,"wave_g":0.4,"wave_b":0.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.86643,"tex_ang":0.62832,"tex_zoom":1.0303,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"a.q7=0;a.q1=0;a.q2=0;","frame_eqs_str":"a.tex_zoom=a.q7+a.tex_zoom;a.a2=1;a.border_a=a.q7;a.x=a.q1+.5;a.y=a.q2+.5;","init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q7+tex_zoom;\na2 = 1;\nborder_a = q7;\nx = q1+.5;\ny = q2+.5;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"","frame_eqs_str":"a.wave_x+=.12*(.6*Math.sin(.221*a.time)+.4*Math.sin(.821*a.time));a.wave_y+=.12*(.6*Math.sin(1.142*a.time)+.4*Math.sin(.322*a.time));a.wave_r+=.5*(.6*Math.sin(.823*a.time)+.4*Math.sin(.916*a.time));a.wave_g+=.5*(.6*Math.sin(.9*a.time)+.4*Math.sin(1.023*a.time));a.wave_b+=.5*(.6*Math.sin(.808*a.time)+.4*Math.sin(.949*a.time));a.zoom+=.007*(.6*Math.sin(.339*a.time)+.4*Math.sin(.276*a.time));a.rot+=.02*(.6*Math.sin(.381*a.time)+.4*Math.sin(.539*a.time));a.cx+=.03*(.6*Math.sin(.374*\na.time)+.4*Math.sin(.194*a.time));a.cy+=.037*(.6*Math.sin(.274*a.time)+.4*Math.sin(.394*a.time));a.dx+=.004*(.6*Math.sin(100.334*a.time)+.4*Math.sin(250.277*a.time));a.dy+=.004*(.6*Math.sin(200.384*a.time)+.4*Math.sin(150.247*a.time));a.sx+=.01*(.6*Math.sin(.313*a.time)+.4*Math.sin(.383*a.time));","pixel_eqs_str":"a.rot+=.1*a.rad*Math.sin(.6*a.time*.439+.4*a.time*.338);","init_eqs_eel":"","frame_eqs_eel":"wave_x = wave_x + 0.120*( 0.60*sin(0.221*time) + 0.40*sin(0.821*time) );\nwave_y = wave_y + 0.120*( 0.60*sin(1.142*time) + 0.40*sin(0.322*time) );\nwave_r = wave_r + 0.500*( 0.60*sin(0.823*time) + 0.40*sin(0.916*time) );\nwave_g = wave_g + 0.500*( 0.60*sin(0.900*time) + 0.40*sin(1.023*time) );\nwave_b = wave_b + 0.500*( 0.60*sin(0.808*time) + 0.40*sin(0.949*time) );\nzoom = zoom + 0.007*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\nrot = rot + 0.02*( 0.60*sin(0.381*time) + 0.40*sin(0.539*time) );\ncx = cx + 0.030*( 0.60*sin(0.374*time) + 0.40*sin(0.194*time) );\ncy = cy + 0.037*( 0.60*sin(0.274*time) + 0.40*sin(0.394*time) );\ndx = dx + 0.004*( 0.60*sin(100.334*time) + 0.40*sin(250.277*time) );\ndy = dy + 0.004*( 0.60*sin(200.384*time) + 0.40*sin(150.247*time) );\nsx = sx + 0.010*( 0.60*sin(0.313*time) + 0.40*sin(0.383*time) );","pixel_eqs_eel":"rot=rot+rad*0.1*sin(0.6*time*0.439+0.4*time*0.338);","warp":"","comp":" shader_body { \n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.15);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\n  ), pow (hue_shader.yzx, ret_2)));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"","comp_hlsl":"shader_body\n{\n    float2 uv2;\n\n    float4 c = float4(1,0.4,0.15,0.1);\n\n    uv2 = uv + float2(1,0)*texsize.zw;\n    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(-1,0)*texsize.zw;\n    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    uv2 = uv + float2(0,1)*texsize.zw;\n    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n    uv2 = uv + float2(0,-1)*texsize.zw;\n    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;\n\n    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));\n\n    ret = 0.5 + 0.5*g;\n    ret *= saturate(length(ret.xy-0.5)*5);\n    ret = ret.xxy;\n    ret += 1.15;\n    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)),pow(hue_shader.yzx,ret));\n    ret *= ret;\n\n    //ret *= 1.5; //old gamma effect    \n}"}