{"version":2,"baseVals":{"rating":5,"echo_zoom":1.007,"wave_mode":7,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"darken":1,"wave_a":2.803,"wave_scale":0.06,"wave_mystery":1,"zoomexp":1.14947,"zoom":0.942,"cx":0.65,"cy":0.35,"warp":0.01,"sx":0.99999,"sy":0.99999,"wave_y":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0.1},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":1.10015,"tex_zoom":0.821,"g":1,"b":1,"a":0.9,"r2":1,"b2":1,"a2":0.9,"border_a":0},"init_eqs_str":"a.q31=0;a.q32=0;a.q30=0;","frame_eqs_str":"a.ang=3.14*a.q31+3.14*a.q32*(.00001<Math.abs(equal(a.q30,1))?-1:1);","init_eqs_eel":"","frame_eqs_eel":"ang = 3.14*q31 + 3.14*q32*if(equal(q30,1),-1,1);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.z=0;a.dec_med=0;a.x=0;a.is_beat=0;a.q31=0;a.dec_slow=0;a.avg=0;a.y=0;a.beat=0;a.peak=0;a.t0=0;a.q32=0;a.q30=0;","frame_eqs_str":"a.wave_r=.45+.45*Math.sin(2.133*(a.time+a.bass));a.wave_g=.45+.45*Math.sin(2.333*(a.time+a.bass));a.wave_b=.45+.45*Math.sin(2.533*(a.time+a.bass));a.dec_med=pow(.9,div(30,a.fps));a.dec_slow=pow(.99,div(30,a.fps));a.beat=Math.max(Math.max(a.bass,a.mid),a.treb);a.avg=a.avg*a.dec_slow+a.beat*(1-a.dec_slow);a.is_beat=above(a.beat,.5+a.avg+a.peak)*above(a.time,a.t0+.2);a.t0=a.is_beat*a.time+(1-a.is_beat)*a.t0;a.peak=a.is_beat*a.beat+(1-a.is_beat)*a.peak*a.dec_med;a.x=.00001<Math.abs(a.is_beat)?\n.01*Math.floor(rand(60))+.2:a.x;a.y=.00001<Math.abs(a.is_beat)?.01*Math.floor(rand(60))+.2:a.y;a.z=.00001<Math.abs(a.is_beat)?Math.floor(rand(2))-1:a.z;a.wave_mystery=.00001<Math.abs(above(a.x,a.y))?0:-1;a.q31=a.x;a.q32=a.y;a.q30=a.z;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.45 + 0.45*sin((time+bass)*2.133);\nwave_g = 0.45 + 0.45*sin((time+bass)*2.333);\nwave_b = 0.45 + 0.45*sin((time+bass)*2.533);\n\n// Beat detection by martin!\n\ndec_med = pow (0.9, 30/fps);\ndec_slow = pow (0.99, 30/fps);\nbeat = max (max (bass, mid), treb); \navg = avg*dec_slow + beat*(1-dec_slow);\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\nt0 = is_beat*time + (1-is_beat)*t0;\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\n\nx = if(is_beat,int(rand(60))*0.01 + 0.2,x);\ny = if(is_beat,int(rand(60))*0.01 + 0.2,y);\nz = if(is_beat,int(rand(2))-1,z);\nwave_mystery = if(above(x,y),0,-1);\nq31 = x;\nq32 = y;\nq30 = z;","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float x_4;\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\n  float tmpvar_5;\n  tmpvar_5 = (q31 * sqrt((x_4 * x_4)));\n  uv_1 = (uv - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * normalize(tmpvar_3))\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 14.0)\n   + rand_frame.xy)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((texture (sampler_main, \n    (((uv_1 - 0.5) * (0.95 + (0.2 * tmpvar_5))) + 0.5)\n  ).xyz + \n    (vec3((0.01 / sqrt(dot (uv6_2, uv6_2)))) * (0.3 * (1.0 + roam_cos)).xyz)\n  ) * 0.99) - 0.025);\n  ret = tmpvar_6.xyz;\n }","comp":"vec3 xlat_mutableret1;\n shader_body { \n  vec2 uv_1;\n  vec2 uv2_2;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), texture (sampler_main, (uv_1 + 0.5)).xyz);\n  uv2_2.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\n  uv2_2.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\n  uv2_2.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\n  uv2_2.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\n  uv2_2.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\n  uv2_2.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\n  uv2_2.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\n  uv2_2.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (xlat_mutableret1 * 2.0);\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\nfloat2 uv6 = uv1;\nfloat z = q31*length((abs(uv1.x)-abs(uv1.y)));\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-2,2);\nuv += .0*lum(GetBlur1(uv))*float2 (0,1);\nuv -= rs/20;\n\nuv6 = .4*sin(uv*14+rand_frame);\nmus = .01/(length(uv6));\nmus *= .3*(1+roam_cos);\n//mus = .2;\n\nfloat3 crisp= tex2D(sampler_main,(uv-.5)*(.95+.2*z)+.5);\n\nfloat3 ret1 = crisp + mus;\n\nq25 = 1;\nret = q25*(ret1*.99-.025) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"float3 ret1, neu;\n\nshader_body\n{\nfloat2 uv2;\nfloat ang2, c, s;\nuv -= 0.5;\nuv *= aspect.xy;    \n\nfloat2 tmp = uv;\nret1 = 0;\nint anz = 4;\nint n = 0;\nwhile (n <= anz) {\n    ang2 = 6.28*n/anz;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n    neu = tex2D(sampler_main, uv2 + 0.5 );\n    ret1 = max(ret1,neu-.0);\nn++;\n}\n\nret = ret1*2;\n\n}"}