{"version":2,"baseVals":{"rating":5,"gammaadj":1.35,"decay":0.995,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_scale":1.692,"wave_smoothing":0.27,"wave_mystery":-0.6,"zoom":1.0303,"mv_a":0},"shapes":[{"baseVals":{"rad":0.0402,"r":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"delay = 1-q1;\ncounter = if(equal(delay,0),counter+1,counter);\ncounter = if(equal(counter,7),1,counter);\n\nr = .5*below(counter,4)+.25*above(counter,5);\ng = .5*above(counter,1)*below(counter,5)-.25*equal(counter,2);\nb = .5*above(counter,4)-.25*equal(counter,7);\n\nr2=r;g2=g;b2=b;\n\nrad = 0.04;","init_eqs_eel":"","frame_eqs_eel":"delay = 1-q1;\ncounter = if(equal(delay,0),counter+1,counter);\ncounter = if(equal(counter,7),1,counter);\n\nr = .5*below(counter,4)+.25*above(counter,5);\ng = .5*above(counter,1)*below(counter,5)-.25*equal(counter,2);\nb = .5*above(counter,4)-.25*equal(counter,7);\n\nr2=r;g2=g;b2=b;\n\nrad = 0.04;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.77661,"ang":1.5708,"tex_ang":1.25664,"tex_zoom":1.19615,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.fade=0;a.count=0;a.mc=0;a.is_beat=0;a.timp=0;a.reha=0;a.bimp=0;a.mimp=0;a.tc=0;a.bc=0;","frame_eqs_str":"a.warp=0;a.count+=1;a.bc+=a.bass;a.tc+=a.treb;a.mc+=a.mid;a.bimp=.00001<Math.abs(above(3.25*a.bass,a.bass+a.treb+a.mid))?1:0;a.timp=.00001<Math.abs(above(2.75*a.treb,a.bass+a.treb+a.mid))?1:0;a.mimp=.00001<Math.abs(above(2.75*a.mid,a.bass+a.treb+a.mid))?1:0;a.is_beat=.00001<Math.abs(above(.75*a.bass,div(a.bc,a.count)))?1*a.bimp:.00001<Math.abs(above(.75*a.treb,div(a.tc,a.count)))?1*a.timp:.00001<Math.abs(above(.75*a.mid,div(a.mc,a.count)))?1*a.mimp:0;a.is_beat=.00001<Math.abs(above(a.reha,\n0))?0:a.is_beat;a.reha=.00001<Math.abs(a.is_beat)?.25*a.fps:.00001<Math.abs(below(a.reha,1))?0:a.reha-1;a.fade=.00001<Math.abs(a.is_beat)?100+a.fade:.9*a.fade-1;a.fade=.00001<Math.abs(below(a.fade,1))?0:a.fade;a.zoom=1.01+.001*a.fade;a.wave_r=.5+.5*Math.sin(a.time);a.wave_g=.5+.5*Math.sin(1.53*a.time);a.wave_b=.5+.5*Math.sin(2.02*a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"warp = 0;\n\n// <<-- Stahlregen's (off)beat detection \n// frame counter for average\ncount = count+1;\n// counters of the bass/treb/mid values for average\nbc = bc+bass;\ntc = tc+treb;\nmc = mc+mid;\n// checking for impact: highest of bass/mid/treb has impact\nbimp = if(above(3.25*bass,bass+treb+mid),1,0);\ntimp = if(above(2.75*treb,bass+treb+mid),1,0);\nmimp = if(above(2.75*mid,bass+treb+mid),1,0);\n// checking for beats: compare adjusted buffered \n// vs. average value and check for impact\nis_beat = if(above(.75*bass,bc/count),1*bimp,\nif(above(.75*treb,tc/count),1*timp,\nif(above(.75*mid,mc/count),1*mimp,\n0))); \n// restricting max number of beats per second (fraction of fps)\nis_beat = if(above(reha,0),0,is_beat);\nreha = if(is_beat,fps*.25,if(below(reha,1),0,reha-1));\n// end of (off)beat detection -->\n\nfade = if(is_beat,100+fade,.9*fade-1);\n\nfade = if(below(fade,1),0,fade);\n\nzoom = 1.01+.001*fade;\n\n\nwave_r = .5+.5*sin(time);\nwave_g = .5+.5*sin(time*1.53);\nwave_b = .5+.5*sin(time*2.02);","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.15, 0.15)));\n  ret_1.yz = tmpvar_2.yz;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv);\n  ret_1.x = (tmpvar_2.x + fract(texture (sampler_main, (uv + \n    ((vec2(1.0, 2.0) * texsize.zw) * tmpvar_3.x)\n  )).x));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur3, uv);\n  ret_1.x = (ret_1.x - ((tmpvar_4.xyz * scale3) + bias3).x);\n  ret_1.y = (tmpvar_2.y + fract(texture (sampler_main, (uv + \n    ((vec2(2.0, -2.0) * texsize.zw) * tmpvar_3.y)\n  )).y));\n  ret_1.y = (ret_1.y - ((tmpvar_4.xyz * scale3) + bias3).y);\n  ret_1.z = (tmpvar_2.z + fract(texture (sampler_main, (uv + \n    ((vec2(-2.0, -1.0) * texsize.zw) * tmpvar_3.z)\n  )).z));\n  ret_1.z = (ret_1.z - ((tmpvar_4.xyz * scale3) + bias3).z);\n  ret_1 = ((ret_1 * 0.95) - 0.002);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = mix (mix (vec3((1.5 * tmpvar_1.z)), vec3(0.5, 0.5, 0.5), tmpvar_1.xxx), vec3(2.0, 0.0, 0.0), tmpvar_1.yyy);\n  ret = tmpvar_2.xyz;\n }","warp_hlsl":"shader_body\n{\n\n   // sample previous frame\nret = tex2D( sampler_fc_main, lerp(uv,uv_orig,.15)).xyz;\n\nret.x += frac(GetPixel(uv+float2(1,2)*texsize.zw*GetPixel(uv).x).x);\nret.x -= GetBlur3(uv).x;\n\nret.y += frac(GetPixel(uv+float2(2,-2)*texsize.zw*GetPixel(uv).y).y);\nret.y -= GetBlur3(uv).y;\n\nret.z += frac(GetPixel(uv+float2(-2,-1)*texsize.zw*GetPixel(uv).z).z);\nret.z -= GetBlur3(uv).z;\n\n\n    // darken (decay) over time\n    ret = (ret*0.95)-.002; //or try: ret -= 0.004;\n}","comp_hlsl":"shader_body\n{\n\nret = lerp(0,1.5,GetPixel(uv).z);\nret = lerp(ret,float3(.5,.5,.5),GetPixel(uv).x);\nret = lerp(ret,float3(2,0,0),GetPixel(uv).y);\n ret *= 1.00; //gamma\n}"}