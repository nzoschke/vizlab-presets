{"version":2,"baseVals":{"rating":5,"gammaadj":1.993,"wave_mode":1,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.662,"wave_scale":1.326,"wave_smoothing":0.7,"wave_mystery":0.54,"modwavealphastart":0.85,"warpscale":1.331,"zoom":1.01269,"rot":0.16,"warp":0.23944,"sx":0.99967,"sy":0.9999,"wave_r":0.5,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"additive":1,"scaling":0.44665,"smoothing":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.du=0;a.q1=0;a.dv=0;a.q2=0;a.dist=0;a.ang2=0;a.mult=0;a.t2=0;","frame_eqs_str":"a.t2=3*a.time;a.wave_r+=.2*(.6*Math.sin(.98*a.t2)+.4*Math.sin(1.047*a.t2));a.wave_g+=.2*(.6*Math.sin(.835*a.t2)+.4*Math.sin(1.081*a.t2));a.wave_b+=.2*(.6*Math.sin(.814*a.t2)+.4*Math.sin(1.011*a.t2));a.q1=2*a.cx-1+.6*(.6*Math.sin(.374*a.time)+.4*Math.sin(.294*a.time));a.q2=2*a.cy-1+.6*(.6*Math.sin(.393*a.time)+.4*Math.sin(.223*a.time));a.rot+=.03*Math.cos(.571*a.time+3);a.dx+=.1*Math.cos(.492*a.time+1);a.dy+=.1*Math.cos(.439*a.time+2);","pixel_eqs_str":"a.du=2*a.x-1-a.q1;a.dv=2*a.y-1-a.q2;a.dist=sqrt(a.du*a.du+a.dv*a.dv);a.ang2=Math.atan2(a.du,a.dv)+.15*a.time;a.mult=.65*Math.sin(.05*a.dist);a.dx=a.mult*Math.sin(2*a.ang2-1.5);a.dy=a.mult*Math.cos(2*a.ang2-1.5);","init_eqs_eel":"","frame_eqs_eel":"t2 = time*3;\nwave_r = wave_r + 0.2*( 0.60*sin(0.980*t2) + 0.40*sin(1.047*t2) );\nwave_g = wave_g + 0.2*( 0.60*sin(0.835*t2) + 0.40*sin(1.081*t2) );\nwave_b = wave_b + 0.2*( 0.60*sin(0.814*t2) + 0.40*sin(1.011*t2) );\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\nrot = rot + 0.03*cos(time*0.571+3);\ndx = dx + 0.1*cos(time*0.492+1);\ndy = dy + 0.1*cos(time*0.439+2);\n//zoom = zoom + 0.01*cos(time*0.671+5);","pixel_eqs_eel":"du = (x*2-1) - q1;\ndv = (y*2-1) - q2;\ndist = sqrt(du*du+dv*dv);\nang2 = atan2(du,dv) + time*0.15;\nmult = 0.65*sin(dist*0.05);\ndx = mult*sin(ang2*2-1.5);\ndy = mult*cos(ang2*2-1.5);","warp":" shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  vec2 zz_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - vec2(0.5, 0.5));\n  vec3 tmpvar_4;\n  tmpvar_4 = (0.016 * texture (sampler_noise_lq, ((uv * 0.3) + (0.01 * rand_frame).xy))).xyz;\n  vec2 tmpvar_5;\n  tmpvar_5 = (0.8 * sin((tmpvar_3 * 8.0)));\n  float tmpvar_6;\n  tmpvar_6 = clamp ((0.01 / sqrt(\n    dot (tmpvar_5, tmpvar_5)\n  )), 0.0, 1.0);\n  vec2 tmpvar_7;\n  tmpvar_7 = ((-(tmpvar_3) * texsize.xy) * q26);\n  zz_2 = tmpvar_7;\n  if ((q25 == 1.0)) {\n    zz_2 = (tmpvar_7 * (abs(tmpvar_3.y) / abs(tmpvar_3.x)));\n  } else {\n    if ((q25 == 2.0)) {\n      zz_2 = (zz_2 * (abs(tmpvar_3.y) - abs(tmpvar_3.x)));\n    };\n  };\n  uv_1 = (uv + ((\n    clamp ((sin(zz_2) / cos(zz_2)), vec2(-20.0, -20.0), vec2(20.0, 20.0))\n   * texsize.zw) * 4.0));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((\n    (0.95 * (texture (sampler_main, uv_1) + tmpvar_6).xyz)\n   + tmpvar_4) - 0.02) - (0.06 * (\n    (texture (sampler_blur2, uv_1).xyz * scale2)\n   + bias2).x));\n  ret = tmpvar_8.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv2_3.x = ((uv_1.x * -0.497265) - (uv_1.y * 0.8675987));\n  uv2_3.y = ((uv_1.x * 0.8675987) + (uv_1.y * -0.497265));\n  uv3_2.x = ((uv_1.x * -0.5000263) - (uv_1.y * -0.8660102));\n  uv3_2.y = ((uv_1.x * -0.8660102) + (uv_1.y * -0.5000263));\n  ret_4 = (max (max (texture (sampler_main, \n    (uv_1 + 0.5)\n  ).xyz, texture (sampler_main, \n    (uv2_3 + 0.5)\n  ).xyz), texture (sampler_main, (uv3_2 + 0.5)).xyz) * 1.3);\n  ret_4 = (ret_4 * ((hue_shader * 4.0) - 2.0));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_4;\n  ret = tmpvar_5.xyz;\n }","warp_hlsl":"shader_body {\n\nfloat2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;\n\nfloat3 noiseVal =.016*(tex2D(sampler_noise_lq, uv*.3+.01*rand_frame));\nfloat3 Feedback = GetBlur1(1-uv);\n\nfloat2 uv2 = .8*sin((uv1)*8);;\nfloat dots = saturate(.01/length(uv2));\n\nfloat2 zz = -uv1 *texsize.xy *q26;\n\nif (q25 ==1) {zz *= (abs(uv1.y)/abs(uv1.x));}\nelse if (q25==2)  {zz *= (abs(uv1.y)-abs(uv1.x));}\n\n\nfloat2 h1 = clamp(tan(zz),-20,20);\n\nuv.xy += h1*texsize.zw * 4;\n\nfloat3 crisp1 = tex2D(sampler_main,uv) + dots;\nfloat blur = GetBlur2 (uv);\nret = .95*crisp1+noiseVal-.02 - .06*blur;\n\n\n}","comp_hlsl":"shader_body\n{\n    float2 uv2, uv3;\n    float ang2, c, s;\n\n    uv -= 0.5;\n    uv *= aspect.xy;    \n\n    ang2 = 6.28*0.333;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv2.x =  uv.x*c - uv.y*s;\n    uv2.y =  uv.x*s + uv.y*c;\n\n    ang2 = 6.28*0.667;\n    c = cos(ang2);\n    s = sin(ang2);\n    uv3.x =  uv.x*c - uv.y*s;\n    uv3.y =  uv.x*s + uv.y*c;\n\n    ret = tex2D(sampler_main, uv + 0.5).xyz;\n    ret = max(ret, tex2D(sampler_main,uv2 + 0.5).xyz);\n    ret = max(ret, tex2D(sampler_main,uv3 + 0.5).xyz);\n\n    ret *= 1.3;\n    ret *= hue_shader*4-2;\n\n}\n\n"}