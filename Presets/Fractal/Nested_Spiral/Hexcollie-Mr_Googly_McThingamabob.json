{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":0.99994,"echo_alpha":0.0264,"echo_orient":2,"wave_mode":1,"wave_dots":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.011726,"wave_smoothing":0.9,"warpscale":1.331,"zoomexp":1.008151,"zoom":1.0003,"rot":1,"warp":0.01,"sx":0.999903,"sy":0.999904,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.0499,"ob_r":0.11,"ob_g":0.5,"ob_b":1,"ob_a":1,"ib_size":0.055,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":12.799999,"mv_y":9.599999,"mv_l":1,"mv_r":0.41,"mv_g":0.7,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":1.410861,"tex_ang":3.33009,"tex_zoom":0.692004,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.rad=1.2+.15*div(a.bass+a.mid+a.treb,3);","init_eqs_eel":"","frame_eqs_eel":"//ang=sin(time*0.5)*0.007\nrad=1.2+(((bass+mid+treb)/3)*0.15)"},{"baseVals":{"sides":5,"additive":1,"thickoutline":1,"rad":0.364567,"ang":6.283185,"r":0.05,"g":0.04,"b":0.19,"g2":0,"border_a":0.06,"enabled":0},"init_eqs_str":"","frame_eqs_str":"//rad=bass/2;\nang=bass*6.14;","init_eqs_eel":"","frame_eqs_eel":"//rad=bass/2;\nang=bass*6.14;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"additive":1,"r":0,"g":0,"b":0},"init_eqs_str":"a.advance=0;a.t1=0;a.advance2=0;a.t2=0;a.advance=0;a.advance2=0;","frame_eqs_str":"a.advance+=a.bass_att*a.bass_att*.002;a.advance=.00001<Math.abs(above(a.advance,2))?a.advance-2:a.advance;a.t1=a.advance;a.advance2+=a.mid_att*a.mid_att*.005;a.t2=a.advance2;","point_eqs_str":"a.x=.5+.55*a.sample*Math.atan(100*a.sample+div(a.time,9));a.y=.5+.55*3*a.sample*Math.cos(100*a.sample+10*a.time);a.r=1;a.b=0;a.g=.5;","init_eqs_eel":"advance=0;\nadvance2=0;","frame_eqs_eel":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\n\nadvance2=advance2+ mid_att*mid_att*0.005;\nt2=advance2","point_eqs_eel":"x = .5+.55*(sample)*atan(sample*100+time/9);\ny = .5+.55*(sample*3)*cos(sample*100+time*10);\nr = 1;\nb = 0;\ng = .5;"},{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_str":"advance=0;\nadvance2=0","frame_eqs_str":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2","point_eqs_str":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5) * 0.3;\na=if( below(a,0), 0 , a);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=0.2;\ng=0.7;\nb=1.0;\n\n","init_eqs_eel":"advance=0;\nadvance2=0","frame_eqs_eel":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5) * 0.3;\na=if( below(a,0), 0 , a);\n\nzp=zp*0.7;\n\nx_screen=xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=0.2;\ng=0.7;\nb=1.0;\n\n"},{"baseVals":{"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_str":"advance=0;\nadvance2=0","frame_eqs_str":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2;","point_eqs_str":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5)*2;\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=0.7;\nb=0.2;\n\n\n","init_eqs_eel":"advance=0;\nadvance2=0","frame_eqs_eel":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2;","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5)*2;\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=1;\ng=0.7;\nb=0.2;\n\n\n"},{"baseVals":{"additive":1,"enabled":0},"init_eqs_str":"advance=0;\nadvance2=0","frame_eqs_str":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2;","point_eqs_str":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5) * 0.3;\na=if( below(a,0), 0 , a);\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=0.2;\ng=0.7;\nb=1.0;\n\n\n","init_eqs_eel":"advance=0;\nadvance2=0","frame_eqs_eel":"advance=advance+ bass_att*bass_att*0.002;\nadvance=if( above(advance,2) , advance-2, advance);\nt1=advance;\n\nadvance2=advance2+ mid_att*mid_att*0.001;\nt2=advance2;","point_eqs_eel":"s=sample*6.28;\n\n//plot random x position via function of sample pos;\nxp=sin(s)+sin(s*0.34)+sin(s*7.3+t2)+sin(s*13.8);\nxp=xp*0.15;\n\n//plot random y position via function of sample pos;\nyp=cos(s)+sin(s*0.24)+cos(s*5.4+t2)+sin(s*17.7);\nyp=yp*0.15;\n\n//plot random z position via function of sample pos;\nzp=cos(s)+cos(s*5.24 )+cos(s*14.4)+cos(s*2.7);\nzp=zp*0.25;\n\n//pull stars toward screen\nzp=zp + 1 - t1;\n\n//correct when below 0\nzp=if( below(zp,0) , zp+2 , zp );\n\n//darken far stars\na=(1 - zp*0.5) * 0.3;\na=if( below(a,0), 0 , a);\n\nzp=zp*0.7;\n\nx_screen=-xp/zp + 0.5;\ny_screen=yp/zp + 0.5;\n\nx=x_screen;\ny=y_screen;\n\nr=0.2;\ng=0.7;\nb=1.0;\n\n\n"}],"init_eqs_str":"a.more=0;a.new_mid=0;a.treb_effect=0;a.i_red=0;a.q6=0;a.q1=0;a.q5=0;a.i_green=0;a.bass_thresh=0;a.treb_thresh=0;a.vol_att=0;a.normal=0;a.b_red=0;a.mid_thresh=0;a.bass_effect=0;a.new_treb=0;a.q4=0;a.vol_thresh=0;a.b_green=0;a.vol_effect=0;a.less=0;a.mid_mid_att=0;a.new_bass=0;a.q2=0;a.new_vol=0;a.i_blue=0;a.b_blue=0;a.react=0;a.q3=0;a.q7=0;a.mid_effect=0;a.change=0;a.q8=0;a.swirl=0;","frame_eqs_str":"a.vol_att=a.bass_att+a.treb_att+a.mid_att;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.treb_thresh=2*above(a.treb_att,a.treb_thresh)+(1-above(a.treb_att,a.treb_thresh))*(.96*(a.treb_thresh-1.3)+1.3);a.mid_thresh=2*above(a.mid_att,a.mid_thresh)+(1-above(a.mid_mid_att,a.mid_thresh))*(.96*(a.mid_thresh-1.3)+1.3);a.vol_thresh=a.bass_thresh+a.treb_thresh+a.mid_thresh;a.treb_effect=Math.max(Math.max(a.treb,a.treb_att),\na.react);a.bass_effect=Math.max(Math.max(a.bass,a.bass_att),a.react);a.mid_effect=Math.max(Math.max(a.mid,a.mid_att),a.react);a.vol_effect=a.bass_effect+a.treb_effect+a.mid_effect;a.normal=5;a.more=1;a.less=7;a.react=a.less;a.new_bass=.00001<Math.abs(above(a.bass,a.bass_effect))?bitand(a.bass,a.bass_att):a.bass_effect+a.bass_thresh;a.new_treb=.00001<Math.abs(above(a.treb,a.treb_effect))?bitand(a.treb,a.treb_att):a.treb_effect+a.treb_thresh;a.new_mid=.00001<Math.abs(above(a.mid,a.mid_effect))?bitand(a.mid,\na.mid_att):a.mid_effect+a.mid_thresh;a.new_vol=a.new_bass+a.new_treb+a.new_mid+.04;a.change=bnot(1);a.q1=a.new_bass;a.q2=a.new_treb;a.q3=a.new_mid;a.q4=a.new_vol;a.q5=.00001<Math.abs(above(a.q2,a.q3))?above(a.q1,a.q3):-above(a.q1,a.q3);a.q6=.00001<Math.abs(above(a.q1,a.q3))?above(a.q2,a.q4):-above(a.q2,a.q3);a.q7=.00001<Math.abs(above(a.q5,a.q6))?a.q5:-a.q6;a.q8=.00001<Math.abs(above(a.q6,a.q7))?a.q6:-a.q7;a.b_red=.00001<Math.abs(above(a.q1,a.q2))?.2*Math.sin(a.q3):Math.sin(a.q4);a.b_blue=.00001<\nMath.abs(above(a.b_red,a.b_green))?.4*Math.sin(a.q2):.7*Math.sin(a.q1);a.b_green=.00001<Math.abs(above(a.q1,a.q3))?.2*Math.sin(a.q1):Math.sin(a.q5);a.i_red=.00001<Math.abs(above(a.q1,a.q2))?.6*Math.sin(a.q1):Math.sin(a.q6);a.i_blue=a.b_red-.2;a.i_green=.00001<Math.abs(above(a.b_blue,a.i_blue))?.2:.6;a.ob_r=a.b_red;a.ob_b=a.b_blue;a.ob_g=a.b_green;a.ib_r=a.i_red;a.ib_b=a.i_blue;a.ib_g=a.i_green;a.wave_r=a.i_red;a.wave_b=a.b_blue;a.wave_g=a.i_green;","pixel_eqs_str":"a.swirl=a.rot*Math.sin(.4*a.q1)-a.rot*Math.sin(a.rad*a.q3)*a.rad*Math.sin(a.q1-a.x*a.y+a.rad)-.05*a.x*Math.sin(a.q4)-.05*a.y*Math.sin(a.q6)-a.rot*Math.sin(above(a.q2-2*a.rad,a.q3+2*a.rad))+.25*a.rot*Math.sin(above(a.q1+a.rad,a.q2-a.q5*a.rad*2));a.zoom=.00001<Math.abs(above(a.q1,a.q2))?a.swirl+1.1-.02:a.zoom-.1;a.rot=.00001<Math.abs(above(a.q1,a.q2))?a.swirl:-a.swirl;","init_eqs_eel":"","frame_eqs_eel":"vol_att=bass_att+treb_Att+mid_att;\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\ntreb_thresh=above(treb_att,treb_thresh)*2+\n(1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*0.96+1.3);\nmid_thresh=above(mid_att,mid_thresh)*2+\n(1-above(mid_mid_att,mid_thresh))*((mid_thresh-1.3)*0.96+1.3);\nvol_thresh=bass_thresh+treb_thresh+mid_thresh;\ntreb_effect=max(max(treb,treb_Att),react);\nbass_effect=max(max(Bass,bass_Att),react);\nmid_effect=max(max(mid,mid_att),react);\nvol_effect=bass_effect+treb_effect+mid_effect;\nnormal=5;\nmore=1;\nless=7;\nreact=less;\nnew_bass=if(above(Bass,bass_effect),bass&bass_att,bass_effect+bass_thresh);\nnew_treb=if(above(treb,treb_effect),treb&treb_att,treb_Effect+treb_thresh);\nnew_mid=if(above(mid,mid_effect),mid&mid_Att,mid_effect+mid_thresh);\nnew_vol=new_bass+new_treb+new_mid+.04;\nchange=bnot(1);\nq1=new_bass;\nq2=new_treb;\nq3=new_mid;\nq4=new_vol;\nq5=if(above(q2,q3),above(q1,q3),-above(q1,q3));\nq6=if(above(q1,q3),above(q2,q4),-above(q2,q3));\nq7=if(above(q5,q6),q5,-q6);;\nq8=if(above(q6,q7),q6,-q7);;\n\n\n\nb_red=if(Above(q1,q2),.2*sin(q3),1*sin(q4));\nb_blue=if(above(b_red,b_green),.4*sin(q2),.7*sin(q1));\nb_green=if(above(q1,q3),.2*sin(q1),1*sin(q5));\ni_red=if(above(q1,q2),.6*sin(q1),1*sin(q6));\ni_blue=b_red-.2;\ni_green=if(above(b_blue,i_blue),.2,.6);\nob_r=b_red;\nob_b=b_blue;\nob_g=b_green;\nib_r=i_red;\nib_b=i_blue;\nib_g=i_green;\n\n\nwave_r=i_red;\nwave_b=b_blue;\nwave_g=i_green;","pixel_eqs_eel":"swirl=rot*Sin(.4*q1)-rot*sin(rad*q3)*rad*Sin(q1-x*y+rad)-x*.05*sin(q4)-y*.05*sin(q6)\n-\nrot*sin(above(q2-(rad*2),q3+(rad*2)))+rot*.25*sin(above(q1+rad,q2-(q5*rad*2)));\n;\nzoom=if(above(q1,q2),swirl+1.1-.02,zoom-.1);\nrot=if(above(q1,q2),swirl,-swirl);","warp":" shader_body { \n  vec2 uv_1;\n  uv_1.y = uv.y;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = roam_cos.x;\n  tmpvar_3.y = roam_sin.x;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize_noise_lq.zw * texsize.xy);\n  uv_1.x = (uv.x + ((0.02 * \n    ((texture (sampler_noise_lq, ((\n      (0.1 * tmpvar_4)\n     * uv) + (tmpvar_3 * 0.1))).y * 2.0) - 1.0)\n  ) * aspect.x));\n  vec2 tmpvar_5;\n  tmpvar_5.x = roam_sin.y;\n  tmpvar_5.y = -(roam_cos.y);\n  uv_1.x = (uv_1.x + ((0.04 * \n    ((texture (sampler_noise_lq, ((\n      (0.0125 * tmpvar_4)\n     * uv_1) + (tmpvar_5 * 0.03))).z * 2.0) - 1.0)\n  ) * aspect.x));\n  ret_2 = (texture (sampler_main, uv_1).xyz * vec3(0.99, 0.98, 0.97));\n  ret_2 = (ret_2 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).x - 0.5)\n   / 256.0) * 2.0));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (abs((\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\n  ret_2 = (ret_2 * 1.333);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"// to access a texture on disk: make a sampler.  This example loads \"noise_lq.{tga/jpg/etc}\".\n\n     // auto-binds; .xy = (w,h); .zw = (1/w,1/h)\n\nshader_body \n{\n    uv.x += 0.02 * (tex2D( sampler_noise_lq, \n                         uv*0.050*texsize_noise_lq.zw*texsize.xy*2\n                         + float2(roam_cos.x,roam_sin.x)*0.1 ).y*2-1)*aspect.x;\n    uv.x += 0.04 * (tex2D( sampler_noise_lq, \n                         uv*0.025*texsize_noise_lq.zw*texsize.xy*0.5\n                         + float2(roam_sin.y,-roam_cos.y)*0.03  ).z*2-1)*aspect.x;\n\n    ret = tex2D( sampler_main, uv ).xyz;\n\n    // darken over time\n    // cool idea: different falloff rates for the 3 colors-\n    ret *= float3(0.99,0.98,0.97);\n\n    // ERROR DIFFUSION DITHER - looks great\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw + rand_frame.xy;\n    ret.xyz += (tex2D(sampler_noise_lq, dither_uv).x-0.5)/256.0*2; \n}","comp_hlsl":"\n\n\n\nshader_body\n{\n    uv = 0.05 + 0.9*uv;\n    ret = tex2D(sampler_main, uv).xyz;\n      // SUPER GLOW EDGES - looks awesome w/octopus\n      float3 avg_col = GetBlur1(uv);\n      ret = abs(avg_col - ret)*6;\n    ret *= 1.333; // a little bit of overbright\n}"}