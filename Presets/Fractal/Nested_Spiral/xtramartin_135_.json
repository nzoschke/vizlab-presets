{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":3,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.002,"wave_scale":0.092,"wave_smoothing":0,"wave_mystery":-0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":0.01,"zoomexp":0.99817,"zoom":0.9901,"rot":0.02,"cx":0.65,"warp":0,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_r":0.74,"ob_g":0.4,"ob_b":0.14,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":32,"mv_y":24,"mv_l":5,"mv_r":0.3,"mv_g":0.5,"mv_b":0.4,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":15,"rad":0.08401,"tex_ang":0.5026,"tex_zoom":1.12519,"r":0.8,"b":0.8,"a":0.2,"g2":0,"a2":1,"border_r":0.7,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.2*Math.sin(div(a.time,12));a.y=.5+.2*Math.cos(div(a.time,17));a.r=.5+.2*Math.sin(div(a.time,31));a.g=.5+.2*Math.sin(div(a.time,41));a.b=.5+.2*Math.sin(div(a.time,17));a.x=.5;a.y=.5;a.rad=.05;a.a=.2;a.a2=0;","init_eqs_eel":"","frame_eqs_eel":"x = .5 + .2*sin(time/12);\ny = .5 + .2*cos(time/17);\n\nr = .5 + .2*sin(time/31);\ng = .5 + .2*sin(time/41);\nb = .5 + .2*sin(time/17);\nx =.5; y = .5;\nrad = .05;\na = .2; a2 = 0;"},{"baseVals":{"sides":63,"rad":0.02217,"tex_zoom":0.49981,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.07,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = 0.5;\ny = 0.5;\na = 0.03;\na2 = 0.0;\nrad = bass_att/20;","init_eqs_eel":"","frame_eqs_eel":"x = 0.5;\ny = 0.5;\na = 0.03;\na2 = 0.0;\nrad = bass_att/20;"},{"baseVals":{"enabled":1,"sides":14,"additive":1,"textured":1,"x":0.59,"y":0,"rad":1.21524,"ang":0.06283,"tex_ang":0.87965,"tex_zoom":0.51494,"r":0.6,"g":0.5,"b":0.7,"a":0.1,"r2":0.7,"g2":0.5,"b2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.3*Math.cos(div(a.time,78));a.y=.5+.3*Math.sin(div(a.time,78));a.tex_zoom=div(.2,Math.sin(div(a.time,31))+1.1);","init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/78);\ny = .5+.3*sin(time/78);\n\ntex_zoom = .2 / (sin(time/31)+1.1)\n\n"},{"baseVals":{"enabled":1,"sides":63,"additive":1,"textured":1,"x":0.76,"y":0.75,"rad":0.68636,"ang":0.43982,"tex_ang":0.50266,"tex_zoom":0.6159,"r":0.7,"g":0.7,"b":0.7,"a":0.15,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x=.5+.3*Math.cos(div(a.time,59));a.y=.5+.3*Math.sin(div(a.time,59));","init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/59);\ny = .5+.3 *sin(time/59);"}],"waves":[{"baseVals":{"samples":132,"sep":49,"usedots":1,"scaling":0.06708,"smoothing":0.82,"g":0.2,"b":0,"a":0.6,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"t2 = t2 + bass_att;","point_eqs_str":"k1 = (100*sample+time*2)%2;\nk2 = (100*sample+time*5)%2;\n\nx = .5 + .5*sin(sample*76+time/337);\ny = .5 + .5*sin(sample*126);\n\n\nr = .4;\ng = .8;\nb = 1*k2;\n\na = .3*k1;","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (100*sample+time*2)%2;\nk2 = (100*sample+time*5)%2;\n\nx = .5 + .5*sin(sample*76+time/337);\ny = .5 + .5*sin(sample*126);\n\n\nr = .4;\ng = .8;\nb = 1*k2;\n\na = .3*k1;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_str":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_str":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_str":"","init_eqs_eel":"t1 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt2 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt3 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt4 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt5 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt6 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt7 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\nt8 = 1 + (int(rand(101))*.01 - int(rand(101))*.01)*.3;\n","frame_eqs_eel":"tm = time*.1;\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\n\ntic = min(time - tin,1);\ntin = time;\n\ntva = (tic*q1*.5);\ntvb = (tic*q2*.5);\ntvc = (tic*q3*.5);\n\nq1 = tva;\nq2 = tvb;\nq3 = tvc;\n\nsz = .5;\nlen = 1;\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.q1=0;a.q2=0;a.q3=0;a.q4=0;a.q5=0;a.q6=0;a.q7=0;a.q8=0;","frame_eqs_str":"a.zoom=.99;a.wave_a=0;a.q1=Math.sin(.1*a.time);a.q2=Math.sin(.2*a.time);a.q3=Math.sin(.3*a.time);a.q4=Math.sin(a.time);a.q5=Math.sin(7*a.time);a.q6=Math.sin(10*a.time);a.q7=Math.sin(8*a.time);a.q8=Math.sin(12*a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"zoom=.99;\nwave_a=0;\n\nq1 = sin(.1*time);\nq2 = sin(.2*time);\nq3 = sin(.3*time);\nq4 = sin(time);\nq5 = sin(7*time);\nq6 = sin(10*time);\nq7 = sin(8*time);\nq8 = sin(12*time);","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\n shader_body { \n  vec3 crisp_1;\n  float tmpvar_2;\n  tmpvar_2 = (dot (texture (sampler_noise_hq, (\n    (q30 * uv)\n   + \n    (0.001 * time)\n  )), vec4(0.32, 0.49, 0.29, 0.0)) * 3.14);\n  mat2 tmpvar_3;\n  tmpvar_3[uint(0)].x = cos(tmpvar_2);\n  tmpvar_3[uint(0)].y = sin(tmpvar_2);\n  tmpvar_3[1u].x = -(sin(tmpvar_2));\n  tmpvar_3[1u].y = cos(tmpvar_2);\n  xlat_mutablemus = (abs(vec3((0.2 / \n    (sqrt(((\n      (uv - 0.5)\n     * aspect.xy) * tmpvar_3).y) + 0.2)\n  ))) * vec3(1.0, 0.96, 0.9));\n  xlat_mutablemus = (xlat_mutablemus * (vec3(1.0, 0.96, 0.9) + (0.1 * \n    (texture (sampler_noise_lq, uv) - 0.5)\n  .xyz)));\n  vec3 tmpvar_4;\n  tmpvar_4 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_5;\n  tmpvar_5.x = dot ((texture (sampler_main, (uv + vec2(0.004, 0.0))) - texture (sampler_main, (uv - vec2(0.004, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_5.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.004))) - texture (sampler_main, (uv - vec2(0.0, 0.004)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_5 * 0.02))).xyz + (0.5 * texture (sampler_main, uv)).xyz);\n  crisp_1 = (crisp_1 * 0.667);\n  crisp_1 = (crisp_1 + (vec3(0.018, 0.018, 0.018) - (\n    sqrt(dot (tmpvar_5, tmpvar_5))\n   * tmpvar_4)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((\n    (crisp_1 - (tmpvar_4 * 0.03))\n   + \n    (0.04 * xlat_mutablemus)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_6.xyz;\n }","comp":"float xlat_mutablerain;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv_wat;\nfloat xlat_mutablewater;\nfloat xlat_mutablez;\n shader_body { \n  vec2 uv_1;\n  uv_1 = uv;\n  float tmpvar_2;\n  tmpvar_2 = (time * 0.25);\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.wz);\n  float tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (min (abs(\n    (tmpvar_3.x / tmpvar_3.y)\n  ), 1.0) / max (abs(\n    (tmpvar_3.x / tmpvar_3.y)\n  ), 1.0));\n  float tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\n  tmpvar_6 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\n  tmpvar_6 = (tmpvar_6 + (float(\n    (abs((tmpvar_3.x / tmpvar_3.y)) > 1.0)\n  ) * (\n    (tmpvar_6 * -2.0)\n   + 1.570796)));\n  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.x / tmpvar_3.y)));\n  if ((abs(tmpvar_3.y) > (1e-08 * abs(tmpvar_3.x)))) {\n    if ((tmpvar_3.y < 0.0)) {\n      if ((tmpvar_3.x >= 0.0)) {\n        tmpvar_4 += 3.141593;\n      } else {\n        tmpvar_4 = (tmpvar_4 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_4 = (sign(tmpvar_3.x) * 1.570796);\n  };\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((0.3183098 * tmpvar_4) + tmpvar_2);\n  tmpvar_7.y = (((\n    (aspect.w * log(sqrt(dot (tmpvar_3, tmpvar_3))))\n   * 0.7) + (0.3183098 * tmpvar_4)) - (tmpvar_2 * 4.0));\n  vec2 tmpvar_8;\n  tmpvar_8 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_7 * 0.5)) * 2.0) - 1.0)\n  )));\n  mat2 tmpvar_9;\n  tmpvar_9[uint(0)] = _qb.xy;\n  tmpvar_9[1u] = _qb.zw;\n  vec2 tmpvar_10;\n  tmpvar_10.x = q15;\n  tmpvar_10.y = q16;\n  uv_1 = (((\n    (((tmpvar_8 - 0.5) * tmpvar_9) * 0.7)\n   * aspect.xy) + 0.5) + tmpvar_10);\n  vec2 tmpvar_11;\n  tmpvar_11.x = 0.5;\n  tmpvar_11.y = ((q11 + 0.6) + (q12 * (\n    sin(((uv_1.x * 6.0) + q10))\n   * \n    cos(((uv_1.y * 8.0) + (time * 0.6)))\n  )));\n  vec2 tmpvar_12;\n  tmpvar_12.x = (uv_1.x * 4.0);\n  tmpvar_12.y = uv_1.y;\n  vec2 tmpvar_13;\n  tmpvar_13.x = (uv_1.x * 4.0);\n  tmpvar_13.y = uv_1.y;\n  xlat_mutablerain = (texture (sampler_noise_lq, ((tmpvar_12 * 0.2) - time)).x + texture (sampler_noise_lq, ((tmpvar_13 * 0.5) - time)).x);\n  float tmpvar_14;\n  tmpvar_14 = (time / 4.0);\n  xlat_mutablerain = (xlat_mutablerain * clamp ((\n    (q20 / 2.0)\n   - \n    abs(sin((tmpvar_8.x - tmpvar_14)))\n  ), 0.0, 1.0));\n  xlat_mutableuv1 = ((uv_1 - tmpvar_11) + (xlat_mutablerain * 0.01));\n  float tmpvar_15;\n  tmpvar_15 = clamp ((128.0 * xlat_mutableuv1.y), 0.0, 1.0);\n  xlat_mutablez = (0.4 / xlat_mutableuv1.y);\n  xlat_mutablers0.x = (xlat_mutableuv1.x * xlat_mutablez);\n  xlat_mutablers0.y = xlat_mutablez;\n  vec2 tmpvar_16;\n  tmpvar_16.x = (xlat_mutablers0.x + tmpvar_14);\n  tmpvar_16.y = (xlat_mutablez + (time * 4.0));\n  xlat_mutablers = (tmpvar_16 * tmpvar_15);\n  xlat_mutablewater = (texture (sampler_noise_hq, xlat_mutablers) + texture (sampler_noise_hq, ((xlat_mutablers / 4.0) - (time / 8.0)))).x;\n  xlat_mutablewater = (xlat_mutablewater - 1.0);\n  vec2 tmpvar_17;\n  tmpvar_17.x = (xlat_mutableuv1.x + 0.5);\n  tmpvar_17.y = abs((0.5 - xlat_mutableuv1.y));\n  xlat_mutableuv_wat = (tmpvar_17 - ((0.2 * xlat_mutablewater) / pow (xlat_mutablez, 0.5)));\n  xlat_mutableret1 = (((texture (sampler_main, uv_1).xyz * \n    (1.0 - tmpvar_15)\n  ) + (\n    (((texture (sampler_main, xlat_mutableuv_wat).xyz * tmpvar_15) / pow (xlat_mutablez, 0.4)) * 2.0)\n   * \n    (1.0 - rand_preset.y)\n  )) + ((\n    ((rand_preset.y * (1.0 + (rand_preset.x * xlat_mutablewater))) * tmpvar_15)\n   / xlat_mutablez) * vec3(0.0, 0.1, 0.1)));\n  xlat_mutableret1 = (xlat_mutableret1 * (1.0 + (0.2 * xlat_mutablerain)));\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = (1.0 - exp((\n    -(pow (xlat_mutableret1, vec3(1.5, 1.5, 1.5)))\n   * 8.0)));\n  ret = tmpvar_18.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat2 uv1,uv6;\nfloat dx,dy;\n\nshader_body {\nuv1 = (uv-.5) * aspect.xy;\n\n\nfloat rota = lum(tex2D (sampler_noise_hq,q30*uv+.001*time))*3.14;\n\n\nuv6 = mul(uv1,float2x2(cos(rota),-sin(rota),sin(rota),cos(rota)));\n\n\nmus = .2/(sqrt(uv6.y)+.2);\nmus = abs(mus);\nmus *= float3 (1,.96,.9);\n\nfloat3 no = tex2D (sampler_noise_lq,uv)-.5;\nmus *= float3 (1,.96,.9) + 0.1*no;\n\ncolor =  1;\n\nfloat3 blur = GetBlur1(frac(uv));\n\nfloat2 hor = float2 (0.004,0);\nfloat2 ver = float2 (0,.004);\n\ndx = lum(tex2D(sampler_main,uv+hor) \n         - tex2D(sampler_main,uv-hor));\ndy = lum(tex2D(sampler_main,uv+ver) \n         - tex2D(sampler_main,uv-ver));\n\nfloat2 zz = float2 (dx,dy);\n\nfloat3 crisp= tex2D(sampler_main,uv+zz*.02);\nfloat3 crisp2 = .5*tex2D(sampler_main,uv);\ncrisp += crisp2;\ncrisp *= .667;\ncrisp +=.018*color - length(zz)*blur;\n\nfloat3 ret1 = crisp - blur*.03 + .04*mus;\n//ret1 -= abs(mus)/52;\nret = ret1 * .99 -  .04 ;\n}","comp_hlsl":"float z,mask,water,rain;\nfloat2 rs0, rs, uv0, uv1, uv2, uv3, uv4, uv5, uv_wat, uv_sky, \n       uv_stars, sunpos, uv_clouds;\nfloat3 ret1, ret2, sun, sunshine;\nstatic float trel = q10;\n\nshader_body {\nfloat t = time*0.25; // set velocity here\nfloat2 c = (uv-0.5)*aspect.wz;\nfloat1 ang_hq = atan2(c.x,c.y);\nfloat2 spiral = float2(ang_hq*M_INV_PI_2*2+t,aspect.w*log(length(c))*0.7+ang_hq*M_INV_PI_2*2-t*4);\nfloat2 mirror = 0.5 + (0.5 - abs( frac( spiral * 0.5 ) * 2.0 - 1.0 )); // mirror\nuv = mirror;\n\nuv0 = uv;\nfloat2x2 ang1 = float2x2 (_qb);\nuv = mul((uv-.5),ang1)*.7*aspect.xy+.5+float2(q15,q16);\n\nfloat2 center = float2 (.5,q11+.6+q12*(sin(uv.x*6+trel)*cos(uv.y*8+time*.6))); \nrain = tex2D (sampler_noise_lq,float2(uv.x*4,uv.y)*.2-time);\nrain += tex2D (sampler_noise_lq,float2(uv.x*4,uv.y)*.5-time);\n//rain *= (rain >= 1);\nrain *= 1*saturate(q20/2-abs(sin(uv0.x-time/4)));\n\nuv1 = (uv-center+rain*.01);\nmask = saturate(128*uv1.y);\nz = .4/(uv1.y);\nrs0.x = uv1.x * z; rs0.y = z ;\nrs = float2 (rs0.x+time/4, rs0.y+time*4)*mask;\nwater = tex2D(sampler_noise_hq,rs) + tex2D(sampler_noise_hq,rs/4-time/8);\n//water = pow(water/2,2);\nwater -= 1 ;\nuv_sky = float2(uv.x,uv.y);\nuv_wat = float2(uv1.x+.5,abs(.5-uv1.y))-.2*water/pow(z,.5);\n\n\nret1 = GetPixel(uv_sky+rain*.0)*(1-mask) + //Himmel\nGetPixel(uv_wat)*mask/pow(z,.4)*2*(1-rand_preset.y) + //Wasser\nrand_preset.y*\n(1+rand_preset.x*water)*mask/z*float3(0,.1,.1); //Leuchten Wasser\n\nret1 *= (1+.2*rain);\nret = 1-exp(-pow(ret1,1.5)*8);\n}"}