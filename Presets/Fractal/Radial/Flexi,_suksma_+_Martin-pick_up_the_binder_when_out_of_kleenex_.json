{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.95,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_a":1.003,"wave_scale":1.005,"wave_smoothing":0,"wave_mystery":1,"modwavealphastart":1.01,"modwavealphaend":1.01,"warpscale":0.107,"zoomexp":4.10046,"cx":1,"cy":0,"warp":0,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.07,"ob_a":1,"ib_size":0.07,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":1,"mv_y":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.d=0;a.beat_threshold=0;a.w=0;a.tb=0;a.last_time_bass=0;a.tempo_treb=0;a.q18=0;a.q21=0;a.lowpitch=0;a.q15=0;a.q6=0;a.q1=0;a.q5=0;a.last_treb=0;a.timegap_treb=0;a.tempo_bass=0;a.v=0;a.beat_treb=0;a.tt=0;a.time_threshold=0;a.beat_bass=0;a.last_bass=0;a.tgb=0;a.d2=0;a.ltb=0;a.highpitch=0;a.ltt=0;a.q4=0;a.last_time_treb=0;a.a=0;a.q16=0;a.volume=0;a.q19=0;a.beat=0;a.q2=0;a.timegap_bass=0;a.q3=0;a.q20=0;a.tgt=0;a.zoom=1;a.xpos=0;a.ypos=0;","frame_eqs_str":"a.decay=1;a.ob_r=1-Math.abs(Math.sin(div(a.time,2)));a.ob_g=1-Math.abs(Math.sin(div(a.time,2)));a.ob_b=1-Math.abs(Math.sin(div(a.time,2)));a.ib_r=1-Math.abs(Math.cos(div(a.time,3)));a.ib_g=1-Math.abs(Math.cos(div(a.time,3)));a.ib_b=1-Math.abs(Math.cos(div(a.time,3)));a.q1=.00001<Math.abs(above(Math.abs(a.ob_size-a.ib_size),.06))?17:.8;a.ob_size=Math.abs(div(Math.sin(div(a.time,5*a.q1)),13));a.ib_size=.08-a.ob_size;a.volume=div(a.bass_att+a.mid_att+a.treb_att,3);a.beat_threshold=\ndiv(1.7,.5*(a.tb+a.tt));a.time_threshold=.8;a.highpitch=.9*a.treb_att+.1*a.mid_att;a.lowpitch=a.bass_att;a.beat_bass=.00001<Math.abs(above(a.lowpitch,a.last_bass*a.beat_threshold))?1:0;a.beat_treb=.00001<Math.abs(above(a.highpitch,a.last_treb*a.beat_threshold))?1:0;a.timegap_bass=.00001<Math.abs(equal(a.beat_bass,1))?a.time-a.ltb:a.tgb;a.timegap_treb=.00001<Math.abs(equal(a.beat_treb,1))?a.time-a.ltt:a.tgt;a.tgb=a.timegap_bass;a.tgt=a.timegap_treb;a.last_time_bass=.00001<Math.abs(equal(a.beat_bass,\n1))?a.time:a.ltb;a.last_time_treb=.00001<Math.abs(equal(a.beat_treb,1))?a.time:a.ltt;a.ltb=a.last_time_bass;a.ltt=a.last_time_treb;a.tempo_bass=.00001<Math.abs(equal(a.beat_bass,1))?.92*a.tb+.08*a.tgb:a.tb;a.tempo_treb=.00001<Math.abs(equal(a.beat_treb,1))?.92*a.tt+.08*a.tgt:a.tt;a.tb=a.tempo_bass;a.tt=a.tempo_treb;a.q2=a.beat_bass;a.q3=a.beat_treb;a.q4=a.ob_r;a.q5=a.ib_r;a.q6=a.volume;a.last_treb=a.highpitch;a.last_bass=a.lowpitch;a.rot=Math.sin(div(a.time,5.3));a.beat=0;a.dx=div(Math.sin(div(a.time,\n4.4)),5);a.dy=div(Math.cos(div(a.time,3.6)),5);a.a=.98*a.a-.01*(a.bass-a.treb);a.q15=a.a;a.v=.96*a.v+.12*a.a;a.q16=a.v;a.w-=.01*a.v;a.q18=a.w;a.q19=.5-.15*(a.bass_att-a.treb_att);a.d+=div(.6*(a.bass_att-.5),a.fps);a.d2+=div(.36*(a.treb_att-.5),a.fps);a.q20=a.d;a.q21=a.d2;a.monitor=a.d2;","pixel_eqs_str":"","init_eqs_eel":"zoom=1;\nxpos=0;\nypos=0;","frame_eqs_eel":"decay=1;\nob_r=1-abs(sin(time/2));\nob_g=1-abs(sin(time/2));\nob_b=1-abs(sin(time/2));\nib_r=1-abs(cos(time/3));\nib_g=1-abs(cos(time/3));\nib_b=1-abs(cos(time/3));\nq1 = if(above(abs(ob_size - ib_size),0.06),17,0.8);\nob_size=abs(sin(time/(5*q1))/13);\nib_size=0.08-ob_size;\nvolume = (bass_att+mid_att+treb_att)/3;\nbeat_threshold = 1.7/((tb+tt)*0.5);\ntime_threshold = 0.8;\nhighpitch = 0.9 * treb_att + 0.1 * mid_att;\nlowpitch = bass_att;\nbeat_bass = if(above(lowpitch,last_bass*beat_threshold),1,0);\nbeat_treb = if(above(highpitch,last_treb*beat_threshold),1,0);\ntimegap_bass = if(equal(beat_bass,1), (time-ltb), tgb);\ntimegap_treb = if(equal(beat_treb,1), (time-ltt), tgt);\ntgb = timegap_bass;\ntgt = timegap_treb;\nlast_time_bass = if(equal(beat_bass,1), time, ltb);\nlast_time_treb = if(equal(beat_treb,1), time, ltt);\nltb = last_time_bass;\nltt = last_time_treb;\ntempo_bass = if(equal(beat_bass,1), (tb * 0.92 + 0.08 * tgb), tb);\ntempo_treb = if(equal(beat_treb,1), (tt * 0.92 + 0.08 * tgt), tt);\ntb = tempo_bass;\ntt = tempo_treb;\nq2 = beat_bass;\nq3 = beat_treb;\nq4 = ob_r;\nq5 = ib_r;\nq6 = volume;\n\nlast_treb = highpitch;\nlast_bass = lowpitch;\nrot=sin(time/5.3);\nbeat = 0;\ndx= sin(time/4.4)/5;\ndy= cos(time/3.6)/5;\n\n// these lines belong to the composite shader\na = a*0.98 - (bass-treb)*0.01;\nq15 = a;\nv = v*0.96 + a*0.12;\nq16 = v;\nw = w - v*0.01;\nq18 = w;\nq19 = 0.5-(bass_att-treb_att)*0.15;\nd = d + (bass_att-0.5)*0.01*60/fps;\nd2 = d2 + (treb_att-0.5)*0.006*60/fps;\nq20 = d;\nq21 = d2;\nmonitor = d2;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\n   * 0.01))).xyz + ((\n    (texture (sampler_noise_lq, ((uv_orig * 4.0) + rand_frame.xy)) * 2.0)\n   - 1.0) * 0.02).xyz);\n  float vec_y_2;\n  vec_y_2 = (uv_orig.y - 0.5);\n  float vec_x_3;\n  vec_x_3 = (uv_orig.x - 0.5);\n  float tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (min (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0) / max (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0));\n  float tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\n  tmpvar_6 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\n  tmpvar_6 = (tmpvar_6 + (float(\n    (abs((vec_y_2 / vec_x_3)) > 1.0)\n  ) * (\n    (tmpvar_6 * -2.0)\n   + 1.570796)));\n  tmpvar_4 = (tmpvar_6 * sign((vec_y_2 / vec_x_3)));\n  if ((abs(vec_x_3) > (1e-08 * abs(vec_y_2)))) {\n    if ((vec_x_3 < 0.0)) {\n      if ((vec_y_2 >= 0.0)) {\n        tmpvar_4 += 3.141593;\n      } else {\n        tmpvar_4 = (tmpvar_4 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_4 = (sign(vec_y_2) * 1.570796);\n  };\n  ret_1 = (ret_1 + (cos(\n    ((tmpvar_4 * 17.0) + (time * 12.0))\n  ) * 0.15));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":"vec2 xlat_mutablers;\n shader_body { \n  vec2 uv_1;\n  uv_1 = (0.5 + ((uv - 0.5) * aspect.xy));\n  xlat_mutablers.x = (((ang / 3.14) + (rad * \n    (q15 - q16)\n  )) - q18);\n  vec2 x_2;\n  x_2 = (uv_1 - 0.5);\n  xlat_mutablers.y = ((0.1 / (0.05 + \n    (sqrt(dot (x_2, x_2)) * 1.4)\n  )) + q21);\n  vec2 tmpvar_3;\n  tmpvar_3 = fract(xlat_mutablers);\n  vec2 tmpvar_4;\n  tmpvar_4.y = 0.0;\n  tmpvar_4.x = texsize.z;\n  vec2 tmpvar_5;\n  tmpvar_5 = (tmpvar_4 * 4.0);\n  vec2 tmpvar_6;\n  tmpvar_6.x = 0.0;\n  tmpvar_6.y = texsize.w;\n  vec2 tmpvar_7;\n  tmpvar_7 = (tmpvar_6 * 4.0);\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot (((\n    (texture (sampler_blur1, (tmpvar_3 - tmpvar_5)).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (tmpvar_3 + tmpvar_5)).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot (((\n    (texture (sampler_blur1, (tmpvar_3 - tmpvar_7)).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (tmpvar_3 + tmpvar_7)).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  uv_1 = ((0.4 * cos(\n    ((12.56 * tmpvar_3) - (vec2(0.0, 10.0) * (q21 + q20)))\n  )) - (4.0 * tmpvar_8));\n  vec3 tmpvar_9;\n  tmpvar_9 = pow (((\n    (2.0 * (clamp ((0.02 / \n      sqrt(dot (uv_1, uv_1))\n    ), 0.0, 1.0) * hue_shader))\n   * \n    ((texture (sampler_main, tmpvar_3) * 4.0).xyz + 1.0)\n  ) - 0.04), vec3(0.8, 0.8, 0.8));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = mix (tmpvar_9, tmpvar_9.zxy, vec3(q19)).zxy;\n  ret = tmpvar_10.xyz;\n }","warp_hlsl":"shader_body\n{\n    // PAINTERLY EFFECT:\n    float2 uv2 = uv;\n    const float mipbias = 0;\n    float2 delta2 = texsize.zw*float2(1,1);\n    float3 blurry_color = tex2D( sampler_main, uv2 + delta2 ).xyz;\n    uv2.xy += (blurry_color.xy-0.37) * 0.01;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv2 ).xyz;\n\n    ret += (tex2D(sampler_noise_lq, uv_orig*4 + rand_frame.xy)*2-1)*0.02;\n\n    float ang2 = atan2(uv_orig.y-0.5,uv_orig.x-0.5);\n    ret += (  cos(ang2*17 + time*12 + lum(ret)*0) )*0.15;\n\n    // darken over time\n    //ret -= 0.004;    \n}","comp_hlsl":"float2 rs;\nshader_body\n{\nuv = 0.5 + (uv-0.5)*aspect.xy;\nrs.x = ang/3.14 + rad*(q15-q16) - q18;\nrs.y = .1/(.05+length (uv-0.5)*1.4)+q21;\n\nuv = frac(rs);\n\nfloat2 hor = float2 (texsize.z,0)*4;\nfloat2 ver = float2 (0,texsize.w)*4;\nfloat dx = lum(GetBlur1 (uv-hor) - GetBlur1 (uv+hor));\nfloat dy = lum(GetBlur1 (uv-ver) - GetBlur1 (uv+ver));\nfloat2 dz = float2 (dx,dy);\n\nfloat3 ret1 = tex2D(sampler_main, uv)*4;\n\nuv = .4*cos(uv*3.14*4 - float2(0,10)*(q21+q20)) - 4*dz;;\nfloat3 dots = saturate(.02/length(uv))*hue_shader;\n\nret = pow(2*dots*(ret1+1)-0.04,0.8);\nret = lerp(ret,ret.zxy,q19).zxy;\n//ret = dots;\n}"}