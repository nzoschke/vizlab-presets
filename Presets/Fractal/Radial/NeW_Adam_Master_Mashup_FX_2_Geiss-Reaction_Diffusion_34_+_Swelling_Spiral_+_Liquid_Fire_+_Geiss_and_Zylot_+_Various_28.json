{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_mode":1,"additivewave":1,"wave_brighten":0,"wave_a":1.028,"wave_scale":0.591,"wave_smoothing":0.18,"wave_mystery":0.24,"modwavealphastart":0.95,"modwavealphaend":0.75,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_b":1,"ob_a":1,"ib_size":0.04,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.xpos=0;a.q1=0;a.myx=0;a.myy=0;a.x_pos=0;a.q4=0;a.ypos=0;a.movement=0;a.att=0;a.volume=0;a.q2=0;a.q4=.249+.005*Math.floor(rand(100));a.q5=.249+.005*Math.floor(rand(100));a.q6=.249+.005*Math.floor(rand(100));","frame_eqs_str":"a.warp=0;a.volume=.3*(a.bass+a.mid+a.att);a.wave_x=1-(a.xpos+.5);a.wave_y=a.ypos+.5;a.mv_r=.5+.499*(.6*Math.sin(3.98*a.time)+.4*Math.sin(1.047*a.time));a.mv_g=.5+.499*(.6*Math.sin(.835*a.time)+.4*Math.sin(1.081*a.time));a.mv_b=.5+.499*(.6*Math.sin(.814*a.time)+.4*Math.sin(1.011*a.time));a.q1=a.x_pos+.5;a.q2=1-(a.ypos+.5);a.wave_a=0;a.warp=0;a.zoom=1;a.movement+=.5*div(a.bass+a.bass_att+.075*pow(a.bass+.6*a.bass_att+.2*a.treb_att,3),a.fps);a.movement=.00001<Math.abs(above(a.movement,\n1E4))?0:a.movement;a.rot=-.04+.01*(Math.sin(.696*a.movement)+Math.cos(.463*a.movement)+Math.sin(.365*a.movement));a.cx=.1*(Math.sin(.247*a.movement)+Math.cos(.373*a.movement)+Math.sin(.187*a.movement));a.cy=.1*(Math.sin(.317*a.movement)+Math.cos(.209*a.movement)+Math.sin(.109*a.movement));a.ob_b=a.q4+.25*Math.sin(3.816*a.movement);a.ob_g=a.q4+.25*Math.sin(.744*a.movement);a.ob_r=a.q4+.25*Math.sin(.707*a.movement);a.wrap=below(a.bass+a.bass_att,3);a.zoom=.99+.0035*(Math.sin(.217*a.movement)+Math.cos(.413*\na.movement)+Math.sin(.311*a.movement));","pixel_eqs_str":"a.myy=a.y-.250025;a.myx=a.x-.5;a.dx=4*a.myx*a.myy;a.dy=2*(a.myy*a.myy-a.myx*a.myx);","init_eqs_eel":"q4 = 0.249+0.5*(int(rand(100))*0.01);\nq5 = 0.249+0.5*(int(rand(100))*0.01);\nq6 = 0.249+0.5*(int(rand(100))*0.01);","frame_eqs_eel":"warp = 0;\nvolume = 0.3*(bass+mid+att);\nwave_x = 1-(xpos + 0.5);\nwave_y = ypos + 0.5;\nmv_r = 0.5 + 0.499*(0.60*sin(3.980*time) + 0.40*sin(1.047*time) );\nmv_g = 0.5+ 0.499*(0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\nmv_b = 0.5 + 0.499*(0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\nq1 = (x_pos+0.5);\nq2 = 1- (ypos+0.5);\nwave_a =0;\nwarp=0;\nzoom =1;\nmovement =movement + 0.5*(((bass+bass_att + 0.075*pow((bass+0.6*bass_att+0.2*treb_att),3)))/fps);\nmovement = if(above(movement,10000), 0, movement);\nrot =-0.04+ 0.01*(sin(movement*0.696)+cos(movement*0.463)+sin(movement*0.365));\ncx = 0 + 0.1*(sin(movement*0.247)+cos(movement*0.373)+sin(movement*0.187));\ncy = 0 + 0.1*(sin(movement*0.317)+cos(movement*0.209)+sin(movement*0.109));\nob_b = q4+0.25*sin(movement*3.816);\nob_g = q4+0.25*sin(movement*0.744);\nob_r = q4+0.25*sin(movement*0.707);\nwrap = below(bass+bass_att,3);\nzoom = 0.99 + 0.0035*(sin(movement*0.217)+cos(movement*0.413)+sin(movement*0.311));","pixel_eqs_eel":"myy = y-(0.250025);\nmyx = x-0.5;\ndx = 2*(2*myx*myy);\ndy = 2*((myy*myy) - (myx*myx));","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\n   * 0.01))).xyz + ((\n    (texture (sampler_noise_lq, ((uv_orig * 4.0) + rand_frame.xy)) * 2.0)\n   - 1.0) * 0.02).xyz);\n  float vec_y_2;\n  vec_y_2 = (uv_orig.y - 0.5);\n  float vec_x_3;\n  vec_x_3 = (uv_orig.x - 0.5);\n  float tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (min (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0) / max (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0));\n  float tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\n  tmpvar_6 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\n  tmpvar_6 = (tmpvar_6 + (float(\n    (abs((vec_y_2 / vec_x_3)) > 1.0)\n  ) * (\n    (tmpvar_6 * -2.0)\n   + 1.570796)));\n  tmpvar_4 = (tmpvar_6 * sign((vec_y_2 / vec_x_3)));\n  if ((abs(vec_x_3) > (1e-08 * abs(vec_y_2)))) {\n    if ((vec_x_3 < 0.0)) {\n      if ((vec_y_2 >= 0.0)) {\n        tmpvar_4 += 3.141593;\n      } else {\n        tmpvar_4 = (tmpvar_4 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_4 = (sign(vec_y_2) * 1.570796);\n  };\n  ret_1 = (ret_1 + (cos(\n    ((tmpvar_4 * 17.0) + (time * 12.0))\n  ) * 0.15));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 0.0;\n  tmpvar_2.xyz = ret_1;\n  vec2 tmpvar_3;\n  tmpvar_3.x = (1.0 - uv.x);\n  tmpvar_3.y = uv.y;\n  ret_1 = max (tmpvar_2, texture (sampler_main, tmpvar_3)).xyz;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // PAINTERLY EFFECT:\n    float2 uv2 = uv;\n    const float mipbias = 0;\n    float2 delta2 = texsize.zw*float2(1,1);\n    float3 blurry_color = tex2D( sampler_main, uv2 + delta2 ).xyz;\n    uv2.xy += (blurry_color.xy-0.37) * 0.01;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv2 ).xyz;\n\n    ret += (tex2D(sampler_noise_lq, uv_orig*4 + rand_frame.xy)*2-1)*0.02;\n\n    float ang2 = atan2(uv_orig.y-0.5,uv_orig.x-0.5);\n    ret += (  cos(ang2*17 + time*12 + lum(ret)*0) )*0.15;\n\n    // darken over time\n    //ret -= 0.004;    \n}","comp_hlsl":"// to access a texture on disk: make a sampler.  This example loads \"lichen.{tga/jpg/etc}\".\nsampler2D sampler_fw_lichen;  // _FW = filtering + wrap; _PC = point sampling + edge clamp; etc.\nfloat4    texsize_lichen;     // auto-binds; .xy = (w,h); .zw = (1/w,1/h)\n\n\nshader_body      \n\n\n\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret = max(ret, tex2D(sampler_main, float2(1-uv.x,uv.y)));\n    ret *= 1.00; //old gamma effect\n    \n}"}