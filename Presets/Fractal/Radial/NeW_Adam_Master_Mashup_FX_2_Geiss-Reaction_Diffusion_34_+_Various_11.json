{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"cx":-0.19,"cy":-0.1,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":12.8,"mv_y":9.6,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.49138,"r":0,"g":1,"b":1,"g2":0,"b2":0.1,"a2":0.06,"border_a":0},"init_eqs_str":"a.q7=0;a.q8=0;","frame_eqs_str":"a.x=.5+a.q7;a.y=.5+a.q8;","init_eqs_eel":"","frame_eqs_eel":"x=.5+q7;\ny=.5+q8;"},{"baseVals":{"sides":24,"rad":0.01842,"tex_zoom":0.81954,"g":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"tex_ang=0.01;\nx=.5-q4;\ny=.5-q5;","init_eqs_eel":"","frame_eqs_eel":"tex_ang=0.01;\nx=.5-q4;\ny=.5-q5;"},{"baseVals":{"enabled":1,"sides":24,"rad":0.16446,"tex_zoom":0.13669,"g":1,"b":1,"a":0.6,"r2":1,"border_a":0},"init_eqs_str":"a.q7=0;a.q8=0;","frame_eqs_str":"a.x=.5+a.q7;a.y=.5+a.q8;","init_eqs_eel":"","frame_eqs_eel":"x = .5 + q7;\ny = .5 + q8;"},{"baseVals":{"sides":50,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"x = .5 - q7;\ny = .5 - q8;\n\nd = abs(x-.5) + abs(y-.5);\n\na = max(1 - d*4,0);\na2 = max(1 - d*4*2,0);","init_eqs_eel":"","frame_eqs_eel":"x = .5 - q7;\ny = .5 - q8;\n\nd = abs(x-.5) + abs(y-.5);\n\na = max(1 - d*4,0);\na2 = max(1 - d*4*2,0);"}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"a.dc=0;a.tic=0;a.t1=0;a.tir=0;a.mixc=0;a.it=0;a.q1=0;a.t3=0;a.my=0;a.ly=0;a.mixa=0;a.mx=0;a.t2=0;a.mixb=0;a.lx=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.tic=a.time-a.tir;a.tir=a.time;a.mixa=(a.mixa+a.q1*a.tic)*below(a.mixa,1E4);a.t1=a.mixa-Math.floor(a.mixa);a.mixb=(a.mixb+a.q2*a.tic)*below(a.mixb,1E4);a.t2=a.mixb-Math.floor(a.mixb);a.mixc=(a.mixc+a.q3*a.tic)*below(a.mixc,1E4);a.t3=a.mixc-Math.floor(a.mixc);","point_eqs_str":"a.it=(a.it+1)*above(a.sample,0);a.dc=(a.dc+equal(mod(a.it,48),0))*above(a.sample,0);a.lx=a.t1*equal(a.dc,0)+(1-a.t3)*(equal(a.dc,2)+equal(a.dc,1))+a.t2*equal(a.dc,3);a.ly=.975*(equal(a.dc,1)+equal(a.dc,3));a.mx=-.1*equal(mod(a.it+6,6),0)+-.1*equal(mod(a.it+1,6),0)+.1*equal(mod(a.it+4,6),0)+.1*equal(mod(a.it+3,6),0);a.my=(a.my+.01*equal(mod(a.it+3,6),0)+.01*equal(mod(a.it,6),0))*(above(a.sample,0)-equal(mod(.5*a.it,48),0));a.x=.00001<Math.abs(below(a.dc,2))?a.lx+.2*a.mx:a.ly+\n.1*a.my;a.y=.00001<Math.abs(below(a.dc,2))?a.ly+.1*a.my:a.lx+.2*a.mx;a.b=1;a.r=.8*equal(a.mx,0);a.g=1*equal(a.mx,0);a.a=equal(a.mx,0)*below(a.dc,4);","init_eqs_eel":"","frame_eqs_eel":"tic = time - tir;\ntir = time;\n\nmixa = (mixa + q1*tic)*below(mixa,10000);\nt1 = mixa - int(mixa);\nmixb = (mixb + q2*tic)*below(mixb,10000);\nt2 = mixb - int(mixb);\nmixc = (mixc + q3*tic)*below(mixc,10000);\nt3 = mixc - int(mixc);","point_eqs_eel":"it = (it+1)*above(sample,0);\n\ndc = (dc + equal(it%48,0))*above(sample,0);\n\nlx = t1*equal(dc,0) + (1-t3)*(equal(dc,2) + equal(dc,1)) + t2*equal(dc,3);\nly = 0 + (equal(dc,1) + equal(dc,3))*.975;\n\nmx = equal((it+6)%6,0)*-.1 + equal((it+1)%6,0)*-.1 + equal((it+4)%6,0)*.1 + equal((it+3)%6,0)*.1;\nmy = (my + equal((it+3)%6,0)*.01 + equal((it)%6,0)*.01)*(above(sample,0) - equal((it*.5)%48,0));\n\nx = if(below(dc,2),lx + mx*.2,ly + my*.1);\ny = if(below(dc,2),ly + my*.1,lx + mx*.2);\n\nb = 1;\nr = equal(mx,0)*.8;\ng = equal(mx,0)*1;\na = equal(mx,0)*below(dc,4);"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.treb_effect=0;a.net_effect=0;a.rot_residual=0;a.bass_thresh=0;a.shift=0;","frame_eqs_str":"a.warp=0;a.dx=-.0005;a.dy=-.0005;a.wave_x=div(Math.floor(rand(100)),100);a.wave_r=1+Math.sin(3.1415*-a.wave_x);a.wave_g=Math.abs(Math.sin(6.283*a.wave_x));a.wave_b=Math.sin(3.1415*a.wave_x);a.treb_effect=.00001<Math.abs(above(a.treb_att,1.4))?pow(.99,a.treb_att):1;a.net_effect=.00001<Math.abs(above(a.bass_att,.8*a.treb_att))?1:a.treb_effect;a.zoom=a.net_effect;a.rot+=a.rot_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-\n1.3)+1.3);a.shift=Math.tan(7*a.time)-.05;a.shift=.00001<Math.abs(above(a.shift,0))?0:.00001<Math.abs(below(a.shift,-.1))?-.1:a.shift;a.rot_residual=.00001<Math.abs(equal(a.bass_thresh,2))?a.shift:a.rot_residual;","pixel_eqs_str":"a.rot+=.00001<Math.abs(equal(Math.sin(a.ang),0))?-a.rot:.05;","init_eqs_eel":"","frame_eqs_eel":"warp=0;\ndx=-0.0005;\ndy=-0.0005;\nwave_x = int(rand(100))/100;\nwave_r = 1 + sin(-wave_x*3.1415);\nwave_g = abs(sin(2*wave_x*3.1415));\nwave_b = sin(wave_x*3.1415);\ntreb_effect = if(above(treb_att,1.4),pow(0.99,treb_att),1);\nnet_effect = if(above(bass_att,0.8*treb_att),1,treb_effect);\nzoom = net_effect;\nrot = rot + rot_residual;\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\nshift = (tan(time*7)) -0.05;\nshift = if(above(shift,0),0,if(below(shift,-0.1),-0.1,shift));\nrot_residual = if(equal(bass_thresh,2),shift,rot_residual);","pixel_eqs_eel":"rot = rot + if(equal(sin(ang), 0), -rot, 0.05);","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\n   * 0.01))).xyz + ((\n    (texture (sampler_noise_lq, ((uv_orig * 4.0) + rand_frame.xy)) * 2.0)\n   - 1.0) * 0.02).xyz);\n  float vec_y_2;\n  vec_y_2 = (uv_orig.y - 0.5);\n  float vec_x_3;\n  vec_x_3 = (uv_orig.x - 0.5);\n  float tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (min (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0) / max (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0));\n  float tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\n  tmpvar_6 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\n  tmpvar_6 = (tmpvar_6 + (float(\n    (abs((vec_y_2 / vec_x_3)) > 1.0)\n  ) * (\n    (tmpvar_6 * -2.0)\n   + 1.570796)));\n  tmpvar_4 = (tmpvar_6 * sign((vec_y_2 / vec_x_3)));\n  if ((abs(vec_x_3) > (1e-08 * abs(vec_y_2)))) {\n    if ((vec_x_3 < 0.0)) {\n      if ((vec_y_2 >= 0.0)) {\n        tmpvar_4 += 3.141593;\n      } else {\n        tmpvar_4 = (tmpvar_4 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_4 = (sign(vec_y_2) * 1.570796);\n  };\n  ret_1 = (ret_1 + (cos(\n    ((tmpvar_4 * 17.0) + (time * 12.0))\n  ) * 0.15));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 0.0;\n  tmpvar_2.xyz = ret_1;\n  vec2 tmpvar_3;\n  tmpvar_3.x = (1.0 - uv.x);\n  tmpvar_3.y = uv.y;\n  ret_1 = max (tmpvar_2, texture (sampler_main, tmpvar_3)).xyz;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // PAINTERLY EFFECT:\n    float2 uv2 = uv;\n    const float mipbias = 0;\n    float2 delta2 = texsize.zw*float2(1,1);\n    float3 blurry_color = tex2D( sampler_main, uv2 + delta2 ).xyz;\n    uv2.xy += (blurry_color.xy-0.37) * 0.01;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv2 ).xyz;\n\n    ret += (tex2D(sampler_noise_lq, uv_orig*4 + rand_frame.xy)*2-1)*0.02;\n\n    float ang2 = atan2(uv_orig.y-0.5,uv_orig.x-0.5);\n    ret += (  cos(ang2*17 + time*12 + lum(ret)*0) )*0.15;\n\n    // darken over time\n    //ret -= 0.004;    \n}","comp_hlsl":"// to access a texture on disk: make a sampler.  This example loads \"lichen.{tga/jpg/etc}\".\nsampler2D sampler_fw_lichen;  // _FW = filtering + wrap; _PC = point sampling + edge clamp; etc.\nfloat4    texsize_lichen;     // auto-binds; .xy = (w,h); .zw = (1/w,1/h)\n\n\nshader_body      \n\n\n\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret = max(ret, tex2D(sampler_main, float2(1-uv.x,uv.y)));\n    ret *= 1.00; //old gamma effect\n    \n}"}