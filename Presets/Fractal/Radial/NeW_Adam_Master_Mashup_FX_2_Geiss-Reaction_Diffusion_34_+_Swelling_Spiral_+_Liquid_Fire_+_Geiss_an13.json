{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"wrap":0,"wave_a":0.001,"cx":-0.19,"cy":-0.1,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0.75,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.q1=0;a.tex_saw=.4;","frame_eqs_str":"a.ang=.2*a.q1;a.tex_zoom=.6;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\n\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"textured":1,"x":0.25,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.q1=0;a.tex_saw=.4;","frame_eqs_str":"a.ang=.2*a.q1;a.tex_zoom=.6;","init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\ntex_zoom = 0.6;"},{"baseVals":{"sides":100,"rad":0.22167,"border_a":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"border_r = 0.5 + 0.5*sin(q1*10);","init_eqs_eel":"","frame_eqs_eel":"border_r = 0.5 + 0.5*sin(q1*10);"},{"baseVals":{"enabled":1,"sides":100,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.q3=0;a.xx=0;a.yy=0;a.radi=0;a.q1=0;","frame_eqs_str":"a.a=above(a.q3,2);a.a2=.8*above(a.q3,2);a.xx=.00001<Math.abs(above(a.q3,5))?a.xx:.01*rand(100);a.yy=.00001<Math.abs(above(a.q3,5))?a.yy:.01*rand(100);a.radi=.00001<Math.abs(above(a.q3,5))?a.radi:.01*rand(100);a.rad=a.radi;a.x=a.xx;a.y=a.yy;a.r=.5*Math.sin(1.22*a.q1)+.6;a.g=.4+.4*Math.sin(1.307*a.q1);a.b=.4+.4*Math.sin(1.959*a.q1);a.r2=.5*Math.sin(1.622*a.q1)+.6;a.g2=.4+.4*Math.sin(1.507*a.q1);a.b2=.4+.4*Math.sin(1.6559*a.q1);","init_eqs_eel":"","frame_eqs_eel":"a = above(q3,2);\na2 = above(q3,2)*0.8;\n\nxx = if(above(q3,5),xx,rand(100)*0.01);\nyy = if(above(q3,5),yy,rand(100)*0.01);\nradi = if(above(q3,5),radi,rand(100)*0.01);\n\nrad = radi;\n\nx = xx;\ny = yy;\n\n\nr = 0.5 + 0.5*sin(q1*1.22) + 0.1;\ng = 0.4 + 0.4*sin(q1*1.307);\nb = 0.4 + 0.4*sin(q1*1.959);\n\n\nr2 = 0.5 + 0.5*sin(q1*1.622) + 0.1;\ng2 = 0.4 + 0.4*sin(q1*1.507);\nb2 = 0.4 + 0.4*sin(q1*1.6559);"}],"waves":[{"baseVals":{"enabled":1,"a":0.5},"init_eqs_str":"a.zs=0;a.speed=0;a.q1=0;a.zd=0;","frame_eqs_str":"","point_eqs_str":"a.zs=.00001<Math.abs(below(a.zs,1))?9:a.zs;a.zs=.00001<Math.abs(above(a.zs,1100))?1:a.zs;a.speed=.002*a.bass;a.zs+=Math.tan(.015*a.q1)*a.speed;a.zd+=2;a.x=.5+.1*Math.cos(a.q1*a.zs);a.y=.5+.1*Math.sin(a.q1*a.zs);a.r=.5+.5*Math.sin(1.2*a.q1+a.x+a.x);a.g=.5+.5*Math.sin(1.5*a.q1+a.x+a.y);a.b=.5+.5*Math.sin(1.36*a.q1+a.y+a.y);","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\nzs = if(below(zs,1),9,zs);\n\nzs = if(above(zs, 1100),1, zs);\n\nspeed = bass*0.002;\n\n//sum\nzs = zs + tan(q1*0.015)*speed;\n\nzd = zd + 2;\n\n\n\n//project\nx = 0.5 + 0.1*cos(q1*zs);\ny = 0.5 + 0.1*sin(q1*zs);\n\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.treb_effect=0;a.net_effect=0;a.rot_residual=0;a.bass_thresh=0;a.shift=0;","frame_eqs_str":"a.warp=0;a.dx=-.0005;a.dy=-.0005;a.wave_x=div(rand(100),100);a.wave_r=1+Math.sin(3.1415*-a.wave_x);a.wave_g=Math.abs(Math.sin(6.283*a.wave_x));a.wave_b=Math.sin(3.1415*a.wave_x);a.treb_effect=.00001<Math.abs(above(a.treb_att,1.4))?pow(.99,a.treb_att):1;a.net_effect=.00001<Math.abs(above(a.bass_att,.8*a.treb_att))?1:a.treb_effect;a.zoom=a.net_effect;a.rot+=a.rot_residual;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+\n1.3);a.shift=Math.tan(7*a.time)-.05;a.shift=.00001<Math.abs(above(a.shift,0))?0:.00001<Math.abs(below(a.shift,-.1))?-.1:a.shift;a.rot_residual=.00001<Math.abs(equal(a.bass_thresh,2))?a.shift:a.rot_residual;","pixel_eqs_str":"a.rot+=.00001<Math.abs(equal(Math.sin(a.ang),0))?-a.rot:.05;","init_eqs_eel":"","frame_eqs_eel":"warp=0;\ndx=-0.0005;\ndy=-0.0005;\nwave_x = rand(100)/100;\nwave_r = 1 + sin(-wave_x*3.1415);\nwave_g = abs(sin(2*wave_x*3.1415));\nwave_b = sin(wave_x*3.1415);\ntreb_effect = if(above(treb_att,1.4),pow(0.99,treb_att),1);\nnet_effect = if(above(bass_att,0.8*treb_att),1,treb_effect);\nzoom = net_effect;\nrot = rot + rot_residual;\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\nshift = (tan(time*7)) -0.05;\nshift = if(above(shift,0),0,if(below(shift,-0.1),-0.1,shift));\nrot_residual = if(equal(bass_thresh,2),shift,rot_residual);","pixel_eqs_eel":"rot = rot + if(equal(sin(ang), 0), -rot, 0.05);","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\n   * 0.01))).xyz + ((\n    (texture (sampler_noise_lq, ((uv_orig * 4.0) + rand_frame.xy)) * 2.0)\n   - 1.0) * 0.02).xyz);\n  float vec_y_2;\n  vec_y_2 = (uv_orig.y - 0.5);\n  float vec_x_3;\n  vec_x_3 = (uv_orig.x - 0.5);\n  float tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (min (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0) / max (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0));\n  float tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\n  tmpvar_6 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\n  tmpvar_6 = (tmpvar_6 + (float(\n    (abs((vec_y_2 / vec_x_3)) > 1.0)\n  ) * (\n    (tmpvar_6 * -2.0)\n   + 1.570796)));\n  tmpvar_4 = (tmpvar_6 * sign((vec_y_2 / vec_x_3)));\n  if ((abs(vec_x_3) > (1e-08 * abs(vec_y_2)))) {\n    if ((vec_x_3 < 0.0)) {\n      if ((vec_y_2 >= 0.0)) {\n        tmpvar_4 += 3.141593;\n      } else {\n        tmpvar_4 = (tmpvar_4 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_4 = (sign(vec_y_2) * 1.570796);\n  };\n  ret_1 = (ret_1 + (cos(\n    ((tmpvar_4 * 17.0) + (time * 12.0))\n  ) * 0.15));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 0.0;\n  tmpvar_2.xyz = ret_1;\n  vec2 tmpvar_3;\n  tmpvar_3.x = (1.0 - uv.x);\n  tmpvar_3.y = uv.y;\n  ret_1 = max (tmpvar_2, texture (sampler_main, tmpvar_3)).xyz;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // PAINTERLY EFFECT:\n    float2 uv2 = uv;\n    const float mipbias = 0;\n    float2 delta2 = texsize.zw*float2(1,1);\n    float3 blurry_color = tex2D( sampler_main, uv2 + delta2 ).xyz;\n    uv2.xy += (blurry_color.xy-0.37) * 0.01;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv2 ).xyz;\n\n    ret += (tex2D(sampler_noise_lq, uv_orig*4 + rand_frame.xy)*2-1)*0.02;\n\n    float ang2 = atan2(uv_orig.y-0.5,uv_orig.x-0.5);\n    ret += (  cos(ang2*17 + time*12 + lum(ret)*0) )*0.15;\n\n    // darken over time\n    //ret -= 0.004;    \n}","comp_hlsl":"// to access a texture on disk: make a sampler.  This example loads \"lichen.{tga/jpg/etc}\".\nsampler2D sampler_fw_lichen;  // _FW = filtering + wrap; _PC = point sampling + edge clamp; etc.\nfloat4    texsize_lichen;     // auto-binds; .xy = (w,h); .zw = (1/w,1/h)\n\n\nshader_body      \n\n\n\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret = max(ret, tex2D(sampler_main, float2(1-uv.x,uv.y)));\n    ret *= 1.00; //old gamma effect\n    \n}"}