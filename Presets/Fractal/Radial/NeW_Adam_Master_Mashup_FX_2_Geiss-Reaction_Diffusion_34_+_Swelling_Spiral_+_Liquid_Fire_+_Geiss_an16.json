{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_mode":7,"wave_brighten":0,"wave_a":0.005,"wave_scale":0.167,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_x":0.95,"wave_y":1,"ob_size":0.005,"ob_r":0.01,"ob_a":0.5,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":34,"thickoutline":1,"textured":1,"x":0.75,"rad":0.30478,"tex_ang":1.5708,"tex_zoom":0.82773,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"vx = 0;\nvy = 0;","frame_eqs_str":"rad = .3;\ntex_zoom = .28;\ntex_zoom = 1/rad*tex_zoom;\n\nx = .5 + sin(time*.957)*.1;","init_eqs_eel":"vx = 0;\nvy = 0;","frame_eqs_eel":"rad = .3;\ntex_zoom = .28;\ntex_zoom = 1/rad*tex_zoom;\n\nx = .5 + sin(time*.957)*.1;"},{"baseVals":{"sides":74,"thickoutline":1,"textured":1,"x":0.25,"rad":0.45378,"tex_zoom":0.5033,"g":1,"b":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"rad = .3;\ntex_zoom = .3;\ntex_zoom = 1/rad*tex_zoom;\n\nx = .5 + sin(time)*.15;","init_eqs_eel":"","frame_eqs_eel":"rad = .3;\ntex_zoom = .3;\ntex_zoom = 1/rad*tex_zoom;\n\nx = .5 + sin(time)*.15;"},{"baseVals":{"enabled":1,"sides":84,"additive":1,"thickoutline":1,"rad":0.16777,"tex_zoom":0.5033,"r":0,"b":0.2,"a":0.6,"g2":0,"border_a":0},"init_eqs_str":"a.ti=0;a.vx=0;a.vy=0;","frame_eqs_str":"a.ti=.3*a.time;a.x=.5+.34*Math.sin(a.ti);a.y=.5+.34*Math.cos(a.ti);a.rad+=a.bass;a.ti=2.3*a.time;a.x+=.1*Math.sin(a.ti);a.y+=.1*Math.cos(a.ti);","init_eqs_eel":"vx = 0;\nvy = 0;","frame_eqs_eel":"ti = time*.3;\nx = .5 + .34*sin(ti);\ny = .5 + .34*cos(ti);\n\nrad = rad + bass;\n\nti = time*2.3;\nx = x + .1*sin(ti);\ny = y + .1*cos(ti);"},{"baseVals":{"sides":74,"additive":1,"rad":0.16777,"r2":1,"g2":0,"a2":1,"border_b":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ti = -time*.3;\nx = .5 + .3*sin(ti);\ny = .5 + .3*cos(ti);\n\nti = -time*2.3;\nx = x + .2*sin(ti);\ny = y + .2*cos(ti);","init_eqs_eel":"","frame_eqs_eel":"ti = -time*.3;\nx = .5 + .3*sin(ti);\ny = .5 + .3*cos(ti);\n\nti = -time*2.3;\nx = x + .2*sin(ti);\ny = y + .2*cos(ti);"}],"waves":[{"baseVals":{"enabled":1,"samples":41,"usedots":1,"additive":1,"scaling":0.01,"smoothing":0,"g":0},"init_eqs_str":"a.t8=1;a.t1=a.q5;","frame_eqs_str":"","point_eqs_str":"a.x=.001*rand(1001);a.y=.001*rand(1001);a.g=.5*above(.001*rand(1001),.9);a.b=0;a.r=0;","init_eqs_eel":"t8 = 1;\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\ny = rand(1001)*.001;\n\n//r = rand(1001)*.001;\ng=above(rand(1001)*.001,.9)*.5;\nb = 0;\nr = 0;\n"},{"baseVals":{"samples":61,"additive":1,"scaling":0.0124,"smoothing":0,"b":0,"enabled":0},"init_eqs_str":"t8 = 1;\nt1 = q5;","frame_eqs_str":"","point_eqs_str":"x = (sample-.5)*.02 + .2;\ny = .5;\nr = 1;\ng = 1;\nb = 1;","init_eqs_eel":"t8 = 1;\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = (sample-.5)*.02 + .2;\ny = .5;\nr = 1;\ng = 1;\nb = 1;"},{"baseVals":{"samples":31,"usedots":1,"thick":1,"scaling":0.01303,"smoothing":0,"enabled":0},"init_eqs_str":"t8 = 1;\nt1 = q5;","frame_eqs_str":"t1 = q5;\nt2 = q4;\nt3 = q6;","point_eqs_str":"t8 = -t8;\nd1 = 0.15 + t8*0.01 - value1*0.1*(t8+1);\ndir1 = t2;\ndir2 = t2*0.5 + t1*3/2 - t3*3;\ndir3 = sample*asin(1)*4 + t3 - t2*5/6 + t1*3/2;\n\nx = 0.5 + sin(dir1)*0.1 + sin(dir2)*0.05 + sin(dir3)*d1;\ny = 0.5 + cos(dir1)*0.1 + cos(dir2)*0.05 + cos(dir3)*d1;\ny = (y-0.5)*1.2 + 0.5;","init_eqs_eel":"t8 = 1;\nt1 = q5;","frame_eqs_eel":"t1 = q5;\nt2 = q4;\nt3 = q6;","point_eqs_eel":"t8 = -t8;\nd1 = 0.15 + t8*0.01 - value1*0.1*(t8+1);\ndir1 = t2;\ndir2 = t2*0.5 + t1*3/2 - t3*3;\ndir3 = sample*asin(1)*4 + t3 - t2*5/6 + t1*3/2;\n\nx = 0.5 + sin(dir1)*0.1 + sin(dir2)*0.05 + sin(dir3)*d1;\ny = 0.5 + cos(dir1)*0.1 + cos(dir2)*0.05 + cos(dir3)*d1;\ny = (y-0.5)*1.2 + 0.5;"},{"baseVals":{"samples":511,"sep":4,"thick":1,"additive":1,"scaling":0.02345,"smoothing":0,"a":0.99,"enabled":0},"init_eqs_str":"t2 = 0;\nt3 = 0;\nt4 = 0;\nab = 1;","frame_eqs_str":"t1 = q4*0.75;\nt2 = q5*0.75;\nt3 = q6*0.75;\nt4 = q4*0.75;\nt5 = q5*0.75;\nt6 = q6*0.75;\nt8 = 1;","point_eqs_str":"\npi = asin(1);\nn = 80;\nt8 = -t8;\nrd = 0.075+0.02*(t8+1)/2;\nxx = sin(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\nyy = cos(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\nzz = sin(sample*pi*n)*rd;\n\nd = sqrt( xx*xx + yy*yy + zz*zz)*0.004;\nd1 = 1;\nxx = xx*d1;\nyy = yy*d1;\nzz = zz*d1;\n\n\n\n\nw1 = d*t4;\nw2 = d*t5;\nw3 = d*t6;\n\ns1 = sin(t1*1+w1);\ns2 = sin(t2*1+w2);\ns3 = sin(t3*1+w3);\nc1 = cos(t1*1+w1);\nc2 = cos(t2*1+w2);\nc3 = cos(t3*1+w3);\n\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\n\na = 0.5;\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\nx = 0.5 + zoom*x1;\ny = 0.5 + zoom*y1;\n\npi3 = 3.1415*2*0.3333;\nt = -z*2 - time*0.8;//sample*pi*4-0*time +t4*3;\nc=2;\nr = sin(t)*c;\n\ng = sin(t+pi3)*c;\n\nb = sin(t-pi3)*c;\n\nj = 0.71;\n//r = 0.5+xx*j;\n//g = 0.5+yy*j;\n//b = 0.5+zz*j;\n\nr = if(above(r,1),1,r);\nr = if(below(r,0),0,r);\ng = if(above(g,1),1,g);\ng = if(below(g,0),0,g);\nb = if(above(b,1),1,b);\nb = if(below(b,0),0,b);\n\na = sigmoid(-z,7)+0.;\n","init_eqs_eel":"t2 = 0;\nt3 = 0;\nt4 = 0;\nab = 1;","frame_eqs_eel":"t1 = q4*0.75;\nt2 = q5*0.75;\nt3 = q6*0.75;\nt4 = q4*0.75;\nt5 = q5*0.75;\nt6 = q6*0.75;\nt8 = 1;","point_eqs_eel":"\npi = asin(1);\nn = 80;\nt8 = -t8;\nrd = 0.075+0.02*(t8+1)/2;\nxx = sin(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\nyy = cos(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\nzz = sin(sample*pi*n)*rd;\n\nd = sqrt( xx*xx + yy*yy + zz*zz)*0.004;\nd1 = 1;\nxx = xx*d1;\nyy = yy*d1;\nzz = zz*d1;\n\n\n\n\nw1 = d*t4;\nw2 = d*t5;\nw3 = d*t6;\n\ns1 = sin(t1*1+w1);\ns2 = sin(t2*1+w2);\ns3 = sin(t3*1+w3);\nc1 = cos(t1*1+w1);\nc2 = cos(t2*1+w2);\nc3 = cos(t3*1+w3);\n\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\n\na = 0.5;\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\nx = 0.5 + zoom*x1;\ny = 0.5 + zoom*y1;\n\npi3 = 3.1415*2*0.3333;\nt = -z*2 - time*0.8;//sample*pi*4-0*time +t4*3;\nc=2;\nr = sin(t)*c;\n\ng = sin(t+pi3)*c;\n\nb = sin(t-pi3)*c;\n\nj = 0.71;\n//r = 0.5+xx*j;\n//g = 0.5+yy*j;\n//b = 0.5+zz*j;\n\nr = if(above(r,1),1,r);\nr = if(below(r,0),0,r);\ng = if(above(g,1),1,g);\ng = if(below(g,0),0,g);\nb = if(above(b,1),1,b);\nb = if(below(b,0),0,b);\n\na = sigmoid(-z,7)+0.;\n"}],"init_eqs_str":"a.lbbtime=0;a.cx1=0;a.sw6=0;a.sw2=0;a.cy1=0;a.beatb=0;a.t1=0;a.sw3=0;a.sw5=0;a.avgbeatrate=0;a.q1=0;a.myx=0;a.avgvol=0;a.ccc=0;a.myy=0;a.ax=0;a.t3=0;a.beatrate=0;a.mrot=0;a.hue=0;a.bool=0;a.ph=0;a[\"const\"]=0;a.beathard=0;a.q4=0;a.lbass=0;a.ay=0;a.mrad=0;a.rawbeatb=0;a.db=0;a.t2=0;a.vol=0;a.mang=0;a.bc=0;a.q2=0;a.h=0;a.sw1=0;a.phase=0;a.q3=0;a.c=0;a.sw4=0;a.cc=0;a.mtime=0;a.avgdb=0;a.db=.01;a.beatrate=1;a.avgbeatrate=2;a.lbbtime=a.time;a.avgdb=.01;a.vol=1;a.avgvol=.2;a.phase=\n0;a.bool=0;a[\"const\"]=.02;a.mtime=1E3+1E3*a.bass_att;a.t1=500+500*a.bass;a.t2=500+500*a.treb;a.t3=500+500*a.mid;","frame_eqs_str":"a.db=(a.bass-a.lbass)*a.fps;a.lbass=a.bass;a.avgdb=.99*a.avgdb+.01*Math.abs(a.db);a.avgvol=.99*a.avgvol+.0033*(a.bass+a.mid+a.treb);a.rawbeatb=above(Math.abs(a.db),a.avgdb*a.avgvol*4);a.beatb=a.rawbeatb*above(a.time-a.lbbtime,.5*a.avgbeatrate);a.beathard=a.beatb*(Math.abs(a.db)-4*a.avgdb);a.beatrate=a.beatb*(a.time-a.lbbtime)+(1-a.beatb)*a.beatrate;a.avgbeatrate=a.beatb*(.9*a.avgbeatrate+.1*a.beatrate)+(1-a.beatb)*a.avgbeatrate;a.lbbtime=a.time*a.beatb+(1-a.beatb)*a.lbbtime;\na.ph=(a.time-a.lbbtime)*div(60,a.avgbeatrate)*a[\"const\"];a.phase=Math.max(Math.min(a.ph,1),0);a[\"const\"]=a[\"const\"]*(1-a.beatb)+a.beatb*(a[\"const\"]+.01*a.bool);a.bool=below(a.phase,.98)*(.99-a.ph)-.5*above(a.phase,.98)*a.ph;a.bc+=a.beatb;a.vol=a.rawbeatb*(Math.abs(a.db)-a.avgdb)*.01;a.avgvol=.999*a.avgvol+.001*a.vol;a.mtime+=Math.min(.5*a.avgvol,.25)*div(60,a.fps);a.decay=1;a.warp=0;a.wrap=1;a.hue=.01*a.mtime+.5*a.phase;a.h=6*(a.hue-Math.floor(a.hue));a.sw1=below(a.h,1);a.sw2=(1-a.sw1)*below(a.h,\n2);a.sw3=(1-a.sw1)*(1-a.sw2)*below(a.h,3);a.sw4=(1-a.sw1)*(1-a.sw2)*(1-a.sw3)*below(a.h,4);a.sw6=above(a.h,5);a.sw5=(1-a.sw1)*(1-a.sw2)*(1-a.sw3)*(1-a.sw4)*(1-a.sw6);a.ob_r=a.sw1+a.sw2*(2-a.h)+a.sw5*(a.h-4)+a.sw6;a.ob_g=a.sw1*a.h+a.sw2+a.sw3+a.sw4*(4-a.h);a.ob_b=a.sw3*(a.h-2)+a.sw4+a.sw5+a.sw6*(6-a.h);a.t1+=Math.min(a.avgvol*a.bass_att*.5,.25)*div(60,a.fps);a.t2+=Math.min(a.avgvol*a.treb_att*.5,.25)*div(60,a.fps);a.t3+=Math.min(a.avgvol*a.mid_att*.5,.25)*div(60,a.fps);a.monitor=a.avgvol;a.q1=a.mtime;\na.q2=a.t1;a.q3=a.t2;a.q4=a.t3;a.cx=.5*Math.sin(.01*a.q2)+.5;a.cy=.5*Math.cos(.01*a.q3)+.5;a.rot=15*Math.sin(.01*a.q2-.01*a.q3)+103;","pixel_eqs_str":"a.c=Math.sin(.1*a.q2);a.cc=Math.sin(.1*a.q3);a.ccc=Math.sin(.1*a.q4);a.cx1=.5+.3*a.ccc;a.cy1=.5+.4*a.cc;a.myx=a.cx1-a.x;a.myy=a.cy1-(1-a.y);a.mrad=pow(a.myx*a.myx+a.myy*a.myy,.5);a.mang=Math.asin(div(Math.abs(a.myy),a.mrad));a.ax=a.mang;a.ay=a.mang;a.mrot=.1*(1-a.mrad)*Math.sin(.01*a.q1+.1*a.q2);a.dx=sign(a.myy)*Math.sin(a.ax)*a.mrot;a.dy=sign(a.myx)*Math.cos(a.ay)*a.mrot;a.cx1=.5+.3*a.cc;a.cy1=.5+.25*a.c+.25*a.ccc;a.myx=a.cx1-a.x;a.myy=a.cy1-(1-a.y);a.mrad=pow(a.myx*a.myx+\na.myy*a.myy,.5);a.mang=Math.asin(div(Math.abs(a.myy),a.mrad));a.ax=a.mang;a.ay=a.mang;a.mrot=.1*(1-a.mrad)*Math.sin(.02*a.q3+.3*a.q1);a.dx-=sign(a.myy)*Math.sin(a.ax)*a.mrot;a.dy-=sign(a.myx)*Math.cos(a.ay)*a.mrot;","init_eqs_eel":"db=.01;\nbeatrate=1;\navgbeatrate=2;\nlbbtime=time;\navgdb=.01;\nvol=1;\navgvol=.2;\nphase=0;\nbool=0;\nconst=.02;\n\nmtime=1000+bass_att*1000;\nt1=500+bass*500;\nt2=500+treb*500;\nt3=500+mid*500;","frame_eqs_eel":"db=(bass-lbass)*fps;\nlbass=bass;\navgdb=avgdb*.99+abs(db)*.01;\navgvol=avgvol*.99+(bass+mid+treb)*.0033;\n\n//beatdection\nrawbeatb=above(abs(db),avgdb*avgvol*4);\nbeatb=rawbeatb*above(time-lbbtime,avgbeatrate*.5);\nbeathard=beatb*(abs(db)-avgdb*4);\n//beatrate calc\nbeatrate=beatb*(time-lbbtime)+(1-beatb)*beatrate;\navgbeatrate=beatb*(avgbeatrate*.9+beatrate*.1)+(1-beatb)*avgbeatrate;\nlbbtime=time*beatb+(1-beatb)*lbbtime;\n\nph=(time-lbbtime)*(60/avgbeatrate)*const;\nphase=max(min( ph, 1 ),0);\n\n//const=beatb*( bool*(const-.001)+(1-bool)*(const+.001) ) + (1-beatb)*const;\nconst=const*(1-beatb)+beatb*( const+ (.01*bool) );\n\nbool=below(phase,.98)*(.99-ph)-above(phase,.98)*(ph*.5);\n\nbc=bc+beatb;\n\nvol=(rawbeatb*(abs(db)-(avgdb))*.01);\navgvol=avgvol*.999+vol*.001;\n\nmtime=mtime+min(avgvol*.5,.25)*(60/fps);\n\ndecay=1;\nwarp=0;\nwrap=1;\n\n\n// This is the version you should use...\n// ----------- start copying -----------\nhue=(mtime*.01+phase*.5); // change this\nh=6*(hue-int(hue));\nsw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);\nsw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);\nob_r=sw1+sw2*(2-h)+sw5*(h-4)+sw6;  // resulting Red value, assign it to q1\nob_g=sw1*h+sw2+sw3+sw4*(4-h);      // resulting Green value, assign it to q2\nob_b=sw3*(h-2)+sw4+sw5+sw6*(6-h);  // resulting Blue value, assign it to q3\n// ----------- end ----------------\n\n\nt1=t1+min(avgvol*bass_att*.5,.25)*(60/fps);\nt2=t2+min(avgvol*treb_att*.5,.25)*(60/fps);\nt3=t3+min(avgvol*mid_att*.5,.25)*(60/fps);\nmonitor=avgvol;\nq1=mtime;\nq2=t1;\nq3=t2;\nq4=t3;\n\ncx=sin(q2*.01)*.5+.5;\ncy=cos(q3*.01)*.5+.5;\nrot=sin(q2*.01-(q3*.01))*15+103;","pixel_eqs_eel":"c=sin(q2*.1);\ncc=sin(q3*.1);\nccc=sin(q4*.1);\ncx1=.5+ccc*.3;\ncy1=.5+cc*.4;\n\nmyx=(cx1-x);\nmyy=(cy1-(1-y));\nmrad=pow( myx*myx + myy*myy , .5);\nmang=asin( abs(myy)/(mrad) );\n\nax=mang;\nay=mang;\n\nmrot=.1*(1-mrad)*sin(q1*.01+q2*.1);\n\ndx= sign(myy)*sin(ax)*mrot;\ndy= sign(myx)*(cos(ay)*mrot);\n\n\n\ncx1=.5+cc*.3;\ncy1=.5+c*.25+ccc*.25;\n\nmyx=(cx1-x);\nmyy=(cy1-(1-y));\nmrad=pow( myx*myx + myy*myy , .5);\nmang=asin( abs(myy)/(mrad) );\n\nax=mang;\nay=mang;\n\nmrot=.1*(1-mrad)*sin(q3*.02+q1*.3);\n\ndx= dx - sign(myy)*sin(ax)*mrot;\ndy= dy - sign(myx)*(cos(ay)*mrot);","warp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\n   * 0.01))).xyz + ((\n    (texture (sampler_noise_lq, ((uv_orig * 4.0) + rand_frame.xy)) * 2.0)\n   - 1.0) * 0.02).xyz);\n  float vec_y_2;\n  vec_y_2 = (uv_orig.y - 0.5);\n  float vec_x_3;\n  vec_x_3 = (uv_orig.x - 0.5);\n  float tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = (min (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0) / max (abs(\n    (vec_y_2 / vec_x_3)\n  ), 1.0));\n  float tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\n  tmpvar_6 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\n  tmpvar_6 = (tmpvar_6 + (float(\n    (abs((vec_y_2 / vec_x_3)) > 1.0)\n  ) * (\n    (tmpvar_6 * -2.0)\n   + 1.570796)));\n  tmpvar_4 = (tmpvar_6 * sign((vec_y_2 / vec_x_3)));\n  if ((abs(vec_x_3) > (1e-08 * abs(vec_y_2)))) {\n    if ((vec_x_3 < 0.0)) {\n      if ((vec_y_2 >= 0.0)) {\n        tmpvar_4 += 3.141593;\n      } else {\n        tmpvar_4 = (tmpvar_4 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_4 = (sign(vec_y_2) * 1.570796);\n  };\n  ret_1 = (ret_1 + (cos(\n    ((tmpvar_4 * 17.0) + (time * 12.0))\n  ) * 0.15));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 0.0;\n  tmpvar_2.xyz = ret_1;\n  vec2 tmpvar_3;\n  tmpvar_3.x = (1.0 - uv.x);\n  tmpvar_3.y = uv.y;\n  ret_1 = max (tmpvar_2, texture (sampler_main, tmpvar_3)).xyz;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\n    // PAINTERLY EFFECT:\n    float2 uv2 = uv;\n    const float mipbias = 0;\n    float2 delta2 = texsize.zw*float2(1,1);\n    float3 blurry_color = tex2D( sampler_main, uv2 + delta2 ).xyz;\n    uv2.xy += (blurry_color.xy-0.37) * 0.01;\n\n    // sample previous frame\n    ret = tex2D( sampler_main, uv2 ).xyz;\n\n    ret += (tex2D(sampler_noise_lq, uv_orig*4 + rand_frame.xy)*2-1)*0.02;\n\n    float ang2 = atan2(uv_orig.y-0.5,uv_orig.x-0.5);\n    ret += (  cos(ang2*17 + time*12 + lum(ret)*0) )*0.15;\n\n    // darken over time\n    //ret -= 0.004;    \n}","comp_hlsl":"// to access a texture on disk: make a sampler.  This example loads \"lichen.{tga/jpg/etc}\".\nsampler2D sampler_fw_lichen;  // _FW = filtering + wrap; _PC = point sampling + edge clamp; etc.\nfloat4    texsize_lichen;     // auto-binds; .xy = (w,h); .zw = (1/w,1/h)\n\n\nshader_body      \n\n\n\n{\n    ret = tex2D(sampler_main, uv).xyz;\n    ret = max(ret, tex2D(sampler_main, float2(1-uv.x,uv.y)));\n    ret *= 1.00; //old gamma effect\n    \n}"}