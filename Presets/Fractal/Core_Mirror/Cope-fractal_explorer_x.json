{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.6081,"warp":0.01,"sy":0.9999,"ob_size":0,"ob_r":1,"ob_g":0.05,"ob_b":0.1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0,"b1x":0.5},"shapes":[{"baseVals":{"sides":54,"textured":1,"rad":0.5427,"tex_ang":2.51327,"tex_zoom":1.3476,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":34,"textured":1,"rad":0.2704,"tex_zoom":1.34785,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":34,"rad":0.24486,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.tb=0;a.tg=0;a.q12=0;a.wzoom=0;a.q13=0;a.tr=0;a.q6=0;a.q1=0;a.q5=0;a.bass_thresh=0;a.count=0;a.q11=0;a.q10=0;a.ry=0;a.q4=0;a.rx=0;a.tx=0;a.vol=0;a.q2=0;a.q3=0;a.q7=0;a.ty=0;a.rb=0;a.q20=0;a.mtime=0;","frame_eqs_str":"a.wzoom=.18*Math.sin(a.time);a.q3=a.wzoom;a.q1=.8-.3*Math.sin(1.3*-a.time);a.q2=.8-.3*Math.cos(-a.time);a.vol=.1*(9*a.vol+.333333*(a.bass_att+a.mid_att+a.treb_att));a.q20=a.vol;a.mtime+=.05*a.vol;a.rx=-.5+.3*Math.sin(.21*a.mtime);a.ry=-.5+.3*Math.sin(.14*a.mtime);a.q4=a.rx;a.q5=a.ry;a.monitor=a.q5;a.tx=.2*Math.sin(.24*a.mtime);a.ty=.2*Math.sin(.24*a.mtime);a.q6=a.tx;a.q7=a.ty;a.tr=.5+.4*(.6*Math.sin(.64*a.mtime)+.4*Math.sin(.32*a.mtime));a.tb=.5+.4*(.6*Math.sin(.24*-a.mtime)+\n.4*Math.sin(.72*a.mtime));a.tg=.5+.4*(.6*Math.sin(.42*a.mtime)+.4*Math.cos(.5*a.mtime));a.q11=a.tr;a.q12=a.tg;a.q13=a.rb;a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.96*(a.bass_thresh-1.3)+1.3);a.count=1*equal(a.bass_thresh,2)+(1-equal(a.bass_thresh,2))*a.count;a.count-=.02*above(a.count,.02);a.q10=a.count;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"wzoom = 0.18*sin(time);\nq3=wzoom;\nq1 = 0.8 - 0.3*sin(-time*1.3);\nq2 = 0.8 - 0.3*cos(-time);\n\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\nq20 = vol;\n\nmtime = mtime+vol*0.05;\nrx = -0.5+0.3*sin(mtime*0.21);\nry = -0.5+0.3*sin(mtime*0.14);\nq4=rx;\nq5=ry;\nmonitor=q5;\ntx = 0.2*sin(mtime*0.24);\nty = 0.2*sin(mtime*0.24);\nq6=tx;\nq7=ty;\ntr = 0.5 + 0.4*(0.6*sin(mtime*0.64) + 0.4*sin(mtime*0.32));\ntb = 0.5 + 0.4*(0.6*sin(-mtime*0.24) + 0.4*sin(mtime*0.72));\ntg = 0.5 + 0.4*(0.6*sin(mtime*0.42) + 0.4*cos(mtime*0.50));\nq11=tr;\nq12=tg;\nq13=rb;\n\nbass_thresh = above(bass_att,bass_thresh)*2 + \n    (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\ncount = equal(bass_thresh, 2)*1 + (1-equal(bass_thresh, 2))*count;\ncount = count - above(count, 0.02)*0.02;\nq10=count;","pixel_eqs_eel":"","warp":"uniform sampler2D sampler_grad16;\n shader_body { \n  vec2 uv1_2;\n  vec2 c_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5.x = q4;\n  tmpvar_5.y = q5;\n  c_3 = tmpvar_5;\n  uv1_2 = (uv - vec2(0.5, 0.5));\n  for (int n_1 = 0; n_1 < 4; n_1++) {\n    vec2 tmpvar_6;\n    tmpvar_6 = (uv1_2 + uv1_2);\n    float tmpvar_7;\n    tmpvar_7 = sqrt(((tmpvar_6.x * tmpvar_6.x) + (tmpvar_6.y * tmpvar_6.y)));\n    float tmpvar_8;\n    float tmpvar_9;\n    tmpvar_9 = (min (abs(\n      (tmpvar_6.y / tmpvar_6.x)\n    ), 1.0) / max (abs(\n      (tmpvar_6.y / tmpvar_6.x)\n    ), 1.0));\n    float tmpvar_10;\n    tmpvar_10 = (tmpvar_9 * tmpvar_9);\n    tmpvar_10 = (((\n      ((((\n        ((((-0.01213232 * tmpvar_10) + 0.05368138) * tmpvar_10) - 0.1173503)\n       * tmpvar_10) + 0.1938925) * tmpvar_10) - 0.3326756)\n     * tmpvar_10) + 0.9999793) * tmpvar_9);\n    tmpvar_10 = (tmpvar_10 + (float(\n      (abs((tmpvar_6.y / tmpvar_6.x)) > 1.0)\n    ) * (\n      (tmpvar_10 * -2.0)\n     + 1.570796)));\n    tmpvar_8 = (tmpvar_10 * sign((tmpvar_6.y / tmpvar_6.x)));\n    if ((abs(tmpvar_6.x) > (1e-08 * abs(tmpvar_6.y)))) {\n      if ((tmpvar_6.x < 0.0)) {\n        if ((tmpvar_6.y >= 0.0)) {\n          tmpvar_8 += 3.141593;\n        } else {\n          tmpvar_8 = (tmpvar_8 - 3.141593);\n        };\n      };\n    } else {\n      tmpvar_8 = (sign(tmpvar_6.y) * 1.570796);\n    };\n    vec2 tmpvar_11;\n    tmpvar_11.x = (pow (tmpvar_7, -4.0) * cos((tmpvar_8 * -4.0)));\n    tmpvar_11.y = (pow (tmpvar_7, -4.0) * sin((tmpvar_8 * -4.0)));\n    uv1_2 = (tmpvar_11 + c_3);\n  };\n  float tmpvar_12;\n  tmpvar_12 = dot (uv1_2, uv1_2);\n  vec3 tmpvar_13;\n  tmpvar_13.x = (1.0 - q11);\n  tmpvar_13.y = (1.0 - q12);\n  tmpvar_13.z = (1.0 - q13);\n  ret_4 = ((mix (tmpvar_13, ret_4, vec3(\n    clamp ((tmpvar_12 - 2.0), 0.0, 1.0)\n  )) * vec3(clamp (\n    (tmpvar_12 - 1.0)\n  , 0.0, 1.0))) + texture (sampler_grad16, uv1_2).xyz);\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_4;\n  ret = tmpvar_14.xyz;\n }","comp":" shader_body { \n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n }","warp_hlsl":"sampler sampler_grad16;\n\nfloat2 cmul(float2 mul1, float2 mul2) {\n  float2 mul = float2(mul1.x*mul2.x - mul1.y*mul2.y, mul1.y*mul2.x + mul1.x*mul2.y);\n  return mul;\n}\nfloat2 cdiv(float2 div1, float2 div2) {\n  float2 div = float2( (div1.x*div2.x + div1.y*div2.y)/(div2.x*div2.x + div2.y*div2.y),\n  (div1.y*div2.x + div1.x*div2.y)/(div2.x*div2.x + div2.y*div2.y) );\n  return div;\n}\nfloat2 cpow(float2 base, float ex) {\n   float moduz = sqrt(base.x*base.x + base.y*base.y);\n   float thetaz = atan2(base.y, base.x);\n   float2 pow = float2(pow(moduz, ex)*cos(thetaz*ex), pow(moduz, ex)*sin(thetaz*ex));\n   return pow;\n }\n float2 cexp(float2 base, float2 ex) {\n   float moduz = sqrt(base.x*base.x + base.y*base.y);\n   float thetaz = atan2(base.y, base.x);\n   float mp = pow(moduz, ex.x)*exp(-ex.y*thetaz);\n   float2 sol = mp*float2(cos(ex.y*log(moduz) + ex.x*thetaz), sin(ex.y*log(moduz) + ex.x*thetaz));\n   return sol;\n }\n\nshader_body \n{ \n// F(Z) = (Z+Z)^-4 + C\n    float2 zoom = lerp(1,1,q20);\n    float2 c = float2(q4, q5);\n    //float2 c = float2(0.4, 0.3);\n\n    float2 uv1 = (float2(uv.x-0.5, uv.y-0.5))*zoom;\n\n    int n = 0;\n    \n    for(n=0; n<4; n++) {\n      float2 tmp = uv1 + uv1;\n      uv1 = cpow(tmp,-4) + c;\n    }\n\n    float domain = dot(uv1,uv1);\n    ret = lerp(float3(1-q11, 1-q12, 1-q13), ret, saturate(domain-2));\n    ret = lerp(float3(0,0,0), ret, saturate(domain-1));\n    float3 reta = tex2D(sampler_grad16, uv1); \n    ret += reta;\n}\n ","comp_hlsl":"shader_body\n{\nfloat3 reta = tex2D(sampler_main, uv);\nret = reta;\nret*=1;\n\n}"}