{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_thick":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":0.12,"warp":0.08081,"sx":1.0201,"sy":1.0201,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"rad":0.34,"ang":0.53,"r":0.56,"g":0.36,"r2":0.9,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + time;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + time;"},{"baseVals":{"sides":3,"rad":0.41,"r":0,"g":0.8,"b":0.7,"g2":0.4,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang - time*.333;","init_eqs_eel":"","frame_eqs_eel":"ang = ang - time*.333;"},{"baseVals":{"sides":3,"rad":0.21,"r":0.84,"r2":1,"g2":0.58,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + time*4;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + time*4;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.2*a.bass*Math.sin(20*a.sample*a.time*a.treb);a.y=.5+.2*a.bass*Math.cos(20*a.sample*a.time*a.treb);a.r=1+.5*Math.sin(.1*a.sample+10*a.time*a.bass);a.g=1+.5*Math.sin(2*a.sample+50*a.time*a.treb);a.b=1+.5*Math.sin(5*a.sample+20*a.time*a.mid);a.a=a.r;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));\ny = .5 + (bass*.2)*cos(sample*2*(time*10*treb));\nr = 1 + .5*sin(sample*.10+(time*10*bass));\ng = 1 + .5*sin(sample*2+(time*50*treb));\nb = 1 + .5*sin(sample*5+(time*20*mid));\na = r;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.ring=0;a.it=0;a.q1=0;a.q5=0;a.mss=0;a.radm=0;a.musictime=0;a.ms=0;a.q4=0;a.rd=0;a.mod=0;a.tm=0;a.vol=0;a.mv_x=64;a.mv_y=48;a.nut=0;a.stp=0;a.stq=0;a.rtp=0;a.rtq=0;a.wvr=0;a.decay=0;a.dcsp=0;","frame_eqs_str":"a.decay=.99;a.ms=.15*Math.sin(.6*a.time);a.mss+=.001*a.ms;a.q1=a.ms;a.vol=.65*(a.bass+a.mid+a.treb);a.musictime+=a.vol;a.q4=.2*Math.sin(.02*a.musictime);a.q5=.2*Math.sin(.01*a.musictime);a.dx=.01*Math.sin(.1*a.musictime);a.dy=.01*Math.cos(.069*a.musictime);","pixel_eqs_str":"a.rd=sqrt(sqr(.7*(a.x-.5-a.q4))+sqr(1.2*(a.y-.5+a.q5)));a.cx=.5+a.q4;a.cy=.5-a.q5;a.tm=a.time*a.rad;a.it=.3*Math.sin(.2*a.tm);a.radm=.5*a.rad;a.mod=Math.sin(div(a.ang,a.rd));a.mod*=a.mod;a.zoom=1-.15*(1-a.rd)+a.ring;","init_eqs_eel":"mv_x=64;mv_y=48;\nnut=0;\nstp=0;stq=0;\nrtp=0;rtq=0;\nwvr=0;\ndecay=0;\ndcsp=0","frame_eqs_eel":"decay=0.99;\n//zoom=1.008;\nms=sin(time*0.6)*0.15;\nmss=mss+ms*0.001;\nq1=ms;\n\n\n//rot=sin(time)*0.01;\n\n//echo_zoom=1 + ( sin(time*0.6)*0.5+0.5 )*3;\n\nvol= (bass+mid+treb)*0.65;\n\n\n\nmusictime=musictime+vol;\nq4=sin(musictime*0.02)*0.2;\nq5=sin(musictime*0.01)*0.2;\n\ndx=sin(musictime*0.1)*0.01;\ndy=cos(musictime*0.069)*0.01;","pixel_eqs_eel":"rd=sqrt( sqr( (x-0.5-q4)*0.7) + sqr( (y-0.5+q5)*1.2 ) );\ncx=0.5+q4;\ncy=0.5-q5;\ntm=time*rad;\nit = 0.3*sin(tm*0.2);\nradm = rad*0.5;\n//rot = 0.02*sin((radm+it)*30)/((rad+0.1)*((sin(time)*0.4+0.5)*20));\nmod = sin(ang/rd);\nmod = mod*mod;\n//ring=pow(tan(rd*3+time),3)*0.01;\nzoom = 1- (1-rd)*0.15 + ring;","warp":"uniform sampler2D sampler_grad16;\n shader_body { \n  vec2 uv1_2;\n  vec2 c_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5.x = q4;\n  tmpvar_5.y = q5;\n  c_3 = tmpvar_5;\n  uv1_2 = ((uv - vec2(0.5, 0.5)) * vec2(mix (2.0, 2.5, q20)));\n  for (int n_1 = 0; n_1 < 5; n_1++) {\n    float tmpvar_6;\n    tmpvar_6 = sqrt(((uv1_2.x * uv1_2.x) + (uv1_2.y * uv1_2.y)));\n    float tmpvar_7;\n    float tmpvar_8;\n    tmpvar_8 = (min (abs(\n      (uv1_2.y / uv1_2.x)\n    ), 1.0) / max (abs(\n      (uv1_2.y / uv1_2.x)\n    ), 1.0));\n    float tmpvar_9;\n    tmpvar_9 = (tmpvar_8 * tmpvar_8);\n    tmpvar_9 = (((\n      ((((\n        ((((-0.01213232 * tmpvar_9) + 0.05368138) * tmpvar_9) - 0.1173503)\n       * tmpvar_9) + 0.1938925) * tmpvar_9) - 0.3326756)\n     * tmpvar_9) + 0.9999793) * tmpvar_8);\n    tmpvar_9 = (tmpvar_9 + (float(\n      (abs((uv1_2.y / uv1_2.x)) > 1.0)\n    ) * (\n      (tmpvar_9 * -2.0)\n     + 1.570796)));\n    tmpvar_7 = (tmpvar_9 * sign((uv1_2.y / uv1_2.x)));\n    if ((abs(uv1_2.x) > (1e-08 * abs(uv1_2.y)))) {\n      if ((uv1_2.x < 0.0)) {\n        if ((uv1_2.y >= 0.0)) {\n          tmpvar_7 += 3.141593;\n        } else {\n          tmpvar_7 = (tmpvar_7 - 3.141593);\n        };\n      };\n    } else {\n      tmpvar_7 = (sign(uv1_2.y) * 1.570796);\n    };\n    vec2 tmpvar_10;\n    tmpvar_10.x = (pow (tmpvar_6, -4.0) * cos((tmpvar_7 * -4.0)));\n    tmpvar_10.y = (pow (tmpvar_6, -4.0) * sin((tmpvar_7 * -4.0)));\n    vec2 tmpvar_11;\n    tmpvar_11 = (tmpvar_10 + c_3);\n    float tmpvar_12;\n    tmpvar_12 = sqrt(((tmpvar_11.x * tmpvar_11.x) + (tmpvar_11.y * tmpvar_11.y)));\n    float tmpvar_13;\n    float tmpvar_14;\n    tmpvar_14 = (min (abs(\n      (tmpvar_11.y / tmpvar_11.x)\n    ), 1.0) / max (abs(\n      (tmpvar_11.y / tmpvar_11.x)\n    ), 1.0));\n    float tmpvar_15;\n    tmpvar_15 = (tmpvar_14 * tmpvar_14);\n    tmpvar_15 = (((\n      ((((\n        ((((-0.01213232 * tmpvar_15) + 0.05368138) * tmpvar_15) - 0.1173503)\n       * tmpvar_15) + 0.1938925) * tmpvar_15) - 0.3326756)\n     * tmpvar_15) + 0.9999793) * tmpvar_14);\n    tmpvar_15 = (tmpvar_15 + (float(\n      (abs((tmpvar_11.y / tmpvar_11.x)) > 1.0)\n    ) * (\n      (tmpvar_15 * -2.0)\n     + 1.570796)));\n    tmpvar_13 = (tmpvar_15 * sign((tmpvar_11.y / tmpvar_11.x)));\n    if ((abs(tmpvar_11.x) > (1e-08 * abs(tmpvar_11.y)))) {\n      if ((tmpvar_11.x < 0.0)) {\n        if ((tmpvar_11.y >= 0.0)) {\n          tmpvar_13 += 3.141593;\n        } else {\n          tmpvar_13 = (tmpvar_13 - 3.141593);\n        };\n      };\n    } else {\n      tmpvar_13 = (sign(tmpvar_11.y) * 1.570796);\n    };\n    vec2 tmpvar_16;\n    tmpvar_16.x = (pow (tmpvar_12, 0.5) * cos((tmpvar_13 * 0.5)));\n    tmpvar_16.y = (pow (tmpvar_12, 0.5) * sin((tmpvar_13 * 0.5)));\n    uv1_2 = tmpvar_16;\n  };\n  float tmpvar_17;\n  tmpvar_17 = dot (uv1_2, uv1_2);\n  vec3 tmpvar_18;\n  tmpvar_18.x = (1.0 - q11);\n  tmpvar_18.y = (1.0 - q12);\n  tmpvar_18.z = (1.0 - q13);\n  ret_4 = ((mix (tmpvar_18, ret_4, vec3(\n    clamp ((tmpvar_17 - 2.0), 0.0, 1.0)\n  )) * vec3(clamp (\n    (tmpvar_17 - 1.0)\n  , 0.0, 1.0))) + texture (sampler_grad16, uv1_2).xyz);\n  vec4 tmpvar_19;\n  tmpvar_19.w = 1.0;\n  tmpvar_19.xyz = ret_4;\n  ret = tmpvar_19.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.0;\n  tmpvar_6.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  tmpvar_6.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\n    ((uv_1.xyy + (tmpvar_6 * 0.5)) * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  uv_1 = (uv_1 - (tmpvar_8 * 0.04));\n  ret_2 = (abs((\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n  )) - (roam_sin.wzy * roam_cos.xyz));\n  ret_2 = (ret_2 * (dot (tmpvar_7, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  ret_2 = (1.0 - pow (ret_2, vec3(0.5, 0.5, 0.5)));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"sampler sampler_grad16;\n\nfloat2 cmul(float2 mul1, float2 mul2) {\n  float2 mul = float2(mul1.x*mul2.x - mul1.y*mul2.y, mul1.y*mul2.x + mul1.x*mul2.y);\n  return mul;\n}\nfloat2 cdiv(float2 div1, float2 div2) {\n  float2 div = float2( (div1.x*div2.x + div1.y*div2.y)/(div2.x*div2.x + div2.y*div2.y),\n  (div1.y*div2.x + div1.x*div2.y)/(div2.x*div2.x + div2.y*div2.y) );\n  return div;\n}\nfloat2 cpow(float2 base, float ex) {\n   float moduz = sqrt(base.x*base.x + base.y*base.y);\n   float thetaz = atan2(base.y, base.x);\n   float2 pow = float2(pow(moduz, ex)*cos(thetaz*ex), pow(moduz, ex)*sin(thetaz*ex));\n   return pow;\n }\n float2 cexp(float2 base, float2 ex) {\n   float moduz = sqrt(base.x*base.x + base.y*base.y);\n   float thetaz = atan2(base.y, base.x);\n   float mp = pow(moduz, ex.x)*exp(-ex.y*thetaz);\n   float2 sol = mp*float2(cos(ex.y*log(moduz) + ex.x*thetaz), sin(ex.y*log(moduz) + ex.x*thetaz));\n   return sol;\n }\n\nshader_body \n{ \n// F(Z) = sqrt(Z^-4+C)\n    float2 zoom = lerp(2,2.5,q20);\n    float2 c = float2(q4, q5);\n    float2 uv1 = (float2(uv.x-0.5, uv.y-0.5))*zoom;\n\n    int n = 0;\n    \n    for(n=0; n<5; n++) {\n      float2 tmp = cpow(uv1,-4)+c;\n      uv1 = cpow(tmp,0.5);\n    }\n\n    float domain = dot(uv1,uv1);\n    ret = lerp(float3(1-q11, 1-q12, 1-q13), ret, saturate(domain-2));\n    ret = lerp(float3(0,0,0), ret, saturate(domain-1));\n    float3 reta = tex2D(sampler_grad16, uv1); \n    ret += reta;\n}\n ","comp_hlsl":"shader_body\n{\n\nuv = 0.5 + (uv-0.5)*0.98;\n    float2 d = texsize.zw*4;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nuv -= float2(lum(dx),lum(dy))*0.04;\nret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));\nret-=roam_sin.wzy*roam_cos;\nret *= lum(noise)*3; \nret = pow(ret,0.5);\nret=1-ret;\n}"}