{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"zoom":0.9901,"warp":0.01,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"rad":0.34,"ang":0.53,"r":0.56,"g":0.36,"r2":0.9,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + time;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + time;"},{"baseVals":{"sides":3,"rad":0.41,"r":0,"g":0.8,"b":0.7,"g2":0.4,"b2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang - time*.333;","init_eqs_eel":"","frame_eqs_eel":"ang = ang - time*.333;"},{"baseVals":{"sides":3,"rad":0.21,"r":0.84,"r2":1,"g2":0.58,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"ang = ang + time*4;","init_eqs_eel":"","frame_eqs_eel":"ang = ang + time*4;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"a.x=.5+.2*a.bass*Math.sin(20*a.sample*a.time*a.treb);a.y=.5+.2*a.bass*Math.cos(20*a.sample*a.time*a.treb);a.r=1+.5*Math.sin(.1*a.sample+10*a.time*a.bass);a.g=1+.5*Math.sin(2*a.sample+50*a.time*a.treb);a.b=1+.5*Math.sin(5*a.sample+20*a.time*a.mid);a.a=a.r;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));\ny = .5 + (bass*.2)*cos(sample*2*(time*10*treb));\nr = 1 + .5*sin(sample*.10+(time*10*bass));\ng = 1 + .5*sin(sample*2+(time*50*treb));\nb = 1 + .5*sin(sample*5+(time*20*mid));\na = r;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.d=0;a.y3=0;a.y1=0;a.xx=0;a.q25=0;a.q12=0;a.x1=0;a.q22=0;a.q21=0;a.vx3=0;a.q6=0;a.dt=0;a.q1=0;a.q5=0;a.q9=0;a.v=0;a.vx4=0;a.mm=0;a.tt=0;a.bm=0;a.x3=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.xx2=0;a.q4=0;a.yy1=0;a.vy4=0;a.q26=0;a.x4=0;a.mt=0;a.r=0;a.x2=0;a.mx=0;a.mn=0;a.vy2=0;a.y2=0;a.bb=0;a.q2=0;a.q27=0;a.vx2=0;a.q3=0;a.yy=0;a.y4=0;a.q7=0;a.vy3=0;a.xx1=0;a.q8=0;a.x1=.9;a.y1=.5;a.x2=.5;a.y2=.5;a.x3=.5;a.y3=.5;a.x4=.5;a.y4=.5;","frame_eqs_str":"a.zoom=1;a.warp=0;a.wave_a=0;a.xx1=.9*a.xx1+.01*a.bass;a.xx2=.9*a.xx2+.01*a.treb;a.yy1=.94*a.yy1+.0075*(a.treb+a.bass);a.x1=.5+2*(a.xx1-a.xx2);a.y1=.4+1.5*a.yy1;a.dt=div(.03,a.fps);a.vx2=a.vx2*(1-2*a.dt)+10*a.dt*(a.x1+a.x3-2*a.x2);a.vy2=a.vy2*(1-2*a.dt)+a.dt*(10*(a.y1+a.y3-2*a.y2)-.5);a.vx3=a.vx3*(1-2*a.dt)+10*a.dt*(a.x2+a.x4-2*a.x3);a.vy3=a.vy3*(1-2*a.dt)+a.dt*(10*(a.y2+a.y4-2*a.y3)-.5);a.vx4=a.vx4*(1-2*a.dt)+10*a.dt*(a.x3-a.x4);a.vy4=a.vy4*(1-2*a.dt)+a.dt*(10*(a.y3-a.y4)-\n.5);a.x2+=a.vx2;a.y2+=a.vy2;a.x3+=a.vx3;a.y3+=a.vy3;a.x4+=a.vx4;a.y4+=a.vy4;a.vx2=.00001<Math.abs(above(a.x2,0))?a.vx2:.5*Math.abs(a.vx2);a.vx2=.00001<Math.abs(below(a.x2,1))?a.vx2:.5*-Math.abs(a.vx2);a.vx3=.00001<Math.abs(above(a.x3,0))?a.vx3:.5*Math.abs(a.vx3);a.vx3=.00001<Math.abs(below(a.x3,1))?a.vx3:.5*-Math.abs(a.vx3);a.vx4=.00001<Math.abs(above(a.x4,0))?a.vx4:.5*Math.abs(a.vx4);a.vx4=.00001<Math.abs(below(a.x4,1))?a.vx4:.5*-Math.abs(a.vx4);a.vy2=.00001<Math.abs(above(a.y2,0))?a.vy2:.5*Math.abs(a.vy2);\na.vy2=.00001<Math.abs(below(a.y2,1))?a.vy2:.5*-Math.abs(a.vy2);a.vy3=.00001<Math.abs(above(a.y3,0))?a.vy3:.5*Math.abs(a.vy3);a.vy3=.00001<Math.abs(below(a.y3,1))?a.vy3:.5*-Math.abs(a.vy3);a.vy4=.00001<Math.abs(above(a.y4,0))?a.vy4:.5*Math.abs(a.vy4);a.vy4=.00001<Math.abs(below(a.y4,1))?a.vy4:.5*-Math.abs(a.vy4);a.q1=a.x1;a.q2=a.x2;a.q3=a.x3;a.q4=a.x4;a.q5=a.y1;a.q6=a.y2;a.q7=a.y3;a.q8=a.y4;a.q9=div(1,a.aspectx);a.q10=div(1,a.aspecty);a.q11=a.aspectx;a.q12=a.aspecty;a.bb=.99*a.bb+.02*a.bass;a.mm=.99*\na.mm+.02*a.mid;a.tt=.99*a.tt+.02*a.treb;a.mx=Math.max(Math.max(a.bb,a.mm),a.tt);a.mn=Math.min(Math.min(a.bb,a.mm),a.tt);a.ob_r=div(a.bb-a.mn,a.mx-a.mn);a.ob_b=div(a.mm-a.mn,a.mx-a.mn);a.ob_g=div(a.tt-a.mn,a.mx-a.mn);a.v=div(.4,a.fps);a.bm+=(a.ob_r-a.ob_b)*a.v;a.mt+=(a.ob_b-a.ob_g)*a.v;a.q21=.5;a.q22=0;a.q23=-.5;a.q24=0;a.q25=div(.5,Math.asin(1));a.q26=-a.bm;a.q27=a.mt;","pixel_eqs_str":"a.x=.5+(a.x-.5)*a.q11;a.y=.5+(a.y-.5)*a.q12;a.xx=a.q4;a.yy=1-a.q8;a.dx=0;a.dy=0;a.d=sqrt((a.x-a.xx)*(a.x-a.xx)+(a.y-a.yy)*(a.y-a.yy));a.r=.11;a.v=20;a.dx=a.v*(Math.sin(a.y-a.yy)*(a.d-a.r)-(a.x-a.xx)*(a.d-div(a.r,2)))*(1-sigmoid(a.d-a.r,100));a.dy=-a.v*(Math.sin(a.x-a.xx)*(a.d-a.r)+(a.y-a.yy)*(a.d-div(a.r,2)))*(1-sigmoid(a.d-a.r,100));","init_eqs_eel":"x1 = 0.9;\ny1 = 0.5;\n\nx2 = 0.5; y2 = 0.5;\nx3 = 0.5; y3 = 0.5;\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"zoom = 1;\nwarp = 0;\nwave_a = 0;\n\n// elastic thread code\n\nxx1 = xx1*0.9 + (bass)*0.01;\nxx2 = xx2*0.9 + (treb)*0.01;\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\nx1 = 0.5 + (xx1-xx2)*2;\ny1 = 0.4 + yy1*1.5;\ndt = 0.03/fps;\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\nx2 = x2 + vx2; y2 = y2 + vy2;\nx3 = x3 + vx3; y3 = y3 + vy3;\nx4 = x4 + vx4; y4 = y4 + vy4;\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\nq9 = 1/aspectx;\nq10 = 1/aspecty;\nq11 = aspectx;\nq12 = aspecty;\n\n// coloring borders\nbb = bb*0.99 + bass*0.02;\nmm = mm*0.99 + mid*0.02;\ntt = tt*0.99 + treb*0.02;\n\nmx = max(max(bb,mm),tt);\nmn = min(min(bb,mm),tt);\n\nob_r = (bb-mn)/(mx-mn);\nob_b = (mm-mn)/(mx-mn);\nob_g = (tt-mn)/(mx-mn);\n\nv = 0.4/fps;\nbm = bm + (ob_r-ob_b)*v;\nmt = mt + (ob_b-ob_g)*v;\n\n// coordinates spiral 1\nq21 = 0.5; // X\nq22 = 0; // Y\n\n// coordinates spiral 2\nq23 = -0.5;\nq24 = 0;\n\nq25 = 0.5/asin(1); // pi/4\n\nq26 = -bm; // rotation\nq27 = mt; // growth","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q11;\ny = 0.5 + (y-0.5)*q12;\nxx = q4;\nyy = 1-q8;\n\ndx = 0; dy = 0;\n\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\n\nr = 0.11;\nv = 20;\ndx = (v*(sin(y-yy)*(d-r)-(x-xx)*(d-r/2)))*(1.00-sigmoid(d-r,100));\ndy = (-v*(sin(x-xx)*(d-r)+(y-yy)*(d-r/2)))*(1.00-sigmoid(d-r,100));","warp":"uniform sampler2D sampler_grad16;\n shader_body { \n  vec2 uv1_2;\n  vec2 c_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5.x = q4;\n  tmpvar_5.y = q5;\n  c_3 = tmpvar_5;\n  uv1_2 = ((uv - vec2(0.5, 0.5)) * vec2(mix (2.0, 2.5, q20)));\n  for (int n_1 = 0; n_1 < 5; n_1++) {\n    float tmpvar_6;\n    tmpvar_6 = sqrt(((uv1_2.x * uv1_2.x) + (uv1_2.y * uv1_2.y)));\n    float tmpvar_7;\n    float tmpvar_8;\n    tmpvar_8 = (min (abs(\n      (uv1_2.y / uv1_2.x)\n    ), 1.0) / max (abs(\n      (uv1_2.y / uv1_2.x)\n    ), 1.0));\n    float tmpvar_9;\n    tmpvar_9 = (tmpvar_8 * tmpvar_8);\n    tmpvar_9 = (((\n      ((((\n        ((((-0.01213232 * tmpvar_9) + 0.05368138) * tmpvar_9) - 0.1173503)\n       * tmpvar_9) + 0.1938925) * tmpvar_9) - 0.3326756)\n     * tmpvar_9) + 0.9999793) * tmpvar_8);\n    tmpvar_9 = (tmpvar_9 + (float(\n      (abs((uv1_2.y / uv1_2.x)) > 1.0)\n    ) * (\n      (tmpvar_9 * -2.0)\n     + 1.570796)));\n    tmpvar_7 = (tmpvar_9 * sign((uv1_2.y / uv1_2.x)));\n    if ((abs(uv1_2.x) > (1e-08 * abs(uv1_2.y)))) {\n      if ((uv1_2.x < 0.0)) {\n        if ((uv1_2.y >= 0.0)) {\n          tmpvar_7 += 3.141593;\n        } else {\n          tmpvar_7 = (tmpvar_7 - 3.141593);\n        };\n      };\n    } else {\n      tmpvar_7 = (sign(uv1_2.y) * 1.570796);\n    };\n    vec2 tmpvar_10;\n    tmpvar_10.x = (pow (tmpvar_6, -4.0) * cos((tmpvar_7 * -4.0)));\n    tmpvar_10.y = (pow (tmpvar_6, -4.0) * sin((tmpvar_7 * -4.0)));\n    vec2 tmpvar_11;\n    tmpvar_11 = (tmpvar_10 + c_3);\n    float tmpvar_12;\n    tmpvar_12 = sqrt(((tmpvar_11.x * tmpvar_11.x) + (tmpvar_11.y * tmpvar_11.y)));\n    float tmpvar_13;\n    float tmpvar_14;\n    tmpvar_14 = (min (abs(\n      (tmpvar_11.y / tmpvar_11.x)\n    ), 1.0) / max (abs(\n      (tmpvar_11.y / tmpvar_11.x)\n    ), 1.0));\n    float tmpvar_15;\n    tmpvar_15 = (tmpvar_14 * tmpvar_14);\n    tmpvar_15 = (((\n      ((((\n        ((((-0.01213232 * tmpvar_15) + 0.05368138) * tmpvar_15) - 0.1173503)\n       * tmpvar_15) + 0.1938925) * tmpvar_15) - 0.3326756)\n     * tmpvar_15) + 0.9999793) * tmpvar_14);\n    tmpvar_15 = (tmpvar_15 + (float(\n      (abs((tmpvar_11.y / tmpvar_11.x)) > 1.0)\n    ) * (\n      (tmpvar_15 * -2.0)\n     + 1.570796)));\n    tmpvar_13 = (tmpvar_15 * sign((tmpvar_11.y / tmpvar_11.x)));\n    if ((abs(tmpvar_11.x) > (1e-08 * abs(tmpvar_11.y)))) {\n      if ((tmpvar_11.x < 0.0)) {\n        if ((tmpvar_11.y >= 0.0)) {\n          tmpvar_13 += 3.141593;\n        } else {\n          tmpvar_13 = (tmpvar_13 - 3.141593);\n        };\n      };\n    } else {\n      tmpvar_13 = (sign(tmpvar_11.y) * 1.570796);\n    };\n    vec2 tmpvar_16;\n    tmpvar_16.x = (pow (tmpvar_12, 0.5) * cos((tmpvar_13 * 0.5)));\n    tmpvar_16.y = (pow (tmpvar_12, 0.5) * sin((tmpvar_13 * 0.5)));\n    uv1_2 = tmpvar_16;\n  };\n  float tmpvar_17;\n  tmpvar_17 = dot (uv1_2, uv1_2);\n  vec3 tmpvar_18;\n  tmpvar_18.x = (1.0 - q11);\n  tmpvar_18.y = (1.0 - q12);\n  tmpvar_18.z = (1.0 - q13);\n  ret_4 = ((mix (tmpvar_18, ret_4, vec3(\n    clamp ((tmpvar_17 - 2.0), 0.0, 1.0)\n  )) * vec3(clamp (\n    (tmpvar_17 - 1.0)\n  , 0.0, 1.0))) + texture (sampler_grad16, uv1_2).xyz);\n  vec4 tmpvar_19;\n  tmpvar_19.w = 1.0;\n  tmpvar_19.xyz = ret_4;\n  ret = tmpvar_19.xyz;\n }","comp":" shader_body { \n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.0;\n  tmpvar_6.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  tmpvar_6.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\n    ((uv_1.xyy + (tmpvar_6 * 0.5)) * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\n  uv_1 = (uv_1 - (tmpvar_8 * 0.04));\n  ret_2 = (abs((\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\n   - \n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\n  )) - (roam_sin.wzy * roam_cos.xyz));\n  ret_2 = (ret_2 * (dot (tmpvar_7, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\n  ret_2 = (1.0 - pow (ret_2, vec3(0.5, 0.5, 0.5)));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n }","warp_hlsl":"sampler sampler_grad16;\n\nfloat2 cmul(float2 mul1, float2 mul2) {\n  float2 mul = float2(mul1.x*mul2.x - mul1.y*mul2.y, mul1.y*mul2.x + mul1.x*mul2.y);\n  return mul;\n}\nfloat2 cdiv(float2 div1, float2 div2) {\n  float2 div = float2( (div1.x*div2.x + div1.y*div2.y)/(div2.x*div2.x + div2.y*div2.y),\n  (div1.y*div2.x + div1.x*div2.y)/(div2.x*div2.x + div2.y*div2.y) );\n  return div;\n}\nfloat2 cpow(float2 base, float ex) {\n   float moduz = sqrt(base.x*base.x + base.y*base.y);\n   float thetaz = atan2(base.y, base.x);\n   float2 pow = float2(pow(moduz, ex)*cos(thetaz*ex), pow(moduz, ex)*sin(thetaz*ex));\n   return pow;\n }\n float2 cexp(float2 base, float2 ex) {\n   float moduz = sqrt(base.x*base.x + base.y*base.y);\n   float thetaz = atan2(base.y, base.x);\n   float mp = pow(moduz, ex.x)*exp(-ex.y*thetaz);\n   float2 sol = mp*float2(cos(ex.y*log(moduz) + ex.x*thetaz), sin(ex.y*log(moduz) + ex.x*thetaz));\n   return sol;\n }\n\nshader_body \n{ \n// F(Z) = sqrt(Z^-4+C)\n    float2 zoom = lerp(2,2.5,q20);\n    float2 c = float2(q4, q5);\n    float2 uv1 = (float2(uv.x-0.5, uv.y-0.5))*zoom;\n\n    int n = 0;\n    \n    for(n=0; n<5; n++) {\n      float2 tmp = cpow(uv1,-4)+c;\n      uv1 = cpow(tmp,0.5);\n    }\n\n    float domain = dot(uv1,uv1);\n    ret = lerp(float3(1-q11, 1-q12, 1-q13), ret, saturate(domain-2));\n    ret = lerp(float3(0,0,0), ret, saturate(domain-1));\n    float3 reta = tex2D(sampler_grad16, uv1); \n    ret += reta;\n}\n ","comp_hlsl":"shader_body\n{\n\nuv = 0.5 + (uv-0.5)*0.98;\n    float2 d = texsize.zw*4;\n    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );\n\nfloat4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05\n                                        + time*float3(0,0,1)*0.2 );\nuv -= float2(lum(dx),lum(dy))*0.04;\nret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));\nret-=roam_sin.wzy*roam_cos;\nret *= lum(noise)*3; \nret = pow(ret,0.5);\nret=1-ret;\n}"}