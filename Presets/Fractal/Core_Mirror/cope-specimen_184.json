{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":1.0003,"warp":0.01,"sy":1.1046,"ob_size":0.003,"ob_r":0.05,"ob_g":0.05,"ob_b":0.1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0,"b1x":0.5},"shapes":[{"baseVals":{"enabled":1,"sides":54,"textured":1,"rad":0.20068,"tex_ang":2.51327,"tex_zoom":4.91382,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":34,"textured":1,"x":0.24,"y":0.8,"rad":0.11046,"tex_zoom":4.44841,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.wzoom=0;a.q6=0;a.q1=0;a.q5=0;a.ry=0;a.q4=0;a.rx=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.wzoom=.18*Math.sin(a.time);a.q3=a.wzoom;a.q1=.5+.3*Math.sin(2*-a.time);a.q2=.5+.3*Math.cos(-a.time);a.ob_r+=.05*(.6*Math.sin(1.3*a.time)+.4*Math.sin(.98*a.time));a.ob_b+=.05*(.6*Math.sin(1.1*a.time)+.4*Math.sin(.78*a.time));a.ob_g+=.05*(.6*Math.sin(1.2*a.time)+.4*Math.sin(.6*a.time));a.rx=.5+.25*Math.sin(.25*a.time);a.ry=.5+.25*Math.sin(.5*a.time);a.q4=a.rx;a.q5=a.ry;a.q6=1+Math.sin(.5*a.time);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//Disturbed - Deify\n\nwzoom = 0.18*sin(time);\nq3=wzoom;\nq1 = 0.5 + 0.3*sin(-time*2);\nq2 = 0.5 + 0.3*cos(-time);\n\nob_r = ob_r + 0.05*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\nob_b = ob_b + 0.05*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\nob_g = ob_g + 0.05*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\n\nrx = 0.5+0.25*sin(time*0.25);\nry = 0.5+0.25*sin(time*0.5);\nq4=rx;\nq5=ry;\n\nq6 = 1+1*sin(time*0.5);","pixel_eqs_eel":"","warp":" shader_body { \n  vec2 uxy_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q4;\n  tmpvar_2.y = q5;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - vec2(0.5, 0.5)) * vec2(2.0, 2.0));\n  uxy_1 = tmpvar_3;\n  float tmpvar_4;\n  tmpvar_4 = sqrt(((tmpvar_3.x * tmpvar_3.x) + (tmpvar_3.y * tmpvar_3.y)));\n  float tmpvar_5;\n  float tmpvar_6;\n  tmpvar_6 = (min (abs(\n    (tmpvar_3.y / tmpvar_3.x)\n  ), 1.0) / max (abs(\n    (tmpvar_3.y / tmpvar_3.x)\n  ), 1.0));\n  float tmpvar_7;\n  tmpvar_7 = (tmpvar_6 * tmpvar_6);\n  tmpvar_7 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_7) + 0.05368138) * tmpvar_7) - 0.1173503)\n     * tmpvar_7) + 0.1938925) * tmpvar_7) - 0.3326756)\n   * tmpvar_7) + 0.9999793) * tmpvar_6);\n  tmpvar_7 = (tmpvar_7 + (float(\n    (abs((tmpvar_3.y / tmpvar_3.x)) > 1.0)\n  ) * (\n    (tmpvar_7 * -2.0)\n   + 1.570796)));\n  tmpvar_5 = (tmpvar_7 * sign((tmpvar_3.y / tmpvar_3.x)));\n  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.y)))) {\n    if ((tmpvar_3.x < 0.0)) {\n      if ((tmpvar_3.y >= 0.0)) {\n        tmpvar_5 += 3.141593;\n      } else {\n        tmpvar_5 = (tmpvar_5 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_5 = (sign(tmpvar_3.y) * 1.570796);\n  };\n  float tmpvar_8;\n  tmpvar_8 = (tmpvar_5 * 1.91);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (pow (tmpvar_4, 3.14159) * cos((tmpvar_8 * 3.14159)));\n  tmpvar_9.y = (pow (tmpvar_4, 3.14159) * sin((tmpvar_8 * 3.14159)));\n  uxy_1 = (tmpvar_9 + tmpvar_2);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = (texture (sampler_fc_main, uxy_1).xyz + 0.01);\n  ret = tmpvar_10.xyz;\n }","comp":" shader_body { \n  vec3 plastic_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 8.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6.x = q1;\n  tmpvar_6.y = q2;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.x;\n  tmpvar_7.y = tmpvar_5.x;\n  vec2 x_8;\n  x_8 = ((uv - (tmpvar_7 * 4.0)) - tmpvar_6);\n  plastic_1.x = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_8, x_8)), 0.5)\n  )));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_4.y;\n  tmpvar_9.y = tmpvar_5.y;\n  vec2 x_10;\n  x_10 = ((uv - (tmpvar_9 * 4.0)) - tmpvar_6);\n  plastic_1.y = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_10, x_10)), 0.5)\n  )));\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_4.z;\n  tmpvar_11.y = tmpvar_5.z;\n  vec2 x_12;\n  x_12 = ((uv - (tmpvar_11 * 4.0)) - tmpvar_6);\n  plastic_1.z = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_12, x_12)), 0.5)\n  )));\n  ret_2 = (plastic_1 * texture (sampler_main, uv).xyz);\n  ret_2 = (ret_2 * 3.0);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_2;\n  ret = tmpvar_13.xyz;\n }","warp_hlsl":"shader_body\n{\n\n    //based on the equation F(Z) = Z ^ pi + C\n        \n    float2 zoom = 2;\n    float2 c = float2(q4, q5);\n    \n    float2 uxy = (float2(uv.x-0.5, uv.y-0.5))*zoom;\n\n    //change *1 to control h and v size of the fractal without screwing it up\n    float moduz = sqrt(uxy.x*uxy.x*1 + uxy.y*uxy.y*1);\n\n    //change *1.91 to control how many \"arms\" it has\n    //most values won't line up at 2pi, try *2 for instance, then try *2.55\n    float thetaz = atan2(uxy.y, uxy.x)*1.91;\n\n\n    uxy = (float2((pow(moduz, 3.14159)*cos(thetaz*3.14159)), (pow(moduz, 3.14159)*sin(thetaz*3.14159))))+c;\n    \n \n    ret = tex2D(sampler_fc_main, uxy).xyz +0.01;    \n        \n}","comp_hlsl":"shader_body \n{ \n    //flexi's bump map effect\n\n    float2 d = texsize.zw*8; \n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) ); \n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) ); \n    float2 light_pos = float2(q1,q2); \n    float3 col = float3(4,4,4); \n    float c = 4; \n    float dd = 16; \n    float3 plastic; \n    plastic.x = col.x/(1+dd*pow(length( uv - float2(dx.x,dy.x)*c - light_pos),0.5)); \n    plastic.y = col.y/(1+dd*pow(length( uv - float2(dx.y,dy.y)*c - light_pos),0.5)); \n    plastic.z = col.z/(1+dd*pow(length( uv - float2(dx.z,dy.z)*c - light_pos),0.5)); \n\n    ret = plastic*GetPixel(uv); \n    ret *= 3;\n}"}