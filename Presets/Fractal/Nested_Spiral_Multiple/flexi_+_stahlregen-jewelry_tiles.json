{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":6,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"wave_a":2.803,"wave_scale":0.06,"wave_mystery":1,"warpanimspeed":0.01,"warpscale":1.47,"zoomexp":1.34784,"zoom":0.99816,"warp":0.01,"sx":1.00183,"wave_x":1,"wave_y":1,"ob_size":0.005,"ob_r":0.51,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0.11},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":1.12226,"tex_zoom":0.69327,"g":1,"b":1,"a":0.9,"r2":1,"b2":1,"a2":0.9,"border_a":0},"init_eqs_str":"a.q1=0;a.q2=0;","frame_eqs_str":"a.ang=a.ang-.75*a.q1+.75*a.q2;","init_eqs_eel":"","frame_eqs_eel":"ang = ang - 0.75*q1 + 0.75*q2;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.dt=0;a.q1=0;a.dm=0;a.mm=0;a.tt=0;a.db=0;a.bb=0;a.q2=0;a.q3=0;","frame_eqs_str":"a.zoom=1;a.db=.75*a.db+.25*a.bass_att;a.bb+=.1*a.db;a.dt=.75*a.dt+.25*a.treb_att;a.tt+=.1*a.dt;a.dm=.75*a.dm+.25*a.mid_att;a.mm+=.1*a.dm;a.q2=Math.sin(.225*a.bb+a.time-.25*a.tt);a.q3=Math.cos(.25*a.bb+a.time-.235*a.tt);a.q1=.2+.9*Math.sin(.25*a.mm+a.time-.125*a.tt-.125*a.bb);","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//decay=.1+abs(sin(time*.3)*.8);\nzoom=1;\ndb = .75 * db + .25 * bass_att;\nbb = bb + .1 * db;\ndt = .75 * dt + .25 * treb_att;\ntt = tt + .1 * dt;\ndm = .75 * dm + .25 * mid_att;\nmm = mm + .1 * dm;\n \nq2 = sin(.225*bb+time-.25*tt);\nq3 = cos(.25*bb+time-.235*tt);\nq1 = .2+.9*sin(.25*mm+time-.125*tt-.125*bb);","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.z;\n  tmpvar_5.y = tmpvar_4.z;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\n  ret_1.z = (((texture (sampler_main, tmpvar_6).z - \n    ((texture (sampler_main, tmpvar_6).z - ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3).z) * 0.02)\n  ) - 0.008) + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\n  ).xyz - 0.5) * 0.1)).x;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.x;\n  tmpvar_7.y = tmpvar_4.x;\n  vec2 tmpvar_8;\n  tmpvar_8 = ((0.5 + (uv - 0.5)) - (tmpvar_7 * texsize.zw));\n  ret_1.x = texture (sampler_main, tmpvar_8).x;\n  ret_1.x = (ret_1.x + ((\n    (ret_1.x - ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3))\n  .x * 0.4) + 0.006));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.x;\n  tmpvar_9.y = tmpvar_4.x;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_3.y;\n  tmpvar_10.y = tmpvar_4.y;\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_3.z;\n  tmpvar_11.y = tmpvar_4.z;\n  ret_1.y = texture (sampler_fc_main, (((uv - \n    ((tmpvar_9 * texsize.zw) * 8.0)\n  ) + (\n    (tmpvar_10 * texsize.zw)\n   * 4.0)) + ((tmpvar_11 * texsize.zw) * 8.0))).y;\n  ret_1.y = (ret_1.y * (1.0 + (ret_1.x * 0.1)));\n  ret_1.y = (ret_1.y - (0.004 + (\n    clamp (ret_1.z, 0.0, 1.0)\n   * 0.04)));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_1;\n  ret = tmpvar_12.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.42;\n  tmpvar_2.y = q1;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv_orig - 0.5) * vec2(2.0, 2.0));\n  vec2 tmpvar_4;\n  tmpvar_4.x = ((tmpvar_3.x * tmpvar_3.x) - (tmpvar_3.y * tmpvar_3.y));\n  tmpvar_4.y = ((2.0 * tmpvar_3.x) * tmpvar_3.y);\n  vec2 tmpvar_5;\n  tmpvar_5 = (1.0 - abs((\n    (fract(((tmpvar_4 + tmpvar_2) * 0.5)) * 2.0)\n   - 1.0)));\n  ret_1 = (((\n    ((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2)\n  .x * \n    clamp ((1.0 - texture (sampler_main, tmpvar_5).z), 0.0, 1.0)\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\n  ret_1 = (mix (ret_1, (\n    pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0))\n   * 1.4), vec3((\n    (texture (sampler_main, tmpvar_5).x * 0.8)\n   + \n    ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1)\n  .x))) * clamp ((1.0 - \n    (((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1).y * 4.0)\n  ), 0.0, 1.0));\n  vec3 tmpvar_6;\n  vec3 tmpvar_7;\n  tmpvar_7 = pow (hue_shader, vec3(8.0, 8.0, 8.0));\n  tmpvar_6 = mix (mix (ret_1, vec3(1.0, 1.0, 1.0), (\n    (tmpvar_7 * texture (sampler_main, clamp (tmpvar_5, 0.0, 1.0)).z)\n   * 1.2)), (tmpvar_7.zxy * 1.8), texture (sampler_main, tmpvar_5).yyy);\n  ret_1 = tmpvar_6;\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = tmpvar_6;\n  ret = tmpvar_8.xyz;\n }","warp_hlsl":"shader_body\n{\n    float2 d = texsize.zw * 8;\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1 + rand_frame.xy;\n\nfloat2 uv_blue = lerp(uv_orig,uv,1) + float2(dx.z,dy.z)*texsize.zw*4;\nret.z = GetPixel(uv_blue).z  - (GetPixel(uv_blue).z - GetBlur3(uv_blue).z)*0.02 - 0.008\n            +(tex2D(sampler_noise_lq, dither_uv).xyz-0.5) *0.1;\n\n\nfloat2 uv_red = 0.5 + (uv-0.5) - float2(0,0)*texsize.zw - float2(dx.x,dy.x)*texsize.zw;\nret.x = tex2D( sampler_main, uv_red ).x;\nret.x += (ret.x - GetBlur3(uv_red)).x*0.4 + 0.006;\n\n\nfloat2 uv_green = lerp(uv_orig,uv,1) - float2(dx.x,dy.x)*texsize.zw*8\n                                       + float2(dx.y,dy.y)*texsize.zw*4\n                                       + float2(dx.z,dy.z)*texsize.zw*8;\nret.y = tex2d(sampler_fc_main,uv_green).y;\nret.y *= 1 + ret.x*0.1;\nret.y -= 0.004 + saturate(ret.z)*0.04;\n}","comp_hlsl":"shader_body\n{\nfloat2 uv_o = uv;\n\nuv = (uv*(1.5+.8*q1))-.4*q1-.75;\nuv = float2((uv.x)*q2 - (uv.y) * q3,(uv.x)* q3 + (uv.y) * q2)*1.75;\n\nuv = 1.0 - abs( frac( uv * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code\n\nuv = 1.0 - abs( frac( (uv+.5*rad) * .5125 ) * 2.0 - 1.0 ); // Eo.S' mirror code\n\nfloat2 zoom = 2;\nfloat2 c = float2(.42,q1);\n\n float2 my_uv2 = (uv_orig-0.5)*zoom;\n my_uv2 = float2(my_uv2.x*my_uv2.x - my_uv2.y*my_uv2.y, 2*my_uv2.x*my_uv2.y) + c;\nuv = my_uv2;\n\nfloat2 uv2 =  1.0 - abs( frac( (uv) * .5 ) * 2.0 - 1.0 ); // Eo.S' mirror code\nuv = uv2;\n\nfloat2 uv_x = uv2;\nret = GetBlur2(uv_x).x*saturate(1-GetPixel(uv).z)*pow(hue_shader.yxz,8)*3;\nret = lerp(ret,pow(hue_shader.yzx,8)*1.4,GetPixel(uv_x).x*0.8 + GetBlur1(uv_x).x);\nret *= saturate(1 - GetBlur1(uv).y*4);\nret = lerp(ret,1,pow(hue_shader,8)*GetPixel(saturate(uv)).z*1.2);\nret = lerp(ret,pow(hue_shader,8).zxy*1.8,GetPixel(uv).y);\n//ret = GetPixel(uv_o);\n}"}