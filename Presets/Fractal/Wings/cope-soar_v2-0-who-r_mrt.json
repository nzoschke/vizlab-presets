{"version":2,"baseVals":{"rating":5,"gammaadj":1.32,"decay":0.95,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"wave_dots":1,"wave_thick":1,"wrap":0,"brighten":1,"darken":1,"wave_a":0.711,"wave_scale":0.024,"wave_smoothing":0.54,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.0788,"zoom":0.9415,"rot":-0.04,"warp":0.01,"wave_r":0.29,"wave_g":0.46,"wave_b":0.73,"wave_y":1,"ob_size":0,"ob_r":0.01,"ob_a":0.1,"ib_size":0.05,"mv_x":32,"mv_y":28.8,"mv_l":0.1,"mv_r":0.4,"mv_g":0.4,"mv_b":0.9,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"thickoutline":1,"textured":1,"num_inst":2,"x":0.4,"rad":0.8079,"ang":6.28319,"tex_ang":1.25664,"tex_zoom":0.3346,"r":0.6,"g":0.6,"b":0.6,"g2":0,"border_a":0},"init_eqs_str":"a.q2=0;a.q6=0;","frame_eqs_str":"a.r+=.3*(.6*Math.sin(1.22*a.time)+.4*Math.sin(.888*a.time));a.g+=.3*(.6*Math.sin(.9*a.time)+.4*Math.sin(1.1*a.time));a.b+=.3*(.6*Math.sin(1.12*a.time)+.4*Math.sin(.98*a.time));a.rad+=.5*equal(a.q2,2);a.y-=.1*a.q6;","init_eqs_eel":"","frame_eqs_eel":"r = r + 0.300*(0.60*sin(1.22*time) + 0.4*sin(0.888*time));\ng = g + 0.300*(0.60*sin(0.90*time) + 0.4*sin(1.100*time));\nb = b + 0.300*(0.60*sin(1.12*time) + 0.4*sin(0.98*time));\n\nrad = rad + equal(q2,2)*0.5;\n\ny = y - 0.1*q6;"},{"baseVals":{"enabled":1,"additive":1,"textured":1,"num_inst":2,"rad":0.33003,"ang":5.6548,"tex_ang":1.2565,"tex_zoom":0.4083,"r":0.6,"g":0.6,"b":0.6,"g2":0,"border_a":0},"init_eqs_str":"a.q2=0;a.q6=0;","frame_eqs_str":"a.r+=.3*(.6*Math.sin(2.52*a.time)+.4*Math.sin(2.588*a.time));a.g+=.3*(.6*Math.sin(2.7*a.time)+.4*Math.sin(2.7*a.time));a.b+=.3*(.6*Math.sin(2.32*a.time)+.4*Math.sin(2.18*a.time));a.rad+=.5*equal(a.q2,2);a.y-=.15*a.q6;","init_eqs_eel":"","frame_eqs_eel":"r = r + 0.300*(0.60*sin(2.52*time) + 0.4*sin(2.588*time));\ng = g + 0.300*(0.60*sin(2.70*time) + 0.4*sin(2.700*time));\nb = b + 0.300*(0.60*sin(2.32*time) + 0.4*sin(2.180*time));\n\nrad = rad + equal(q2,2)*0.5;\n\ny = y - 0.15*q6;\n"},{"baseVals":{"enabled":1,"additive":1,"textured":1,"num_inst":2,"x":0.4,"y":0.4,"rad":0.33,"ang":4.3982,"tex_ang":1.2565,"tex_zoom":0.40836,"r":0.6,"g":0.6,"b":0.6,"g2":0,"border_a":0},"init_eqs_str":"a.q2=0;a.q6=0;","frame_eqs_str":"a.r+=.3*(.6*Math.sin(3.22*a.time)+.4*Math.sin(3.888*a.time));a.g+=.3*(.6*Math.sin(3.9*a.time)+.4*Math.sin(3.1*a.time));a.b+=.3*(.6*Math.sin(3.12*a.time)+.4*Math.sin(3.98*a.time));a.rad+=.5*equal(a.q2,2);a.y-=.1*a.q6;","init_eqs_eel":"","frame_eqs_eel":"r = r + 0.300*(0.60*sin(3.22*time) + 0.4*sin(3.888*time));\ng = g + 0.300*(0.60*sin(3.90*time) + 0.4*sin(3.100*time));\nb = b + 0.300*(0.60*sin(3.12*time) + 0.4*sin(3.980*time));\n\nrad = rad + equal(q2,2)*0.5;\n\ny = y - 0.1*q6;"},{"baseVals":{"enabled":1,"additive":1,"textured":1,"y":0.4,"rad":0.33,"ang":3.7699,"tex_zoom":0.40836,"r":0.6,"g":0.6,"b":0.6,"g2":0,"border_a":0},"init_eqs_str":"a.q2=0;a.q6=0;","frame_eqs_str":"a.r+=.3*(.6*Math.sin(4.22*a.time)+.4*Math.sin(4.888*a.time));a.g+=.3*(.6*Math.sin(4.9*a.time)+.4*Math.sin(4.1*a.time));a.b+=.3*(.6*Math.sin(4.12*a.time)+.4*Math.sin(4.98*a.time));a.rad+=1*equal(a.q2,2);a.y-=.1*a.q6;","init_eqs_eel":"","frame_eqs_eel":"r = r + 0.300*(0.60*sin(4.22*time) + 0.4*sin(4.888*time));\ng = g + 0.300*(0.60*sin(4.90*time) + 0.4*sin(4.100*time));\nb = b + 0.300*(0.60*sin(4.12*time) + 0.4*sin(4.980*time));\n\nrad = rad + equal(q2,2)*1;\n\ny = y - 0.1*q6;\n"}],"waves":[{"baseVals":{"samples":256,"usedots":1,"thick":1,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"y = 0.2 + 0.01*int(value1*50+10);\nx = sample;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"y = 0.2 + 0.01*int(value1*50+10);\nx = sample;"},{"baseVals":{"samples":82,"usedots":1,"thick":1,"scaling":4.02709,"smoothing":0,"a":0.3,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.temp=0;a.q12=0;a.q6=0;a.q1=0;a.bass_thresh=0;a.q11=0;a.vol=0;a.q2=0;a.q3=0;a.q30=0;a.q8=0;a.q8=1;","frame_eqs_str":"a.bass_thresh=2*above(a.bass_att,a.bass_thresh)+(1-above(a.bass_att,a.bass_thresh))*(.91*(a.bass_thresh-1.3)+1.3);a.vol=.1*(9*a.vol+.333333*(a.bass_att+a.mid_att+a.treb_att));a.q1=a.vol;a.q2=a.bass_thresh;a.temp+=1.5*above(a.vol,1.1)+1*below(a.vol,1.1);a.q8=a.temp;a.q3=a.q3+-.5*below(a.vol,1.1)+2*above(a.vol,1.1);a.q3=1;a.cx+=.4*Math.sin(a.q3*Math.sin(div(a.q8,8*a.q3)));a.q6=a.cx;a.q11=.1*(a.bass+a.treb+a.mid);a.q12=1-a.q11;a.q30=2*(a.bass+a.treb+a.mid);","pixel_eqs_str":"a.cy-=Math.cos(a.rad*a.q1*Math.sin(.6*a.time));a.cx+=1.5*Math.sin(a.rad*a.q3*Math.sin(div(a.q8,8*a.q3)));","init_eqs_eel":"q8 = 1;","frame_eqs_eel":"bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.91+1.3);\n\n//ob_r = 0.1 + 0.1*(0.6*sin(vol*time*8) + 0.4*sin(1.2*time));\n//ob_b = 0.1 + 0.1*(0.6*sin(vol*time*8) + 0.4*sin(0.8*time));\n//ob_g = 0.1 + 0.1*(0.6*sin(vol*time*8) + 0.4*sin(1.1*time));\n\n\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\n\nq1 = vol;\nq2 = bass_thresh;\n\ntemp = temp + (above(vol,1.1)*1.5 + (below(vol,1.1)*1));\nq8 = temp;\n\n//cx = cx + 0.4*sin(temp*0.15);\n\n\nq3 = q3 + below(vol,1.1)*(-0.5) + above(vol,1.1)*2;\n\nq3=1; //comment out to get some jerky movement that goes with the beat better\n      //maybe someone can rig up a solution that's not so jerky... =2 is interesting too\n\ncx = cx + 0.4*sin(q3*(sin(q8/(8*q3))));\nq6 = cx;\n\n//30 fps max to avoid crack bird!\nq11=(bass+treb+mid)*.1;\nq12=1-q11;\nq30=(bass+treb+mid)*2;","pixel_eqs_eel":"cy = cy - cos(rad*q1*(sin(time*0.6)));\n\ncx = cx + 1.5*sin(rad*q3*(sin(q8/(8*q3))));","warp":" shader_body { \n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float x_4;\n  x_4 = (tmpvar_3.x * tmpvar_3.y);\n  float tmpvar_5;\n  tmpvar_5 = ((q10 * 24.0) * sqrt((x_4 * x_4)));\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  , vec3(0.32, 0.49, 0.29))));\n  uv_1 = (uv_1 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * normalize(tmpvar_3))\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 200.0));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 6.0)\n   + \n    (rand_frame * 16.0)\n  .xy)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.02))\n   + \n    (0.1 * (vec3((0.1 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * (0.5 * (1.0 + roam_cos)).xyz))\n  ) * 0.99) - 0.025);\n  ret = tmpvar_6.xyz;\n }","comp":" shader_body { \n  vec3 plastic2_1;\n  vec3 plastic_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  uv2_3.y = uv.y;\n  uv2_3.x = (1.0 - uv.x);\n  vec2 tmpvar_5;\n  tmpvar_5 = (texsize.zw * 8.0);\n  vec3 tmpvar_6;\n  tmpvar_6 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_7;\n  tmpvar_7 = (((texture (sampler_blur1, \n    (uv2_3 + (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv2_3 - (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_8;\n  tmpvar_8 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_9;\n  tmpvar_9 = (((texture (sampler_blur1, \n    (uv2_3 + (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv2_3 - (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_10;\n  tmpvar_10.x = q11;\n  tmpvar_10.y = q12;\n  vec2 tmpvar_11;\n  tmpvar_11.x = q11;\n  tmpvar_11.y = q12;\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_6.x;\n  tmpvar_12.y = tmpvar_8.x;\n  vec2 x_13;\n  x_13 = ((uv - (tmpvar_12 * 4.0)) - tmpvar_10);\n  plastic_2.x = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_13, x_13)), 0.5)\n  )));\n  vec2 tmpvar_14;\n  tmpvar_14.x = tmpvar_7.x;\n  tmpvar_14.y = tmpvar_9.x;\n  vec2 x_15;\n  x_15 = ((uv2_3 - (tmpvar_14 * 4.0)) - tmpvar_11);\n  plastic2_1.x = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_15, x_15)), 0.5)\n  )));\n  vec2 tmpvar_16;\n  tmpvar_16.x = tmpvar_6.y;\n  tmpvar_16.y = tmpvar_8.y;\n  vec2 x_17;\n  x_17 = ((uv - (tmpvar_16 * 4.0)) - tmpvar_10);\n  plastic_2.y = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_17, x_17)), 0.5)\n  )));\n  vec2 tmpvar_18;\n  tmpvar_18.x = tmpvar_7.y;\n  tmpvar_18.y = tmpvar_9.y;\n  vec2 x_19;\n  x_19 = ((uv2_3 - (tmpvar_18 * 4.0)) - tmpvar_11);\n  plastic2_1.y = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_19, x_19)), 0.5)\n  )));\n  vec2 tmpvar_20;\n  tmpvar_20.x = tmpvar_6.z;\n  tmpvar_20.y = tmpvar_8.z;\n  vec2 x_21;\n  x_21 = ((uv - (tmpvar_20 * 4.0)) - tmpvar_10);\n  plastic_2.z = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_21, x_21)), 0.5)\n  )));\n  vec2 tmpvar_22;\n  tmpvar_22.x = tmpvar_7.z;\n  tmpvar_22.y = tmpvar_9.z;\n  vec2 x_23;\n  x_23 = ((uv2_3 - (tmpvar_22 * 4.0)) - tmpvar_11);\n  plastic2_1.z = (4.0 / (1.0 + (16.0 * \n    pow (sqrt(dot (x_23, x_23)), 0.5)\n  )));\n  ret_4 = ((plastic_2 * texture (sampler_main, uv).xyz) * 1.5);\n  ret_4 = (ret_4 + ((plastic2_1 * texture (sampler_main, uv2_3).xyz) * 1.5));\n  vec4 tmpvar_24;\n  tmpvar_24.w = 1.0;\n  tmpvar_24.xyz = ret_4;\n  ret = tmpvar_24.xyz;\n }","warp_hlsl":"sampler sampler_worms;\nfloat3 color, mus;\nfloat dx,dy;\nshader_body {\n\n\nfloat2 uv1 = (uv-.5) * aspect.xy;\n\nfloat2 uv6 = uv1;\nfloat z = q10*24*length(((uv1.x)*(uv1.y)));\nfloat2 d = normalize(uv1);\nfloat2 rs = clamp(tan(z)*d,-2,2);\nuv += .01*lum(GetBlur1(uv))*float2 (0,1);\nuv -= rs/200;\n\nuv6 = .4*sin(uv*6+rand_frame*16);\nmus = .1/(length(uv6));\nmus *= .5*(1+roam_cos);\n\nfloat3 blur = GetBlur2(frac(uv));\n\nfloat3 crisp= tex2D(sampler_main,uv);\n\nfloat3 ret1 = crisp - blur*.02 + .1*mus;\n\nq25 = 1;\nret = q25*(ret1*.99-.025) + (1-q25)* GetPixel(uv_orig);\n\n}","comp_hlsl":"shader_body\n{\nfloat2 uv2 = uv;\nuv2.x=1-uv2.x;\n\n    float2 d = texsize.zw*8;\n    float2 d2= texsize.zw*8;\n\n\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d ) - GetBlur1(uv -float2(1,0)*d ) );\n    float3 dx2= ( GetBlur1(uv2+ float2(1,0)*d2) - GetBlur1(uv2-float2(1,0)*d2) );\n\n\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d ) - GetBlur1(uv -float2(0,1)*d ) );\n    float3 dy2= ( GetBlur1(uv2+ float2(0,1)*d2) - GetBlur1(uv2-float2(0,1)*d2) );\n\n\n    float2 light_pos = float2(q11,q12);\n    float2 light_pos2= float2(q11,q12);\n\n\n    float3 col = float3(4,4,4);\n    float3 col2= float3(4,4,4);\n\n\n    float c = 4;\n    float c2= 4;\n\n\n    float dd = 16;\n    float dd2= 16;\n\n\n    float3 plastic;\n    float3 plastic2;\n\n\n    plastic.x =  col.x/(1+dd *pow(length( uv - float2( dx.x, dy.x)*c - light_pos ),0.5));\n    plastic2.x= col2.x/(1+dd2*pow(length( uv2- float2(dx2.x,dy2.x)*c2- light_pos2),0.5));\n\n\n    plastic.y =  col.y/(1+ dd*pow(length( uv  - float2( dx.y, dy.y)*c - light_pos ),0.5));\n    plastic2.y= col2.y/(1+dd2*pow(length( uv2 - float2(dx2.y,dy2.y)*c2- light_pos2),0.5));\n\n\n    plastic.z =  col.z/(1+ dd*pow(length( uv - float2( dx.z, dy.z)*c  - light_pos ),0.5));\n    plastic2.z= col2.z/(1+dd2*pow(length( uv2- float2(dx2.z,dy2.z)*c2 - light_pos2),0.5));\n\n\n    ret = plastic*GetPixel(uv)*1.5;\nfloat3 ret2= plastic2*GetPixel(uv2)*1.5;\n\nret+=ret2;\n\n\n}"}