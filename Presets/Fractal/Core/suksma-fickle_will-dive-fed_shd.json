{"version":2,"baseVals":{"rating":5,"gammaadj":1.399,"decay":1,"echo_zoom":1.488,"echo_alpha":0.3,"wave_mode":5,"wrap":0,"darken":1,"wave_a":0.691,"wave_scale":4.778,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.0101,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.1,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"x":0.37,"rad":100,"ang":3.64425,"tex_ang":0.62832,"r":0,"a":0.15,"g2":0,"a2":1,"border_a":1},"init_eqs_str":"a.t1=0;a.t2=0;a.t1=.01*Math.floor(rand(100));a.t2=.01*Math.floor(rand(100));","frame_eqs_str":"a.ang=a.time*(.3+.1*a.t1);a.rad*=.9+.2*a.t2;a.r=Math.min(1,Math.max(0,a.r+.2*Math.sin(.417*a.time+1)));a.g=Math.min(1,Math.max(0,a.g+.2*Math.sin(.391*a.time+2)));a.b=Math.min(1,Math.max(0,a.b+.2*Math.sin(.432*a.time+4)));a.r2=Math.min(1,Math.max(0,a.r2+.2*Math.sin(.657*a.time+3)));a.g2=Math.min(1,Math.max(0,a.g2+.2*Math.sin(.737*a.time+5)));a.b2=Math.min(1,Math.max(0,a.b2+.2*Math.sin(.884*a.time+6)));","init_eqs_eel":"t1 = int(rand(100))*0.01;\nt2 = int(rand(100))*0.01;","frame_eqs_eel":"ang = time*(0.3 + 0.1*t1);\nrad = rad * (0.9 + 0.2*t2);\nr = min(1,max(0,r + 0.2*sin(time*0.417 + 1)));\ng = min(1,max(0,g + 0.2*sin(time*0.391 + 2)));\nb = min(1,max(0,b + 0.2*sin(time*0.432 + 4)));\nr2 = min(1,max(0,r2 + 0.2*sin(time*0.657 + 3)));\ng2 = min(1,max(0,g2 + 0.2*sin(time*0.737 + 5)));\nb2 = min(1,max(0,b2 + 0.2*sin(time*0.884 + 6)));"},{"baseVals":{"enabled":1,"sides":50,"additive":1,"textured":1,"x":0.37,"rad":0.70653,"ang":3.64425,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.t1=0;a.t2=0;a.q1=0;a.q3=0;a.q2=0;a.t1=.01*Math.floor(rand(100));a.t2=.01*Math.floor(rand(100));","frame_eqs_str":"a.x+=.05*Math.sin(1.05*a.time+3);a.y+=.03*Math.sin(1.29*a.time+1);a.ang=a.time*(.1+.1*a.t1);a.rad*=.9+.2*a.t2;a.r=a.q1;a.g=a.q3;a.b=a.q2;a.r2=Math.min(1,Math.max(0,a.r2+.1*Math.sin(.457*a.time+3)));a.g2=Math.min(1,Math.max(0,a.g2+.1*Math.sin(.437*a.time+5)));a.b2=Math.min(1,Math.max(0,a.b2+.1*Math.sin(.484*a.time+6)));","init_eqs_eel":"t1 = int(rand(100))*0.01;\nt2 = int(rand(100))*0.01;","frame_eqs_eel":"x = x + 0.05*sin(time*1.05+3);\ny = y + 0.03*sin(time*1.29+1);\nang = time*(0.1 + 0.1*t1);\nrad = rad * (0.9 + 0.2*t2);\n//r = min(1,max(0,r + 0.1*sin(time*0.417 + 1)));\n//g = min(1,max(0,g + 0.1*sin(time*0.391 + 2)));\n//b = min(1,max(0,b + 0.1*sin(time*0.432 + 4)));\nr=q1;\ng=q3;\nb=q2;\nr2 = min(1,max(0,r2 + 0.1*sin(time*0.457 + 3)));\ng2 = min(1,max(0,g2 + 0.1*sin(time*0.437 + 5)));\nb2 = min(1,max(0,b2 + 0.1*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":50,"additive":1,"textured":1,"x":0.67,"y":0.43,"rad":0.70653,"ang":4.20974,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"a.t1=0;a.t2=0;a.q3=0;a.q1=0;a.q2=0;a.t1=.01*Math.floor(rand(100));a.t2=.01*Math.floor(rand(100));","frame_eqs_str":"a.x+=.05*Math.sin(.17*a.time);a.y+=.03*Math.sin(.83*a.time);a.ang=a.time*(.2+.1*a.t1);a.rad*=.9+.2*a.t2;a.r=a.q3;a.g=a.q1;a.b=a.q2;a.r2=Math.min(1,Math.max(0,a.r2+.1*Math.sin(.457*a.time+3)));a.g2=Math.min(1,Math.max(0,a.g2+.1*Math.sin(.437*a.time+5)));a.b2=Math.min(1,Math.max(0,a.b2+.1*Math.sin(.484*a.time+6)));","init_eqs_eel":"t1 = int(rand(100))*0.01;\nt2 = int(rand(100))*0.01;","frame_eqs_eel":"x = x + 0.05*sin(time*0.17);\ny = y + 0.03*sin(time*0.83);\nang = time*(0.2 + 0.1*t1);\nrad = rad * (0.9 + 0.2*t2);\nr = q3;\ng = q1;\nb = q2;\n\n//r = min(1,max(0,r + 0.1*sin(time*0.417 + 1)));\n//g = min(1,max(0,g + 0.1*sin(time*0.391 + 2)));\n//b = min(1,max(0,b + 0.1*sin(time*0.432 + 4)));\nr2 = min(1,max(0,r2 + 0.1*sin(time*0.457 + 3)));\ng2 = min(1,max(0,g2 + 0.1*sin(time*0.437 + 5)));\nb2 = min(1,max(0,b2 + 0.1*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.59123,"tex_ang":1.25664,"tex_zoom":1.07408,"g":1,"b":1,"r2":1,"g2":0,"border_a":0},"init_eqs_str":"","frame_eqs_str":"a.x+=.2*Math.sin(.25*a.time);a.y+=.1*Math.sin(.5*a.time+2);","init_eqs_eel":"","frame_eqs_eel":"x = x + 0.2*sin(time*0.25);\ny = y + 0.1*sin(time*0.5+2);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.w=0;a.runtreb=0;a.q25=0;a.q12=0;a.q18=0;a.q22=0;a.q21=0;a.vt=0;a.q13=0;a.q15=0;a.q29=0;a.q6=0;a.dt=0;a.thresh=0;a.q1=0;a.q5=0;a.vb=0;a.q9=0;a.dy_r=0;a.dm=0;a.pi23=0;a.mm=0;a.tt=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.q10=0;a.atime=0;a.q4=0;a.dx_r=0;a.q16=0;a.q26=0;a.t=0;a.runbass=0;a.q19=0;a.db=0;a.q17=0;a.runmids=0;a.bb=0;a.q2=0;a.q27=0;a.q14=0;a.q3=0;a.vvm=0;a.q32=0;a.vvb=0;a.q7=0;a.q28=0;a.vm=0;a.q30=0;a.q20=0;a.vvt=0;a.q8=0;","frame_eqs_str":"a.vb=.95*a.vb+(1-a.vb)*pow(Math.abs(a.bass-a.bass_att),2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(Math.abs(a.mid-a.mid_att),2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(Math.abs(a.treb-a.treb_att),2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,Math.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.runbass+=a.vvb;a.runmids+=a.vvm;a.runtreb+=a.vvt;a.pi23=1.33333333333332*Math.asin(-1);\na.atime=1.85*(a.runtreb+a.runmids+a.runbass);a.q8=.4*(Math.sin(a.atime-0*a.pi23)+1);a.q9=.4*(Math.sin(a.atime-1*a.pi23)+1);a.q10=.4*(Math.sin(a.atime-2*a.pi23)+1);a.vb=.95*a.vb+(1-a.vb)*pow(Math.abs(a.bass-a.bass_att),2)*.02;a.vvb=.95*a.vvb+(1-a.vvb)*a.vb*.01;a.vm=.95*a.vm+(1-a.vm)*pow(Math.abs(a.mid-a.mid_att),2)*.02;a.vvm=.95*a.vvm+(1-a.vvm)*a.vm*.01;a.vt=.95*a.vt+(1-a.vt)*pow(Math.abs(a.treb-a.treb_att),2)*.02;a.vvt=.95*a.vvt+(1-a.vvt)*a.vt*.01;a.vvb=Math.min(1,Math.max(0,a.vvb));a.vvm=Math.min(1,\nMath.max(0,a.vvm));a.vvt=Math.min(1,Math.max(0,a.vvt));a.q1=100*(a.vvt+a.vvm+a.vvb);a.q2=100*(a.vvt+a.vvm+a.vvb);a.q3=100*(a.vvt+a.vvm+a.vvb);a.q4=100*(a.vvt+a.vvm+a.vvb);a.q5=100*(a.vvt+a.vvm+a.vvb);a.q6=100*(a.vvt+a.vvm+a.vvb);a.q4=100*(a.vvt+a.vvm+a.vvb);a.q5=100*(a.vvt+a.vvm+a.vvb);a.q6=100*(a.vvt+a.vvm+a.vvb);a.q7=100*(a.vvt+a.vvm+a.vvb);a.q11=100*(a.vvt+a.vvm+a.vvb);a.q12=100*(a.vvt+a.vvm+a.vvb);a.q13=100*(a.vvt+a.vvm+a.vvb);a.q14=100*(a.vvt+a.vvm+a.vvb);a.q15=100*(a.vvt+a.vvm+a.vvb);a.q16=\n100*(a.vvt+a.vvm+a.vvb);a.q17=100*(a.vvt+a.vvm+a.vvb);a.q18=100*(a.vvt+a.vvm+a.vvb);a.q19=100*(a.vvt+a.vvm+a.vvb);a.q20=100*(a.vvt+a.vvm+a.vvb);a.q21=100*(a.vvt+a.vvm+a.vvb);a.q22=100*(a.vvt+a.vvm+a.vvb);a.q23=100*(a.vvt+a.vvm+a.vvb);a.q24=100*(a.vvt+a.vvm+a.vvb);a.q25=100*(a.vvt+a.vvm+a.vvb);a.q26=100*(a.vvt+a.vvm+a.vvb);a.q27=100*(a.vvt+a.vvm+a.vvb);a.q28=100*(a.vvt+a.vvm+a.vvb);a.q29=100*(a.vvt+a.vvm+a.vvb);a.q30=100*(a.vvt+a.vvm+a.vvb);a.q31=100*(a.vvt+a.vvm+a.vvb);a.q32=100*(a.vvt+a.vvm+a.vvb);\na.wave_r+=.5*Math.sin(1.13*a.time);a.wave_g+=.5*Math.sin(1.23*a.time);a.wave_b+=.5*Math.sin(1.33*a.time);a.wave_x+=.2*Math.sin(.32*a.time);a.wave_y+=.2*Math.cos(.32*a.time);a.ob_r=a.wave_r;a.ob_g=a.wave_g;a.ob_b=a.wave_b;a.q1=a.ob_r;a.q2=a.ob_g;a.q3=a.ob_b;a.t+=div(2.5,a.fps);a.t=.00001<Math.abs(above(a.t,2))?a.t-2:a.t;a.q22=-a.t;a.db=.98*a.db+.2*a.bass_att;a.bb+=.1*a.db;a.dt=.98*a.dt+.2*a.treb_att;a.tt+=.1*a.dt;a.dm=.98*a.dm+.2*a.mid_att;a.mm+=.1*a.dm;a.q13=.5+.25*Math.sin(.1*(a.bb-a.mm));a.q14=\n.5+.25*Math.sin(.1*(a.tt-a.mm));a.w=.1*(a.bb-a.tt);a.q16=.8-.04*(a.db-a.dt);a.q11=Math.sin(a.w);a.q12=Math.cos(a.w);a.q17=Math.sin(-a.w);a.q18=Math.cos(-a.w);a.q15=div(1,a.q16);a.wave_mystery=.2*a.time;a.zoom=Math.sin(a.treb_att);","pixel_eqs_str":"a.thresh=2*above(a.bass_att,a.thresh)+(1-above(a.bass_att,a.thresh))*(.96*(a.thresh-1.3)+1.3);a.dx_r=.015*equal(a.thresh,2)*Math.sin(5*a.time)+(1-equal(a.thresh,2))*a.dx_r;a.dy_r=.015*equal(a.thresh,2)*Math.sin(6*a.time)+(1-equal(a.thresh,2))*a.dy_r;a.zoom+=.0095*(Math.sin(10*a.ang)+.3*Math.sin(Math.sin(2*a.time*Math.sin(a.time)*a.rad))-.1*Math.cos(a.rad));a.rot+=.08*Math.abs(.746-a.rad)*Math.sin(2.2*(.5-a.rad)+5.7*Math.sin(.1*a.time));a.sx+=.01*(.99-a.rad)*Math.sin(.733*a.time)*\nbelow(Math.sin(a.time),0);a.sy+=.01*(.99-a.rad)*Math.cos(.953*a.time)*above(Math.sin(a.time),0);a.zoom-=.015*(1.5-a.rad)*below(a.rad,1.5);","init_eqs_eel":"","frame_eqs_eel":"//martin no religion / my omniversal absence for changing the background light\nvb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nrunbass=runbass+vvb;\nrunmids=runmids+vvm ;\nruntreb=runtreb+vvt;\npi23=4*asin(-1)*.33333333333333;\natime=(runtreb+runmids+runbass)*1.85;\nq8= (sin(atime-0*pi23)+1)*.4;\nq9= (sin(atime-1*pi23)+1)*.4;\nq10=(sin(atime-2*pi23)+1)*.4;\n\nvb = vb*0.95 + (1-vb)*pow(abs(bass-bass_att),2)*0.02;\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\nvm = vm*0.95 + (1-vm)*pow(abs(mid-mid_att),2)*0.02;\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\nvt = vt*0.95 + (1-vt)*pow(abs(treb-treb_att),2)*0.02;\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\nvvb = min(1,max(0,vvb));\nvvm = min(1,max(0,vvm));\nvvt = min(1,max(0,vvt));\nq1 = (vvt+vvm+vvb)*100;\nq2 = (vvt+vvm+vvb)*100;\nq3 = (vvt+vvm+vvb)*100;\nq4 =(vvt+vvm+vvb)*100;\nq5 =(vvt+vvm+vvb)*100;\nq6 =(vvt+vvm+vvb)*100;\nq4 =(vvt+vvm+vvb)*100;\nq5 =(vvt+vvm+vvb)*100;\nq6 =(vvt+vvm+vvb)*100;\nq7 =(vvt+vvm+vvb)*100;\nq11=(vvt+vvm+vvb)*100;\nq12=(vvt+vvm+vvb)*100;\nq13=(vvt+vvm+vvb)*100;\nq14=(vvt+vvm+vvb)*100;\nq15=(vvt+vvm+vvb)*100;\nq16=(vvt+vvm+vvb)*100;\nq17=(vvt+vvm+vvb)*100;\nq18=(vvt+vvm+vvb)*100;\nq19=(vvt+vvm+vvb)*100;\nq20=(vvt+vvm+vvb)*100;\nq21=(vvt+vvm+vvb)*100;\nq22=(vvt+vvm+vvb)*100;\nq23=(vvt+vvm+vvb)*100;\nq24=(vvt+vvm+vvb)*100;\nq25=(vvt+vvm+vvb)*100;\nq26=(vvt+vvm+vvb)*100;\nq27=(vvt+vvm+vvb)*100;\nq28=(vvt+vvm+vvb)*100;\nq29=(vvt+vvm+vvb)*100;\nq30=(vvt+vvm+vvb)*100;\nq31=(vvt+vvm+vvb)*100;\nq32=(vvt+vvm+vvb)*100;\nwave_r = wave_r + 0.5*sin(time*1.13);\nwave_g = wave_g + 0.5*sin(time*1.23);\nwave_b = wave_b + 0.5*sin(time*1.33);\n\nwave_x = wave_x + 0.2*sin(0.32*time);\nwave_y = wave_y + 0.2*cos(0.32*time);\n\nob_r = wave_r;\nob_g = wave_g;\nob_b = wave_b;\n\nq1 = ob_r;\nq2 = ob_g;\nq3 = ob_b;\n//spiral collide frame\nt = t + 2.5/fps;\nt = if(above(t,2),t-2,t);\nq22 = -t;\n// Flexis dampened sound response functions\ndb = db*0.98 + bass_att*0.2; // dampener\nbb = bb + db*0.1; // accumulation, replace time expressions with this ;)\ndt = dt*0.98 + treb_att*0.2;\ntt = tt + dt*0.1;\ndm = dm*0.98 + mid_att*0.2;\nmm = mm + dm*0.1;\n//***** [q11-q18] variables for Flexis caleidoscope shader code *****\n// change\nq13 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x\nq14 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y\nw = (bb-tt)*0.1;                   // angle\nq16 = 0.8 - (db-dt)*0.04;         // size\n//don't change\nq11 = sin(w);\nq12 = cos(w);\nq17 = sin(-w);\nq18 = cos(-w);\nq15 = 1/q16;\nwave_mystery = time*0.2;\n\nzoom = (sin(treb_att));","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\nzoom = zoom + 0.0095*(sin(10*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\nrot = rot + 0.08*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\nzoom = zoom - 0.015*(0.5*abs(3)-rad)*below(rad,1.5);","warp":" shader_body { \n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1.x = (tmpvar_2.x - ((\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).x - tmpvar_2.x)\n   + 0.004) * 0.1));\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv_orig - 0.5) * vec2(1.8, 1.8));\n  vec2 tmpvar_4;\n  tmpvar_4.x = ((tmpvar_3.x * tmpvar_3.x) - (tmpvar_3.y * tmpvar_3.y));\n  tmpvar_4.y = ((2.0 * tmpvar_3.x) * tmpvar_3.y);\n  ret_1.y = (texture (sampler_fc_main, (tmpvar_4 + vec2(0.25, 0.551))).y + 0.0038);\n  vec2 tmpvar_5;\n  tmpvar_5 = (texsize.zw * 12.0);\n  vec2 tmpvar_6;\n  tmpvar_6 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.8)) + rand_frame.xy);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((texture (sampler_blur1, \n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1)).z;\n  tmpvar_7.y = (((texture (sampler_blur1, \n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1)).z;\n  vec2 tmpvar_8;\n  tmpvar_8 = ((mix (uv_orig, uv, vec2(0.02, 0.02)) + (\n    (tmpvar_7 * texsize.zw)\n   * 4.0)) + ((\n    (texture (sampler_noise_lq, tmpvar_6).xy - 0.5)\n   * texsize.zw) * 4.0));\n  ret_1.z = (((texture (sampler_fc_main, tmpvar_8).z - \n    ((texture (sampler_fc_main, tmpvar_8).z - ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3).z) * 0.02)\n  ) - 0.008) + ((texture (sampler_noise_lq, tmpvar_6).z - 0.5) * 0.1));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_1;\n  ret = tmpvar_9.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  ret_1 = (ret_1 + ((texture (sampler_blur1, \n    (uv + ret_1.xy)\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_2;\n  tmpvar_2.x = (uv.x - ret_1.y);\n  tmpvar_2.y = (uv.y - ret_1.y);\n  ret_1 = (ret_1 + ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3 = pow (((\n    sqrt(dot (ret_1, ret_1))\n   * ret_1) * 1.33), (0.89 - (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3)));\n  ret_1 = (tmpvar_3 * tmpvar_3.z);\n  ret_1 = (ret_1 - texture (sampler_main, uv).xyz);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n }","warp_hlsl":"shader_body\n{\nret.x = GetPixel(uv).x;\nret.x -= (GetBlur1(uv).x - GetPixel(uv).x + 0.004)*0.1;\n\nfloat2 zoom = 1.8;\nfloat2 c = float2(0.25,0.551);\n\n float2 my_uv2 = (uv_orig-0.5)*zoom;\n my_uv2 = float2(my_uv2.x*my_uv2.x - my_uv2.y*my_uv2.y, 2*my_uv2.x*my_uv2.y) + c; // u -> u^2 + c\n\nret.y = tex2D(sampler_fc_main,my_uv2).y + 0.0038;\n\n    float2 d = texsize.zw*12;\n    float2 uv_z = lerp(uv_orig,uv,0);\n    float3 dx = ( GetBlur1(uv_z + float2(1,0)*d) - GetBlur1(uv_z-float2(1,0)*d) );\n    float3 dy = ( GetBlur1(uv_z + float2(0,1)*d) - GetBlur1(uv_z-float2(0,1)*d) );\n\n    float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw*0.8 + rand_frame.xy;\n\n    float2 uv_bg = lerp(uv_orig,uv,0.02)\n                 + float2(dx.z,dy.z)*texsize.zw*4\n                 + (tex2D(sampler_noise_lq, dither_uv).xy-0.5)*texsize.zw*4;\n\nret.z = tex2D(sampler_fc_main,uv_bg).z\n      - (tex2D(sampler_fc_main,uv_bg).z\n      - GetBlur3(uv_bg).z)*0.02\n      - 0.008\n      + (tex2D(sampler_noise_lq, dither_uv).z-0.5)*0.1;\n\n}","comp_hlsl":"shader_body\n{\n\nret=GetBlur1(uv);\nret+=GetBlur1(float2(uv.x+ret.x,uv.y+ret.y));\nret+=GetBlur1(float2(uv.x-ret.y,uv.y-ret.y));\nret=pow(length(ret)*ret*1.33,0.89-GetBlur3(uv));\n//ret=saturate(ret);\n//ret*=tex2D(sampler_noise_lq,uv*ret.y);\nret*=ret.z;\nret=ret-GetPixel(uv);\n//ret=1-ret;\n}"}