{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_orient":1,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.312,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.9995,"warp":0.009,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":6.65013,"ang":3.64425,"tex_zoom":0.07524,"r":0.5,"g":0.5,"b":1,"a":0.6,"g2":0,"border_a":0},"init_eqs_str":"a.rate=0;a.beat=0;a.bassthresh=0;a.poly=0;a.te=0;a.t2=0;a.t1=.01*Math.floor(rand(100));a.t2=.01*Math.floor(rand(100));","frame_eqs_str":"a.rate=div(a.fps,a.fps+div(1,3));a.beat=above(a.bass,a.bassthresh);a.bassthresh=4*a.beat+(1-a.beat)*((a.bassthresh-1.3)*a.rate+1.3);a.poly=.00001<Math.abs(a.beat)?Math.floor(rand(30))+6:a.poly;a.sides=a.poly;a.te+=Math.max(div(div(a.bass,a.fps),3),.003);a.x=.5+.45*Math.sin(1.87*a.te)+.07*Math.sin(.6*a.time);a.y=.5+.35*Math.cos(1.87*a.te)+.07*Math.sin(1.3*a.time);a.ang=3*Math.sin(1.67*-a.te)+3*Math.cos(.4*a.te);a.rad*=.9+.2*a.t2;a.r=Math.min(1,Math.max(0,a.r+.4*Math.sin(.517*\na.time+1)));a.g=Math.min(1,Math.max(0,a.g+.4*Math.sin(.491*a.time+2)));a.b=Math.min(1,Math.max(0,a.b+.4*Math.sin(.532*a.time+4)));a.r2=Math.min(1,Math.max(0,a.r2+.4*Math.sin(.457*a.time+3)));a.g2=Math.min(1,Math.max(0,a.g2+.4*Math.sin(.437*a.time+5)));a.b2=Math.min(1,Math.max(0,a.b2+.4*Math.sin(.484*a.time+6)));","init_eqs_eel":"t1 = int(rand(100))*0.01;\nt2 = int(rand(100))*0.01;","frame_eqs_eel":"rate = fps/(fps+1/3);\nbeat = above(bass,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.3)*rate+1.3);\npoly = if(beat,int(rand(30))+6,poly);\nsides = poly;\n\nte = te + max(bass/fps/3,0.003);\nx = 0.5+0.45*sin(te*1.87)+0.07*sin(time*0.6);\ny = 0.5+0.35*cos(te*1.87)+0.07*sin(time*1.3);\nang = 3*sin(-te*1.67) + 3*cos(te*0.4);\nrad = rad * (0.9 + 0.2*t2);\nr = min(1,max(0,r + 0.4*sin(time*0.517 + 1)));\ng = min(1,max(0,g + 0.4*sin(time*0.491 + 2)));\nb = min(1,max(0,b + 0.4*sin(time*0.532 + 4)));\nr2 = min(1,max(0,r2 + 0.4*sin(time*0.457 + 3)));\ng2 = min(1,max(0,g2 + 0.4*sin(time*0.437 + 5)));\nb2 = min(1,max(0,b2 + 0.4*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"textured":1,"x":0.37,"y":0.49,"rad":0.75,"ang":3.64425,"tex_zoom":0.7418,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"a.poly=0;a.rate2=0;a.rate=0;a.ran=0;a.out=0;a.beat=0;a.t2=0;a.te=0;a.bassthresh=0;a.t1=.01*Math.floor(rand(100));a.t2=.01*Math.floor(rand(100));a.te=1;a.poly=4;","frame_eqs_str":"a.rate=div(a.fps,a.fps+div(1,2));a.beat=above(a.bass,a.bassthresh);a.bassthresh=4*a.beat+(1-a.beat)*((a.bassthresh-1.5)*a.rate+1.5);a.ran=Math.floor(rand(8))+4;a.poly=.00001<Math.abs(a.beat)?.00001<Math.abs(equal(a.ran,a.poly))?a.poly+1:a.ran:a.poly;a.sides=a.poly;a.rate2=div(a.fps,a.fps+10);a.out=(1-a.beat)*a.rate2*a.out+a.beat;a.te=div(div(a.bass,a.fps),2)+a.te;a.x+=.056*Math.sin(1.67*a.te);a.y+=.043*Math.sin(1.23*a.te);a.ang=3*Math.sin(.67*-a.te)+3*Math.cos(.4*a.te);a.rad=\na.rad*(.9+.2*a.t2)-.1*Math.sin(1.51*a.te);a.r=Math.min(1,Math.max(0,a.r+.3*Math.sin(.427*a.time+1)));a.g=Math.min(1,Math.max(0,a.g+.3*Math.sin(.401*a.time+2)));a.b=Math.min(1,Math.max(0,a.b+.3*Math.sin(.452*a.time+4)));a.r2=Math.min(1,Math.max(0,a.r2+.3*Math.sin(.417*a.time+3)));a.g2=Math.min(1,Math.max(0,a.g2+.3*Math.sin(.457*a.time+5)));a.b2=Math.min(1,Math.max(0,a.b2+.3*Math.sin(.434*a.time+6)));","init_eqs_eel":"t1 = int(rand(100))*0.01;\nt2 = int(rand(100))*0.01;\nte = 1;\npoly = 4;","frame_eqs_eel":"rate = fps/(fps+1/2);\nbeat = above(bass,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.5)*rate+1.5);\nran = int(rand(8))+4;\npoly = if(beat,if(equal(ran,poly),poly+1,ran),poly);\n//poly = if(above(poly,8),4,poly);\nsides = poly;\n\nrate2 = fps/(fps+10);\nout = (1-beat)*rate2*out + beat;\n//border_a = out;\nte = bass/fps/2 + te;\nx = x + 0.056*sin(te*1.67);\ny = y + 0.043*sin(te*1.23);\nang = 3*sin(-te*0.67) + 3*cos(te*0.4);\nrad = rad * (0.9 + 0.2*t2) - 0.1*sin(te*1.51);;\nr = min(1,max(0,r + 0.3*sin(time*0.427 + 1)));\ng = min(1,max(0,g + 0.3*sin(time*0.401 + 2)));\nb = min(1,max(0,b + 0.3*sin(time*0.452 + 4)));\nr2 = min(1,max(0,r2 + 0.3*sin(time*0.417 + 3)));\ng2 = min(1,max(0,g2 + 0.3*sin(time*0.457 + 5)));\nb2 = min(1,max(0,b2 + 0.3*sin(time*0.434 + 6)));"},{"baseVals":{"enabled":1,"additive":1,"thickoutline":1,"textured":1,"x":0.67,"y":0.43,"rad":0.75,"ang":4.20974,"tex_zoom":1.0406,"g":1,"b":1,"r2":1,"b2":1,"border_b":0,"border_a":0},"init_eqs_str":"a.poly=0;a.rate2=0;a.rate=0;a.ran=0;a.out=0;a.beat=0;a.t2=0;a.te=0;a.bassthresh=0;a.t1=.01*Math.floor(rand(100));a.t2=.01*Math.floor(rand(100));a.te=1;a.poly=5;","frame_eqs_str":"a.rate=div(a.fps,a.fps+div(1,2));a.beat=above(a.mid,a.bassthresh);a.bassthresh=4*a.beat+(1-a.beat)*((a.bassthresh-1.6)*a.rate+1.6);a.ran=Math.floor(rand(8))+4;a.poly=.00001<Math.abs(a.beat)?.00001<Math.abs(equal(a.ran,a.poly))?a.poly+1:a.ran:a.poly;a.sides=a.poly;a.rate2=div(a.fps,a.fps+10);a.out=(1-a.beat)*a.rate2*a.out+a.beat;a.te=div(div(a.mid,a.fps),2)+a.te;a.x+=.05*Math.sin(1.17*a.te);a.y+=.05*Math.sin(1.83*a.te);a.ang=3*Math.sin(.5*a.te)+2*Math.sin(1.1*a.te)+4*Math.sin(.3*\na.te);a.rad=a.rad*(.9+.2*a.t2)+.1*Math.sin(1.3*a.te);a.r=Math.min(1,Math.max(0,a.r+.3*Math.sin(.417*a.time+1)));a.g=Math.min(1,Math.max(0,a.g+.3*Math.sin(.391*a.time+2)));a.b=Math.min(1,Math.max(0,a.b+.3*Math.sin(.432*a.time+4)));a.r2=Math.min(1,Math.max(0,a.r2+.3*Math.sin(.457*a.time+3)));a.g2=Math.min(1,Math.max(0,a.g2+.3*Math.sin(.437*a.time+5)));a.b2=Math.min(1,Math.max(0,a.b2+.3*Math.sin(.484*a.time+6)));","init_eqs_eel":"t1 = int(rand(100))*0.01;\nt2 = int(rand(100))*0.01;\nte = 1;\npoly = 5;","frame_eqs_eel":"rate = fps/(fps+1/2);\nbeat = above(mid,bassthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.6)*rate+1.6);\nran = int(rand(8))+4;\npoly = if(beat,if(equal(ran,poly),poly+1,ran),poly);\n//poly = if(above(poly,8),4,poly);\nsides = poly;\n\nrate2 = fps/(fps+10);\nout = (1-beat)*rate2*out + beat;\n//border_a = out;\n\nte = mid/fps/2 + te;\nx = x + 0.05*sin(te*1.17);\ny = y + 0.05*sin(te*1.83);\nang = 3*sin(te*0.5)+2*sin(te*1.1)+4*sin(te*0.3);\nrad = rad * (0.9 + 0.2*t2) + 0.1*sin(te*1.3);\nr = min(1,max(0,r + 0.3*sin(time*0.417 + 1)));\ng = min(1,max(0,g + 0.3*sin(time*0.391 + 2)));\nb = min(1,max(0,b + 0.3*sin(time*0.432 + 4)));\nr2 = min(1,max(0,r2 + 0.3*sin(time*0.457 + 3)));\ng2 = min(1,max(0,g2 + 0.3*sin(time*0.437 + 5)));\nb2 = min(1,max(0,b2 + 0.3*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":3,"rad":0.20024,"g":1,"b":1,"r2":0.5,"g2":0.5,"b2":0.5,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"a.poly=0;a.rate2=0;a.rate=0;a.beat2=0;a.beatthresh=0;a.beat=0;a.vol=0;a.te=0;a.rad_add=0;a.bassthresh=0;","frame_eqs_str":"a.rate=div(a.fps,a.fps+div(1,2));a.rate2=div(a.fps,a.fps+16);a.ang=.5*a.time;a.vol=div(a.bass_att+a.mid_att+a.treb_att,6);a.te=div(a.vol,a.fps)+a.te;a.x+=.2*Math.sin(1.14*a.te);a.y+=.2*Math.sin(.96*a.te+2);a.beat=above(1.5*a.vol,a.bassthresh);a.beat2=above(a.mid,a.beatthresh);a.bassthresh=4*a.beat+(1-a.beat)*((a.bassthresh-1.4)*a.rate+1.4);a.beatthresh=4*a.beat2+(1-a.beat2)*((a.beatthresh-1.6)*a.rate+1.6);a.poly=.00001<Math.abs(a.beat)?Math.floor(rand(5))+3:a.poly;a.poly=.00001<\nMath.abs(equal(a.poly,7))?Math.floor(rand(50))+7:a.poly;a.sides=a.poly;a.rad-=div(Math.log(a.poly),100);a.rad_add=(1-a.beat2)*(a.rad_add*a.rate2+div(a.vol,25))+a.beat2*(a.rad_add*a.rate2+div(a.vol,8));a.rad+=a.rad_add;","init_eqs_eel":"","frame_eqs_eel":"rate = fps/(fps+1/2);\nrate2 = fps/(fps + 16);\n\nang = time*0.5;\nvol = (bass_att+mid_att+treb_att)/6;\nte = vol/fps + te;\nx = x + 0.2*sin(te*1.14);\ny = y + 0.2*sin(te*0.96+2);\n\nbeat = above(vol*1.5,bassthresh);\nbeat2 = above(mid,beatthresh);\nbassthresh = beat*4 + (1-beat)*((bassthresh - 1.4)*rate+1.4);\nbeatthresh = beat2*4 + (1-beat2)*((beatthresh - 1.6)*rate + 1.6);\npoly = if(beat,int(rand(5))+3,poly);\npoly = if(equal(poly,7),int(rand(50))+7,poly);\nsides = poly;\n\nrad = rad-log(poly)/100;\nrad_add = (1-beat2)*(rad_add*rate2 + vol/25) + beat2*(rad_add*rate2+vol/8);\nrad = rad + rad_add;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a.mq29=0;a.cthr=0;a.d=0;a.n=0;a.mq1=0;a.z=0;a.n2=0;a.q25=0;a.w2=0;a.q22=0;a.q21=0;a.q29=0;a.j3=0;a.q1=0;a.mq31=0;a.mq21=0;a.n1=0;a.mq24=0;a.q9=0;a.v=0;a.chng=0;a.mq28=0;a.w3=0;a.mq23=0;a.q31=0;a.q23=0;a.q24=0;a.q11=0;a.pi=0;a.q10=0;a.pi2inv=0;a.j2=0;a.q26=0;a.w1=0;a.zz=0;a.mq27=0;a.mq25=0;a.mq22=0;a.vol=0;a.mq26=0;a.j1=0;a.q27=0;a.maskangle=0;a.q3=0;a.q32=0;a.q28=0;a.q30=0;a.q20=0;a.mtime=0;a.q8=0;a.x1=2;a.y1=2;a.z1=2;","frame_eqs_str":"a.chng=Math.sin(.5*a.time);a.cthr=.9999;a.mq21=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq21;a.mq22=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq22;a.mq23=.00001<Math.abs(above(a.chng,a.cthr))?rand(3):a.mq23;a.mq24=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq24;a.mq25=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq25;a.mq26=.00001<Math.abs(above(a.chng,a.cthr))?rand(2):a.mq26;a.mq27=.00001<Math.abs(above(a.chng,a.cthr))?rand(1):a.mq27;a.mq28=.00001<Math.abs(above(a.chng,\na.cthr))?rand(1):a.mq28;a.mq29=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq29;a.mq31=.00001<Math.abs(above(a.chng,a.cthr))?.3*rand(1):a.mq31;a.monitor=a.chng;a.q21=a.mq21;a.q22=a.mq22;a.q23=a.mq23;a.q24=a.mq24;a.q25=a.mq25;a.q26=a.mq26;a.q27=a.mq27;a.q28=a.mq28;a.q29=a.mq29;a.q31=a.mq31;a.monitor=a.mq1;a.d=20;a.z=4;a.zz=1+0*a.bass_att;a.pi=2*Math.asin(1);a.pi2inv=div(.5,a.pi);a.maskangle=Math.asin(div(1,a.d));a.q32=a.maskangle;a.q31=a.d;a.q30=a.z;a.q29=a.pi2inv;a.q28=a.pi;a.q27=div(1,a.zz);\na.v=.4;a.j1=.95*a.j1+sqr(4*a.bass)*a.v;a.j2=.95*a.j2+sqr(4*a.mid)*a.v;a.j3=.95*a.j3+sqr(4*a.treb)*a.v;a.n+=.0152*a.j1;a.n1+=.0152*a.j2;a.n2+=.0152*a.j3;a.vol=.25*(a.bass+a.mid+a.treb);a.vol=a.vol;a.q3=8*a.vol;a.mtime+=.01*a.vol;a.q1=a.mtime;a.zoom+=.015*a.vol;a.w1=.01*a.n;a.w2=.01*a.n1;a.w3=.01*a.n2;a.q20=Math.cos(a.w1);a.q21=Math.sin(a.w1);a.q22=Math.cos(a.w2);a.q23=Math.sin(a.w2);a.q24=Math.cos(a.w3);a.q25=Math.sin(a.w3);a.q8=a.vol;a.q9=a.vol;a.q10=a.vol;a.q11=a.vol;","pixel_eqs_str":"","init_eqs_eel":"x1 = 2;\ny1= 2;\nz1 = 2;","frame_eqs_eel":"chng=sin(time*.5);\ncthr=.9999;\nmq21=if(above(chng,cthr),rand(3),mq21);\nmq22=if(above(chng,cthr),rand(3),mq22);\nmq23=if(above(chng,cthr),rand(3),mq23);\nmq24=if(above(chng,cthr),rand(2),mq24);\nmq25=if(above(chng,cthr),rand(2),mq25);\nmq26=if(above(chng,cthr),rand(2),mq26);\nmq27=if(above(chng,cthr),rand(1),mq27);\nmq28=if(above(chng,cthr),rand(1),mq28);\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\nmonitor=chng;\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\n\nmonitor=mq1;\n// raytraced sphere code\n\nd = 20; // distance of the sphere, the farther you're away the more you'll see on the horizon\nz = 4; // distance of the pane where the scene is projected on, wider distance = smaller apex angle of the camera, very small distances = fish eyes view\n\nzz = 1 + bass_att*0; // linear zoom\n\npi = asin(1)*2;\npi2inv = 0.5/pi;\nmaskangle = asin( 1/d);\nq32 = maskangle; // hit = (cameras angle < mask_angle)\nq31 = d;\nq30 = z;\nq29 = pi2inv;\nq28 = pi;\nq27 = 1/zz;\n\nv = 0.4;\nj1 = j1*0.95 + sqr(bass*4)*v;\nj2 = j2*0.95 + sqr(mid*4)*v;\nj3 = j3*0.95 + sqr(treb*4)*v;\n\nn = n + j1*0.0152;\nn1 = n1 + j2*0.0152;\nn2 = n2 + j3*0.0152;\n\nvol=(bass+mid+treb)*0.25;\nvol=vol;\nq3=vol*8;\nmtime = mtime+vol*0.01;\nq1=mtime;\n\nzoom = zoom + 0.015*vol;\n\nw1 = n*0.01;    // solid angles to rotate the sphere in its origin\nw2 = n1*0.01;\nw3 = n2*0.01;\n\nq20 = cos(w1);\nq21 = sin(w1);\nq22 = cos(w2);\nq23 = sin(w2);\nq24 = cos(w3);\nq25 = sin(w3);\nq8=vol;\nq9=vol;\nq10=vol;\nq11=vol;","pixel_eqs_eel":"","warp":" shader_body { \n  vec3 noise2_1;\n  vec3 rc_2;\n  vec3 p_3;\n  vec2 polar_4;\n  vec3 ret_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = ((q27 * (uv - 0.5)) * aspect.xy);\n  float tmpvar_7;\n  tmpvar_7 = sqrt(dot (tmpvar_6, tmpvar_6));\n  float tmpvar_8;\n  float tmpvar_9;\n  tmpvar_9 = (min (abs(\n    (tmpvar_7 / q30)\n  ), 1.0) / max (abs(\n    (tmpvar_7 / q30)\n  ), 1.0));\n  float tmpvar_10;\n  tmpvar_10 = (tmpvar_9 * tmpvar_9);\n  tmpvar_10 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_10) + 0.05368138) * tmpvar_10) - 0.1173503)\n     * tmpvar_10) + 0.1938925) * tmpvar_10) - 0.3326756)\n   * tmpvar_10) + 0.9999793) * tmpvar_9);\n  tmpvar_10 = (tmpvar_10 + (float(\n    (abs((tmpvar_7 / q30)) > 1.0)\n  ) * (\n    (tmpvar_10 * -2.0)\n   + 1.570796)));\n  tmpvar_8 = (tmpvar_10 * sign((tmpvar_7 / q30)));\n  if ((abs(q30) > (1e-08 * abs(tmpvar_7)))) {\n    if ((q30 < 0.0)) {\n      if ((tmpvar_7 >= 0.0)) {\n        tmpvar_8 += 3.141593;\n      } else {\n        tmpvar_8 = (tmpvar_8 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_8 = (sign(tmpvar_7) * 1.570796);\n  };\n  bool tmpvar_11;\n  tmpvar_11 = (q32 >= tmpvar_8);\n  float tmpvar_12;\n  float tmpvar_13;\n  tmpvar_13 = (min (abs(\n    (tmpvar_6.x / tmpvar_6.y)\n  ), 1.0) / max (abs(\n    (tmpvar_6.x / tmpvar_6.y)\n  ), 1.0));\n  float tmpvar_14;\n  tmpvar_14 = (tmpvar_13 * tmpvar_13);\n  tmpvar_14 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_14) + 0.05368138) * tmpvar_14) - 0.1173503)\n     * tmpvar_14) + 0.1938925) * tmpvar_14) - 0.3326756)\n   * tmpvar_14) + 0.9999793) * tmpvar_13);\n  tmpvar_14 = (tmpvar_14 + (float(\n    (abs((tmpvar_6.x / tmpvar_6.y)) > 1.0)\n  ) * (\n    (tmpvar_14 * -2.0)\n   + 1.570796)));\n  tmpvar_12 = (tmpvar_14 * sign((tmpvar_6.x / tmpvar_6.y)));\n  if ((abs(tmpvar_6.y) > (1e-08 * abs(tmpvar_6.x)))) {\n    if ((tmpvar_6.y < 0.0)) {\n      if ((tmpvar_6.x >= 0.0)) {\n        tmpvar_12 += 3.141593;\n      } else {\n        tmpvar_12 = (tmpvar_12 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_12 = (sign(tmpvar_6.x) * 1.570796);\n  };\n  float x_15;\n  x_15 = (q31 * sin(tmpvar_8));\n  vec2 tmpvar_16;\n  tmpvar_16.x = tmpvar_12;\n  tmpvar_16.y = ((q28 - tmpvar_8) + (sign(x_15) * (1.570796 - \n    (sqrt((1.0 - abs(x_15))) * (1.570796 + (abs(x_15) * (-0.2146018 + \n      (abs(x_15) * (0.08656672 + (abs(x_15) * -0.03102955)))\n    ))))\n  )));\n  polar_4 = tmpvar_16;\n  vec3 tmpvar_17;\n  tmpvar_17.x = (sin(tmpvar_12) * sin(tmpvar_16.y));\n  tmpvar_17.y = (cos(tmpvar_12) * sin(tmpvar_16.y));\n  tmpvar_17.z = cos(tmpvar_16.y);\n  vec2 tmpvar_18;\n  tmpvar_18.x = ((tmpvar_17.z * q20) - (tmpvar_17.y * q21));\n  tmpvar_18.y = ((tmpvar_17.z * q21) + (tmpvar_17.y * q20));\n  vec2 tmpvar_19;\n  tmpvar_19.x = ((tmpvar_18.x * q22) - (tmpvar_17.x * q23));\n  tmpvar_19.y = ((tmpvar_18.x * q23) + (tmpvar_17.x * q22));\n  p_3.z = tmpvar_19.x;\n  vec2 tmpvar_20;\n  tmpvar_20.x = ((tmpvar_18.y * q24) - (tmpvar_19.y * q25));\n  tmpvar_20.y = ((tmpvar_18.y * q25) + (tmpvar_19.y * q24));\n  p_3.xy = tmpvar_20.yx;\n  float tmpvar_21;\n  float tmpvar_22;\n  tmpvar_22 = (min (abs(\n    (tmpvar_19.x / tmpvar_20.y)\n  ), 1.0) / max (abs(\n    (tmpvar_19.x / tmpvar_20.y)\n  ), 1.0));\n  float tmpvar_23;\n  tmpvar_23 = (tmpvar_22 * tmpvar_22);\n  tmpvar_23 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_23) + 0.05368138) * tmpvar_23) - 0.1173503)\n     * tmpvar_23) + 0.1938925) * tmpvar_23) - 0.3326756)\n   * tmpvar_23) + 0.9999793) * tmpvar_22);\n  tmpvar_23 = (tmpvar_23 + (float(\n    (abs((tmpvar_19.x / tmpvar_20.y)) > 1.0)\n  ) * (\n    (tmpvar_23 * -2.0)\n   + 1.570796)));\n  tmpvar_21 = (tmpvar_23 * sign((tmpvar_19.x / tmpvar_20.y)));\n  if ((abs(tmpvar_20.y) > (1e-08 * abs(tmpvar_19.x)))) {\n    if ((tmpvar_20.y < 0.0)) {\n      if ((tmpvar_19.x >= 0.0)) {\n        tmpvar_21 += 3.141593;\n      } else {\n        tmpvar_21 = (tmpvar_21 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_21 = (sign(tmpvar_19.x) * 1.570796);\n  };\n  float tmpvar_24;\n  tmpvar_24 = sqrt(dot (p_3.xz, p_3.xz));\n  float tmpvar_25;\n  float tmpvar_26;\n  tmpvar_26 = (min (abs(\n    (tmpvar_20.x / tmpvar_24)\n  ), 1.0) / max (abs(\n    (tmpvar_20.x / tmpvar_24)\n  ), 1.0));\n  float tmpvar_27;\n  tmpvar_27 = (tmpvar_26 * tmpvar_26);\n  tmpvar_27 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_27) + 0.05368138) * tmpvar_27) - 0.1173503)\n     * tmpvar_27) + 0.1938925) * tmpvar_27) - 0.3326756)\n   * tmpvar_27) + 0.9999793) * tmpvar_26);\n  tmpvar_27 = (tmpvar_27 + (float(\n    (abs((tmpvar_20.x / tmpvar_24)) > 1.0)\n  ) * (\n    (tmpvar_27 * -2.0)\n   + 1.570796)));\n  tmpvar_25 = (tmpvar_27 * sign((tmpvar_20.x / tmpvar_24)));\n  if ((abs(tmpvar_24) > (1e-08 * abs(tmpvar_20.x)))) {\n    if ((tmpvar_24 < 0.0)) {\n      if ((tmpvar_20.x >= 0.0)) {\n        tmpvar_25 += 3.141593;\n      } else {\n        tmpvar_25 = (tmpvar_25 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_25 = (sign(tmpvar_20.x) * 1.570796);\n  };\n  vec2 tmpvar_28;\n  tmpvar_28.x = tmpvar_21;\n  tmpvar_28.y = tmpvar_25;\n  polar_4 = (((tmpvar_28 * q29) * vec2(1.0, 2.0)) + vec2(0.0, 0.5));\n  vec3 tmpvar_29;\n  tmpvar_29.xy = polar_4;\n  tmpvar_29.z = (time * 0.15);\n  rc_2 = (texture (sampler_noisevol_hq, tmpvar_29).xyz + (texture (sampler_noisevol_hq, (2.0 * tmpvar_29)) * 0.5).xyz);\n  rc_2 = (rc_2 + (texture (sampler_noisevol_hq, (4.0 * tmpvar_29)) * 0.25).xyz);\n  rc_2 = (rc_2 + (texture (sampler_noisevol_hq, (8.0 * tmpvar_29)) * 0.125).xyz);\n  rc_2 = (rc_2 + (texture (sampler_noisevol_hq, (16.0 * tmpvar_29)) * 0.0625).xyz);\n  rc_2 = ((rc_2 * rc_2) * (rc_2 * 2.0));\n  rc_2 = (rc_2 * (q3 * 0.5));\n  vec4 tmpvar_30;\n  tmpvar_30 = texture (sampler_fc_main, (0.5 + (uv - 0.5)));\n  noise2_1 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz + mix ((rc_2 * 2.0), vec3(2.0, 2.0, 2.0), vec3(rad)));\n  vec3 a_31;\n  a_31 = (1.0 - tmpvar_30.xyz);\n  ret_5 = (tmpvar_30.xyz + (vec3(0.3, 0.25, 0.2) * dot (\n    ((a_31.yzx * noise2_1.zxy) - (a_31.zxy * noise2_1.yzx))\n  , vec3(0.32, 0.49, 0.29))));\n  ret_5.x = (1.0 - ret_5.x);\n  ret_5 = (ret_5 - (0.1 * rad));\n  ret_5 = (ret_5 + ((0.1 * texture (sampler_noisevol_hq, \n    ((p_3 + (time * 0.1)) * 0.7)\n  )) * float(tmpvar_11)).xyz);\n  ret_5.y = (1.0 - ret_5.y);\n  vec4 tmpvar_32;\n  tmpvar_32 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * polar_4.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_5.x > (q21 * roam_cos.y)) && (ret_5.x <= (q24 * roam_sin.x)))) {\n    ret_5.y = (ret_5.y - (tmpvar_32.x * 0.5));\n  };\n  if (((ret_5.y > (q22 * roam_sin.x)) && (ret_5.y <= (q25 * roam_cos.x)))) {\n    ret_5.z = (ret_5.z - (tmpvar_32.y * 0.5));\n  };\n  ret_5.z = (1.0 - ret_5.z);\n  if (((ret_5.z > (q23 * roam_cos.x)) && (ret_5.z <= (q26 * roam_sin.y)))) {\n    ret_5.x = (ret_5.x - (tmpvar_32.z * 0.5));\n  };\n  vec4 tmpvar_33;\n  tmpvar_33.w = 1.0;\n  tmpvar_33.xyz = ret_5;\n  ret = tmpvar_33.xyz;\n }","comp":" shader_body { \n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz - ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) * 0.5));\n  ret_1 = (ret_1 * 2.0);\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_1.x > (q26 * roam_cos.y)) && (ret_1.x <= (q23 * roam_sin.x)))) {\n    ret_1.z = (ret_1.z - (tmpvar_2.x * 0.5));\n  };\n  if (((ret_1.y > (q25 * roam_sin.x)) && (ret_1.y <= (q22 * roam_cos.x)))) {\n    ret_1.x = (ret_1.x - (tmpvar_2.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * roam_cos.x)) && (ret_1.z <= (q21 * roam_sin.y)))) {\n    ret_1.y = (ret_1.y - (tmpvar_2.z * 0.5));\n  };\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n }","warp_hlsl":"float2 polar, factorA, factorB, product;\n\nshader_body\n{\n\nfloat z = q30;\nfloat d = q31;\nfloat pi = q28;\nfloat pi2inv = q29;\nfloat mask_apex = q32;\nfloat zoom = q27;\n\nfloat2 c = zoom*(uv-0.5)*aspect.xy;\n\nfloat camera_apex = atan2( length(c),z);\n\nbool mask = mask_apex >= camera_apex;\n\nfloat longitude = atan2(c.x,c.y);\nfloat latitude = (pi - camera_apex + asin(d*sin(camera_apex)));\n\nfloat2 polar = float2(longitude,latitude);\n\nfloat3 p = float3( sin(polar.x)*sin(polar.y),cos(polar.x)*sin(polar.y),cos(polar.y));\n\nfactorA = p.zy;\nfactorB = float2(q20,q21);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);\np.zy = product.xy;\n\nfactorA = p.zx;\nfactorB = float2(q22,q23);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y,factorA.x*factorB.y + factorA.y*factorB.x);\np.zx = product.xy;\n\nfactorA = p.yx;\nfactorB = float2(q24,q25);\nproduct = float2( factorA.x*factorB.x - factorA.y*factorB.y, factorA.x*factorB.y + factorA.y*factorB.x);\np.yx = product.xy;\npolar = float2(atan2(p.z,p.x),atan2(p.y,length(p.xz)))*pi2inv*float2(1,2)+float2(0,0.5);\n\npolar = polar;\n\n    float3 pos = float3(polar,time*0.15);\n    float3 rc = tex3D(sampler_noisevol_hq, pos);\n    rc += tex3D(sampler_noisevol_hq, 2*pos)*0.5;\n    rc += tex3D(sampler_noisevol_hq, 4*pos)*0.25;\n    rc += tex3D(sampler_noisevol_hq, 8*pos)*0.125;\n    rc += tex3D(sampler_noisevol_hq, 16*pos)*0.0625;\n    //rc = rc*0.556;    \n    rc = (rc*rc*rc)*2;\n    //rc -= GetBlur1(uv);   \n    rc *= q3*0.5;\n\n    float2 ruv = uv = 0.5 + (uv-0.5)*(1+(rc.x*.0));  \n    ret = tex2D(sampler_fc_main, float2(ruv.x, ruv.y)).xyz;\n    \n    float3 noise2 = tex2D(sampler_noise_lq, uv_orig*texsize.xy*texsize_noise_lq.zw+rand_frame.xy);\n    noise2 += lerp(rc*2, 2, rad);\n    \n    ret = ret+0.5*lum(cross((1-ret),(noise2)))*float3(0.6,0.5,0.4);\nret.x=1-ret.x;\n    ret -= lerp(0.0,0.1,rad);    \n\n    ret +=0.1*tex3d(sampler_noisevol_hq, (p+time*0.1)*0.7)*mask;\nret.y=1-ret.y;\n\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((polar.xyy*q27\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q29\n                     );\nif(ret.x> q21*roam_cos.y && ret.x<= q24*roam_sin.x)ret.y -= (noise9).x*.5; \nif(ret.y> q22*roam_sin.x && ret.y<= q25*roam_cos.x)ret.z -= (noise9).y*.5; \nret.z=1-ret.z;\n\nif(ret.z> q23*roam_cos.x && ret.z<= q26*roam_sin.y)ret.x -= (noise9).z*.5; \n}","comp_hlsl":"shader_body \n{ \n\nfloat3 reta = tex2D(sampler_main, uv);\nret = reta;\n//ret = sqrt(ret)*1;\n//ret += GetBlur2(uv);\nret -= GetBlur1(uv)*0.5;\n\nret *= 2;\n\nfloat4 noise9 = tex3D(sampler_noisevol_hq, \n                      ((uv.xyy*q28\n                       )*texsize.xyy*texsize_noisevol_hq.zww\n                      ).xyz*\n                      float3(1,1,0)*0.05 + \n                      time*float3(0,0,1)*q31 \n                     );\nif(ret.x> q26*roam_cos.y && ret.x<= q23*roam_sin.x)ret.z -= (noise9).x*.5; \nif(ret.y> q25*roam_sin.x && ret.y<= q22*roam_cos.x)ret.x -= (noise9).y*.5; \nif(ret.z> q24*roam_cos.x && ret.z<= q21*roam_sin.y)ret.y -= (noise9).z*.5; \n}"}